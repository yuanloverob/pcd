{
  "cve_id": "CVE-2024-22231",
  "cve_desc": "Syndic cache directory creation is vulnerable to a directory traversal attack in salt project which can lead\u00a0a malicious attacker to create an arbitrary directory on a Salt master.",
  "repo": "saltstack/salt",
  "patch_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
  "patch_info": {
    "commit_hash": "e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "repo": "saltstack/salt",
    "commit_url": "https://github.com/saltstack/salt/commit/e0cdb80b55123f4a024759ffcf2b3f0e0788e7ab",
    "files": [
      "salt/fileserver/__init__.py",
      "salt/fileserver/roots.py",
      "salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py"
    ],
    "message": "CVE fix",
    "before_after_code_files": [
      "salt/fileserver/__init__.py||salt/fileserver/__init__.py",
      "salt/fileserver/roots.py||salt/fileserver/roots.py",
      "salt/master.py||salt/master.py",
      "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
      "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py",
      "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
      "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py"
    ]
  },
  "patch_diff": {
    "salt/fileserver/__init__.py||salt/fileserver/__init__.py": [
      "File: salt/fileserver/__init__.py -> salt/fileserver/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "568:         saltenv = salt.utils.stringutils.to_unicode(saltenv)",
      "569:         back = self.backends(back)",
      "570:         kwargs = {}",
      "576:         if salt.utils.url.is_escaped(path):",
      "577:             # don't attempt to find URL query arguments in the path",
      "578:             path = salt.utils.url.unescape(path)",
      "",
      "[Removed Lines]",
      "571:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "572:         if os.path.isabs(path):",
      "573:             return fnd",
      "574:         if \"../\" in path:",
      "575:             return fnd",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "588:                     args = comp.split(\"=\", 1)",
      "589:                     kwargs[args[0]] = args[1]",
      "591:         if \"env\" in kwargs:",
      "592:             # \"env\" is not supported; Use \"saltenv\".",
      "593:             kwargs.pop(\"env\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "586:         fnd = {\"path\": \"\", \"rel\": \"\"}",
      "587:         if os.path.isabs(path) or \"../\" in path:",
      "588:             return fnd",
      "",
      "---------------"
    ],
    "salt/fileserver/roots.py||salt/fileserver/roots.py": [
      "File: salt/fileserver/roots.py -> salt/fileserver/roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import salt.utils.path",
      "28: import salt.utils.platform",
      "29: import salt.utils.stringutils",
      "30: import salt.utils.versions",
      "32: log = logging.getLogger(__name__)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import salt.utils.verify",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:         if saltenv == \"__env__\":",
      "99:             root = root.replace(\"__env__\", actual_saltenv)",
      "100:         full = os.path.join(root, path)",
      "101:         if os.path.isfile(full) and not salt.fileserver.is_file_ignored(__opts__, full):",
      "102:             fnd[\"path\"] = full",
      "103:             fnd[\"rel\"] = path",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103:         # Refuse to serve file that is not under the root.",
      "104:         if not salt.utils.verify.clean_path(root, full, subdir=True):",
      "105:             continue",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "128:     ret[\"dest\"] = fnd[\"rel\"]",
      "129:     gzip = load.get(\"gzip\", None)",
      "130:     fpath = os.path.normpath(fnd[\"path\"])",
      "131:     with salt.utils.files.fopen(fpath, \"rb\") as fp_:",
      "132:         fp_.seek(load[\"loc\"])",
      "133:         data = fp_.read(__opts__[\"file_buffer_size\"])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "138:     actual_saltenv = saltenv = load[\"saltenv\"]",
      "139:     if saltenv not in __opts__[\"file_roots\"]:",
      "140:         if \"__env__\" in __opts__[\"file_roots\"]:",
      "141:             log.debug(",
      "142:                 \"salt environment '%s' maps to __env__ file_roots directory\", saltenv",
      "143:             )",
      "144:             saltenv = \"__env__\"",
      "145:         else:",
      "146:             return fnd",
      "147:     file_in_root = False",
      "148:     for root in __opts__[\"file_roots\"][saltenv]:",
      "149:         if saltenv == \"__env__\":",
      "150:             root = root.replace(\"__env__\", actual_saltenv)",
      "151:         # Refuse to serve file that is not under the root.",
      "152:         if salt.utils.verify.clean_path(root, fpath, subdir=True):",
      "153:             file_in_root = True",
      "154:     if not file_in_root:",
      "155:         return ret",
      "",
      "---------------"
    ],
    "salt/master.py||salt/master.py": [
      "File: salt/master.py -> salt/master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1036:         \"\"\"",
      "1037:         key = payload[\"enc\"]",
      "1038:         load = payload[\"load\"]",
      "1040:         raise salt.ext.tornado.gen.Return(ret)",
      "1042:     def _post_stats(self, start, cmd):",
      "",
      "[Removed Lines]",
      "1039:         ret = {\"aes\": self._handle_aes, \"clear\": self._handle_clear}[key](load)",
      "",
      "[Added Lines]",
      "1039:         if key == \"aes\":",
      "1040:             ret = self.handle_aes(load)",
      "1041:         else:",
      "1042:             ret = self.handle_clear(load)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1738:                 self.mminion.returners[fstr](load[\"jid\"], load[\"load\"])",
      "1740:             # Register the syndic",
      "1741:             syndic_cache_path = os.path.join(",
      "1742:                 self.opts[\"cachedir\"], \"syndics\", load[\"id\"]",
      "1743:             )",
      "1745:                 path_name = os.path.split(syndic_cache_path)[0]",
      "1746:                 if not os.path.exists(path_name):",
      "1747:                     os.makedirs(path_name)",
      "",
      "[Removed Lines]",
      "1744:             if not os.path.exists(syndic_cache_path):",
      "",
      "[Added Lines]",
      "1745:             # We are creating a path using user suplied input. Use the",
      "1746:             # clean_path to prevent a directory traversal.",
      "1747:             root = os.path.join(self.opts[\"cachedir\"], \"syndics\")",
      "1751:             if salt.utils.verify.clean_path(",
      "1752:                 root, syndic_cache_path",
      "1753:             ) and not os.path.exists(syndic_cache_path):",
      "",
      "---------------"
    ],
    "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
      "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:     return dirname",
      "56: @pytest.fixture",
      "57: def configure_loader_modules(tmp_state_tree, temp_salt_master):",
      "58:     opts = temp_salt_master.config.copy()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "56: @pytest.fixture(autouse=True)",
      "57: def testfilepath(tmp_state_tree, testfile):",
      "58:     return tmp_state_tree / testfile.name",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:     assert full_path_to_file == ret[\"path\"]",
      "79:     with patch.dict(roots.__opts__, {\"file_buffer_size\": 262144}):",
      "80:         load = {",
      "81:             \"saltenv\": \"base\",",
      "83:             \"loc\": 0,",
      "84:         }",
      "86:         ret = roots.serve_file(load, fnd)",
      "89:             data = fp_.read()",
      "91:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
      "",
      "[Removed Lines]",
      "78: def test_serve_file(testfile):",
      "82:             \"path\": str(testfile),",
      "85:         fnd = {\"path\": str(testfile), \"rel\": \"testfile\"}",
      "88:         with salt.utils.files.fopen(str(testfile), \"rb\") as fp_:",
      "",
      "[Added Lines]",
      "83: def test_serve_file(testfilepath):",
      "87:             \"path\": str(testfilepath),",
      "90:         fnd = {\"path\": str(testfilepath), \"rel\": \"testfile\"}",
      "93:         with salt.utils.files.fopen(str(testfilepath), \"rb\") as fp_:",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "236:     # between Python releases.",
      "237:     lines_written = sorted(mtime_map_mock.write_calls())",
      "238:     expected = sorted(",
      "240:         for key, val in new_mtime_map.items()",
      "241:     )",
      "242:     assert lines_written == expected, lines_written",
      "",
      "[Removed Lines]",
      "239:         salt.utils.stringutils.to_bytes(\"{key}:{val}\\n\".format(key=key, val=val))",
      "",
      "[Added Lines]",
      "244:         salt.utils.stringutils.to_bytes(f\"{key}:{val}\\n\")",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "277:         },",
      "278:         \"backend\": \"roots\",",
      "279:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "287: def test_find_file_not_in_root(tmp_state_tree):",
      "288:     \"\"\"",
      "289:     Fileroots should never 'find' a file that is outside of it's root.",
      "290:     \"\"\"",
      "291:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "292:     badfile.write_text(\"Bad file\")",
      "293:     badpath = f\"../bar\"",
      "294:     ret = roots.find_file(badpath)",
      "295:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "296:     badpath = f\"{tmp_state_tree / '..' / 'bar'}\"",
      "297:     ret = roots.find_file(badpath)",
      "298:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "301: def test_serve_file_not_in_root(tmp_state_tree):",
      "302:     \"\"\"",
      "303:     Fileroots should never 'serve' a file that is outside of it's root.",
      "304:     \"\"\"",
      "305:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
      "306:     badfile.write_text(\"Bad file\")",
      "307:     badpath = f\"../bar\"",
      "308:     load = {\"path\": \"salt://|..\\\\bar\", \"saltenv\": \"base\", \"loc\": 0}",
      "309:     fnd = {",
      "310:         \"path\": f\"{tmp_state_tree / '..' / 'bar'}\",",
      "311:         \"rel\": f\"{pathlib.Path('..') / 'bar'}\",",
      "312:     }",
      "313:     ret = roots.serve_file(load, fnd)",
      "314:     assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
      "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \"\"\"",
      "2: \"\"\"",
      "5: import datetime",
      "6: import os",
      "7: import time",
      "9: import salt.fileserver",
      "10: import salt.utils.files",
      "13: def test_diff_with_diffent_keys():",
      "14:     \"\"\"",
      "15:     Test that different maps are indeed reported different",
      "16:     \"\"\"",
      "17:     map1 = {\"file1\": 1234}",
      "18:     map2 = {\"file2\": 1234}",
      "19:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "22: def test_diff_with_diffent_values():",
      "23:     \"\"\"",
      "24:     Test that different maps are indeed reported different",
      "25:     \"\"\"",
      "26:     map1 = {\"file1\": 12345}",
      "27:     map2 = {\"file1\": 1234}",
      "28:     assert salt.fileserver.diff_mtime_map(map1, map2) is True",
      "31: def test_whitelist():",
      "32:     opts = {",
      "33:         \"fileserver_backend\": [\"roots\", \"git\", \"s3fs\", \"hgfs\", \"svn\"],",
      "34:         \"extension_modules\": \"\",",
      "35:     }",
      "36:     fs = salt.fileserver.Fileserver(opts)",
      "37:     assert sorted(fs.servers.whitelist) == sorted(",
      "38:         [\"git\", \"gitfs\", \"hg\", \"hgfs\", \"svn\", \"svnfs\", \"roots\", \"s3fs\"]",
      "39:     ), fs.servers.whitelist",
      "42: def test_future_file_list_cache_file_ignored(tmp_path):",
      "43:     opts = {",
      "44:         \"fileserver_backend\": [\"roots\"],",
      "45:         \"cachedir\": tmp_path,",
      "46:         \"extension_modules\": \"\",",
      "47:     }",
      "49:     back_cachedir = os.path.join(tmp_path, \"file_lists/roots\")",
      "50:     os.makedirs(os.path.join(back_cachedir))",
      "52:     # Touch a couple files",
      "53:     for filename in (\"base.p\", \"foo.txt\"):",
      "54:         with salt.utils.files.fopen(os.path.join(back_cachedir, filename), \"wb\") as _f:",
      "55:             if filename == \"base.p\":",
      "56:                 _f.write(b\"\\x80\")",
      "58:     # Set modification time to file list cache file to 1 year in the future",
      "59:     now = datetime.datetime.utcnow()",
      "60:     future = now + datetime.timedelta(days=365)",
      "61:     mod_time = time.mktime(future.timetuple())",
      "62:     os.utime(os.path.join(back_cachedir, \"base.p\"), (mod_time, mod_time))",
      "64:     list_cache = os.path.join(back_cachedir, \"base.p\")",
      "65:     w_lock = os.path.join(back_cachedir, \".base.w\")",
      "66:     ret = salt.fileserver.check_file_list_cache(opts, \"files\", list_cache, w_lock)",
      "67:     assert (",
      "68:         ret[1] is True",
      "69:     ), \"Cache file list cache file is not refreshed when future modification time\"",
      "72: def test_file_server_url_escape(tmp_path):",
      "73:     (tmp_path / \"srv\").mkdir()",
      "74:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "75:     (tmp_path / \"foo\").mkdir()",
      "76:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "77:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "78:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "79:     opts = {",
      "80:         \"fileserver_backend\": [\"roots\"],",
      "81:         \"extension_modules\": \"\",",
      "82:         \"optimization_order\": [",
      "83:             0,",
      "84:         ],",
      "85:         \"file_roots\": {",
      "86:             \"base\": [fileroot],",
      "87:         },",
      "88:         \"file_ignore_regex\": \"\",",
      "89:         \"file_ignore_glob\": \"\",",
      "90:     }",
      "91:     fs = salt.fileserver.Fileserver(opts)",
      "92:     ret = fs.find_file(",
      "93:         \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "94:         \"base\",",
      "95:     )",
      "96:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
      "99: def test_file_server_serve_url_escape(tmp_path):",
      "100:     (tmp_path / \"srv\").mkdir()",
      "101:     (tmp_path / \"srv\" / \"salt\").mkdir()",
      "102:     (tmp_path / \"foo\").mkdir()",
      "103:     (tmp_path / \"foo\" / \"bar\").write_text(\"Bad file\")",
      "104:     fileroot = str(tmp_path / \"srv\" / \"salt\")",
      "105:     badfile = str(tmp_path / \"foo\" / \"bar\")",
      "106:     opts = {",
      "107:         \"fileserver_backend\": [\"roots\"],",
      "108:         \"extension_modules\": \"\",",
      "109:         \"optimization_order\": [",
      "110:             0,",
      "111:         ],",
      "112:         \"file_roots\": {",
      "113:             \"base\": [fileroot],",
      "114:         },",
      "115:         \"file_ignore_regex\": \"\",",
      "116:         \"file_ignore_glob\": \"\",",
      "117:         \"file_buffer_size\": 2048,",
      "118:     }",
      "119:     fs = salt.fileserver.Fileserver(opts)",
      "120:     ret = fs.serve_file(",
      "121:         {",
      "122:             \"path\": \"salt://|..\\\\..\\\\..\\\\foo/bar\",",
      "123:             \"saltenv\": \"base\",",
      "124:             \"loc\": 0,",
      "125:         }",
      "126:     )",
      "127:     assert ret == {\"data\": \"\", \"dest\": \"\"}",
      "",
      "---------------"
    ],
    "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py": [
      "File: tests/pytests/unit/test_master.py -> tests/pytests/unit/test_master.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import time",
      "3: import pytest",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import pathlib",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:     with patch.object(encrypted_requests, \"_return\", autospec=True) as fake_return:",
      "161:         encrypted_requests._syndic_return(payload)",
      "162:         fake_return.assert_called_with(expected_return)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "166: def test_syndic_return_cache_dir_creation(encrypted_requests):",
      "167:     \"\"\"master's cachedir for a syndic will be created by AESFuncs._syndic_return method\"\"\"",
      "168:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "169:     assert not (cachedir / \"syndics\").exists()",
      "170:     encrypted_requests._syndic_return(",
      "171:         {",
      "172:             \"id\": \"mamajama\",",
      "173:             \"jid\": \"\",",
      "174:             \"return\": {},",
      "175:         }",
      "176:     )",
      "177:     assert (cachedir / \"syndics\").exists()",
      "178:     assert (cachedir / \"syndics\" / \"mamajama\").exists()",
      "181: def test_syndic_return_cache_dir_creation_traversal(encrypted_requests):",
      "182:     \"\"\"",
      "183:     master's  AESFuncs._syndic_return method cachdir creation is not vulnerable to a directory traversal",
      "184:     \"\"\"",
      "185:     cachedir = pathlib.Path(encrypted_requests.opts[\"cachedir\"])",
      "186:     assert not (cachedir / \"syndics\").exists()",
      "187:     encrypted_requests._syndic_return(",
      "188:         {",
      "189:             \"id\": \"../mamajama\",",
      "190:             \"jid\": \"\",",
      "191:             \"return\": {},",
      "192:         }",
      "193:     )",
      "194:     assert not (cachedir / \"syndics\").exists()",
      "195:     assert not (cachedir / \"mamajama\").exists()",
      "",
      "---------------"
    ],
    "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py": [
      "File: tests/unit/test_fileserver.py -> tests/unit/test_fileserver.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12cdb40981bae8d97ce149553e87f5deaa9fb63a",
      "candidate_info": {
        "commit_hash": "12cdb40981bae8d97ce149553e87f5deaa9fb63a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/12cdb40981bae8d97ce149553e87f5deaa9fb63a",
        "files": [
          "tools/pkg/repo/create.py"
        ],
        "message": "Fix Ubuntu 23.04 code name\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         },",
          "65:         \"23.04\": {",
          "66:             \"label\": \"salt_ubuntu2304\",",
          "68:         },",
          "69:     },",
          "70: }",
          "",
          "[Removed Lines]",
          "67:             \"codename\": \"mantic\",",
          "",
          "[Added Lines]",
          "67:             \"codename\": \"lunar\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4289b0f1b437714870930ef3f6fe11f1e3f561f",
      "candidate_info": {
        "commit_hash": "a4289b0f1b437714870930ef3f6fe11f1e3f561f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/a4289b0f1b437714870930ef3f6fe11f1e3f561f",
        "files": [
          "tools/vm.py"
        ],
        "message": "Make sure that the package artifacts are uploaded to VMs\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/vm.py||tools/vm.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/vm.py||tools/vm.py": [
          "File: tools/vm.py -> tools/vm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1315:             \"--include\",",
          "1316:             \"artifacts/salt\",",
          "1317:             \"--include\",",
          "1319:             # But we also want to exclude all other entries under artifacts/",
          "1320:             \"--exclude\",",
          "1321:             \"artifacts/*\",",
          "",
          "[Removed Lines]",
          "1318:             \"artifacts/pkg/*\",",
          "",
          "[Added Lines]",
          "1318:             \"artifacts/pkg\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9344f61ea038562e67cc696e00bb964de52fa6a2",
      "candidate_info": {
        "commit_hash": "9344f61ea038562e67cc696e00bb964de52fa6a2",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/9344f61ea038562e67cc696e00bb964de52fa6a2",
        "files": [
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py"
        ],
        "message": "Make sure the state tree files created have the right permissions\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: tests/pytests/pkg/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "336:             check=True,",
          "337:         )",
          "347:     with factory.started(start_timeout=start_timeout):",
          "348:         yield factory",
          "",
          "[Removed Lines]",
          "339:         # The engines_dirs is created in .nox path. We need to set correct perms",
          "340:         # for the user running the Salt Master",
          "341:         check_paths = [state_tree, pillar_tree, CODE_DIR / \".nox\"]",
          "342:         for path in check_paths:",
          "343:             if os.path.exists(path) is False:",
          "344:                 continue",
          "345:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(path)], check=False)",
          "",
          "[Added Lines]",
          "339:         if not platform.is_windows() and not platform.is_darwin():",
          "340:             # The engines_dirs is created in .nox path. We need to set correct perms",
          "341:             # for the user running the Salt Master",
          "342:             check_paths = [state_tree, pillar_tree, CODE_DIR / \".nox\"]",
          "343:             for path in check_paths:",
          "344:                 if os.path.exists(path) is False:",
          "345:                     continue",
          "346:                 subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(path)], check=False)",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import logging",
          "3: import pytest",
          "4: from saltfactories.utils.functional import MultiStateResult",
          "6: pytestmark = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: import subprocess",
          "5: from pytestskipmarkers.utils import platform",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:     with salt_master.state_tree.base.temp_file(",
          "74:         f\"{name}.sls\", CHECK_IMPORTS_SLS_CONTENTS",
          "75:     ):",
          "76:         yield name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:         if not platform.is_windows() and not platform.is_darwin():",
          "79:             subprocess.run(",
          "80:                 [",
          "81:                     \"chown\",",
          "82:                     \"-R\",",
          "83:                     \"salt:salt\",",
          "84:                     str(salt_master.state_tree.base.write_path),",
          "85:                 ],",
          "86:                 check=False,",
          "87:             )",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py": [
          "File: tests/pytests/pkg/integration/test_salt_call.py -> tests/pytests/pkg/integration/test_salt_call.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import pytest",
          "4: def test_salt_call_local(salt_call_cli):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import subprocess",
          "4: from pytestskipmarkers.utils import platform",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:           - name: foo",
          "29:     \"\"\"",
          "30:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "31:         yield name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:         if not platform.is_windows() and not platform.is_darwin():",
          "35:             subprocess.run(",
          "36:                 [",
          "37:                     \"chown\",",
          "38:                     \"-R\",",
          "39:                     \"salt:salt\",",
          "40:                     str(salt_master.state_tree.base.write_path),",
          "41:                 ],",
          "42:                 check=False,",
          "43:             )",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py": [
          "File: tests/pytests/pkg/integration/test_salt_pillar.py -> tests/pytests/pkg/integration/test_salt_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import pytest",
          "3: pytestmark = [",
          "4:     pytest.mark.skip_on_windows,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import subprocess",
          "4: from pytestskipmarkers.utils import platform",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:     with salt_master.pillar_tree.base.temp_file(",
          "20:         \"top.sls\", top_file_contents",
          "21:     ), salt_master.pillar_tree.base.temp_file(\"test.sls\", test_file_contents):",
          "22:         yield name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:         if not platform.is_windows() and not platform.is_darwin():",
          "26:             subprocess.run(",
          "27:                 [",
          "28:                     \"chown\",",
          "29:                     \"-R\",",
          "30:                     \"salt:salt\",",
          "31:                     str(salt_master.pillar_tree.base.write_path),",
          "32:                 ],",
          "33:                 check=False,",
          "34:             )",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py": [
          "File: tests/pytests/pkg/integration/test_salt_state_file.py -> tests/pytests/pkg/integration/test_salt_state_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import pytest",
          "5: pytestmark = [",
          "6:     pytest.mark.skip_on_windows,",
          "",
          "[Removed Lines]",
          "1: import sys",
          "",
          "[Added Lines]",
          "1: import subprocess",
          "4: from pytestskipmarkers.utils import platform",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: @pytest.fixture",
          "11: def state_name(salt_master):",
          "12:     name = \"some-state\"",
          "14:         sls_contents = \"\"\"",
          "15:     create_empty_file:",
          "16:       file.managed:",
          "",
          "[Removed Lines]",
          "13:     if sys.platform.startswith(\"win\"):",
          "",
          "[Added Lines]",
          "14:     if platform.is_windows():",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31:         - fullname: Salt Dude",
          "32:     \"\"\"",
          "33:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "34:         yield name",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:         if not platform.is_windows() and not platform.is_darwin():",
          "36:             subprocess.run(",
          "37:                 [",
          "38:                     \"chown\",",
          "39:                     \"-R\",",
          "40:                     \"salt:salt\",",
          "41:                     str(salt_master.state_tree.base.write_path),",
          "42:                 ],",
          "43:                 check=False,",
          "44:             )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4844ea8b4db87fa066baccb0c833a5851b51be93",
      "candidate_info": {
        "commit_hash": "4844ea8b4db87fa066baccb0c833a5851b51be93",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4844ea8b4db87fa066baccb0c833a5851b51be93",
        "files": [
          "changelog/565.security"
        ],
        "message": "Add changelogs for CVE-2024-22231 and CVE-2024-22232",
        "before_after_code_files": [
          "changelog/565.security||changelog/565.security"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "changelog/565.security||changelog/565.security": [
          "File: changelog/565.security -> changelog/565.security",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: CVE-2024-22231 Prevent directory traversal when creating syndic cache directory on the master",
          "2: CVE-2024-22232 Prevent diretory traversal attacks in the master's serve_file method.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e54d629b915f19ba87af3ce08d2597f169b8ad1",
      "candidate_info": {
        "commit_hash": "8e54d629b915f19ba87af3ce08d2597f169b8ad1",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/8e54d629b915f19ba87af3ce08d2597f169b8ad1",
        "files": [
          "noxfile.py"
        ],
        "message": "Exclude package tests from the `ci-test-onedir` target\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1056:     if onedir:",
          "1057:         env[\"ONEDIR_TESTRUN\"] = \"1\"",
          "1058:     chunks = {",
          "1059:         \"unit\": [",
          "1060:             \"tests/unit\",",
          "1061:             \"tests/pytests/unit\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1059:         \"pkg\": [",
          "1060:             \"tests/pytests/pkg\",",
          "1061:         ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1063:         \"functional\": [",
          "1064:             \"tests/pytests/functional\",",
          "1065:         ],",
          "1067:     }",
          "1069:     test_group_number = os.environ.get(\"TEST_GROUP\") or \"1\"",
          "",
          "[Removed Lines]",
          "1066:         \"scenarios\": [\"tests/pytests/scenarios\"],",
          "",
          "[Added Lines]",
          "1069:         \"scenarios\": [",
          "1070:             \"tests/pytests/scenarios\",",
          "1071:         ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e14219321bfedeb54d519d3b85ca9da7aadc55e9",
      "candidate_info": {
        "commit_hash": "e14219321bfedeb54d519d3b85ca9da7aadc55e9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/e14219321bfedeb54d519d3b85ca9da7aadc55e9",
        "files": [
          "changelog/65830.security.md",
          "requirements/static/ci/py3.10/cloud.txt",
          "requirements/static/ci/py3.10/darwin-crypto.txt",
          "requirements/static/ci/py3.10/darwin.txt",
          "requirements/static/ci/py3.10/docs.txt",
          "requirements/static/ci/py3.10/freebsd-crypto.txt",
          "requirements/static/ci/py3.10/freebsd.txt",
          "requirements/static/ci/py3.10/lint.txt",
          "requirements/static/ci/py3.10/linux-crypto.txt",
          "requirements/static/ci/py3.10/linux.txt",
          "requirements/static/ci/py3.10/windows-crypto.txt",
          "requirements/static/ci/py3.10/windows.txt",
          "requirements/static/ci/py3.11/cloud.txt",
          "requirements/static/ci/py3.11/darwin-crypto.txt",
          "requirements/static/ci/py3.11/darwin.txt",
          "requirements/static/ci/py3.11/docs.txt",
          "requirements/static/ci/py3.11/freebsd-crypto.txt",
          "requirements/static/ci/py3.11/freebsd.txt",
          "requirements/static/ci/py3.11/lint.txt",
          "requirements/static/ci/py3.11/linux-crypto.txt",
          "requirements/static/ci/py3.11/linux.txt",
          "requirements/static/ci/py3.11/windows-crypto.txt",
          "requirements/static/ci/py3.11/windows.txt",
          "requirements/static/ci/py3.12/cloud.txt",
          "requirements/static/ci/py3.12/darwin-crypto.txt",
          "requirements/static/ci/py3.12/darwin.txt",
          "requirements/static/ci/py3.12/docs.txt",
          "requirements/static/ci/py3.12/freebsd-crypto.txt",
          "requirements/static/ci/py3.12/freebsd.txt",
          "requirements/static/ci/py3.12/lint.txt",
          "requirements/static/ci/py3.12/linux-crypto.txt",
          "requirements/static/ci/py3.12/linux.txt",
          "requirements/static/ci/py3.12/windows-crypto.txt",
          "requirements/static/ci/py3.12/windows.txt",
          "requirements/static/ci/py3.7/cloud.txt",
          "requirements/static/ci/py3.7/docs.txt",
          "requirements/static/ci/py3.7/freebsd-crypto.txt",
          "requirements/static/ci/py3.7/freebsd.txt",
          "requirements/static/ci/py3.7/lint.txt",
          "requirements/static/ci/py3.7/linux-crypto.txt",
          "requirements/static/ci/py3.7/linux.txt",
          "requirements/static/ci/py3.7/windows-crypto.txt",
          "requirements/static/ci/py3.7/windows.txt",
          "requirements/static/ci/py3.8/cloud.txt",
          "requirements/static/ci/py3.8/docs.txt",
          "requirements/static/ci/py3.8/freebsd-crypto.txt",
          "requirements/static/ci/py3.8/freebsd.txt",
          "requirements/static/ci/py3.8/lint.txt",
          "requirements/static/ci/py3.8/linux-crypto.txt",
          "requirements/static/ci/py3.8/linux.txt",
          "requirements/static/ci/py3.8/windows-crypto.txt",
          "requirements/static/ci/py3.8/windows.txt",
          "requirements/static/ci/py3.9/cloud.txt",
          "requirements/static/ci/py3.9/darwin-crypto.txt",
          "requirements/static/ci/py3.9/darwin.txt",
          "requirements/static/ci/py3.9/docs.txt",
          "requirements/static/ci/py3.9/freebsd-crypto.txt",
          "requirements/static/ci/py3.9/freebsd.txt",
          "requirements/static/ci/py3.9/lint.txt",
          "requirements/static/ci/py3.9/linux-crypto.txt",
          "requirements/static/ci/py3.9/linux.txt",
          "requirements/static/ci/py3.9/windows-crypto.txt",
          "requirements/static/ci/py3.9/windows.txt",
          "requirements/static/pkg/py3.10/darwin.txt",
          "requirements/static/pkg/py3.10/freebsd.txt",
          "requirements/static/pkg/py3.10/linux.txt",
          "requirements/static/pkg/py3.10/windows.txt",
          "requirements/static/pkg/py3.11/darwin.txt",
          "requirements/static/pkg/py3.11/freebsd.txt",
          "requirements/static/pkg/py3.11/linux.txt",
          "requirements/static/pkg/py3.11/windows.txt",
          "requirements/static/pkg/py3.12/darwin.txt",
          "requirements/static/pkg/py3.12/freebsd.txt",
          "requirements/static/pkg/py3.12/linux.txt",
          "requirements/static/pkg/py3.12/windows.txt",
          "requirements/static/pkg/py3.7/freebsd.txt",
          "requirements/static/pkg/py3.7/linux.txt",
          "requirements/static/pkg/py3.7/windows.txt",
          "requirements/static/pkg/py3.8/freebsd.txt",
          "requirements/static/pkg/py3.8/linux.txt",
          "requirements/static/pkg/py3.8/windows.txt",
          "requirements/static/pkg/py3.9/darwin.txt",
          "requirements/static/pkg/py3.9/freebsd.txt",
          "requirements/static/pkg/py3.9/linux.txt",
          "requirements/static/pkg/py3.9/windows.txt"
        ],
        "message": "Bump to `pycryptodome==3.19.1` and `pycryptodomex==3.19.1` due to https://github.com/advisories/GHSA-j225-cvw7-qrx7\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "e7b7cf2272a647debed7bb4fa20496cab1606bf4",
      "candidate_info": {
        "commit_hash": "e7b7cf2272a647debed7bb4fa20496cab1606bf4",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/e7b7cf2272a647debed7bb4fa20496cab1606bf4",
        "files": [
          "tests/pytests/pkg/integration/test_salt_state_file.py"
        ],
        "message": "Simplify the state to run\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py": [
          "File: tests/pytests/pkg/integration/test_salt_state_file.py -> tests/pytests/pkg/integration/test_salt_state_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import subprocess",
          "3: import pytest",
          "4: from pytestskipmarkers.utils import platform",
          "11: @pytest.fixture",
          "13:     name = \"some-state\"",
          "17:       file.managed:",
          "33:     \"\"\"",
          "34:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "35:         if not platform.is_windows() and not platform.is_darwin():",
          "36:             subprocess.run(",
          "",
          "[Removed Lines]",
          "6: pytestmark = [",
          "7:     pytest.mark.skip_on_windows,",
          "8: ]",
          "12: def state_name(salt_master):",
          "14:     if platform.is_windows():",
          "15:         sls_contents = \"\"\"",
          "16:     create_empty_file:",
          "18:         - name: C://salt/test/txt",
          "19:     salt_dude:",
          "20:       user.present:",
          "21:         - name: dude",
          "22:         - fullname: Salt Dude",
          "23:     \"\"\"",
          "24:     else:",
          "25:         sls_contents = \"\"\"",
          "26:     update:",
          "27:       pkg.installed:",
          "28:         - name: bash",
          "29:     salt_dude:",
          "30:       user.present:",
          "31:         - name: dude",
          "32:         - fullname: Salt Dude",
          "",
          "[Added Lines]",
          "2: import types",
          "6: from saltfactories.utils.functional import MultiStateResult",
          "9: @pytest.fixture",
          "10: def files(tmp_path):",
          "11:     return types.SimpleNamespace(",
          "12:         fpath_1=tmp_path / \"fpath_1.txt\",",
          "13:         fpath_2=tmp_path / \"fpath_2.txt\",",
          "14:         fpath_3=tmp_path / \"fpath_3.txt\",",
          "15:     )",
          "19: def state_name(files, salt_master):",
          "21:     sls_contents = f\"\"\"",
          "22:     create-fpath-1-file:",
          "24:         - name: {files.fpath_1}",
          "26:     create-fpath-2-file:",
          "27:       file.managed:",
          "28:         - name: {files.fpath_2}",
          "30:     create-fpath-3-file:",
          "31:       file.managed:",
          "32:         - name: {files.fpath_3}",
          "34:     assert files.fpath_1.exists() is False",
          "35:     assert files.fpath_2.exists() is False",
          "36:     assert files.fpath_3.exists() is False",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:         yield name",
          "49:     \"\"\"",
          "50:     Test state file",
          "51:     \"\"\"",
          "52:     ret = salt_cli.run(\"state.apply\", state_name, minion_tgt=salt_minion.id)",
          "53:     assert ret.returncode == 0",
          "54:     assert ret.data",
          "55:     if ret.stdout and \"Minion did not return\" in ret.stdout:",
          "56:         pytest.skip(\"Skipping test, state took too long to apply\")",
          "",
          "[Removed Lines]",
          "48: def test_salt_state_file(salt_cli, salt_minion, state_name):",
          "57:     sls_ret = ret.data[next(iter(ret.data))]",
          "58:     assert \"changes\" in sls_ret",
          "59:     assert \"name\" in sls_ret",
          "",
          "[Added Lines]",
          "51: def test_salt_state_file(salt_cli, salt_minion, state_name, files):",
          "55:     assert files.fpath_1.exists() is False",
          "56:     assert files.fpath_2.exists() is False",
          "57:     assert files.fpath_3.exists() is False",
          "65:     for state_return in MultiStateResult(ret.data):",
          "66:         assert state_return.result is True",
          "68:     assert files.fpath_1.exists() is True",
          "69:     assert files.fpath_2.exists() is True",
          "70:     assert files.fpath_3.exists() is True",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
      "candidate_info": {
        "commit_hash": "f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f7ebfbc9460f60e82095e96a8296aa85f58e20b6",
        "files": [
          ".github/actions/build-onedir-salt/action.yml",
          ".github/actions/build-source-tarball/action.yml",
          ".github/actions/download-artifact/action.yml",
          ".github/actions/upload-artifact/action.yml",
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-docs.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/build-src-repo.yml.jinja",
          ".github/workflows/templates/build-windows-repo.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Switch to `actions/upload-artifact@v4` and `actions/download-artifact@v4`\n\nThere are breaking changes with this new version.\nSee https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja||.github/workflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja||.github/workflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/build-src-repo.yml.jinja||.github/workflows/templates/build-src-repo.yml.jinja",
          ".github/workflows/templates/build-windows-repo.yml.jinja||.github/workflows/templates/build-windows-repo.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja||.github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja": [
          "File: .github/workflows/templates/build-deb-repo.yml.jinja -> .github/workflows/templates/build-deb-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "32:       - name: Download DEB Packages",
          "34:         with:",
          "35:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch }}-deb",
          "36:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "33:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "33:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:       - name: Download Onedir Tarball as an Artifact",
          "81:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "83:         with:",
          "84:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "85:           path: artifacts/",
          "",
          "[Removed Lines]",
          "82:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "82:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:       - name: Download Onedir Tarball as an Artifact",
          "190:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "192:         with:",
          "193:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "194:           path: artifacts/",
          "",
          "[Removed Lines]",
          "191:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "191:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "280:       - name: Download Onedir Tarball as an Artifact",
          "281:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "283:         with:",
          "284:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "285:           path: artifacts/",
          "",
          "[Removed Lines]",
          "282:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "282:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-macos-repo.yml.jinja||.github/workflows/templates/build-macos-repo.yml.jinja": [
          "File: .github/workflows/templates/build-macos-repo.yml.jinja -> .github/workflows/templates/build-macos-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download macOS x86_64 Packages",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86_64-macos",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download macOS Arch64 Packages",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-arm64-macos",
          "32:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja": [
          "File: .github/workflows/templates/build-onedir-repo.yml.jinja -> .github/workflows/templates/build-onedir-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Linux x86_64 Onedir Archive",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-x86_64.tar.xz",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download Linux arm64 Onedir Archive",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-arm64.tar.xz",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Download macOS x86_64 Onedir Archive",
          "36:         with:",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-x86_64.tar.xz",
          "38:           path: artifacts/pkgs/incoming",
          "40:       - name: Download macOS arm64 Onedir Archive",
          "42:         with:",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-arm64.tar.xz",
          "44:           path: artifacts/pkgs/incoming",
          "46:       - name: Download Windows amd64 Onedir Archive",
          "48:         with:",
          "49:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-amd64.tar.xz",
          "50:           path: artifacts/pkgs/incoming",
          "52:       - name: Download Windows amd64 Onedir Archive(zip)",
          "54:         with:",
          "55:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-amd64.zip",
          "56:           path: artifacts/pkgs/incoming",
          "58:       - name: Download Windows x86 Onedir Archive",
          "60:         with:",
          "61:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-x86.tar.xz",
          "62:           path: artifacts/pkgs/incoming",
          "64:       - name: Download Windows amd64 Onedir Archive(zip)",
          "66:         with:",
          "67:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-windows-x86.zip",
          "68:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "35:         uses: actions/download-artifact@v3",
          "41:         uses: actions/download-artifact@v3",
          "47:         uses: actions/download-artifact@v3",
          "53:         uses: actions/download-artifact@v3",
          "59:         uses: actions/download-artifact@v3",
          "65:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "35:         uses: actions/download-artifact@v4",
          "41:         uses: actions/download-artifact@v4",
          "47:         uses: actions/download-artifact@v4",
          "53:         uses: actions/download-artifact@v4",
          "59:         uses: actions/download-artifact@v4",
          "65:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-rpm-repo.yml.jinja||.github/workflows/templates/build-rpm-repo.yml.jinja": [
          "File: .github/workflows/templates/build-rpm-repo.yml.jinja -> .github/workflows/templates/build-rpm-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "32:       - name: Download RPM Packages",
          "34:         with:",
          "35:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}-rpm",
          "36:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "33:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "33:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-src-repo.yml.jinja||.github/workflows/templates/build-src-repo.yml.jinja": [
          "File: .github/workflows/templates/build-src-repo.yml.jinja -> .github/workflows/templates/build-src-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Source Tarball",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.tar.gz",
          "26:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:           find artifacts/pkgs/repo -type f -print -exec cp {} artifacts/src \\;",
          "72:       - name: Upload Standalone Repository As An Artifact",
          "74:         with:",
          "75:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-src-repo",
          "76:           path: |",
          "",
          "[Removed Lines]",
          "73:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "73:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-windows-repo.yml.jinja||.github/workflows/templates/build-windows-repo.yml.jinja": [
          "File: .github/workflows/templates/build-windows-repo.yml.jinja -> .github/workflows/templates/build-windows-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "22:       - name: Download Windows NSIS x86 Packages",
          "24:         with:",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86-NSIS",
          "26:           path: artifacts/pkgs/incoming",
          "28:       - name: Download Windows MSI x86 Packages",
          "30:         with:",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-x86-MSI",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Download Windows NSIS amd64 Packages",
          "36:         with:",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-amd64-NSIS",
          "38:           path: artifacts/pkgs/incoming",
          "40:       - name: Download Windows MSI amd64 Packages",
          "42:         with:",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-amd64-MSI",
          "44:           path: artifacts/pkgs/incoming",
          "",
          "[Removed Lines]",
          "23:         uses: actions/download-artifact@v3",
          "29:         uses: actions/download-artifact@v3",
          "35:         uses: actions/download-artifact@v3",
          "41:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "23:         uses: actions/download-artifact@v4",
          "29:         uses: actions/download-artifact@v4",
          "35:         uses: actions/download-artifact@v4",
          "41:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .github/workflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:           git format-patch --keep-subject --binary --stdout HEAD^ > salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "169:       - name: Upload Changes Diff Artifact",
          "171:         if: ${{ startsWith(github.event.ref, 'refs/tags') == false }}",
          "172:         with:",
          "173:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "",
          "[Removed Lines]",
          "170:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "170:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "343:       - name: Get coverage reports",
          "344:         id: get-coverage-reports",
          "346:         with:",
          "347:           name: all-testrun-coverage-artifacts",
          "348:           path: artifacts/coverage/",
          "",
          "[Removed Lines]",
          "345:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "345:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "390:           nox --force-color -e create-html-coverage-report -- salt",
          "392:       - name: Upload Salt Code Coverage HTML Report",
          "394:         with:",
          "395:           name: code-coverage-salt-html-report",
          "396:           path: artifacts/coverage/html/salt",
          "",
          "[Removed Lines]",
          "393:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "393:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "406:           nox --force-color -e create-json-coverage-reports",
          "408:       - name: Upload Combined Code Coverage JSON Report",
          "410:         with:",
          "411:           name: code-coverage-full-json-report",
          "412:           path: artifacts/coverage/coverage.json",
          "",
          "[Removed Lines]",
          "409:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "409:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "418:           nox --force-color -e create-html-coverage-report",
          "420:       - name: Upload Combined Code Coverage HTML Report",
          "422:         with:",
          "423:           name: code-coverage-full-html-report",
          "424:           path: artifacts/coverage/html/full",
          "",
          "[Removed Lines]",
          "421:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "421:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "302:       - name: Upload testrun-changed-files.txt",
          "303:         if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}",
          "305:         with:",
          "306:           name: testrun-changed-files.txt",
          "307:           path: testrun-changed-files.txt",
          "",
          "[Removed Lines]",
          "304:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "304:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .github/workflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:           cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "172:       - name: Download Repository Artifact",
          "174:         with:",
          "175:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-repo",
          "176:           path: repo/",
          "",
          "[Removed Lines]",
          "173:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "173:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:           tools release download-onedir-artifact --platform=${{ matrix.platform }} --arch=${{ matrix.arch }} ${{ inputs.salt-version }}",
          "197:       - name: Upload Onedir Tarball as an Artifact",
          "199:         with:",
          "200:           name: salt-${{ inputs.salt-version }}-onedir-${{ matrix.platform }}-${{ matrix.arch }}.tar.xz",
          "201:           path: artifacts/salt-${{ inputs.salt-version }}-onedir-${{ matrix.platform }}-${{ matrix.arch }}.tar.xz*",
          "",
          "[Removed Lines]",
          "198:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "198:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "378:           tag: v${{ needs.prepare-workflow.outputs.salt-version }}",
          "380:       - name: Upload PyPi Artifacts",
          "382:         with:",
          "383:           name: pypi-artifacts",
          "384:           path: |",
          "",
          "[Removed Lines]",
          "381:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "381:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "470:           echo \"twine-password=$TWINE_PASSWORD\" >> \"${GITHUB_OUTPUT}\"",
          "472:       - name: Download PyPi Artifacts",
          "474:         with:",
          "475:           name: pypi-artifacts",
          "476:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "473:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "473:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/staging.yml.jinja||.github/workflows/templates/staging.yml.jinja": [
          "File: .github/workflows/templates/staging.yml.jinja -> .github/workflows/templates/staging.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:           cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "109:       - name: Download Release Patch",
          "111:         with:",
          "112:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch",
          "113:           path: artifacts/release",
          "115:       - name: Download Source Repository",
          "117:         with:",
          "118:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-src-repo",
          "119:           path: artifacts/release",
          "121:       - name: Download Release Documentation (HTML)",
          "123:         with:",
          "124:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-docs-html.tar.xz",
          "125:           path: artifacts/release",
          "127:       - name: Download Release Documentation (ePub)",
          "129:         with:",
          "130:           name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.epub",
          "131:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "110:         uses: actions/download-artifact@v3",
          "116:         uses: actions/download-artifact@v3",
          "122:         uses: actions/download-artifact@v3",
          "128:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "110:         uses: actions/download-artifact@v4",
          "116:         uses: actions/download-artifact@v4",
          "122:         uses: actions/download-artifact@v4",
          "128:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:       {#-",
          "139:       - name: Download Release Documentation (PDF)",
          "141:         with:",
          "142:           name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.pdf",
          "143:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "140:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "140:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:           tools release upload-artifacts ${{ needs.prepare-workflow.outputs.salt-version }} artifacts/release",
          "151:       - name: Upload PyPi Artifacts",
          "153:         with:",
          "154:           name: pypi-artifacts",
          "155:           path: |",
          "",
          "[Removed Lines]",
          "152:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "152:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "216:           echo \"twine-password=$TWINE_PASSWORD\" >> \"${GITHUB_OUTPUT}\"",
          "218:       - name: Download PyPi Artifacts",
          "220:         with:",
          "221:           name: pypi-artifacts",
          "222:           path: artifacts/release",
          "",
          "[Removed Lines]",
          "219:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "219:         uses: actions/download-artifact@v4",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:         uses: actions/checkout@v4",
          "84:       - name: Download Onedir Tarball as an Artifact",
          "86:         with:",
          "87:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "88:           path: artifacts/",
          "",
          "[Removed Lines]",
          "85:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "85:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:       - name: Upload Test Run Artifacts",
          "269:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "271:         with:",
          "272:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "273:           path: |",
          "",
          "[Removed Lines]",
          "270:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "270:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:         uses: actions/checkout@v4",
          "304:       - name: Download Onedir Tarball as an Artifact",
          "306:         with:",
          "307:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "308:           path: artifacts/",
          "",
          "[Removed Lines]",
          "305:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "305:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "474:       - name: Upload Test Run Artifacts",
          "475:         if: always()",
          "477:         with:",
          "478:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "479:           path: |",
          "",
          "[Removed Lines]",
          "476:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "476:         uses: actions/upload-artifact@v4",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "505:         uses: actions/checkout@v4",
          "507:       - name: Download Onedir Tarball as an Artifact",
          "509:         with:",
          "510:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "511:           path: artifacts/",
          "",
          "[Removed Lines]",
          "508:         uses: actions/download-artifact@v3",
          "",
          "[Added Lines]",
          "508:         uses: actions/download-artifact@v4",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "691:       - name: Upload Test Run Artifacts",
          "692:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "694:         with:",
          "695:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "696:           path: |",
          "",
          "[Removed Lines]",
          "693:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "693:         uses: actions/upload-artifact@v4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5303d2198a2dbd2aac59d390ed67418df1f58cb9",
      "candidate_info": {
        "commit_hash": "5303d2198a2dbd2aac59d390ed67418df1f58cb9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5303d2198a2dbd2aac59d390ed67418df1f58cb9",
        "files": [
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-package-downloads-action.yml"
        ],
        "message": "Fix artifact downloads when testing package downloads\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:       - name: Download Onedir Tarball as an Artifact",
          "87:         uses: actions/download-artifact@v4",
          "88:         with:",
          "90:           path: artifacts/",
          "92:       - name: Decompress Onedir Tarball",
          "",
          "[Removed Lines]",
          "89:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "89:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.xz",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         run: |",
          "95:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "96:           cd artifacts",
          "100:         uses: actions/download-artifact@v4",
          "101:         with:",
          "104:       - name: Setup Python Tools Scripts",
          "105:         uses: ./.github/actions/setup-python-tools-scripts",
          "",
          "[Removed Lines]",
          "97:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "99:       - name: Download nox.linux.${{ matrix.arch }}.tar.* artifact for session ${{ inputs.nox-session }}",
          "102:           name: nox-linux-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "",
          "[Added Lines]",
          "97:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.xz",
          "99:       - name: Download nox.linux.${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}.tar.* artifact for session ${{ inputs.nox-session }}",
          "102:           name: nox-linux-${{ matrix.arch == 'aarch64' && 'arm64' || matrix.arch }}-${{ inputs.nox-session }}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
      "candidate_info": {
        "commit_hash": "5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5ef5b5aa315f52a8ea58df56ed384d720c751f7b",
        "files": [
          "tests/pytests/pkg/integration/test_check_imports.py"
        ],
        "message": "Don't override the results.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: def run():",
          "20:     config = {}",
          "22:         'templates', 'platform', 'cli', 'executors', 'config', 'wheel', 'netapi',",
          "23:         'cache', 'proxy', 'transport', 'metaproxy', 'modules', 'tokens', 'matchers',",
          "24:         'acl', 'auth', 'log', 'engines', 'client', 'returners', 'runners', 'tops',",
          "",
          "[Removed Lines]",
          "21:     for test_import in [",
          "",
          "[Added Lines]",
          "21:     for module in [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         'beacons', 'pillar', 'spm', 'utils', 'sdb', 'fileserver', 'defaults',",
          "27:         'ext', 'queues', 'grains', 'serializers'",
          "28:     ]:",
          "29:         try:",
          "31:             importlib.import_module(import_name)",
          "33:                 'test.succeed_without_changes': [",
          "34:                     {",
          "38:             }",
          "39:         except ModuleNotFoundError as err:",
          "41:                 'test.fail_without_changes': [",
          "42:                     {",
          "47:             }",
          "50:         try:",
          "53:                 'test.succeed_without_changes': [",
          "54:                     {",
          "58:             }",
          "59:         except ModuleNotFoundError as err:",
          "61:                 'test.fail_without_changes': [",
          "62:                     {",
          "67:             }",
          "68:     return config",
          "69: \"\"\"",
          "",
          "[Removed Lines]",
          "30:             import_name = \"salt.{}\".format(test_import)",
          "32:             config['test_imports_succeeded'] = {",
          "35:                         'name': import_name",
          "36:                     },",
          "37:                 ],",
          "40:             config['test_imports_failed'] = {",
          "43:                         'name': import_name,",
          "44:                         'comment': \"The imports test failed. The error was: {}\".format(err)",
          "45:                     },",
          "46:                 ],",
          "49:     for stdlib_import in [\"telnetlib\"]:",
          "51:             importlib.import_module(stdlib_import)",
          "52:             config['stdlib_imports_succeeded'] = {",
          "55:                         'name': stdlib_import",
          "56:                     },",
          "57:                 ],",
          "60:             config['stdlib_imports_failed'] = {",
          "63:                         'name': stdlib_import,",
          "64:                         'comment': \"The stdlib imports test failed. The error was: {}\".format(err)",
          "65:                     },",
          "66:                 ],",
          "",
          "[Added Lines]",
          "29:         import_name = \"salt.{}\".format(module)",
          "32:             config[import_name] = {",
          "35:                         \"name\": import_name,",
          "36:                         'comment': \"The '{}' import succeeded.\".format(import_name)",
          "37:                     }",
          "38:                 ]",
          "41:             config[import_name] = {",
          "44:                         \"name\": import_name,",
          "45:                         'comment': \"The '{}' import failed. The error was: {}\".format(import_name, err)",
          "46:                     }",
          "47:                 ]",
          "50:     for import_name in [\"telnetlib\"]:",
          "52:             importlib.import_module(import_name)",
          "53:             config[import_name] = {",
          "56:                         \"name\": import_name,",
          "57:                         'comment': \"The '{}' import succeeded.\".format(import_name)",
          "58:                     }",
          "59:                 ]",
          "62:             config[import_name] = {",
          "65:                         \"name\": import_name,",
          "66:                         'comment': \"The '{}' import failed. The error was: {}\".format(import_name, err)",
          "67:                     }",
          "68:                 ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8facee4de9fda5ed26c6622acfad603a904bd90",
      "candidate_info": {
        "commit_hash": "d8facee4de9fda5ed26c6622acfad603a904bd90",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/d8facee4de9fda5ed26c6622acfad603a904bd90",
        "files": [
          ".pylintrc",
          "tests/pytests/unit/utils/test_aws.py"
        ],
        "message": "Fix and `AttributeError` on Windows\n\n```\nAttributeError: module 'signal' has no attribute 'SIGALRM'. Did you mean: 'SIGABRT'?\n```\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py": [
          "File: tests/pytests/unit/utils/test_aws.py -> tests/pytests/unit/utils/test_aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import pytest",
          "13: import requests",
          "15: import salt.utils.aws as aws",
          "16: from tests.support.helpers import patched_environ",
          "17: from tests.support.mock import MagicMock, patch",
          "19: pytestmark = [",
          "22:     pytest.mark.skip_on_windows,",
          "24: ]",
          "",
          "[Removed Lines]",
          "20:     # Skip testing on windows since it does not support signals",
          "21:     # which is what the timeout marker is using.",
          "23:     pytest.mark.timeout(60, method=\"signal\"),",
          "",
          "[Added Lines]",
          "14: from pytest_timeout import DEFAULT_METHOD",
          "21:     # Skip testing on windows since it does not support signal.SIGALRM",
          "22:     # which is what the timeout marker is using by default.",
          "24:     pytest.mark.timeout(60, method=DEFAULT_METHOD),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4371d34ee09971b681537736e6eb5129028ad177",
      "candidate_info": {
        "commit_hash": "4371d34ee09971b681537736e6eb5129028ad177",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4371d34ee09971b681537736e6eb5129028ad177",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Now the hashes will match, no more windows line breaks to mess it up\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-ci-deps.yml.jinja||.github/workflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-ci-deps.yml.jinja||.github/workflows/templates/build-ci-deps.yml.jinja": [
          "File: .github/workflows/templates/build-ci-deps.yml.jinja -> .github/workflows/templates/build-ci-deps.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "20:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "21:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:         required: true",
          "21:         type: string",
          "22:         description: The nox version to install",
          "23:       python-version:",
          "24:         required: false",
          "25:         type: string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:       nox-archive-hash:",
          "24:         required: true",
          "25:         type: string",
          "26:         description: Nox Tarball Cache Hash",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:         uses: actions/cache@v3.3.1",
          "72:         with:",
          "73:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "78:       - name: Download Onedir Tarball as an Artifact",
          "79:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "",
          "[Removed Lines]",
          "74:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "75:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "76:             }}",
          "",
          "[Added Lines]",
          "78:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182:         uses: actions/cache@v3.3.1",
          "183:         with:",
          "184:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "189:       - name: Download Onedir Tarball as an Artifact",
          "190:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "",
          "[Removed Lines]",
          "185:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "186:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "187:             }}",
          "",
          "[Added Lines]",
          "187:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "272:         uses: actions/cache@v3.3.1",
          "273:         with:",
          "274:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "279:       - name: Download Onedir Tarball as an Artifact",
          "280:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "",
          "[Removed Lines]",
          "275:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "276:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "277:             }}",
          "",
          "[Added Lines]",
          "275:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       latest-release: ${{ steps.get-salt-releases.outputs.latest-release }}",
          "97:       releases: ${{ steps.get-salt-releases.outputs.releases }}",
          "98:       testing-releases: ${{ steps.get-testing-releases.outputs.testing-releases }}",
          "99:     steps:",
          "100:       - uses: actions/checkout@v4",
          "101:         with:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:       nox-archive-hash: ${{ steps.nox-archive-hash.outputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212:         run: |",
          "213:           tools ci get-pr-test-labels --repository ${{ github.repository }}",
          "215:       <%- if prepare_actual_release %>",
          "217:       - name: Check Existing Releases",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:       - name: Get Hash For Nox Tarball Cache",
          "217:         id: nox-archive-hash",
          "218:         run: |",
          "219:           echo \"nox-archive-hash=${{ hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py') }}\" | tee -a \"$GITHUB_OUTPUT\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:       cache-seed: ${{ steps.set-cache-seed.outputs.cache-seed }}",
          "87:       latest-release: ${{ steps.get-salt-releases.outputs.latest-release }}",
          "88:       releases: ${{ steps.get-salt-releases.outputs.releases }}",
          "89:     steps:",
          "90:       - uses: actions/checkout@v4",
          "91:         with:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:       nox-archive-hash: ${{ steps.nox-archive-hash.outputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:         run: |",
          "145:           tools ci define-cache-seed ${{ env.CACHE_SEED }}",
          "147:   <%- endblock prepare_workflow_job %>",
          "148:   <%- endif %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:       - name: Get Hash For Nox Tarball Cache",
          "149:         id: nox-archive-hash",
          "150:         run: |",
          "151:           echo \"nox-archive-hash=${{ hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py') }}\" | tee -a \"$GITHUB_OUTPUT\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:         required: true",
          "24:         type: string",
          "25:         description: The nox version to install",
          "26:       python-version:",
          "27:         required: false",
          "28:         type: string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:       nox-archive-hash:",
          "27:         required: true",
          "28:         type: string",
          "29:         description: Nox Tarball Cache Hash",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:         uses: actions/cache@v3.3.1",
          "99:         with:",
          "100:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "104:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "105:           fail-on-cache-miss: true",
          "",
          "[Removed Lines]",
          "101:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "102:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "103:             }}",
          "",
          "[Added Lines]",
          "105:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "346:         uses: actions/cache@v3.3.1",
          "347:         with:",
          "348:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "352:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "353:           fail-on-cache-miss: true",
          "",
          "[Removed Lines]",
          "349:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "350:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "351:             }}",
          "",
          "[Added Lines]",
          "351:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "549:         uses: actions/cache@v3.3.1",
          "550:         with:",
          "551:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "555:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "556:           fail-on-cache-miss: true",
          "",
          "[Removed Lines]",
          "552:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "553:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "554:             }}",
          "",
          "[Added Lines]",
          "552:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja -> .github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "32:       skip-code-coverage: true",
          "33:       latest-release: \"${{ needs.prepare-workflow.outputs.latest-release }}\"",
          "34:     secrets: inherit",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .github/workflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "24:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "25:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "26:     <%- if fips == \"fips\" %>",
          "27:       fips: true",
          "28:     <%- endif %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "57:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "58:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "60:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "87:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "88:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "90:     <%- endfor %>",
          "91:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .github/workflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "29:       workflow-slug: <{ workflow_slug }>",
          "30:       default-timeout: <{ timeout_value }>",
          "32:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "57:       workflow-slug: <{ workflow_slug }>",
          "58:       default-timeout: <{ timeout_value }>",
          "60:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "84:       workflow-slug: <{ workflow_slug }>",
          "85:       default-timeout: <{ timeout_value }>",
          "86:     <%- if fips == \"fips\" %>",
          "87:       fips: true",
          "88:     <%- endif %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ff09f5e8d1ba1877be8a65710fc5907a6f8341a",
      "candidate_info": {
        "commit_hash": "2ff09f5e8d1ba1877be8a65710fc5907a6f8341a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/2ff09f5e8d1ba1877be8a65710fc5907a6f8341a",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Some steps need to be kept at `actions/upload-artifact@v3`\n\nThis is because we upload multiple artifacts under the same name something that ``actions/upload-artifact@v4`` does not do.\n\nThere are breaking changes with this new version.\nSee https://github.blog/changelog/2023-12-14-github-actions-artifacts-v4-is-now-generally-available/\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .githuworkflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:       - name: Get coverage reports",
          "344:         id: get-coverage-reports",
          "346:         with:",
          "347:           name: all-testrun-coverage-artifacts",
          "348:           path: artifacts/coverage/",
          "",
          "[Removed Lines]",
          "345:         uses: actions/download-artifact@v4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:       - name: Upload Test Run Artifacts",
          "269:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "271:         with:",
          "272:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "273:           path: |",
          "",
          "[Removed Lines]",
          "270:         uses: actions/upload-artifact@v4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "474:       - name: Upload Test Run Artifacts",
          "475:         if: always()",
          "477:         with:",
          "478:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "479:           path: |",
          "",
          "[Removed Lines]",
          "476:         uses: actions/upload-artifact@v4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "691:       - name: Upload Test Run Artifacts",
          "692:         if: always() && steps.download-artifacts-from-vm.outcome == 'success'",
          "694:         with:",
          "695:           name: pkg-testrun-artifacts-${{ matrix.distro-slug }}-${{ matrix.arch }}",
          "696:           path: |",
          "",
          "[Removed Lines]",
          "693:         uses: actions/upload-artifact@v4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aae627286d0e395463c317e56e6691764bf06ca4",
      "candidate_info": {
        "commit_hash": "aae627286d0e395463c317e56e6691764bf06ca4",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/aae627286d0e395463c317e56e6691764bf06ca4",
        "files": [
          "noxfile.py"
        ],
        "message": "Don't rerun the packages tests on failures by default\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1905:     try:",
          "1906:         _pytest(session, coverage=False, cmd_args=pytest_args, env=env)",
          "1907:     except CommandFailed:",
          "1909:         # Don't print the system information, not the test selection on reruns",
          "1910:         global PRINT_TEST_SELECTION",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1908:         if os.environ.get(\"RERUN_FAILURES\", \"0\") == \"0\":",
          "1909:             # Don't rerun on failures",
          "1910:             return",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f74d428e15d4332c21b693cc37215ecbaacffa3",
      "candidate_info": {
        "commit_hash": "3f74d428e15d4332c21b693cc37215ecbaacffa3",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/3f74d428e15d4332c21b693cc37215ecbaacffa3",
        "files": [
          "requirements/static/ci/py3.10/tools-virustotal.txt",
          "requirements/static/ci/py3.10/tools.txt",
          "requirements/static/ci/py3.11/tools-virustotal.txt",
          "requirements/static/ci/py3.11/tools.txt",
          "requirements/static/ci/py3.12/tools-virustotal.txt",
          "requirements/static/ci/py3.12/tools.txt",
          "requirements/static/ci/py3.9/tools-virustotal.txt",
          "requirements/static/ci/py3.9/tools.txt",
          "requirements/static/ci/tools-virustotal.in",
          "requirements/static/ci/tools.in",
          "salt/version.py",
          "tools/__init__.py",
          "tools/precommit/docstrings.py"
        ],
        "message": "Stop importing salt in `tools/`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "requirements/static/ci/tools-virustotal.in||requirements/static/ci/tools-virustotal.in",
          "requirements/static/ci/tools.in||requirements/static/ci/tools.in",
          "salt/version.py||salt/version.py",
          "tools/__init__.py||tools/__init__.py",
          "tools/precommit/docstrings.py||tools/precommit/docstrings.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "requirements/static/ci/tools-virustotal.in||requirements/static/ci/tools-virustotal.in": [
          "File: requirements/static/ci/tools-virustotal.in -> requirements/static/ci/tools-virustotal.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: virustotal3",
          "",
          "[Removed Lines]",
          "1: --constraint=../pkg/py{py_version}/{platform}.txt",
          "",
          "[Added Lines]",
          "1: --constraint=../ci/py{py_version}/tools.txt",
          "",
          "---------------"
        ],
        "requirements/static/ci/tools.in||requirements/static/ci/tools.in": [
          "File: requirements/static/ci/tools.in -> requirements/static/ci/tools.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: attrs",
          "4: python-tools-scripts >= 0.18.6",
          "5: boto3",
          "",
          "[Removed Lines]",
          "1: --constraint=../pkg/py{py_version}/{platform}.txt",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/version.py||salt/version.py": [
          "File: salt/version.py -> salt/version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "927:     parser.add_argument(",
          "928:         \"--next-release\", help=\"Return the next release\", action=\"store_true\"",
          "929:     )",
          "930:     # When pip installing we pass in other args to this script.",
          "931:     # This allows us to catch those args but not use them",
          "932:     parser.add_argument(\"unknown\", nargs=argparse.REMAINDER)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "930:     parser.add_argument(\"--parse\", help=\"Parse the passed string as a salt version\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "937:     args = _parser()",
          "938:     if args.next_release:",
          "939:         print(__saltstack_version__.next_release())",
          "940:     else:",
          "941:         print(__version__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "941:     elif args.parse:",
          "942:         try:",
          "943:             print(SaltStackVersion.parse(args.parse))",
          "944:         except Exception as exc:  # pylint: disable=broad-except",
          "945:             print(f\"Failed to parse '{args.parse}' as a salt version: {exc}\")",
          "946:             sys.exit(1)",
          "",
          "---------------"
        ],
        "tools/__init__.py||tools/__init__.py": [
          "File: tools/__init__.py -> tools/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: CI_REQUIREMENTS_FILES_PATH = (",
          "13:     STATIC_REQUIREMENTS_PATH / \"ci\" / \"py{}.{}\".format(*sys.version_info)",
          "14: )",
          "18: DEFAULT_REQS_CONFIG = DefaultRequirementsConfig(",
          "19:     pip_args=[",
          "20:         f\"--constraint={REQUIREMENTS_FILES_PATH / 'constraints.txt'}\",",
          "22:     ],",
          "23:     requirements_files=[",
          "25:         CI_REQUIREMENTS_FILES_PATH / \"tools.txt\",",
          "26:     ],",
          "27: )",
          "28: RELEASE_VENV_CONFIG = VirtualEnvConfig(",
          "32:     pip_args=[",
          "33:         f\"--constraint={REQUIREMENTS_FILES_PATH / 'constraints.txt'}\",",
          "35:     ],",
          "36:     requirements_files=[",
          "37:         CI_REQUIREMENTS_FILES_PATH / \"tools-virustotal.txt\",",
          "",
          "[Removed Lines]",
          "15: PKG_REQUIREMENTS_FILES_PATH = (",
          "16:     STATIC_REQUIREMENTS_PATH / \"pkg\" / \"py{}.{}\".format(*sys.version_info)",
          "17: )",
          "21:         f\"--constraint={PKG_REQUIREMENTS_FILES_PATH / 'linux.txt'}\",",
          "24:         REQUIREMENTS_FILES_PATH / \"base.txt\",",
          "29:     env={",
          "30:         \"PIP_CONSTRAINT\": str(REQUIREMENTS_FILES_PATH / \"constraints.txt\"),",
          "31:     },",
          "34:         f\"--constraint={PKG_REQUIREMENTS_FILES_PATH / 'linux.txt'}\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/precommit/docstrings.py||tools/precommit/docstrings.py": [
          "File: tools/precommit/docstrings.py -> tools/precommit/docstrings.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import os",
          "11: import pathlib",
          "12: import re",
          "13: from typing import TYPE_CHECKING",
          "15: from ptscripts import Context, command_group",
          "17: import tools.utils",
          "19: from tools.precommit import SALT_INTERNAL_LOADERS_PATHS",
          "21: SALT_CODE_DIR = tools.utils.REPO_ROOT / \"salt\"",
          "",
          "[Removed Lines]",
          "18: from salt.version import SaltStackVersion",
          "",
          "[Added Lines]",
          "13: import subprocess",
          "14: import sys",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1088:         versions = [vs.strip() for vs in version.split(\",\")]",
          "1089:         bad_versions = []",
          "1090:         for vs in versions:",
          "1094:                 bad_versions.append(vs)",
          "1095:         if bad_versions:",
          "1096:             return vtype, \", \".join(bad_versions)",
          "",
          "[Removed Lines]",
          "1091:             try:",
          "1092:                 SaltStackVersion.parse(vs)",
          "1093:             except ValueError:",
          "",
          "[Added Lines]",
          "1092:             ret = subprocess.run(",
          "1093:                 [sys.executable, str(SALT_CODE_DIR / \"version.py\"), vs], check=False",
          "1094:             )",
          "1095:             if ret.returncode:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85584237ecef7574258ffd5a9ed7ffa1fbe3ea66",
      "candidate_info": {
        "commit_hash": "85584237ecef7574258ffd5a9ed7ffa1fbe3ea66",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/85584237ecef7574258ffd5a9ed7ffa1fbe3ea66",
        "files": [
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml"
        ],
        "message": "Packages should not be uploaded as test run artifacts\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "64024c52f8a12f10e1a64a82a0f60f6ea2d47d52",
      "candidate_info": {
        "commit_hash": "64024c52f8a12f10e1a64a82a0f60f6ea2d47d52",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/64024c52f8a12f10e1a64a82a0f60f6ea2d47d52",
        "files": [
          "tools/pkg/repo/create.py"
        ],
        "message": "Allow creating the packages repository for Ubuntu 23.04\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:             \"label\": \"salt_ubuntu2204\",",
          "63:             \"codename\": \"jammy\",",
          "64:         },",
          "65:     },",
          "66: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:         \"23.04\": {",
          "66:             \"label\": \"salt_ubuntu2304\",",
          "67:             \"codename\": \"mantic\",",
          "68:         },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "114515c66c92f257a979f3d79cfe3ddfb60949e1",
      "candidate_info": {
        "commit_hash": "114515c66c92f257a979f3d79cfe3ddfb60949e1",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/114515c66c92f257a979f3d79cfe3ddfb60949e1",
        "files": [
          "tools/ci.py"
        ],
        "message": "In case of failures to upload to codecov, show it's output\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/ci.py||tools/ci.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/ci.py||tools/ci.py": [
          "File: tools/ci.py -> tools/ci.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1227:                 break",
          "1229:             if current_attempt >= max_attempts:",
          "1231:                 ctx.exit(1)",
          "1233:             ctx.warn(f\"Waiting {sleep_time} seconds until next retry...\")",
          "",
          "[Removed Lines]",
          "1230:                 ctx.error(f\"Failed to upload {fpath} to codecov\")",
          "",
          "[Added Lines]",
          "1230:                 ctx.error(f\"Failed to upload {fpath} to codecov:\")",
          "1231:                 ctx.console_stdout.print(stdout)",
          "1232:                 ctx.console.print(stderr)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2025b4e33b1ec36bcd9360a0272d199d7f86f0a4",
      "candidate_info": {
        "commit_hash": "2025b4e33b1ec36bcd9360a0272d199d7f86f0a4",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/2025b4e33b1ec36bcd9360a0272d199d7f86f0a4",
        "files": [
          "tests/support/pkg.py"
        ],
        "message": "Fail early when failing to extract the version from the packages\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/support/pkg.py||tests/support/pkg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/support/pkg.py||tests/support/pkg.py": [
          "File: tests/support/pkg.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:         The version of the local salt artifacts being tested, based on regex matching",
          "198:         \"\"\"",
          "199:         version = \"\"",
          "201:             version = re.search(",
          "202:                 r\"([0-9].*)(\\-[0-9].fc|\\-[0-9].el|\\+ds|\\_all|\\_any|\\_amd64|\\_arm64|\\-[0-9].am|(\\-[0-9]-[a-z]*-[a-z]*[0-9_]*.|\\-[0-9]*.*)(exe|msi|pkg|rpm|deb))\",",
          "203:                 artifact.name,",
          "",
          "[Removed Lines]",
          "200:         for artifact in ARTIFACTS_DIR.glob(\"**/*.*\"):",
          "",
          "[Added Lines]",
          "200:         artifacts = list(ARTIFACTS_DIR.glob(\"**/*.*\"))",
          "201:         for artifact in artifacts:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "206:                 version = version.groups()[0].replace(\"_\", \"-\").replace(\"~\", \"\")",
          "207:                 version = version.split(\"-\")[0]",
          "208:                 break",
          "209:         return version",
          "211:     def update_process_path(self):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:         if not version:",
          "211:             pytest.fail(",
          "212:                 f\"Failed to package artifacts in '{ARTIFACTS_DIR}'. \"",
          "213:                 f\"Directory Contents:\\n{pprint.pformat(artifacts)}\"",
          "214:             )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ede09ef43ef65e0e5cb00aad3312f97d6dc034b9",
      "candidate_info": {
        "commit_hash": "ede09ef43ef65e0e5cb00aad3312f97d6dc034b9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/ede09ef43ef65e0e5cb00aad3312f97d6dc034b9",
        "files": [
          "doc/topics/releases/3005.5.rst"
        ],
        "message": "Fix pre-commit",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "f89ef9204fe91b2dafbab2f6a15516302b9fec53",
      "candidate_info": {
        "commit_hash": "f89ef9204fe91b2dafbab2f6a15516302b9fec53",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f89ef9204fe91b2dafbab2f6a15516302b9fec53",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml",
          "tools/vm.py"
        ],
        "message": "Be sure to raise the `RuntimeError`'s in the CI context\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja",
          "tools/vm.py||tools/vm.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/",
          "44:   PIP_EXTRA_INDEX_URL: https://pypi.org/simple",
          "45:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "47: jobs:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:   RAISE_DEPRECATIONS_RUNTIME_ERRORS: \"1\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   CACHE_SEED: SEED-7  # Bump the number to invalidate all caches",
          "38:   RELENV_DATA: \"${{ github.workspace }}/.relenv\"",
          "39:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "41: <%- endblock env %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   RAISE_DEPRECATIONS_RUNTIME_ERRORS: \"1\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:   PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/",
          "52:   PIP_EXTRA_INDEX_URL: https://pypi.org/simple",
          "53:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "55: jobs:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:   RAISE_DEPRECATIONS_RUNTIME_ERRORS: \"1\"",
          "",
          "---------------"
        ],
        "tools/vm.py||tools/vm.py": [
          "File: tools/vm.py -> tools/vm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1438:         env[\"PYTHONUTF8\"] = \"1\"",
          "1439:         env[\"OUTPUT_COLUMNS\"] = str(self.ctx.console.width)",
          "1440:         env[\"GITHUB_ACTIONS_PIPELINE\"] = \"1\"",
          "1441:         self.write_and_upload_dot_env(env)",
          "1442:         if self.is_windows is False and self.config.ssh_username != \"root\":",
          "1443:             sudo = True",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1441:         env[\"RAISE_DEPRECATIONS_RUNTIME_ERRORS\"] = \"1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "700efa613350d87461b08d993368868d4b74fdcf",
      "candidate_info": {
        "commit_hash": "700efa613350d87461b08d993368868d4b74fdcf",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/700efa613350d87461b08d993368868d4b74fdcf",
        "files": [
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py"
        ],
        "message": "update photon paths to use their $releasever string string which includes .0",
        "before_after_code_files": [
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256: ):",
          "257:     arch = os.environ.get(\"SALT_REPO_ARCH\") or \"x86_64\"",
          "259:     if repo_subpath == \"minor\":",
          "260:         repo_url_base = (",
          "261:             f\"{root_url}/{os_name}/{os_version}/{arch}/{repo_subpath}/{salt_release}\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:     if os_name == \"photon\":",
          "260:         os_version = f\"{os_version}.0\"",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:         assert incoming is not None",
          "381:         assert repo_path is not None",
          "382:         assert key_id is not None",
          "383:     display_name = f\"{distro.capitalize()} {distro_version}\"",
          "384:     if distro_version not in _rpm_distro_info[distro]:",
          "385:         ctx.error(f\"Support for {display_name} is missing.\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "384:     if distro == \"photon\":",
          "385:         distro_version = f\"{distro_version}.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6dd56114f736915dc4567a42cc2d39f0ac713f51",
      "candidate_info": {
        "commit_hash": "6dd56114f736915dc4567a42cc2d39f0ac713f51",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/6dd56114f736915dc4567a42cc2d39f0ac713f51",
        "files": [
          ".github/workflows/build-packages.yml"
        ],
        "message": "Fix build RPM repository\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "59a045b3af4ba965caca41c53574bf7a893fda2c",
      "candidate_info": {
        "commit_hash": "59a045b3af4ba965caca41c53574bf7a893fda2c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/59a045b3af4ba965caca41c53574bf7a893fda2c",
        "files": [
          "tests/pytests/pkg/support/helpers.py"
        ],
        "message": "Address some lint issues\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/support/helpers.py||tests/pytests/pkg/support/helpers.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/support/helpers.py||tests/pytests/pkg/support/helpers.py": [
          "File: tests/pytests/pkg/support/helpers.py -> tests/pytests/pkg/support/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "927: class PkgSystemdSaltDaemonImpl(SystemdSaltDaemonImpl):",
          "928:     def get_service_name(self):",
          "929:         if self._service_name is None:",
          "930:             self._service_name = self.factory.script_name",
          "931:         return self._service_name",
          "934: @attr.s(kw_only=True)",
          "935: class PkgLaunchdSaltDaemonImpl(PkgSystemdSaltDaemonImpl):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "928:     # pylint: disable=access-member-before-definition",
          "934:     # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1008:         # We completely override the parent class method because we're not using",
          "1009:         # the self._terminal property, it's a launchd service",
          "1010:         if self._process is None:  # pragma: no cover",
          "1011:             if TYPE_CHECKING:",
          "1012:                 # Make mypy happy",
          "1013:                 assert self._terminal_result",
          "1018:         atexit.unregister(self.terminate)",
          "1019:         log.info(\"Stopping %s\", self.factory)",
          "",
          "[Removed Lines]",
          "1014:             return (",
          "1015:                 self._terminal_result",
          "1016:             )  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1014:             # pylint: disable=access-member-before-definition",
          "1018:             return self._terminal_result",
          "1019:             # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1021:         # Collect any child processes information before terminating the process",
          "1022:         with contextlib.suppress(psutil.NoSuchProcess):",
          "1023:             for child in psutil.Process(pid).children(recursive=True):",
          "1031:         if self._process.is_running():  # pragma: no cover",
          "1032:             cmdline = _get_cmdline(self._process)",
          "",
          "[Removed Lines]",
          "1024:                 if (",
          "1025:                     child not in self._children",
          "1026:                 ):  # pylint: disable=access-member-before-definition",
          "1027:                     self._children.append(",
          "1028:                         child",
          "1029:                     )  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1027:                 # pylint: disable=access-member-before-definition",
          "1028:                 if child not in self._children:",
          "1029:                     self._children.append(child)",
          "1030:                 # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1065:             slow_stop=self.factory.slow_stop,",
          "1066:         )",
          "1068:         if self._terminal_stdout is not None:",
          "1070:         if self._terminal_stderr is not None:",
          "1072:         stdout = stderr = \"\"",
          "1073:         try:",
          "1074:             self._terminal_result = ProcessResult(",
          "",
          "[Removed Lines]",
          "1069:             self._terminal_stdout.close()  # pylint: disable=access-member-before-definition",
          "1071:             self._terminal_stderr.close()  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1069:         # pylint: disable=access-member-before-definition",
          "1071:             self._terminal_stdout.close()",
          "1073:             self._terminal_stderr.close()",
          "1074:         # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1143:         # We completely override the parent class method because we're not using the",
          "1144:         # self._terminal property, it's a systemd service",
          "1145:         if self._process is None:  # pragma: no cover",
          "1146:             if TYPE_CHECKING:",
          "1147:                 # Make mypy happy",
          "1148:                 assert self._terminal_result",
          "1153:         atexit.unregister(self.terminate)",
          "1154:         log.info(\"Stopping %s\", self.factory)",
          "",
          "[Removed Lines]",
          "1149:             return (",
          "1150:                 self._terminal_result",
          "1151:             )  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1149:             # pylint: disable=access-member-before-definition",
          "1153:             return self._terminal_result",
          "1154:             # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1156:         # Collect any child processes information before terminating the process",
          "1157:         with contextlib.suppress(psutil.NoSuchProcess):",
          "1158:             for child in psutil.Process(pid).children(recursive=True):",
          "1166:         if self._process.is_running():  # pragma: no cover",
          "1167:             cmdline = _get_cmdline(self._process)",
          "",
          "[Removed Lines]",
          "1159:                 if (",
          "1160:                     child not in self._children",
          "1161:                 ):  # pylint: disable=access-member-before-definition",
          "1162:                     self._children.append(",
          "1163:                         child",
          "1164:                     )  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1162:                 # pylint: disable=access-member-before-definition",
          "1163:                 if child not in self._children:",
          "1164:                     self._children.append(child)",
          "1165:                 # pylint: enable=access-member-before-definition",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1201:             slow_stop=self.factory.slow_stop,",
          "1202:         )",
          "1204:         if self._terminal_stdout is not None:",
          "1206:         if self._terminal_stderr is not None:",
          "1208:         stdout = stderr = \"\"",
          "1209:         try:",
          "1210:             self._terminal_result = ProcessResult(",
          "",
          "[Removed Lines]",
          "1205:             self._terminal_stdout.close()  # pylint: disable=access-member-before-definition",
          "1207:             self._terminal_stderr.close()  # pylint: disable=access-member-before-definition",
          "",
          "[Added Lines]",
          "1205:         # pylint: disable=access-member-before-definition",
          "1207:             self._terminal_stdout.close()",
          "1209:             self._terminal_stderr.close()",
          "1210:         # pylint: enable=access-member-before-definition",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "828ce69b80d9c3fe4589f353c2c36a6f8e6ae74e",
      "candidate_info": {
        "commit_hash": "828ce69b80d9c3fe4589f353c2c36a6f8e6ae74e",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/828ce69b80d9c3fe4589f353c2c36a6f8e6ae74e",
        "files": [
          "tests/pytests/integration/netapi/rest_tornado/conftest.py"
        ],
        "message": "Destroy event_listener when app is no-longer used",
        "before_after_code_files": [
          "tests/pytests/integration/netapi/rest_tornado/conftest.py||tests/pytests/integration/netapi/rest_tornado/conftest.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/netapi/rest_tornado/conftest.py||tests/pytests/integration/netapi/rest_tornado/conftest.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/conftest.py -> tests/pytests/integration/netapi/rest_tornado/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: @pytest.fixture",
          "20: def app(app_urls, load_auth, client_config, minion_config, salt_sub_minion):",
          "22:         app_urls, load_auth, client_config, minion_config, setup_event_listener=True",
          "23:     )",
          "26: @pytest.fixture",
          "",
          "[Removed Lines]",
          "21:     return netapi.build_tornado_app(",
          "",
          "[Added Lines]",
          "21:     app = netapi.build_tornado_app(",
          "24:     try:",
          "25:         yield app",
          "26:     finally:",
          "27:         app.event_listener.destroy()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d5958d9e51bf9c0ba3d7099882f295c2f0b11b9",
      "candidate_info": {
        "commit_hash": "6d5958d9e51bf9c0ba3d7099882f295c2f0b11b9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/6d5958d9e51bf9c0ba3d7099882f295c2f0b11b9",
        "files": [
          "tests/pytests/unit/crypt/__init__.py",
          "tests/pytests/unit/crypt/test_crypt.py",
          "tests/pytests/unit/crypt/test_crypt_cryptodome.py",
          "tests/pytests/unit/crypt/test_crypt_m2crypto.py",
          "tests/pytests/unit/test_crypt.py",
          "tests/unit/test_crypt.py"
        ],
        "message": "Migrate some crypt tests to pytest\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/unit/crypt/__init__.py||tests/pytests/unit/crypt/__init__.py",
          "tests/pytests/unit/crypt/test_crypt_cryptodome.py||tests/pytests/unit/crypt/test_crypt_cryptodome.py",
          "tests/pytests/unit/crypt/test_crypt_m2crypto.py||tests/pytests/unit/crypt/test_crypt_m2crypto.py",
          "tests/unit/test_crypt.py||tests/unit/test_crypt.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/crypt/__init__.py||tests/pytests/unit/crypt/__init__.py": [
          "File: tests/pytests/unit/crypt/__init__.py -> tests/pytests/unit/crypt/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: PRIVKEY_DATA = (",
          "2:     \"-----BEGIN RSA PRIVATE KEY-----\\n\"",
          "3:     \"MIIEpAIBAAKCAQEA75GR6ZTv5JOv90Vq8tKhKC7YQnhDIo2hM0HVziTEk5R4UQBW\\n\"",
          "4:     \"a0CKytFMbTONY2msEDwX9iA0x7F5Lgj0X8eD4ZMsYqLzqjWMekLC8bjhxc+EuPo9\\n\"",
          "5:     \"Dygu3mJ2VgRC7XhlFpmdo5NN8J2E7B/CNB3R4hOcMMZNZdi0xLtFoTfwU61UPfFX\\n\"",
          "6:     \"14mV2laqLbvDEfQLJhUTDeFFV8EN5Z4H1ttLP3sMXJvc3EvM0JiDVj4l1TWFUHHz\\n\"",
          "7:     \"eFgCA1Im0lv8i7PFrgW7nyMfK9uDSsUmIp7k6ai4tVzwkTmV5PsriP1ju88Lo3MB\\n\"",
          "8:     \"4/sUmDv/JmlZ9YyzTO3Po8Uz3Aeq9HJWyBWHAQIDAQABAoIBAGOzBzBYZUWRGOgl\\n\"",
          "9:     \"IY8QjTT12dY/ymC05GM6gMobjxuD7FZ5d32HDLu/QrknfS3kKlFPUQGDAbQhbbb0\\n\"",
          "10:     \"zw6VL5NO9mfOPO2W/3FaG1sRgBQcerWonoSSSn8OJwVBHMFLG3a+U1Zh1UvPoiPK\\n\"",
          "11:     \"S734swIM+zFpNYivGPvOm/muF/waFf8tF/47t1cwt/JGXYQnkG/P7z0vp47Irpsb\\n\"",
          "12:     \"Yjw7vPe4BnbY6SppSxscW3KoV7GtJLFKIxAXbxsuJMF/rYe3O3w2VKJ1Sug1VDJl\\n\"",
          "13:     \"/GytwAkSUer84WwP2b07Wn4c5pCnmLslMgXCLkENgi1NnJMhYVOnckxGDZk54hqP\\n\"",
          "14:     \"9RbLnkkCgYEA/yKuWEvgdzYRYkqpzB0l9ka7Y00CV4Dha9Of6GjQi9i4VCJ/UFVr\\n\"",
          "15:     \"UlhTo5y0ZzpcDAPcoZf5CFZsD90a/BpQ3YTtdln2MMCL/Kr3QFmetkmDrt+3wYnX\\n\"",
          "16:     \"sKESfsa2nZdOATRpl1antpwyD4RzsAeOPwBiACj4fkq5iZJBSI0bxrMCgYEA8GFi\\n\"",
          "17:     \"qAjgKh81/Uai6KWTOW2kX02LEMVRrnZLQ9VPPLGid4KZDDk1/dEfxjjkcyOxX1Ux\\n\"",
          "18:     \"Klu4W8ZEdZyzPcJrfk7PdopfGOfrhWzkREK9C40H7ou/1jUecq/STPfSOmxh3Y+D\\n\"",
          "19:     \"ifMNO6z4sQAHx8VaHaxVsJ7SGR/spr0pkZL+NXsCgYEA84rIgBKWB1W+TGRXJzdf\\n\"",
          "20:     \"yHIGaCjXpm2pQMN3LmP3RrcuZWm0vBt94dHcrR5l+u/zc6iwEDTAjJvqdU4rdyEr\\n\"",
          "21:     \"tfkwr7v6TNlQB3WvpWanIPyVzfVSNFX/ZWSsAgZvxYjr9ixw6vzWBXOeOb/Gqu7b\\n\"",
          "22:     \"cvpLkjmJ0wxDhbXtyXKhZA8CgYBZyvcQb+hUs732M4mtQBSD0kohc5TsGdlOQ1AQ\\n\"",
          "23:     \"McFcmbpnzDghkclyW8jzwdLMk9uxEeDAwuxWE/UEvhlSi6qdzxC+Zifp5NBc0fVe\\n\"",
          "24:     \"7lMx2mfJGxj5CnSqQLVdHQHB4zSXkAGB6XHbBd0MOUeuvzDPfs2voVQ4IG3FR0oc\\n\"",
          "25:     \"3/znuwKBgQChZGH3McQcxmLA28aUwOVbWssfXKdDCsiJO+PEXXlL0maO3SbnFn+Q\\n\"",
          "26:     \"Tyf8oHI5cdP7AbwDSx9bUfRPjg9dKKmATBFr2bn216pjGxK0OjYOCntFTVr0psRB\\n\"",
          "27:     \"CrKg52Qrq71/2l4V2NLQZU40Dr1bN9V+Ftd9L0pvpCAEAWpIbLXGDw==\\n\"",
          "28:     \"-----END RSA PRIVATE KEY-----\"",
          "29: )",
          "31: PUBKEY_DATA = (",
          "32:     \"-----BEGIN PUBLIC KEY-----\\n\"",
          "33:     \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA75GR6ZTv5JOv90Vq8tKh\\n\"",
          "34:     \"KC7YQnhDIo2hM0HVziTEk5R4UQBWa0CKytFMbTONY2msEDwX9iA0x7F5Lgj0X8eD\\n\"",
          "35:     \"4ZMsYqLzqjWMekLC8bjhxc+EuPo9Dygu3mJ2VgRC7XhlFpmdo5NN8J2E7B/CNB3R\\n\"",
          "36:     \"4hOcMMZNZdi0xLtFoTfwU61UPfFX14mV2laqLbvDEfQLJhUTDeFFV8EN5Z4H1ttL\\n\"",
          "37:     \"P3sMXJvc3EvM0JiDVj4l1TWFUHHzeFgCA1Im0lv8i7PFrgW7nyMfK9uDSsUmIp7k\\n\"",
          "38:     \"6ai4tVzwkTmV5PsriP1ju88Lo3MB4/sUmDv/JmlZ9YyzTO3Po8Uz3Aeq9HJWyBWH\\n\"",
          "39:     \"AQIDAQAB\\n\"",
          "40:     \"-----END PUBLIC KEY-----\"",
          "41: )",
          "43: MSG = b\"It's me, Mario\"",
          "45: SIG = (",
          "46:     b\"\\x07\\xf3\\xb1\\xe7\\xdb\\x06\\xf4_\\xe2\\xdc\\xcb!F\\xfb\\xbex{W\\x1d\\xe4E\"",
          "47:     b\"\\xd3\\r\\xc5\\x90\\xca(\\x05\\x1d\\x99\\x8b\\x1aug\\x9f\\x95>\\x94\\x7f\\xe3+\"",
          "48:     b\"\\x12\\xfa\\x9c\\xd4\\xb8\\x02]\\x0e\\xa5\\xa3LL\\xc3\\xa2\\x8f+\\x83Z\\x1b\\x17\"",
          "49:     b'\\xbfT\\xd3\\xc7\\xfd\\x0b\\xf4\\xd7J\\xfe^\\x86q\"I\\xa3x\\xbc\\xd3$\\xe9M<\\xe1'",
          "50:     b\"\\x07\\xad\\xf2_\\x9f\\xfa\\xf7g(~\\xd8\\xf5\\xe7\\xda-\\xa3Ko\\xfc.\\x99\\xcf\"",
          "51:     b\"\\x9b\\xb9\\xc1U\\x97\\x82'\\xcb\\xc6\\x08\\xaa\\xa0\\xe4\\xd0\\xc1+\\xfc\\x86\"",
          "52:     b'\\r\\xe4y\\xb1#\\xd3\\x1dS\\x96D28\\xc4\\xd5\\r\\xd4\\x98\\x1a44\"\\xd7\\xc2\\xb4'",
          "53:     b\"]\\xa7\\x0f\\xa7Db\\x85G\\x8c\\xd6\\x94!\\x8af1O\\xf6g\\xd7\\x03\\xfd\\xb3\\xbc\"",
          "54:     b\"\\xce\\x9f\\xe7\\x015\\xb8\\x1d]AHK\\xa0\\x14m\\xda=O\\xa7\\xde\\xf2\\xff\\x9b\"",
          "55:     b\"\\x8e\\x83\\xc8j\\x11\\x1a\\x98\\x85\\xde\\xc5\\x91\\x07\\x84!\\x12^4\\xcb\\xa8\"",
          "56:     b\"\\x98\\x8a\\x8a&#\\xb9(#?\\x80\\x15\\x9eW\\xb5\\x12\\xd1\\x95S\\xf2<G\\xeb\\xf1\"",
          "57:     b\"\\x14H\\xb2\\xc4>\\xc3A\\xed\\x86x~\\xcfU\\xd5Q\\xfe~\\x10\\xd2\\x9b\"",
          "58: )",
          "",
          "---------------"
        ],
        "tests/pytests/unit/crypt/test_crypt_cryptodome.py||tests/pytests/unit/crypt/test_crypt_cryptodome.py": [
          "File: tests/pytests/unit/crypt/test_crypt_cryptodome.py -> tests/pytests/unit/crypt/test_crypt_cryptodome.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os",
          "3: import pytest",
          "5: import salt.crypt",
          "6: from tests.support.mock import MagicMock, MockCall, mock_open, patch",
          "8: from . import MSG, PRIVKEY_DATA, PUBKEY_DATA, SIG",
          "10: try:",
          "11:     import M2Crypto  # pylint: disable=unused-import",
          "13:     HAS_M2 = True",
          "14: except ImportError:",
          "15:     HAS_M2 = False",
          "16: try:",
          "17:     from Cryptodome.PublicKey import RSA",
          "19:     HAS_PYCRYPTO_RSA = True",
          "20: except ImportError:",
          "21:     HAS_PYCRYPTO_RSA = False",
          "22: if not HAS_PYCRYPTO_RSA:",
          "23:     try:",
          "24:         from Crypto.PublicKey import RSA  # nosec",
          "26:         HAS_PYCRYPTO_RSA = True",
          "27:     except ImportError:",
          "28:         HAS_PYCRYPTO_RSA = False",
          "30: pytestmark = [",
          "31:     pytest.mark.skipif(not HAS_PYCRYPTO_RSA, reason=\"pycrypto >= 2.6 is not available\"),",
          "32:     pytest.mark.skipif(HAS_M2, reason=\"m2crypto is used by salt.crypt if installed\"),",
          "33: ]",
          "36: @pytest.mark.slow_test",
          "37: def test_gen_keys():",
          "38:     open_priv_wb = MockCall(\"/keydir{}keyname.pem\".format(os.sep), \"wb+\")",
          "39:     open_pub_wb = MockCall(\"/keydir{}keyname.pub\".format(os.sep), \"wb+\")",
          "41:     with patch.multiple(",
          "42:         os,",
          "43:         umask=MagicMock(),",
          "44:         chmod=MagicMock(),",
          "45:         access=MagicMock(return_value=True),",
          "46:     ):",
          "47:         with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "48:             \"os.path.isfile\", return_value=True",
          "49:         ):",
          "50:             result = salt.crypt.gen_keys(\"/keydir\", \"keyname\", 2048)",
          "51:             assert result == \"/keydir{}keyname.pem\".format(os.sep), result",
          "52:             assert open_priv_wb not in m_open.calls",
          "53:             assert open_pub_wb not in m_open.calls",
          "55:         with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "56:             \"os.path.isfile\", return_value=False",
          "57:         ):",
          "58:             salt.crypt.gen_keys(\"/keydir\", \"keyname\", 2048)",
          "59:             assert open_priv_wb in m_open.calls",
          "60:             assert open_pub_wb in m_open.calls",
          "63: @patch(\"os.umask\", MagicMock())",
          "64: @patch(\"os.chmod\", MagicMock())",
          "65: @patch(\"os.chown\", MagicMock(), create=True)",
          "66: @patch(\"os.access\", MagicMock(return_value=True))",
          "67: @pytest.mark.slow_test",
          "68: def test_gen_keys_with_passphrase():",
          "69:     key_path = os.path.join(os.sep, \"keydir\")",
          "70:     open_priv_wb = MockCall(os.path.join(key_path, \"keyname.pem\"), \"wb+\")",
          "71:     open_pub_wb = MockCall(os.path.join(key_path, \"keyname.pub\"), \"wb+\")",
          "73:     with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "74:         \"os.path.isfile\", return_value=True",
          "75:     ):",
          "76:         assert salt.crypt.gen_keys(",
          "77:             key_path, \"keyname\", 2048, passphrase=\"password\"",
          "78:         ) == os.path.join(key_path, \"keyname.pem\")",
          "79:         result = salt.crypt.gen_keys(key_path, \"keyname\", 2048, passphrase=\"password\")",
          "80:         assert result == os.path.join(key_path, \"keyname.pem\"), result",
          "81:         assert open_priv_wb not in m_open.calls",
          "82:         assert open_pub_wb not in m_open.calls",
          "84:     with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "85:         \"os.path.isfile\", return_value=False",
          "86:     ):",
          "87:         salt.crypt.gen_keys(key_path, \"keyname\", 2048)",
          "88:         assert open_priv_wb in m_open.calls",
          "89:         assert open_pub_wb in m_open.calls",
          "92: def test_sign_message():",
          "93:     key = RSA.importKey(PRIVKEY_DATA)",
          "94:     with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "95:         assert SIG == salt.crypt.sign_message(\"/keydir/keyname.pem\", MSG)",
          "98: def test_sign_message_with_passphrase():",
          "99:     key = RSA.importKey(PRIVKEY_DATA)",
          "100:     with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "101:         assert SIG == salt.crypt.sign_message(",
          "102:             \"/keydir/keyname.pem\", MSG, passphrase=\"password\"",
          "103:         )",
          "106: def test_verify_signature():",
          "107:     with patch(\"salt.utils.files.fopen\", mock_open(read_data=PUBKEY_DATA)):",
          "108:         assert salt.crypt.verify_signature(\"/keydir/keyname.pub\", MSG, SIG)",
          "",
          "---------------"
        ],
        "tests/pytests/unit/crypt/test_crypt_m2crypto.py||tests/pytests/unit/crypt/test_crypt_m2crypto.py": [
          "File: tests/pytests/unit/crypt/test_crypt_m2crypto.py -> tests/pytests/unit/crypt/test_crypt_m2crypto.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os",
          "3: import pytest",
          "5: import salt.crypt",
          "6: from tests.support.mock import MagicMock, mock_open, patch",
          "8: from . import MSG, PRIVKEY_DATA, PUBKEY_DATA, SIG",
          "10: M2Crypto = pytest.importorskip(\"M2Crypto\")",
          "13: @pytest.mark.slow_test",
          "14: def test_gen_keys():",
          "15:     with patch(\"os.umask\", MagicMock()), patch(\"os.chmod\", MagicMock()), patch(",
          "16:         \"os.access\", MagicMock(return_value=True)",
          "17:     ):",
          "18:         with patch(\"M2Crypto.RSA.RSA.save_pem\", MagicMock()) as save_pem, patch(",
          "19:             \"M2Crypto.RSA.RSA.save_pub_key\", MagicMock()",
          "20:         ) as save_pub:",
          "21:             with patch(\"os.path.isfile\", return_value=True):",
          "22:                 assert salt.crypt.gen_keys(",
          "23:                     \"/keydir\", \"keyname\", 2048",
          "24:                 ) == \"/keydir{}keyname.pem\".format(os.sep)",
          "25:                 save_pem.assert_not_called()",
          "26:                 save_pub.assert_not_called()",
          "28:             with patch(\"os.path.isfile\", return_value=False):",
          "29:                 assert salt.crypt.gen_keys(",
          "30:                     \"/keydir\", \"keyname\", 2048",
          "31:                 ) == \"/keydir{}keyname.pem\".format(os.sep)",
          "32:                 save_pem.assert_called_once_with(",
          "33:                     \"/keydir{}keyname.pem\".format(os.sep), cipher=None",
          "34:                 )",
          "35:                 save_pub.assert_called_once_with(\"/keydir{}keyname.pub\".format(os.sep))",
          "38: @pytest.mark.slow_test",
          "39: def test_gen_keys_with_passphrase():",
          "40:     with patch(\"os.umask\", MagicMock()), patch(\"os.chmod\", MagicMock()), patch(",
          "41:         \"os.chown\", MagicMock()",
          "42:     ), patch(\"os.access\", MagicMock(return_value=True)):",
          "43:         with patch(\"M2Crypto.RSA.RSA.save_pem\", MagicMock()) as save_pem, patch(",
          "44:             \"M2Crypto.RSA.RSA.save_pub_key\", MagicMock()",
          "45:         ) as save_pub:",
          "46:             with patch(\"os.path.isfile\", return_value=True):",
          "47:                 assert salt.crypt.gen_keys(",
          "48:                     \"/keydir\", \"keyname\", 2048, passphrase=\"password\"",
          "49:                 ) == \"/keydir{}keyname.pem\".format(os.sep)",
          "50:                 save_pem.assert_not_called()",
          "51:                 save_pub.assert_not_called()",
          "53:             with patch(\"os.path.isfile\", return_value=False):",
          "54:                 assert salt.crypt.gen_keys(",
          "55:                     \"/keydir\", \"keyname\", 2048, passphrase=\"password\"",
          "56:                 ) == \"/keydir{}keyname.pem\".format(os.sep)",
          "57:                 callback = save_pem.call_args[1][\"callback\"]",
          "58:                 save_pem.assert_called_once_with(",
          "59:                     \"/keydir{}keyname.pem\".format(os.sep),",
          "60:                     cipher=\"des_ede3_cbc\",",
          "61:                     callback=callback,",
          "62:                 )",
          "63:                 assert callback(None) == b\"password\"",
          "64:                 save_pub.assert_called_once_with(\"/keydir{}keyname.pub\".format(os.sep))",
          "67: def test_sign_message():",
          "68:     key = M2Crypto.RSA.load_key_string(salt.utils.stringutils.to_bytes(PRIVKEY_DATA))",
          "69:     with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "70:         assert SIG == salt.crypt.sign_message(\"/keydir/keyname.pem\", MSG)",
          "73: def test_sign_message_with_passphrase():",
          "74:     key = M2Crypto.RSA.load_key_string(salt.utils.stringutils.to_bytes(PRIVKEY_DATA))",
          "75:     with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "76:         assert SIG == salt.crypt.sign_message(",
          "77:             \"/keydir/keyname.pem\", MSG, passphrase=\"password\"",
          "78:         )",
          "81: def test_verify_signature():",
          "82:     with patch(",
          "83:         \"salt.utils.files.fopen\",",
          "84:         mock_open(read_data=salt.utils.stringutils.to_bytes(PUBKEY_DATA)),",
          "85:     ):",
          "86:         assert salt.crypt.verify_signature(\"/keydir/keyname.pub\", MSG, SIG)",
          "89: def test_encrypt_decrypt_bin():",
          "90:     priv_key = M2Crypto.RSA.load_key_string(",
          "91:         salt.utils.stringutils.to_bytes(PRIVKEY_DATA)",
          "92:     )",
          "93:     pub_key = M2Crypto.RSA.load_pub_key_bio(",
          "94:         M2Crypto.BIO.MemoryBuffer(salt.utils.stringutils.to_bytes(PUBKEY_DATA))",
          "95:     )",
          "96:     encrypted = salt.crypt.private_encrypt(priv_key, b\"salt\")",
          "97:     decrypted = salt.crypt.public_decrypt(pub_key, encrypted)",
          "98:     assert b\"salt\" == decrypted",
          "",
          "---------------"
        ],
        "tests/unit/test_crypt.py||tests/unit/test_crypt.py": [
          "File: tests/unit/test_crypt.py -> tests/unit/test_crypt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import salt.utils.files",
          "8: import salt.utils.stringutils",
          "11: from tests.support.unit import TestCase",
          "13: try:",
          "",
          "[Removed Lines]",
          "9: from salt import crypt",
          "10: from tests.support.mock import MagicMock, MockCall, mock_open, patch",
          "",
          "[Added Lines]",
          "9: from tests.support.mock import mock_open, patch",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: except ImportError:",
          "18:     HAS_M2 = False",
          "19: try:",
          "22:     HAS_PYCRYPTO_RSA = True",
          "23: except ImportError:",
          "",
          "[Removed Lines]",
          "20:     from Cryptodome.PublicKey import RSA",
          "",
          "[Added Lines]",
          "19:     from Cryptodome.PublicKey import RSA  # pylint: disable=unused-import",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91: )",
          "271: class TestBadCryptodomePubKey(TestCase):",
          "272:     \"\"\"",
          "273:     Test that we can load public keys exported by pycrpytodome<=3.4.6",
          "",
          "[Removed Lines]",
          "94: @pytest.mark.skipif(not HAS_PYCRYPTO_RSA, reason=\"pycrypto >= 2.6 is not available\")",
          "95: @pytest.mark.skipif(HAS_M2, reason=\"m2crypto is used by salt.crypt if installed\")",
          "96: class CryptTestCase(TestCase):",
          "97:     @pytest.mark.slow_test",
          "98:     def test_gen_keys(self):",
          "99:         open_priv_wb = MockCall(\"/keydir{}keyname.pem\".format(os.sep), \"wb+\")",
          "100:         open_pub_wb = MockCall(\"/keydir{}keyname.pub\".format(os.sep), \"wb+\")",
          "102:         with patch.multiple(",
          "103:             os,",
          "104:             umask=MagicMock(),",
          "105:             chmod=MagicMock(),",
          "106:             access=MagicMock(return_value=True),",
          "107:         ):",
          "108:             with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "109:                 \"os.path.isfile\", return_value=True",
          "110:             ):",
          "111:                 result = crypt.gen_keys(\"/keydir\", \"keyname\", 2048)",
          "112:                 assert result == \"/keydir{}keyname.pem\".format(os.sep), result",
          "113:                 assert open_priv_wb not in m_open.calls",
          "114:                 assert open_pub_wb not in m_open.calls",
          "116:             with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "117:                 \"os.path.isfile\", return_value=False",
          "118:             ):",
          "119:                 crypt.gen_keys(\"/keydir\", \"keyname\", 2048)",
          "120:                 assert open_priv_wb in m_open.calls",
          "121:                 assert open_pub_wb in m_open.calls",
          "123:     @patch(\"os.umask\", MagicMock())",
          "124:     @patch(\"os.chmod\", MagicMock())",
          "125:     @patch(\"os.chown\", MagicMock(), create=True)",
          "126:     @patch(\"os.access\", MagicMock(return_value=True))",
          "127:     @pytest.mark.slow_test",
          "128:     def test_gen_keys_with_passphrase(self):",
          "129:         key_path = os.path.join(os.sep, \"keydir\")",
          "130:         open_priv_wb = MockCall(os.path.join(key_path, \"keyname.pem\"), \"wb+\")",
          "131:         open_pub_wb = MockCall(os.path.join(key_path, \"keyname.pub\"), \"wb+\")",
          "133:         with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "134:             \"os.path.isfile\", return_value=True",
          "135:         ):",
          "136:             self.assertEqual(",
          "137:                 crypt.gen_keys(key_path, \"keyname\", 2048, passphrase=\"password\"),",
          "138:                 os.path.join(key_path, \"keyname.pem\"),",
          "139:             )",
          "140:             result = crypt.gen_keys(key_path, \"keyname\", 2048, passphrase=\"password\")",
          "141:             assert result == os.path.join(key_path, \"keyname.pem\"), result",
          "142:             assert open_priv_wb not in m_open.calls",
          "143:             assert open_pub_wb not in m_open.calls",
          "145:         with patch(\"salt.utils.files.fopen\", mock_open()) as m_open, patch(",
          "146:             \"os.path.isfile\", return_value=False",
          "147:         ):",
          "148:             crypt.gen_keys(key_path, \"keyname\", 2048)",
          "149:             assert open_priv_wb in m_open.calls",
          "150:             assert open_pub_wb in m_open.calls",
          "152:     def test_sign_message(self):",
          "153:         key = RSA.importKey(PRIVKEY_DATA)",
          "154:         with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "155:             self.assertEqual(SIG, salt.crypt.sign_message(\"/keydir/keyname.pem\", MSG))",
          "157:     def test_sign_message_with_passphrase(self):",
          "158:         key = RSA.importKey(PRIVKEY_DATA)",
          "159:         with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "160:             self.assertEqual(",
          "161:                 SIG,",
          "162:                 crypt.sign_message(\"/keydir/keyname.pem\", MSG, passphrase=\"password\"),",
          "163:             )",
          "165:     def test_verify_signature(self):",
          "166:         with patch(\"salt.utils.files.fopen\", mock_open(read_data=PUBKEY_DATA)):",
          "167:             self.assertTrue(crypt.verify_signature(\"/keydir/keyname.pub\", MSG, SIG))",
          "170: @pytest.mark.skipif(not HAS_M2, reason=\"m2crypto is not available\")",
          "171: class M2CryptTestCase(TestCase):",
          "172:     @patch(\"os.umask\", MagicMock())",
          "173:     @patch(\"os.chmod\", MagicMock())",
          "174:     @patch(\"os.access\", MagicMock(return_value=True))",
          "175:     @pytest.mark.slow_test",
          "176:     def test_gen_keys(self):",
          "177:         with patch(\"M2Crypto.RSA.RSA.save_pem\", MagicMock()) as save_pem:",
          "178:             with patch(\"M2Crypto.RSA.RSA.save_pub_key\", MagicMock()) as save_pub:",
          "179:                 with patch(\"os.path.isfile\", return_value=True):",
          "180:                     self.assertEqual(",
          "181:                         crypt.gen_keys(\"/keydir\", \"keyname\", 2048),",
          "182:                         \"/keydir{}keyname.pem\".format(os.sep),",
          "183:                     )",
          "184:                     save_pem.assert_not_called()",
          "185:                     save_pub.assert_not_called()",
          "187:                 with patch(\"os.path.isfile\", return_value=False):",
          "188:                     self.assertEqual(",
          "189:                         crypt.gen_keys(\"/keydir\", \"keyname\", 2048),",
          "190:                         \"/keydir{}keyname.pem\".format(os.sep),",
          "191:                     )",
          "192:                     save_pem.assert_called_once_with(",
          "193:                         \"/keydir{}keyname.pem\".format(os.sep), cipher=None",
          "194:                     )",
          "195:                     save_pub.assert_called_once_with(",
          "196:                         \"/keydir{}keyname.pub\".format(os.sep)",
          "197:                     )",
          "199:     @patch(\"os.umask\", MagicMock())",
          "200:     @patch(\"os.chmod\", MagicMock())",
          "201:     @patch(\"os.chown\", MagicMock())",
          "202:     @patch(\"os.access\", MagicMock(return_value=True))",
          "203:     @pytest.mark.slow_test",
          "204:     def test_gen_keys_with_passphrase(self):",
          "205:         with patch(\"M2Crypto.RSA.RSA.save_pem\", MagicMock()) as save_pem:",
          "206:             with patch(\"M2Crypto.RSA.RSA.save_pub_key\", MagicMock()) as save_pub:",
          "207:                 with patch(\"os.path.isfile\", return_value=True):",
          "208:                     self.assertEqual(",
          "209:                         crypt.gen_keys(",
          "210:                             \"/keydir\", \"keyname\", 2048, passphrase=\"password\"",
          "211:                         ),",
          "212:                         \"/keydir{}keyname.pem\".format(os.sep),",
          "213:                     )",
          "214:                     save_pem.assert_not_called()",
          "215:                     save_pub.assert_not_called()",
          "217:                 with patch(\"os.path.isfile\", return_value=False):",
          "218:                     self.assertEqual(",
          "219:                         crypt.gen_keys(",
          "220:                             \"/keydir\", \"keyname\", 2048, passphrase=\"password\"",
          "221:                         ),",
          "222:                         \"/keydir{}keyname.pem\".format(os.sep),",
          "223:                     )",
          "224:                     callback = save_pem.call_args[1][\"callback\"]",
          "225:                     save_pem.assert_called_once_with(",
          "226:                         \"/keydir{}keyname.pem\".format(os.sep),",
          "227:                         cipher=\"des_ede3_cbc\",",
          "228:                         callback=callback,",
          "229:                     )",
          "230:                     self.assertEqual(callback(None), b\"password\")",
          "231:                     save_pub.assert_called_once_with(",
          "232:                         \"/keydir{}keyname.pub\".format(os.sep)",
          "233:                     )",
          "235:     def test_sign_message(self):",
          "236:         key = M2Crypto.RSA.load_key_string(",
          "237:             salt.utils.stringutils.to_bytes(PRIVKEY_DATA)",
          "238:         )",
          "239:         with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "240:             self.assertEqual(SIG, salt.crypt.sign_message(\"/keydir/keyname.pem\", MSG))",
          "242:     def test_sign_message_with_passphrase(self):",
          "243:         key = M2Crypto.RSA.load_key_string(",
          "244:             salt.utils.stringutils.to_bytes(PRIVKEY_DATA)",
          "245:         )",
          "246:         with patch(\"salt.crypt.get_rsa_key\", return_value=key):",
          "247:             self.assertEqual(",
          "248:                 SIG,",
          "249:                 crypt.sign_message(\"/keydir/keyname.pem\", MSG, passphrase=\"password\"),",
          "250:             )",
          "252:     def test_verify_signature(self):",
          "253:         with patch(",
          "254:             \"salt.utils.files.fopen\",",
          "255:             mock_open(read_data=salt.utils.stringutils.to_bytes(PUBKEY_DATA)),",
          "256:         ):",
          "257:             self.assertTrue(crypt.verify_signature(\"/keydir/keyname.pub\", MSG, SIG))",
          "259:     def test_encrypt_decrypt_bin(self):",
          "260:         priv_key = M2Crypto.RSA.load_key_string(",
          "261:             salt.utils.stringutils.to_bytes(PRIVKEY_DATA)",
          "262:         )",
          "263:         pub_key = M2Crypto.RSA.load_pub_key_bio(",
          "264:             M2Crypto.BIO.MemoryBuffer(salt.utils.stringutils.to_bytes(PUBKEY_DATA))",
          "265:         )",
          "266:         encrypted = salt.crypt.private_encrypt(priv_key, b\"salt\")",
          "267:         decrypted = salt.crypt.public_decrypt(pub_key, encrypted)",
          "268:         self.assertEqual(b\"salt\", decrypted)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d69e7ad58c5984aefa8b81e206adc2fe2b4f841",
      "candidate_info": {
        "commit_hash": "5d69e7ad58c5984aefa8b81e206adc2fe2b4f841",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5d69e7ad58c5984aefa8b81e206adc2fe2b4f841",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja"
        ],
        "message": "Use windows self hosted runners to build CI deps\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:   windows-dependencies:",
          "249:     name: Windows",
          "254:     timeout-minutes: 90",
          "255:     strategy:",
          "256:       fail-fast: false",
          "",
          "[Removed Lines]",
          "250:     runs-on:",
          "251:       - self-hosted",
          "252:       - linux",
          "253:       - bastion",
          "",
          "[Added Lines]",
          "250:     runs-on: ${{ matrix.distro-slug }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:       - name: \"Throttle Builds\"",
          "266:         shell: bash",
          "267:         run: |",
          "270:       - name: Checkout Source Code",
          "271:         uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "268:           t=$(shuf -i 1-30 -n 1); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "",
          "[Added Lines]",
          "265:           t=$(python3 -c 'import random, sys; sys.stdout.write(str(random.randint(1, 15)))'); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "294:           cd artifacts",
          "295:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "303:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "305:         with:",
          "327:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "328:         run: |",
          "331:       - name: Install Dependencies",
          "332:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "333:         run: |",
          "336:       - name: Cleanup .nox Directory",
          "337:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "338:         run: |",
          "341:       - name: Compress .nox Directory",
          "342:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "343:         run: |",
          "356:       - name: Upload Nox Requirements Tarball",
          "357:         uses: actions/upload-artifact@v3",
          "",
          "[Removed Lines]",
          "297:       - name: PyPi Proxy",
          "298:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "299:         run: |",
          "300:           sed -i '7s;^;--index-url=https://pypi-proxy.saltstack.net/root/local/+simple/ --extra-index-url=https://pypi.org/simple\\n;' requirements/static/ci/*/*.txt",
          "302:       - name: Setup Python Tools Scripts",
          "304:         uses: ./.github/actions/setup-python-tools-scripts",
          "306:           cache-prefix: ${{ inputs.cache-prefix }}-build-deps-ci",
          "308:       - name: Get Salt Project GitHub Actions Bot Environment",
          "309:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "310:         run: |",
          "311:           TOKEN=$(curl -sS -f -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 30\")",
          "312:           SPB_ENVIRONMENT=$(curl -sS -f -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)",
          "313:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "315:       - name: Start VM",
          "316:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "317:         id: spin-up-vm",
          "318:         run: |",
          "319:           tools --timestamps vm create --environment \"${SPB_ENVIRONMENT}\" --retries=2 ${{ matrix.distro-slug }}",
          "321:       - name: List Free Space",
          "322:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "323:         run: |",
          "324:           tools --timestamps vm ssh ${{ matrix.distro-slug }} -- df -h || true",
          "326:       - name: Upload Checkout To VM",
          "329:           tools --timestamps vm rsync ${{ matrix.distro-slug }}",
          "334:           tools --timestamps vm install-dependencies --nox-session=${{ inputs.nox-session }} ${{ matrix.distro-slug }}",
          "339:           tools --timestamps vm pre-archive-cleanup ${{ matrix.distro-slug }}",
          "344:           tools --timestamps vm compress-dependencies ${{ matrix.distro-slug }}",
          "346:       - name: Download Compressed .nox Directory",
          "347:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "348:         run: |",
          "349:           tools --timestamps vm download-dependencies ${{ matrix.distro-slug }}",
          "351:       - name: Destroy VM",
          "352:         if: always() && steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "353:         run: |",
          "354:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "",
          "[Added Lines]",
          "294:       - name: Set up Python ${{ inputs.python-version }}",
          "296:         uses: actions/setup-python@v4",
          "298:           python-version: \"${{ inputs.python-version }}\"",
          "300:       - name: Install Nox",
          "303:           python3 -m pip install 'nox==${{ inputs.nox-version }}'",
          "307:         env:",
          "308:           PRINT_TEST_SELECTION: \"0\"",
          "309:           PRINT_SYSTEM_INFO: \"0\"",
          "311:           nox --install-only -e ${{ inputs.nox-session }}",
          "316:           nox --force-color -e \"pre-archive-cleanup(pkg=False)\"",
          "321:           nox --force-color -e compress-dependencies -- windows ${{ matrix.arch }}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd4422187cb36d52a16ecbc5d66e48026474679f",
      "candidate_info": {
        "commit_hash": "bd4422187cb36d52a16ecbc5d66e48026474679f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/bd4422187cb36d52a16ecbc5d66e48026474679f",
        "files": [
          "tests/pytests/integration/states/test_file.py"
        ],
        "message": "Fix test and no need to be root\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py": [
          "File: tests/pytests/integration/states/test_file.py -> tests/pytests/integration/states/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "384:         assert target_path.read_text().replace(\"\\r\\n\", \"\\n\") == expected_content",
          "389: def test_issue_60426(",
          "390:     salt_master,",
          "391:     salt_call_cli,",
          "392:     tmp_path,",
          "394: ):",
          "396:     jinja_name = \"foo_bar\"",
          "397:     jinja_contents = (",
          "398:         \"{% for item in accumulator['accumulated configstuff'] %}{{ item }}{% endfor %}\"",
          "",
          "[Removed Lines]",
          "387: @pytest.mark.skip_if_not_root",
          "388: @pytest.mark.usefixtures(\"pillar_tree\")",
          "393:     salt_minion,",
          "395:     target_path = tmp_path / \"/etc/foo/bar\"",
          "",
          "[Added Lines]",
          "392:     target_path = tmp_path.joinpath(\"etc/foo/bar\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "453:         - filename: {target_path}",
          "454:         - text:",
          "455:           - some",
          "456:           - good",
          "457:           - stuff",
          "458:         - watch_in:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "453:           - more",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "478:         # Check to make sure the file was created",
          "479:         assert target_path.is_file()",
          "480:         # The type of new line, ie, `\\n` vs `\\r\\n` is not important",
          "484: @pytest.fixture",
          "",
          "[Removed Lines]",
          "481:         assert target_path.read_text() == \"somegoodstuff\"",
          "",
          "[Added Lines]",
          "478:         assert target_path.read_text() == \"somemoregoodstuff\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9f2672793e0ebd18bbcf54b77e706929bd8986d6",
      "candidate_info": {
        "commit_hash": "9f2672793e0ebd18bbcf54b77e706929bd8986d6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/9f2672793e0ebd18bbcf54b77e706929bd8986d6",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          "tools/ci.py"
        ],
        "message": "Remove unnecessary workflow steps while still showing the information\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          "tools/ci.py||tools/ci.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:         run: |",
          "286:           tools ci get-testing-releases ${{ join(fromJSON(steps.get-salt-releases.outputs.releases), ' ') }} --salt-version ${{ steps.setup-salt-version.outputs.salt-version }}",
          "294:       - name: Define Testrun",
          "295:         id: define-testrun",
          "296:         run: |",
          "",
          "[Removed Lines]",
          "288:       - name: Check Salt Releases",
          "289:         run: |",
          "290:           echo '${{ steps.get-salt-releases.outputs.latest-release }}' | jq -C '.'",
          "291:           echo '${{ steps.get-salt-releases.outputs.releases }}' | jq -C '.'",
          "292:           echo '${{ steps.get-testing-releases.outputs.testing-releases }}' | jq -C '.'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         run: |",
          "136:           tools ci get-releases",
          "143:       - name: Set Cache Seed Output",
          "144:         id: set-cache-seed",
          "145:         run: |",
          "",
          "[Removed Lines]",
          "138:       - name: Check Salt Releases",
          "139:         run: |",
          "140:           echo '${{ steps.get-salt-releases.outputs.latest-release }}' | jq -C '.'",
          "141:           echo '${{ steps.get-salt-releases.outputs.releases }}' | jq -C '.'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/ci.py||tools/ci.py": [
          "File: tools/ci.py -> tools/ci.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "891:     \"\"\"",
          "892:     Generate the latest salt release.",
          "893:     \"\"\"",
          "903:         with open(github_output, \"a\", encoding=\"utf-8\") as wfh:",
          "904:             wfh.write(f\"latest-release={latest}\\n\")",
          "905:             wfh.write(f\"releases={json.dumps(str_releases)}\\n\")",
          "",
          "[Removed Lines]",
          "894:     github_output = os.environ.get(\"GITHUB_OUTPUT\")",
          "896:     if github_output is None:",
          "897:         ctx.exit(1, \"The 'GITHUB_OUTPUT' variable is not set.\")",
          "898:     else:",
          "899:         releases = tools.utils.get_salt_releases(ctx, repository)",
          "900:         str_releases = [str(version) for version in releases]",
          "901:         latest = str_releases[-1]",
          "",
          "[Added Lines]",
          "894:     releases = tools.utils.get_salt_releases(ctx, repository)",
          "895:     str_releases = [str(version) for version in releases]",
          "896:     latest = str_releases[-1]",
          "898:     ctx.info(\"Releases:\", sorted(str_releases))",
          "899:     ctx.info(f\"Latest Release: '{latest}'\")",
          "901:     github_output = os.environ.get(\"GITHUB_OUTPUT\")",
          "902:     if github_output is not None:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1035:     \"\"\"",
          "1036:     Get a list of releases to use for the upgrade and downgrade tests.",
          "1037:     \"\"\"",
          "1068:         with open(github_output, \"a\", encoding=\"utf-8\") as wfh:",
          "1069:             wfh.write(f\"testing-releases={json.dumps(str_releases)}\\n\")",
          "1074: @ci.command(",
          "",
          "[Removed Lines]",
          "1038:     github_output = os.environ.get(\"GITHUB_OUTPUT\")",
          "1039:     if github_output is None:",
          "1040:         ctx.exit(1, \"The 'GITHUB_OUTPUT' variable is not set.\")",
          "1041:     else:",
          "1042:         # We aren't testing upgrades from anything before 3006.0 except the latest 3005.x",
          "1043:         threshold_major = 3005",
          "1044:         parsed_salt_version = tools.utils.Version(salt_version)",
          "1045:         # We want the latest 4 major versions, removing the oldest if this version is a new major",
          "1046:         num_major_versions = 4",
          "1047:         if parsed_salt_version.minor == 0:",
          "1048:             num_major_versions = 3",
          "1049:         majors = sorted(",
          "1050:             list(",
          "1051:                 {",
          "1052:                     version.major",
          "1053:                     for version in releases",
          "1054:                     if version.major >= threshold_major",
          "1055:                 }",
          "1056:             )",
          "1057:         )[-num_major_versions:]",
          "1058:         testing_releases = []",
          "1059:         # Append the latest minor for each major",
          "1060:         for major in majors:",
          "1061:             minors_of_major = [",
          "1062:                 version for version in releases if version.major == major",
          "1063:             ]",
          "1064:             testing_releases.append(minors_of_major[-1])",
          "1066:         str_releases = [str(version) for version in testing_releases]",
          "1071:         ctx.exit(0)",
          "",
          "[Added Lines]",
          "1038:     # We aren't testing upgrades from anything before 3006.0 except the latest 3005.x",
          "1039:     threshold_major = 3005",
          "1040:     parsed_salt_version = tools.utils.Version(salt_version)",
          "1041:     # We want the latest 4 major versions, removing the oldest if this version is a new major",
          "1042:     num_major_versions = 4",
          "1043:     if parsed_salt_version.minor == 0:",
          "1044:         num_major_versions = 3",
          "1045:     majors = sorted(",
          "1046:         list(",
          "1047:             {version.major for version in releases if version.major >= threshold_major}",
          "1048:         )",
          "1049:     )[-num_major_versions:]",
          "1050:     testing_releases = []",
          "1051:     # Append the latest minor for each major",
          "1052:     for major in majors:",
          "1053:         minors_of_major = [version for version in releases if version.major == major]",
          "1054:         testing_releases.append(minors_of_major[-1])",
          "1056:     str_releases = [str(version) for version in testing_releases]",
          "1058:     ctx.info(\"Testing Releases:\", sorted(str_releases))",
          "1060:     github_output = os.environ.get(\"GITHUB_OUTPUT\")",
          "1061:     if github_output is not None:",
          "1065:     ctx.exit(0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "688093c4aa151598e117725d2173e6feabfb09a0",
      "candidate_info": {
        "commit_hash": "688093c4aa151598e117725d2173e6feabfb09a0",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/688093c4aa151598e117725d2173e6feabfb09a0",
        "files": [
          "salt/minion.py",
          "tests/pytests/integration/minion/test_return_retries.py"
        ],
        "message": "Fix up test and close minion channels",
        "before_after_code_files": [
          "salt/minion.py||salt/minion.py",
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/minion.py||salt/minion.py": [
          "File: salt/minion.py -> salt/minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1286:         self.ready = False",
          "1287:         self.jid_queue = [] if jid_queue is None else jid_queue",
          "1288:         self.periodic_callbacks = {}",
          "1290:         if io_loop is None:",
          "1291:             self.io_loop = salt.ext.tornado.ioloop.IOLoop.current()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1289:         self.req_channel = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1396:         \"\"\"",
          "1397:         Return a future which will complete when you are connected to a master",
          "1398:         \"\"\"",
          "1399:         # Consider refactoring so that eval_master does not have a subtle side-effect on the contents of the opts array",
          "1400:         master, self.pub_channel = yield self.eval_master(",
          "1401:             self.opts, self.timeout, self.safe, failed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1400:         if hasattr(self, \"pub_channel\") and self.pub_channel:",
          "1401:             self.pub_channel.on_recv(None)",
          "1402:             if hasattr(self.pub_channel, \"auth\"):",
          "1403:                 self.pub_channel.auth.invalidate()",
          "1404:             if hasattr(self.pub_channel, \"close\"):",
          "1405:                 self.pub_channel.close()",
          "1406:         if hasattr(self, \"req_channel\") and self.req_channel:",
          "1407:             self.req_channel.close()",
          "1408:             self.req_channel = None",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2870:                             self.pub_channel.auth.invalidate()",
          "2871:                         if hasattr(self.pub_channel, \"close\"):",
          "2872:                             self.pub_channel.close()",
          "2875:                     # if eval_master finds a new master for us, self.connected",
          "2876:                     # will be True again on successful master authentication",
          "",
          "[Removed Lines]",
          "2873:                         del self.pub_channel",
          "",
          "[Added Lines]",
          "2884:                     if hasattr(self, \"req_channel\") and self.req_channel:",
          "2885:                         self.req_channel.close()",
          "2886:                         self.req_channel = None",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3303:             if hasattr(self.pub_channel, \"close\"):",
          "3304:                 self.pub_channel.close()",
          "3305:             del self.pub_channel",
          "3306:         if hasattr(self, \"periodic_callbacks\"):",
          "3307:             for cb in self.periodic_callbacks.values():",
          "3308:                 cb.stop()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3319:         if hasattr(self, \"req_channel\") and self.req_channel:",
          "3320:             self.req_channel.close()",
          "3321:             self.req_channel = None",
          "",
          "---------------"
        ],
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: @pytest.mark.slow_test",
          "29: def test_publish_retry(salt_master, salt_minion_retry, salt_cli, salt_run_cli):",
          "30:     # run job that takes some time for warmup",
          "32:     # obtain JID",
          "33:     jid = rtn.stdout.strip().split(\" \")[-1]",
          "",
          "[Removed Lines]",
          "31:     rtn = salt_cli.run(\"test.sleep\", \"5\", \"--async\", minion_tgt=salt_minion_retry.id)",
          "",
          "[Added Lines]",
          "31:     rtn = salt_cli.run(\"test.sleep\", \"3.5\", \"--async\", minion_tgt=salt_minion_retry.id)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55: @pytest.mark.slow_test",
          "56: def test_pillar_timeout(salt_master_factory):",
          "57:     cmd = \"\"\"",
          "59:     \"\"\".strip()",
          "60:     master_overrides = {",
          "61:         \"ext_pillar\": [",
          "",
          "[Removed Lines]",
          "58:     python -c \"import time; time.sleep(5); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "[Added Lines]",
          "58:     python -c \"import time; time.sleep(4); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70589fe8c62909e17a68de1cc1d35290662cf41b",
      "candidate_info": {
        "commit_hash": "70589fe8c62909e17a68de1cc1d35290662cf41b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/70589fe8c62909e17a68de1cc1d35290662cf41b",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          ".github/workflows/test-package-downloads-action.yml",
          "tools/pkg/build.py"
        ],
        "message": "Prefer using `macos` instead of `darwin`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja",
          "tools/pkg/build.py||tools/pkg/build.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "191:         uses: actions/download-artifact@v3",
          "192:         with:",
          "194:           path: artifacts/",
          "196:       - name: Decompress Onedir Tarball",
          "",
          "[Removed Lines]",
          "193:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "193:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "199:         run: |",
          "200:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "201:           cd artifacts",
          "204:       - name: Set up Python ${{ inputs.python-version }}",
          "205:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "",
          "[Removed Lines]",
          "202:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "202:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-onedir-repo.yml.jinja||.github/workflows/templates/build-onedir-repo.yml.jinja": [
          "File: .github/workflows/templates/build-onedir-repo.yml.jinja -> .github/workflows/templates/build-onedir-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:       - name: Download macOS x86_64 Onedir Archive",
          "35:         uses: actions/download-artifact@v3",
          "36:         with:",
          "38:           path: artifacts/pkgs/incoming",
          "40:       - name: Download macOS arm64 Onedir Archive",
          "41:         uses: actions/download-artifact@v3",
          "42:         with:",
          "44:           path: artifacts/pkgs/incoming",
          "46:       - name: Download Windows amd64 Onedir Archive",
          "",
          "[Removed Lines]",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-darwin-x86_64.tar.xz",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-darwin-arm64.tar.xz",
          "",
          "[Added Lines]",
          "37:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-x86_64.tar.xz",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-macos-arm64.tar.xz",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:             arch: amd64",
          "172:           - platform: windows",
          "173:             arch: x86",
          "175:             arch: x86_64",
          "177:             arch: arm64",
          "178:     steps:",
          "179:       - uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "174:           - platform: darwin",
          "176:           - platform: darwin",
          "",
          "[Added Lines]",
          "174:           - platform: macos",
          "176:           - platform: macos",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "318:       - name: Download Onedir Tarball as an Artifact",
          "319:         uses: actions/download-artifact@v3",
          "320:         with:",
          "322:           path: artifacts/",
          "324:       - name: Install System Dependencies",
          "",
          "[Removed Lines]",
          "321:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "321:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "330:         run: |",
          "331:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "332:           cd artifacts",
          "335:       - name: Set up Python ${{ inputs.python-version }}",
          "336:         uses: actions/setup-python@v4",
          "",
          "[Removed Lines]",
          "333:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "333:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .github/workflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     with:",
          "47:       distro-slug: <{ slug }>",
          "48:       nox-session: ci-test-onedir",
          "50:       arch: <{ arch }>",
          "51:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "52:       pkg-type: macos",
          "",
          "[Removed Lines]",
          "49:       platform: darwin",
          "",
          "[Added Lines]",
          "49:       platform: macos",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .github/workflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     with:",
          "46:       distro-slug: <{ slug }>",
          "47:       nox-session: ci-test-onedir",
          "49:       arch: <{ arch }>",
          "50:       nox-version: <{ nox_version  }>",
          "51:       gh-actions-python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "",
          "[Removed Lines]",
          "48:       platform: darwin",
          "",
          "[Added Lines]",
          "48:       platform: macos",
          "",
          "---------------"
        ],
        "tools/pkg/build.py||tools/pkg/build.py": [
          "File: tools/pkg/build.py -> tools/pkg/build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "562:         / \"static\"",
          "563:         / \"pkg\"",
          "564:         / f\"py{requirements_version}\"",
          "566:     )",
          "567:     _check_pkg_build_files_exist(ctx, requirements_file=requirements_file)",
          "",
          "[Removed Lines]",
          "565:         / f\"{platform}.txt\"",
          "",
          "[Added Lines]",
          "565:         / f\"{platform if platform != 'macos' else 'darwin'}.txt\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58dfffa162b99e23291e57a8382e9dc755348c9c",
      "candidate_info": {
        "commit_hash": "58dfffa162b99e23291e57a8382e9dc755348c9c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/58dfffa162b99e23291e57a8382e9dc755348c9c",
        "files": [
          "noxfile.py"
        ],
        "message": "Run salt's daemons as system services for the package tests\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1894:     if chunk in (\"upgrade-classic\", \"downgrade-classic\"):",
          "1895:         cmd_args.append(\"--classic\")",
          "1897:     pytest_args = (",
          "1898:         cmd_args[:]",
          "1899:         + [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1897:     cmd_args.append(\"--pkg-system-service\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b170454e92cf1f4df40897258271c87d1ef37bb",
      "candidate_info": {
        "commit_hash": "4b170454e92cf1f4df40897258271c87d1ef37bb",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4b170454e92cf1f4df40897258271c87d1ef37bb",
        "files": [
          "tools/release.py"
        ],
        "message": "Force arm64 not aarch64",
        "before_after_code_files": [
          "tools/release.py||tools/release.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/release.py||tools/release.py": [
          "File: tools/release.py -> tools/release.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:         arch = \"arm64\"",
          "138:     arch = arch.lower()",
          "139:     platform = platform.lower()",
          "141:         ctx.error(",
          "143:         )",
          "144:         ctx.exit(1)",
          "145:     if platform == \"windows\" and arch not in (\"x86\", \"amd64\"):",
          "",
          "[Removed Lines]",
          "140:     if platform in (\"linux\", \"macos\") and arch not in (\"x86_64\", \"aarch64\"):",
          "142:             f\"The 'arch' value for {platform} must be one of: 'x86_64', 'aarch64', 'arm64'\"",
          "",
          "[Added Lines]",
          "140:     if platform in (\"linux\", \"macos\") and arch not in (\"x86_64\", \"arm64\"):",
          "142:             f\"The 'arch' value for {platform} must be one of: 'x86_64', 'aarch64', 'aarch64'\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ec9295d7dfc406ddb76b51bebcd2b403f62d787",
      "candidate_info": {
        "commit_hash": "4ec9295d7dfc406ddb76b51bebcd2b403f62d787",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4ec9295d7dfc406ddb76b51bebcd2b403f62d787",
        "files": [
          "salt/modules/aptpkg.py",
          "tests/pytests/unit/modules/test_aptpkg.py"
        ],
        "message": "Remove deprecation warning which turned into an error on Jan 2024\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "salt/modules/aptpkg.py||salt/modules/aptpkg.py",
          "tests/pytests/unit/modules/test_aptpkg.py||tests/pytests/unit/modules/test_aptpkg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/modules/aptpkg.py||salt/modules/aptpkg.py": [
          "File: salt/modules/aptpkg.py -> salt/modules/aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     SaltInvocationError,",
          "48: )",
          "49: from salt.modules.cmdmod import _parse_env",
          "52: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "50: from salt.utils.versions import warn_until_date",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3113:     return sanitized",
          "3149: def _parse_selections(dpkgselection):",
          "3150:     \"\"\"",
          "3151:     Parses the format from ``dpkg --get-selections`` and return a format that",
          "",
          "[Removed Lines]",
          "3116: def expand_repo_def(**kwargs):",
          "3117:     \"\"\"",
          "3118:     Take a repository definition and expand it to the full pkg repository dict",
          "3119:     that can be used for comparison.  This is a helper function to make",
          "3120:     the Debian/Ubuntu apt sources sane for comparison in the pkgrepo states.",
          "3122:     This is designed to be called from pkgrepo states and will have little use",
          "3123:     being called on the CLI.",
          "3125:     CLI Examples:",
          "3127:     .. code-block:: bash",
          "3129:         NOT USABLE IN THE CLI",
          "3130:     \"\"\"",
          "3131:     warn_until_date(",
          "3132:         \"20240101\",",
          "3133:         \"The pkg.expand_repo_def function is deprecated and set for removal \"",
          "3134:         \"after {date}. This is only unsed internally by the apt pkg state \"",
          "3135:         \"module. If that's not the case, please file an new issue requesting \"",
          "3136:         \"the removal of this deprecation warning\",",
          "3137:         stacklevel=3,",
          "3138:     )",
          "3139:     if \"os_name\" not in kwargs:",
          "3140:         kwargs[\"os_name\"] = __grains__[\"os\"]",
          "3141:     if \"os_codename\" not in kwargs:",
          "3142:         if \"lsb_distrib_codename\" in kwargs:",
          "3143:             kwargs[\"os_codename\"] = kwargs[\"lsb_distrib_codename\"]",
          "3144:         else:",
          "3145:             kwargs[\"os_codename\"] = __grains__.get(\"oscodename\")",
          "3146:     return _expand_repo_def(**kwargs)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_aptpkg.py||tests/pytests/unit/modules/test_aptpkg.py": [
          "File: tests/pytests/unit/modules/test_aptpkg.py -> tests/pytests/unit/modules/test_aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1270:     # Valid source",
          "1271:     repo = \"# deb cdrom:[Debian GNU/Linux 11.4.0 _Bullseye_ - Official amd64 NETINST 20220709-10:31]/ bullseye main\\n\"",
          "1275:     assert isinstance(sanitized, dict)",
          "1276:     assert \"uri\" in sanitized",
          "",
          "[Removed Lines]",
          "1272:     sanitized = aptpkg.expand_repo_def(os_name=\"debian\", repo=repo, file=source_file)",
          "1273:     log.warning(\"SAN: %s\", sanitized)",
          "",
          "[Added Lines]",
          "1272:     sanitized = aptpkg._expand_repo_def(os_name=\"debian\", repo=repo, file=source_file)",
          "1273:     log.debug(\"SAN: %s\", sanitized)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1281:     # Pass the architecture and make sure it is added the the line attribute",
          "1282:     repo = \"deb http://cdn-aws.deb.debian.org/debian/ stretch main\\n\"",
          "1284:         os_name=\"debian\", repo=repo, file=source_file, architectures=\"amd64\"",
          "1285:     )",
          "",
          "[Removed Lines]",
          "1283:     sanitized = aptpkg.expand_repo_def(",
          "",
          "[Added Lines]",
          "1283:     sanitized = aptpkg._expand_repo_def(",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "287de2b898c8b622b4eb01e05754f6b43fe099cc",
      "candidate_info": {
        "commit_hash": "287de2b898c8b622b4eb01e05754f6b43fe099cc",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/287de2b898c8b622b4eb01e05754f6b43fe099cc",
        "files": [
          "pytest.ini",
          "tests/pytests/unit/utils/test_aws.py"
        ],
        "message": "Timeout the tests instead of just hanging indefinitely\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py": [
          "File: tests/pytests/unit/utils/test_aws.py -> tests/pytests/unit/utils/test_aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: from tests.support.helpers import patched_environ",
          "17: from tests.support.mock import MagicMock, patch",
          "20: @pytest.fixture(autouse=True)",
          "21: def _cleanup():",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: pytestmark = [",
          "20:     # Skip testing on windows since it does not support signals",
          "21:     # which is what the timeout marker is using.",
          "22:     pytest.mark.skip_on_windows,",
          "23:     pytest.mark.timeout(60, method=\"signal\"),",
          "24: ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8244df032540dbd5258806beb92b530843b99476",
      "candidate_info": {
        "commit_hash": "8244df032540dbd5258806beb92b530843b99476",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/8244df032540dbd5258806beb92b530843b99476",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/scheduled.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Reduce the amount of annotations on workflows. Suggested by GitHub.\n\nSince our bigger builds always throw 500's by GitHub. We have to refresh\na few times before being able to see the workflow.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/scheduled.yml.jinja||.githuworkflows/templates/scheduled.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .githuworkflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: <%- set prepare_workflow_skip_pkg_download_test_suite = prepare_workflow_skip_pkg_download_test_suite|default(\"\") %>",
          "7: <%- set prepare_workflow_salt_version_input = prepare_workflow_salt_version_input|default(\"\") %>",
          "8: <%- set skip_test_coverage_check = skip_test_coverage_check|default(\"${{ fromJSON(needs.prepare-workflow.outputs.testrun)['skip_code_coverage'] }}\") %>",
          "10: <%- set gpg_key_id = \"64CBBC8173D76B3F\" %>",
          "11: <%- set prepare_actual_release = prepare_actual_release | default(False) %>",
          "12: <%- set gh_actions_workflows_python_version = \"3.10\" %>",
          "",
          "[Removed Lines]",
          "9: <%- set skip_junit_reports_check = skip_junit_reports_check|default(\"${{ github.event_name == 'pull_request' }}\") %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .githuworkflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <%- set gh_environment = gh_environment|default(\"nightly\") %>",
          "2: <%- set skip_test_coverage_check = skip_test_coverage_check|default(\"false\") %>",
          "4: <%- set prepare_workflow_skip_test_suite = \"${{ inputs.skip-salt-test-suite && ' --skip-tests' || '' }}\" %>",
          "5: <%- set prepare_workflow_skip_pkg_test_suite = \"${{ inputs.skip-salt-pkg-test-suite && ' --skip-pkg-tests' || '' }}\" %>",
          "6: <%- set prepare_workflow_if_check = prepare_workflow_if_check|default(\"${{ fromJSON(needs.workflow-requirements.outputs.requirements-met) }}\") %>",
          "",
          "[Removed Lines]",
          "3: <%- set skip_junit_reports_check = skip_junit_reports_check|default(\"false\") %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/scheduled.yml.jinja||.githuworkflows/templates/scheduled.yml.jinja": [
          "File: .github/workflows/templates/scheduled.yml.jinja -> .githuworkflows/templates/scheduled.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <%- set prepare_workflow_if_check = \"${{ fromJSON(needs.workflow-requirements.outputs.requirements-met) }}\" %>",
          "2: <%- set skip_test_coverage_check = \"false\" %>",
          "4: <%- extends 'ci.yml.jinja' %>",
          "",
          "[Removed Lines]",
          "3: <%- set skip_junit_reports_check = \"false\" %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja": [
          "File: .github/workflows/templates/staging.yml.jinja -> .githuworkflows/templates/staging.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: <%- set gh_environment = \"staging\" %>",
          "7: <%- set prepare_actual_release = True %>",
          "8: <%- set skip_test_coverage_check = \"true\" %>",
          "10: <%- extends 'nightly.yml.jinja' %>",
          "12: <%- block name %>",
          "",
          "[Removed Lines]",
          "9: <%- set skip_junit_reports_check = \"true\" %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:             !artifacts/salt/*",
          "283:             !artifacts/salt-*.tar.*",
          "295:   macos:",
          "296:     name: MacOS",
          "",
          "[Removed Lines]",
          "285:       - name: Publish Test Report",
          "286:         uses: mikepenz/action-junit-report@v3",
          "287:         # always run even if the previous steps fails",
          "288:         if: always() && job.status != 'cancelled' && steps.download-artifacts-from-vm.outcome == 'success'",
          "289:         with:",
          "290:           check_name: Overall Test Results(${{ matrix.distro-slug }} ${{ matrix.arch }})",
          "291:           report_paths: 'artifacts/xml-unittests-output/*.xml'",
          "292:           annotate_only: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "500:             !artifacts/salt/*",
          "501:             !artifacts/salt-*.tar.*",
          "513:   windows:",
          "514:     name: Windows",
          "",
          "[Removed Lines]",
          "503:       - name: Publish Test Report",
          "504:         uses: mikepenz/action-junit-report@v3",
          "505:         # always run even if the previous steps fails",
          "506:         if: always() && job.status != 'cancelled'",
          "507:         with:",
          "508:           check_name: Overall Test Results(${{ matrix.distro-slug }} ${{ matrix.arch }})",
          "509:           report_paths: 'artifacts/xml-unittests-output/*.xml'",
          "510:           annotate_only: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "728:             artifacts",
          "729:             !artifacts/salt/*",
          "730:             !artifacts/salt-*.tar.*",
          "",
          "[Removed Lines]",
          "732:       - name: Publish Test Report",
          "733:         uses: mikepenz/action-junit-report@v3",
          "734:         # always run even if the previous steps fails",
          "735:         if: always() && job.status != 'cancelled' && steps.download-artifacts-from-vm.outcome == 'success'",
          "736:         with:",
          "737:           check_name: Overall Test Results(${{ matrix.distro-slug }} ${{ matrix.arch }} ${{ matrix.pkg-type }} )",
          "738:           report_paths: 'artifacts/xml-unittests-output/*.xml'",
          "739:           annotate_only: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .githuworkflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "22:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "23:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "25:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "26:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "27:     <%- if fips == \"fips\" %>",
          "",
          "[Removed Lines]",
          "24:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "56:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "57:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "59:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "60:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Removed Lines]",
          "58:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "87:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "88:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "90:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "91:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Removed Lines]",
          "89:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .githuworkflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "26:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "27:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "29:       workflow-slug: <{ workflow_slug }>",
          "30:       default-timeout: <{ timeout_value }>",
          "31:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Removed Lines]",
          "28:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "55:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "56:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "58:       workflow-slug: <{ workflow_slug }>",
          "59:       default-timeout: <{ timeout_value }>",
          "60:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Removed Lines]",
          "57:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "83:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "84:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "86:       workflow-slug: <{ workflow_slug }>",
          "87:       default-timeout: <{ timeout_value }>",
          "88:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Removed Lines]",
          "85:       skip-junit-reports: <{ skip_junit_reports_check }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "02f0daab696d2b7f1466b21e137b559e1aa36d0f",
      "candidate_info": {
        "commit_hash": "02f0daab696d2b7f1466b21e137b559e1aa36d0f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/02f0daab696d2b7f1466b21e137b559e1aa36d0f",
        "files": [
          ".github/workflows/nightly.yml",
          ".github/workflows/staging.yml",
          "tools/precommit/workflows.py"
        ],
        "message": "Programmatically discover which OS versions to build repos\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/precommit/workflows.py||tools/precommit/workflows.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "253:             test_salt_pkg_downloads_needs_slugs.add(\"build-ci-deps\")",
          "255:     build_rpms_listing = []",
          "263:             for arch in (\"x86_64\", \"arm64\", \"aarch64\"):",
          "264:                 build_rpms_listing.append((distro, release, arch))",
          "266:     build_debs_listing = []",
          "275:     env = Environment(",
          "276:         block_start_string=\"<%\",",
          "",
          "[Removed Lines]",
          "256:     for distro, releases in (",
          "257:         (\"amazon\", (\"2\", \"2023\")),",
          "258:         (\"redhat\", (\"7\", \"8\", \"9\")),",
          "259:         (\"fedora\", (\"36\", \"37\", \"38\")),",
          "260:         (\"photon\", (\"3\", \"4\", \"5\")),",
          "261:     ):",
          "262:         for release in releases:",
          "267:     for distro, releases in (",
          "268:         (\"debian\", (\"10\", \"11\", \"12\")),",
          "269:         (\"ubuntu\", (\"20.04\", \"22.04\")),",
          "270:     ):",
          "271:         for release in releases:",
          "272:             for arch in (\"x86_64\", \"arm64\"):",
          "273:                 build_debs_listing.append((distro, release, arch))",
          "",
          "[Added Lines]",
          "256:     rpm_os_versions: dict[str, list[str]] = {",
          "257:         \"amazon\": [],",
          "258:         \"fedora\": [],",
          "259:         \"photon\": [],",
          "260:         \"redhat\": [],",
          "261:     }",
          "262:     for slug in sorted(AMIS):",
          "263:         if slug.endswith(\"-arm64\"):",
          "264:             continue",
          "265:         if not slug.startswith(",
          "266:             (\"amazonlinux\", \"almalinux\", \"centos\", \"fedora\", \"photonos\")",
          "267:         ):",
          "268:             continue",
          "269:         os_name, os_version = slug.split(\"-\")",
          "270:         if os_name == \"amazonlinux\":",
          "271:             rpm_os_versions[\"amazon\"].append(os_version)",
          "272:         elif os_name == \"photonos\":",
          "273:             rpm_os_versions[\"photon\"].append(os_version)",
          "274:         elif os_name == \"fedora\":",
          "275:             rpm_os_versions[\"fedora\"].append(os_version)",
          "276:         else:",
          "277:             rpm_os_versions[\"redhat\"].append(os_version)",
          "279:     for distro, releases in sorted(rpm_os_versions.items()):",
          "280:         for release in sorted(set(releases)):",
          "285:     for slug in sorted(AMIS):",
          "286:         if not slug.startswith((\"debian-\", \"ubuntu-\")):",
          "287:             continue",
          "288:         if slug.endswith(\"-arm64\"):",
          "289:             continue",
          "290:         os_name, os_version = slug.split(\"-\")",
          "291:         for arch in (\"x86_64\", \"arm64\"):",
          "292:             build_debs_listing.append((os_name, os_version, arch))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10a54bcd311580b39ea01b5c997f3b385e9ecc6b",
      "candidate_info": {
        "commit_hash": "10a54bcd311580b39ea01b5c997f3b385e9ecc6b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/10a54bcd311580b39ea01b5c997f3b385e9ecc6b",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          "pkg/common/env-cleanup-rules.yml",
          "tools/pkg/__init__.py"
        ],
        "message": "Allow excluding paths when cleaning up archives\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja",
          "tools/pkg/__init__.py||tools/pkg/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .githuworkflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: <%- set gpg_key_id = \"64CBBC8173D76B3F\" %>",
          "10: <%- set prepare_actual_release = prepare_actual_release | default(False) %>",
          "11: <%- set gh_actions_workflows_python_version = \"3.10\" %>",
          "12: ---",
          "13: <%- block name %>",
          "14: name: <{ workflow_name }>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:       - name: Get Hash For Nox Tarball Cache",
          "216:         id: nox-archive-hash",
          "217:         run: |",
          "220:       <%- if prepare_actual_release %>",
          "",
          "[Removed Lines]",
          "218:           echo \"nox-archive-hash=${{ hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py') }}\" | tee -a \"$GITHUB_OUTPUT\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .githuworkflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:       - name: Get Hash For Nox Tarball Cache",
          "144:         id: nox-archive-hash",
          "145:         run: |",
          "148:   <%- endblock prepare_workflow_job %>",
          "149:   <%- endif %>",
          "",
          "[Removed Lines]",
          "146:           echo \"nox-archive-hash=${{ hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py') }}\" | tee -a \"$GITHUB_OUTPUT\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/pkg/__init__.py||tools/pkg/__init__.py": [
          "File: tools/pkg/__init__.py -> tools/pkg/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:         else:",
          "258:             yield patterns",
          "260:     dir_patterns = set()",
          "261:     for pattern in unnest_lists(patterns[\"dir_patterns\"]):",
          "262:         dir_patterns.add(pattern)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260:     exclude_patterns = set()",
          "261:     for pattern in unnest_lists(patterns[\"exclude_patterns\"]):",
          "262:         exclude_patterns.add(pattern)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "271:             if not path.exists():",
          "272:                 continue",
          "273:             match_path = path.as_posix()",
          "274:             for pattern in dir_patterns:",
          "275:                 if fnmatch.fnmatch(str(match_path), pattern):",
          "276:                     ctx.info(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "278:             skip_match = False",
          "279:             for pattern in exclude_patterns:",
          "280:                 if fnmatch.fnmatch(str(match_path), pattern):",
          "281:                     ctx.info(",
          "282:                         f\"Excluded file: {match_path}; Matching pattern: {pattern!r}\"",
          "283:                     )",
          "284:                     skip_match = True",
          "285:                     break",
          "286:             if skip_match:",
          "287:                 continue",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "283:             if not path.exists():",
          "284:                 continue",
          "285:             match_path = path.as_posix()",
          "286:             for pattern in file_patterns:",
          "287:                 if fnmatch.fnmatch(str(match_path), pattern):",
          "288:                     ctx.info(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:             skip_match = False",
          "301:             for pattern in exclude_patterns:",
          "302:                 if fnmatch.fnmatch(str(match_path), pattern):",
          "303:                     ctx.info(",
          "304:                         f\"Excluded file: {match_path}; Matching pattern: {pattern!r}\"",
          "305:                     )",
          "306:                     skip_match = True",
          "307:                     break",
          "308:             if skip_match:",
          "309:                 continue",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c5b8518df5f21e16eda69e78e33d517df7cf48d",
      "candidate_info": {
        "commit_hash": "8c5b8518df5f21e16eda69e78e33d517df7cf48d",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/8c5b8518df5f21e16eda69e78e33d517df7cf48d",
        "files": [
          "tools/release.py"
        ],
        "message": "Fix onedir download step",
        "before_after_code_files": [
          "tools/release.py||tools/release.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/release.py||tools/release.py": [
          "File: tools/release.py -> tools/release.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     s3 = boto3.client(\"s3\")",
          "134:     if platform == \"darwin\":",
          "135:         platform = \"macos\"",
          "138:     arch = arch.lower()",
          "139:     platform = platform.lower()",
          "140:     if platform in (\"linux\", \"macos\") and arch not in (\"x86_64\", \"aarch64\"):",
          "",
          "[Removed Lines]",
          "136:     if arch == \"arm64\":",
          "137:         arch = \"aarch64\"",
          "",
          "[Added Lines]",
          "136:     if arch == \"aarch64\":",
          "137:         arch = \"arm64\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7770748492735b15da56c8d877c8d5afa2cec05",
      "candidate_info": {
        "commit_hash": "f7770748492735b15da56c8d877c8d5afa2cec05",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f7770748492735b15da56c8d877c8d5afa2cec05",
        "files": [
          "changelog/65830.security.md"
        ],
        "message": "Update changelog to include the Jinja security update\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "cda26967f9dec16a69906aebeec007564e649f4c",
      "candidate_info": {
        "commit_hash": "cda26967f9dec16a69906aebeec007564e649f4c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/cda26967f9dec16a69906aebeec007564e649f4c",
        "files": [
          "changelog/565.security.md"
        ],
        "message": "Update changelog file name",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "602aa0cbf7188e2d2e139f284655316c51702d87",
      "candidate_info": {
        "commit_hash": "602aa0cbf7188e2d2e139f284655316c51702d87",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/602aa0cbf7188e2d2e139f284655316c51702d87",
        "files": [
          ".github/workflows/build-deb-packages.yml",
          ".github/workflows/build-deps-ci-action-linux.yml",
          ".github/workflows/build-deps-ci-action-macos.yml",
          ".github/workflows/build-deps-ci-action-windows.yml",
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-deps-onedir-linux.yml",
          ".github/workflows/build-deps-onedir-macos.yml",
          ".github/workflows/build-deps-onedir-windows.yml",
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-macos-packages.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-rpm-packages.yml",
          ".github/workflows/build-salt-onedir-linux.yml",
          ".github/workflows/build-salt-onedir-macos.yml",
          ".github/workflows/build-salt-onedir-windows.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/build-windows-packages.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-packages.yml.jinja",
          ".github/workflows/templates/build-repos.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          "tools/precommit/workflows.py"
        ],
        "message": "Reduce the number of workflows referenced\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-ci-deps.yml.jinja||.github/workflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/build-packages.yml.jinja||.github/workflows/templates/build-packages.yml.jinja",
          ".github/workflows/templates/build-repos.yml.jinja||.github/workflows/templates/build-repos.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja",
          "tools/precommit/workflows.py||tools/precommit/workflows.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-ci-deps.yml.jinja||.github/workflows/templates/build-ci-deps.yml.jinja": [
          "File: .github/workflows/templates/build-ci-deps.yml.jinja -> .github/workflows/templates/build-ci-deps.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     <%- if workflow_slug != 'release' %>",
          "8:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "9:     <%- endif %>",
          "10:     needs:",
          "11:       - prepare-workflow",
          "12:     <%- if workflow_slug != 'release' %>",
          "43:     <%- else %>",
          "44:       - download-onedir-artifact",
          "45:     <%- endif %>",
          "47:     with:",
          "49:       nox-session: ci-test-onedir",
          "52:       nox-version: <{ nox_version  }>",
          "53:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "54:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "55:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "",
          "[Removed Lines]",
          "2:   <%- for arch, build_distro_slug in build_ci_deps_listing[\"windows\"] %>",
          "4:   windows-<{ arch }>-ci-deps:",
          "5:     <%- do test_salt_needs.append(\"windows-\" + arch + \"-ci-deps\") %>",
          "6:     name: Windows <{ arch }> CI Deps",
          "13:       - build-salt-onedir-windows",
          "14:     <%- else %>",
          "15:       - download-onedir-artifact",
          "16:     <%- endif %>",
          "17:     uses: ./.github/workflows/build-deps-ci-action-windows.yml",
          "18:     with:",
          "19:       distro-slug: <{ build_distro_slug }>",
          "20:       nox-session: ci-test-onedir",
          "21:       platform: windows",
          "22:       arch: <{ arch }>",
          "23:       nox-version: <{ nox_version  }>",
          "24:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "25:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "26:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "28:   <%- endfor %>",
          "31:   <%- for arch, build_distro_slug in build_ci_deps_listing[\"macos\"] %>",
          "33:   macos-<{ arch }>-ci-deps:",
          "34:     <%- do test_salt_needs.append(\"macos-\" + arch + \"-ci-deps\") %>",
          "35:     name: MacOS <{ arch }> CI Deps",
          "36:     <%- if workflow_slug != 'release' %>",
          "37:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "38:     <%- endif %>",
          "39:     needs:",
          "40:       - prepare-workflow",
          "41:     <%- if workflow_slug != 'release' %>",
          "42:       - build-salt-onedir-macos",
          "46:     uses: ./.github/workflows/build-deps-ci-action-macos.yml",
          "48:       distro-slug: <{ build_distro_slug }>",
          "50:       platform: darwin",
          "51:       arch: <{ arch }>",
          "57:   <%- endfor %>",
          "60:   <%- for arch, build_distro_slug in build_ci_deps_listing[\"linux\"] %>",
          "62:   linux-<{ arch }>-ci-deps:",
          "63:     <%- do test_salt_needs.append(\"linux-\" + arch + \"-ci-deps\") %>",
          "64:     name: Linux <{ arch }> CI Deps",
          "65:     <%- if workflow_slug != 'release' %>",
          "66:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "67:     <%- endif %>",
          "68:     needs:",
          "69:       - prepare-workflow",
          "70:     <%- if workflow_slug != 'release' %>",
          "71:       - build-salt-onedir-linux",
          "72:     <%- else %>",
          "73:       - download-onedir-artifact",
          "74:     <%- endif %>",
          "75:     uses: ./.github/workflows/build-deps-ci-action-linux.yml",
          "76:     with:",
          "77:       distro-slug: <{ build_distro_slug }>",
          "78:       nox-session: ci-test-onedir",
          "79:       platform: linux",
          "80:       arch: <{ arch }>",
          "81:       nox-version: <{ nox_version  }>",
          "82:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "83:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "84:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "86:   <%- endfor %>",
          "",
          "[Added Lines]",
          "2:   build-ci-deps:",
          "3:     <%- do test_salt_needs.append(\"build-ci-deps\") %>",
          "4:     name: CI Deps",
          "11:       - build-salt-onedir",
          "15:     uses: ./.github/workflows/build-deps-ci-action.yml",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ---",
          "2: name: Install Test Dependencies",
          "4: on:",
          "5:   workflow_call:",
          "6:     inputs:",
          "7:       nox-session:",
          "8:         required: true",
          "9:         type: string",
          "10:         description: The nox session to run",
          "11:       salt-version:",
          "12:         type: string",
          "13:         required: true",
          "14:         description: The Salt version to set prior to running tests.",
          "15:       cache-prefix:",
          "16:         required: true",
          "17:         type: string",
          "18:         description: Seed used to invalidate caches",
          "19:       nox-version:",
          "20:         required: true",
          "21:         type: string",
          "22:         description: The nox version to install",
          "23:       python-version:",
          "24:         required: false",
          "25:         type: string",
          "26:         description: The python version to run tests with",
          "27:         default: \"3.10\"",
          "28:       package-name:",
          "29:         required: false",
          "30:         type: string",
          "31:         description: The onedir package name to use",
          "32:         default: salt",
          "35: env:",
          "36:   COLUMNS: 190",
          "37:   AWS_MAX_ATTEMPTS: \"10\"",
          "38:   AWS_RETRY_MODE: \"adaptive\"",
          "39:   PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/",
          "40:   PIP_EXTRA_INDEX_URL: https://pypi.org/simple",
          "42: jobs:",
          "44:   linux-dependencies:",
          "45:     name: Linux",
          "46:     runs-on:",
          "47:       - self-hosted",
          "48:       - linux",
          "49:       - bastion",
          "50:     timeout-minutes: 90",
          "51:     strategy:",
          "52:       fail-fast: false",
          "53:       matrix:",
          "54:         include:",
          "55:         <%- for arch, build_distro_slug in build_ci_deps_listing[\"linux\"] %>",
          "56:           - distro-slug: <{ build_distro_slug }>",
          "57:             arch: <{ arch }>",
          "58:         <%- endfor %>",
          "59:     steps:",
          "61:       - name: \"Throttle Builds\"",
          "62:         shell: bash",
          "63:         run: |",
          "64:           t=$(shuf -i 1-30 -n 1); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "66:       - name: Checkout Source Code",
          "67:         uses: actions/checkout@v4",
          "69:       - name: Cache nox.linux.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "70:         id: nox-dependencies-cache",
          "71:         uses: actions/cache@v3.3.1",
          "72:         with:",
          "73:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "74:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "75:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "76:             }}",
          "78:       - name: Download Onedir Tarball as an Artifact",
          "79:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "80:         uses: actions/download-artifact@v3",
          "81:         with:",
          "82:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "83:           path: artifacts/",
          "85:       - name: Decompress Onedir Tarball",
          "86:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "87:         shell: bash",
          "88:         run: |",
          "89:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "90:           cd artifacts",
          "91:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "93:       - name: PyPi Proxy",
          "94:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "95:         run: |",
          "96:           sed -i '7s;^;--index-url=https://pypi-proxy.saltstack.net/root/local/+simple/ --extra-index-url=https://pypi.org/simple\\n;' requirements/static/ci/*/*.txt",
          "98:       - name: Setup Python Tools Scripts",
          "99:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "100:         uses: ./.github/actions/setup-python-tools-scripts",
          "101:         with:",
          "102:           cache-prefix: ${{ inputs.cache-prefix }}-build-deps-ci",
          "104:       - name: Get Salt Project GitHub Actions Bot Environment",
          "105:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "106:         run: |",
          "107:           TOKEN=$(curl -sS -f -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 30\")",
          "108:           SPB_ENVIRONMENT=$(curl -sS -f -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)",
          "109:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "111:       - name: Start VM",
          "112:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "113:         id: spin-up-vm",
          "114:         run: |",
          "115:           tools --timestamps vm create --environment \"${SPB_ENVIRONMENT}\" --retries=2 ${{ matrix.distro-slug }}",
          "117:       - name: List Free Space",
          "118:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "119:         run: |",
          "120:           tools --timestamps vm ssh ${{ matrix.distro-slug }} -- df -h || true",
          "122:       - name: Upload Checkout To VM",
          "123:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "124:         run: |",
          "125:           tools --timestamps vm rsync ${{ matrix.distro-slug }}",
          "127:       - name: Install Dependencies",
          "128:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "129:         run: |",
          "130:           tools --timestamps vm install-dependencies --nox-session=${{ inputs.nox-session }} ${{ matrix.distro-slug }}",
          "132:       - name: Cleanup .nox Directory",
          "133:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "134:         run: |",
          "135:           tools --timestamps vm pre-archive-cleanup ${{ matrix.distro-slug }}",
          "137:       - name: Compress .nox Directory",
          "138:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "139:         run: |",
          "140:           tools --timestamps vm compress-dependencies ${{ matrix.distro-slug }}",
          "142:       - name: Download Compressed .nox Directory",
          "143:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "144:         run: |",
          "145:           tools --timestamps vm download-dependencies ${{ matrix.distro-slug }}",
          "147:       - name: Destroy VM",
          "148:         if: always() && steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "149:         run: |",
          "150:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "152:       - name: Upload Nox Requirements Tarball",
          "153:         uses: actions/upload-artifact@v3",
          "154:         with:",
          "155:           name: nox-linux-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "156:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "158:   macos-dependencies:",
          "159:     name: MacOS",
          "160:     runs-on: ${{ matrix.distro-slug }}",
          "161:     timeout-minutes: 90",
          "162:     strategy:",
          "163:       fail-fast: false",
          "164:       matrix:",
          "165:         include:",
          "166:         <%- for arch, build_distro_slug in build_ci_deps_listing[\"macos\"] %>",
          "167:           - distro-slug: <{ build_distro_slug }>",
          "168:             arch: <{ arch }>",
          "169:         <%- endfor %>",
          "170:     steps:",
          "172:       - name: \"Throttle Builds\"",
          "173:         shell: bash",
          "174:         run: |",
          "175:           t=$(python3 -c 'import random, sys; sys.stdout.write(str(random.randint(1, 15)))'); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "177:       - name: Checkout Source Code",
          "178:         uses: actions/checkout@v4",
          "180:       - name: Cache nox.macos.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "181:         id: nox-dependencies-cache",
          "182:         uses: actions/cache@v3.3.1",
          "183:         with:",
          "184:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "185:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "186:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "187:             }}",
          "189:       - name: Download Onedir Tarball as an Artifact",
          "190:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "191:         uses: actions/download-artifact@v3",
          "192:         with:",
          "193:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "194:           path: artifacts/",
          "196:       - name: Decompress Onedir Tarball",
          "197:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "198:         shell: bash",
          "199:         run: |",
          "200:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "201:           cd artifacts",
          "202:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch }}.tar.xz",
          "204:       - name: Set up Python ${{ inputs.python-version }}",
          "205:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "206:         uses: actions/setup-python@v4",
          "207:         with:",
          "208:           python-version: \"${{ inputs.python-version }}\"",
          "210:       - name: Install System Dependencies",
          "211:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "212:         run: |",
          "213:           brew install openssl@3",
          "215:       - name: Install Nox",
          "216:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "217:         run: |",
          "218:           python3 -m pip install 'nox==${{ inputs.nox-version }}'",
          "220:       - name: Install Dependencies",
          "221:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "222:         env:",
          "223:           PRINT_TEST_SELECTION: \"0\"",
          "224:           PRINT_SYSTEM_INFO: \"0\"",
          "225:         run: |",
          "226:           export PYCURL_SSL_LIBRARY=openssl",
          "227:           export LDFLAGS=\"-L/usr/local/opt/openssl@3/lib\"",
          "228:           export CPPFLAGS=\"-I/usr/local/opt/openssl@3/include\"",
          "229:           export PKG_CONFIG_PATH=\"/usr/local/opt/openssl@3/lib/pkgconfig\"",
          "230:           nox --install-only -e ${{ inputs.nox-session }}",
          "232:       - name: Cleanup .nox Directory",
          "233:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "234:         run: |",
          "235:           nox --force-color -e \"pre-archive-cleanup(pkg=False)\"",
          "237:       - name: Compress .nox Directory",
          "238:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "239:         run: |",
          "240:           nox --force-color -e compress-dependencies -- macos ${{ matrix.arch }}",
          "242:       - name: Upload Nox Requirements Tarball",
          "243:         uses: actions/upload-artifact@v3",
          "244:         with:",
          "245:           name: nox-macos-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "246:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "248:   windows-dependencies:",
          "249:     name: Windows",
          "250:     runs-on:",
          "251:       - self-hosted",
          "252:       - linux",
          "253:       - bastion",
          "254:     timeout-minutes: 90",
          "255:     strategy:",
          "256:       fail-fast: false",
          "257:       matrix:",
          "258:         include:",
          "259:         <%- for arch, build_distro_slug in build_ci_deps_listing[\"windows\"] %>",
          "260:           - distro-slug: <{ build_distro_slug }>",
          "261:             arch: <{ arch }>",
          "262:         <%- endfor %>",
          "263:     steps:",
          "265:       - name: \"Throttle Builds\"",
          "266:         shell: bash",
          "267:         run: |",
          "268:           t=$(shuf -i 1-30 -n 1); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "270:       - name: Checkout Source Code",
          "271:         uses: actions/checkout@v4",
          "273:       - name: Cache nox.windows.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "274:         id: nox-dependencies-cache",
          "275:         uses: actions/cache@v3.3.1",
          "276:         with:",
          "277:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "278:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "279:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "280:             }}",
          "282:       - name: Download Onedir Tarball as an Artifact",
          "283:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "284:         uses: actions/download-artifact@v3",
          "285:         with:",
          "286:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "287:           path: artifacts/",
          "289:       - name: Decompress Onedir Tarball",
          "290:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "291:         shell: bash",
          "292:         run: |",
          "293:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "294:           cd artifacts",
          "295:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "297:       - name: PyPi Proxy",
          "298:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "299:         run: |",
          "300:           sed -i '7s;^;--index-url=https://pypi-proxy.saltstack.net/root/local/+simple/ --extra-index-url=https://pypi.org/simple\\n;' requirements/static/ci/*/*.txt",
          "302:       - name: Setup Python Tools Scripts",
          "303:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "304:         uses: ./.github/actions/setup-python-tools-scripts",
          "305:         with:",
          "306:           cache-prefix: ${{ inputs.cache-prefix }}-build-deps-ci",
          "308:       - name: Get Salt Project GitHub Actions Bot Environment",
          "309:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "310:         run: |",
          "311:           TOKEN=$(curl -sS -f -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 30\")",
          "312:           SPB_ENVIRONMENT=$(curl -sS -f -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)",
          "313:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "315:       - name: Start VM",
          "316:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "317:         id: spin-up-vm",
          "318:         run: |",
          "319:           tools --timestamps vm create --environment \"${SPB_ENVIRONMENT}\" --retries=2 ${{ matrix.distro-slug }}",
          "321:       - name: List Free Space",
          "322:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "323:         run: |",
          "324:           tools --timestamps vm ssh ${{ matrix.distro-slug }} -- df -h || true",
          "326:       - name: Upload Checkout To VM",
          "327:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "328:         run: |",
          "329:           tools --timestamps vm rsync ${{ matrix.distro-slug }}",
          "331:       - name: Install Dependencies",
          "332:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "333:         run: |",
          "334:           tools --timestamps vm install-dependencies --nox-session=${{ inputs.nox-session }} ${{ matrix.distro-slug }}",
          "336:       - name: Cleanup .nox Directory",
          "337:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "338:         run: |",
          "339:           tools --timestamps vm pre-archive-cleanup ${{ matrix.distro-slug }}",
          "341:       - name: Compress .nox Directory",
          "342:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "343:         run: |",
          "344:           tools --timestamps vm compress-dependencies ${{ matrix.distro-slug }}",
          "346:       - name: Download Compressed .nox Directory",
          "347:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "348:         run: |",
          "349:           tools --timestamps vm download-dependencies ${{ matrix.distro-slug }}",
          "351:       - name: Destroy VM",
          "352:         if: always() && steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "353:         run: |",
          "354:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "356:       - name: Upload Nox Requirements Tarball",
          "357:         uses: actions/upload-artifact@v3",
          "358:         with:",
          "359:           name: nox-windows-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "360:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-packages.yml.jinja||.github/workflows/templates/build-packages.yml.jinja": [
          "File: .github/workflows/templates/build-packages.yml.jinja -> .github/workflows/templates/build-packages.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:   <%- for backend in (\"onedir\", \"src\") %>",
          "10:   <%- if backend == \"src\" %>",
          "11:     <%- do conclusion_needs.append(job_name) %>",
          "12:   <%- endif %>",
          "14:   <{ job_name }>:",
          "15:     name: Build Packages",
          "17:     needs:",
          "18:       - prepare-workflow",
          "21:     with:",
          "22:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "23:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "24:       relenv-version: \"<{ relenv_version }>\"",
          "25:       python-version: \"<{ python_version }>\"",
          "26:       source: \"<{ backend }>\"",
          "28:       environment: <{ gh_environment }>",
          "34:     secrets: inherit",
          "35:     <%- endif %>",
          "37:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "1: <%- for platform, pkg_type, display_name, runner_type in (",
          "2:                                                           (\"linux\", \"rpm\", \"RPM\", \"self-hosted\"),",
          "3:                                                           (\"linux\", \"deb\", \"DEB\", \"self-hosted\"),",
          "4:                                                           (\"windows\", \"windows\", \"Windows\", \"github-hosted\"),",
          "5:                                                           (\"macos\", \"macos\", \"macOS\", \"github-hosted\"),",
          "6:                                                         ) %>",
          "9:   <%- set job_name = \"build-{}-pkgs-{}\".format(pkg_type, backend) %>",
          "16:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-pkgs'] && fromJSON(needs.prepare-workflow.outputs.runners)['<{ runner_type }>'] }}",
          "19:       - build-salt-onedir-<{ platform }>",
          "20:     uses: ./.github/workflows/build-<{ pkg_type }>-packages.yml",
          "27:     <%- if pkg_type in (\"macos\", \"windows\") and gh_environment %>",
          "29:       <%- if pkg_type == \"macos\" %>",
          "30:       sign-packages: true",
          "31:       <%- else %>",
          "32:       sign-packages: <% if gh_environment == 'nightly' -%> false <%- else -%> ${{ inputs.sign-windows-packages }} <%- endif %>",
          "33:       <%- endif %>",
          "38: <%- endfor %>",
          "",
          "[Added Lines]",
          "2:   <%- set job_name = \"build-pkgs-{}\".format(backend) %>",
          "9:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-pkgs'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "12:       - build-salt-onedir",
          "13:     uses: ./.github/workflows/build-packages.yml",
          "20:     <%- if gh_environment %>",
          "22:       sign-macos-packages: true",
          "23:       sign-windows-packages: <% if gh_environment == 'nightly' -%> false <%- else -%> ${{ inputs.sign-windows-packages }} <%- endif %>",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-repos.yml.jinja||.github/workflows/templates/build-repos.yml.jinja": [
          "File: .github/workflows/templates/build-repos.yml.jinja -> .github/workflows/templates/build-repos.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     needs:",
          "21:       - prepare-workflow",
          "22:       <%- if type not in (\"src\", \"onedir\") %>",
          "24:       <%- elif type == 'onedir' %>",
          "28:       <%- elif type == 'src' %>",
          "29:       - build-source-tarball",
          "30:       <%- endif %>",
          "",
          "[Removed Lines]",
          "23:       - build-<{ type }>-pkgs-onedir",
          "25:       - build-salt-onedir-linux",
          "26:       - build-salt-onedir-macos",
          "27:       - build-salt-onedir-windows",
          "",
          "[Added Lines]",
          "23:       - build-pkgs-onedir",
          "25:       - build-salt-onedir",
          "",
          "---------------"
        ],
        ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .github/workflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:   <%- set job_name = \"build-deps-onedir\" %>",
          "237:   <%- if includes.get(job_name, True) %>",
          "243:     name: Build Dependencies Onedir",
          "244:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['<{ job_name }>'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "245:     needs:",
          "246:       - prepare-workflow",
          "248:     with:",
          "249:       cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "250:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "",
          "[Removed Lines]",
          "238:   <%- for platform in (\"linux\", \"windows\", \"macos\") %>",
          "239:     <%- set platform_job_name = \"{}-{}\".format(job_name, platform) %>",
          "241:   <{ platform_job_name }>:",
          "242:     <%- do conclusion_needs.append(platform_job_name) %>",
          "247:     uses: ./.github/workflows/build-deps-onedir-<{ platform }>.yml",
          "",
          "[Added Lines]",
          "239:   <{ job_name }>:",
          "240:     <%- do conclusion_needs.append(job_name) %>",
          "245:     uses: ./.github/workflows/build-deps-onedir.yml",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "253:       relenv-version: \"<{ relenv_version }>\"",
          "254:       python-version: \"<{ python_version }>\"",
          "257:   <%- endif %>",
          "260:   <%- set job_name = \"build-salt-onedir\" %>",
          "261:   <%- if includes.get(job_name, True) %>",
          "267:     name: Build Salt Onedir",
          "268:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['<{ job_name }>'] }}",
          "269:     needs:",
          "270:       - prepare-workflow",
          "272:       - build-source-tarball",
          "274:     with:",
          "275:       cache-seed: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "276:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "",
          "[Removed Lines]",
          "256:   <%- endfor %>",
          "262:   <%- for platform in (\"linux\", \"windows\", \"macos\") %>",
          "263:     <%- set platform_job_name = \"{}-{}\".format(job_name, platform) %>",
          "265:   <{ platform_job_name }>:",
          "266:     <%- do conclusion_needs.append(platform_job_name) %>",
          "271:       - build-deps-onedir-<{ platform }>",
          "273:     uses: ./.github/workflows/build-salt-onedir-<{ platform }>.yml",
          "",
          "[Added Lines]",
          "260:   <{ job_name }>:",
          "261:     <%- do conclusion_needs.append(job_name) %>",
          "266:       - build-deps-onedir",
          "268:     uses: ./.github/workflows/build-salt-onedir.yml",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "279:       relenv-version: \"<{ relenv_version }>\"",
          "280:       python-version: \"<{ python_version }>\"",
          "283:   <%- endif %>",
          "",
          "[Removed Lines]",
          "282:   <%- endfor %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja -> .github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     <%- if gh_environment == \"release\" %>",
          "20:       - download-onedir-artifact",
          "21:     <%- else %>",
          "25:     <%- endif %>",
          "26:     uses: ./.github/workflows/test-package-downloads-action.yml",
          "27:     with:",
          "",
          "[Removed Lines]",
          "22:       - build-salt-onedir-linux",
          "23:       - build-salt-onedir-macos",
          "24:       - build-salt-onedir-windows",
          "",
          "[Added Lines]",
          "22:       - build-salt-onedir",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.github/workflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .github/workflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "8:     needs:",
          "9:       - prepare-workflow",
          "12:     uses: ./.github/workflows/test-packages-action-linux.yml",
          "13:     with:",
          "14:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "10:       - build-<{ pkg_type }>-pkgs-onedir",
          "11:       - linux-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "10:       - build-pkgs-onedir",
          "11:       - build-ci-deps",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "41:     needs:",
          "42:       - prepare-workflow",
          "45:     uses: ./.github/workflows/test-packages-action-macos.yml",
          "46:     with:",
          "47:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "43:       - build-macos-pkgs-onedir",
          "44:       - macos-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "43:       - build-pkgs-onedir",
          "44:       - build-ci-deps",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "70:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test-pkg'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "71:     needs:",
          "72:       - prepare-workflow",
          "75:     uses: ./.github/workflows/test-packages-action-windows.yml",
          "76:     with:",
          "77:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "73:       - build-windows-pkgs-onedir",
          "74:       - windows-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "73:       - build-pkgs-onedir",
          "74:       - build-ci-deps",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.github/workflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .github/workflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "13:     needs:",
          "14:       - prepare-workflow",
          "16:     uses: ./.github/workflows/test-action-windows.yml",
          "17:     with:",
          "18:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "15:       - windows-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "15:       - build-ci-deps",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "41:     needs:",
          "42:       - prepare-workflow",
          "44:     uses: ./.github/workflows/test-action-macos.yml",
          "45:     with:",
          "46:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "43:       - macos-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "43:       - build-ci-deps",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "68:     needs:",
          "69:       - prepare-workflow",
          "71:     uses: ./.github/workflows/test-action-linux.yml",
          "72:     with:",
          "73:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "70:       - linux-<{ arch }>-ci-deps",
          "",
          "[Added Lines]",
          "70:       - build-ci-deps",
          "",
          "---------------"
        ],
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:         \"Test Package Downloads\": {",
          "88:             \"template\": \"test-package-downloads-action.yml\",",
          "89:         },",
          "90:     }",
          "91:     test_salt_listing: dict[str, list[tuple[str, ...]]] = {",
          "92:         \"linux\": [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:         \"Build CI Deps\": {",
          "91:             \"template\": \"build-deps-ci-action.yml\",",
          "92:         },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:     test_salt_pkg_downloads_needs_slugs = set()",
          "233:     for platform in test_salt_pkg_downloads_listing:",
          "234:         for _, arch, _ in test_salt_pkg_downloads_listing[platform]:",
          "237:     env = Environment(",
          "238:         block_start_string=\"<%\",",
          "",
          "[Removed Lines]",
          "235:             test_salt_pkg_downloads_needs_slugs.add(f\"{platform}-{arch}-ci-deps\")",
          "",
          "[Added Lines]",
          "238:             test_salt_pkg_downloads_needs_slugs.add(\"build-ci-deps\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47de5e790bbb897c15a5d567cb8f6afe4405cb95",
      "candidate_info": {
        "commit_hash": "47de5e790bbb897c15a5d567cb8f6afe4405cb95",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/47de5e790bbb897c15a5d567cb8f6afe4405cb95",
        "files": [
          "tests/pytests/integration/minion/test_return_retries.py"
        ],
        "message": "Even more reliable pillar_timeout test",
        "before_after_code_files": [
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: @pytest.mark.slow_test",
          "56: def test_pillar_timeout(salt_master_factory):",
          "57:     cmd = \"\"\"",
          "59:     \"\"\".strip()",
          "60:     master_overrides = {",
          "61:         \"ext_pillar\": [",
          "",
          "[Removed Lines]",
          "58:     python -c \"import time; time.sleep(3.0); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "[Added Lines]",
          "58:     python -c \"import time; time.sleep(5); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1655167e7a7be4f13342d5be9e0440d91727a087",
      "candidate_info": {
        "commit_hash": "1655167e7a7be4f13342d5be9e0440d91727a087",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/1655167e7a7be4f13342d5be9e0440d91727a087",
        "files": [
          "requirements/constraints.txt"
        ],
        "message": "Update `pip` constraints to `>= 23.3,< 24.0` due to https://github.com/advisories/GHSA-mq26-g339-26xf\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "cbfc665b288af5f6249d4d465aa02d51ee381c3f",
      "candidate_info": {
        "commit_hash": "cbfc665b288af5f6249d4d465aa02d51ee381c3f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/cbfc665b288af5f6249d4d465aa02d51ee381c3f",
        "files": [
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml"
        ],
        "message": "When running changed tests, always run all changed files tests\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "225464d3b5b8422b2309042b310c6a8b080f0538",
      "candidate_info": {
        "commit_hash": "225464d3b5b8422b2309042b310c6a8b080f0538",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/225464d3b5b8422b2309042b310c6a8b080f0538",
        "files": [
          "tests/pytests/pkg/download/test_pkg_download.py"
        ],
        "message": "Fix the Mac OS onedir package download tests\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:         assert ret.returncode == 0, ret",
          "432:     else:",
          "433:         # We are testing the onedir download",
          "435:         if repo_subpath == \"minor\":",
          "436:             repo_url_base = f\"{root_url}/onedir/{repo_subpath}/{salt_release}\"",
          "437:         else:",
          "",
          "[Removed Lines]",
          "434:         onedir_name = f\"salt-{salt_release}-onedir-darwin-{arch}.tar.xz\"",
          "",
          "[Added Lines]",
          "434:         onedir_name = f\"salt-{salt_release}-onedir-macos-{arch}.tar.xz\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81e15ea6c9bc53d410322a47916a0f106dee66c5",
      "candidate_info": {
        "commit_hash": "81e15ea6c9bc53d410322a47916a0f106dee66c5",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/81e15ea6c9bc53d410322a47916a0f106dee66c5",
        "files": [
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".gitignore",
          "doc/topics/packaging/testing.rst",
          "noxfile.py",
          "pkg/tests/__init__.py",
          "pkg/tests/conftest.py",
          "pkg/tests/downgrade/__init__.py",
          "pkg/tests/downgrade/test_salt_downgrade.py",
          "pkg/tests/download/__init__.py",
          "pkg/tests/download/test_pkg_download.py",
          "pkg/tests/files/check_imports.sls",
          "pkg/tests/files/check_python.py",
          "pkg/tests/integration/__init__.py",
          "pkg/tests/integration/test_check_imports.py",
          "pkg/tests/integration/test_clean_zmq_teardown.py",
          "pkg/tests/integration/test_enabled_disabled.py",
          "pkg/tests/integration/test_help.py",
          "pkg/tests/integration/test_logrotate_config.py",
          "pkg/tests/integration/test_multi_minion.py",
          "pkg/tests/integration/test_pip.py",
          "pkg/tests/integration/test_pip_upgrade.py",
          "pkg/tests/integration/test_pkg.py",
          "pkg/tests/integration/test_python.py",
          "pkg/tests/integration/test_salt_api.py",
          "pkg/tests/integration/test_salt_call.py",
          "pkg/tests/integration/test_salt_exec.py",
          "pkg/tests/integration/test_salt_grains.py",
          "pkg/tests/integration/test_salt_key.py",
          "pkg/tests/integration/test_salt_minion.py",
          "pkg/tests/integration/test_salt_output.py",
          "pkg/tests/integration/test_salt_pillar.py",
          "pkg/tests/integration/test_salt_state_file.py",
          "pkg/tests/integration/test_salt_ufw.py",
          "pkg/tests/integration/test_salt_user.py",
          "pkg/tests/integration/test_ssm.py",
          "pkg/tests/integration/test_systemd_config.py",
          "pkg/tests/integration/test_version.py",
          "pkg/tests/support/__init__.py",
          "pkg/tests/support/coverage/sitecustomize.py",
          "pkg/tests/support/helpers.py",
          "pkg/tests/support/paths.py",
          "pkg/tests/support/runtests.py",
          "pkg/tests/support/sminion.py",
          "pkg/tests/upgrade/__init__.py",
          "pkg/tests/upgrade/test_salt_upgrade.py",
          "tests/pkg/rpm/salt.spec",
          "tests/pytests/pkg/__init__.py",
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/downgrade/__init__.py",
          "tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "tests/pytests/pkg/download/__init__.py",
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tests/pytests/pkg/files/check_imports.sls",
          "tests/pytests/pkg/files/check_python.py",
          "tests/pytests/pkg/integration/__init__.py",
          "tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_clean_zmq_teardown.py",
          "tests/pytests/pkg/integration/test_enabled_disabled.py",
          "tests/pytests/pkg/integration/test_help.py",
          "tests/pytests/pkg/integration/test_logrotate_config.py",
          "tests/pytests/pkg/integration/test_multi_minion.py",
          "tests/pytests/pkg/integration/test_pip.py",
          "tests/pytests/pkg/integration/test_pip_upgrade.py",
          "tests/pytests/pkg/integration/test_pkg.py",
          "tests/pytests/pkg/integration/test_python.py",
          "tests/pytests/pkg/integration/test_salt_api.py",
          "tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_exec.py",
          "tests/pytests/pkg/integration/test_salt_grains.py",
          "tests/pytests/pkg/integration/test_salt_key.py",
          "tests/pytests/pkg/integration/test_salt_minion.py",
          "tests/pytests/pkg/integration/test_salt_output.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py",
          "tests/pytests/pkg/integration/test_salt_ufw.py",
          "tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/pkg/integration/test_ssm.py",
          "tests/pytests/pkg/integration/test_systemd_config.py",
          "tests/pytests/pkg/integration/test_version.py",
          "tests/pytests/pkg/rpm/salt.spec",
          "tests/pytests/pkg/support/__init__.py",
          "tests/pytests/pkg/support/coverage/sitecustomize.py",
          "tests/pytests/pkg/support/helpers.py",
          "tests/pytests/pkg/support/paths.py",
          "tests/pytests/pkg/support/runtests.py",
          "tests/pytests/pkg/support/sminion.py",
          "tests/pytests/pkg/upgrade/__init__.py",
          "tests/pytests/pkg/upgrade/test_salt_upgrade.py",
          "tools/vm.py"
        ],
        "message": "Migrate package tests to the main test suite",
        "before_after_code_files": [
          "noxfile.py||noxfile.py",
          "pkg/tests/conftest.py||tests/pytests/pkg/conftest.py",
          "pkg/tests/downgrade/test_salt_downgrade.py||tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "pkg/tests/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "pkg/tests/integration/test_enabled_disabled.py||tests/pytests/pkg/integration/test_enabled_disabled.py",
          "pkg/tests/integration/test_help.py||tests/pytests/pkg/integration/test_help.py",
          "pkg/tests/integration/test_python.py||tests/pytests/pkg/integration/test_python.py",
          "pkg/tests/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py",
          "pkg/tests/integration/test_version.py||tests/pytests/pkg/integration/test_version.py",
          "pkg/tests/support/helpers.py||tests/pytests/pkg/support/helpers.py",
          "tools/vm.py||tools/vm.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "463:         xml_coverage_file = COVERAGE_OUTPUT_DIR.relative_to(REPO_ROOT) / \"salt.xml\"",
          "464:         html_coverage_dir = COVERAGE_OUTPUT_DIR.relative_to(REPO_ROOT) / \"html\" / \"salt\"",
          "465:         cmd_args = [",
          "467:             \"--include=salt/*\",",
          "468:         ]",
          "",
          "[Removed Lines]",
          "466:             \"--omit=tests/*,pkg/tests/*\",",
          "",
          "[Added Lines]",
          "466:             \"--omit=tests/*,tests/pytests/pkg/*\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "475:         )",
          "476:         cmd_args = [",
          "477:             \"--omit=salt/*\",",
          "479:         ]",
          "480:     else:",
          "481:         json_coverage_file = (",
          "",
          "[Removed Lines]",
          "478:             \"--include=tests/*,pkg/tests/*\",",
          "",
          "[Added Lines]",
          "478:             \"--include=tests/*,tests/pytests/pkg/*\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "484:         xml_coverage_file = COVERAGE_OUTPUT_DIR.relative_to(REPO_ROOT) / \"coverage.xml\"",
          "485:         html_coverage_dir = COVERAGE_OUTPUT_DIR.relative_to(REPO_ROOT) / \"html\" / \"full\"",
          "486:         cmd_args = [",
          "488:         ]",
          "490:     if cli_report:",
          "",
          "[Removed Lines]",
          "487:             \"--include=salt/*,tests/*,pkg/tests/*\",",
          "",
          "[Added Lines]",
          "487:             \"--include=salt/*,tests/*,tests/pytests/pkg/*\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1837:         )",
          "1839:     chunks = {",
          "1841:         \"upgrade\": [",
          "1842:             \"--upgrade\",",
          "1843:             \"--no-uninstall\",",
          "1845:         ],",
          "1846:         \"upgrade-classic\": [",
          "1847:             \"--upgrade\",",
          "1848:             \"--no-uninstall\",",
          "1850:         ],",
          "1851:         \"downgrade\": [",
          "1852:             \"--downgrade\",",
          "1853:             \"--no-uninstall\",",
          "1855:         ],",
          "1856:         \"downgrade-classic\": [",
          "1857:             \"--downgrade\",",
          "1858:             \"--no-uninstall\",",
          "1860:         ],",
          "1861:         \"download-pkgs\": [",
          "1862:             \"--download-pkgs\",",
          "1864:         ],",
          "1865:     }",
          "",
          "[Removed Lines]",
          "1840:         \"install\": [\"pkg/tests/\"],",
          "1844:             \"pkg/tests/upgrade/\",",
          "1849:             \"pkg/tests/upgrade/\",",
          "1854:             \"pkg/tests/downgrade/\",",
          "1859:             \"pkg/tests/downgrade/\",",
          "1863:             \"pkg/tests/download/\",",
          "",
          "[Added Lines]",
          "1840:         \"install\": [\"tests/pytests/pkg/\"],",
          "1844:             \"tests/pytests/pkg/upgrade/\",",
          "1849:             \"tests/pytests/pkg/upgrade/\",",
          "1854:             \"tests/pytests/pkg/downgrade/\",",
          "1859:             \"tests/pytests/pkg/downgrade/\",",
          "1863:             \"tests/pytests/pkg/download/\",",
          "",
          "---------------"
        ],
        "pkg/tests/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: pkg/tests/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: from saltfactories.utils.tempfiles import SaltPillarTree, SaltStateTree",
          "14: import salt.config",
          "16:     CODE_DIR,",
          "17:     TESTS_DIR,",
          "18:     ApiRequest,",
          "",
          "[Removed Lines]",
          "15: from tests.support.helpers import (",
          "",
          "[Added Lines]",
          "15: from tests.pytests.pkg.support.helpers import (",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:     envs = {",
          "210:         \"base\": [",
          "211:             str(file_root),",
          "213:         ],",
          "214:     }",
          "215:     tree = SaltStateTree(envs=envs)",
          "",
          "[Removed Lines]",
          "212:             str(TESTS_DIR / \"files\"),",
          "",
          "[Added Lines]",
          "212:             str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "345:     test_user = False",
          "346:     master_config = install_salt.config_path / \"master\"",
          "347:     if master_config.exists():",
          "349:             data = yaml.safe_load(fp)",
          "350:             if data and \"user\" in data:",
          "351:                 test_user = True",
          "",
          "[Removed Lines]",
          "348:         with open(master_config) as fp:",
          "",
          "[Added Lines]",
          "348:         with salt.utils.files.fopen(master_config) as fp:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "439:                 \"-R\",",
          "440:                 \"salt:salt\",",
          "441:                 str(pathlib.Path(\"/etc\", \"salt\", \"pki\", \"master\")),",
          "443:         )",
          "444:         # The engines_dirs is created in .nox path. We need to set correct perms",
          "445:         # for the user running the Salt Master",
          "447:         file_roots = pathlib.Path(\"/srv/\", \"salt\")",
          "448:         pillar_roots = pathlib.Path(\"/srv/\", \"pillar\")",
          "449:         for _dir in [file_roots, pillar_roots]:",
          "452:     with factory.started(start_timeout=start_timeout):",
          "453:         yield factory",
          "",
          "[Removed Lines]",
          "442:             ]",
          "446:         subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(CODE_DIR.parent / \".nox\")])",
          "450:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)])",
          "",
          "[Added Lines]",
          "442:             ],",
          "443:             check=True,",
          "447:         subprocess.run(",
          "448:             [\"chown\", \"-R\", \"salt:salt\", str(CODE_DIR.parent / \".nox\")], check=False",
          "449:         )",
          "453:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)], check=False)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "504:         file_roots = pathlib.Path(\"/srv/\", \"salt\")",
          "505:         pillar_roots = pathlib.Path(\"/srv/\", \"pillar\")",
          "506:         for _dir in [file_roots, pillar_roots]:",
          "509:     factory.after_terminate(",
          "511:     )",
          "512:     with factory.started(start_timeout=start_timeout):",
          "513:         yield factory",
          "",
          "[Removed Lines]",
          "507:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)])",
          "510:         pytest.helpers.remove_stale_minion_key, salt_master, factory.id",
          "",
          "[Added Lines]",
          "510:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)], check=True)",
          "513:         pytest.helpers.remove_stale_minion_key_pkg, salt_master, factory.id",
          "",
          "---------------"
        ],
        "pkg/tests/downgrade/test_salt_downgrade.py||tests/pytests/pkg/downgrade/test_salt_downgrade.py": [
          "File: pkg/tests/downgrade/test_salt_downgrade.py -> tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import packaging.version",
          "4: import pytest",
          "5: from pytestskipmarkers.utils import platform",
          "",
          "[Removed Lines]",
          "1: import shutil",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/tests/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: pkg/tests/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:     try:",
          "269:         pytest.helpers.download_file(gpg_file_url, downloads_path / gpg_key_name)",
          "271:         pytest.fail(f\"Failed to download {gpg_file_url}: {exc}\")",
          "273:     ret = shell.run(\"rpm\", \"--import\", str(downloads_path / gpg_key_name), check=False)",
          "",
          "[Removed Lines]",
          "270:     except Exception as exc:",
          "",
          "[Added Lines]",
          "270:     except Exception as exc:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "334:         try:",
          "335:             pytest.helpers.download_file(gpg_file_url, downloads_path / gpg_key_name)",
          "337:             pytest.fail(f\"Failed to download {gpg_file_url}: {exc}\")",
          "339:         salt_sources_path = downloads_path / \"salt.list\"",
          "",
          "[Removed Lines]",
          "336:         except Exception as exc:",
          "",
          "[Added Lines]",
          "336:         except Exception as exc:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "385:         try:",
          "386:             pytest.helpers.download_file(onedir_url, onedir_location)",
          "388:             pytest.fail(f\"Failed to download {onedir_url}: {exc}\")",
          "390:         shell.run(\"tar\", \"xvf\", str(onedir_location), \"-C\", str(onedir_extracted))",
          "",
          "[Removed Lines]",
          "387:         except Exception as exc:",
          "",
          "[Added Lines]",
          "387:         except Exception as exc:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "440:         try:",
          "441:             pytest.helpers.download_file(onedir_url, onedir_location)",
          "443:             pytest.fail(f\"Failed to download {onedir_url}: {exc}\")",
          "445:         shell.run(\"tar\", \"xvf\", str(onedir_location), \"-C\", str(onedir_extracted))",
          "",
          "[Removed Lines]",
          "442:         except Exception as exc:",
          "",
          "[Added Lines]",
          "442:         except Exception as exc:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "517:             try:",
          "518:                 pytest.helpers.download_file(onedir_url, onedir_location)",
          "520:                 pytest.fail(f\"Failed to download {onedir_url}: {exc}\")",
          "522:             shell.run(\"unzip\", str(onedir_location), \"-d\", str(onedir_extracted))",
          "",
          "[Removed Lines]",
          "519:             except Exception as exc:",
          "",
          "[Added Lines]",
          "519:             except Exception as exc:  # pylint: disable=broad-except",
          "",
          "---------------"
        ],
        "pkg/tests/integration/test_enabled_disabled.py||tests/pytests/pkg/integration/test_enabled_disabled.py": [
          "File: pkg/tests/integration/test_enabled_disabled.py -> tests/pytests/pkg/integration/test_enabled_disabled.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import pytest",
          "2: from pytestskipmarkers.utils import platform",
          "6: @pytest.mark.skip_on_windows(reason=\"Linux test only\")",
          "",
          "[Removed Lines]",
          "3: from saltfactories.utils.functional import MultiStateResult",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/tests/integration/test_help.py||tests/pytests/pkg/integration/test_help.py": [
          "File: pkg/tests/integration/test_help.py -> tests/pytests/pkg/integration/test_help.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import subprocess",
          "6: def test_help(install_salt):",
          "7:     \"\"\"",
          "",
          "[Removed Lines]",
          "3: from pytestskipmarkers.utils import platform",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/tests/integration/test_python.py||tests/pytests/pkg/integration/test_python.py": [
          "File: pkg/tests/integration/test_python.py -> tests/pytests/pkg/integration/test_python.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import pytest",
          "8: @pytest.fixture",
          "",
          "[Removed Lines]",
          "5: from tests.support.helpers import TESTS_DIR",
          "",
          "[Added Lines]",
          "5: from tests.pytests.pkg.support.helpers import TESTS_DIR",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16: @pytest.mark.parametrize(\"exp_ret,user_arg\", [(1, \"false\"), (0, \"true\")])",
          "17: def test_python_script(install_salt, exp_ret, user_arg, python_script_bin):",
          "18:     ret = install_salt.proc.run(",
          "20:         stdout=subprocess.PIPE,",
          "21:         stderr=subprocess.PIPE,",
          "22:         check=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:             python_script_bin",
          "21:             + [",
          "22:                 str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\" / \"check_python.py\"),",
          "23:                 user_arg,",
          "24:             ]",
          "25:         ),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "29: def test_python_script_exception(install_salt, python_script_bin):",
          "30:     ret = install_salt.proc.run(",
          "32:         stdout=subprocess.PIPE,",
          "33:         stderr=subprocess.PIPE,",
          "34:         check=False,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:             python_script_bin",
          "39:             + [",
          "40:                 str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\" / \"check_python.py\"),",
          "41:                 \"raise\",",
          "42:             ]",
          "43:         ),",
          "",
          "---------------"
        ],
        "pkg/tests/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py": [
          "File: pkg/tests/integration/test_salt_user.py -> tests/pytests/pkg/integration/test_salt_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:     home = \"\"",
          "91:     try:",
          "92:         home = proc.stdout.decode().split(\":\")[5]",
          "94:         pass",
          "95:     assert home == \"/opt/saltstack/salt\"",
          "",
          "[Removed Lines]",
          "93:     except:",
          "",
          "[Added Lines]",
          "93:     except Exception:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:         for group in proc.stdout.decode().split(\" \"):",
          "107:             if \"salt\" in group:",
          "108:                 in_group = True",
          "110:         pass",
          "111:     assert in_group is True",
          "",
          "[Removed Lines]",
          "109:     except:",
          "",
          "[Added Lines]",
          "109:     except Exception:  # pylint: disable=broad-except",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:     try:",
          "125:         shell = proc.stdout.decode().split(\":\")[6].strip()",
          "126:         shell_exists = pathlib.Path(shell).exists()",
          "128:         pass",
          "129:     assert shell_exists is True",
          "",
          "[Removed Lines]",
          "127:     except:",
          "",
          "[Added Lines]",
          "127:     except Exception:  # pylint: disable=broad-except",
          "",
          "---------------"
        ],
        "pkg/tests/integration/test_version.py||tests/pytests/pkg/integration/test_version.py": [
          "File: pkg/tests/integration/test_version.py -> tests/pytests/pkg/integration/test_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     ret.stdout.matcher.fnmatch_lines([\"*Salt Version:*\"])",
          "33:     py_version = subprocess.run(",
          "34:         [str(python_bin), \"--version\"],",
          "35:         stdout=subprocess.PIPE,",
          "36:         stderr=subprocess.PIPE,",
          "37:     ).stdout",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:         check=True,",
          "",
          "---------------"
        ],
        "pkg/tests/support/helpers.py||tests/pytests/pkg/support/helpers.py": [
          "File: pkg/tests/support/helpers.py -> tests/pytests/pkg/support/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import psutil",
          "17: import pytest",
          "18: import requests",
          "19: from pytestshellutils.shell import DaemonImpl, Subprocess",
          "20: from pytestshellutils.utils.processes import (",
          "21:     ProcessResult,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import saltfactories.cli",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: )",
          "25: from pytestskipmarkers.utils import platform",
          "26: from saltfactories.bases import SystemdSaltDaemonImpl",
          "28: from saltfactories.daemons import api, master, minion",
          "29: from saltfactories.utils import cli_scripts",
          "31: try:",
          "32:     import crypt",
          "",
          "[Removed Lines]",
          "27: from saltfactories.cli import call, key, salt",
          "",
          "[Added Lines]",
          "28: from saltfactories.cli import call, key",
          "32: import salt.utils.files",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41: except ImportError:",
          "42:     HAS_PWD = False",
          "45: CODE_DIR = TESTS_DIR.parent",
          "48: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "44: TESTS_DIR = pathlib.Path(__file__).resolve().parent.parent",
          "46: ARTIFACTS_DIR = CODE_DIR / \"artifacts\"",
          "",
          "[Added Lines]",
          "47: TESTS_DIR = pathlib.Path(__file__).resolve().parent.parent.parent.parent",
          "49: ARTIFACTS_DIR = CODE_DIR / \"artifacts\" / \"pkg\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "420:                 # expects unless we do it via a batch file",
          "421:                 batch_file = pathlib.Path(pkg).parent / \"install_msi.cmd\"",
          "422:                 batch_content = f'msiexec /qn /i \"{str(pkg)}\" START_MINION=\"\"\\n'",
          "424:                     fp.write(batch_content)",
          "425:                 # Now run the batch file",
          "426:                 ret = self.proc.run(\"cmd.exe\", \"/c\", str(batch_file))",
          "",
          "[Removed Lines]",
          "423:                 with open(batch_file, \"w\") as fp:",
          "",
          "[Added Lines]",
          "426:                 with salt.utils.files.fopen(batch_file, \"w\") as fp:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "618:                 f\"https://repo.saltproject.io/{root_url}{distro_name}/{self.distro_version}/{arch}/{major_ver}/{gpg_key}\",",
          "619:                 f\"/etc/apt/keyrings/{gpg_dest}\",",
          "620:             )",
          "622:                 pathlib.Path(\"/etc\", \"apt\", \"sources.list.d\", \"salt.list\"), \"w\"",
          "623:             ) as fp:",
          "624:                 fp.write(",
          "",
          "[Removed Lines]",
          "621:             with open(",
          "",
          "[Added Lines]",
          "624:             with salt.utils.files.fopen(",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "665:             # Let's not check the returncode if this is the case",
          "666:             if not (",
          "667:                 downgrade",
          "670:             ):",
          "671:                 self._check_retcode(ret)",
          "672:             if downgrade:",
          "",
          "[Removed Lines]",
          "668:                 and not packaging.version.parse(self.prev_version)",
          "669:                 >= packaging.version.parse(\"3006.0\")",
          "",
          "[Added Lines]",
          "671:                 and packaging.version.parse(self.prev_version)",
          "672:                 < packaging.version.parse(\"3006.0\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "710:                 # expects unless we do it via a batch file",
          "711:                 batch_file = pkg_path.parent / \"install_msi.cmd\"",
          "712:                 batch_content = f'msiexec /qn /i {str(pkg_path)} START_MINION=\"\"'",
          "714:                     fp.write(batch_content)",
          "715:                 # Now run the batch file",
          "716:                 ret = self.proc.run(\"cmd.exe\", \"/c\", str(batch_file))",
          "",
          "[Removed Lines]",
          "713:                 with open(batch_file, \"w\") as fp:",
          "",
          "[Added Lines]",
          "716:                 with salt.utils.files.fopen(batch_file, \"w\") as fp:",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "814:             ret = self.proc.run(self.pkg_mngr, self.rm_pkg, \"-y\", *self.salt_pkgs)",
          "815:             self._check_retcode(ret)",
          "851:     def write_launchd_conf(self, service):",
          "852:         service_name = f\"com.saltstack.salt.{service}\"",
          "853:         ret = self.proc.run(\"launchctl\", \"list\", service_name)",
          "",
          "[Removed Lines]",
          "817:     def assert_uninstalled(self):",
          "818:         \"\"\"",
          "819:         Assert that the paths in /opt/saltstack/ were correctly",
          "820:         removed or not removed",
          "821:         \"\"\"",
          "822:         return",
          "823:         if platform.is_windows():",
          "824:             # I'm not sure where the /opt/saltstack path is coming from",
          "825:             # This is the path we're using to test windows",
          "826:             opt_path = pathlib.Path(os.getenv(\"LocalAppData\"), \"salt\", \"pypath\")",
          "827:         else:",
          "828:             opt_path = pathlib.Path(os.sep, \"opt\", \"saltstack\", \"salt\", \"pypath\")",
          "829:         if not opt_path.exists():",
          "830:             if platform.is_windows():",
          "831:                 assert not opt_path.parent.exists()",
          "832:             else:",
          "833:                 assert not opt_path.parent.parent.exists()",
          "834:         else:",
          "835:             opt_path_contents = list(opt_path.rglob(\"*\"))",
          "836:             if not opt_path_contents:",
          "837:                 pytest.fail(",
          "838:                     f\"The path '{opt_path}' exists but there are no files in it.\"",
          "839:                 )",
          "840:             else:",
          "841:                 for path in list(opt_path_contents):",
          "842:                     if path.name in (\".installs.json\", \"__pycache__\"):",
          "843:                         opt_path_contents.remove(path)",
          "844:                 if opt_path_contents:",
          "845:                     pytest.fail(",
          "846:                         \"The test left some files behind: {}\".format(",
          "847:                             \", \".join([str(p) for p in opt_path_contents])",
          "848:                         )",
          "849:                     )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "953:     def __exit__(self, *_):",
          "954:         if not self.no_uninstall:",
          "955:             self.uninstall()",
          "959: class PkgSystemdSaltDaemonImpl(SystemdSaltDaemonImpl):",
          "",
          "[Removed Lines]",
          "956:             self.assert_uninstalled()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1335:             factory_class=SaltApi, salt_pkg_install=self.salt_pkg_install, **kwargs",
          "1336:         )",
          "1339:         return super().salt_key_cli(",
          "1343:         )",
          "1346:         return super().salt_cli(",
          "1350:         )",
          "",
          "[Removed Lines]",
          "1338:     def salt_key_cli(self, **factory_class_kwargs):",
          "1340:             factory_class=SaltKey,",
          "1341:             salt_pkg_install=self.salt_pkg_install,",
          "1345:     def salt_cli(self, **factory_class_kwargs):",
          "1347:             factory_class=SaltCli,",
          "1348:             salt_pkg_install=self.salt_pkg_install,",
          "",
          "[Added Lines]",
          "1306:     def salt_key_cli(self, factory_class=None, **factory_class_kwargs):",
          "1307:         if not factory_class:",
          "1308:             factory_class = SaltKey",
          "1309:         factory_class_kwargs[\"salt_pkg_install\"] = self.salt_pkg_install",
          "1311:             factory_class=factory_class,",
          "1315:     def salt_cli(self, factory_class=None, **factory_class_kwargs):",
          "1316:         if not factory_class:",
          "1317:             factory_class = SaltCli",
          "1318:         factory_class_kwargs[\"salt_pkg_install\"] = self.salt_pkg_install",
          "1320:             factory_class=factory_class,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1403:             \"salt-minion\", self.salt_pkg_install.binary_paths[\"minion\"]",
          "1404:         )",
          "1407:         return super().salt_call_cli(",
          "1411:         )",
          "",
          "[Removed Lines]",
          "1406:     def salt_call_cli(self, **factory_class_kwargs):",
          "1408:             factory_class=SaltCall,",
          "1409:             salt_pkg_install=self.salt_pkg_install,",
          "",
          "[Added Lines]",
          "1378:     def salt_call_cli(self, factory_class=None, **factory_class_kwargs):",
          "1379:         if not factory_class:",
          "1380:             factory_class = SaltCall",
          "1381:         factory_class_kwargs[\"salt_pkg_install\"] = self.salt_pkg_install",
          "1383:             factory_class=factory_class,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1455: @attr.s(kw_only=True, slots=True)",
          "1457:     \"\"\"",
          "1458:     Subclassed just to tweak the binary paths if needed.",
          "1459:     \"\"\"",
          "1461:     def __attrs_post_init__(self):",
          "1462:         self.script_name = \"salt\"",
          "1466: @attr.s(kw_only=True, slots=True)",
          "",
          "[Removed Lines]",
          "1456: class SaltCli(PkgMixin, salt.SaltCli):",
          "1463:         salt.SaltCli.__attrs_post_init__(self)",
          "",
          "[Added Lines]",
          "1430: class SaltCli(PkgMixin, saltfactories.cli.salt.SaltCli):",
          "1437:         saltfactories.cli.salt.SaltCli.__attrs_post_init__(self)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1588: @pytest.helpers.register",
          "1590:     key_path = os.path.join(master.config[\"pki_dir\"], \"minions\", minion_id)",
          "1591:     if os.path.exists(key_path):",
          "1592:         os.unlink(key_path)",
          "",
          "[Removed Lines]",
          "1589: def remove_stale_minion_key(master, minion_id):",
          "",
          "[Added Lines]",
          "1563: def remove_stale_minion_key_pkg(master, minion_id):",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1624:     # NOTE the stream=True parameter below",
          "1625:     with requests.get(url, stream=True, auth=auth) as r:",
          "1626:         r.raise_for_status()",
          "1628:             for chunk in r.iter_content(chunk_size=8192):",
          "1629:                 if chunk:",
          "1630:                     f.write(chunk)",
          "",
          "[Removed Lines]",
          "1627:         with open(dest, \"wb\") as f:",
          "",
          "[Added Lines]",
          "1601:         with salt.utils.files.fopen(dest, \"wb\") as f:",
          "",
          "---------------"
        ],
        "tools/vm.py||tools/vm.py": [
          "File: tools/vm.py -> tools/vm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1315:             \"--include\",",
          "1316:             \"artifacts/salt\",",
          "1317:             \"--include\",",
          "1319:             # But we also want to exclude all other entries under artifacts/",
          "1320:             \"--exclude\",",
          "1321:             \"artifacts/*\",",
          "",
          "[Removed Lines]",
          "1318:             \"pkg/artifacts/*\",",
          "",
          "[Added Lines]",
          "1318:             \"artifacts/pkg/*\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8da836a4264117da6f00589053a43bd57c3785fa",
      "candidate_info": {
        "commit_hash": "8da836a4264117da6f00589053a43bd57c3785fa",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/8da836a4264117da6f00589053a43bd57c3785fa",
        "files": [
          "salt/netapi/rest_tornado/saltnado.py"
        ],
        "message": "Destroy event_listener when app is no-longer used",
        "before_after_code_files": [
          "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py": [
          "File: salt/netapi/rest_tornado/saltnado.py -> salt/netapi/rest_tornado/saltnado.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "513:         self.timeout_futures()",
          "514:         # clear local_client objects to disconnect event publisher's IOStream connections",
          "515:         del self.saltclients",
          "518:     def on_connection_close(self):",
          "519:         \"\"\"",
          "",
          "[Removed Lines]",
          "516:         self.application.event_listener.destroy()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2bafd5b34e715325bd995570705d7ab354bd5805",
      "candidate_info": {
        "commit_hash": "2bafd5b34e715325bd995570705d7ab354bd5805",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/2bafd5b34e715325bd995570705d7ab354bd5805",
        "files": [
          "changelog/65830.security.md",
          "requirements/static/ci/py3.10/cloud.txt",
          "requirements/static/ci/py3.10/darwin.txt",
          "requirements/static/ci/py3.10/freebsd.txt",
          "requirements/static/ci/py3.10/lint.txt",
          "requirements/static/ci/py3.10/linux.txt",
          "requirements/static/ci/py3.10/windows.txt",
          "requirements/static/ci/py3.11/cloud.txt",
          "requirements/static/ci/py3.11/darwin.txt",
          "requirements/static/ci/py3.11/freebsd.txt",
          "requirements/static/ci/py3.11/lint.txt",
          "requirements/static/ci/py3.11/linux.txt",
          "requirements/static/ci/py3.11/windows.txt",
          "requirements/static/ci/py3.12/cloud.txt",
          "requirements/static/ci/py3.12/darwin.txt",
          "requirements/static/ci/py3.12/freebsd.txt",
          "requirements/static/ci/py3.12/lint.txt",
          "requirements/static/ci/py3.12/linux.txt",
          "requirements/static/ci/py3.12/windows.txt",
          "requirements/static/ci/py3.7/cloud.txt",
          "requirements/static/ci/py3.7/freebsd.txt",
          "requirements/static/ci/py3.7/lint.txt",
          "requirements/static/ci/py3.7/linux.txt",
          "requirements/static/ci/py3.7/windows.txt",
          "requirements/static/ci/py3.8/cloud.txt",
          "requirements/static/ci/py3.8/freebsd.txt",
          "requirements/static/ci/py3.8/lint.txt",
          "requirements/static/ci/py3.8/linux.txt",
          "requirements/static/ci/py3.8/windows.txt",
          "requirements/static/ci/py3.9/cloud.txt",
          "requirements/static/ci/py3.9/darwin.txt",
          "requirements/static/ci/py3.9/freebsd.txt",
          "requirements/static/ci/py3.9/lint.txt",
          "requirements/static/ci/py3.9/linux.txt",
          "requirements/static/ci/py3.9/windows.txt",
          "requirements/static/pkg/py3.10/darwin.txt",
          "requirements/static/pkg/py3.10/windows.txt",
          "requirements/static/pkg/py3.11/darwin.txt",
          "requirements/static/pkg/py3.11/windows.txt",
          "requirements/static/pkg/py3.12/darwin.txt",
          "requirements/static/pkg/py3.12/windows.txt",
          "requirements/static/pkg/py3.7/windows.txt",
          "requirements/static/pkg/py3.8/windows.txt",
          "requirements/static/pkg/py3.9/darwin.txt",
          "requirements/static/pkg/py3.9/windows.txt"
        ],
        "message": "Bump to `gitpython==3.1.41` due to https://github.com/advisories/GHSA-2mqj-m65w-jghx\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "b120534bdcd51645d16ba6b18e08db52103a7107",
      "candidate_info": {
        "commit_hash": "b120534bdcd51645d16ba6b18e08db52103a7107",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/b120534bdcd51645d16ba6b18e08db52103a7107",
        "files": [
          "tests/pytests/unit/conftest.py"
        ],
        "message": "Set the right path for the config file\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/unit/conftest.py||tests/pytests/unit/conftest.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/conftest.py||tests/pytests/unit/conftest.py": [
          "File: tests/pytests/unit/conftest.py -> tests/pytests/unit/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import pytest",
          "3: import salt.config",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import os",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:         dirpath.mkdir(parents=True)",
          "21:         opts[name] = str(dirpath)",
          "22:     opts[\"log_file\"] = \"logs/minion.log\"",
          "23:     return opts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     opts[\"conf_file\"] = os.path.join(opts[\"conf_dir\"], \"minion\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37:         dirpath.mkdir(parents=True)",
          "38:         opts[name] = str(dirpath)",
          "39:     opts[\"log_file\"] = \"logs/master.log\"",
          "40:     return opts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:     opts[\"conf_file\"] = os.path.join(opts[\"conf_dir\"], \"master\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "55:         dirpath.mkdir(parents=True)",
          "56:         opts[name] = str(dirpath)",
          "57:     opts[\"log_file\"] = \"logs/syndic.log\"",
          "58:     return opts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:     opts[\"conf_file\"] = os.path.join(opts[\"conf_dir\"], \"syndic\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e75bc47c0007b882aa0b93f5e728de97043d739c",
      "candidate_info": {
        "commit_hash": "e75bc47c0007b882aa0b93f5e728de97043d739c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/e75bc47c0007b882aa0b93f5e728de97043d739c",
        "files": [
          "tests/pytests/functional/states/file/test_accumulated.py",
          "tests/pytests/integration/states/test_file.py"
        ],
        "message": "Migrate test to functional\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/functional/states/file/test_accumulated.py||tests/pytests/functional/states/file/test_accumulated.py",
          "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/functional/states/file/test_accumulated.py||tests/pytests/functional/states/file/test_accumulated.py": [
          "File: tests/pytests/functional/states/file/test_accumulated.py -> tests/pytests/functional/states/file/test_accumulated.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:     for item in (\"\", \"bar\", \"baz\"):",
          "126:         block_contents.remove(item)",
          "127:     assert block_contents == []",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130: def test_issue_60426(modules, tmp_path, state_tree):",
          "131:     target_path = tmp_path.joinpath(\"etc/foo/bar\")",
          "132:     jinja_name = \"foo_bar\"",
          "133:     jinja_contents = (",
          "134:         \"{% for item in accumulator['accumulated configstuff'] %}{{ item }}{% endfor %}\"",
          "135:     )",
          "137:     sls_name = \"issue-60426\"",
          "138:     sls_contents = f\"\"\"",
          "139:     configuration file:",
          "140:       file.managed:",
          "141:         - name: {target_path}",
          "142:         - source: salt://foo_bar.jinja",
          "143:         - template: jinja",
          "144:         - makedirs: True",
          "146:     accumulated configstuff:",
          "147:       file.accumulated:",
          "148:         - filename: {target_path}",
          "149:         - text:",
          "150:           - some",
          "151:           - good",
          "152:           - stuff",
          "153:         - watch_in:",
          "154:           - configuration file",
          "155:     \"\"\"",
          "157:     sls_tempfile = pytest.helpers.temp_file(",
          "158:         f\"{sls_name}.sls\", directory=state_tree, contents=sls_contents",
          "159:     )",
          "161:     jinja_tempfile = pytest.helpers.temp_file(",
          "162:         f\"{jinja_name}.jinja\", directory=state_tree, contents=jinja_contents",
          "163:     )",
          "165:     with sls_tempfile, jinja_tempfile:",
          "166:         ret = modules.state.apply(sls_name)",
          "167:         for state_run in ret:",
          "168:             assert state_run.result is True",
          "169:         # Check to make sure the file was created",
          "170:         assert target_path.is_file()",
          "171:         # The type of new line, ie, `\\n` vs `\\r\\n` is not important",
          "172:         assert target_path.read_text() == \"somegoodstuff\"",
          "174:     sls_contents = f\"\"\"",
          "175:     configuration file:",
          "176:       file.managed:",
          "177:         - name: {target_path}",
          "178:         - source: salt://foo_bar.jinja",
          "179:         - template: jinja",
          "180:         - makedirs: True",
          "182:     accumulated configstuff:",
          "183:       file.accumulated:",
          "184:         - filename: {target_path}",
          "185:         - text:",
          "186:           - some",
          "187:           - more",
          "188:           - good",
          "189:           - stuff",
          "190:         - watch_in:",
          "191:           - file: configuration file",
          "192:     \"\"\"",
          "194:     sls_tempfile = pytest.helpers.temp_file(",
          "195:         f\"{sls_name}.sls\", directory=state_tree, contents=sls_contents",
          "196:     )",
          "197:     jinja_tempfile = pytest.helpers.temp_file(",
          "198:         f\"{jinja_name}.jinja\", directory=state_tree, contents=jinja_contents",
          "199:     )",
          "201:     with sls_tempfile, jinja_tempfile:",
          "202:         ret = modules.state.apply(sls_name)",
          "203:         for state_run in ret:",
          "204:             assert state_run.result is True",
          "205:         # Check to make sure the file was created",
          "206:         assert target_path.is_file()",
          "207:         # The type of new line, ie, `\\n` vs `\\r\\n` is not important",
          "208:         assert target_path.read_text() == \"somemoregoodstuff\"",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py": [
          "File: tests/pytests/integration/states/test_file.py -> tests/pytests/integration/states/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "384:         assert target_path.read_text().replace(\"\\r\\n\", \"\\n\") == expected_content",
          "481: @pytest.fixture",
          "482: def _check_min_patch_version(shell):",
          "483:     min_patch_ver = \"2.6\"",
          "",
          "[Removed Lines]",
          "387: def test_issue_60426(",
          "388:     salt_master,",
          "389:     salt_call_cli,",
          "390:     tmp_path,",
          "391: ):",
          "392:     target_path = tmp_path.joinpath(\"etc/foo/bar\")",
          "393:     jinja_name = \"foo_bar\"",
          "394:     jinja_contents = (",
          "395:         \"{% for item in accumulator['accumulated configstuff'] %}{{ item }}{% endfor %}\"",
          "396:     )",
          "398:     sls_name = \"issue-60426\"",
          "399:     sls_contents = \"\"\"",
          "400:     configuration file:",
          "401:       file.managed:",
          "402:         - name: {target_path}",
          "403:         - source: salt://foo_bar.jinja",
          "404:         - template: jinja",
          "405:         - makedirs: True",
          "407:     accumulated configstuff:",
          "408:       file.accumulated:",
          "409:         - filename: {target_path}",
          "410:         - text:",
          "411:           - some",
          "412:           - good",
          "413:           - stuff",
          "414:         - watch_in:",
          "415:           - configuration file",
          "416:     \"\"\".format(",
          "417:         target_path=target_path",
          "418:     )",
          "420:     sls_tempfile = salt_master.state_tree.base.temp_file(",
          "421:         \"{}.sls\".format(sls_name), sls_contents",
          "422:     )",
          "424:     jinja_tempfile = salt_master.state_tree.base.temp_file(",
          "425:         \"{}.jinja\".format(jinja_name), jinja_contents",
          "426:     )",
          "428:     with sls_tempfile, jinja_tempfile:",
          "429:         ret = salt_call_cli.run(\"state.apply\", sls_name)",
          "430:         assert ret.returncode == 0",
          "431:         assert ret.data",
          "432:         state_run = next(iter(ret.data.values()))",
          "433:         assert state_run[\"result\"] is True",
          "434:         # Check to make sure the file was created",
          "435:         assert target_path.is_file()",
          "436:         # The type of new line, ie, `\\n` vs `\\r\\n` is not important",
          "437:         assert target_path.read_text() == \"somegoodstuff\"",
          "439:     sls_name = \"issue-60426\"",
          "440:     sls_contents = \"\"\"",
          "441:     configuration file:",
          "442:       file.managed:",
          "443:         - name: {target_path}",
          "444:         - source: salt://foo_bar.jinja",
          "445:         - template: jinja",
          "446:         - makedirs: True",
          "448:     accumulated configstuff:",
          "449:       file.accumulated:",
          "450:         - filename: {target_path}",
          "451:         - text:",
          "452:           - some",
          "453:           - more",
          "454:           - good",
          "455:           - stuff",
          "456:         - watch_in:",
          "457:           - file: configuration file",
          "458:     \"\"\".format(",
          "459:         target_path=target_path",
          "460:     )",
          "462:     sls_tempfile = salt_master.state_tree.base.temp_file(",
          "463:         \"{}.sls\".format(sls_name), sls_contents",
          "464:     )",
          "465:     jinja_tempfile = salt_master.state_tree.base.temp_file(",
          "466:         \"{}.jinja\".format(jinja_name), jinja_contents",
          "467:     )",
          "469:     with sls_tempfile, jinja_tempfile:",
          "470:         ret = salt_call_cli.run(\"state.apply\", sls_name)",
          "471:         assert ret.returncode == 0",
          "472:         assert ret.data",
          "473:         state_run = next(iter(ret.data.values()))",
          "474:         assert state_run[\"result\"] is True",
          "475:         # Check to make sure the file was created",
          "476:         assert target_path.is_file()",
          "477:         # The type of new line, ie, `\\n` vs `\\r\\n` is not important",
          "478:         assert target_path.read_text() == \"somemoregoodstuff\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "535c7de7c7ca42ad01b33e69baca2050806ac9bb",
      "candidate_info": {
        "commit_hash": "535c7de7c7ca42ad01b33e69baca2050806ac9bb",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/535c7de7c7ca42ad01b33e69baca2050806ac9bb",
        "files": [
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py"
        ],
        "message": "update photon paths to use their $releasever string",
        "before_after_code_files": [
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256: ):",
          "257:     arch = os.environ.get(\"SALT_REPO_ARCH\") or \"x86_64\"",
          "259:     if repo_subpath == \"minor\":",
          "260:         repo_url_base = (",
          "261:             f\"{root_url}/{os_name}/{os_version}/{arch}/{repo_subpath}/{salt_release}\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:     if os_name == \"photon\":",
          "260:         os_version = f\"{os_version}.0\"",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:         assert incoming is not None",
          "381:         assert repo_path is not None",
          "382:         assert key_id is not None",
          "383:     display_name = f\"{distro.capitalize()} {distro_version}\"",
          "384:     if distro_version not in _rpm_distro_info[distro]:",
          "385:         ctx.error(f\"Support for {display_name} is missing.\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "384:     if distro == \"photon\":",
          "385:         distro_version = f\"{distro_version}.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e66e036ba817af0ac6454cff127f773ff7a90b3a",
      "candidate_info": {
        "commit_hash": "e66e036ba817af0ac6454cff127f773ff7a90b3a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/e66e036ba817af0ac6454cff127f773ff7a90b3a",
        "files": [
          ".github/actions/download-artifact/action.yml",
          ".github/actions/upload-artifact/action.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/nightly.yml.jinja"
        ],
        "message": "Fix some more places where we need to use ``actions/{upload,download}-artifact@v3``\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/nightly.yml.jinja||.github/workflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .github/workflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "170:           cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}",
          "172:       - name: Download Repository Artifact",
          "174:         with:",
          "175:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-<{ gh_environment }>-repo",
          "176:           path: repo/",
          "",
          "[Removed Lines]",
          "173:         uses: actions/download-artifact@v4",
          "",
          "[Added Lines]",
          "173:         uses: actions/download-artifact@v3",
          "174:         # This needs to be actions/download-artifact@v3 because we upload multiple artifacts",
          "175:         # under the same name something that actions/upload-artifact@v4 does not do.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4919fbfc606ad4ccd7add287ab89cd20b6b6fe8e",
      "candidate_info": {
        "commit_hash": "4919fbfc606ad4ccd7add287ab89cd20b6b6fe8e",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4919fbfc606ad4ccd7add287ab89cd20b6b6fe8e",
        "files": [
          "requirements/static/ci/linux.in",
          "requirements/static/ci/py3.10/lint.txt",
          "requirements/static/ci/py3.10/linux.txt",
          "requirements/static/ci/py3.11/lint.txt",
          "requirements/static/ci/py3.11/linux.txt",
          "requirements/static/ci/py3.12/lint.txt",
          "requirements/static/ci/py3.12/linux.txt",
          "requirements/static/ci/py3.7/lint.txt",
          "requirements/static/ci/py3.7/linux.txt",
          "requirements/static/ci/py3.8/lint.txt",
          "requirements/static/ci/py3.8/linux.txt",
          "requirements/static/ci/py3.9/lint.txt",
          "requirements/static/ci/py3.9/linux.txt"
        ],
        "message": "Bump to `ansible==9.1.0` and `ansible-core==2.16.2`\n\nDue to https://github.com/advisories/GHSA-jpvw-p8pr-9g2x and https://github.com/advisories/GHSA-7j69-qfc3-2fq9\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "requirements/static/ci/linux.in||requirements/static/ci/linux.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "requirements/static/ci/linux.in||requirements/static/ci/linux.in": [
          "File: requirements/static/ci/linux.in -> requirements/static/ci/linux.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: pyiface",
          "5: pygit2>=1.10.1",
          "6: pymysql>=1.0.2",
          "9: twilio",
          "10: python-telegram-bot>=13.7",
          "11: yamllint",
          "",
          "[Removed Lines]",
          "7: ansible>=4.4.0; python_version < '3.9'",
          "8: ansible>=7.0.0; python_version >= '3.9'",
          "",
          "[Added Lines]",
          "7: ansible>=9.1.0; python_version >= '3.10'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "689696858bddaefc655d1d94cd81e218662bef12",
      "candidate_info": {
        "commit_hash": "689696858bddaefc655d1d94cd81e218662bef12",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/689696858bddaefc655d1d94cd81e218662bef12",
        "files": [
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/files/check_imports.sls",
          "tests/pytests/pkg/files/check_python.py",
          "tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_pip.py",
          "tests/pytests/pkg/integration/test_python.py",
          "tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/pkg/support/__init__.py",
          "tests/pytests/pkg/support/coverage/sitecustomize.py",
          "tests/pytests/pkg/support/helpers.py",
          "tests/pytests/pkg/support/paths.py",
          "tests/pytests/pkg/support/runtests.py",
          "tests/pytests/pkg/support/sminion.py",
          "tests/support/pkg.py"
        ],
        "message": "Reduce duplication, de-clutter, simplify\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/files/check_imports.sls||tests/pytests/pkg/files/check_imports.sls",
          "tests/pytests/pkg/files/check_python.py||tests/pytests/pkg/files/check_python.py",
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_pip.py||tests/pytests/pkg/integration/test_pip.py",
          "tests/pytests/pkg/integration/test_python.py||tests/pytests/pkg/integration/test_python.py",
          "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/pkg/support/coverage/sitecustomize.py||tests/pytests/pkg/support/coverage/sitecustomize.py",
          "tests/pytests/pkg/support/paths.py||tests/pytests/pkg/support/paths.py",
          "tests/pytests/pkg/support/runtests.py||tests/pytests/pkg/support/runtests.py",
          "tests/pytests/pkg/support/sminion.py||tests/pytests/pkg/support/sminion.py",
          "tests/pytests/pkg/support/helpers.py||tests/support/pkg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: tests/pytests/pkg/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: from saltfactories.utils.tempfiles import SaltPillarTree, SaltStateTree",
          "14: import salt.config",
          "25: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "15: from tests.pytests.pkg.support.helpers import (",
          "16:     CODE_DIR,",
          "17:     TESTS_DIR,",
          "18:     ApiRequest,",
          "19:     SaltMaster,",
          "20:     SaltMasterWindows,",
          "21:     SaltPkgInstall,",
          "22:     TestUser,",
          "23: )",
          "",
          "[Added Lines]",
          "15: from tests.conftest import CODE_DIR, TESTS_DIR",
          "16: from tests.support.pkg import ApiRequest, SaltMaster, SaltMasterWindows, SaltPkgInstall",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305: @pytest.fixture(scope=\"session\")",
          "307:     \"\"\"",
          "308:     Start up a master",
          "309:     \"\"\"",
          "",
          "[Removed Lines]",
          "306: def salt_master(salt_factories, install_salt, state_tree, pillar_tree):",
          "",
          "[Added Lines]",
          "299: def salt_master(",
          "300:     salt_factories, install_salt, state_tree, pillar_tree, pkg_tests_account",
          "301: ):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "327:         \"pillar_roots\": pillar_tree.as_dict(),",
          "328:         \"rest_cherrypy\": {\"port\": 8000, \"disable_ssl\": True},",
          "329:         \"netapi_enable_clients\": [\"local\"],",
          "331:         \"fips_mode\": FIPS_TESTRUN,",
          "332:         \"open_mode\": True,",
          "333:     }",
          "",
          "[Removed Lines]",
          "330:         \"external_auth\": {\"auto\": {\"saltdev\": [\".*\"]}},",
          "",
          "[Added Lines]",
          "325:         \"external_auth\": {",
          "326:             \"auto\": {",
          "327:                 pkg_tests_account.username: [",
          "328:                     \".*\",",
          "329:                 ],",
          "330:             },",
          "331:         },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "520:     return salt_minion.salt_call_cli()",
          "526:         yield account",
          "",
          "[Removed Lines]",
          "523: @pytest.fixture(scope=\"module\")",
          "524: def test_account(salt_call_cli):",
          "525:     with TestUser(salt_call_cli=salt_call_cli) as account:",
          "",
          "[Added Lines]",
          "524: @pytest.fixture(scope=\"session\")",
          "525: def pkg_tests_account():",
          "526:     with pytest.helpers.create_account() as account:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "559: @pytest.fixture(scope=\"module\")",
          "562:         yield session",
          "",
          "[Removed Lines]",
          "560: def api_request(test_account, salt_api):",
          "561:     with ApiRequest(salt_api=salt_api, test_account=test_account) as session:",
          "",
          "[Added Lines]",
          "561: def api_request(pkg_tests_account, salt_api):",
          "562:     with ApiRequest(",
          "563:         port=salt_api.config[\"rest_cherrypy\"][\"port\"], account=pkg_tests_account",
          "564:     ) as session:",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/files/check_imports.sls||tests/pytests/pkg/files/check_imports.sls": [
          "File: tests/pytests/pkg/files/check_imports.sls -> tests/pytests/pkg/files/check_imports.sls",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/files/check_python.py||tests/pytests/pkg/files/check_python.py": [
          "File: tests/pytests/pkg/files/check_python.py -> tests/pytests/pkg/files/check_python.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: log = logging.getLogger(__name__)",
          "14:     \"\"\"",
          "15:     Test imports",
          "16:     \"\"\"",
          "18:     assert ret.returncode == 0",
          "19:     assert ret.data",
          "20:     result = MultiStateResult(raw=ret.data)",
          "",
          "[Removed Lines]",
          "13: def test_check_imports(salt_cli, salt_minion):",
          "17:     ret = salt_cli.run(\"state.sls\", \"check_imports\", minion_tgt=salt_minion.id)",
          "",
          "[Added Lines]",
          "13: CHECK_IMPORTS_SLS_CONTENTS = \"\"\"",
          "14: #!py",
          "15: import importlib",
          "17: def run():",
          "18:     config = {}",
          "19:     for test_import in [",
          "20:         'templates', 'platform', 'cli', 'executors', 'config', 'wheel', 'netapi',",
          "21:         'cache', 'proxy', 'transport', 'metaproxy', 'modules', 'tokens', 'matchers',",
          "22:         'acl', 'auth', 'log', 'engines', 'client', 'returners', 'runners', 'tops',",
          "23:         'output', 'daemons', 'thorium', 'renderers', 'states', 'cloud', 'roster',",
          "24:         'beacons', 'pillar', 'spm', 'utils', 'sdb', 'fileserver', 'defaults',",
          "25:         'ext', 'queues', 'grains', 'serializers'",
          "26:     ]:",
          "27:         try:",
          "28:             import_name = \"salt.{}\".format(test_import)",
          "29:             importlib.import_module(import_name)",
          "30:             config['test_imports_succeeded'] = {",
          "31:                 'test.succeed_without_changes': [",
          "32:                     {",
          "33:                         'name': import_name",
          "34:                     },",
          "35:                 ],",
          "36:             }",
          "37:         except ModuleNotFoundError as err:",
          "38:             config['test_imports_failed'] = {",
          "39:                 'test.fail_without_changes': [",
          "40:                     {",
          "41:                         'name': import_name,",
          "42:                         'comment': \"The imports test failed. The error was: {}\".format(err)",
          "43:                     },",
          "44:                 ],",
          "45:             }",
          "47:     for stdlib_import in [\"telnetlib\"]:",
          "48:         try:",
          "49:             importlib.import_module(stdlib_import)",
          "50:             config['stdlib_imports_succeeded'] = {",
          "51:                 'test.succeed_without_changes': [",
          "52:                     {",
          "53:                         'name': stdlib_import",
          "54:                     },",
          "55:                 ],",
          "56:             }",
          "57:         except ModuleNotFoundError as err:",
          "58:             config['stdlib_imports_failed'] = {",
          "59:                 'test.fail_without_changes': [",
          "60:                     {",
          "61:                         'name': stdlib_import,",
          "62:                         'comment': \"The stdlib imports test failed. The error was: {}\".format(err)",
          "63:                     },",
          "64:                 ],",
          "65:             }",
          "66:     return config",
          "67: \"\"\"",
          "70: @pytest.fixture",
          "71: def state_name(salt_master):",
          "72:     name = \"check-imports\"",
          "73:     with salt_master.state_tree.base.temp_file(",
          "74:         f\"{name}.sls\", CHECK_IMPORTS_SLS_CONTENTS",
          "75:     ):",
          "76:         yield name",
          "79: def test_check_imports(salt_cli, salt_minion, state_name):",
          "83:     ret = salt_cli.run(\"state.sls\", state_name, minion_tgt=salt_minion.id)",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_pip.py||tests/pytests/pkg/integration/test_pip.py": [
          "File: tests/pytests/pkg/integration/test_pip.py -> tests/pytests/pkg/integration/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:             shutil.rmtree(dirname, ignore_errors=True)",
          "45: def test_pip_install(salt_call_cli, install_salt, shell):",
          "46:     \"\"\"",
          "47:     Test pip.install and ensure module can use installed library",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: @pytest.fixture",
          "46: def pkg_tests_account_environ(pkg_tests_account):",
          "47:     environ = os.environ.copy()",
          "48:     environ[\"LOGNAME\"] = environ[\"USER\"] = pkg_tests_account.username",
          "49:     environ[\"HOME\"] = pkg_tests_account.info.home",
          "50:     return environ",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:     assert ret.returncode == 0",
          "102:     def result():",
          "103:         # os.setgid does not remove group membership, so we remove them here so they are REALLY non-root",
          "104:         os.setgroups([])",
          "108:     return result",
          "111: @pytest.mark.skip_on_windows(reason=\"We can't easily demote users on Windows\")",
          "113:     if install_salt.classic:",
          "114:         pytest.skip(\"We can install non-root for classic packages\")",
          "115:     check_path = extras_pypath_bin / \"pep8\"",
          "",
          "[Removed Lines]",
          "101: def demote(user_uid, user_gid):",
          "105:         os.setgid(user_gid)",
          "106:         os.setuid(user_uid)",
          "112: def test_pip_non_root(shell, install_salt, test_account, extras_pypath_bin, pypath):",
          "",
          "[Added Lines]",
          "109: def demote(account):",
          "113:         os.setgid(account.info.gid)",
          "114:         os.setuid(account.info.uid)",
          "120: def test_pip_non_root(",
          "121:     shell,",
          "122:     install_salt,",
          "123:     pkg_tests_account,",
          "124:     extras_pypath_bin,",
          "125:     pypath,",
          "126:     pkg_tests_account_environ,",
          "127: ):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:     # We should be able to issue a --help without being root",
          "119:     ret = subprocess.run(",
          "120:         install_salt.binary_paths[\"salt\"] + [\"--help\"],",
          "123:         stdout=subprocess.PIPE,",
          "124:         stderr=subprocess.PIPE,",
          "125:         check=False,",
          "",
          "[Removed Lines]",
          "121:         preexec_fn=demote(test_account.uid, test_account.gid),",
          "122:         env=test_account.env,",
          "",
          "[Added Lines]",
          "136:         preexec_fn=demote(pkg_tests_account),",
          "137:         env=pkg_tests_account_environ,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:     # Now, we should still not be able to install as non-root",
          "142:     ret = subprocess.run(",
          "143:         install_salt.binary_paths[\"pip\"] + [\"install\", \"pep8\"],",
          "146:         stdout=subprocess.PIPE,",
          "147:         stderr=subprocess.PIPE,",
          "148:         check=False,",
          "",
          "[Removed Lines]",
          "144:         preexec_fn=demote(test_account.uid, test_account.gid),",
          "145:         env=test_account.env,",
          "",
          "[Added Lines]",
          "159:         preexec_fn=demote(pkg_tests_account),",
          "160:         env=pkg_tests_account_environ,",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_python.py||tests/pytests/pkg/integration/test_python.py": [
          "File: tests/pytests/pkg/integration/test_python.py -> tests/pytests/pkg/integration/test_python.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import subprocess",
          "3: import pytest",
          "8: @pytest.fixture",
          "9: def python_script_bin(install_salt):",
          "",
          "[Removed Lines]",
          "5: from tests.pytests.pkg.support.helpers import TESTS_DIR",
          "",
          "[Added Lines]",
          "2: import textwrap",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:     return install_salt.binary_paths[\"python\"]",
          "16: @pytest.mark.parametrize(\"exp_ret,user_arg\", [(1, \"false\"), (0, \"true\")])",
          "18:     ret = install_salt.proc.run(",
          "20:             python_script_bin",
          "21:             + [",
          "23:                 user_arg,",
          "24:             ]",
          "25:         ),",
          "",
          "[Removed Lines]",
          "17: def test_python_script(install_salt, exp_ret, user_arg, python_script_bin):",
          "22:                 str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\" / \"check_python.py\"),",
          "",
          "[Added Lines]",
          "15: @pytest.fixture",
          "16: def check_python_file(tmp_path):",
          "17:     script_path = tmp_path / \"check_python.py\"",
          "18:     script_path.write_text(",
          "19:         textwrap.dedent(",
          "20:             \"\"\"",
          "21:         import sys",
          "23:         import salt.utils.data",
          "25:         user_arg = sys.argv",
          "27:         if user_arg[1] == \"raise\":",
          "28:             raise Exception(\"test\")",
          "30:         if salt.utils.data.is_true(user_arg[1]):",
          "31:             sys.exit(0)",
          "32:         else:",
          "33:             sys.exit(1)",
          "34:         \"\"\"",
          "35:         )",
          "36:     )",
          "37:     return script_path",
          "41: def test_python_script(",
          "42:     install_salt, exp_ret, user_arg, python_script_bin, check_python_file",
          "43: ):",
          "48:                 str(check_python_file),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:     assert ret.returncode == exp_ret, ret.stderr",
          "36:     ret = install_salt.proc.run(",
          "38:             python_script_bin",
          "39:             + [",
          "41:                 \"raise\",",
          "42:             ]",
          "43:         ),",
          "",
          "[Removed Lines]",
          "35: def test_python_script_exception(install_salt, python_script_bin):",
          "40:                 str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\" / \"check_python.py\"),",
          "",
          "[Added Lines]",
          "61: def test_python_script_exception(install_salt, python_script_bin, check_python_file):",
          "66:                 str(check_python_file),",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py": [
          "File: tests/pytests/pkg/integration/test_salt_call.py -> tests/pytests/pkg/integration/test_salt_call.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: @pytest.mark.skip_on_windows()",
          "53:     \"\"\"",
          "54:     Test salt-call --local cmd_run id with runas",
          "55:     \"\"\"",
          "57:     assert \"Environment could not be retrieved for user\" not in caplog.text",
          "",
          "[Removed Lines]",
          "52: def test_salt_call_cmd_run_id_runas(salt_call_cli, test_account, caplog):",
          "56:     ret = salt_call_cli.run(\"--local\", \"cmd.run\", \"id\", runas=test_account.username)",
          "58:     assert str(test_account.uid) in ret.stdout",
          "59:     assert str(test_account.gid) in ret.stdout",
          "",
          "[Added Lines]",
          "52: def test_salt_call_cmd_run_id_runas(salt_call_cli, pkg_tests_account, caplog):",
          "56:     ret = salt_call_cli.run(",
          "57:         \"--local\", \"cmd.run\", \"id\", runas=pkg_tests_account.username",
          "58:     )",
          "60:     assert str(pkg_tests_account.info.uid) in ret.stdout",
          "61:     assert str(pkg_tests_account.info.gid) in ret.stdout",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py": [
          "File: tests/pytests/pkg/integration/test_salt_user.py -> tests/pytests/pkg/integration/test_salt_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "176: @pytest.mark.skip_if_binaries_missing(\"logrotate\")",
          "177: def test_paths_log_rotation(",
          "179: ):",
          "180:     \"\"\"",
          "181:     Test the correct ownership is assigned when log rotation occurs",
          "",
          "[Removed Lines]",
          "178:     salt_master, salt_minion, salt_call_cli, install_salt, test_account",
          "",
          "[Added Lines]",
          "178:     salt_master, salt_minion, salt_call_cli, install_salt, pkg_tests_account",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267:                                 \"file.replace\",",
          "268:                                 f\"{install_salt.conf_dir}/master\",",
          "269:                                 \"user: salt\",",
          "271:                                 \"flags=['IGNORECASE']\",",
          "272:                                 \"append_if_not_found=True\",",
          "273:                             )",
          "",
          "[Removed Lines]",
          "270:                                 f\"user: {test_account.username}\",",
          "",
          "[Added Lines]",
          "270:                                 f\"user: {pkg_tests_account.username}\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276:                             # change ownership of appropriate paths to user",
          "277:                             for _path in log_pkg_paths:",
          "278:                                 chg_ownership_cmd = (",
          "280:                                 )",
          "281:                                 ret = salt_call_cli.run(",
          "282:                                     \"--local\", \"cmd.run\", chg_ownership_cmd",
          "",
          "[Removed Lines]",
          "279:                                     f\"chown -R {test_account.username} {_path}\"",
          "",
          "[Added Lines]",
          "279:                                     f\"chown -R {pkg_tests_account.username} {_path}\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "317:                                 for _path in log_files_list:",
          "318:                                     log_path = pathlib.Path(_path)",
          "319:                                     assert log_path.exists()",
          "321:                                     assert log_path.stat().st_mode & 0o7777 == 0o640",
          "323:                             # cleanup",
          "",
          "[Removed Lines]",
          "320:                                     assert log_path.owner() == test_account.username",
          "",
          "[Added Lines]",
          "320:                                     assert (",
          "321:                                         log_path.owner() == pkg_tests_account.username",
          "322:                                     )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "328:                                 \"--local\",",
          "329:                                 \"file.replace\",",
          "330:                                 f\"{install_salt.conf_dir}/master\",",
          "332:                                 \"user: salt\",",
          "333:                                 \"flags=['IGNORECASE']\",",
          "334:                                 \"append_if_not_found=True\",",
          "",
          "[Removed Lines]",
          "331:                                 f\"user: {test_account.username}\",",
          "",
          "[Added Lines]",
          "333:                                 f\"user: {pkg_tests_account.username}\",",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/coverage/sitecustomize.py||tests/pytests/pkg/support/coverage/sitecustomize.py": [
          "File: tests/pytests/pkg/support/coverage/sitecustomize.py -> tests/pytests/pkg/support/coverage/sitecustomize.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/paths.py||tests/pytests/pkg/support/paths.py": [
          "File: tests/pytests/pkg/support/paths.py -> tests/pytests/pkg/support/paths.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/runtests.py||tests/pytests/pkg/support/runtests.py": [
          "File: tests/pytests/pkg/support/runtests.py -> tests/pytests/pkg/support/runtests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/sminion.py||tests/pytests/pkg/support/sminion.py": [
          "File: tests/pytests/pkg/support/sminion.py -> tests/pytests/pkg/support/sminion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/helpers.py||tests/support/pkg.py": [
          "File: tests/pytests/pkg/support/helpers.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: from saltfactories.utils import cli_scripts",
          "32: import salt.utils.files",
          "49: ARTIFACTS_DIR = CODE_DIR / \"artifacts\" / \"pkg\"",
          "51: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "34: try:",
          "35:     import crypt",
          "37:     HAS_CRYPT = True",
          "38: except ImportError:",
          "39:     HAS_CRYPT = False",
          "40: try:",
          "41:     import pwd",
          "43:     HAS_PWD = True",
          "44: except ImportError:",
          "45:     HAS_PWD = False",
          "47: TESTS_DIR = pathlib.Path(__file__).resolve().parent.parent.parent.parent",
          "48: CODE_DIR = TESTS_DIR.parent",
          "",
          "[Added Lines]",
          "33: from tests.conftest import CODE_DIR",
          "34: from tests.support.pytest.helpers import TestAccount",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1451:         key.SaltKey.__attrs_post_init__(self)",
          "1526: @attr.s(kw_only=True, slots=True)",
          "1527: class ApiRequest:",
          "1530:     session: requests.Session = attr.ib(init=False, repr=False)",
          "1531:     api_uri: str = attr.ib(init=False)",
          "1532:     auth_data: Dict[str, str] = attr.ib(init=False)",
          "",
          "[Removed Lines]",
          "1454: @attr.s(kw_only=True, slots=True)",
          "1455: class TestUser:",
          "1456:     \"\"\"",
          "1457:     Add a test user",
          "1458:     \"\"\"",
          "1460:     salt_call_cli = attr.ib()",
          "1462:     username = attr.ib(default=\"saltdev\")",
          "1463:     # Must follow Windows Password Complexity requirements",
          "1464:     password = attr.ib(default=\"P@ssW0rd\")",
          "1465:     _pw_record = attr.ib(init=False, repr=False, default=None)",
          "1467:     def salt_call_local(self, *args):",
          "1468:         ret = self.salt_call_cli.run(\"--local\", *args)",
          "1469:         if ret.returncode != 0:",
          "1470:             log.error(ret)",
          "1471:         assert ret.returncode == 0",
          "1472:         return ret.data",
          "1474:     def add_user(self):",
          "1475:         log.debug(\"Adding system account %r\", self.username)",
          "1476:         if platform.is_windows():",
          "1477:             self.salt_call_local(\"user.add\", self.username, self.password)",
          "1478:         else:",
          "1479:             self.salt_call_local(\"user.add\", self.username)",
          "1480:             hash_passwd = crypt.crypt(self.password, crypt.mksalt(crypt.METHOD_SHA512))",
          "1481:             self.salt_call_local(\"shadow.set_password\", self.username, hash_passwd)",
          "1482:         assert self.username in self.salt_call_local(\"user.list_users\")",
          "1484:     def remove_user(self):",
          "1485:         log.debug(\"Removing system account %r\", self.username)",
          "1486:         if platform.is_windows():",
          "1487:             self.salt_call_local(",
          "1488:                 \"user.delete\", self.username, \"purge=True\", \"force=True\"",
          "1489:             )",
          "1490:         else:",
          "1491:             self.salt_call_local(\"user.delete\", self.username, \"remove=True\")",
          "1493:     @property",
          "1494:     def pw_record(self):",
          "1495:         if self._pw_record is None and HAS_PWD:",
          "1496:             self._pw_record = pwd.getpwnam(self.username)",
          "1497:         return self._pw_record",
          "1499:     @property",
          "1500:     def uid(self):",
          "1501:         if HAS_PWD:",
          "1502:             return self.pw_record.pw_uid",
          "1503:         return None",
          "1505:     @property",
          "1506:     def gid(self):",
          "1507:         if HAS_PWD:",
          "1508:             return self.pw_record.pw_gid",
          "1509:         return None",
          "1511:     @property",
          "1512:     def env(self):",
          "1513:         environ = os.environ.copy()",
          "1514:         environ[\"LOGNAME\"] = environ[\"USER\"] = self.username",
          "1515:         environ[\"HOME\"] = self.pw_record.pw_dir",
          "1516:         return environ",
          "1518:     def __enter__(self):",
          "1519:         self.add_user()",
          "1520:         return self",
          "1522:     def __exit__(self, *_):",
          "1523:         self.remove_user()",
          "1528:     salt_api: SaltApi = attr.ib(repr=False)",
          "1529:     test_account: TestUser = attr.ib(repr=False)",
          "",
          "[Added Lines]",
          "1443:     port: int = attr.ib(repr=False)",
          "1444:     account: TestAccount = attr.ib(repr=False)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1538:     @api_uri.default",
          "1539:     def _default_api_uri(self):",
          "1542:     @auth_data.default",
          "1543:     def _default_auth_data(self):",
          "1544:         return {",
          "1547:             \"eauth\": \"auto\",",
          "1548:             \"out\": \"json\",",
          "1549:         }",
          "",
          "[Removed Lines]",
          "1540:         return f\"http://localhost:{self.salt_api.config['rest_cherrypy']['port']}\"",
          "1545:             \"username\": self.test_account.username,",
          "1546:             \"password\": self.test_account.password,",
          "",
          "[Added Lines]",
          "1455:         return f\"http://localhost:{self.port}\"",
          "1460:             \"username\": self.account.username,",
          "1461:             \"password\": self.account.password,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d5e47a10e9860e7ee7a2f13e2c4d3c8b6941011",
      "candidate_info": {
        "commit_hash": "4d5e47a10e9860e7ee7a2f13e2c4d3c8b6941011",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4d5e47a10e9860e7ee7a2f13e2c4d3c8b6941011",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja"
        ],
        "message": "Revert \"Use windows self hosted runners to build CI deps\"\n\nThis reverts commit f99055beb9cf867493a81ab9c60c4ce3c653b1f0.\n\nWe would have to enable cross os caches(probably)",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:   windows-dependencies:",
          "249:     name: Windows",
          "251:     timeout-minutes: 90",
          "252:     strategy:",
          "253:       fail-fast: false",
          "",
          "[Removed Lines]",
          "250:     runs-on: ${{ matrix.distro-slug }}",
          "",
          "[Added Lines]",
          "250:     runs-on:",
          "251:       - self-hosted",
          "252:       - linux",
          "253:       - bastion",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "262:       - name: \"Throttle Builds\"",
          "263:         shell: bash",
          "264:         run: |",
          "267:       - name: Checkout Source Code",
          "268:         uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "265:           t=$(python3 -c 'import random, sys; sys.stdout.write(str(random.randint(1, 15)))'); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "",
          "[Added Lines]",
          "268:           t=$(shuf -i 1-30 -n 1); echo \"Sleeping $t seconds\"; sleep \"$t\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:           cd artifacts",
          "290:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "293:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "295:         with:",
          "299:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "300:         run: |",
          "303:       - name: Install Dependencies",
          "304:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "308:         run: |",
          "311:       - name: Cleanup .nox Directory",
          "312:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "313:         run: |",
          "316:       - name: Compress .nox Directory",
          "317:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "318:         run: |",
          "321:       - name: Upload Nox Requirements Tarball",
          "322:         uses: actions/upload-artifact@v3",
          "",
          "[Removed Lines]",
          "292:       - name: Set up Python ${{ inputs.python-version }}",
          "294:         uses: actions/setup-python@v4",
          "296:           python-version: \"${{ inputs.python-version }}\"",
          "298:       - name: Install Nox",
          "301:           python3 -m pip install 'nox==${{ inputs.nox-version }}'",
          "305:         env:",
          "306:           PRINT_TEST_SELECTION: \"0\"",
          "307:           PRINT_SYSTEM_INFO: \"0\"",
          "309:           nox --install-only -e ${{ inputs.nox-session }}",
          "314:           nox --force-color -e \"pre-archive-cleanup(pkg=False)\"",
          "319:           nox --force-color -e compress-dependencies -- windows ${{ matrix.arch }}",
          "",
          "[Added Lines]",
          "295:       - name: PyPi Proxy",
          "297:         run: |",
          "298:           sed -i '7s;^;--index-url=https://pypi-proxy.saltstack.net/root/local/+simple/ --extra-index-url=https://pypi.org/simple\\n;' requirements/static/ci/*/*.txt",
          "300:       - name: Setup Python Tools Scripts",
          "301:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "302:         uses: ./.github/actions/setup-python-tools-scripts",
          "304:           cache-prefix: ${{ inputs.cache-prefix }}-build-deps-ci",
          "306:       - name: Get Salt Project GitHub Actions Bot Environment",
          "309:           TOKEN=$(curl -sS -f -X PUT \"http://169.254.169.254/latest/api/token\" -H \"X-aws-ec2-metadata-token-ttl-seconds: 30\")",
          "310:           SPB_ENVIRONMENT=$(curl -sS -f -H \"X-aws-ec2-metadata-token: $TOKEN\" http://169.254.169.254/latest/meta-data/tags/instance/spb:environment)",
          "311:           echo \"SPB_ENVIRONMENT=$SPB_ENVIRONMENT\" >> \"$GITHUB_ENV\"",
          "313:       - name: Start VM",
          "314:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "315:         id: spin-up-vm",
          "316:         run: |",
          "317:           tools --timestamps vm create --environment \"${SPB_ENVIRONMENT}\" --retries=2 ${{ matrix.distro-slug }}",
          "319:       - name: List Free Space",
          "320:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "321:         run: |",
          "322:           tools --timestamps vm ssh ${{ matrix.distro-slug }} -- df -h || true",
          "324:       - name: Upload Checkout To VM",
          "325:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "326:         run: |",
          "327:           tools --timestamps vm rsync ${{ matrix.distro-slug }}",
          "332:           tools --timestamps vm install-dependencies --nox-session=${{ inputs.nox-session }} ${{ matrix.distro-slug }}",
          "337:           tools --timestamps vm pre-archive-cleanup ${{ matrix.distro-slug }}",
          "342:           tools --timestamps vm compress-dependencies ${{ matrix.distro-slug }}",
          "344:       - name: Download Compressed .nox Directory",
          "345:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "346:         run: |",
          "347:           tools --timestamps vm download-dependencies ${{ matrix.distro-slug }}",
          "349:       - name: Destroy VM",
          "350:         if: always() && steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "351:         run: |",
          "352:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a21a5adc381d37aa0152e24730e8d013a526823f",
      "candidate_info": {
        "commit_hash": "a21a5adc381d37aa0152e24730e8d013a526823f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/a21a5adc381d37aa0152e24730e8d013a526823f",
        "files": [
          "changelog/65759.fixed.md",
          "salt/netapi/rest_tornado/saltnado.py"
        ],
        "message": "Fix un-closed tranport in tornado netapi",
        "before_after_code_files": [
          "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py": [
          "File: salt/netapi/rest_tornado/saltnado.py -> salt/netapi/rest_tornado/saltnado.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "396:                     )",
          "397:                     del self.timeout_map[future]",
          "400: class BaseSaltAPIHandler(salt.ext.tornado.web.RequestHandler):  # pylint: disable=W0223",
          "401:     ct_out_map = (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "399:     def destroy(self):",
          "400:         self.event.destroy()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "510:         self.timeout_futures()",
          "511:         # clear local_client objects to disconnect event publisher's IOStream connections",
          "512:         del self.saltclients",
          "514:     def on_connection_close(self):",
          "515:         \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:         self.application.event_listener.destroy()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3366ba233facfec3d725d31b1acdfc1db32fb634",
      "candidate_info": {
        "commit_hash": "3366ba233facfec3d725d31b1acdfc1db32fb634",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/3366ba233facfec3d725d31b1acdfc1db32fb634",
        "files": [
          "tools/testsuite/__init__.py"
        ],
        "message": "It's a single `nox.*.tar.xz` archive now\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/testsuite/__init__.py||tools/testsuite/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/testsuite/__init__.py||tools/testsuite/__init__.py": [
          "File: tools/testsuite/__init__.py -> tools/testsuite/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:     if exitcode and exitcode != ExitCode.SOFT_FAIL:",
          "152:         ctx.exit(exitcode)",
          "153:     if pkg:",
          "163:         exitcode = tools.utils.gh.download_pkgs_artifact(",
          "164:             ctx,",
          "165:             run_id=run_id,",
          "",
          "[Removed Lines]",
          "154:         exitcode = tools.utils.gh.download_nox_artifact(",
          "155:             ctx,",
          "156:             run_id=run_id,",
          "157:             slug=slug,",
          "158:             nox_env=f\"test-pkgs-onedir-{arch}\",",
          "159:             repository=repository,",
          "160:         )",
          "161:         if exitcode and exitcode != ExitCode.SOFT_FAIL:",
          "162:             ctx.exit(exitcode)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c389db4f4545d720ab430eed81d2f214d4878ab",
      "candidate_info": {
        "commit_hash": "2c389db4f4545d720ab430eed81d2f214d4878ab",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/2c389db4f4545d720ab430eed81d2f214d4878ab",
        "files": [
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/support/helpers.py",
          "tests/support/pytest/helpers.py"
        ],
        "message": "Remove some duplicate fixtures\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/support/helpers.py||tests/pytests/pkg/support/helpers.py",
          "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: tests/pytests/pkg/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     SaltPkgInstall,",
          "22:     TestUser,",
          "23: )",
          "26: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "24: from tests.support.sminion import create_sminion",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     return install_salt.version",
          "50: @pytest.fixture(scope=\"session\", autouse=True)",
          "51: def _system_up_to_date(",
          "52:     grains,",
          "",
          "[Removed Lines]",
          "40: @pytest.fixture(scope=\"session\")",
          "41: def sminion():",
          "42:     return create_sminion()",
          "45: @pytest.fixture(scope=\"session\")",
          "46: def grains(sminion):",
          "47:     return sminion.opts[\"grains\"].copy()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "510:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)], check=True)",
          "512:     factory.after_terminate(",
          "514:     )",
          "515:     with factory.started(start_timeout=start_timeout):",
          "516:         yield factory",
          "",
          "[Removed Lines]",
          "513:         pytest.helpers.remove_stale_minion_key_pkg, salt_master, factory.id",
          "",
          "[Added Lines]",
          "502:         pytest.helpers.remove_stale_minion_key, salt_master, factory.id",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/support/helpers.py||tests/pytests/pkg/support/helpers.py": [
          "File: tests/pytests/pkg/support/helpers.py -> tests/pytests/pkg/support/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1559:         self.session.__exit__(*args)",
          "1596: @pytest.helpers.register",
          "1597: def download_file(url, dest, auth=None):",
          "1598:     # NOTE the stream=True parameter below",
          "",
          "[Removed Lines]",
          "1562: @pytest.helpers.register",
          "1563: def remove_stale_minion_key_pkg(master, minion_id):",
          "1564:     key_path = os.path.join(master.config[\"pki_dir\"], \"minions\", minion_id)",
          "1565:     if os.path.exists(key_path):",
          "1566:         os.unlink(key_path)",
          "1567:     else:",
          "1568:         log.debug(\"The minion(id=%r) key was not found at %s\", minion_id, key_path)",
          "1571: @pytest.helpers.register",
          "1572: def remove_stale_master_key(master):",
          "1573:     keys_path = os.path.join(master.config[\"pki_dir\"], \"master\")",
          "1574:     for key_name in (\"master.pem\", \"master.pub\"):",
          "1575:         key_path = os.path.join(keys_path, key_name)",
          "1576:         if os.path.exists(key_path):",
          "1577:             os.unlink(key_path)",
          "1578:         else:",
          "1579:             log.debug(",
          "1580:                 \"The master(id=%r) %s key was not found at %s\",",
          "1581:                 master.id,",
          "1582:                 key_name,",
          "1583:                 key_path,",
          "1584:             )",
          "1585:     key_path = os.path.join(master.config[\"pki_dir\"], \"minion\", \"minion_master.pub\")",
          "1586:     if os.path.exists(key_path):",
          "1587:         os.unlink(key_path)",
          "1588:     else:",
          "1589:         log.debug(",
          "1590:             \"The master(id=%r) minion_master.pub key was not found at %s\",",
          "1591:             master.id,",
          "1592:             key_path,",
          "1593:         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py": [
          "File: tests/support/pytest/helpers.py -> tests/support/pytest/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:         log.debug(\"The minion(id=%r) key was not found at %s\", minion_id, key_path)",
          "177: @pytest.helpers.register",
          "178: def remove_stale_proxy_minion_cache_file(proxy_minion, minion_id=None):",
          "179:     cachefile = os.path.join(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177: @pytest.helpers.register",
          "178: def remove_stale_master_key(master):",
          "179:     keys_path = os.path.join(master.config[\"pki_dir\"], \"master\")",
          "180:     for key_name in (\"master.pem\", \"master.pub\"):",
          "181:         key_path = os.path.join(keys_path, key_name)",
          "182:         if os.path.exists(key_path):",
          "183:             os.unlink(key_path)",
          "184:         else:",
          "185:             log.debug(",
          "186:                 \"The master(id=%r) %s key was not found at %s\",",
          "187:                 master.id,",
          "188:                 key_name,",
          "189:                 key_path,",
          "190:             )",
          "191:     key_path = os.path.join(master.config[\"pki_dir\"], \"minion\", \"minion_master.pub\")",
          "192:     if os.path.exists(key_path):",
          "193:         os.unlink(key_path)",
          "194:     else:",
          "195:         log.debug(",
          "196:             \"The master(id=%r) minion_master.pub key was not found at %s\",",
          "197:             master.id,",
          "198:             key_path,",
          "199:         )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6575f9b627eb2840774777249f56570ed84481fa",
      "candidate_info": {
        "commit_hash": "6575f9b627eb2840774777249f56570ed84481fa",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/6575f9b627eb2840774777249f56570ed84481fa",
        "files": [
          "tests/pytests/pkg/integration/test_salt_user.py"
        ],
        "message": "Fix variable name\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py": [
          "File: tests/pytests/pkg/integration/test_salt_user.py -> tests/pytests/pkg/integration/test_salt_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:                                         f\"cp -a {_path}/* {str(temp_dir_path_4)}/\"",
          "253:                                     )",
          "254:                                 elif bkup_count > 5:",
          "257:                                 ret = salt_call_cli.run(",
          "258:                                     \"--local\", \"cmd.run\", cmd_to_run",
          "",
          "[Removed Lines]",
          "255:                                     assert bkupcount < bkup_count_max  # force assertion",
          "",
          "[Added Lines]",
          "255:                                     # force assertion",
          "256:                                     assert bkup_count < bkup_count_max",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "349:                                     # use --update since /opt/saltstack/salt and would get SIGSEGV since mucking with running code",
          "350:                                     cmd_to_run = f\"cp -a --update --force {str(temp_dir_path_4)}/* {_path}/\"",
          "351:                                 elif bkup_count > 5:",
          "354:                                 ret = salt_call_cli.run(",
          "355:                                     \"--local\", \"cmd.run\", cmd_to_run",
          "",
          "[Removed Lines]",
          "352:                                     assert bkupcount < bkup_count_max  # force assertion",
          "",
          "[Added Lines]",
          "353:                                     # force assertion",
          "354:                                     assert bkup_count < bkup_count_max",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1fa82b9a8375aea5744e202c18cb0a36a1093b8",
      "candidate_info": {
        "commit_hash": "b1fa82b9a8375aea5744e202c18cb0a36a1093b8",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/b1fa82b9a8375aea5744e202c18cb0a36a1093b8",
        "files": [
          "CHANGELOG.md",
          "changelog/565.security.md",
          "changelog/65759.fixed.md",
          "changelog/65830.security.md",
          "changelog/665924.changed.md",
          "doc/man/salt-api.1",
          "doc/man/salt-call.1",
          "doc/man/salt-cloud.1",
          "doc/man/salt-cp.1",
          "doc/man/salt-key.1",
          "doc/man/salt-master.1",
          "doc/man/salt-minion.1",
          "doc/man/salt-proxy.1",
          "doc/man/salt-run.1",
          "doc/man/salt-ssh.1",
          "doc/man/salt-syndic.1",
          "doc/man/salt.1",
          "doc/man/salt.7",
          "doc/man/spm.1",
          "doc/topics/releases/3006.6.md",
          "doc/topics/releases/templates/3006.6.md.template",
          "pkg/debian/changelog",
          "pkg/rpm/salt.spec"
        ],
        "message": "Release v3006.6",
        "before_after_code_files": [
          "pkg/rpm/salt.spec||pkg/rpm/salt.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pkg/rpm/salt.spec||pkg/rpm/salt.spec": [
          "File: pkg/rpm/salt.spec -> pkg/rpm/salt.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: %define fish_dir %{_datadir}/fish/vendor_functions.d",
          "33: Name:    salt",
          "35: Release: 0",
          "36: Summary: A parallel remote execution system",
          "37: Group:   System Environment/Daemons",
          "",
          "[Removed Lines]",
          "34: Version: 3006.5",
          "",
          "[Added Lines]",
          "34: Version: 3006.6",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "585: %changelog",
          "588: # Removed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "588: # Changed",
          "590: - Salt no longer time bombs user installations on code using `salt.utils.versions.warn_until_date` [#665924](https://github.com/saltstack/salt/issues/665924)",
          "592: # Fixed",
          "594: - Fix un-closed transport in tornado netapi [#65759](https://github.com/saltstack/salt/issues/65759)",
          "596: # Security",
          "598: - CVE-2024-22231 Prevent directory traversal when creating syndic cache directory on the master",
          "599:   CVE-2024-22232 Prevent directory traversal attacks in the master's serve_file method.",
          "600:   These vulerablities were discovered and reported by:",
          "601:   Yudi Zhao(Huawei Nebula Security Lab),Chenwei Jiang(Huawei Nebula Security Lab) [#565](https://github.com/saltstack/salt/issues/565)",
          "602: - Update some requirements which had some security issues:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab6a77fcbd6256888ff8a5a617f23c133b9496c5",
      "candidate_info": {
        "commit_hash": "ab6a77fcbd6256888ff8a5a617f23c133b9496c5",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/ab6a77fcbd6256888ff8a5a617f23c133b9496c5",
        "files": [
          ".github/workflows/build-deps-ci-action-linux.yml",
          ".github/workflows/build-deps-ci-action-macos.yml",
          ".github/workflows/build-deps-ci-action-windows.yml",
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-action.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml",
          ".github/workflows/test-packages-action.yml",
          "noxfile.py",
          "tools/precommit/workflows.py",
          "tools/utils/__init__.py",
          "tools/vm.py"
        ],
        "message": "Reduce GitHub Actions cache usage\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-ci-deps.yml.jinja||.githuworkflows/templates/build-ci-deps.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja",
          "noxfile.py||noxfile.py",
          "tools/precommit/workflows.py||tools/precommit/workflows.py",
          "tools/utils/__init__.py||tools/utils/__init__.py",
          "tools/vm.py||tools/vm.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-ci-deps.yml.jinja||.githuworkflows/templates/build-ci-deps.yml.jinja": [
          "File: .github/workflows/templates/build-ci-deps.yml.jinja -> .githuworkflows/templates/build-ci-deps.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     <%- if workflow_slug != 'release' %>",
          "8:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "9:     <%- endif %>",
          "",
          "[Removed Lines]",
          "2:   <%- for slug, display_name, arch in build_ci_deps_listing[\"windows\"] %>",
          "4:   <{ slug.replace(\".\", \"\") }>-ci-deps:",
          "5:     <%- do test_salt_needs.append(slug.replace(\".\", \"\") + \"-ci-deps\") %>",
          "6:     name: <{ display_name }> Deps",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:     <%- else %>",
          "15:       - download-onedir-artifact",
          "16:     <%- endif %>",
          "18:     with:",
          "20:       nox-session: ci-test-onedir",
          "21:       platform: windows",
          "23:       nox-version: <{ nox_version  }>",
          "24:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "25:       salt-version: \"${{ needs.prepare-workflow.outputs.salt-version }}\"",
          "",
          "[Removed Lines]",
          "17:     uses: ./.github/workflows/build-deps-ci-action.yml",
          "19:       distro-slug: <{ slug }>",
          "22:       arch: amd64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "28:   <%- endfor %>",
          "36:     <%- if workflow_slug != 'release' %>",
          "37:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "38:     <%- endif %>",
          "",
          "[Removed Lines]",
          "31:   <%- for slug, display_name, arch in build_ci_deps_listing[\"macos\"] %>",
          "33:   <{ slug.replace(\".\", \"\") }>-ci-deps:",
          "34:     <%- do test_salt_needs.append(slug.replace(\".\", \"\") + \"-ci-deps\") %>",
          "35:     name: <{ display_name }> Deps",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     <%- endif %>",
          "46:     uses: ./.github/workflows/build-deps-ci-action-macos.yml",
          "47:     with:",
          "49:       nox-session: ci-test-onedir",
          "50:       platform: darwin",
          "51:       arch: <{ arch }>",
          "",
          "[Removed Lines]",
          "48:       distro-slug: <{ slug }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "57:   <%- endfor %>",
          "65:     <%- if workflow_slug != 'release' %>",
          "66:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['build-deps-ci'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "67:     <%- endif %>",
          "",
          "[Removed Lines]",
          "60:   <%- for slug, display_name, arch in build_ci_deps_listing[\"linux\"] %>",
          "62:   <{ slug.replace(\".\", \"\") }>-ci-deps:",
          "63:     <%- do test_salt_needs.append(slug.replace(\".\", \"\") + \"-ci-deps\") %>",
          "64:     name: <{ display_name }> Deps",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "72:     <%- else %>",
          "73:       - download-onedir-artifact",
          "74:     <%- endif %>",
          "76:     with:",
          "78:       nox-session: ci-test-onedir",
          "79:       platform: linux",
          "80:       arch: <{ arch }>",
          "",
          "[Removed Lines]",
          "75:     uses: ./.github/workflows/build-deps-ci-action.yml",
          "77:       distro-slug: <{ slug }>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:           cd artifacts",
          "95:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}.tar.xz",
          "98:         uses: actions/cache@v3.3.1",
          "99:         with:",
          "102:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "103:             }}",
          "104:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "",
          "[Removed Lines]",
          "97:       - name: Download cached nox.${{ matrix.distro-slug }}.tar.* for session ${{ inputs.nox-session }}",
          "100:           path: nox.${{ matrix.distro-slug }}.tar.*",
          "101:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}|${{ matrix.distro-slug }}|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:         run: |",
          "343:           python3 -m pip install 'nox==${{ inputs.nox-version }}'",
          "346:         uses: actions/cache@v3.3.1",
          "347:         with:",
          "350:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "351:             }}",
          "352:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "",
          "[Removed Lines]",
          "345:       - name: Download cached nox.${{ matrix.distro-slug }}.tar.* for session ${{ inputs.nox-session }}",
          "348:           path: nox.${{ matrix.distro-slug }}.tar.*",
          "349:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}|${{ matrix.distro-slug }}|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "355:       - name: Decompress .nox Directory",
          "356:         run: |",
          "359:       - name: Show System Info & Test Plan",
          "360:         env:",
          "",
          "[Removed Lines]",
          "357:           nox --force-color -e decompress-dependencies -- ${{ matrix.distro-slug }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "545:           cd artifacts",
          "546:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "549:         uses: actions/cache@v3.3.1",
          "550:         with:",
          "553:               hashFiles('requirements/**/*.txt', 'cicd/golden-images.json', 'noxfile.py')",
          "554:             }}",
          "555:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "",
          "[Removed Lines]",
          "548:       - name: Download cached nox.${{ matrix.distro-slug }}.tar.* for session ${{ inputs.nox-session }}",
          "551:           path: nox.${{ matrix.distro-slug }}.tar.*",
          "552:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|${{ matrix.distro-slug }}|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .githuworkflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     needs:",
          "9:       - prepare-workflow",
          "10:       - build-<{ pkg_type }>-pkgs-onedir",
          "13:     with:",
          "14:       distro-slug: <{ slug }>",
          "15:       nox-session: ci-test-onedir",
          "",
          "[Removed Lines]",
          "11:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "12:     uses: ./.github/workflows/test-packages-action.yml",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     needs:",
          "42:       - prepare-workflow",
          "43:       - build-macos-pkgs-onedir",
          "45:     uses: ./.github/workflows/test-packages-action-macos.yml",
          "46:     with:",
          "47:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "44:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:     needs:",
          "72:       - prepare-workflow",
          "73:       - build-windows-pkgs-onedir",
          "76:     with:",
          "77:       distro-slug: <{ slug }>",
          "78:       nox-session: ci-test-onedir",
          "",
          "[Removed Lines]",
          "74:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "75:     uses: ./.github/workflows/test-packages-action.yml",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .githuworkflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "13:     needs:",
          "14:       - prepare-workflow",
          "17:     with:",
          "18:       distro-slug: <{ slug }>",
          "19:       nox-session: ci-test-onedir",
          "",
          "[Removed Lines]",
          "15:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "16:     uses: ./.github/workflows/test-action.yml",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "41:     needs:",
          "42:       - prepare-workflow",
          "44:     uses: ./.github/workflows/test-action-macos.yml",
          "45:     with:",
          "46:       distro-slug: <{ slug }>",
          "",
          "[Removed Lines]",
          "43:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['test'] && fromJSON(needs.prepare-workflow.outputs.runners)['self-hosted'] }}",
          "68:     needs:",
          "69:       - prepare-workflow",
          "72:     with:",
          "73:       distro-slug: <{ slug }>",
          "74:       nox-session: ci-test-onedir",
          "",
          "[Removed Lines]",
          "70:       - <{ slug.replace(\".\", \"\") }>-ci-deps",
          "71:     uses: ./.github/workflows/test-action.yml",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1218: def decompress_dependencies(session):",
          "1219:     if not session.posargs:",
          "1220:         session.error(",
          "1223:         )",
          "1227:     else:",
          "1229:     nox_dependencies_tarball_path = REPO_ROOT / nox_dependencies_tarball",
          "1230:     if not nox_dependencies_tarball_path.exists():",
          "1231:         session.error(",
          "",
          "[Removed Lines]",
          "1221:             \"Please pass the distro-slug to run tests against. \"",
          "1222:             \"Check cicd/images.yml for what's available.\"",
          "1224:     distro_slug = session.posargs.pop(0)",
          "1225:     if \"windows\" in distro_slug:",
          "1226:         nox_dependencies_tarball = f\"nox.{distro_slug}.tar.gz\"",
          "1228:         nox_dependencies_tarball = f\"nox.{distro_slug}.tar.xz\"",
          "",
          "[Added Lines]",
          "1221:             \"The 'decompress-dependencies' session target needs \"",
          "1222:             \"two arguments, '<platform> <arch>'.\"",
          "1224:     try:",
          "1225:         platform = session.posargs.pop(0)",
          "1226:         arch = session.posargs.pop(0)",
          "1227:         if session.posargs:",
          "1228:             session.error(",
          "1229:                 \"The 'decompress-dependencies' session target only accepts \"",
          "1230:                 \"two arguments, '<platform> <arch>'.\"",
          "1231:             )",
          "1232:     except IndexError:",
          "1233:         session.error(",
          "1234:             \"The 'decompress-dependencies' session target needs \"",
          "1235:             \"two arguments, '<platform> <arch>'.\"",
          "1236:         )",
          "1237:     if platform == \"windows\":",
          "1238:         extension = \"tar.gz\"",
          "1239:         scripts_dir_name = \"Scripts\"",
          "1241:         extension = \"tar.xz\"",
          "1242:         scripts_dir_name = \"bin\"",
          "1243:     nox_dependencies_tarball = f\"nox.{platform}.{arch}.{extension}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1240:     session.log(\"Finding broken 'python' symlinks under '.nox/' ...\")",
          "1241:     for dirname in os.scandir(REPO_ROOT / \".nox\"):",
          "1246:         script_paths = {str(p): p for p in os.scandir(scan_path)}",
          "1247:         fixed_shebang = f\"#!{scan_path / 'python'}\"",
          "1248:         for key in sorted(script_paths):",
          "",
          "[Removed Lines]",
          "1242:         if \"windows\" not in distro_slug:",
          "1243:             scan_path = REPO_ROOT.joinpath(\".nox\", dirname, \"bin\")",
          "1244:         else:",
          "1245:             scan_path = REPO_ROOT.joinpath(\".nox\", dirname, \"Scripts\")",
          "",
          "[Added Lines]",
          "1257:         scan_path = REPO_ROOT.joinpath(\".nox\", dirname, scripts_dir_name)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1273:                 continue",
          "1274:             if not path.is_file():",
          "1275:                 continue",
          "1277:                 # Let's try to fix shebang's",
          "1278:                 try:",
          "1279:                     fpath = pathlib.Path(path)",
          "",
          "[Removed Lines]",
          "1276:             if \"windows\" not in distro_slug:",
          "",
          "[Added Lines]",
          "1288:             if platform != \"windows\":",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1296: def compress_dependencies(session):",
          "1297:     if not session.posargs:",
          "1298:         session.error(",
          "1301:         )",
          "1305:     else:",
          "1307:     nox_dependencies_tarball_path = REPO_ROOT / nox_dependencies_tarball",
          "1308:     if nox_dependencies_tarball_path.exists():",
          "1309:         session_warn(",
          "",
          "[Removed Lines]",
          "1299:             \"Please pass the distro-slug to run tests against. \"",
          "1300:             \"Check cicd/images.yml for what's available.\"",
          "1302:     distro_slug = session.posargs.pop(0)",
          "1303:     if IS_WINDOWS:",
          "1304:         nox_dependencies_tarball = f\"nox.{distro_slug}.tar.gz\"",
          "1306:         nox_dependencies_tarball = f\"nox.{distro_slug}.tar.xz\"",
          "",
          "[Added Lines]",
          "1311:             \"The 'compress-dependencies' session target needs \"",
          "1312:             \"two arguments, '<platform> <arch>'.\"",
          "1314:     try:",
          "1315:         platform = session.posargs.pop(0)",
          "1316:         arch = session.posargs.pop(0)",
          "1317:         if session.posargs:",
          "1318:             session.error(",
          "1319:                 \"The 'compress-dependencies' session target only accepts \"",
          "1320:                 \"two arguments, '<platform> <arch>'.\"",
          "1321:             )",
          "1322:     except IndexError:",
          "1323:         session.error(",
          "1324:             \"The 'compress-dependencies' session target needs \"",
          "1325:             \"two arguments, '<platform> <arch>'.\"",
          "1326:         )",
          "1327:     if platform == \"windows\":",
          "1328:         extension = \"tar.gz\"",
          "1330:         extension = \"tar.xz\"",
          "1331:     nox_dependencies_tarball = f\"nox.{platform}.{arch}.{extension}\"",
          "",
          "---------------"
        ],
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:             \"template\": \"test-package-downloads-action.yml\",",
          "89:         },",
          "90:     }",
          "92:         \"linux\": [",
          "93:             (\"almalinux-8\", \"Alma Linux 8\", \"x86_64\", \"no-fips\"),",
          "94:             (\"almalinux-9\", \"Alma Linux 9\", \"x86_64\", \"no-fips\"),",
          "95:             (\"amazonlinux-2\", \"Amazon Linux 2\", \"x86_64\", \"no-fips\"),",
          "97:             (\"amazonlinux-2023\", \"Amazon Linux 2023\", \"x86_64\", \"no-fips\"),",
          "99:             (\"archlinux-lts\", \"Arch Linux LTS\", \"x86_64\", \"no-fips\"),",
          "100:             (\"centos-7\", \"CentOS 7\", \"x86_64\", \"no-fips\"),",
          "101:             (\"centosstream-8\", \"CentOS Stream 8\", \"x86_64\", \"no-fips\"),",
          "102:             (\"centosstream-9\", \"CentOS Stream 9\", \"x86_64\", \"no-fips\"),",
          "103:             (\"debian-10\", \"Debian 10\", \"x86_64\", \"no-fips\"),",
          "104:             (\"debian-11\", \"Debian 11\", \"x86_64\", \"no-fips\"),",
          "106:             (\"debian-12\", \"Debian 12\", \"x86_64\", \"no-fips\"),",
          "108:             (\"fedora-37\", \"Fedora 37\", \"x86_64\", \"no-fips\"),",
          "109:             (\"fedora-38\", \"Fedora 38\", \"x86_64\", \"no-fips\"),",
          "110:             (\"opensuse-15\", \"Opensuse 15\", \"x86_64\", \"no-fips\"),",
          "111:             (\"photonos-3\", \"Photon OS 3\", \"x86_64\", \"no-fips\"),",
          "113:             (\"photonos-4\", \"Photon OS 4\", \"x86_64\", \"fips\"),",
          "115:             (\"photonos-5\", \"Photon OS 5\", \"x86_64\", \"fips\"),",
          "117:             (\"ubuntu-20.04\", \"Ubuntu 20.04\", \"x86_64\", \"no-fips\"),",
          "119:             (\"ubuntu-22.04\", \"Ubuntu 22.04\", \"x86_64\", \"no-fips\"),",
          "121:         ],",
          "122:         \"macos\": [",
          "123:             (\"macos-12\", \"macOS 12\", \"x86_64\"),",
          "124:             (\"macos-13\", \"macOS 13\", \"x86_64\"),",
          "126:         ],",
          "127:         \"windows\": [",
          "128:             (\"windows-2016\", \"Windows 2016\", \"amd64\"),",
          "",
          "[Removed Lines]",
          "91:     test_salt_listing = {",
          "96:             (\"amazonlinux-2-arm64\", \"Amazon Linux 2 Arm64\", \"aarch64\", \"no-fips\"),",
          "98:             (\"amazonlinux-2023-arm64\", \"Amazon Linux 2023 Arm64\", \"aarch64\", \"no-fips\"),",
          "105:             (\"debian-11-arm64\", \"Debian 11 Arm64\", \"aarch64\", \"no-fips\"),",
          "107:             (\"debian-12-arm64\", \"Debian 12 Arm64\", \"aarch64\", \"no-fips\"),",
          "112:             (\"photonos-3-arm64\", \"Photon OS 3 Arm64\", \"aarch64\", \"no-fips\"),",
          "114:             (\"photonos-4-arm64\", \"Photon OS 4 Arm64\", \"aarch64\", \"fips\"),",
          "116:             (\"photonos-5-arm64\", \"Photon OS 5 Arm64\", \"aarch64\", \"fips\"),",
          "118:             (\"ubuntu-20.04-arm64\", \"Ubuntu 20.04 Arm64\", \"aarch64\", \"no-fips\"),",
          "120:             (\"ubuntu-22.04-arm64\", \"Ubuntu 22.04 Arm64\", \"aarch64\", \"no-fips\"),",
          "125:             (\"macos-13-xlarge\", \"macOS 13 Arm64\", \"aarch64\"),",
          "",
          "[Added Lines]",
          "91:     test_salt_listing: dict[str, list[tuple[str, ...]]] = {",
          "96:             (\"amazonlinux-2-arm64\", \"Amazon Linux 2 Arm64\", \"arm64\", \"no-fips\"),",
          "98:             (\"amazonlinux-2023-arm64\", \"Amazon Linux 2023 Arm64\", \"arm64\", \"no-fips\"),",
          "105:             (\"debian-11-arm64\", \"Debian 11 Arm64\", \"arm64\", \"no-fips\"),",
          "107:             (\"debian-12-arm64\", \"Debian 12 Arm64\", \"arm64\", \"no-fips\"),",
          "112:             (\"photonos-3-arm64\", \"Photon OS 3 Arm64\", \"arm64\", \"no-fips\"),",
          "114:             (\"photonos-4-arm64\", \"Photon OS 4 Arm64\", \"arm64\", \"fips\"),",
          "116:             (\"photonos-5-arm64\", \"Photon OS 5 Arm64\", \"arm64\", \"fips\"),",
          "118:             (\"ubuntu-20.04-arm64\", \"Ubuntu 20.04 Arm64\", \"arm64\", \"no-fips\"),",
          "120:             (\"ubuntu-22.04-arm64\", \"Ubuntu 22.04 Arm64\", \"arm64\", \"no-fips\"),",
          "125:             (\"macos-13-xlarge\", \"macOS 13 Arm64\", \"arm64\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:             (",
          "138:                 \"amazonlinux-2-arm64\",",
          "139:                 \"Amazon Linux 2 Arm64\",",
          "141:                 \"rpm\",",
          "142:                 \"no-fips\",",
          "143:             ),",
          "",
          "[Removed Lines]",
          "140:                 \"aarch64\",",
          "",
          "[Added Lines]",
          "140:                 \"arm64\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "145:             (",
          "146:                 \"amazonlinux-2023-arm64\",",
          "147:                 \"Amazon Linux 2023 Arm64\",",
          "149:                 \"rpm\",",
          "150:                 \"no-fips\",",
          "151:             ),",
          "",
          "[Removed Lines]",
          "148:                 \"aarch64\",",
          "",
          "[Added Lines]",
          "148:                 \"arm64\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "155:             (",
          "156:                 \"centosstream-9-arm64\",",
          "157:                 \"CentOS Stream 9 Arm64\",",
          "159:                 \"rpm\",",
          "160:                 \"no-fips\",",
          "161:             ),",
          "162:             (\"debian-10\", \"Debian 10\", \"x86_64\", \"deb\", \"no-fips\"),",
          "163:             (\"debian-11\", \"Debian 11\", \"x86_64\", \"deb\", \"no-fips\"),",
          "165:             (\"debian-12\", \"Debian 12\", \"x86_64\", \"deb\", \"no-fips\"),",
          "167:             (\"photonos-3\", \"Photon OS 3\", \"x86_64\", \"rpm\", \"no-fips\"),",
          "169:             (\"photonos-4\", \"Photon OS 4\", \"x86_64\", \"rpm\", \"fips\"),",
          "171:             (\"photonos-5\", \"Photon OS 5\", \"x86_64\", \"rpm\", \"fips\"),",
          "173:             (\"ubuntu-20.04\", \"Ubuntu 20.04\", \"x86_64\", \"deb\", \"no-fips\"),",
          "175:             (\"ubuntu-22.04\", \"Ubuntu 22.04\", \"x86_64\", \"deb\", \"no-fips\"),",
          "177:         ],",
          "178:         \"macos\": [",
          "179:             (\"macos-12\", \"macOS 12\", \"x86_64\"),",
          "180:             (\"macos-13\", \"macOS 13\", \"x86_64\"),",
          "182:         ],",
          "183:         \"windows\": [",
          "184:             (\"windows-2016\", \"Windows 2016\", \"amd64\"),",
          "",
          "[Removed Lines]",
          "158:                 \"aarch64\",",
          "164:             (\"debian-11-arm64\", \"Debian 11 Arm64\", \"aarch64\", \"deb\", \"no-fips\"),",
          "166:             (\"debian-12-arm64\", \"Debian 12 Arm64\", \"aarch64\", \"deb\", \"no-fips\"),",
          "168:             (\"photonos-3-arm64\", \"Photon OS 3 Arm64\", \"aarch64\", \"rpm\", \"no-fips\"),",
          "170:             (\"photonos-4-arm64\", \"Photon OS 4 Arm64\", \"aarch64\", \"rpm\", \"fips\"),",
          "172:             (\"photonos-5-arm64\", \"Photon OS 5 Arm64\", \"aarch64\", \"rpm\", \"fips\"),",
          "174:             (\"ubuntu-20.04-arm64\", \"Ubuntu 20.04 Arm64\", \"aarch64\", \"deb\", \"no-fips\"),",
          "176:             (\"ubuntu-22.04-arm64\", \"Ubuntu 22.04 Arm64\", \"aarch64\", \"deb\", \"no-fips\"),",
          "181:             (\"macos-13-xlarge\", \"macOS 13 Arm64\", \"aarch64\"),",
          "",
          "[Added Lines]",
          "158:                 \"arm64\",",
          "164:             (\"debian-11-arm64\", \"Debian 11 Arm64\", \"arm64\", \"deb\", \"no-fips\"),",
          "166:             (\"debian-12-arm64\", \"Debian 12 Arm64\", \"arm64\", \"deb\", \"no-fips\"),",
          "168:             (\"photonos-3-arm64\", \"Photon OS 3 Arm64\", \"arm64\", \"rpm\", \"no-fips\"),",
          "170:             (\"photonos-4-arm64\", \"Photon OS 4 Arm64\", \"arm64\", \"rpm\", \"fips\"),",
          "172:             (\"photonos-5-arm64\", \"Photon OS 5 Arm64\", \"arm64\", \"rpm\", \"fips\"),",
          "174:             (\"ubuntu-20.04-arm64\", \"Ubuntu 20.04 Arm64\", \"arm64\", \"deb\", \"no-fips\"),",
          "176:             (\"ubuntu-22.04-arm64\", \"Ubuntu 22.04 Arm64\", \"arm64\", \"deb\", \"no-fips\"),",
          "181:             (\"macos-13-xlarge\", \"macOS 13 Arm64\", \"arm64\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "190:     build_ci_deps_listing = {",
          "191:         \"linux\": [",
          "227:         ],",
          "228:         \"macos\": [",
          "232:         ],",
          "233:         \"windows\": [",
          "237:         ],",
          "238:     }",
          "239:     test_salt_pkg_downloads_listing: dict[str, list[tuple[str, str, str]]] = {",
          "",
          "[Removed Lines]",
          "192:             (\"almalinux-8\", \"Alma Linux 8\", \"x86_64\"),",
          "193:             (\"almalinux-8-arm64\", \"Alma Linux 8 Arm64\", \"aarch64\"),",
          "194:             (\"almalinux-9\", \"Alma Linux 9\", \"x86_64\"),",
          "195:             (\"almalinux-9-arm64\", \"Alma Linux 9 Arm64\", \"aarch64\"),",
          "196:             (\"amazonlinux-2\", \"Amazon Linux 2\", \"x86_64\"),",
          "197:             (\"amazonlinux-2-arm64\", \"Amazon Linux 2 Arm64\", \"aarch64\"),",
          "198:             (\"amazonlinux-2023\", \"Amazon Linux 2023\", \"x86_64\"),",
          "199:             (\"amazonlinux-2023-arm64\", \"Amazon Linux 2023 Arm64\", \"aarch64\"),",
          "200:             (\"archlinux-lts\", \"Arch Linux LTS\", \"x86_64\"),",
          "201:             (\"centos-7\", \"CentOS 7\", \"x86_64\"),",
          "202:             (\"centos-7-arm64\", \"CentOS 7 Arm64\", \"aarch64\"),",
          "203:             (\"centosstream-8\", \"CentOS Stream 8\", \"x86_64\"),",
          "204:             (\"centosstream-8-arm64\", \"CentOS Stream 8 Arm64\", \"aarch64\"),",
          "205:             (\"centosstream-9\", \"CentOS Stream 9\", \"x86_64\"),",
          "206:             (\"centosstream-9-arm64\", \"CentOS Stream 9 Arm64\", \"aarch64\"),",
          "207:             (\"debian-10\", \"Debian 10\", \"x86_64\"),",
          "208:             (\"debian-11\", \"Debian 11\", \"x86_64\"),",
          "209:             (\"debian-11-arm64\", \"Debian 11 Arm64\", \"aarch64\"),",
          "210:             (\"debian-12\", \"Debian 12\", \"x86_64\"),",
          "211:             (\"debian-12-arm64\", \"Debian 12 Arm64\", \"aarch64\"),",
          "212:             (\"fedora-37\", \"Fedora 37\", \"x86_64\"),",
          "213:             (\"fedora-37-arm64\", \"Fedora 37 Arm64\", \"aarch64\"),",
          "214:             (\"fedora-38\", \"Fedora 38\", \"x86_64\"),",
          "215:             (\"fedora-38-arm64\", \"Fedora 38 Arm64\", \"aarch64\"),",
          "216:             (\"opensuse-15\", \"Opensuse 15\", \"x86_64\"),",
          "217:             (\"photonos-3\", \"Photon OS 3\", \"x86_64\"),",
          "218:             (\"photonos-3-arm64\", \"Photon OS 3 Arm64\", \"aarch64\"),",
          "219:             (\"photonos-4\", \"Photon OS 4\", \"x86_64\"),",
          "220:             (\"photonos-4-arm64\", \"Photon OS 4 Arm64\", \"aarch64\"),",
          "221:             (\"photonos-5\", \"Photon OS 5\", \"x86_64\"),",
          "222:             (\"photonos-5-arm64\", \"Photon OS 5 Arm64\", \"aarch64\"),",
          "223:             (\"ubuntu-20.04\", \"Ubuntu 20.04\", \"x86_64\"),",
          "224:             (\"ubuntu-20.04-arm64\", \"Ubuntu 20.04 Arm64\", \"aarch64\"),",
          "225:             (\"ubuntu-22.04\", \"Ubuntu 22.04\", \"x86_64\"),",
          "226:             (\"ubuntu-22.04-arm64\", \"Ubuntu 22.04 Arm64\", \"aarch64\"),",
          "229:             (\"macos-12\", \"macOS 12\", \"x86_64\"),",
          "230:             (\"macos-13\", \"macOS 13\", \"x86_64\"),",
          "231:             (\"macos-13-xlarge\", \"macOS 13 Arm64\", \"aarch64\"),",
          "234:             (\"windows-2016\", \"Windows 2016\", \"amd64\"),",
          "235:             (\"windows-2019\", \"Windows 2019\", \"amd64\"),",
          "236:             (\"windows-2022\", \"Windows 2022\", \"amd64\"),",
          "",
          "[Added Lines]",
          "192:             (\"x86_64\", \"centos-7\"),",
          "193:             (\"arm64\", \"centos-7-arm64\"),",
          "196:             (\"x86_64\", \"macos-12\"),",
          "197:             (\"arm64\", \"macos-13-xlarge\"),",
          "200:             (\"amd64\", \"windows-2022\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "249:         \"fedora\",",
          "250:         \"photon\",",
          "251:     ]",
          "253:         if slug in (\"archlinux-lts\", \"opensuse-15\"):",
          "254:             continue",
          "255:         test_salt_pkg_downloads_listing[\"linux\"].append((slug, arch, \"package\"))",
          "265:         if slug in (\"archlinux-lts\", \"opensuse-15\"):",
          "266:             continue",
          "267:         test_salt_pkg_downloads_listing[\"linux\"].append((slug, arch, \"onedir\"))",
          "271:         test_salt_pkg_downloads_listing[\"macos\"].append((slug, arch, \"package\"))",
          "273:         test_salt_pkg_downloads_listing[\"macos\"].append((slug, arch, \"onedir\"))",
          "275:         for pkg_type in (\"nsis\", \"msi\", \"onedir\"):",
          "276:             test_salt_pkg_downloads_listing[\"windows\"].append((slug, arch, pkg_type))",
          "278:     test_salt_pkg_downloads_needs_slugs = set()",
          "279:     for platform in test_salt_pkg_downloads_listing:",
          "283:     env = Environment(",
          "284:         block_start_string=\"<%\",",
          "",
          "[Removed Lines]",
          "252:     for slug, display_name, arch in build_ci_deps_listing[\"linux\"]:",
          "256:         # Account for old arm64 repo paths",
          "257:         if arch == \"aarch64\":",
          "258:             for test_slug in rpm_slugs:",
          "259:                 if slug.startswith(test_slug):",
          "260:                     test_salt_pkg_downloads_listing[\"linux\"].append(",
          "261:                         (slug, \"arm64\", \"package\")",
          "262:                     )",
          "263:                     break",
          "264:     for slug, display_name, arch in build_ci_deps_listing[\"linux\"][-2:]:",
          "268:     for slug, display_name, arch in build_ci_deps_listing[\"macos\"]:",
          "269:         if arch == \"aarch64\":",
          "270:             arch = \"arm64\"",
          "272:     for slug, display_name, arch in build_ci_deps_listing[\"macos\"][-1:]:",
          "274:     for slug, display_name, arch in build_ci_deps_listing[\"windows\"][-1:]:",
          "280:         for slug, _, _ in test_salt_pkg_downloads_listing[platform]:",
          "281:             test_salt_pkg_downloads_needs_slugs.add(f\"{slug.replace('.', '')}-ci-deps\")",
          "",
          "[Added Lines]",
          "216:     for slug, display_name, arch, fips in test_salt_listing[\"linux\"]:",
          "220:     for slug, display_name, arch, fips in test_salt_listing[\"linux\"][-2:]:",
          "224:     for slug, display_name, arch in test_salt_listing[\"macos\"]:",
          "226:     for slug, display_name, arch in test_salt_listing[\"macos\"][-1:]:",
          "228:     for slug, display_name, arch in test_salt_listing[\"windows\"][-1:]:",
          "234:         for _, arch, _ in test_salt_pkg_downloads_listing[platform]:",
          "235:             test_salt_pkg_downloads_needs_slugs.add(f\"{platform}-{arch}-ci-deps\")",
          "",
          "---------------"
        ],
        "tools/utils/__init__.py||tools/utils/__init__.py": [
          "File: tools/utils/__init__.py -> tools/utils/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:                     if chunk:",
          "260:                         f.write(chunk)",
          "261:     return dest",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264: def get_platform_and_arch_from_slug(slug: str) -> tuple[str, str]:",
          "265:     if \"windows\" in slug:",
          "266:         platform = \"windows\"",
          "267:         arch = \"amd64\"",
          "268:     elif \"macos\" in slug:",
          "269:         platform = \"macos\"",
          "270:         if \"macos-13\" in slug and \"xlarge\" in slug:",
          "271:             arch = \"arm64\"",
          "272:         else:",
          "273:             arch = \"x86_64\"",
          "274:     else:",
          "275:         platform = \"linux\"",
          "276:         if \"arm64\" in slug:",
          "277:             arch = \"arm64\"",
          "278:         elif \"aarch64\" in slug:",
          "279:             arch = \"arm64\"",
          "280:         else:",
          "281:             arch = \"x86_64\"",
          "282:     return platform, arch",
          "",
          "---------------"
        ],
        "tools/vm.py||tools/vm.py": [
          "File: tools/vm.py -> tools/vm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1468:         \"\"\"",
          "1469:         Compress .nox/ into nox.<vm-name>.tar.* in the VM",
          "1470:         \"\"\"",
          "1473:     def decompress_dependencies(self):",
          "1474:         \"\"\"",
          "1475:         Decompress nox.<vm-name>.tar.* if it exists in the VM",
          "1476:         \"\"\"",
          "1477:         env = {\"DELETE_NOX_ARCHIVE\": \"1\"}",
          "1478:         return self.run_nox(",
          "1480:         )",
          "1482:     def download_dependencies(self):",
          "",
          "[Removed Lines]",
          "1471:         return self.run_nox(\"compress-dependencies\", session_args=[self.name])",
          "1479:             \"decompress-dependencies\", session_args=[self.name], env=env",
          "",
          "[Added Lines]",
          "1471:         platform, arch = tools.utils.get_platform_and_arch_from_slug(self.name)",
          "1472:         return self.run_nox(\"compress-dependencies\", session_args=[platform, arch])",
          "1479:         platform, arch = tools.utils.get_platform_and_arch_from_slug(self.name)",
          "1481:             \"decompress-dependencies\", session_args=[platform, arch], env=env",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1484:         Download nox.<vm-name>.tar.* from VM",
          "1485:         \"\"\"",
          "1486:         if self.is_windows:",
          "1488:         else:",
          "1490:         remote_path = self.upload_path.joinpath(dependencies_filename).as_posix()",
          "1491:         if self.is_windows:",
          "1492:             for drive in (\"c:\", \"C:\"):",
          "",
          "[Removed Lines]",
          "1487:             dependencies_filename = f\"nox.{self.name}.tar.gz\"",
          "1489:             dependencies_filename = f\"nox.{self.name}.tar.xz\"",
          "",
          "[Added Lines]",
          "1489:             extension = \"tar.gz\"",
          "1491:             extension = \"tar.xz\"",
          "1492:         platform, arch = tools.utils.get_platform_and_arch_from_slug(self.name)",
          "1493:         dependencies_filename = f\"nox.{platform}.{arch}.{extension}\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bb31e253449cd4c25c2599257ff895947273b74",
      "candidate_info": {
        "commit_hash": "6bb31e253449cd4c25c2599257ff895947273b74",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/6bb31e253449cd4c25c2599257ff895947273b74",
        "files": [
          "pkg/debian/rules",
          "pkg/rpm/salt.spec"
        ],
        "message": "Fix source package build\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "pkg/rpm/salt.spec||pkg/rpm/salt.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pkg/rpm/salt.spec||pkg/rpm/salt.spec": [
          "File: pkg/rpm/salt.spec -> pkg/rpm/salt.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:   export FETCH_RELENV_VERSION=${SALT_RELENV_VERSION}",
          "170:   export PY=$(build/venv/bin/python3 -c 'import sys; sys.stdout.write(\"{}.{}\".format(*sys.version_info)); sys.stdout.flush()')",
          "171:   build/venv/bin/python3 -m pip install -r %{_salt_src}/requirements/static/ci/py${PY}/tools.txt",
          "174:   cd %{_salt_src}",
          "175:  $RPM_BUILD_DIR/build/venv/bin/tools pkg build onedir-dependencies --arch ${SALT_PACKAGE_ARCH} --relenv-version=${SALT_RELENV_VERSION} --python-version ${SALT_PYTHON_VERSION} --package-name $RPM_BUILD_DIR/build/salt --platform linux",
          "",
          "[Removed Lines]",
          "172:   build/venv/bin/relenv fetch --arch=${SALT_PACKAGE_ARCH} --python=${SALT_PYTHON_VERSION}",
          "173:   build/venv/bin/relenv toolchain fetch --arch=${SALT_PACKAGE_ARCH}",
          "",
          "[Added Lines]",
          "172:   build/venv/bin/relenv fetch --python=${SALT_PYTHON_VERSION}",
          "173:   build/venv/bin/relenv toolchain fetch",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfe7e1fecb3ada1e4ff7d74b0d0071b7d18d9f69",
      "candidate_info": {
        "commit_hash": "cfe7e1fecb3ada1e4ff7d74b0d0071b7d18d9f69",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/cfe7e1fecb3ada1e4ff7d74b0d0071b7d18d9f69",
        "files": [
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py"
        ],
        "message": "Define and laydown the state and pillar files only when required for tests\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: tests/pytests/pkg/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import yaml",
          "10: from pytestskipmarkers.utils import platform",
          "11: from saltfactories.utils import random_string",
          "14: import salt.config",
          "16: from tests.support.pkg import ApiRequest, SaltMaster, SaltMasterWindows, SaltPkgInstall",
          "18: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "12: from saltfactories.utils.tempfiles import SaltPillarTree, SaltStateTree",
          "15: from tests.conftest import CODE_DIR, TESTS_DIR",
          "",
          "[Added Lines]",
          "14: from tests.conftest import CODE_DIR",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "183: @pytest.fixture(scope=\"session\")",
          "229:     \"\"\"",
          "231:     \"\"\"",
          "232:     if platform.is_windows():",
          "234:     elif platform.is_darwin():",
          "236:     else:",
          "305:     start_timeout = None",
          "306:     # Since the daemons are \"packaged\" with tiamat, the salt plugins provided",
          "307:     # by salt-factories won't be discovered. Provide the required `*_dirs` on",
          "",
          "[Removed Lines]",
          "184: def state_tree():",
          "185:     if platform.is_windows():",
          "186:         file_root = pathlib.Path(\"C:/salt/srv/salt\")",
          "187:     elif platform.is_darwin():",
          "188:         file_root = pathlib.Path(\"/opt/srv/salt\")",
          "189:     else:",
          "190:         file_root = pathlib.Path(\"/srv/salt\")",
          "191:     envs = {",
          "192:         \"base\": [",
          "193:             str(file_root),",
          "194:             str(TESTS_DIR / \"pytests\" / \"pkg\" / \"files\"),",
          "195:         ],",
          "196:     }",
          "197:     tree = SaltStateTree(envs=envs)",
          "198:     test_sls_contents = \"\"\"",
          "199:     test_foo:",
          "200:       test.succeed_with_changes:",
          "201:           - name: foo",
          "202:     \"\"\"",
          "203:     states_sls_contents = \"\"\"",
          "204:     update:",
          "205:       pkg.installed:",
          "206:         - name: bash",
          "207:     salt_dude:",
          "208:       user.present:",
          "209:         - name: dude",
          "210:         - fullname: Salt Dude",
          "211:     \"\"\"",
          "212:     win_states_sls_contents = \"\"\"",
          "213:     create_empty_file:",
          "214:       file.managed:",
          "215:         - name: C://salt/test/txt",
          "216:     salt_dude:",
          "217:       user.present:",
          "218:         - name: dude",
          "219:         - fullname: Salt Dude",
          "220:     \"\"\"",
          "221:     with tree.base.temp_file(\"test.sls\", test_sls_contents), tree.base.temp_file(",
          "222:         \"states.sls\", states_sls_contents",
          "223:     ), tree.base.temp_file(\"win_states.sls\", win_states_sls_contents):",
          "224:         yield tree",
          "227: @pytest.fixture(scope=\"session\")",
          "228: def pillar_tree():",
          "230:     Add pillar files",
          "233:         pillar_root = pathlib.Path(\"C:/salt/srv/pillar\")",
          "235:         pillar_root = pathlib.Path(\"/opt/srv/pillar\")",
          "237:         pillar_root = pathlib.Path(\"/srv/pillar\")",
          "238:     pillar_root.mkdir(mode=0o777, parents=True, exist_ok=True)",
          "239:     tree = SaltPillarTree(",
          "240:         envs={",
          "241:             \"base\": [",
          "242:                 str(pillar_root),",
          "243:             ]",
          "244:         },",
          "245:     )",
          "246:     top_file_contents = \"\"\"",
          "247:     base:",
          "248:       '*':",
          "249:         - test",
          "250:     \"\"\"",
          "251:     test_file_contents = \"\"\"",
          "252:     info: test",
          "253:     \"\"\"",
          "254:     with tree.base.temp_file(\"top.sls\", top_file_contents), tree.base.temp_file(",
          "255:         \"test.sls\", test_file_contents",
          "256:     ):",
          "257:         yield tree",
          "260: @pytest.fixture(scope=\"module\")",
          "261: def sls(state_tree):",
          "262:     \"\"\"",
          "263:     Add an sls file",
          "264:     \"\"\"",
          "265:     test_sls_contents = \"\"\"",
          "266:     test_foo:",
          "267:       test.succeed_with_changes:",
          "268:           - name: foo",
          "269:     \"\"\"",
          "270:     states_sls_contents = \"\"\"",
          "271:     update:",
          "272:       pkg.installed:",
          "273:         - name: bash",
          "274:     salt_dude:",
          "275:       user.present:",
          "276:         - name: dude",
          "277:         - fullname: Salt Dude",
          "278:     \"\"\"",
          "279:     win_states_sls_contents = \"\"\"",
          "280:     create_empty_file:",
          "281:       file.managed:",
          "282:         - name: C://salt/test/txt",
          "283:     salt_dude:",
          "284:       user.present:",
          "285:         - name: dude",
          "286:         - fullname: Salt Dude",
          "287:     \"\"\"",
          "288:     with state_tree.base.temp_file(",
          "289:         \"tests.sls\", test_sls_contents",
          "290:     ), state_tree.base.temp_file(",
          "291:         \"states.sls\", states_sls_contents",
          "292:     ), state_tree.base.temp_file(",
          "293:         \"win_states.sls\", win_states_sls_contents",
          "294:     ):",
          "295:         yield",
          "298: @pytest.fixture(scope=\"session\")",
          "299: def salt_master(",
          "300:     salt_factories, install_salt, state_tree, pillar_tree, pkg_tests_account",
          "301: ):",
          "302:     \"\"\"",
          "303:     Start up a master",
          "304:     \"\"\"",
          "",
          "[Added Lines]",
          "183: def salt_master(salt_factories, install_salt, pkg_tests_account):",
          "185:     Start up a master",
          "188:         state_tree = \"C:/salt/srv/salt\"",
          "189:         pillar_tree = \"C:/salt/srv/pillar\"",
          "191:         state_tree = \"/opt/srv/salt\"",
          "192:         pillar_tree = \"/opt/srv/pillar\"",
          "194:         state_tree = \"/srv/salt\"",
          "195:         pillar_tree = \"/srv/pillar\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:         config_defaults[\"enable_fqdns_grains\"] = False",
          "319:     config_overrides = {",
          "320:         \"timeout\": 30,",
          "324:         \"netapi_enable_clients\": [\"local\"],",
          "325:         \"external_auth\": {",
          "326:             \"auto\": {",
          "",
          "[Removed Lines]",
          "321:         \"file_roots\": state_tree.as_dict(),",
          "322:         \"pillar_roots\": pillar_tree.as_dict(),",
          "323:         \"rest_cherrypy\": {\"port\": 8000, \"disable_ssl\": True},",
          "",
          "[Added Lines]",
          "213:         \"file_roots\": {",
          "214:             \"base\": [",
          "215:                 state_tree,",
          "216:             ]",
          "217:         },",
          "218:         \"pillar_roots\": {",
          "219:             \"base\": [",
          "220:                 pillar_tree,",
          "221:             ]",
          "222:         },",
          "223:         \"rest_cherrypy\": {",
          "224:             \"port\": 8000,",
          "225:             \"disable_ssl\": True,",
          "226:         },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "432:             ],",
          "433:             check=True,",
          "434:         )",
          "435:         # The engines_dirs is created in .nox path. We need to set correct perms",
          "436:         # for the user running the Salt Master",
          "445:     with factory.started(start_timeout=start_timeout):",
          "446:         yield factory",
          "",
          "[Removed Lines]",
          "437:         subprocess.run(",
          "438:             [\"chown\", \"-R\", \"salt:salt\", str(CODE_DIR.parent / \".nox\")], check=False",
          "439:         )",
          "440:         file_roots = pathlib.Path(\"/srv/\", \"salt\")",
          "441:         pillar_roots = pathlib.Path(\"/srv/\", \"pillar\")",
          "442:         for _dir in [file_roots, pillar_roots]:",
          "443:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)], check=False)",
          "",
          "[Added Lines]",
          "341:         check_paths = [state_tree, pillar_tree, CODE_DIR / \".nox\"]",
          "342:         for path in check_paths:",
          "343:             if os.path.exists(path) is False:",
          "344:                 continue",
          "345:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(path)], check=False)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "494:     # which sets root perms on /srv/salt and /srv/pillar since we are running",
          "495:     # the test suite as root, but we want to run Salt master as salt",
          "496:     if not platform.is_windows() and not platform.is_darwin():",
          "502:     factory.after_terminate(",
          "503:         pytest.helpers.remove_stale_minion_key, salt_master, factory.id",
          "",
          "[Removed Lines]",
          "497:         file_roots = pathlib.Path(\"/srv/\", \"salt\")",
          "498:         pillar_roots = pathlib.Path(\"/srv/\", \"pillar\")",
          "499:         for _dir in [file_roots, pillar_roots]:",
          "500:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(_dir)], check=True)",
          "",
          "[Added Lines]",
          "399:         state_tree = \"/srv/salt\"",
          "400:         pillar_tree = \"/srv/pillar\"",
          "401:         check_paths = [state_tree, pillar_tree, CODE_DIR / \".nox\"]",
          "402:         for path in check_paths:",
          "403:             if os.path.exists(path) is False:",
          "404:                 continue",
          "405:             subprocess.run([\"chown\", \"-R\", \"salt:salt\", str(path)], check=False)",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py": [
          "File: tests/pytests/pkg/integration/test_salt_call.py -> tests/pytests/pkg/integration/test_salt_call.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:     Test salt-call --local test.ping",
          "7:     \"\"\"",
          "8:     ret = salt_call_cli.run(\"--local\", \"test.ping\")",
          "10:     assert ret.returncode == 0",
          "13: def test_salt_call(salt_call_cli):",
          "",
          "[Removed Lines]",
          "9:     assert ret.data is True",
          "",
          "[Added Lines]",
          "10:     assert ret.data is True",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:     Test salt-call test.ping",
          "16:     \"\"\"",
          "17:     ret = salt_call_cli.run(\"test.ping\")",
          "19:     assert ret.returncode == 0",
          "23:     \"\"\"",
          "24:     Test calling a sls file",
          "25:     \"\"\"",
          "28:     sls_ret = ret.data[next(iter(ret.data))]",
          "29:     assert sls_ret[\"changes\"][\"testing\"][\"new\"] == \"Something pretended to change\"",
          "33: def test_salt_call_local_sys_doc_none(salt_call_cli):",
          "",
          "[Removed Lines]",
          "18:     assert ret.data is True",
          "22: def test_sls(salt_call_cli):",
          "26:     ret = salt_call_cli.run(\"state.apply\", \"test\")",
          "27:     assert ret.data, ret",
          "30:     assert ret.returncode == 0",
          "",
          "[Added Lines]",
          "19:     assert ret.data is True",
          "22: @pytest.fixture",
          "23: def state_name(salt_master):",
          "24:     name = \"some-test-state\"",
          "25:     sls_contents = \"\"\"",
          "26:     test_foo:",
          "27:       test.succeed_with_changes:",
          "28:           - name: foo",
          "29:     \"\"\"",
          "30:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "31:         yield name",
          "34: def test_sls(salt_call_cli, state_name):",
          "38:     ret = salt_call_cli.run(\"state.apply\", state_name)",
          "39:     assert ret.returncode == 0",
          "40:     assert ret.data",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:     Test salt-call --local sys.doc none",
          "36:     \"\"\"",
          "37:     ret = salt_call_cli.run(\"--local\", \"sys.doc\", \"none\")",
          "39:     assert ret.returncode == 0",
          "42: def test_salt_call_local_sys_doc_aliases(salt_call_cli):",
          "",
          "[Removed Lines]",
          "38:     assert not ret.data",
          "",
          "[Added Lines]",
          "51:     assert not ret.data",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "44:     Test salt-call --local sys.doc aliases",
          "45:     \"\"\"",
          "46:     ret = salt_call_cli.run(\"--local\", \"sys.doc\", \"aliases.list_aliases\")",
          "48:     assert ret.returncode == 0",
          "52: def test_salt_call_cmd_run_id_runas(salt_call_cli, pkg_tests_account, caplog):",
          "53:     \"\"\"",
          "54:     Test salt-call --local cmd_run id with runas",
          "",
          "[Removed Lines]",
          "47:     assert \"aliases.list_aliases\" in ret.data",
          "51: @pytest.mark.skip_on_windows()",
          "",
          "[Added Lines]",
          "60:     assert \"aliases.list_aliases\" in ret.data",
          "63: @pytest.mark.skip_on_windows",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py": [
          "File: tests/pytests/pkg/integration/test_salt_pillar.py -> tests/pytests/pkg/integration/test_salt_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: ]",
          "9:     \"\"\"",
          "10:     Test pillar.items",
          "11:     \"\"\"",
          "12:     ret = salt_cli.run(\"pillar.items\", minion_tgt=salt_minion.id)",
          "",
          "[Removed Lines]",
          "8: def test_salt_pillar(salt_cli, salt_minion):",
          "13:     assert \"info\" in ret.data",
          "",
          "[Added Lines]",
          "8: @pytest.fixture",
          "9: def pillar_name(salt_master):",
          "10:     name = \"info\"",
          "11:     top_file_contents = \"\"\"",
          "12:     base:",
          "13:       '*':",
          "14:         - test",
          "15:     \"\"\"",
          "16:     test_file_contents = f\"\"\"",
          "17:     {name}: test",
          "18:     \"\"\"",
          "19:     with salt_master.pillar_tree.base.temp_file(",
          "20:         \"top.sls\", top_file_contents",
          "21:     ), salt_master.pillar_tree.base.temp_file(\"test.sls\", test_file_contents):",
          "22:         yield name",
          "25: def test_salt_pillar(salt_cli, salt_minion, pillar_name):",
          "30:     assert ret.returncode == 0",
          "31:     assert pillar_name in ret.data",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py": [
          "File: tests/pytests/pkg/integration/test_salt_state_file.py -> tests/pytests/pkg/integration/test_salt_state_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: ]",
          "14:     if sys.platform.startswith(\"win\"):",
          "16:     else:",
          "20:     if ret.stdout and \"Minion did not return\" in ret.stdout:",
          "21:         pytest.skip(\"Skipping test, state took too long to apply\")",
          "22:     sls_ret = ret.data[next(iter(ret.data))]",
          "",
          "[Removed Lines]",
          "10: def test_salt_state_file(salt_cli, salt_minion):",
          "11:     \"\"\"",
          "12:     Test state file",
          "13:     \"\"\"",
          "15:         ret = salt_cli.run(\"state.apply\", \"win_states\", minion_tgt=salt_minion.id)",
          "17:         ret = salt_cli.run(\"state.apply\", \"states\", minion_tgt=salt_minion.id)",
          "19:     assert ret.data, ret",
          "",
          "[Added Lines]",
          "10: @pytest.fixture",
          "11: def state_name(salt_master):",
          "12:     name = \"some-state\"",
          "14:         sls_contents = \"\"\"",
          "15:     create_empty_file:",
          "16:       file.managed:",
          "17:         - name: C://salt/test/txt",
          "18:     salt_dude:",
          "19:       user.present:",
          "20:         - name: dude",
          "21:         - fullname: Salt Dude",
          "22:     \"\"\"",
          "24:         sls_contents = \"\"\"",
          "25:     update:",
          "26:       pkg.installed:",
          "27:         - name: bash",
          "28:     salt_dude:",
          "29:       user.present:",
          "30:         - name: dude",
          "31:         - fullname: Salt Dude",
          "32:     \"\"\"",
          "33:     with salt_master.state_tree.base.temp_file(f\"{name}.sls\", sls_contents):",
          "34:         yield name",
          "37: def test_salt_state_file(salt_cli, salt_minion, state_name):",
          "38:     \"\"\"",
          "39:     Test state file",
          "40:     \"\"\"",
          "41:     ret = salt_cli.run(\"state.apply\", state_name, minion_tgt=salt_minion.id)",
          "42:     assert ret.returncode == 0",
          "43:     assert ret.data",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81905044bd7806571fe507e76425f2045af28b9a",
      "candidate_info": {
        "commit_hash": "81905044bd7806571fe507e76425f2045af28b9a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/81905044bd7806571fe507e76425f2045af28b9a",
        "files": [
          "tools/ci.py"
        ],
        "message": "Increase concurrency in CI pipelines.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/ci.py||tools/ci.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/ci.py||tools/ci.py": [
          "File: tools/ci.py -> tools/ci.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "656:         \"functional\": 3,",
          "657:         \"integration\": 5,",
          "658:         \"scenarios\": 1,",
          "660:     }",
          "661:     # On nightly and scheduled builds we don't want splits at all",
          "662:     if workflow.lower() in (\"nightly\", \"scheduled\"):",
          "",
          "[Removed Lines]",
          "659:         \"unit\": 2,",
          "",
          "[Added Lines]",
          "659:         \"unit\": 4,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "457d5f71fc56f6c142a910b0c83dc1007a4fb5ec",
      "candidate_info": {
        "commit_hash": "457d5f71fc56f6c142a910b0c83dc1007a4fb5ec",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/457d5f71fc56f6c142a910b0c83dc1007a4fb5ec",
        "files": [
          "tests/support/pkg.py"
        ],
        "message": "Exitcode 3 just means the service is not running.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/support/pkg.py||tests/support/pkg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/support/pkg.py||tests/support/pkg.py": [
          "File: tests/support/pkg.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "868:         ret = self.proc.run(\"systemctl\", \"daemon-reload\")",
          "869:         self._check_retcode(ret)",
          "870:         ret = self.proc.run(\"systemctl\", \"status\", service)",
          "872:             log.warning(",
          "873:                 \"No systemd unit file was found for service %s. Creating one.\", service",
          "874:             )",
          "",
          "[Removed Lines]",
          "871:         if ret.returncode in (3, 4):",
          "",
          "[Added Lines]",
          "871:         if ret.returncode == 4:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "892:                 binary = shutil.which(binary[0]) or binary[0]",
          "893:             elif isinstance(binary, list):",
          "894:                 binary = \" \".join(binary)",
          "896:             contents = contents.format(",
          "897:                 service=service, tgt=binary, conf_dir=self.conf_dir",
          "898:             )",
          "",
          "[Removed Lines]",
          "895:             unit_path = pathlib.Path(\"/etc\", \"systemd\", \"system\", f\"{service}.service\")",
          "",
          "[Added Lines]",
          "895:             unit_path = pathlib.Path(f\"/etc/systemd/system/{service}.service\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "336da2a29797665e062d5c700a66165c957f9579",
      "candidate_info": {
        "commit_hash": "336da2a29797665e062d5c700a66165c957f9579",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/336da2a29797665e062d5c700a66165c957f9579",
        "files": [
          ".github/workflows/templates/build-deb-repo.yml.jinja",
          "tools/precommit/workflows.py"
        ],
        "message": "Define the DEBs listing outside of the template\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja",
          "tools/precommit/workflows.py||tools/precommit/workflows.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deb-repo.yml.jinja||.github/workflows/templates/build-deb-repo.yml.jinja": [
          "File: .github/workflows/templates/build-deb-repo.yml.jinja -> .github/workflows/templates/build-deb-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:       fail-fast: false",
          "4:       matrix:",
          "5:         include:",
          "18:           - pkg-type: deb",
          "19:             distro: <{ distro }>",
          "20:             version: \"<{ version }>\"",
          "",
          "[Removed Lines]",
          "6:         <%- for distro, version, arch in (",
          "7:                                             (\"debian\", \"10\", \"x86_64\"),",
          "8:                                             (\"debian\", \"10\", \"arm64\"),",
          "9:                                             (\"debian\", \"11\", \"x86_64\"),",
          "10:                                             (\"debian\", \"11\", \"arm64\"),",
          "11:                                             (\"debian\", \"12\", \"x86_64\"),",
          "12:                                             (\"debian\", \"12\", \"arm64\"),",
          "13:                                             (\"ubuntu\", \"20.04\", \"x86_64\"),",
          "14:                                             (\"ubuntu\", \"20.04\", \"arm64\"),",
          "15:                                             (\"ubuntu\", \"22.04\", \"x86_64\"),",
          "16:                                             (\"ubuntu\", \"22.04\", \"arm64\"),",
          "17:                                         ) %>",
          "",
          "[Added Lines]",
          "6:         <%- for distro, version, arch in build_debs_listing %>",
          "",
          "---------------"
        ],
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:             for arch in (\"x86_64\", \"arm64\", \"aarch64\"):",
          "264:                 build_rpms_listing.append((distro, release, arch))",
          "266:     env = Environment(",
          "267:         block_start_string=\"<%\",",
          "268:         block_end_string=\"%>\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266:     build_debs_listing = []",
          "267:     for distro, releases in (",
          "268:         (\"debian\", (\"10\", \"11\", \"12\")),",
          "269:         (\"ubuntu\", (\"20.04\", \"22.04\")),",
          "270:     ):",
          "271:         for release in releases:",
          "272:             for arch in (\"x86_64\", \"arm64\"):",
          "273:                 build_debs_listing.append((distro, release, arch))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "305:                 test_salt_pkg_downloads_needs_slugs",
          "306:             ),",
          "307:             \"build_rpms_listing\": build_rpms_listing,",
          "308:         }",
          "309:         shared_context_file = (",
          "310:             tools.utils.REPO_ROOT / \"cicd\" / \"shared-gh-workflows-context.yml\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:             \"build_debs_listing\": build_debs_listing,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "562368ce2ebe06f93d13a12948c5af2102587248",
      "candidate_info": {
        "commit_hash": "562368ce2ebe06f93d13a12948c5af2102587248",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/562368ce2ebe06f93d13a12948c5af2102587248",
        "files": [
          "tools/utils/gh.py"
        ],
        "message": "Fix the path to where package downloads should go\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/utils/gh.py||tools/utils/gh.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/utils/gh.py||tools/utils/gh.py": [
          "File: tools/utils/gh.py -> tools/utils/gh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:             ctx.error(f\"We do not build packages for {slug}\")",
          "196:             return ExitCode.FAIL",
          "199:     artifacts_path.mkdir(exist_ok=True)",
          "201:     ctx.info(",
          "",
          "[Removed Lines]",
          "198:     artifacts_path = tools.utils.REPO_ROOT / \"pkg\" / \"artifacts\"",
          "",
          "[Added Lines]",
          "198:     artifacts_path = tools.utils.REPO_ROOT / \"artifacts\" / \"pkg\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c10c8a7a2008c963289f41f2c4b233e26508d36a",
      "candidate_info": {
        "commit_hash": "c10c8a7a2008c963289f41f2c4b233e26508d36a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/c10c8a7a2008c963289f41f2c4b233e26508d36a",
        "files": [
          "tests/pytests/unit/test_fileserver.py"
        ],
        "message": "Fix linter issue",
        "before_after_code_files": [
          "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ],
          "candidate": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
          "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import datetime",
          "6: import os",
          "7: import time",
          "",
          "[Removed Lines]",
          "1: \"\"\"",
          "2: \"\"\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8a9712c969a16dfdd9f9a84235fc6c8f4460705c",
      "candidate_info": {
        "commit_hash": "8a9712c969a16dfdd9f9a84235fc6c8f4460705c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/8a9712c969a16dfdd9f9a84235fc6c8f4460705c",
        "files": [
          ".github/workflows/build-docs.yml"
        ],
        "message": "Build documentation on GitHub Hosted Runners\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "de08988edd9566a611f54a793b425ac63f883fe9",
      "candidate_info": {
        "commit_hash": "de08988edd9566a611f54a793b425ac63f883fe9",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/de08988edd9566a611f54a793b425ac63f883fe9",
        "files": [
          "changelog/665924.changed.md",
          "salt/utils/versions.py"
        ],
        "message": "Stop time bombing with `RuntimeError`'s\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "salt/utils/versions.py||salt/utils/versions.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/utils/versions.py||salt/utils/versions.py": [
          "File: salt/utils/versions.py -> salt/utils/versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:     which works under python 3 because on python 3 you can no longer compare",
          "7:     strings against integers.",
          "8: \"\"\"",
          "11: import datetime",
          "12: import inspect",
          "13: import logging",
          "14: import numbers",
          "15: import sys",
          "16: import warnings",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: import os",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:     if _version_ >= version:",
          "173:         caller = inspect.getframeinfo(sys._getframe(stacklevel - 1))",
          "175:             \"The warning triggered on filename '{filename}', line number \"",
          "176:             \"{lineno}, is supposed to be shown until version \"",
          "177:             \"{until_version} is released. Current version is now \"",
          "",
          "[Removed Lines]",
          "174:         raise RuntimeError(",
          "",
          "[Added Lines]",
          "173:         deprecated_message = (",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:                 lineno=caller.lineno,",
          "181:                 until_version=version.formatted_version,",
          "182:                 salt_version=_version_.formatted_version,",
          "184:         )",
          "186:     if _dont_call_warnings is False:",
          "187:         warnings.warn(",
          "",
          "[Removed Lines]",
          "183:             ),",
          "",
          "[Added Lines]",
          "182:             )",
          "184:         if os.environ.get(\"RAISE_DEPRECATIONS_RUNTIME_ERRORS\", \"0\") == \"1\":",
          "185:             # We don't raise RuntimeError by default since that can break",
          "186:             # users systems. We do however want to raise them in a CI context.",
          "187:             raise RuntimeError(deprecated_message)",
          "188:         # Otherwise, print the deprecated message to STDERR",
          "189:         sys.stderr.write(f\"\\n{deprecated_message}\\n\")",
          "190:         sys.stderr.flush()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "239:     today = _current_date or datetime.datetime.utcnow().date()",
          "240:     if today >= date:",
          "241:         caller = inspect.getframeinfo(sys._getframe(stacklevel - 1))",
          "243:             \"{message} This warning(now exception) triggered on \"",
          "244:             \"filename '{filename}', line number {lineno}, is \"",
          "245:             \"supposed to be shown until {date}. Today is {today}. \"",
          "",
          "[Removed Lines]",
          "242:         raise RuntimeError(",
          "",
          "[Added Lines]",
          "248:         deprecated_message = (",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "251:                 today=today.isoformat(),",
          "252:             ),",
          "253:         )",
          "255:     if _dont_call_warnings is False:",
          "256:         warnings.warn(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "260:         if os.environ.get(\"RAISE_DEPRECATIONS_RUNTIME_ERRORS\", \"0\") == \"1\":",
          "261:             # We don't raise RuntimeError by default since that can break",
          "262:             # users systems. We do however want to raise them in a CI context.",
          "263:             raise RuntimeError(deprecated_message)",
          "264:         # Otherwise, print the deprecated message to STDERR",
          "265:         sys.stderr.write(f\"\\n{deprecated_message}\\n\")",
          "266:         sys.stderr.flush()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b2e9cae6a4d0370880f9163df8eda4bdcbdbd24",
      "candidate_info": {
        "commit_hash": "4b2e9cae6a4d0370880f9163df8eda4bdcbdbd24",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4b2e9cae6a4d0370880f9163df8eda4bdcbdbd24",
        "files": [
          "tools/testsuite/__init__.py",
          "tools/testsuite/download.py",
          "tools/utils/gh.py"
        ],
        "message": "Fix CI nox artifacts download\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/testsuite/__init__.py||tools/testsuite/__init__.py",
          "tools/testsuite/download.py||tools/testsuite/download.py",
          "tools/utils/gh.py||tools/utils/gh.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/testsuite/__init__.py||tools/testsuite/__init__.py": [
          "File: tools/testsuite/__init__.py -> tools/testsuite/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:         },",
          "49:         \"platform\": {",
          "50:             \"help\": \"The onedir platform artifact to download\",",
          "52:             \"required\": True,",
          "53:         },",
          "54:         \"arch\": {",
          "",
          "[Removed Lines]",
          "51:             \"choices\": (\"linux\", \"darwin\", \"windows\"),",
          "",
          "[Added Lines]",
          "51:             \"choices\": (\"linux\", \"macos\", \"windows\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:     if exitcode and exitcode != ExitCode.SOFT_FAIL:",
          "147:         ctx.exit(exitcode)",
          "148:     exitcode = tools.utils.gh.download_nox_artifact(",
          "150:     )",
          "151:     if exitcode and exitcode != ExitCode.SOFT_FAIL:",
          "152:         ctx.exit(exitcode)",
          "",
          "[Removed Lines]",
          "149:         ctx, run_id=run_id, slug=slug, nox_env=\"ci-test-onedir\", repository=repository",
          "",
          "[Added Lines]",
          "149:         ctx,",
          "150:         run_id=run_id,",
          "151:         platform=platform,",
          "152:         arch=arch,",
          "153:         nox_env=\"ci-test-onedir\",",
          "154:         repository=repository,",
          "",
          "---------------"
        ],
        "tools/testsuite/download.py||tools/testsuite/download.py": [
          "File: tools/testsuite/download.py -> tools/testsuite/download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:             \"help\": \"The workflow run ID from where to download artifacts from\",",
          "78:             \"required\": True,",
          "79:         },",
          "82:             \"required\": True,",
          "84:         },",
          "85:         \"nox_env\": {",
          "86:             \"help\": \"The nox environment name.\",",
          "",
          "[Removed Lines]",
          "80:         \"slug\": {",
          "81:             \"help\": \"The OS slug\",",
          "83:             \"choices\": OS_SLUGS,",
          "",
          "[Added Lines]",
          "80:         \"platform\": {",
          "81:             \"help\": \"The onedir platform artifact to download\",",
          "82:             \"choices\": (\"linux\", \"macos\", \"windows\"),",
          "83:             \"required\": True,",
          "84:         },",
          "85:         \"arch\": {",
          "86:             \"help\": \"The onedir artifact architecture\",",
          "87:             \"choices\": (\"x86_64\", \"aarch64\", \"amd64\", \"x86\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93: def download_nox_artifact(",
          "94:     ctx: Context,",
          "95:     run_id: int = None,",
          "97:     nox_env: str = \"ci-test-onedir\",",
          "98:     repository: str = \"saltstack/salt\",",
          "99: ):",
          "",
          "[Removed Lines]",
          "96:     slug: str = None,",
          "",
          "[Added Lines]",
          "101:     platform: str = None,",
          "102:     arch: str = None,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:     \"\"\"",
          "103:     if TYPE_CHECKING:",
          "104:         assert run_id is not None",
          "111:     exitcode = tools.utils.gh.download_nox_artifact(",
          "113:     )",
          "114:     ctx.exit(exitcode)",
          "",
          "[Removed Lines]",
          "105:         assert slug is not None",
          "107:     if slug.endswith(\"arm64\"):",
          "108:         slug = slug.replace(\"-arm64\", \"\")",
          "109:         nox_env += \"-aarch64\"",
          "112:         ctx=ctx, run_id=run_id, slug=slug, nox_env=nox_env, repository=repository",
          "",
          "[Added Lines]",
          "111:         assert arch is not None",
          "112:         assert platform is not None",
          "115:         ctx=ctx,",
          "116:         run_id=run_id,",
          "117:         platform=platform,",
          "118:         arch=arch,",
          "119:         nox_env=nox_env,",
          "120:         repository=repository,",
          "",
          "---------------"
        ],
        "tools/utils/gh.py||tools/utils/gh.py": [
          "File: tools/utils/gh.py -> tools/utils/gh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: def download_nox_artifact(",
          "107:     ctx: Context,",
          "108:     run_id: int = None,",
          "110:     nox_env: str = \"ci-test-onedir\",",
          "111:     repository: str = \"saltstack/salt\",",
          "112: ) -> ExitCode:",
          "",
          "[Removed Lines]",
          "109:     slug: str = None,",
          "",
          "[Added Lines]",
          "108:     platform: str,",
          "109:     arch: str,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     \"\"\"",
          "116:     if TYPE_CHECKING:",
          "117:         assert run_id is not None",
          "120:     artifacts_path = tools.utils.REPO_ROOT / \".nox\" / nox_env",
          "121:     if artifacts_path.exists():",
          "",
          "[Removed Lines]",
          "118:         assert slug is not None",
          "",
          "[Added Lines]",
          "119:         assert arch is not None",
          "120:         assert platform is not None",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:             f\"The '.nox/{nox_env}' directory already exists ... Stopped processing.\"",
          "124:         )",
          "125:         return ExitCode.SOFT_FAIL",
          "127:     ctx.info(",
          "128:         f\"Searching for artifact {artifact_name} from run_id {run_id} in repository {repository} ...\"",
          "129:     )",
          "",
          "[Removed Lines]",
          "126:     artifact_name = f\"nox-{slug}-{nox_env}\"",
          "",
          "[Added Lines]",
          "128:     artifact_name = f\"nox-{platform}-{arch}-{nox_env}\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:         ctx.error(\"Could not find the 'nox' binary in $PATH\")",
          "140:         return ExitCode.FAIL",
          "141:     ret = ctx.run(",
          "143:     )",
          "144:     if ret.returncode:",
          "145:         ctx.error(\"Failed to decompress the nox dependencies\")",
          "",
          "[Removed Lines]",
          "142:         nox, \"--force-color\", \"-e\", \"decompress-dependencies\", \"--\", slug, check=False",
          "",
          "[Added Lines]",
          "144:         nox,",
          "145:         \"--force-color\",",
          "146:         \"-e\",",
          "147:         \"decompress-dependencies\",",
          "148:         \"--\",",
          "149:         platform,",
          "150:         arch,",
          "151:         check=False,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d37d30ce755bb67eb413cd5921d0e063bcaeeeb",
      "candidate_info": {
        "commit_hash": "6d37d30ce755bb67eb413cd5921d0e063bcaeeeb",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/6d37d30ce755bb67eb413cd5921d0e063bcaeeeb",
        "files": [
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Package tests matrix jobs need to run on our own runners\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "ee3681fe7ba3b2bf8b37e6927335b4099091660b",
      "candidate_info": {
        "commit_hash": "ee3681fe7ba3b2bf8b37e6927335b4099091660b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/ee3681fe7ba3b2bf8b37e6927335b4099091660b",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-docs.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/lint-action.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Set `PIP_DISABLE_PIP_VERSION_CHECK=1` on CI workflows\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:   AWS_RETRY_MODE: \"adaptive\"",
          "43:   PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/",
          "44:   PIP_EXTRA_INDEX_URL: https://pypi.org/simple",
          "46: jobs:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   COLUMNS: 190",
          "37:   CACHE_SEED: SEED-7  # Bump the number to invalidate all caches",
          "38:   RELENV_DATA: \"${{ github.workspace }}/.relenv\"",
          "40: <%- endblock env %>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   AWS_RETRY_MODE: \"adaptive\"",
          "51:   PIP_INDEX_URL: https://pypi-proxy.saltstack.net/root/local/+simple/",
          "52:   PIP_EXTRA_INDEX_URL: https://pypi.org/simple",
          "54: jobs:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:   PIP_DISABLE_PIP_VERSION_CHECK: \"1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af8ae6d3b70578313f1bdf1a9fbd9952eaf36ac8",
      "candidate_info": {
        "commit_hash": "af8ae6d3b70578313f1bdf1a9fbd9952eaf36ac8",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/af8ae6d3b70578313f1bdf1a9fbd9952eaf36ac8",
        "files": [
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-package-downloads-action.yml",
          "tools/pkg/build.py"
        ],
        "message": "Stop using `aarch64`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deb-repo.yml.jinja||.githuworkflows/templates/build-deb-repo.yml.jinja",
          ".github/workflows/templates/build-macos-repo.yml.jinja||.githuworkflows/templates/build-macos-repo.yml.jinja",
          ".github/workflows/templates/build-onedir-repo.yml.jinja||.githuworkflows/templates/build-onedir-repo.yml.jinja",
          ".github/workflows/templates/build-rpm-repo.yml.jinja||.githuworkflows/templates/build-rpm-repo.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "tools/pkg/build.py||tools/pkg/build.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deb-repo.yml.jinja||.githuworkflows/templates/build-deb-repo.yml.jinja": [
          "File: .github/workflows/templates/build-deb-repo.yml.jinja -> .githuworkflows/templates/build-deb-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:         include:",
          "6:         <%- for distro, version, arch in (",
          "7:                                             (\"debian\", \"10\", \"x86_64\"),",
          "9:                                             (\"debian\", \"11\", \"x86_64\"),",
          "11:                                             (\"debian\", \"12\", \"x86_64\"),",
          "13:                                             (\"ubuntu\", \"20.04\", \"x86_64\"),",
          "15:                                             (\"ubuntu\", \"22.04\", \"x86_64\"),",
          "17:                                         ) %>",
          "18:           - pkg-type: deb",
          "19:             distro: <{ distro }>",
          "",
          "[Removed Lines]",
          "8:                                             (\"debian\", \"10\", \"aarch64\"),",
          "10:                                             (\"debian\", \"11\", \"aarch64\"),",
          "12:                                             (\"debian\", \"12\", \"aarch64\"),",
          "14:                                             (\"ubuntu\", \"20.04\", \"aarch64\"),",
          "16:                                             (\"ubuntu\", \"22.04\", \"aarch64\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-macos-repo.yml.jinja||.githuworkflows/templates/build-macos-repo.yml.jinja": [
          "File: .github/workflows/templates/build-macos-repo.yml.jinja -> .githuworkflows/templates/build-macos-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:       - name: Download macOS Arch64 Packages",
          "29:         uses: actions/download-artifact@v3",
          "30:         with:",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Setup GnuPG",
          "",
          "[Removed Lines]",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-aarch64-macos",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-onedir-repo.yml.jinja||.githuworkflows/templates/build-onedir-repo.yml.jinja": [
          "File: .github/workflows/templates/build-onedir-repo.yml.jinja -> .githuworkflows/templates/build-onedir-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-x86_64.tar.xz",
          "26:           path: artifacts/pkgs/incoming",
          "29:         uses: actions/download-artifact@v3",
          "30:         with:",
          "32:           path: artifacts/pkgs/incoming",
          "34:       - name: Download macOS x86_64 Onedir Archive",
          "",
          "[Removed Lines]",
          "28:       - name: Download Linux aarch64 Onedir Archive",
          "31:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-linux-aarch64.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:       - name: Download macOS arm64 Onedir Archive",
          "41:         uses: actions/download-artifact@v3",
          "42:         with:",
          "44:           path: artifacts/pkgs/incoming",
          "46:       - name: Download Windows amd64 Onedir Archive",
          "",
          "[Removed Lines]",
          "43:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-onedir-darwin-aarch64.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/build-rpm-repo.yml.jinja||.githuworkflows/templates/build-rpm-repo.yml.jinja": [
          "File: .github/workflows/templates/build-rpm-repo.yml.jinja -> .githuworkflows/templates/build-rpm-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:       - name: Download RPM Packages",
          "67:         uses: actions/download-artifact@v3",
          "68:         with:",
          "70:           path: artifacts/pkgs/incoming",
          "72:       - name: Setup GnuPG",
          "",
          "[Removed Lines]",
          "69:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}-rpm",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .githuworkflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:           - platform: linux",
          "167:             arch: x86_64",
          "168:           - platform: linux",
          "170:           - platform: windows",
          "171:             arch: amd64",
          "172:           - platform: windows",
          "",
          "[Removed Lines]",
          "169:             arch: aarch64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:           - platform: darwin",
          "175:             arch: x86_64",
          "176:           - platform: darwin",
          "178:     steps:",
          "179:       - uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "177:             arch: aarch64",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:       - name: Download Onedir Tarball as an Artifact",
          "85:         uses: actions/download-artifact@v3",
          "86:         with:",
          "88:           path: artifacts/",
          "90:       - name: Decompress Onedir Tarball",
          "",
          "[Removed Lines]",
          "87:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:         run: |",
          "93:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "94:           cd artifacts",
          "97:       - name: Download cached nox.linux.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "98:         uses: actions/cache@v3.3.1",
          "",
          "[Removed Lines]",
          "95:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:       - name: Download Onedir Tarball as an Artifact",
          "319:         uses: actions/download-artifact@v3",
          "320:         with:",
          "322:           path: artifacts/",
          "324:       - name: Install System Dependencies",
          "",
          "[Removed Lines]",
          "321:           name: ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "330:         run: |",
          "331:           python3 -c \"import os; os.makedirs('artifacts', exist_ok=True)\"",
          "332:           cd artifacts",
          "335:       - name: Set up Python ${{ inputs.python-version }}",
          "336:         uses: actions/setup-python@v4",
          "",
          "[Removed Lines]",
          "333:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-darwin-${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}.tar.xz",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/pkg/build.py||tools/pkg/build.py": [
          "File: tools/pkg/build.py -> tools/pkg/build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:     arguments={",
          "448:         \"arch\": {",
          "449:             \"help\": \"The architecture to build the package for\",",
          "451:             \"required\": True,",
          "452:         },",
          "453:         \"python_version\": {",
          "",
          "[Removed Lines]",
          "450:             \"choices\": (\"x86_64\", \"aarch64\", \"x86\", \"amd64\"),",
          "",
          "[Added Lines]",
          "450:             \"choices\": (\"x86_64\", \"arm64\", \"x86\", \"amd64\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "486:         assert package_name is not None",
          "487:         assert platform is not None",
          "492:     shared_constants = _get_shared_constants()",
          "493:     if not python_version:",
          "",
          "[Removed Lines]",
          "489:     if platform in (\"macos\", \"darwin\") and arch == \"aarch64\":",
          "490:         arch = \"arm64\"",
          "",
          "[Added Lines]",
          "489:     if platform not in (\"macos\", \"darwin\") and arch == \"arm64\":",
          "490:         arch = \"aarch64\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ed4a4193075a104fdf22e08eecbde8b0214fe34",
      "candidate_info": {
        "commit_hash": "2ed4a4193075a104fdf22e08eecbde8b0214fe34",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/2ed4a4193075a104fdf22e08eecbde8b0214fe34",
        "files": [
          "tests/pytests/pkg/integration/test_check_imports.py"
        ],
        "message": "Stop importing `salt.log` it's long deprecated\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: def run():",
          "20:     config = {}",
          "21:     for module in [",
          "28:     ]:",
          "29:         import_name = \"salt.{}\".format(module)",
          "30:         try:",
          "",
          "[Removed Lines]",
          "22:         'templates', 'platform', 'cli', 'executors', 'config', 'wheel', 'netapi',",
          "23:         'cache', 'proxy', 'transport', 'metaproxy', 'modules', 'tokens', 'matchers',",
          "24:         'acl', 'auth', 'log', 'engines', 'client', 'returners', 'runners', 'tops',",
          "25:         'output', 'daemons', 'thorium', 'renderers', 'states', 'cloud', 'roster',",
          "26:         'beacons', 'pillar', 'spm', 'utils', 'sdb', 'fileserver', 'defaults',",
          "27:         'ext', 'queues', 'grains', 'serializers'",
          "",
          "[Added Lines]",
          "22:         '_logging',",
          "23:         'acl',",
          "24:         'auth',",
          "25:         'beacons',",
          "26:         'cache',",
          "27:         'cli',",
          "28:         'client',",
          "29:         'cloud',",
          "30:         'config',",
          "31:         'daemons',",
          "32:         'defaults',",
          "33:         'engines',",
          "34:         'executors',",
          "35:         'ext',",
          "36:         'fileserver',",
          "37:         'grains',",
          "38:         'matchers',",
          "39:         'metaproxy',",
          "40:         'modules',",
          "41:         'netapi',",
          "42:         'output',",
          "43:         'pillar',",
          "44:         'platform',",
          "45:         'proxy',",
          "46:         'queues',",
          "47:         'renderers',",
          "48:         'returners',",
          "49:         'roster',",
          "50:         'runners',",
          "51:         'sdb',",
          "52:         'serializers',",
          "53:         'spm',",
          "54:         'states',",
          "55:         'templates',",
          "56:         'thorium',",
          "57:         'tokens',",
          "58:         'tops',",
          "59:         'transport',",
          "60:         'utils',",
          "61:         'wheel',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ae96350ba803d44a6e230ae1110a7107c486b9f",
      "candidate_info": {
        "commit_hash": "7ae96350ba803d44a6e230ae1110a7107c486b9f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/7ae96350ba803d44a6e230ae1110a7107c486b9f",
        "files": [
          "tests/pytests/integration/minion/test_return_retries.py"
        ],
        "message": "Make pillar timeout test less flaky",
        "before_after_code_files": [
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: @pytest.mark.slow_test",
          "56: def test_pillar_timeout(salt_master_factory):",
          "57:     cmd = \"\"\"",
          "59:     \"\"\".strip()",
          "60:     master_overrides = {",
          "61:         \"ext_pillar\": [",
          "",
          "[Removed Lines]",
          "58:     python -c \"import time; time.sleep(2.5); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "[Added Lines]",
          "58:     python -c \"import time; time.sleep(3.0); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "823aafc9281e8d612177635420f6bb717c4fd617",
      "candidate_info": {
        "commit_hash": "823aafc9281e8d612177635420f6bb717c4fd617",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/823aafc9281e8d612177635420f6bb717c4fd617",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/templates/ci.yml.jinja"
        ],
        "message": "Don't publish coverage to codecov on private repositories\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .githuworkflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:           nox --force-color -e create-xml-coverage-reports",
          "371:       - name: Upload Code Coverage To Codecov",
          "372:         run: |",
          "373:           tools ci upload-coverage --commit-sha=${{ github.event.pull_request.head.sha || github.sha }} artifacts/coverage/",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b139b41ab2e137b10fd8d8c907a538b5119153e",
      "candidate_info": {
        "commit_hash": "3b139b41ab2e137b10fd8d8c907a538b5119153e",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/3b139b41ab2e137b10fd8d8c907a538b5119153e",
        "files": [
          "noxfile.py"
        ],
        "message": "If the user passes a path to the package tests, don't auto add them\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1886:         chunk = session.posargs.pop(0)",
          "1888:     cmd_args = chunks[chunk]",
          "1890:     if IS_LINUX:",
          "1891:         # Fetch the toolchain",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1889:     for arg in session.posargs:",
          "1890:         if arg.startswith(\"tests/pytests/pkg/\"):",
          "1891:             # The user is passing test paths",
          "1892:             cmd_args.pop()",
          "1893:             break",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd6e4c59e8870ba462660e87bf59fac03a03bf76",
      "candidate_info": {
        "commit_hash": "bd6e4c59e8870ba462660e87bf59fac03a03bf76",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/bd6e4c59e8870ba462660e87bf59fac03a03bf76",
        "files": [
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py"
        ],
        "message": "Revert \"update photon paths to use their $releasever string string which includes .0\"\n\nThis reverts commit fd4e3a225a444be5e063f3037f15872918140e90.",
        "before_after_code_files": [
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256: ):",
          "257:     arch = os.environ.get(\"SALT_REPO_ARCH\") or \"x86_64\"",
          "262:     if repo_subpath == \"minor\":",
          "263:         repo_url_base = (",
          "264:             f\"{root_url}/{os_name}/{os_version}/{arch}/{repo_subpath}/{salt_release}\"",
          "",
          "[Removed Lines]",
          "259:     if os_name == \"photon\":",
          "260:         os_version = f\"{os_version}.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:         assert incoming is not None",
          "381:         assert repo_path is not None",
          "382:         assert key_id is not None",
          "386:     display_name = f\"{distro.capitalize()} {distro_version}\"",
          "387:     if distro_version not in _rpm_distro_info[distro]:",
          "388:         ctx.error(f\"Support for {display_name} is missing.\")",
          "",
          "[Removed Lines]",
          "384:     if distro == \"photon\":",
          "385:         distro_version = f\"{distro_version}.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a003271bf5d7f3fe6e19684e7f97694ae1b61efc",
      "candidate_info": {
        "commit_hash": "a003271bf5d7f3fe6e19684e7f97694ae1b61efc",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/a003271bf5d7f3fe6e19684e7f97694ae1b61efc",
        "files": [
          "tests/pytests/unit/fileserver/test_roots.py"
        ],
        "message": "Fix fileroots tests",
        "before_after_code_files": [
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: @pytest.fixture",
          "64:     overrides = {\"file_roots\": {\"base\": [str(tmp_state_tree)]}}",
          "69: def test_file_list(unicode_filename):",
          "",
          "[Removed Lines]",
          "63: def configure_loader_modules(tmp_state_tree, master_config):",
          "65:     master_config.update(overrides)",
          "66:     return {roots: {\"__opts__\": master_config}}",
          "",
          "[Added Lines]",
          "63: def configure_loader_modules(tmp_state_tree, master_opts):",
          "65:     master_opts.update(overrides)",
          "66:     return {roots: {\"__opts__\": master_opts}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31d7bafc5b2c80348082425c4fdc62f282433686",
      "candidate_info": {
        "commit_hash": "31d7bafc5b2c80348082425c4fdc62f282433686",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/31d7bafc5b2c80348082425c4fdc62f282433686",
        "files": [
          "tools/pkg/repo/create.py"
        ],
        "message": "Append the `.0` for Photon OS, after checking supported versions\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:         assert repo_path is not None",
          "382:         assert key_id is not None",
          "386:     display_name = f\"{distro.capitalize()} {distro_version}\"",
          "387:     if distro_version not in _rpm_distro_info[distro]:",
          "388:         ctx.error(f\"Support for {display_name} is missing.\")",
          "389:         ctx.exit(1)",
          "391:     ctx.info(\"Creating repository directory structure ...\")",
          "392:     create_repo_path = create_top_level_repo_path(",
          "393:         ctx,",
          "",
          "[Removed Lines]",
          "384:     if distro == \"photon\":",
          "385:         distro_version = f\"{distro_version}.0\"",
          "",
          "[Added Lines]",
          "389:     if distro == \"photon\":",
          "390:         distro_version = f\"{distro_version}.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c149541b250f2e90158a3408d07774613948872b",
      "candidate_info": {
        "commit_hash": "c149541b250f2e90158a3408d07774613948872b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/c149541b250f2e90158a3408d07774613948872b",
        "files": [
          "noxfile.py"
        ],
        "message": "There are some common pytest CLI args that should always be passed\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1841:             )",
          "1842:         )",
          "1844:     chunks = {",
          "1845:         \"install\": [",
          "1846:             \"tests/pytests/pkg/\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1844:     common_pytest_args = [",
          "1845:         \"--color=yes\",",
          "1846:         \"--sys-stats\",",
          "1847:         \"--run-destructive\",",
          "1848:         f\"--output-columns={os.environ.get('OUTPUT_COLUMNS') or 120}\",",
          "1849:         \"--pkg-system-service\",",
          "1850:     ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1894:     if chunk in (\"upgrade-classic\", \"downgrade-classic\"):",
          "1895:         cmd_args.append(\"--classic\")",
          "1899:     pytest_args = (",
          "1901:         + [",
          "1902:             f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}.xml\",",
          "1903:             f\"--log-file=artifacts/logs/runtests-{chunk}.log\",",
          "",
          "[Removed Lines]",
          "1897:     cmd_args.append(\"--pkg-system-service\")",
          "1900:         cmd_args[:]",
          "",
          "[Added Lines]",
          "1906:         common_pytest_args[:]",
          "1907:         + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1918:         PRINT_SYSTEM_INFO = False",
          "1920:         pytest_args = (",
          "1922:             + [",
          "1923:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}-rerun.xml\",",
          "1924:                 f\"--log-file=artifacts/logs/runtests-{chunk}-rerun.log\",",
          "",
          "[Removed Lines]",
          "1921:             cmd_args[:]",
          "",
          "[Added Lines]",
          "1928:             common_pytest_args[:]",
          "1929:             + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1937:     if chunk not in (\"install\", \"download-pkgs\"):",
          "1938:         cmd_args = chunks[\"install\"]",
          "1939:         pytest_args = (",
          "1941:             + [",
          "1942:                 \"--no-install\",",
          "1943:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-install.xml\",",
          "",
          "[Removed Lines]",
          "1940:             cmd_args[:]",
          "",
          "[Added Lines]",
          "1948:             common_pytest_args[:]",
          "1949:             + cmd_args[:]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1954:         except CommandFailed:",
          "1955:             cmd_args = chunks[\"install\"]",
          "1956:             pytest_args = (",
          "1958:                 + [",
          "1959:                     \"--no-install\",",
          "1960:                     f\"--junitxml=artifacts/xml-unittests-output/test-results-install-rerun.xml\",",
          "",
          "[Removed Lines]",
          "1957:                 cmd_args[:]",
          "",
          "[Added Lines]",
          "1966:                 common_pytest_args[:]",
          "1967:                 + cmd_args[:]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a50f99a159bac9e57efb025c0d254a2df73d4c14",
      "candidate_info": {
        "commit_hash": "a50f99a159bac9e57efb025c0d254a2df73d4c14",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/a50f99a159bac9e57efb025c0d254a2df73d4c14",
        "files": [
          ".github/workflows/ci.yml",
          ".github/workflows/lint-action.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/pre-commit-action.yml",
          ".github/workflows/release-tag.yml",
          ".github/workflows/release-update-winrepo.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja",
          ".github/workflows/templates/trigger-branch-workflows.yml.jinja",
          ".github/workflows/templates/workflow-requirements-check.yml.jinja",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Prefer GitHub hosted actions runners\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja",
          ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja",
          ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja",
          ".github/workflows/templates/trigger-branch-workflows.yml.jinja||.githuworkflows/templates/trigger-branch-workflows.yml.jinja",
          ".github/workflows/templates/workflow-requirements-check.yml.jinja||.githuworkflows/templates/workflow-requirements-check.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/ci.yml.jinja||.githuworkflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .githuworkflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:       - x86_64",
          "53:     <%- else %>",
          "54:     if: ${{ fromJSON(needs.prepare-workflow.outputs.jobs)['<{ job_name }>'] && fromJSON(needs.prepare-workflow.outputs.runners)['github-hosted'] }}",
          "56:     <%- endif %>",
          "57:     needs:",
          "58:       - prepare-workflow",
          "",
          "[Removed Lines]",
          "55:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"medium\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:     needs:",
          "206:       - prepare-workflow",
          "207:       - prepare-release",
          "209:     steps:",
          "210:       - uses: actions/checkout@v4",
          "",
          "[Removed Lines]",
          "208:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"medium\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "309:     <%- do conclusion_needs.append(\"combine-all-code-coverage\") %>",
          "310:     name: Combine Code Coverage",
          "311:     if: ${{ fromJSON(needs.prepare-workflow.outputs.testrun)['skip_code_coverage'] == false }}",
          "313:     needs:",
          "314:       - prepare-workflow",
          "315:       <%- for need in test_salt_needs.iter(consume=False) %>",
          "",
          "[Removed Lines]",
          "312:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "319:       - uses: actions/checkout@v4",
          "321:       - name: Set up Python 3.10",
          "323:         uses: actions/setup-python@v4",
          "324:         with:",
          "325:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "322:         if: ${{ github.event.repository.private == false }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.githuworkflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .githuworkflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:   prepare-workflow:",
          "77:     name: Prepare Workflow Run",
          "79:     <%- if prepare_workflow_if_check %>",
          "80:     if: <{ prepare_workflow_if_check }>",
          "81:     <%- endif %>",
          "",
          "[Removed Lines]",
          "78:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:     # on a pull request instead of requiring all",
          "338:     name: Set the ${{ github.workflow }} Pipeline Exit Status",
          "339:     if: always()",
          "341:     <%- if workflow_slug == \"nightly\" %>",
          "342:     environment: <{ workflow_slug }>",
          "343:     <%- endif %>",
          "",
          "[Removed Lines]",
          "340:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/nightly.yml.jinja||.githuworkflows/templates/nightly.yml.jinja": [
          "File: .github/workflows/templates/nightly.yml.jinja -> .githuworkflows/templates/nightly.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   <%- do conclusion_needs.append('notify-slack') %>",
          "59:   notify-slack:",
          "60:     name: Notify Slack",
          "62:     environment: <{ gh_environment }>",
          "63:     needs:",
          "64:       <%- for need in prepare_workflow_needs.iter(consume=False) %>",
          "",
          "[Removed Lines]",
          "61:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.githuworkflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .githuworkflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:   <{ job_name }>:",
          "53:   <%- do prepare_workflow_needs.append(job_name) %>",
          "54:     name: Check Requirements",
          "56:     environment: <{ gh_environment }>-check",
          "57:     steps:",
          "58:       - name: Check For Admin Permission",
          "",
          "[Removed Lines]",
          "55:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/staging.yml.jinja||.githuworkflows/templates/staging.yml.jinja": [
          "File: .github/workflows/templates/staging.yml.jinja -> .githuworkflows/templates/staging.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   <{ job_name }>:",
          "67:   <%- do prepare_workflow_needs.append(job_name) %>",
          "68:     name: Check Requirements",
          "70:     environment: <{ gh_environment }>-check",
          "71:     steps:",
          "72:       - name: Check For Admin Permission",
          "",
          "[Removed Lines]",
          "69:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/trigger-branch-workflows.yml.jinja||.githuworkflows/templates/trigger-branch-workflows.yml.jinja": [
          "File: .github/workflows/templates/trigger-branch-workflows.yml.jinja -> .githuworkflows/templates/trigger-branch-workflows.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:   <%- do conclusion_needs.append(job_name) %>",
          "8:     name: Trigger Branch Workflows",
          "9:     if: ${{ github.event_name == 'schedule' && fromJSON(needs.workflow-requirements.outputs.requirements-met) }}",
          "11:     needs:",
          "12:       - workflow-requirements",
          "13:     steps:",
          "",
          "[Removed Lines]",
          "10:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/workflow-requirements-check.yml.jinja||.githuworkflows/templates/workflow-requirements-check.yml.jinja": [
          "File: .github/workflows/templates/workflow-requirements-check.yml.jinja -> .githuworkflows/templates/workflow-requirements-check.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:   <{ job_name }>:",
          "5:   <%- do prepare_workflow_needs.append(job_name) %>",
          "6:     name: Check Workflow Requirements",
          "8:     outputs:",
          "9:       requirements-met: ${{ steps.check-requirements.outputs.requirements-met }}",
          "10:     steps:",
          "",
          "[Removed Lines]",
          "7:     runs-on: ${{ github.event.repository.private && fromJSON('[\"self-hosted\", \"linux\", \"x86_64\"]') || 'ubuntu-latest' }}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3921ca9c084c0b013325c33f4d2d267e00d159a6",
      "candidate_info": {
        "commit_hash": "3921ca9c084c0b013325c33f4d2d267e00d159a6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/3921ca9c084c0b013325c33f4d2d267e00d159a6",
        "files": [
          "requirements/static/ci/py3.10/changelog.txt",
          "requirements/static/ci/py3.10/cloud.txt",
          "requirements/static/ci/py3.10/darwin.txt",
          "requirements/static/ci/py3.10/docs.txt",
          "requirements/static/ci/py3.10/freebsd.txt",
          "requirements/static/ci/py3.10/lint.txt",
          "requirements/static/ci/py3.10/linux.txt",
          "requirements/static/ci/py3.10/tools.txt",
          "requirements/static/ci/py3.10/windows.txt",
          "requirements/static/ci/py3.11/changelog.txt",
          "requirements/static/ci/py3.11/cloud.txt",
          "requirements/static/ci/py3.11/darwin.txt",
          "requirements/static/ci/py3.11/docs.txt",
          "requirements/static/ci/py3.11/freebsd.txt",
          "requirements/static/ci/py3.11/lint.txt",
          "requirements/static/ci/py3.11/linux.txt",
          "requirements/static/ci/py3.11/tools.txt",
          "requirements/static/ci/py3.11/windows.txt",
          "requirements/static/ci/py3.12/changelog.txt",
          "requirements/static/ci/py3.12/cloud.txt",
          "requirements/static/ci/py3.12/darwin.txt",
          "requirements/static/ci/py3.12/docs.txt",
          "requirements/static/ci/py3.12/freebsd.txt",
          "requirements/static/ci/py3.12/lint.txt",
          "requirements/static/ci/py3.12/linux.txt",
          "requirements/static/ci/py3.12/tools.txt",
          "requirements/static/ci/py3.12/windows.txt",
          "requirements/static/ci/py3.7/cloud.txt",
          "requirements/static/ci/py3.7/docs.txt",
          "requirements/static/ci/py3.7/freebsd.txt",
          "requirements/static/ci/py3.7/lint.txt",
          "requirements/static/ci/py3.7/linux.txt",
          "requirements/static/ci/py3.7/windows.txt",
          "requirements/static/ci/py3.8/changelog.txt",
          "requirements/static/ci/py3.8/cloud.txt",
          "requirements/static/ci/py3.8/docs.txt",
          "requirements/static/ci/py3.8/freebsd.txt",
          "requirements/static/ci/py3.8/lint.txt",
          "requirements/static/ci/py3.8/linux.txt",
          "requirements/static/ci/py3.8/windows.txt",
          "requirements/static/ci/py3.9/changelog.txt",
          "requirements/static/ci/py3.9/cloud.txt",
          "requirements/static/ci/py3.9/darwin.txt",
          "requirements/static/ci/py3.9/docs.txt",
          "requirements/static/ci/py3.9/freebsd.txt",
          "requirements/static/ci/py3.9/lint.txt",
          "requirements/static/ci/py3.9/linux.txt",
          "requirements/static/ci/py3.9/tools.txt",
          "requirements/static/ci/py3.9/windows.txt",
          "requirements/static/pkg/py3.10/darwin.txt",
          "requirements/static/pkg/py3.10/freebsd.txt",
          "requirements/static/pkg/py3.10/linux.txt",
          "requirements/static/pkg/py3.10/windows.txt",
          "requirements/static/pkg/py3.11/darwin.txt",
          "requirements/static/pkg/py3.11/freebsd.txt",
          "requirements/static/pkg/py3.11/linux.txt",
          "requirements/static/pkg/py3.11/windows.txt",
          "requirements/static/pkg/py3.12/darwin.txt",
          "requirements/static/pkg/py3.12/freebsd.txt",
          "requirements/static/pkg/py3.12/linux.txt",
          "requirements/static/pkg/py3.12/windows.txt",
          "requirements/static/pkg/py3.7/freebsd.txt",
          "requirements/static/pkg/py3.7/linux.txt",
          "requirements/static/pkg/py3.7/windows.txt",
          "requirements/static/pkg/py3.8/freebsd.txt",
          "requirements/static/pkg/py3.8/linux.txt",
          "requirements/static/pkg/py3.8/windows.txt",
          "requirements/static/pkg/py3.9/darwin.txt",
          "requirements/static/pkg/py3.9/freebsd.txt",
          "requirements/static/pkg/py3.9/linux.txt",
          "requirements/static/pkg/py3.9/windows.txt"
        ],
        "message": "Bump to `jinja2==3.1.3` due to https://github.com/advisories/GHSA-h5c8-rqwp-cp95\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "f5b326cf33f706ac838b4faa09fe0a6b889892e6",
      "candidate_info": {
        "commit_hash": "f5b326cf33f706ac838b4faa09fe0a6b889892e6",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f5b326cf33f706ac838b4faa09fe0a6b889892e6",
        "files": [
          "tools/pkg/build.py",
          "tools/pkg/repo/create.py",
          "tools/release.py",
          "tools/testsuite/download.py"
        ],
        "message": "Missed change in 5ea3bf3a9dbd7e128cf8a899b6c06958cdfcbf36\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/pkg/build.py||tools/pkg/build.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py",
          "tools/release.py||tools/release.py",
          "tools/testsuite/download.py||tools/testsuite/download.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/pkg/build.py||tools/pkg/build.py": [
          "File: tools/pkg/build.py -> tools/pkg/build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:         assert package_name is not None",
          "487:         assert platform is not None",
          "490:         arch = \"aarch64\"",
          "492:     shared_constants = _get_shared_constants()",
          "",
          "[Removed Lines]",
          "489:     if platform not in (\"macos\", \"darwin\") and arch == \"arm64\":",
          "",
          "[Added Lines]",
          "489:     if platform == \"darwin\":",
          "490:         platform = \"macos\"",
          "492:     if platform != \"macos\" and arch == \"arm64\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "625:         assert platform is not None",
          "626:         assert package_name is not None",
          "628:     shared_constants = _get_shared_constants()",
          "629:     if not relenv_version:",
          "630:         relenv_version = shared_constants[\"relenv_version\"]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "631:     if platform == \"darwin\":",
          "632:         platform = \"macos\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "706:             str(salt_archive),",
          "707:             env=env,",
          "708:         )",
          "711:             def errfn(fn, path, err):",
          "712:                 ctx.info(f\"Removing {path} failed: {err}\")",
          "",
          "[Removed Lines]",
          "709:         if platform == \"darwin\":",
          "",
          "[Added Lines]",
          "715:         if platform == \"macos\":",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "904:         if distro == \"onedir\":",
          "905:             if \"-onedir-linux-\" in dpath.name.lower():",
          "906:                 release_os = \"linux\"",
          "908:                 release_os = \"macos\"",
          "909:             elif \"-onedir-windows-\" in dpath.name.lower():",
          "910:                 release_os = \"windows\"",
          "",
          "[Removed Lines]",
          "907:             elif \"-onedir-darwin-\" in dpath.name.lower():",
          "",
          "[Added Lines]",
          "907:             elif \"-onedir-macos-\" in dpath.name.lower():",
          "",
          "---------------"
        ],
        "tools/release.py||tools/release.py": [
          "File: tools/release.py -> tools/release.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:     Download onedir artifact from staging bucket.",
          "132:     \"\"\"",
          "133:     s3 = boto3.client(\"s3\")",
          "136:     if arch == \"arm64\":",
          "137:         arch = \"aarch64\"",
          "138:     arch = arch.lower()",
          "139:     platform = platform.lower()",
          "141:         ctx.error(",
          "142:             f\"The 'arch' value for {platform} must be one of: 'x86_64', 'aarch64', 'arm64'\"",
          "143:         )",
          "",
          "[Removed Lines]",
          "134:     if platform == \"macos\":",
          "135:         platform = \"darwin\"",
          "140:     if platform in (\"linux\", \"darwin\") and arch not in (\"x86_64\", \"aarch64\"):",
          "",
          "[Added Lines]",
          "134:     if platform == \"darwin\":",
          "135:         platform = \"macos\"",
          "140:     if platform in (\"linux\", \"macos\") and arch not in (\"x86_64\", \"aarch64\"):",
          "",
          "---------------"
        ],
        "tools/testsuite/download.py||tools/testsuite/download.py": [
          "File: tools/testsuite/download.py -> tools/testsuite/download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         },",
          "39:         \"platform\": {",
          "40:             \"help\": \"The onedir platform artifact to download\",",
          "42:             \"required\": True,",
          "43:         },",
          "44:         \"arch\": {",
          "",
          "[Removed Lines]",
          "41:             \"choices\": (\"linux\", \"darwin\", \"windows\"),",
          "",
          "[Added Lines]",
          "41:             \"choices\": (\"linux\", \"macos\", \"windows\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
      "candidate_info": {
        "commit_hash": "ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/ce128732b98a1ed1b08679fdbbbf1f56c93d4f90",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/build-deps-onedir.yml",
          ".github/workflows/build-packages.yml",
          ".github/workflows/build-salt-onedir.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release-tag.yml",
          ".github/workflows/release-update-winrepo.yml",
          ".github/workflows/release-upload-virustotal.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/triage.yml"
        ],
        "message": "Bump to `actions/setup-python@v5`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja",
          ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja",
          ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.github/workflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .github/workflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:       - name: Set up Python ${{ inputs.python-version }}",
          "205:         if: steps.nox-dependencies-cache.outputs.cache-hit != 'true'",
          "207:         with:",
          "208:           python-version: \"${{ inputs.python-version }}\"",
          "",
          "[Removed Lines]",
          "206:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "206:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/ci.yml.jinja||.github/workflows/templates/ci.yml.jinja": [
          "File: .github/workflows/templates/ci.yml.jinja -> .github/workflows/templates/ci.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     <%- if not prepare_actual_release %>",
          "64:       - name: Set up Python 3.10",
          "66:         with:",
          "67:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "65:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "65:         uses: actions/setup-python@v5",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "210:       - uses: actions/checkout@v4",
          "212:       - name: Set up Python 3.10",
          "214:         with:",
          "215:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "213:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "213:         uses: actions/setup-python@v5",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:       - uses: actions/checkout@v4",
          "315:       - name: Set up Python 3.10",
          "317:         with:",
          "318:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "316:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "316:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/layout.yml.jinja||.github/workflows/templates/layout.yml.jinja": [
          "File: .github/workflows/templates/layout.yml.jinja -> .github/workflows/templates/layout.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:                 - *pkg_tests_added_modified",
          "182:       - name: Set up Python 3.10",
          "184:         with:",
          "185:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "183:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "183:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/release.yml.jinja||.github/workflows/templates/release.yml.jinja": [
          "File: .github/workflows/templates/release.yml.jinja -> .github/workflows/templates/release.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:           fetch-depth: 0  # Full clone to also get the tags to get the right salt version",
          "95:       - name: Set up Python 3.10",
          "97:         with:",
          "98:           python-version: \"3.10\"",
          "",
          "[Removed Lines]",
          "96:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "96:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.github/workflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .github/workflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-macos-${{ matrix.arch }}.tar.xz",
          "337:       - name: Set up Python ${{ inputs.python-version }}",
          "339:         with:",
          "340:           python-version: \"${{ inputs.python-version }}\"",
          "341:           update-environment: true",
          "",
          "[Removed Lines]",
          "338:         uses: actions/setup-python@v4",
          "",
          "[Added Lines]",
          "338:         uses: actions/setup-python@v5",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f2673aa29b6875db2bce809b679096da513ecfb",
      "candidate_info": {
        "commit_hash": "5f2673aa29b6875db2bce809b679096da513ecfb",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5f2673aa29b6875db2bce809b679096da513ecfb",
        "files": [
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Prefer GitHub hosted actions runners when generating the matrix\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "43d524020a53c893c06044118c7b28359c36b56c",
      "candidate_info": {
        "commit_hash": "43d524020a53c893c06044118c7b28359c36b56c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/43d524020a53c893c06044118c7b28359c36b56c",
        "files": [
          ".github/workflows/build-deps-ci-action.yml",
          ".github/workflows/ci.yml",
          ".github/workflows/nightly.yml",
          ".github/workflows/release.yml",
          ".github/workflows/scheduled.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja",
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-macos.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-package-downloads-action.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-macos.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Rely on uploaded artifacts instead of the GH cache\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-deps-ci-action.yml.jinja||.githuworkflows/templates/build-deps-ci-action.yml.jinja",
          ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja",
          ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.githuworkflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja",
          ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-deps-ci-action.yml.jinja||.githuworkflows/templates/build-deps-ci-action.yml.jinja": [
          "File: .github/workflows/templates/build-deps-ci-action.yml.jinja -> .githuworkflows/templates/build-deps-ci-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "154:       - name: Upload Nox Requirements Tarball",
          "156:         with:",
          "157:           name: nox-linux-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "158:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "",
          "[Removed Lines]",
          "155:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240:           nox --force-color -e compress-dependencies -- macos ${{ matrix.arch }}",
          "242:       - name: Upload Nox Requirements Tarball",
          "244:         with:",
          "245:           name: nox-macos-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "246:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "",
          "[Removed Lines]",
          "243:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:           tools --timestamps vm destroy --no-wait ${{ matrix.distro-slug }}",
          "354:       - name: Upload Nox Requirements Tarball",
          "356:         with:",
          "357:           name: nox-windows-${{ matrix.arch }}-${{ inputs.nox-session }}",
          "358:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "",
          "[Removed Lines]",
          "355:         uses: actions/upload-artifact@v3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-package-downloads-action.yml.jinja||.githuworkflows/templates/test-package-downloads-action.yml.jinja": [
          "File: .github/workflows/templates/test-package-downloads-action.yml.jinja -> .githuworkflows/templates/test-package-downloads-action.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:         required: true",
          "24:         type: string",
          "25:         description: The nox version to install",
          "30:       python-version:",
          "31:         required: false",
          "32:         type: string",
          "",
          "[Removed Lines]",
          "26:       nox-archive-hash:",
          "27:         required: true",
          "28:         type: string",
          "29:         description: Nox Tarball Cache Hash",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:           cd artifacts",
          "99:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-linux-${{ matrix.arch }}.tar.xz",
          "103:         with:",
          "109:       - name: Setup Python Tools Scripts",
          "110:         uses: ./.github/actions/setup-python-tools-scripts",
          "",
          "[Removed Lines]",
          "101:       - name: Download cached nox.linux.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "102:         uses: actions/cache@v3.3.1",
          "104:           path: nox.linux.${{ matrix.arch }}.tar.*",
          "105:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|linux|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "106:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "107:           fail-on-cache-miss: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "335:         run: |",
          "336:           python3 -m pip install 'nox==${{ inputs.nox-version }}'",
          "340:         with:",
          "346:       - name: Decompress .nox Directory",
          "347:         run: |",
          "",
          "[Removed Lines]",
          "338:       - name: Download cached nox.macos.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "339:         uses: actions/cache@v3.3.1",
          "341:           path: nox.macos.${{ matrix.arch }}.tar.*",
          "342:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|macos|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "343:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "344:           fail-on-cache-miss: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "527:           cd artifacts",
          "528:           tar xvf ${{ inputs.package-name }}-${{ inputs.salt-version }}-onedir-windows-${{ matrix.arch }}.tar.xz",
          "532:         with:",
          "538:       - name: Setup Python Tools Scripts",
          "539:         uses: ./.github/actions/setup-python-tools-scripts",
          "",
          "[Removed Lines]",
          "530:       - name: Download cached nox.windows.${{ matrix.arch }}.tar.* for session ${{ inputs.nox-session }}",
          "531:         uses: actions/cache@v3.3.1",
          "533:           path: nox.windows.${{ matrix.arch }}.tar.*",
          "534:           key: ${{ inputs.cache-prefix }}|testrun-deps|${{ matrix.arch }}|windows|${{ inputs.nox-session }}|${{ inputs.python-version }}|${{ inputs.nox-archive-hash }}",
          "535:           # If we get a cache miss here it means the dependencies step failed to save the cache",
          "536:           fail-on-cache-miss: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja||.githuworkflows/templates/test-salt-pkg-repo-downloads.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg-repo-downloads.yml.jinja -> .githuworkflows/templates/test-salt-pkg-repo-downloads.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:       python-version: \"<{ gh_actions_workflows_python_version }>\"",
          "32:       skip-code-coverage: true",
          "33:       latest-release: \"${{ needs.prepare-workflow.outputs.latest-release }}\"",
          "35:     secrets: inherit",
          "",
          "[Removed Lines]",
          "34:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt-pkg.yml.jinja||.githuworkflows/templates/test-salt-pkg.yml.jinja": [
          "File: .github/workflows/templates/test-salt-pkg.yml.jinja -> .githuworkflows/templates/test-salt-pkg.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "23:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "24:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "26:     <%- if fips == \"fips\" %>",
          "27:       fips: true",
          "28:     <%- endif %>",
          "",
          "[Removed Lines]",
          "25:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "56:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "57:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "60:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "58:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "85:       cache-prefix: ${{ needs.prepare-workflow.outputs.cache-seed }}|<{ python_version }>",
          "86:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "87:       testing-releases: ${{ needs.prepare-workflow.outputs.testing-releases }}",
          "90:     <%- endfor %>",
          "91:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "88:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        ".github/workflows/templates/test-salt.yml.jinja||.githuworkflows/templates/test-salt.yml.jinja": [
          "File: .github/workflows/templates/test-salt.yml.jinja -> .githuworkflows/templates/test-salt.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "28:       workflow-slug: <{ workflow_slug }>",
          "29:       default-timeout: <{ timeout_value }>",
          "32:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "30:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "56:       workflow-slug: <{ workflow_slug }>",
          "57:       default-timeout: <{ timeout_value }>",
          "60:   <%- endfor %>",
          "",
          "[Removed Lines]",
          "58:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:       skip-code-coverage: <{ skip_test_coverage_check }>",
          "83:       workflow-slug: <{ workflow_slug }>",
          "84:       default-timeout: <{ timeout_value }>",
          "86:     <%- if fips == \"fips\" %>",
          "87:       fips: true",
          "88:     <%- endif %>",
          "",
          "[Removed Lines]",
          "85:       nox-archive-hash: \"${{ needs.prepare-workflow.outputs.nox-archive-hash }}\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "813f114135e02846a331c11c5f399f9f80c2c885",
      "candidate_info": {
        "commit_hash": "813f114135e02846a331c11c5f399f9f80c2c885",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/813f114135e02846a331c11c5f399f9f80c2c885",
        "files": [
          "tests/pytests/scenarios/blackout/test_minion_blackout.py"
        ],
        "message": "Skip flakey blackout tests on windows",
        "before_after_code_files": [
          "tests/pytests/scenarios/blackout/test_minion_blackout.py||tests/pytests/scenarios/blackout/test_minion_blackout.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/scenarios/blackout/test_minion_blackout.py||tests/pytests/scenarios/blackout/test_minion_blackout.py": [
          "File: tests/pytests/scenarios/blackout/test_minion_blackout.py -> tests/pytests/scenarios/blackout/test_minion_blackout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: def _check_skip(grains):",
          "15:         return True",
          "16:     return False",
          "",
          "[Removed Lines]",
          "14:     if grains[\"os\"] == \"Windows\" and grains[\"osrelease\"] == \"2016Server\":",
          "",
          "[Added Lines]",
          "14:     \"\"\"",
          "15:     Skip on windows because these tests are flaky, we need to spend some time to",
          "16:     debug why.",
          "17:     \"\"\"",
          "18:     if grains[\"os\"] == \"Windows\":",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1882947d8bf57d42acdaee0d93d21ec24d7c68b",
      "candidate_info": {
        "commit_hash": "f1882947d8bf57d42acdaee0d93d21ec24d7c68b",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f1882947d8bf57d42acdaee0d93d21ec24d7c68b",
        "files": [
          "tests/support/pkg.py"
        ],
        "message": "Fix the daemons path on the generated `.plist` files on MacOS\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/support/pkg.py||tests/support/pkg.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/support/pkg.py||tests/support/pkg.py": [
          "File: tests/support/pkg.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "823:                 plist_file.unlink()",
          "825:             log.debug(\"Creating plist file for service: %s\", service)",
          "828:                 <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
          "829:                 <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">",
          "830:                 <plist version=\"1.0\">",
          "",
          "[Removed Lines]",
          "826:             contents = textwrap.dedent(",
          "827:                 f\"\"\"\\",
          "",
          "[Added Lines]",
          "826:             contents = f\"\"\"\\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "836:                         <key>KeepAlive</key>",
          "837:                         <true/>",
          "838:                         <key>ProgramArguments</key>",
          "842:                             <string>-c</string>",
          "843:                             <string>{self.conf_dir}</string>",
          "844:                         </array>",
          "",
          "[Removed Lines]",
          "839:                         <array>",
          "840:                             <string>{self.run_root}</string>",
          "841:                             <string>{service}</string>",
          "",
          "[Added Lines]",
          "838:                         <array>\"\"\"",
          "839:             for part in self.binary_paths[service]:",
          "840:                 contents += (",
          "841:                     f\"\"\"\\n                            <string>{part}</string>\\n\"\"\"",
          "842:                 )",
          "843:             contents += f\"\"\"\\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "855:                     </dict>",
          "856:                 </plist>",
          "857:                 \"\"\"",
          "860:             contents = plist_file.read_text()",
          "861:             log.debug(\"Created '%s'. Contents:\\n%s\", plist_file, contents)",
          "",
          "[Removed Lines]",
          "858:             )",
          "859:             plist_file.write_text(contents, encoding=\"utf-8\")",
          "",
          "[Added Lines]",
          "860:             plist_file.write_text(textwrap.dedent(contents), encoding=\"utf-8\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "18374305e6e6918fc445ecf79a53b59b6dfb94a1",
      "candidate_info": {
        "commit_hash": "18374305e6e6918fc445ecf79a53b59b6dfb94a1",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/18374305e6e6918fc445ecf79a53b59b6dfb94a1",
        "files": [
          ".github/workflows/test-action-linux.yml",
          ".github/workflows/test-action-windows.yml",
          ".github/workflows/test-packages-action-linux.yml",
          ".github/workflows/test-packages-action-windows.yml"
        ],
        "message": "Prefer github hosted runners in favor of self hosted runners for reports\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "f8521ee290f5c53a718a635e323ceb99e41f008f",
      "candidate_info": {
        "commit_hash": "f8521ee290f5c53a718a635e323ceb99e41f008f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f8521ee290f5c53a718a635e323ceb99e41f008f",
        "files": [
          "noxfile.py",
          "pkg-tests-pytest.ini"
        ],
        "message": "We no longer have to maintain `pkg-tests-pytest.ini`\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "noxfile.py||noxfile.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1842:         )",
          "1844:     chunks = {",
          "1846:         \"upgrade\": [",
          "1847:             \"--upgrade\",",
          "1848:             \"--no-uninstall\",",
          "",
          "[Removed Lines]",
          "1845:         \"install\": [\"tests/pytests/pkg/\"],",
          "",
          "[Added Lines]",
          "1845:         \"install\": [",
          "1846:             \"tests/pytests/pkg/\",",
          "1847:         ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1895:     pytest_args = (",
          "1896:         cmd_args[:]",
          "1897:         + [",
          "1900:             f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}.xml\",",
          "1901:             f\"--log-file=artifacts/logs/runtests-{chunk}.log\",",
          "1902:         ]",
          "",
          "[Removed Lines]",
          "1898:             \"-c\",",
          "1899:             str(REPO_ROOT / \"pkg-tests-pytest.ini\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1915:         pytest_args = (",
          "1916:             cmd_args[:]",
          "1917:             + [",
          "1920:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-{chunk}-rerun.xml\",",
          "1921:                 f\"--log-file=artifacts/logs/runtests-{chunk}-rerun.log\",",
          "1922:                 \"--lf\",",
          "",
          "[Removed Lines]",
          "1918:                 \"-c\",",
          "1919:                 str(REPO_ROOT / \"pkg-tests-pytest.ini\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1936:         pytest_args = (",
          "1937:             cmd_args[:]",
          "1938:             + [",
          "1941:                 \"--no-install\",",
          "1942:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-install.xml\",",
          "1943:                 f\"--log-file=artifacts/logs/runtests-install.log\",",
          "",
          "[Removed Lines]",
          "1939:                 \"-c\",",
          "1940:                 str(REPO_ROOT / \"pkg-tests-pytest.ini\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1955:             pytest_args = (",
          "1956:                 cmd_args[:]",
          "1957:                 + [",
          "1960:                     \"--no-install\",",
          "1961:                     f\"--junitxml=artifacts/xml-unittests-output/test-results-install-rerun.xml\",",
          "1962:                     f\"--log-file=artifacts/logs/runtests-install-rerun.log\",",
          "",
          "[Removed Lines]",
          "1958:                     \"-c\",",
          "1959:                     str(REPO_ROOT / \"pkg-tests-pytest.ini\"),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "062be920287240fd3fbc5855669d8adbb17d3e08",
      "candidate_info": {
        "commit_hash": "062be920287240fd3fbc5855669d8adbb17d3e08",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/062be920287240fd3fbc5855669d8adbb17d3e08",
        "files": [
          ".github/workflows/test-package-downloads-action.yml",
          "tools/precommit/workflows.py"
        ],
        "message": "Re-add the removed Linux OS'es for the package download tests\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tools/precommit/workflows.py||tools/precommit/workflows.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: # pylint: disable=resource-leakage,broad-except,3rd-party-module-not-gated",
          "5: from __future__ import annotations",
          "7: import logging",
          "8: import shutil",
          "9: from typing import TYPE_CHECKING, cast",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import json",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19: WORKFLOWS = tools.utils.REPO_ROOT / \".github\" / \"workflows\"",
          "20: TEMPLATES = WORKFLOWS / \"templates\"",
          "23: # Define the command group",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open() as rfh:",
          "23:     AMIS = json.load(rfh)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:         \"macos\": [],",
          "209:         \"windows\": [],",
          "210:     }",
          "212:         \"almalinux\",",
          "213:         \"amazonlinux\",",
          "214:         \"centos\",",
          "215:         \"centosstream\",",
          "216:         \"fedora\",",
          "217:         \"photon\",",
          "221:             continue",
          "222:         test_salt_pkg_downloads_listing[\"linux\"].append((slug, arch, \"package\"))",
          "227:     for slug, display_name, arch in test_salt_listing[\"macos\"]:",
          "228:         test_salt_pkg_downloads_listing[\"macos\"].append((slug, arch, \"package\"))",
          "229:     for slug, display_name, arch in test_salt_listing[\"macos\"][-1:]:",
          "",
          "[Removed Lines]",
          "211:     rpm_slugs = [",
          "218:     ]",
          "219:     for slug, display_name, arch, fips in test_salt_listing[\"linux\"]:",
          "220:         if slug in (\"archlinux-lts\", \"opensuse-15\"):",
          "223:     for slug, display_name, arch, fips in test_salt_listing[\"linux\"][-2:]:",
          "224:         if slug in (\"archlinux-lts\", \"opensuse-15\"):",
          "225:             continue",
          "226:         test_salt_pkg_downloads_listing[\"linux\"].append((slug, arch, \"onedir\"))",
          "",
          "[Added Lines]",
          "214:     rpm_slugs = (",
          "221:     )",
          "222:     linux_skip_pkg_download_tests = (",
          "223:         \"archlinux-lts\",",
          "224:         \"opensuse-15\",",
          "225:         \"windows\",",
          "226:     )",
          "227:     for slug in sorted(AMIS):",
          "228:         if slug.startswith(linux_skip_pkg_download_tests):",
          "230:         if \"arm64\" in slug:",
          "231:             arch = \"arm64\"",
          "232:         else:",
          "233:             arch = \"x86_64\"",
          "234:         if slug.startswith(rpm_slugs) and arch == \"arm64\":",
          "235:             # While we maintain backwards compatible urls",
          "236:             test_salt_pkg_downloads_listing[\"linux\"].append(",
          "237:                 (slug, \"aarch64\", \"package\")",
          "238:             )",
          "240:         if slug.startswith(\"ubuntu-22\"):",
          "241:             test_salt_pkg_downloads_listing[\"linux\"].append((slug, arch, \"onedir\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db0d01dbd01a3eb34ce4f47ebb1e4c94c395f209",
      "candidate_info": {
        "commit_hash": "db0d01dbd01a3eb34ce4f47ebb1e4c94c395f209",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/db0d01dbd01a3eb34ce4f47ebb1e4c94c395f209",
        "files": [
          "tests/pytests/pkg/integration/test_version.py"
        ],
        "message": "Remove unused import\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/integration/test_version.py||tests/pytests/pkg/integration/test_version.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/integration/test_version.py||tests/pytests/pkg/integration/test_version.py": [
          "File: tests/pytests/pkg/integration/test_version.py -> tests/pytests/pkg/integration/test_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import os.path",
          "2: import pathlib",
          "4: import subprocess",
          "6: import pytest",
          "",
          "[Removed Lines]",
          "3: import re",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42bc822bbcc806feca19fcd30fddda3b8be8913e",
      "candidate_info": {
        "commit_hash": "42bc822bbcc806feca19fcd30fddda3b8be8913e",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/42bc822bbcc806feca19fcd30fddda3b8be8913e",
        "files": [
          "changelog/565.security"
        ],
        "message": "Add credit",
        "before_after_code_files": [
          "changelog/565.security||changelog/565.security"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "changelog/565.security||changelog/565.security": [
          "File: changelog/565.security -> changelog/565.security",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: CVE-2024-22231 Prevent directory traversal when creating syndic cache directory on the master",
          "",
          "[Removed Lines]",
          "2: CVE-2024-22232 Prevent diretory traversal attacks in the master's serve_file method.",
          "",
          "[Added Lines]",
          "2: CVE-2024-22232 Prevent directory traversal attacks in the master's serve_file method.",
          "3: These vulerablities were discovered and reported by:",
          "4: Yudi Zhao(Huawei Nebula Security Lab),Chenwei Jiang(Huawei Nebula Security Lab)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "281bf59f3ce0ab0ff7ab0e6a54ec206c08e22e5c",
      "candidate_info": {
        "commit_hash": "281bf59f3ce0ab0ff7ab0e6a54ec206c08e22e5c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/281bf59f3ce0ab0ff7ab0e6a54ec206c08e22e5c",
        "files": [
          "salt/utils/aws.py",
          "tests/pytests/unit/utils/test_aws.py"
        ],
        "message": "Cleanup aws unit test hang\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "salt/utils/aws.py||salt/utils/aws.py",
          "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "salt/utils/aws.py||salt/utils/aws.py": [
          "File: salt/utils/aws.py -> salt/utils/aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: :depends: requests",
          "9: \"\"\"",
          "11: import copy",
          "12: import hashlib",
          "13: import hmac",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import binascii",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: import random",
          "16: import re",
          "17: import time",
          "18: from datetime import datetime",
          "20: import salt.config",
          "21: import salt.utils.hashutils",
          "22: import salt.utils.xmlutil as xml",
          "54: log = logging.getLogger(__name__)",
          "55: DEFAULT_LOCATION = \"us-east-1\"",
          "56: DEFAULT_AWS_API_VERSION = \"2016-11-15\"",
          "57: AWS_RETRY_CODES = [",
          "",
          "[Removed Lines]",
          "24: try:",
          "25:     import requests",
          "27:     HAS_REQUESTS = True  # pylint: disable=W0612",
          "28: except ImportError:",
          "29:     HAS_REQUESTS = False  # pylint: disable=W0612",
          "31: try:",
          "32:     import binascii",
          "34:     HAS_BINASCII = True  # pylint: disable=W0612",
          "35: except ImportError:",
          "36:     HAS_BINASCII = False  # pylint: disable=W0612",
          "38: try:",
          "39:     import urllib.parse",
          "41:     HAS_URLLIB = True  # pylint: disable=W0612",
          "42: except ImportError:",
          "43:     HAS_URLLIB = False  # pylint: disable=W0612",
          "45: try:",
          "46:     import xml.etree.ElementTree as ET",
          "48:     HAS_ETREE = True  # pylint: disable=W0612",
          "49: except ImportError:",
          "50:     HAS_ETREE = False  # pylint: disable=W0612",
          "52: # pylint: enable=import-error,redefined-builtin,no-name-in-module",
          "",
          "[Added Lines]",
          "18: import urllib.parse",
          "19: import xml.etree.ElementTree as ET",
          "22: import requests",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py": [
          "File: tests/pytests/unit/utils/test_aws.py -> tests/pytests/unit/utils/test_aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     Test the salt aws functions",
          "6: \"\"\"",
          "8: import io",
          "9: import time",
          "10: from datetime import datetime, timedelta",
          "12: import requests",
          "14: import salt.utils.aws as aws",
          "15: from tests.support.mock import MagicMock, patch",
          "18: def test_get_metadata_imdsv1():",
          "19:     response = requests.Response()",
          "20:     response.status_code = 200",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import os",
          "12: import pytest",
          "16: from tests.support.helpers import patched_environ",
          "20: @pytest.fixture(autouse=True)",
          "21: def _cleanup():",
          "22:     # Make sure this cache is clear before each test",
          "23:     aws.__AssumeCache__.clear()",
          "24:     # Remove any AWS_ prefixed environment variables",
          "25:     with patched_environ(",
          "26:         __cleanup__=[k for k in os.environ if k.startswith(\"AWS_\")],",
          "27:     ):",
          "28:         yield",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d4e3fa4cf6cf737cfa1056c629e269d91feb21a",
      "candidate_info": {
        "commit_hash": "0d4e3fa4cf6cf737cfa1056c629e269d91feb21a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/0d4e3fa4cf6cf737cfa1056c629e269d91feb21a",
        "files": [
          "tests/pytests/integration/minion/test_return_retries.py"
        ],
        "message": "Even more reliable pillar timeout test",
        "before_after_code_files": [
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:         \"auto_accept\": True,",
          "65:         \"worker_threads\": 2,",
          "66:         \"peer\": True,",
          "67:     }",
          "68:     minion_overrides = {",
          "69:         \"auth_timeout\": 20,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:         \"minion_data_cache\": False,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:         - name: example",
          "78:         - changes: True",
          "79:         - result: True",
          "81:     \"\"\"",
          "82:     master = salt_master_factory.salt_master_daemon(",
          "83:         \"pillar-timeout-master\",",
          "",
          "[Removed Lines]",
          "80:         - comment: \"Nothing has actually been changed\"",
          "",
          "[Added Lines]",
          "81:         - comment: \"Nothing has actually been changed {{ pillar['foo'] }}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     )",
          "106:     with master.started(), minion1.started(), minion2.started(), minion3.started(), minion4.started(), sls_tempfile:",
          "107:         proc = cli.run(\"state.sls\", sls_name, minion_tgt=\"*\")",
          "108:         # At least one minion should have a Pillar timeout",
          "109:         assert proc.returncode == 1",
          "110:         minion_timed_out = False",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:         print(proc)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "447e2e2ff792cee1a86f23b726bad47d667b9000",
      "candidate_info": {
        "commit_hash": "447e2e2ff792cee1a86f23b726bad47d667b9000",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/447e2e2ff792cee1a86f23b726bad47d667b9000",
        "files": [
          "tests/pytests/pkg/rpm/salt.spec"
        ],
        "message": "Remove file which shouldn't have been copied over\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          "tests/pytests/pkg/rpm/salt.spec||tests/pytests/pkg/rpm/salt.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/pkg/rpm/salt.spec||tests/pytests/pkg/rpm/salt.spec": [
          "File: tests/pytests/pkg/rpm/salt.spec -> tests/pytests/pkg/rpm/salt.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30941aeadc07c90dd97b33a9908b152f912c8c43",
      "candidate_info": {
        "commit_hash": "30941aeadc07c90dd97b33a9908b152f912c8c43",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/30941aeadc07c90dd97b33a9908b152f912c8c43",
        "files": [
          ".github/workflows/nightly.yml",
          ".github/workflows/staging.yml",
          ".github/workflows/templates/build-rpm-repo.yml.jinja",
          "tools/precommit/workflows.py"
        ],
        "message": "Fix RPM build repository for aarch64\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": [
          ".github/workflows/templates/build-rpm-repo.yml.jinja||.githuworkflows/templates/build-rpm-repo.yml.jinja",
          "tools/precommit/workflows.py||tools/precommit/workflows.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".github/workflows/templates/build-rpm-repo.yml.jinja||.githuworkflows/templates/build-rpm-repo.yml.jinja": [
          "File: .github/workflows/templates/build-rpm-repo.yml.jinja -> .githuworkflows/templates/build-rpm-repo.yml.jinja",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:       fail-fast: false",
          "4:       matrix:",
          "5:         include:",
          "41:           - pkg-type: rpm",
          "42:             distro: <{ distro }>",
          "43:             version: \"<{ version }>\"",
          "",
          "[Removed Lines]",
          "6:         <%- for distro, version, arch in (",
          "7:                                             (\"amazon\", \"2\", \"x86_64\"),",
          "8:                                             (\"amazon\", \"2\", \"arm64\"),",
          "9:                                             (\"amazon\", \"2\", \"aarch64\"),",
          "10:                                             (\"amazon\", \"2023\", \"x86_64\"),",
          "11:                                             (\"amazon\", \"2023\", \"arm64\"),",
          "12:                                             (\"amazon\", \"2023\", \"aarch64\"),",
          "13:                                             (\"redhat\", \"7\", \"x86_64\"),",
          "14:                                             (\"redhat\", \"7\", \"arm64\"),",
          "15:                                             (\"redhat\", \"7\", \"aarch64\"),",
          "16:                                             (\"redhat\", \"8\", \"x86_64\"),",
          "17:                                             (\"redhat\", \"8\", \"arm64\"),",
          "18:                                             (\"redhat\", \"8\", \"aarch64\"),",
          "19:                                             (\"redhat\", \"9\", \"x86_64\"),",
          "20:                                             (\"redhat\", \"9\", \"arm64\"),",
          "21:                                             (\"redhat\", \"9\", \"aarch64\"),",
          "22:                                             (\"fedora\", \"36\", \"x86_64\"),",
          "23:                                             (\"fedora\", \"36\", \"arm64\"),",
          "24:                                             (\"fedora\", \"36\", \"aarch64\"),",
          "25:                                             (\"fedora\", \"37\", \"x86_64\"),",
          "26:                                             (\"fedora\", \"37\", \"arm64\"),",
          "27:                                             (\"fedora\", \"37\", \"aarch64\"),",
          "28:                                             (\"fedora\", \"38\", \"x86_64\"),",
          "29:                                             (\"fedora\", \"38\", \"arm64\"),",
          "30:                                             (\"fedora\", \"38\", \"aarch64\"),",
          "31:                                             (\"photon\", \"3\", \"x86_64\"),",
          "32:                                             (\"photon\", \"3\", \"arm64\"),",
          "33:                                             (\"photon\", \"3\", \"aarch64\"),",
          "34:                                             (\"photon\", \"4\", \"x86_64\"),",
          "35:                                             (\"photon\", \"4\", \"arm64\"),",
          "36:                                             (\"photon\", \"4\", \"aarch64\"),",
          "37:                                             (\"photon\", \"5\", \"x86_64\"),",
          "38:                                             (\"photon\", \"5\", \"arm64\"),",
          "39:                                             (\"photon\", \"5\", \"aarch64\"),",
          "40:                                         ) %>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:       - name: Download RPM Packages",
          "67:         uses: actions/download-artifact@v3",
          "68:         with:",
          "70:           path: artifacts/pkgs/incoming",
          "72:       - name: Setup GnuPG",
          "",
          "[Removed Lines]",
          "69:           name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-${{ matrix.arch }}-rpm",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:         for _, arch, _ in test_salt_pkg_downloads_listing[platform]:",
          "253:             test_salt_pkg_downloads_needs_slugs.add(\"build-ci-deps\")",
          "255:     env = Environment(",
          "256:         block_start_string=\"<%\",",
          "257:         block_end_string=\"%>\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255:     build_rpms_listing = []",
          "256:     for distro, releases in (",
          "257:         (\"amazon\", (\"2\", \"2023\")),",
          "258:         (\"redhat\", (\"7\", \"8\", \"9\")),",
          "259:         (\"fedora\", (\"36\", \"37\", \"38\")),",
          "260:         (\"photon\", (\"3\", \"4\", \"5\")),",
          "261:     ):",
          "262:         for release in releases:",
          "263:             for arch in (\"x86_64\", \"arm64\", \"aarch64\"):",
          "264:                 build_rpms_listing.append((distro, release, arch))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293:             \"test_salt_pkg_downloads_needs_slugs\": sorted(",
          "294:                 test_salt_pkg_downloads_needs_slugs",
          "295:             ),",
          "296:         }",
          "297:         shared_context_file = (",
          "298:             tools.utils.REPO_ROOT / \"cicd\" / \"shared-gh-workflows-context.yml\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307:             \"build_rpms_listing\": build_rpms_listing,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93ab61e46d00874a6415c70261472514d8124237",
      "candidate_info": {
        "commit_hash": "93ab61e46d00874a6415c70261472514d8124237",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/93ab61e46d00874a6415c70261472514d8124237",
        "files": [
          "tests/pytests/integration/minion/test_return_retries.py"
        ],
        "message": "Even more reliable pillar timeout test",
        "before_after_code_files": [
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import pytest",
          "4: from saltfactories.utils import random_string",
          "7: @pytest.fixture(scope=\"function\")",
          "8: def salt_minion_retry(salt_master, salt_minion_id):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: import salt.utils.files",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55: @pytest.mark.slow_test",
          "60:     master_overrides = {",
          "61:         \"ext_pillar\": [",
          "63:         ],",
          "64:         \"auto_accept\": True,",
          "65:         \"worker_threads\": 2,",
          "",
          "[Removed Lines]",
          "56: def test_pillar_timeout(salt_master_factory):",
          "57:     cmd = \"\"\"",
          "58:     python -c \"import time; time.sleep(4); print('{\\\\\"foo\\\\\": \\\\\"bar\\\\\"}');\\\"",
          "59:     \"\"\".strip()",
          "62:             {\"cmd_json\": cmd},",
          "",
          "[Added Lines]",
          "58: def test_pillar_timeout(salt_master_factory, tmp_path):",
          "59:     cmd = 'print(\\'{\"foo\": \"bar\"}\\');\\n'",
          "61:     with salt.utils.files.fopen(tmp_path / \"script.py\", \"w\") as fp:",
          "62:         fp.write(cmd)",
          "66:             {\"cmd_json\": f\"python {tmp_path / 'script.py'}\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:         \"{}.sls\".format(sls_name), sls_contents",
          "106:     )",
          "107:     with master.started(), minion1.started(), minion2.started(), minion3.started(), minion4.started(), sls_tempfile:",
          "108:         proc = cli.run(\"state.sls\", sls_name, minion_tgt=\"*\")",
          "110:         # At least one minion should have a Pillar timeout",
          "111:         assert proc.returncode == 1",
          "112:         minion_timed_out = False",
          "",
          "[Removed Lines]",
          "109:         print(proc)",
          "",
          "[Added Lines]",
          "112:         cmd = 'import time; time.sleep(6); print(\\'{\"foo\": \"bang\"}\\');\\n'",
          "113:         with salt.utils.files.fopen(tmp_path / \"script.py\", \"w\") as fp:",
          "114:             fp.write(cmd)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "093a276d24ba4cd1bdf974be22aeb994a39fb755",
      "candidate_info": {
        "commit_hash": "093a276d24ba4cd1bdf974be22aeb994a39fb755",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/093a276d24ba4cd1bdf974be22aeb994a39fb755",
        "files": [
          ".github/workflows/build-packages.yml"
        ],
        "message": "Fix build RPM repository.\n\nSigned-off-by: Pedro Algarvio <palgarvio@vmware.com>",
        "before_after_code_files": []
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/saltstack/salt/pull/65969"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {}
    },
    {
      "candidate_hash": "101a773df176217da39f12759b4240f70d62ca26",
      "candidate_info": {
        "commit_hash": "101a773df176217da39f12759b4240f70d62ca26",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/101a773df176217da39f12759b4240f70d62ca26",
        "files": [
          "tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/modules/test_transactional_update.py",
          "tests/pytests/unit/test_fileserver.py",
          "tests/pytests/unit/utils/test_msgpack.py"
        ],
        "message": "Fix pre-commit",
        "before_after_code_files": [
          "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/modules/test_transactional_update.py||tests/pytests/unit/modules/test_transactional_update.py",
          "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py",
          "tests/pytests/unit/utils/test_msgpack.py||tests/pytests/unit/utils/test_msgpack.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ],
          "candidate": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py": [
          "File: tests/pytests/unit/modules/test_pip.py -> tests/pytests/unit/modules/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: from tests.support.mock import MagicMock, patch",
          "13: TARGET = []",
          "18: class FakeFopen:",
          "",
          "[Removed Lines]",
          "14: if os.environ.get('VENV_PIP_TARGET'):",
          "15:     TARGET = [\"--target\", os.environ.get('VENV_PIP_TARGET')]",
          "",
          "[Added Lines]",
          "14: if os.environ.get(\"VENV_PIP_TARGET\"):",
          "15:     TARGET = [\"--target\", os.environ.get(\"VENV_PIP_TARGET\")]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_transactional_update.py||tests/pytests/unit/modules/test_transactional_update.py": [
          "File: tests/pytests/unit/modules/test_transactional_update.py -> tests/pytests/unit/modules/test_transactional_update.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: ]",
          "14: SALT_CALL_BINARY = \"salt-call\"",
          "16:     SALT_CALL_BINARY = f\"{os.environ.get('VIRTUAL_ENV')}/bin/salt-call\"",
          "",
          "[Removed Lines]",
          "15: if os.environ.get('VIRTUAL_ENV'):",
          "",
          "[Added Lines]",
          "16: if os.environ.get(\"VIRTUAL_ENV\"):",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
          "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     opts = {",
          "76:         \"fileserver_backend\": [\"roots\"],",
          "77:         \"extension_modules\": \"\",",
          "81:         \"file_roots\": {",
          "82:             \"base\": [fileroot],",
          "83:         },",
          "",
          "[Removed Lines]",
          "78:         \"optimization_order\": [",
          "79:             0, 1",
          "80:         ],",
          "",
          "[Added Lines]",
          "78:         \"optimization_order\": [0, 1],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:     opts = {",
          "103:         \"fileserver_backend\": [\"roots\"],",
          "104:         \"extension_modules\": \"\",",
          "108:         \"file_roots\": {",
          "109:             \"base\": [fileroot],",
          "110:         },",
          "",
          "[Removed Lines]",
          "105:         \"optimization_order\": [",
          "106:             0, 1",
          "107:         ],",
          "",
          "[Added Lines]",
          "103:         \"optimization_order\": [0, 1],",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_msgpack.py||tests/pytests/unit/utils/test_msgpack.py": [
          "File: tests/pytests/unit/utils/test_msgpack.py -> tests/pytests/unit/utils/test_msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import salt.utils.msgpack",
          "4: from tests.support.mock import MagicMock, patch",
          "7: def test_load_encoding(tmp_path):",
          "8:     \"\"\"",
          "9:     test when using msgpack version >= 1.0.0 we",
          "",
          "[Removed Lines]",
          "6: @pytest.mark.skipif(salt.utils.msgpack.version < (1, 0, 0), reason=\"Test requires msgpack version >= 1.0.0\")",
          "",
          "[Added Lines]",
          "7: @pytest.mark.skipif(",
          "8:     salt.utils.msgpack.version < (1, 0, 0),",
          "9:     reason=\"Test requires msgpack version >= 1.0.0\",",
          "10: )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf580e66989601313434fe4e00589b2e02f353ac",
      "candidate_info": {
        "commit_hash": "bf580e66989601313434fe4e00589b2e02f353ac",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/bf580e66989601313434fe4e00589b2e02f353ac",
        "files": [
          "tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/test_fileserver.py"
        ],
        "message": "Make tests compatible with venv bundle",
        "before_after_code_files": [
          "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ],
          "candidate": [
            "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py": [
          "File: tests/pytests/unit/modules/test_pip.py -> tests/pytests/unit/modules/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: from salt.exceptions import CommandExecutionError",
          "11: from tests.support.mock import MagicMock, patch",
          "14: class FakeFopen:",
          "15:     def __init__(self, filename):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: TARGET = []",
          "14: if os.environ.get('VENV_PIP_TARGET'):",
          "15:     TARGET = [\"--target\", os.environ.get('VENV_PIP_TARGET')]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:         \"git+https://github.com/saltstack/salt-testing.git#egg=SaltTesting\",",
          "165:     ]",
          "168:     for item in editables:",
          "169:         expected.extend([\"--editable\", item])",
          "",
          "[Removed Lines]",
          "167:     expected = [*python_binary, \"install\"]",
          "",
          "[Added Lines]",
          "174:     expected = [*python_binary, \"install\", *TARGET]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "200:         \"git+https://github.com/saltstack/salt-testing.git#egg=SaltTesting\",",
          "201:     ]",
          "204:     expected.extend(pkgs)",
          "205:     for item in editables:",
          "206:         expected.extend([\"--editable\", item])",
          "",
          "[Removed Lines]",
          "203:     expected = [*python_binary, \"install\"]",
          "",
          "[Added Lines]",
          "210:     expected = [*python_binary, \"install\", *TARGET]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "263:         expected = [*python_binary, \"install\", \"--use-mirrors\"]",
          "264:         for item in mirrors:",
          "265:             expected.extend([\"--mirrors\", item])",
          "268:         # Passing mirrors as a list",
          "269:         mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "",
          "[Removed Lines]",
          "266:         expected.append(\"pep8\")",
          "",
          "[Added Lines]",
          "274:         expected = [*expected, *TARGET, \"pep8\"]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "322:     expected = [*python_binary, \"install\"]",
          "323:     for item in find_links:",
          "324:         expected.extend([\"--find-links\", item])",
          "327:     # Passing mirrors as a list",
          "328:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "",
          "[Removed Lines]",
          "325:     expected.append(pkg)",
          "",
          "[Added Lines]",
          "334:     expected = [*expected, *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "516:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "517:         pip.install(pkg, timeout=10)",
          "518:         mock.assert_called_with(",
          "520:             saltenv=\"base\",",
          "521:             runas=None,",
          "522:             use_vt=False,",
          "",
          "[Removed Lines]",
          "519:             expected + [10, pkg],",
          "",
          "[Added Lines]",
          "531:             expected + [10, *TARGET, pkg],",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "528:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "529:         pip.install(pkg, timeout=\"10\")",
          "530:         mock.assert_called_with(",
          "532:             saltenv=\"base\",",
          "533:             runas=None,",
          "534:             use_vt=False,",
          "",
          "[Removed Lines]",
          "531:             expected + [\"10\", pkg],",
          "",
          "[Added Lines]",
          "543:             expected + [\"10\", *TARGET, pkg],",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "590:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "591:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "592:         pip.install(pkg, no_index=True)",
          "594:         mock.assert_called_with(",
          "595:             expected,",
          "596:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "593:         expected = [*python_binary, \"install\", \"--no-index\", pkg]",
          "",
          "[Added Lines]",
          "607:         expected = [*python_binary, \"install\", \"--no-index\", *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "606:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "607:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "608:         pip.install(pkg, build=build)",
          "610:         mock.assert_called_with(",
          "611:             expected,",
          "612:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "609:         expected = [*python_binary, \"install\", \"--build\", build, pkg]",
          "",
          "[Added Lines]",
          "623:         expected = [*python_binary, \"install\", \"--build\", build, *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "659:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "660:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "661:         pip.install(pkg, no_download=True)",
          "663:         mock.assert_called_with(",
          "664:             expected,",
          "665:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "662:         expected = [*python_binary, \"install\", \"--no-download\", pkg]",
          "",
          "[Added Lines]",
          "677:         expected = [*python_binary, \"install\", *TARGET, \"--no-download\", pkg]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "715:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "716:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "717:         pip.install(pkg, source=source)",
          "719:         mock.assert_called_with(",
          "720:             expected,",
          "721:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "718:         expected = [*python_binary, \"install\", \"--source\", source, pkg]",
          "",
          "[Added Lines]",
          "734:         expected = [*python_binary, \"install\", *TARGET, \"--source\", source, pkg]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "756:     install_options = [\"--exec-prefix=/foo/bar\", \"--install-scripts=/foo/bar/bin\"]",
          "757:     pkg = \"pep8\"",
          "760:     for item in install_options:",
          "761:         expected.extend([\"--install-option\", item])",
          "762:     expected.append(pkg)",
          "",
          "[Removed Lines]",
          "759:     expected = [*python_binary, \"install\"]",
          "",
          "[Added Lines]",
          "776:     expected = [*python_binary, \"install\", *TARGET]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "809:     global_options = [\"--quiet\", \"--no-user-cfg\"]",
          "810:     pkg = \"pep8\"",
          "813:     for item in global_options:",
          "814:         expected.extend([\"--global-option\", item])",
          "815:     expected.append(pkg)",
          "",
          "[Removed Lines]",
          "812:     expected = [*python_binary, \"install\"]",
          "",
          "[Added Lines]",
          "830:     expected = [*python_binary, \"install\", *TARGET]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "863:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "864:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "865:         pip.install(pkg, upgrade=True)",
          "867:         mock.assert_called_with(",
          "868:             expected,",
          "869:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "866:         expected = [*python_binary, \"install\", \"--upgrade\", pkg]",
          "",
          "[Added Lines]",
          "885:         expected = [*python_binary, \"install\", *TARGET, \"--upgrade\", pkg]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "918:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "919:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "920:         pip.install(pkg, no_deps=True)",
          "922:         mock.assert_called_with(",
          "923:             expected,",
          "924:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "921:         expected = [*python_binary, \"install\", \"--no-deps\", pkg]",
          "",
          "[Added Lines]",
          "942:         expected = [*python_binary, \"install\", *TARGET, \"--no-deps\", pkg]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "933:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "934:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "935:         pip.install(pkg, no_install=True)",
          "937:         mock.assert_called_with(",
          "938:             expected,",
          "939:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "936:         expected = [*python_binary, \"install\", \"--no-install\", pkg]",
          "",
          "[Added Lines]",
          "957:         expected = [*python_binary, \"install\", *TARGET, \"--no-install\", pkg]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "949:     mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "950:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "951:         pip.install(pkg, proxy=proxy)",
          "953:         mock.assert_called_with(",
          "954:             expected,",
          "955:             saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "952:         expected = [*python_binary, \"install\", \"--proxy\", proxy, pkg]",
          "",
          "[Added Lines]",
          "973:         expected = [*python_binary, \"install\", \"--proxy\", proxy, *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "976:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "977:         with patch.dict(pip.__opts__, config_mock):",
          "978:             pip.install(pkg, proxy=proxy)",
          "980:             mock.assert_called_with(",
          "981:                 expected,",
          "982:                 saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "979:             expected = [*python_binary, \"install\", pkg]",
          "",
          "[Added Lines]",
          "1000:             expected = [*python_binary, \"install\", *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1027:         expected = [*python_binary, \"install\"]",
          "1028:         for item in cached_reqs:",
          "1029:             expected.extend([\"--requirement\", item])",
          "1031:         # Passing option as a list",
          "1032:         mock = MagicMock(return_value={\"retcode\": 0, \"stdout\": \"\"})",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1052:         expected.extend(TARGET)",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1599:     with patch.dict(pip.__salt__, {\"cmd.run_all\": mock}):",
          "1600:         with patch(\"salt.modules.pip.version\", MagicMock(return_value=\"1.3\")):",
          "1601:             pip.install(pkg, pre_releases=True)",
          "1603:             mock.assert_called_with(",
          "1604:                 expected,",
          "1605:                 saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "1602:             expected = [*python_binary, \"install\", pkg]",
          "",
          "[Added Lines]",
          "1627:             expected = [*python_binary, \"install\", *TARGET, pkg]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1615:     ):",
          "1616:         with patch(\"salt.modules.pip._get_pip_bin\", MagicMock(return_value=[\"pip\"])):",
          "1617:             pip.install(pkg, pre_releases=True)",
          "1619:             mock_run_all.assert_called_with(",
          "1620:                 expected,",
          "1621:                 saltenv=\"base\",",
          "",
          "[Removed Lines]",
          "1618:             expected = [\"pip\", \"install\", \"--pre\", pkg]",
          "",
          "[Added Lines]",
          "1643:             expected = [\"pip\", \"install\", *TARGET, \"--pre\", pkg]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_fileserver.py||tests/pytests/unit/test_fileserver.py": [
          "File: tests/pytests/unit/test_fileserver.py -> tests/pytests/unit/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         \"fileserver_backend\": [\"roots\"],",
          "77:         \"extension_modules\": \"\",",
          "78:         \"optimization_order\": [",
          "80:         ],",
          "81:         \"file_roots\": {",
          "82:             \"base\": [fileroot],",
          "",
          "[Removed Lines]",
          "79:             0,",
          "",
          "[Added Lines]",
          "79:             0, 1",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:         \"fileserver_backend\": [\"roots\"],",
          "104:         \"extension_modules\": \"\",",
          "105:         \"optimization_order\": [",
          "107:         ],",
          "108:         \"file_roots\": {",
          "109:             \"base\": [fileroot],",
          "",
          "[Removed Lines]",
          "106:             0,",
          "",
          "[Added Lines]",
          "106:             0, 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ef0ca4f7274a9866ad47626baf63dbf1a7a059f",
      "candidate_info": {
        "commit_hash": "4ef0ca4f7274a9866ad47626baf63dbf1a7a059f",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/4ef0ca4f7274a9866ad47626baf63dbf1a7a059f",
        "files": [
          "tests/pytests/unit/fileserver/test_roots.py"
        ],
        "message": "Fix test on windows",
        "before_after_code_files": [
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import copy",
          "6: import pathlib",
          "7: import shutil",
          "8: import textwrap",
          "10: import pytest",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import sys",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:         \"rel\": f\"{pathlib.Path('..') / 'bar'}\",",
          "311:     }",
          "312:     ret = roots.serve_file(load, fnd)",
          "",
          "[Removed Lines]",
          "313:     assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
          "",
          "[Added Lines]",
          "314:     if \"win\" in sys.platform:",
          "315:         assert ret == {\"data\": \"\", \"dest\": \"..\\\\bar\"}",
          "316:     else:",
          "317:         assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7530f68d3c60566b5ee87d701f341f3d036ee6e",
      "candidate_info": {
        "commit_hash": "f7530f68d3c60566b5ee87d701f341f3d036ee6e",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/f7530f68d3c60566b5ee87d701f341f3d036ee6e",
        "files": [
          "salt/master.py"
        ],
        "message": "Fix wart in patch",
        "before_after_code_files": [
          "salt/master.py||salt/master.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "salt/master.py||salt/master.py"
          ],
          "candidate": [
            "salt/master.py||salt/master.py"
          ]
        }
      },
      "candidate_diff": {
        "salt/master.py||salt/master.py": [
          "File: salt/master.py -> salt/master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1037:         key = payload[\"enc\"]",
          "1038:         load = payload[\"load\"]",
          "1039:         if key == \"aes\":",
          "1041:         else:",
          "1043:         raise salt.ext.tornado.gen.Return(ret)",
          "1045:     def _post_stats(self, start, cmd):",
          "",
          "[Removed Lines]",
          "1040:             ret = self.handle_aes(load)",
          "1042:             ret = self.handle_clear(load)",
          "",
          "[Added Lines]",
          "1040:             ret = self._handle_aes(load)",
          "1042:             ret = self._handle_clear(load)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9be2dec1b33a654da7cb73e39a5b35ff78fef57",
      "candidate_info": {
        "commit_hash": "b9be2dec1b33a654da7cb73e39a5b35ff78fef57",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/b9be2dec1b33a654da7cb73e39a5b35ff78fef57",
        "files": [
          ".github/workflows/lint-action.yml",
          ".pre-commit-config.yaml",
          ".pylintrc",
          "noxfile.py",
          "requirements/static/ci/lint.in",
          "requirements/static/ci/py3.10/lint.txt",
          "requirements/static/ci/py3.11/lint.txt",
          "requirements/static/ci/py3.12/lint.txt",
          "requirements/static/ci/py3.7/lint.txt",
          "requirements/static/ci/py3.8/lint.txt",
          "requirements/static/ci/py3.9/lint.txt",
          "salt/_logging/impl.py",
          "salt/auth/pki.py",
          "salt/channel/client.py",
          "salt/channel/server.py",
          "salt/cli/batch.py",
          "salt/cli/cp.py",
          "salt/client/__init__.py",
          "salt/client/ssh/__init__.py",
          "salt/client/ssh/ssh_py_shim.py",
          "salt/client/ssh/wrapper/grains.py",
          "salt/client/ssh/wrapper/pillar.py",
          "salt/cloud/cli.py",
          "salt/cloud/clouds/aliyun.py",
          "salt/cloud/clouds/clc.py",
          "salt/cloud/clouds/digitalocean.py",
          "salt/cloud/clouds/ec2.py",
          "salt/cloud/clouds/joyent.py",
          "salt/cloud/clouds/linode.py",
          "salt/cloud/clouds/proxmox.py",
          "salt/cloud/clouds/qingcloud.py",
          "salt/cloud/clouds/vmware.py",
          "salt/config/schemas/common.py",
          "salt/engines/slack.py",
          "salt/engines/slack_bolt_engine.py",
          "salt/ext/backports_abc.py",
          "salt/ext/ipaddress.py",
          "salt/ext/tornado/platform/auto.pyi",
          "salt/fileserver/s3fs.py",
          "salt/grains/core.py",
          "salt/loader/lazy.py",
          "salt/master.py",
          "salt/modules/aptpkg.py",
          "salt/modules/archive.py",
          "salt/modules/boto3_route53.py",
          "salt/modules/boto3_sns.py",
          "salt/modules/btrfs.py",
          "salt/modules/consul.py",
          "salt/modules/cp.py",
          "salt/modules/cryptdev.py",
          "salt/modules/csf.py",
          "salt/modules/datadog_api.py",
          "salt/modules/dig.py",
          "salt/modules/disk.py",
          "salt/modules/dockermod.py",
          "salt/modules/ebuildpkg.py",
          "salt/modules/file.py",
          "salt/modules/freebsdjail.py",
          "salt/modules/git.py",
          "salt/modules/glassfish.py",
          "salt/modules/grains.py",
          "salt/modules/heat.py",
          "salt/modules/inspectlib/fsdb.py",
          "salt/modules/inspectlib/query.py",
          "salt/modules/iptables.py",
          "salt/modules/iwtools.py",
          "salt/modules/k8s.py",
          "salt/modules/kubernetesmod.py",
          "salt/modules/ldap3.py",
          "salt/modules/mac_softwareupdate.py",
          "salt/modules/mine.py",
          "salt/modules/mount.py",
          "salt/modules/mysql.py",
          "salt/modules/network.py",
          "salt/modules/openscap.py",
          "salt/modules/opkg.py",
          "salt/modules/opsgenie.py",
          "salt/modules/oracle.py",
          "salt/modules/pagerduty_util.py",
          "salt/modules/pkg_resource.py",
          "salt/modules/portage_config.py",
          "salt/modules/postgres.py",
          "salt/modules/quota.py",
          "salt/modules/rabbitmq.py",
          "salt/modules/rpm_lowpkg.py",
          "salt/modules/saltcheck.py",
          "salt/modules/selinux.py",
          "salt/modules/sensehat.py",
          "salt/modules/serverdensity_device.py",
          "salt/modules/smartos_imgadm.py",
          "salt/modules/smartos_vmadm.py",
          "salt/modules/solaris_shadow.py",
          "salt/modules/splunk_search.py",
          "salt/modules/status.py",
          "salt/modules/statuspage.py",
          "salt/modules/swarm.py",
          "salt/modules/sysrc.py",
          "salt/modules/systemd_service.py",
          "salt/modules/telegram.py",
          "salt/modules/telemetry.py",
          "salt/modules/tomcat.py",
          "salt/modules/uptime.py",
          "salt/modules/vbox_guest.py",
          "salt/modules/virt.py",
          "salt/modules/win_iis.py",
          "salt/modules/win_lgpo.py",
          "salt/modules/win_lgpo_reg.py",
          "salt/modules/win_pkg.py",
          "salt/modules/win_pki.py",
          "salt/modules/win_shortcut.py",
          "salt/modules/win_status.py",
          "salt/modules/win_task.py",
          "salt/modules/x509_v2.py",
          "salt/modules/xapi_virt.py",
          "salt/modules/xfs.py",
          "salt/modules/yumpkg.py",
          "salt/modules/zcbuildout.py",
          "salt/netapi/rest_cherrypy/__init__.py",
          "salt/netapi/rest_cherrypy/app.py",
          "salt/netapi/rest_tornado/saltnado.py",
          "salt/output/pony.py",
          "salt/pillar/__init__.py",
          "salt/pillar/foreman.py",
          "salt/pillar/pepa.py",
          "salt/pillar/vault.py",
          "salt/pillar/vmware_pillar.py",
          "salt/platform/win.py",
          "salt/proxy/dummy.py",
          "salt/proxy/philips_hue.py",
          "salt/renderers/genshi.py",
          "salt/renderers/stateconf.py",
          "salt/returners/etcd_return.py",
          "salt/returners/influxdb_return.py",
          "salt/returners/local_cache.py",
          "salt/returners/mysql.py",
          "salt/returners/pgjsonb.py",
          "salt/returners/splunk.py",
          "salt/roster/cache.py",
          "salt/runners/asam.py",
          "salt/runners/launchd.py",
          "salt/runners/pkg.py",
          "salt/runners/state.py",
          "salt/runners/vault.py",
          "salt/scripts.py",
          "salt/serializers/msgpack.py",
          "salt/serializers/yaml.py",
          "salt/state.py",
          "salt/states/archive.py",
          "salt/states/boto3_route53.py",
          "salt/states/docker_container.py",
          "salt/states/docker_image.py",
          "salt/states/docker_network.py",
          "salt/states/environ.py",
          "salt/states/file.py",
          "salt/states/git.py",
          "salt/states/gpg.py",
          "salt/states/grafana_dashboard.py",
          "salt/states/grains.py",
          "salt/states/ldap.py",
          "salt/states/netsnmp.py",
          "salt/states/pip_state.py",
          "salt/states/pkg.py",
          "salt/states/probes.py",
          "salt/states/saltmod.py",
          "salt/states/win_iis.py",
          "salt/utils/ansible.py",
          "salt/utils/args.py",
          "salt/utils/atomicfile.py",
          "salt/utils/aws.py",
          "salt/utils/cache.py",
          "salt/utils/cloud.py",
          "salt/utils/compat.py",
          "salt/utils/configparser.py",
          "salt/utils/data.py",
          "salt/utils/dns.py",
          "salt/utils/dockermod/__init__.py",
          "salt/utils/dockermod/translate/container.py",
          "salt/utils/dockermod/translate/helpers.py",
          "salt/utils/files.py",
          "salt/utils/fsutils.py",
          "salt/utils/functools.py",
          "salt/utils/gitfs.py",
          "salt/utils/iam.py",
          "salt/utils/jinja.py",
          "salt/utils/msazure.py",
          "salt/utils/nacl.py",
          "salt/utils/napalm.py",
          "salt/utils/nb_popen.py",
          "salt/utils/network.py",
          "salt/utils/odict.py",
          "salt/utils/openstack/nova.py",
          "salt/utils/oset.py",
          "salt/utils/parsers.py",
          "salt/utils/path.py",
          "salt/utils/pkg/__init__.py",
          "salt/utils/pkg/win.py",
          "salt/utils/preseed.py",
          "salt/utils/process.py",
          "salt/utils/psutil_compat.py",
          "salt/utils/reactor.py",
          "salt/utils/ssdp.py",
          "salt/utils/templates.py",
          "salt/utils/vault.py",
          "salt/utils/verify.py",
          "salt/utils/versions.py",
          "salt/utils/vt.py",
          "salt/utils/win_network.py",
          "salt/utils/win_runas.py",
          "salt/version.py",
          "setup.py",
          "tests/buildpackage.py",
          "tests/committer_parser.py",
          "tests/conftest.py",
          "tests/eventlisten.py",
          "tests/integration/cloud/clouds/test_oneandone.py",
          "tests/integration/cloud/clouds/test_vmware.py",
          "tests/integration/modules/test_cp.py",
          "tests/integration/modules/test_ssh.py",
          "tests/integration/netapi/rest_tornado/test_app.py",
          "tests/minionswarm.py",
          "tests/modparser.py",
          "tests/pytests/functional/cache/test_etcd.py",
          "tests/pytests/functional/modules/test_data.py",
          "tests/pytests/functional/modules/test_system.py",
          "tests/pytests/functional/states/file/test_append.py",
          "tests/pytests/functional/states/file/test_replace.py",
          "tests/pytests/functional/states/pkgrepo/test_debian.py",
          "tests/pytests/functional/states/test_docker_container.py",
          "tests/pytests/functional/states/test_docker_network.py",
          "tests/pytests/functional/states/test_pkg.py",
          "tests/pytests/functional/states/test_ssh_auth.py",
          "tests/pytests/functional/test_crypt.py",
          "tests/pytests/integration/_logging/test_jid_logging.py",
          "tests/pytests/integration/cli/test_batch.py",
          "tests/pytests/integration/cli/test_salt.py",
          "tests/pytests/integration/cli/test_syndic_eauth.py",
          "tests/pytests/integration/modules/state/test_state_test.py",
          "tests/pytests/integration/sdb/test_etcd_db.py",
          "tests/pytests/integration/ssh/test_pre_flight.py",
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tests/pytests/pkg/integration/test_pip_upgrade.py",
          "tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/scenarios/blackout/conftest.py",
          "tests/pytests/unit/beacons/test_salt_monitor.py",
          "tests/pytests/unit/cli/test_daemons.py",
          "tests/pytests/unit/client/ssh/test_ssh.py",
          "tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/modules/dockermod/test_module.py",
          "tests/pytests/unit/modules/file/test_file_line.py",
          "tests/pytests/unit/modules/file/test_file_lsattr.py",
          "tests/pytests/unit/modules/file/test_file_module.py",
          "tests/pytests/unit/modules/state/test_state.py",
          "tests/pytests/unit/modules/test_cp.py",
          "tests/pytests/unit/modules/test_devinfo.py",
          "tests/pytests/unit/modules/test_glassfish.py",
          "tests/pytests/unit/modules/test_gpg.py",
          "tests/pytests/unit/modules/test_hg.py",
          "tests/pytests/unit/modules/test_mount.py",
          "tests/pytests/unit/modules/test_salt_version.py",
          "tests/pytests/unit/modules/test_solaris_shadow.py",
          "tests/pytests/unit/modules/test_win_powercfg.py",
          "tests/pytests/unit/modules/test_zabbix.py",
          "tests/pytests/unit/modules/virt/conftest.py",
          "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "tests/pytests/unit/pillar/test_consul_pillar.py",
          "tests/pytests/unit/proxy/test_napalm.py",
          "tests/pytests/unit/runners/test_asam.py",
          "tests/pytests/unit/runners/vault/test_app_role_auth.py",
          "tests/pytests/unit/runners/vault/test_token_auth.py",
          "tests/pytests/unit/serializers/test_serializers.py",
          "tests/pytests/unit/state/test_state_compiler.py",
          "tests/pytests/unit/states/test_host.py",
          "tests/pytests/unit/transport/test_zeromq.py",
          "tests/pytests/unit/utils/test_cloud.py",
          "tests/pytests/unit/utils/test_data.py",
          "tests/pytests/unit/utils/test_vault.py",
          "tests/pytests/unit/utils/test_vt.py",
          "tests/pytests/unit/wheel/test_file_roots.py",
          "tests/salt-tcpdump.py",
          "tests/saltsh.py",
          "tests/support/copyartifacts.py",
          "tests/support/generate-names-file-from-failed-test-reports.py",
          "tests/support/pkg.py",
          "tests/support/pytest/etcd.py",
          "tests/support/pytest/helpers.py",
          "tests/support/unit.py",
          "tests/support/win_installer.py",
          "tests/unit/ext/test_ipaddress.py",
          "tests/unit/modules/test_elasticsearch.py",
          "tests/unit/modules/test_sysmod.py",
          "tests/unit/modules/test_zcbuildout.py",
          "tests/unit/states/test_loop.py",
          "tests/unit/test_pillar.py",
          "tests/unit/test_zypp_plugins.py",
          "tests/unit/utils/test_configparser.py",
          "tests/unit/utils/test_context.py",
          "tests/unit/utils/test_dns.py",
          "tests/unit/utils/test_systemd.py",
          "tests/unit/utils/test_thin.py",
          "tests/wheeltest.py",
          "tools/changelog.py",
          "tools/ci.py",
          "tools/pkg/__init__.py",
          "tools/pkg/build.py",
          "tools/pkg/repo/__init__.py",
          "tools/pkg/repo/create.py",
          "tools/pkg/repo/publish.py",
          "tools/precommit/workflows.py",
          "tools/release.py",
          "tools/testsuite/__init__.py",
          "tools/testsuite/download.py",
          "tools/vm.py"
        ],
        "message": "Update and remove obsolete pylint plugins",
        "before_after_code_files": [
          "noxfile.py||noxfile.py",
          "requirements/static/ci/lint.in||requirements/static/ci/lint.in",
          "salt/_logging/impl.py||salt/_logging/impl.py",
          "salt/auth/pki.py||salt/auth/pki.py",
          "salt/channel/client.py||salt/channel/client.py",
          "salt/channel/server.py||salt/channel/server.py",
          "salt/cli/batch.py||salt/cli/batch.py",
          "salt/cli/cp.py||salt/cli/cp.py",
          "salt/client/__init__.py||salt/client/__init__.py",
          "salt/client/ssh/__init__.py||salt/client/ssh/__init__.py",
          "salt/client/ssh/ssh_py_shim.py||salt/client/ssh/ssh_py_shim.py",
          "salt/client/ssh/wrapper/grains.py||salt/client/ssh/wrapper/grains.py",
          "salt/client/ssh/wrapper/pillar.py||salt/client/ssh/wrapper/pillar.py",
          "salt/cloud/cli.py||salt/cloud/cli.py",
          "salt/cloud/clouds/aliyun.py||salt/cloud/clouds/aliyun.py",
          "salt/cloud/clouds/clc.py||salt/cloud/clouds/clc.py",
          "salt/cloud/clouds/digitalocean.py||salt/cloud/clouds/digitalocean.py",
          "salt/cloud/clouds/ec2.py||salt/cloud/clouds/ec2.py",
          "salt/cloud/clouds/joyent.py||salt/cloud/clouds/joyent.py",
          "salt/cloud/clouds/linode.py||salt/cloud/clouds/linode.py",
          "salt/cloud/clouds/proxmox.py||salt/cloud/clouds/proxmox.py",
          "salt/cloud/clouds/qingcloud.py||salt/cloud/clouds/qingcloud.py",
          "salt/cloud/clouds/vmware.py||salt/cloud/clouds/vmware.py",
          "salt/config/schemas/common.py||salt/config/schemas/common.py",
          "salt/engines/slack.py||salt/engines/slack.py",
          "salt/engines/slack_bolt_engine.py||salt/engines/slack_bolt_engine.py",
          "salt/ext/backports_abc.py||salt/ext/backports_abc.py",
          "salt/ext/ipaddress.py||salt/ext/ipaddress.py",
          "salt/ext/tornado/platform/auto.pyi||salt/ext/tornado/platform/auto.pyi",
          "salt/fileserver/s3fs.py||salt/fileserver/s3fs.py",
          "salt/grains/core.py||salt/grains/core.py",
          "salt/loader/lazy.py||salt/loader/lazy.py",
          "salt/master.py||salt/master.py",
          "salt/modules/aptpkg.py||salt/modules/aptpkg.py",
          "salt/modules/archive.py||salt/modules/archive.py",
          "salt/modules/boto3_route53.py||salt/modules/boto3_route53.py",
          "salt/modules/boto3_sns.py||salt/modules/boto3_sns.py",
          "salt/modules/btrfs.py||salt/modules/btrfs.py",
          "salt/modules/consul.py||salt/modules/consul.py",
          "salt/modules/cp.py||salt/modules/cp.py",
          "salt/modules/cryptdev.py||salt/modules/cryptdev.py",
          "salt/modules/csf.py||salt/modules/csf.py",
          "salt/modules/datadog_api.py||salt/modules/datadog_api.py",
          "salt/modules/dig.py||salt/modules/dig.py",
          "salt/modules/disk.py||salt/modules/disk.py",
          "salt/modules/dockermod.py||salt/modules/dockermod.py",
          "salt/modules/ebuildpkg.py||salt/modules/ebuildpkg.py",
          "salt/modules/file.py||salt/modules/file.py",
          "salt/modules/freebsdjail.py||salt/modules/freebsdjail.py",
          "salt/modules/git.py||salt/modules/git.py",
          "salt/modules/glassfish.py||salt/modules/glassfish.py",
          "salt/modules/grains.py||salt/modules/grains.py",
          "salt/modules/heat.py||salt/modules/heat.py",
          "salt/modules/inspectlib/fsdb.py||salt/modules/inspectlifsdb.py",
          "salt/modules/inspectlib/query.py||salt/modules/inspectliquery.py",
          "salt/modules/iptables.py||salt/modules/iptables.py",
          "salt/modules/iwtools.py||salt/modules/iwtools.py",
          "salt/modules/k8s.py||salt/modules/k8s.py",
          "salt/modules/kubernetesmod.py||salt/modules/kubernetesmod.py",
          "salt/modules/ldap3.py||salt/modules/ldap3.py",
          "salt/modules/mac_softwareupdate.py||salt/modules/mac_softwareupdate.py",
          "salt/modules/mine.py||salt/modules/mine.py",
          "salt/modules/mount.py||salt/modules/mount.py",
          "salt/modules/mysql.py||salt/modules/mysql.py",
          "salt/modules/network.py||salt/modules/network.py",
          "salt/modules/openscap.py||salt/modules/openscap.py",
          "salt/modules/opkg.py||salt/modules/opkg.py",
          "salt/modules/opsgenie.py||salt/modules/opsgenie.py",
          "salt/modules/oracle.py||salt/modules/oracle.py",
          "salt/modules/pagerduty_util.py||salt/modules/pagerduty_util.py",
          "salt/modules/pkg_resource.py||salt/modules/pkg_resource.py",
          "salt/modules/portage_config.py||salt/modules/portage_config.py",
          "salt/modules/postgres.py||salt/modules/postgres.py",
          "salt/modules/quota.py||salt/modules/quota.py",
          "salt/modules/rabbitmq.py||salt/modules/rabbitmq.py",
          "salt/modules/rpm_lowpkg.py||salt/modules/rpm_lowpkg.py",
          "salt/modules/saltcheck.py||salt/modules/saltcheck.py",
          "salt/modules/selinux.py||salt/modules/selinux.py",
          "salt/modules/sensehat.py||salt/modules/sensehat.py",
          "salt/modules/serverdensity_device.py||salt/modules/serverdensity_device.py",
          "salt/modules/smartos_imgadm.py||salt/modules/smartos_imgadm.py",
          "salt/modules/smartos_vmadm.py||salt/modules/smartos_vmadm.py",
          "salt/modules/solaris_shadow.py||salt/modules/solaris_shadow.py",
          "salt/modules/splunk_search.py||salt/modules/splunk_search.py",
          "salt/modules/status.py||salt/modules/status.py",
          "salt/modules/statuspage.py||salt/modules/statuspage.py",
          "salt/modules/swarm.py||salt/modules/swarm.py",
          "salt/modules/sysrc.py||salt/modules/sysrc.py",
          "salt/modules/systemd_service.py||salt/modules/systemd_service.py",
          "salt/modules/telegram.py||salt/modules/telegram.py",
          "salt/modules/telemetry.py||salt/modules/telemetry.py",
          "salt/modules/tomcat.py||salt/modules/tomcat.py",
          "salt/modules/uptime.py||salt/modules/uptime.py",
          "salt/modules/vbox_guest.py||salt/modules/vbox_guest.py",
          "salt/modules/virt.py||salt/modules/virt.py",
          "salt/modules/win_iis.py||salt/modules/win_iis.py",
          "salt/modules/win_lgpo.py||salt/modules/win_lgpo.py",
          "salt/modules/win_lgpo_reg.py||salt/modules/win_lgpo_reg.py",
          "salt/modules/win_pkg.py||salt/modules/win_pkg.py",
          "salt/modules/win_pki.py||salt/modules/win_pki.py",
          "salt/modules/win_shortcut.py||salt/modules/win_shortcut.py",
          "salt/modules/win_status.py||salt/modules/win_status.py",
          "salt/modules/win_task.py||salt/modules/win_task.py",
          "salt/modules/x509_v2.py||salt/modules/x509_v2.py",
          "salt/modules/xapi_virt.py||salt/modules/xapi_virt.py",
          "salt/modules/xfs.py||salt/modules/xfs.py",
          "salt/modules/yumpkg.py||salt/modules/yumpkg.py",
          "salt/modules/zcbuildout.py||salt/modules/zcbuildout.py",
          "salt/netapi/rest_cherrypy/__init__.py||salt/netapi/rest_cherrypy/__init__.py",
          "salt/netapi/rest_cherrypy/app.py||salt/netapi/rest_cherrypy/app.py",
          "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py",
          "salt/output/pony.py||salt/output/pony.py",
          "salt/pillar/__init__.py||salt/pillar/__init__.py",
          "salt/pillar/foreman.py||salt/pillar/foreman.py",
          "salt/pillar/pepa.py||salt/pillar/pepa.py",
          "salt/pillar/vault.py||salt/pillar/vault.py",
          "salt/pillar/vmware_pillar.py||salt/pillar/vmware_pillar.py",
          "salt/platform/win.py||salt/platform/win.py",
          "salt/proxy/dummy.py||salt/proxy/dummy.py",
          "salt/proxy/philips_hue.py||salt/proxy/philips_hue.py",
          "salt/renderers/genshi.py||salt/renderers/genshi.py",
          "salt/renderers/stateconf.py||salt/renderers/stateconf.py",
          "salt/returners/etcd_return.py||salt/returners/etcd_return.py",
          "salt/returners/influxdb_return.py||salt/returners/influxdb_return.py",
          "salt/returners/local_cache.py||salt/returners/local_cache.py",
          "salt/returners/mysql.py||salt/returners/mysql.py",
          "salt/returners/pgjsonb.py||salt/returners/pgjsonb.py",
          "salt/returners/splunk.py||salt/returners/splunk.py",
          "salt/roster/cache.py||salt/roster/cache.py",
          "salt/runners/asam.py||salt/runners/asam.py",
          "salt/runners/launchd.py||salt/runners/launchd.py",
          "salt/runners/pkg.py||salt/runners/pkg.py",
          "salt/runners/state.py||salt/runners/state.py",
          "salt/runners/vault.py||salt/runners/vault.py",
          "salt/scripts.py||salt/scripts.py",
          "salt/serializers/msgpack.py||salt/serializers/msgpack.py",
          "salt/serializers/yaml.py||salt/serializers/yaml.py",
          "salt/state.py||salt/state.py",
          "salt/states/archive.py||salt/states/archive.py",
          "salt/states/boto3_route53.py||salt/states/boto3_route53.py",
          "salt/states/docker_container.py||salt/states/docker_container.py",
          "salt/states/docker_image.py||salt/states/docker_image.py",
          "salt/states/docker_network.py||salt/states/docker_network.py",
          "salt/states/environ.py||salt/states/environ.py",
          "salt/states/file.py||salt/states/file.py",
          "salt/states/git.py||salt/states/git.py",
          "salt/states/gpg.py||salt/states/gpg.py",
          "salt/states/grafana_dashboard.py||salt/states/grafana_dashboard.py",
          "salt/states/grains.py||salt/states/grains.py",
          "salt/states/ldap.py||salt/states/ldap.py",
          "salt/states/netsnmp.py||salt/states/netsnmp.py",
          "salt/states/pip_state.py||salt/states/pip_state.py",
          "salt/states/pkg.py||salt/states/pkg.py",
          "salt/states/probes.py||salt/states/probes.py",
          "salt/states/saltmod.py||salt/states/saltmod.py",
          "salt/states/win_iis.py||salt/states/win_iis.py",
          "salt/utils/ansible.py||salt/utils/ansible.py",
          "salt/utils/args.py||salt/utils/args.py",
          "salt/utils/atomicfile.py||salt/utils/atomicfile.py",
          "salt/utils/aws.py||salt/utils/aws.py",
          "salt/utils/cache.py||salt/utils/cache.py",
          "salt/utils/cloud.py||salt/utils/cloud.py",
          "salt/utils/compat.py||salt/utils/compat.py",
          "salt/utils/configparser.py||salt/utils/configparser.py",
          "salt/utils/data.py||salt/utils/data.py",
          "salt/utils/dns.py||salt/utils/dns.py",
          "salt/utils/dockermod/__init__.py||salt/utils/dockermod/__init__.py",
          "salt/utils/dockermod/translate/container.py||salt/utils/dockermod/translate/container.py",
          "salt/utils/dockermod/translate/helpers.py||salt/utils/dockermod/translate/helpers.py",
          "salt/utils/files.py||salt/utils/files.py",
          "salt/utils/fsutils.py||salt/utils/fsutils.py",
          "salt/utils/functools.py||salt/utils/functools.py",
          "salt/utils/gitfs.py||salt/utils/gitfs.py",
          "salt/utils/iam.py||salt/utils/iam.py",
          "salt/utils/jinja.py||salt/utils/jinja.py",
          "salt/utils/msazure.py||salt/utils/msazure.py",
          "salt/utils/nacl.py||salt/utils/nacl.py",
          "salt/utils/napalm.py||salt/utils/napalm.py",
          "salt/utils/nb_popen.py||salt/utils/nb_popen.py",
          "salt/utils/network.py||salt/utils/network.py",
          "salt/utils/odict.py||salt/utils/odict.py",
          "salt/utils/openstack/nova.py||salt/utils/openstack/nova.py",
          "salt/utils/oset.py||salt/utils/oset.py",
          "salt/utils/parsers.py||salt/utils/parsers.py",
          "salt/utils/path.py||salt/utils/path.py",
          "salt/utils/pkg/__init__.py||salt/utils/pkg/__init__.py",
          "salt/utils/pkg/win.py||salt/utils/pkg/win.py",
          "salt/utils/preseed.py||salt/utils/preseed.py",
          "salt/utils/process.py||salt/utils/process.py",
          "salt/utils/psutil_compat.py||salt/utils/psutil_compat.py",
          "salt/utils/reactor.py||salt/utils/reactor.py",
          "salt/utils/ssdp.py||salt/utils/ssdp.py",
          "salt/utils/templates.py||salt/utils/templates.py",
          "salt/utils/vault.py||salt/utils/vault.py",
          "salt/utils/verify.py||salt/utils/verify.py",
          "salt/utils/versions.py||salt/utils/versions.py",
          "salt/utils/vt.py||salt/utils/vt.py",
          "salt/utils/win_network.py||salt/utils/win_network.py",
          "salt/utils/win_runas.py||salt/utils/win_runas.py",
          "salt/version.py||salt/version.py",
          "setup.py||setup.py",
          "tests/buildpackage.py||tests/buildpackage.py",
          "tests/committer_parser.py||tests/committer_parser.py",
          "tests/conftest.py||tests/conftest.py",
          "tests/eventlisten.py||tests/eventlisten.py",
          "tests/integration/cloud/clouds/test_oneandone.py||tests/integration/cloud/clouds/test_oneandone.py",
          "tests/integration/cloud/clouds/test_vmware.py||tests/integration/cloud/clouds/test_vmware.py",
          "tests/integration/modules/test_cp.py||tests/integration/modules/test_cp.py",
          "tests/integration/modules/test_ssh.py||tests/integration/modules/test_ssh.py",
          "tests/integration/netapi/rest_tornado/test_app.py||tests/integration/netapi/rest_tornado/test_app.py",
          "tests/minionswarm.py||tests/minionswarm.py",
          "tests/modparser.py||tests/modparser.py",
          "tests/pytests/functional/cache/test_etcd.py||tests/pytests/functional/cache/test_etcd.py",
          "tests/pytests/functional/modules/test_data.py||tests/pytests/functional/modules/test_data.py",
          "tests/pytests/functional/modules/test_system.py||tests/pytests/functional/modules/test_system.py",
          "tests/pytests/functional/states/file/test_append.py||tests/pytests/functional/states/file/test_append.py",
          "tests/pytests/functional/states/file/test_replace.py||tests/pytests/functional/states/file/test_replace.py",
          "tests/pytests/functional/states/pkgrepo/test_debian.py||tests/pytests/functional/states/pkgrepo/test_debian.py",
          "tests/pytests/functional/states/test_docker_container.py||tests/pytests/functional/states/test_docker_container.py",
          "tests/pytests/functional/states/test_docker_network.py||tests/pytests/functional/states/test_docker_network.py",
          "tests/pytests/functional/states/test_pkg.py||tests/pytests/functional/states/test_pkg.py",
          "tests/pytests/functional/states/test_ssh_auth.py||tests/pytests/functional/states/test_ssh_auth.py",
          "tests/pytests/functional/test_crypt.py||tests/pytests/functional/test_crypt.py",
          "tests/pytests/integration/_logging/test_jid_logging.py||tests/pytests/integration/_logging/test_jid_logging.py",
          "tests/pytests/integration/cli/test_batch.py||tests/pytests/integration/cli/test_batch.py",
          "tests/pytests/integration/cli/test_salt.py||tests/pytests/integration/cli/test_salt.py",
          "tests/pytests/integration/cli/test_syndic_eauth.py||tests/pytests/integration/cli/test_syndic_eauth.py",
          "tests/pytests/integration/modules/state/test_state_test.py||tests/pytests/integration/modules/state/test_state_test.py",
          "tests/pytests/integration/sdb/test_etcd_db.py||tests/pytests/integration/sdtest_etcd_db.py",
          "tests/pytests/integration/ssh/test_pre_flight.py||tests/pytests/integration/ssh/test_pre_flight.py",
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "tests/pytests/pkg/integration/test_pip_upgrade.py||tests/pytests/pkg/integration/test_pip_upgrade.py",
          "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/scenarios/blackout/conftest.py||tests/pytests/scenarios/blackout/conftest.py",
          "tests/pytests/unit/beacons/test_salt_monitor.py||tests/pytests/unit/beacons/test_salt_monitor.py",
          "tests/pytests/unit/cli/test_daemons.py||tests/pytests/unit/cli/test_daemons.py",
          "tests/pytests/unit/client/ssh/test_ssh.py||tests/pytests/unit/client/ssh/test_ssh.py",
          "tests/pytests/unit/cloud/clouds/test_proxmox.py||tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py||tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/modules/dockermod/test_module.py||tests/pytests/unit/modules/dockermod/test_module.py",
          "tests/pytests/unit/modules/file/test_file_line.py||tests/pytests/unit/modules/file/test_file_line.py",
          "tests/pytests/unit/modules/file/test_file_lsattr.py||tests/pytests/unit/modules/file/test_file_lsattr.py",
          "tests/pytests/unit/modules/file/test_file_module.py||tests/pytests/unit/modules/file/test_file_module.py",
          "tests/pytests/unit/modules/state/test_state.py||tests/pytests/unit/modules/state/test_state.py",
          "tests/pytests/unit/modules/test_cp.py||tests/pytests/unit/modules/test_cp.py",
          "tests/pytests/unit/modules/test_devinfo.py||tests/pytests/unit/modules/test_devinfo.py",
          "tests/pytests/unit/modules/test_glassfish.py||tests/pytests/unit/modules/test_glassfish.py",
          "tests/pytests/unit/modules/test_gpg.py||tests/pytests/unit/modules/test_gpg.py",
          "tests/pytests/unit/modules/test_hg.py||tests/pytests/unit/modules/test_hg.py",
          "tests/pytests/unit/modules/test_mount.py||tests/pytests/unit/modules/test_mount.py",
          "tests/pytests/unit/modules/test_salt_version.py||tests/pytests/unit/modules/test_salt_version.py",
          "tests/pytests/unit/modules/test_solaris_shadow.py||tests/pytests/unit/modules/test_solaris_shadow.py",
          "tests/pytests/unit/modules/test_win_powercfg.py||tests/pytests/unit/modules/test_win_powercfg.py",
          "tests/pytests/unit/modules/test_zabbix.py||tests/pytests/unit/modules/test_zabbix.py",
          "tests/pytests/unit/modules/virt/conftest.py||tests/pytests/unit/modules/virt/conftest.py",
          "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py||tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "tests/pytests/unit/pillar/test_consul_pillar.py||tests/pytests/unit/pillar/test_consul_pillar.py",
          "tests/pytests/unit/proxy/test_napalm.py||tests/pytests/unit/proxy/test_napalm.py",
          "tests/pytests/unit/runners/test_asam.py||tests/pytests/unit/runners/test_asam.py",
          "tests/pytests/unit/runners/vault/test_app_role_auth.py||tests/pytests/unit/runners/vault/test_app_role_auth.py",
          "tests/pytests/unit/runners/vault/test_token_auth.py||tests/pytests/unit/runners/vault/test_token_auth.py",
          "tests/pytests/unit/serializers/test_serializers.py||tests/pytests/unit/serializers/test_serializers.py",
          "tests/pytests/unit/state/test_state_compiler.py||tests/pytests/unit/state/test_state_compiler.py",
          "tests/pytests/unit/states/test_host.py||tests/pytests/unit/states/test_host.py",
          "tests/pytests/unit/transport/test_zeromq.py||tests/pytests/unit/transport/test_zeromq.py",
          "tests/pytests/unit/utils/test_cloud.py||tests/pytests/unit/utils/test_cloud.py",
          "tests/pytests/unit/utils/test_data.py||tests/pytests/unit/utils/test_data.py",
          "tests/pytests/unit/utils/test_vault.py||tests/pytests/unit/utils/test_vault.py",
          "tests/pytests/unit/utils/test_vt.py||tests/pytests/unit/utils/test_vt.py",
          "tests/pytests/unit/wheel/test_file_roots.py||tests/pytests/unit/wheel/test_file_roots.py",
          "tests/salt-tcpdump.py||tests/salt-tcpdump.py",
          "tests/saltsh.py||tests/saltsh.py",
          "tests/support/copyartifacts.py||tests/support/copyartifacts.py",
          "tests/support/generate-names-file-from-failed-test-reports.py||tests/support/generate-names-file-from-failed-test-reports.py",
          "tests/support/pkg.py||tests/support/pkg.py",
          "tests/support/pytest/etcd.py||tests/support/pytest/etcd.py",
          "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py",
          "tests/support/unit.py||tests/support/unit.py",
          "tests/support/win_installer.py||tests/support/win_installer.py",
          "tests/unit/ext/test_ipaddress.py||tests/unit/ext/test_ipaddress.py",
          "tests/unit/modules/test_elasticsearch.py||tests/unit/modules/test_elasticsearch.py",
          "tests/unit/modules/test_sysmod.py||tests/unit/modules/test_sysmod.py",
          "tests/unit/modules/test_zcbuildout.py||tests/unit/modules/test_zcbuildout.py",
          "tests/unit/states/test_loop.py||tests/unit/states/test_loop.py",
          "tests/unit/test_pillar.py||tests/unit/test_pillar.py",
          "tests/unit/test_zypp_plugins.py||tests/unit/test_zypp_plugins.py",
          "tests/unit/utils/test_configparser.py||tests/unit/utils/test_configparser.py",
          "tests/unit/utils/test_context.py||tests/unit/utils/test_context.py",
          "tests/unit/utils/test_dns.py||tests/unit/utils/test_dns.py",
          "tests/unit/utils/test_systemd.py||tests/unit/utils/test_systemd.py",
          "tests/unit/utils/test_thin.py||tests/unit/utils/test_thin.py",
          "tests/wheeltest.py||tests/wheeltest.py",
          "tools/changelog.py||tools/changelog.py",
          "tools/ci.py||tools/ci.py",
          "tools/pkg/__init__.py||tools/pkg/__init__.py",
          "tools/pkg/build.py||tools/pkg/build.py",
          "tools/pkg/repo/__init__.py||tools/pkg/repo/__init__.py",
          "tools/pkg/repo/create.py||tools/pkg/repo/create.py",
          "tools/pkg/repo/publish.py||tools/pkg/repo/publish.py",
          "tools/precommit/workflows.py||tools/precommit/workflows.py",
          "tools/release.py||tools/release.py",
          "tools/testsuite/__init__.py||tools/testsuite/__init__.py",
          "tools/testsuite/download.py||tools/testsuite/download.py",
          "tools/vm.py||tools/vm.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "salt/master.py||salt/master.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "salt/master.py||salt/master.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "noxfile.py||noxfile.py": [
          "File: noxfile.py -> noxfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1300:                 # Let's try to fix shebang's",
          "1301:                 try:",
          "1302:                     fpath = pathlib.Path(path)",
          "1304:                     if (",
          "1305:                         contents[0].startswith(\"#!\")",
          "1306:                         and contents[0].endswith(\"python\")",
          "",
          "[Removed Lines]",
          "1303:                     contents = fpath.read_text().splitlines()",
          "",
          "[Added Lines]",
          "1303:                     contents = fpath.read_text(encoding=\"utf-8\").splitlines()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1310:                             \"Fixing broken shebang in %r\",",
          "1311:                             str(fpath.relative_to(REPO_ROOT)),",
          "1312:                         )",
          "1314:                 except UnicodeDecodeError:",
          "1315:                     pass",
          "",
          "[Removed Lines]",
          "1313:                         fpath.write_text(\"\\n\".join([fixed_shebang] + contents[1:]))",
          "",
          "[Added Lines]",
          "1313:                         fpath.write_text(",
          "1314:                             \"\\n\".join([fixed_shebang] + contents[1:]), encoding=\"utf-8\"",
          "1315:                         )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1467:         return self._first.fileno()",
          "1473:     if _upgrade_pip_setuptools_and_wheel(session, upgrade=upgrade_setuptools_and_pip):",
          "1475:             \"requirements\", \"static\", \"ci\", _get_pydir(session), \"lint.txt\"",
          "1476:         )",
          "1478:         session.install(*install_command, silent=PIP_INSTALL_SILENT)",
          "1484:     cmd_args = [\"pylint\", \"--rcfile={}\".format(rcfile)] + list(flags) + list(paths)",
          "1486:     cmd_kwargs = {\"env\": {\"PYTHONUNBUFFERED\": \"1\"}}",
          "1514: def _lint_pre_commit(session, rcfile, flags, paths):",
          "",
          "[Removed Lines]",
          "1470: def _lint(",
          "1471:     session, rcfile, flags, paths, tee_output=True, upgrade_setuptools_and_pip=True",
          "1472: ):",
          "1474:         requirements_file = os.path.join(",
          "1477:         install_command = [\"--progress-bar=off\", \"-r\", requirements_file]",
          "1480:     if tee_output:",
          "1481:         session.run(\"pylint\", \"--version\")",
          "1482:         pylint_report_path = os.environ.get(\"PYLINT_REPORT\")",
          "1488:     if tee_output:",
          "1489:         stdout = tempfile.TemporaryFile(mode=\"w+b\")",
          "1490:         cmd_kwargs[\"stdout\"] = Tee(stdout, sys.__stdout__)",
          "1492:     lint_failed = False",
          "1493:     try:",
          "1494:         session.run(*cmd_args, **cmd_kwargs)",
          "1495:     except CommandFailed:",
          "1496:         lint_failed = True",
          "1497:         raise",
          "1498:     finally:",
          "1499:         if tee_output:",
          "1500:             stdout.seek(0)",
          "1501:             contents = stdout.read()",
          "1502:             if contents:",
          "1503:                 contents = contents.decode(\"utf-8\")",
          "1504:                 sys.stdout.write(contents)",
          "1505:                 sys.stdout.flush()",
          "1506:                 if pylint_report_path:",
          "1507:                     # Write report",
          "1508:                     with open(pylint_report_path, \"w\") as wfh:",
          "1509:                         wfh.write(contents)",
          "1510:                     session.log(\"Report file written to %r\", pylint_report_path)",
          "1511:             stdout.close()",
          "",
          "[Added Lines]",
          "1472: def _lint(session, rcfile, flags, paths, upgrade_setuptools_and_pip=True):",
          "1474:         base_requirements_file = os.path.join(",
          "1475:             \"requirements\", \"static\", \"ci\", _get_pydir(session), \"linux.txt\"",
          "1476:         )",
          "1477:         lint_requirements_file = os.path.join(",
          "1480:         install_command = [",
          "1481:             \"--progress-bar=off\",",
          "1482:             \"-r\",",
          "1483:             base_requirements_file,",
          "1484:             \"-r\",",
          "1485:             lint_requirements_file,",
          "1486:         ]",
          "1491:     session.run(*cmd_args, **cmd_kwargs)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1527:     from nox.virtualenv import VirtualEnv",
          "1529:     # Let's patch nox to make it run inside the pre-commit virtualenv",
          "1544:     _lint(",
          "1545:         session,",
          "1546:         rcfile,",
          "1547:         flags,",
          "1548:         paths,",
          "1550:         upgrade_setuptools_and_pip=False,",
          "1551:     )",
          "",
          "[Removed Lines]",
          "1530:     try:",
          "1531:         session._runner.venv = VirtualEnv(  # pylint: disable=unexpected-keyword-arg",
          "1532:             os.environ[\"VIRTUAL_ENV\"],",
          "1533:             interpreter=session._runner.func.python,",
          "1534:             reuse_existing=True,",
          "1535:             venv=True,",
          "1536:         )",
          "1537:     except TypeError:",
          "1538:         # This is still nox-py2",
          "1539:         session._runner.venv = VirtualEnv(",
          "1540:             os.environ[\"VIRTUAL_ENV\"],",
          "1541:             interpreter=session._runner.func.python,",
          "1542:             reuse_existing=True,",
          "1543:         )",
          "1549:         tee_output=False,",
          "",
          "[Added Lines]",
          "1510:     session._runner.venv = VirtualEnv(",
          "1511:         os.environ[\"VIRTUAL_ENV\"],",
          "1512:         interpreter=session._runner.func.python,",
          "1513:         reuse_existing=True,",
          "1514:         venv=True,",
          "1515:     )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1554: @nox.session(python=\"3\")",
          "1555: def lint(session):",
          "1556:     \"\"\"",
          "1558:     \"\"\"",
          "1559:     session.notify(\"lint-salt-{}\".format(session.python))",
          "1560:     session.notify(\"lint-tests-{}\".format(session.python))",
          "",
          "[Removed Lines]",
          "1557:     Run PyLint against Salt and it's test suite. Set PYLINT_REPORT to a path to capture output.",
          "",
          "[Added Lines]",
          "1528:     Run PyLint against Salt and it's test suite.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1563: @nox.session(python=\"3\", name=\"lint-salt\")",
          "1564: def lint_salt(session):",
          "1565:     \"\"\"",
          "1567:     \"\"\"",
          "1568:     flags = [\"--disable=I\"]",
          "1569:     if session.posargs:",
          "1570:         paths = session.posargs",
          "1571:     else:",
          "1572:         # TBD replace paths entries when implement pyproject.toml",
          "1574:     _lint(session, \".pylintrc\", flags, paths)",
          "1577: @nox.session(python=\"3\", name=\"lint-tests\")",
          "1578: def lint_tests(session):",
          "1579:     \"\"\"",
          "1581:     \"\"\"",
          "1582:     flags = [\"--disable=I\"]",
          "1583:     if session.posargs:",
          "",
          "[Removed Lines]",
          "1566:     Run PyLint against Salt. Set PYLINT_REPORT to a path to capture output.",
          "1573:         paths = [\"setup.py\", \"noxfile.py\", \"salt/\"]",
          "1580:     Run PyLint against Salt and it's test suite. Set PYLINT_REPORT to a path to capture output.",
          "",
          "[Added Lines]",
          "1537:     Run PyLint against Salt.",
          "1544:         paths = [\"setup.py\", \"noxfile.py\", \"salt/\", \"tools/\"]",
          "1551:     Run PyLint against Salt and it's test suite.",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1590: @nox.session(python=False, name=\"lint-salt-pre-commit\")",
          "1591: def lint_salt_pre_commit(session):",
          "1592:     \"\"\"",
          "1594:     \"\"\"",
          "1595:     flags = [\"--disable=I\"]",
          "1596:     if session.posargs:",
          "1597:         paths = session.posargs",
          "1598:     else:",
          "1600:     _lint_pre_commit(session, \".pylintrc\", flags, paths)",
          "1603: @nox.session(python=False, name=\"lint-tests-pre-commit\")",
          "1604: def lint_tests_pre_commit(session):",
          "1605:     \"\"\"",
          "1607:     \"\"\"",
          "1608:     flags = [\"--disable=I\"]",
          "1609:     if session.posargs:",
          "",
          "[Removed Lines]",
          "1593:     Run PyLint against Salt. Set PYLINT_REPORT to a path to capture output.",
          "1599:         paths = [\"setup.py\", \"noxfile.py\", \"salt/\"]",
          "1606:     Run PyLint against Salt and it's test suite. Set PYLINT_REPORT to a path to capture output.",
          "",
          "[Added Lines]",
          "1564:     Run PyLint against Salt.",
          "1570:         paths = [\"setup.py\", \"noxfile.py\", \"salt/\", \"tools/\"]",
          "1577:     Run PyLint against Salt and it's test suite.",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1960:             + cmd_args[:]",
          "1961:             + [",
          "1962:                 \"--no-install\",",
          "1965:             ]",
          "1966:             + session.posargs",
          "1967:         )",
          "",
          "[Removed Lines]",
          "1963:                 f\"--junitxml=artifacts/xml-unittests-output/test-results-install.xml\",",
          "1964:                 f\"--log-file=artifacts/logs/runtests-install.log\",",
          "",
          "[Added Lines]",
          "1934:                 \"--junitxml=artifacts/xml-unittests-output/test-results-install.xml\",",
          "1935:                 \"--log-file=artifacts/logs/runtests-install.log\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1978:                 + cmd_args[:]",
          "1979:                 + [",
          "1980:                     \"--no-install\",",
          "1983:                     \"--lf\",",
          "1984:                 ]",
          "1985:                 + session.posargs",
          "",
          "[Removed Lines]",
          "1981:                     f\"--junitxml=artifacts/xml-unittests-output/test-results-install-rerun.xml\",",
          "1982:                     f\"--log-file=artifacts/logs/runtests-install-rerun.log\",",
          "",
          "[Added Lines]",
          "1952:                     \"--junitxml=artifacts/xml-unittests-output/test-results-install-rerun.xml\",",
          "1953:                     \"--log-file=artifacts/logs/runtests-install-rerun.log\",",
          "",
          "---------------"
        ],
        "requirements/static/ci/lint.in||requirements/static/ci/lint.in": [
          "File: requirements/static/ci/lint.in -> requirements/static/ci/lint.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: --constraint=./py{py_version}/{platform}.txt",
          "4: docker",
          "7: toml",
          "",
          "[Removed Lines]",
          "5: pylint==2.4.4",
          "6: SaltPyLint>=2023.3.8",
          "",
          "[Added Lines]",
          "5: pylint~=3.1.0",
          "6: SaltPyLint>=2024.2.2",
          "",
          "---------------"
        ],
        "salt/_logging/impl.py||salt/_logging/impl.py": [
          "File: salt/_logging/impl.py -> salt/_logging/impl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:             logging.getLogger(__name__)",
          "171:         \"\"\"",
          "174:         try:",
          "175:             max_logger_length = len(",
          "",
          "[Removed Lines]",
          "172:         instance = super().__new__(cls)",
          "",
          "[Added Lines]",
          "172:         instance = super().__new__(cls)  # pylint: disable=no-value-for-parameter",
          "",
          "---------------"
        ],
        "salt/auth/pki.py||salt/auth/pki.py": [
          "File: salt/auth/pki.py -> salt/auth/pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:         if cert.verify(cacert.get_pubkey()):",
          "85:             log.info(\"Successfully authenticated certificate: %s\", pem)",
          "86:             return True",
          "92:     cert = c.load_certificate(c.FILETYPE_PEM, pem)",
          "94:     with salt.utils.files.fopen(cacert_file) as f:",
          "",
          "[Removed Lines]",
          "87:         else:",
          "88:             log.info(\"Failed to authenticate certificate: %s\", pem)",
          "89:             return False",
          "91:     c = OpenSSL.crypto",
          "",
          "[Added Lines]",
          "87:         log.info(\"Failed to authenticate certificate: %s\", pem)",
          "88:         return False",
          "90:     c = OpenSSL.crypto  # pylint: disable=used-before-assignment",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "101:     cert_asn1 = c.dump_certificate(c.FILETYPE_ASN1, cert)",
          "103:     # Decode the certificate",
          "105:     der.decode(cert_asn1)",
          "107:     # The certificate has three parts:",
          "",
          "[Removed Lines]",
          "104:     der = asn1.DerSequence()",
          "",
          "[Added Lines]",
          "103:     der = asn1.DerSequence()  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/channel/client.py||salt/channel/client.py": [
          "File: salt/channel/client.py -> salt/channel/client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "225:         if HAS_M2:",
          "226:             aes = key.private_decrypt(ret[\"key\"], RSA.pkcs1_oaep_padding)",
          "227:         else:",
          "229:             aes = cipher.decrypt(ret[\"key\"])",
          "231:         # Decrypt using the public key.",
          "",
          "[Removed Lines]",
          "228:             cipher = PKCS1_OAEP.new(key)",
          "",
          "[Added Lines]",
          "228:             cipher = PKCS1_OAEP.new(key)  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/channel/server.py||salt/channel/server.py": [
          "File: salt/channel/server.py -> salt/channel/server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:         if HAS_M2:",
          "207:             pret[\"key\"] = pub.public_encrypt(key, RSA.pkcs1_oaep_padding)",
          "208:         else:",
          "210:             pret[\"key\"] = cipher.encrypt(key)",
          "211:         if ret is False:",
          "212:             ret = {}",
          "",
          "[Removed Lines]",
          "209:             cipher = PKCS1_OAEP.new(pub)",
          "",
          "[Added Lines]",
          "209:             cipher = PKCS1_OAEP.new(pub)  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/cli/batch.py||salt/cli/batch.py": [
          "File: salt/cli/batch.py -> salt/cli/batch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:         \"\"\"",
          "91:         Return the active number of minions to maintain",
          "92:         \"\"\"",
          "94:         try:",
          "95:             if isinstance(self.opts[\"batch\"], str) and \"%\" in self.opts[\"batch\"]:",
          "96:                 res = partition(float(self.opts[\"batch\"].strip(\"%\")))",
          "",
          "[Removed Lines]",
          "93:         partition = lambda x: float(x) / 100.0 * len(self.minions)",
          "",
          "[Added Lines]",
          "94:         def partition(x):",
          "95:             return float(x) / 100.0 * len(self.minions)",
          "",
          "---------------"
        ],
        "salt/cli/cp.py||salt/cli/cp.py": [
          "File: salt/cli/cp.py -> salt/cli/cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         except OSError as exc:",
          "69:             if exc.errno == errno.ENOENT:",
          "70:                 # Path does not exist",
          "72:                 sys.exit(42)",
          "73:             elif exc.errno in (errno.EINVAL, errno.ENOTDIR):",
          "74:                 # Path is a file (EINVAL on Windows, ENOTDIR otherwise)",
          "",
          "[Removed Lines]",
          "71:                 sys.stderr.write(\"{} does not exist\\n\".format(path))",
          "",
          "[Added Lines]",
          "71:                 sys.stderr.write(f\"{path} does not exist\\n\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:         Take a path and return the contents of the file as a string",
          "98:         \"\"\"",
          "99:         if not os.path.isfile(fn_):",
          "101:             sys.stderr.write(err + \"\\n\")",
          "102:             sys.exit(42)",
          "103:         with salt.utils.files.fopen(fn_, \"r\") as fp_:",
          "",
          "[Removed Lines]",
          "100:             err = \"The referenced file, {} is not available.\".format(fn_)",
          "",
          "[Added Lines]",
          "100:             err = f\"The referenced file, {fn_} is not available.\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:                     log.debug(",
          "212:                         \"Copying %s to %starget '%s' as %s%s\",",
          "213:                         fn_,",
          "217:                         tgt,",
          "218:                         remote_path,",
          "220:                     )",
          "221:                     args = [",
          "222:                         tgt,",
          "",
          "[Removed Lines]",
          "214:                         \"{} \".format(selected_target_option)",
          "215:                         if selected_target_option",
          "216:                         else \"\",",
          "219:                         \" (chunk #{})\".format(index) if append else \"\",",
          "",
          "[Added Lines]",
          "214:                         f\"{selected_target_option} \" if selected_target_option else \"\",",
          "217:                         f\" (chunk #{index})\" if append else \"\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "261:                 log.debug(",
          "262:                     \"Creating empty dir %s on %starget '%s'\",",
          "263:                     dirname,",
          "269:                     tgt,",
          "270:                 )",
          "271:                 args = [tgt, \"cp.recv_chunked\", [remote_path, None], timeout]",
          "",
          "[Removed Lines]",
          "264:                     \"{} \".format(",
          "265:                         selected_target_option",
          "266:                     )  # pylint: disable=str-format-in-logging",
          "267:                     if selected_target_option",
          "268:                     else \"\",",
          "",
          "[Added Lines]",
          "262:                     f\"{selected_target_option} \" if selected_target_option else \"\",",
          "",
          "---------------"
        ],
        "salt/client/__init__.py||salt/client/__init__.py": [
          "File: salt/client/__init__.py -> salt/client/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1296:                 except KeyError as exc:",
          "1297:                     # This is a safe pass. We're just using the try/except to",
          "1298:                     # avoid having to deep-check for keys.",
          "1300:                     if missing_key == \"retcode\":",
          "1301:                         log.debug(\"retcode missing from client return\")",
          "1302:                     else:",
          "",
          "[Removed Lines]",
          "1299:                     missing_key = exc.__str__().strip(\"'\\\"\")",
          "",
          "[Added Lines]",
          "1298:                     missing_key = str(exc).strip(\"'\\\"\")",
          "",
          "---------------"
        ],
        "salt/client/ssh/__init__.py||salt/client/ssh/__init__.py": [
          "File: salt/client/ssh/__init__.py -> salt/client/ssh/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:         try:",
          "560:             retcode = int(retcode)",
          "561:         except (TypeError, ValueError):",
          "563:             retcode = 1",
          "564:         # This job is done, yield",
          "565:         try:",
          "",
          "[Removed Lines]",
          "562:             log.warning(f\"Got an invalid retcode for host '{host}': '{retcode}'\")",
          "",
          "[Added Lines]",
          "562:             log.warning(\"Got an invalid retcode for host '%s': '%s'\", host, retcode)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "573:                         retcode = int(remote_retcode)",
          "574:                     except (TypeError, ValueError):",
          "575:                         log.warning(",
          "577:                         )",
          "578:                         retcode = max(retcode, 1)",
          "579:                 except (KeyError, TypeError):",
          "",
          "[Removed Lines]",
          "576:                             f\"Host '{host}' reported an invalid retcode: '{remote_retcode}'\"",
          "",
          "[Added Lines]",
          "576:                             \"Host '%s' reported an invalid retcode: '%s'\",",
          "577:                             host,",
          "578:                             remote_retcode,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "599:         \"\"\"",
          "600:         que = multiprocessing.Queue()",
          "601:         running = {}",
          "603:         returned = set()",
          "604:         rets = set()",
          "605:         init = False",
          "",
          "[Removed Lines]",
          "602:         target_iter = self.targets.__iter__()",
          "",
          "[Added Lines]",
          "604:         target_iter = iter(self.targets)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "829:         for ret, retcode in self.handle_ssh():",
          "830:             host = next(iter(ret))",
          "831:             if not isinstance(retcode, int):",
          "833:                 retcode = 1",
          "834:             final_exit = max(final_exit, retcode)",
          "",
          "[Removed Lines]",
          "832:                 log.warning(f\"Host '{host}' returned an invalid retcode: {retcode}\")",
          "",
          "[Added Lines]",
          "834:                 log.warning(\"Host '%s' returned an invalid retcode: %s\", host, retcode)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1784:         [\"ssh\", \"-V\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE",
          "1785:     ).communicate()",
          "1786:     try:",
          "1788:         parts = []",
          "1789:         for part in version_parts:",
          "1790:             try:",
          "",
          "[Removed Lines]",
          "1787:         version_parts = ret[1].split(b\",\")[0].split(b\"_\")[1]",
          "",
          "[Added Lines]",
          "1789:         version_parts = ret[1].split(b\",\", maxsplit=1)[0].split(b\"_\")[1]",
          "",
          "---------------"
        ],
        "salt/client/ssh/ssh_py_shim.py||salt/client/ssh/ssh_py_shim.py": [
          "File: salt/client/ssh/ssh_py_shim.py -> salt/client/ssh/ssh_py_shim.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: # The below line is where OPTIONS can be redefined with internal options",
          "42: # (rather than cli arguments) when the shim is bundled by",
          "43: # client.ssh.Single._cmd_str()",
          "45: #%%OPTS",
          "",
          "[Removed Lines]",
          "44: # pylint: disable=block-comment-should-start-with-cardinal-space",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     Find executable which matches supported python version in the thin",
          "231:     \"\"\"",
          "232:     pymap = {}",
          "234:         for line in _fp.readlines():",
          "235:             ns, v_maj, v_min = line.strip().split(\":\")",
          "236:             pymap[ns] = (int(v_maj), int(v_min))",
          "",
          "[Removed Lines]",
          "233:     with open(os.path.join(OPTIONS.saltdir, \"supported-versions\")) as _fp:",
          "",
          "[Added Lines]",
          "232:     with open(",
          "233:         os.path.join(OPTIONS.saltdir, \"supported-versions\"), encoding=\"utf-8\"",
          "234:     ) as _fp:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "314:                 )",
          "315:             )",
          "316:             need_deployment()",
          "318:             cur_code_cs = vpo.readline().strip()",
          "319:         if cur_code_cs != OPTIONS.code_checksum:",
          "320:             sys.stderr.write(",
          "",
          "[Removed Lines]",
          "317:         with open(code_checksum_path, \"r\") as vpo:",
          "",
          "[Added Lines]",
          "318:         with open(code_checksum_path, \"r\", encoding=\"utf-8\") as vpo:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "330:         sys.stderr.write('ERROR: thin is missing \"{0}\"\\n'.format(salt_call_path))",
          "331:         need_deployment()",
          "334:         config.write(OPTIONS.config + \"\\n\")",
          "335:     if OPTIONS.ext_mods:",
          "336:         ext_path = os.path.join(OPTIONS.saltdir, EXT_ARCHIVE)",
          "",
          "[Removed Lines]",
          "333:     with open(os.path.join(OPTIONS.saltdir, \"minion\"), \"w\") as config:",
          "",
          "[Added Lines]",
          "334:     with open(os.path.join(OPTIONS.saltdir, \"minion\"), \"w\", encoding=\"utf-8\") as config:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "340:             version_path = os.path.join(OPTIONS.saltdir, \"ext_version\")",
          "341:             if not os.path.exists(version_path) or not os.path.isfile(version_path):",
          "342:                 need_ext()",
          "344:                 cur_version = vpo.readline().strip()",
          "345:             if cur_version != OPTIONS.ext_mods:",
          "346:                 need_ext()",
          "",
          "[Removed Lines]",
          "343:             with open(version_path, \"r\") as vpo:",
          "",
          "[Added Lines]",
          "344:             with open(version_path, \"r\", encoding=\"utf-8\") as vpo:",
          "",
          "---------------"
        ],
        "salt/client/ssh/wrapper/grains.py||salt/client/ssh/wrapper/grains.py": [
          "File: salt/client/ssh/wrapper/grains.py -> salt/client/ssh/wrapper/grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     return \"{}{}\".format(instr[:index], \"X\" * (length - index))",
          "31: # A dictionary of grain -> function mappings for sanitizing grain output. This",
          "32: # is used when the 'sanitize' flag is given.",
          "33: _SANITIZERS = {",
          "34:     \"serialnumber\": _serial_sanitizer,",
          "41: }",
          "",
          "[Removed Lines]",
          "26: _FQDN_SANITIZER = lambda x: \"MINION.DOMAINNAME\"",
          "27: _HOSTNAME_SANITIZER = lambda x: \"MINION\"",
          "28: _DOMAINNAME_SANITIZER = lambda x: \"DOMAINNAME\"",
          "35:     \"domain\": _DOMAINNAME_SANITIZER,",
          "36:     \"fqdn\": _FQDN_SANITIZER,",
          "37:     \"id\": _FQDN_SANITIZER,",
          "38:     \"host\": _HOSTNAME_SANITIZER,",
          "39:     \"localhost\": _HOSTNAME_SANITIZER,",
          "40:     \"nodename\": _HOSTNAME_SANITIZER,",
          "",
          "[Added Lines]",
          "26: def _fqdn_sanitizer(x):",
          "27:     return \"MINION.DOMAINNAME\"",
          "30: def _hostname_sanitizer(x):",
          "31:     return \"MINION\"",
          "34: def _domainname_sanitizer(x):",
          "35:     return \"DOMAINNAME\"",
          "42:     \"domain\": _domainname_sanitizer,",
          "43:     \"fqdn\": _fqdn_sanitizer,",
          "44:     \"id\": _fqdn_sanitizer,",
          "45:     \"host\": _hostname_sanitizer,",
          "46:     \"localhost\": _hostname_sanitizer,",
          "47:     \"nodename\": _hostname_sanitizer,",
          "",
          "---------------"
        ],
        "salt/client/ssh/wrapper/pillar.py||salt/client/ssh/wrapper/pillar.py": [
          "File: salt/client/ssh/wrapper/pillar.py -> salt/client/ssh/wrapper/pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     from collections.abc import Mapping",
          "13: except ImportError:",
          "14:     # We still allow Py2 import because this could be executed in a machine with Py2.",
          "18: def get(key, default=\"\", merge=False, delimiter=DEFAULT_TARGET_DELIM):",
          "",
          "[Removed Lines]",
          "15:     from collections import Mapping  # pylint: disable=no-name-in-module",
          "",
          "[Added Lines]",
          "15:     from collections import (  # pylint: disable=no-name-in-module,deprecated-class",
          "16:         Mapping,",
          "17:     )",
          "",
          "---------------"
        ],
        "salt/cloud/cli.py||salt/cloud/cli.py": [
          "File: salt/cloud/cli.py -> salt/cloud/cli.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:             msg = \"The following virtual machines are set to be destroyed:\\n\"",
          "175:             names = set()",
          "176:             for alias, drivers in matching.items():",
          "178:                 for driver, vms in drivers.items():",
          "180:                     for name in vms:",
          "182:                         names.add(name)",
          "183:             try:",
          "184:                 if self.print_confirm(msg):",
          "",
          "[Removed Lines]",
          "177:                 msg += \"  {}:\\n\".format(alias)",
          "179:                     msg += \"    {}:\\n\".format(driver)",
          "181:                         msg += \"      {}\\n\".format(name)",
          "",
          "[Added Lines]",
          "177:                 msg += f\"  {alias}:\\n\"",
          "179:                     msg += f\"    {driver}:\\n\"",
          "181:                         msg += f\"      {name}\\n\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212:                     key, value = name.split(\"=\", 1)",
          "213:                     kwargs[key] = value",
          "214:                 else:",
          "216:                     machines.append(name)",
          "217:             names = machines",
          "",
          "[Removed Lines]",
          "215:                     msg += \"  {}\\n\".format(name)",
          "",
          "[Added Lines]",
          "215:                     msg += f\"  {name}\\n\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "256:         elif self.options.set_password:",
          "257:             username = self.credential_username",
          "259:             # TODO: check if provider is configured",
          "260:             # set the password",
          "261:             salt.utils.cloud.store_password_in_keyring(provider_name, username)",
          "",
          "[Removed Lines]",
          "258:             provider_name = \"salt.cloud.provider.{}\".format(self.credential_provider)",
          "",
          "[Added Lines]",
          "258:             provider_name = f\"salt.cloud.provider.{self.credential_provider}\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "275:                     # display profile errors",
          "276:                     msg += \"Found the following errors:\\n\"",
          "277:                     for profile_name, error in dmap[\"errors\"].items():",
          "279:                     sys.stderr.write(msg)",
          "280:                     sys.stderr.flush()",
          "",
          "[Removed Lines]",
          "278:                         msg += \"  {}: {}\\n\".format(profile_name, error)",
          "",
          "[Added Lines]",
          "278:                         msg += f\"  {profile_name}: {error}\\n\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "283:                 if \"existing\" in dmap:",
          "284:                     msg += \"The following virtual machines already exist:\\n\"",
          "285:                     for name in dmap[\"existing\"]:",
          "288:                 if dmap[\"create\"]:",
          "289:                     msg += \"The following virtual machines are set to be created:\\n\"",
          "290:                     for name in dmap[\"create\"]:",
          "293:                 if \"destroy\" in dmap:",
          "294:                     msg += \"The following virtual machines are set to be destroyed:\\n\"",
          "295:                     for name in dmap[\"destroy\"]:",
          "298:                 if not dmap[\"create\"] and not dmap.get(\"destroy\", None):",
          "299:                     if not dmap.get(\"existing\", None):",
          "",
          "[Removed Lines]",
          "286:                         msg += \"  {}\\n\".format(name)",
          "291:                         msg += \"  {}\\n\".format(name)",
          "296:                         msg += \"  {}\\n\".format(name)",
          "",
          "[Added Lines]",
          "286:                         msg += f\"  {name}\\n\"",
          "291:                         msg += f\"  {name}\\n\"",
          "296:                         msg += f\"  {name}\\n\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "382:                 # This is a salt cloud system exit",
          "383:                 if exc.exit_code > 0:",
          "384:                     # the exit code is bigger than 0, it's an error",
          "386:                 self.exit(exc.exit_code, msg.format(exc).rstrip() + \"\\n\")",
          "387:             # It's not a system exit but it's an error we can",
          "388:             # handle",
          "389:             self.error(msg.format(exc))",
          "390:         # This is a generic exception, log it, include traceback if",
          "391:         # debug logging is enabled and exit.",
          "393:         log.error(",
          "394:             msg.format(exc),",
          "395:             # Show the traceback if the debug logging level is",
          "396:             # enabled",
          "397:             exc_info_on_loglevel=logging.DEBUG,",
          "398:         )",
          "400:         self.exit(salt.defaults.exitcodes.EX_GENERIC)",
          "",
          "[Removed Lines]",
          "385:                     msg = \"Error: {}\".format(msg)",
          "392:         # pylint: disable=str-format-in-logging",
          "399:         # pylint: enable=str-format-in-logging",
          "",
          "[Added Lines]",
          "385:                     msg = f\"Error: {msg}\"",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/aliyun.py||salt/cloud/clouds/aliyun.py": [
          "File: salt/cloud/clouds/aliyun.py -> salt/cloud/clouds/aliyun.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "798:     signature = _compute_signature(parameters, access_key_secret)",
          "799:     parameters[\"Signature\"] = signature",
          "802:     if request.status_code != 200:",
          "803:         raise SaltCloudSystemExit(",
          "804:             \"An error occurred while querying aliyun ECS. HTTP Code: {}  \"",
          "",
          "[Removed Lines]",
          "801:     request = requests.get(path, params=parameters, verify=True)",
          "",
          "[Added Lines]",
          "801:     request = requests.get(path, params=parameters, verify=True, timeout=120)",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/clc.py||salt/cloud/clouds/clc.py": [
          "File: salt/cloud/clouds/clc.py -> salt/cloud/clouds/clc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:     counter = 0",
          "309:     req_id = str(req_id)",
          "310:     while counter < 10:",
          "312:         if queue[\"PercentComplete\"] == 100:",
          "313:             server_name = queue[\"Servers\"][0]",
          "314:             creds = get_creds()",
          "",
          "[Removed Lines]",
          "311:         queue = clc.v1.Blueprint.GetStatus(request_id=(req_id))",
          "",
          "[Added Lines]",
          "311:         queue = clc.v1.Blueprint.GetStatus(request_id=req_id)",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/digitalocean.py||salt/cloud/clouds/digitalocean.py": [
          "File: salt/cloud/clouds/digitalocean.py -> salt/cloud/clouds/digitalocean.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "474:                 dns_hostname,",
          "475:                 dns_domain,",
          "476:             )",
          "481:             log.debug(\"create_dns_record: %s\", __add_dns_addr__)",
          "482:         else:",
          "",
          "[Removed Lines]",
          "477:             __add_dns_addr__ = lambda t, d: post_dns_record(",
          "478:                 dns_domain=dns_domain, name=dns_hostname, record_type=t, record_data=d",
          "479:             )",
          "",
          "[Added Lines]",
          "478:             def __add_dns_addr__(t, d):",
          "479:                 return post_dns_record(",
          "480:                     dns_domain=dns_domain,",
          "481:                     name=dns_hostname,",
          "482:                     record_type=t,",
          "483:                     record_data=d,",
          "484:                 )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "639:             \"Authorization\": \"Bearer \" + personal_access_token,",
          "640:             \"Content-Type\": \"application/json\",",
          "641:         },",
          "642:     )",
          "643:     if request.status_code > 299:",
          "644:         raise SaltCloudSystemExit(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "647:         timeout=120,",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/ec2.py||salt/cloud/clouds/ec2.py": [
          "File: salt/cloud/clouds/ec2.py -> salt/cloud/clouds/ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:         log.trace(\"EC2 Request Parameters: %s\", params_with_headers)",
          "404:         try:",
          "405:             result = requests.get(",
          "407:             )",
          "408:             log.debug(",
          "409:                 \"EC2 Response Status Code: %s\",",
          "",
          "[Removed Lines]",
          "406:                 requesturl, headers=headers, params=params_with_headers",
          "",
          "[Added Lines]",
          "406:                 requesturl, headers=headers, params=params_with_headers, timeout=120",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1198:         \"Filter.0.Value.0\": image,",
          "1199:     }",
          "1200:     # Query AWS, sort by 'creationDate' and get the last imageId",
          "1204:     image_id = sorted(",
          "1205:         aws.query(",
          "1206:             params,",
          "",
          "[Removed Lines]",
          "1201:     _t = lambda x: datetime.datetime.strptime(",
          "1202:         x[\"creationDate\"], \"%Y-%m-%dT%H:%M:%S.%fZ\"",
          "1203:     )",
          "",
          "[Added Lines]",
          "1201:     def _t(x):",
          "1202:         return datetime.datetime.strptime(x[\"creationDate\"], \"%Y-%m-%dT%H:%M:%S.%fZ\")",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/joyent.py||salt/cloud/clouds/joyent.py": [
          "File: salt/cloud/clouds/joyent.py -> salt/cloud/clouds/joyent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1168:         digest = md.final()",
          "1169:         signed = rsa_key.sign(digest, algo=\"sha256\")",
          "1170:     else:",
          "1173:         hash_.update(timestamp.encode(__salt_system_encoding__))",
          "1174:         signed = rsa_.sign(hash_)",
          "1175:     signed = base64.b64encode(signed)",
          "",
          "[Removed Lines]",
          "1171:         rsa_ = PKCS1_v1_5.new(rsa_key)",
          "1172:         hash_ = SHA256.new()",
          "",
          "[Added Lines]",
          "1171:         rsa_ = PKCS1_v1_5.new(rsa_key)  # pylint: disable=used-before-assignment",
          "1172:         hash_ = SHA256.new()  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/linode.py||salt/cloud/clouds/linode.py": [
          "File: salt/cloud/clouds/linode.py -> salt/cloud/clouds/linode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "530:         attempt = 0",
          "531:         while True:",
          "532:             try:",
          "535:                 log.debug(\"Linode API response status code: %d\", result.status_code)",
          "536:                 log.trace(\"Linode API response body: %s\", result.text)",
          "",
          "[Removed Lines]",
          "533:                 result = requests.request(method, url, json=data, headers=headers)",
          "",
          "[Added Lines]",
          "533:                 result = requests.request(",
          "534:                     method, url, json=data, headers=headers, timeout=120",
          "535:                 )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1092:             \"entity.type\": entity,",
          "1093:         }",
          "1094:         last_event = None",
          "1097:         while True:",
          "1098:             if last_event is not None:",
          "",
          "[Removed Lines]",
          "1095:         condition = lambda event: self._check_event_status(event, status)",
          "",
          "[Added Lines]",
          "1098:         def condition(event):",
          "1099:             return self._check_event_status(event, status)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1966:             for key, val in ips.items():",
          "1967:                 if key == linode_id:",
          "1971:             if full:",
          "1972:                 this_node[\"extra\"] = node",
          "",
          "[Removed Lines]",
          "1968:                     this_node[\"private_ips\"] = val[\"private_ips\"]",
          "1969:                     this_node[\"public_ips\"] = val[\"public_ips\"]",
          "",
          "[Added Lines]",
          "1972:                     this_node[\"private_ips\"] = val[1]",
          "1973:                     this_node[\"public_ips\"] = val[0]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/proxmox.py||salt/cloud/clouds/proxmox.py": [
          "File: salt/cloud/clouds/proxmox.py -> salt/cloud/clouds/proxmox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:     connect_data = {\"username\": username, \"password\": passwd}",
          "138:     full_url = \"https://{}:{}/api2/json/access/ticket\".format(url, port)",
          "141:     response.raise_for_status()",
          "142:     returned_data = response.json()",
          "",
          "[Removed Lines]",
          "140:     response = requests.post(full_url, verify=verify_ssl, data=connect_data)",
          "",
          "[Added Lines]",
          "140:     response = requests.post(",
          "141:         full_url, verify=verify_ssl, data=connect_data, timeout=120",
          "142:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:             data=post_data,",
          "172:             cookies=ticket,",
          "173:             headers=httpheaders,",
          "174:         )",
          "175:     elif conn_type == \"put\":",
          "176:         httpheaders[\"CSRFPreventionToken\"] = csrf",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:             data=post_data,",
          "181:             cookies=ticket,",
          "182:             headers=httpheaders,",
          "183:         )",
          "184:     elif conn_type == \"delete\":",
          "185:         httpheaders[\"CSRFPreventionToken\"] = csrf",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "186:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "189:             data=post_data,",
          "190:             cookies=ticket,",
          "191:             headers=httpheaders,",
          "192:         )",
          "193:     elif conn_type == \"get\":",
          "196:     try:",
          "197:         response.raise_for_status()",
          "",
          "[Removed Lines]",
          "194:         response = requests.get(full_url, verify=verify_ssl, cookies=ticket)",
          "",
          "[Added Lines]",
          "196:             timeout=120,",
          "199:         response = requests.get(",
          "200:             full_url, verify=verify_ssl, cookies=ticket, timeout=120",
          "201:         )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "862:     \"\"\"",
          "863:     global api",
          "864:     full_url = \"https://{}:{}/pve-docs/api-viewer/apidoc.js\".format(url, port)",
          "867:     re_filter = re.compile(\" (?:pveapi|apiSchema) = (.*)^;\", re.DOTALL | re.MULTILINE)",
          "868:     api_json = re_filter.findall(returned_data.text)[0]",
          "",
          "[Removed Lines]",
          "865:     returned_data = requests.get(full_url, verify=verify_ssl)",
          "",
          "[Added Lines]",
          "872:     returned_data = requests.get(full_url, verify=verify_ssl, timeout=120)",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/qingcloud.py||salt/cloud/clouds/qingcloud.py": [
          "File: salt/cloud/clouds/qingcloud.py -> salt/cloud/clouds/qingcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:     # print('parameters:')",
          "180:     # pprint.pprint(real_parameters)",
          "184:     # print('url:')",
          "185:     # print(request.url)",
          "",
          "[Removed Lines]",
          "182:     request = requests.get(path, params=real_parameters, verify=verify_ssl)",
          "",
          "[Added Lines]",
          "182:     request = requests.get(path, params=real_parameters, verify=verify_ssl, timeout=120)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:     if not vm_size:",
          "440:         raise SaltCloudNotFound(\"No size specified for this instance.\")",
          "443:         return vm_size",
          "445:     raise SaltCloudNotFound(",
          "",
          "[Removed Lines]",
          "442:     if vm_size in sizes.keys():",
          "",
          "[Added Lines]",
          "442:     if vm_size in sizes:",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/vmware.py||salt/cloud/clouds/vmware.py": [
          "File: salt/cloud/clouds/vmware.py -> salt/cloud/clouds/vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1628:         snapshots[snapshot_path] = {",
          "1629:             \"name\": snapshot.name,",
          "1630:             \"description\": snapshot.description,",
          "1632:             \"state\": snapshot.state,",
          "1633:             \"path\": snapshot_path,",
          "1634:         }",
          "",
          "[Removed Lines]",
          "1631:             \"created\": str(snapshot.createTime).split(\".\")[0],",
          "",
          "[Added Lines]",
          "1631:             \"created\": str(snapshot.createTime).split(\".\", maxsplit=1)[0],",
          "",
          "---------------"
        ],
        "salt/config/schemas/common.py||salt/config/schemas/common.py": [
          "File: salt/config/schemas/common.py -> salt/config/schemas/common.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: class MasterDefaultInclude(DefaultIncludeConfig):",
          "49:     __target__ = \"master\"",
          "53: class IncludeConfig(Schema):",
          "",
          "[Removed Lines]",
          "50:     __confd_directory = \"master.d\"",
          "",
          "[Added Lines]",
          "50:     __confd_directory = \"master.d\"  # pylint: disable=unused-private-member",
          "",
          "---------------"
        ],
        "salt/engines/slack.py||salt/engines/slack.py": [
          "File: salt/engines/slack.py -> salt/engines/slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:         if cmd in runner_functions:",
          "891:             runner = salt.runner.RunnerClient(__opts__)",
          "892:             log.debug(\"Command %s will run via runner_functions\", cmd)",
          "895:             job_id_dict = runner.asynchronous(cmd, {\"arg\": args, \"kwarg\": kwargs})",
          "896:             job_id = job_id_dict[\"jid\"]",
          "",
          "[Removed Lines]",
          "893:             # pylint is tripping",
          "894:             # pylint: disable=missing-whitespace-after-comma",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/slack_bolt_engine.py||salt/engines/slack_bolt_engine.py": [
          "File: salt/engines/slack_bolt_engine.py -> salt/engines/slack_bolt_engine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "995:         if cmd in runner_functions:",
          "996:             runner = salt.runner.RunnerClient(__opts__)",
          "997:             log.debug(\"Command %s will run via runner_functions\", cmd)",
          "1000:             job_id_dict = runner.asynchronous(cmd, {\"arg\": args, \"kwarg\": kwargs})",
          "1001:             job_id = job_id_dict[\"jid\"]",
          "",
          "[Removed Lines]",
          "998:             # pylint is tripping",
          "999:             # pylint: disable=missing-whitespace-after-comma",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/ext/backports_abc.py||salt/ext/backports_abc.py": [
          "File: salt/ext/backports_abc.py -> salt/ext/backports_abc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:                 return True",
          "88:             return NotImplemented",
          "91:     Generator.register(generator)",
          "92:     return Generator",
          "",
          "[Removed Lines]",
          "90:     generator = type((lambda: (yield))())",
          "",
          "[Added Lines]",
          "90:     generator = type((lambda: (yield))())  # pylint: disable=unnecessary-direct-lambda-call",
          "",
          "---------------"
        ],
        "salt/ext/ipaddress.py||salt/ext/ipaddress.py": [
          "File: salt/ext/ipaddress.py -> salt/ext/ipaddress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2162:         return x",
          "2164:     def __str__(self):",
          "2168:     def __eq__(self, other):",
          "2169:         address_equal = IPv6Address.__eq__(self, other)",
          "",
          "[Removed Lines]",
          "2165:         return '%s/%d' % (super().__str__(),",
          "2166:                           self._prefixlen)",
          "",
          "[Added Lines]",
          "2165:         return '%s/%d' % (super(), self._prefixlen)",
          "",
          "---------------"
        ],
        "salt/ext/tornado/platform/auto.pyi||salt/ext/tornado/platform/auto.pyi": [
          "File: salt/ext/tornado/platform/auto.pyi -> salt/ext/tornado/platform/auto.pyi",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # auto.py is full of patterns mypy doesn't like, so for type checking",
          "2: # purposes we replace it with interface.py.",
          "",
          "[Removed Lines]",
          "4: from .interface import *",
          "",
          "[Added Lines]",
          "4: from .interface import *  # pylint: disable=unused-wildcard-import,wildcard-import",
          "",
          "---------------"
        ],
        "salt/fileserver/s3fs.py||salt/fileserver/s3fs.py": [
          "File: salt/fileserver/s3fs.py -> salt/fileserver/s3fs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "726:                 if cached_md5 == file_md5:",
          "727:                     return",
          "728:                 else:",
          "730:             else:",
          "731:                 cached_file_stat = os.stat(cached_file_path)",
          "732:                 cached_file_size = cached_file_stat.st_size",
          "",
          "[Removed Lines]",
          "729:                     log.info(f\"found different hash for file {path}, updating...\")",
          "",
          "[Added Lines]",
          "729:                     log.info(\"found different hash for file %s, updating...\", path)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "762:                         https_enable=https_enable,",
          "763:                     )",
          "764:                     if ret is not None:",
          "765:                         for header_name, header_value in ret[\"headers\"].items():",
          "766:                             name = header_name.strip()",
          "767:                             value = header_value.strip()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "765:                         s3_file_mtime = s3_file_size = None",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "771:                                 )",
          "772:                             elif str(name).lower() == \"content-length\":",
          "773:                                 s3_file_size = int(value)",
          "777:                         ):",
          "778:                             log.info(",
          "779:                                 \"%s - %s : %s skipped download since cached file size \"",
          "",
          "[Removed Lines]",
          "774:                         if (",
          "775:                             cached_file_size == s3_file_size",
          "776:                             and cached_file_mtime > s3_file_mtime",
          "",
          "[Added Lines]",
          "775:                         if (s3_file_size and cached_file_size == s3_file_size) and (",
          "776:                             s3_file_mtime and cached_file_mtime > s3_file_mtime",
          "",
          "---------------"
        ],
        "salt/grains/core.py||salt/grains/core.py": [
          "File: salt/grains/core.py -> salt/grains/core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2910:         if not ret[\"ipv\" + ipv_num]:",
          "2911:             ret[key] = []",
          "2912:         else:",
          "2913:             try:",
          "2915:                 info = socket.getaddrinfo(_fqdn, None, socket_type)",
          "2916:                 ret[key] = list({item[4][0] for item in info})",
          "2917:             except (OSError, UnicodeError):",
          "",
          "[Removed Lines]",
          "2914:                 start_time = datetime.datetime.utcnow()",
          "",
          "[Added Lines]",
          "2913:             start_time = datetime.datetime.utcnow()",
          "",
          "---------------"
        ],
        "salt/loader/lazy.py||salt/loader/lazy.py": [
          "File: salt/loader/lazy.py -> salt/loader/lazy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: import traceback",
          "16: import types",
          "17: from collections.abc import MutableMapping",
          "20: import salt.config",
          "21: import salt.defaults.events",
          "",
          "[Removed Lines]",
          "18: from zipimport import zipimporter",
          "",
          "[Added Lines]",
          "18: from zipimport import zipimporter  # pylint: disable=no-name-in-module",
          "",
          "---------------"
        ],
        "salt/master.py||salt/master.py": [
          "File: salt/master.py -> salt/master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "769:                     mod = \".\".join(proc.split(\".\")[:-1])",
          "770:                     cls = proc.split(\".\")[-1]",
          "771:                     _tmp = __import__(mod, globals(), locals(), [cls], -1)",
          "773:                     name = \"ExtProcess({})\".format(cls.__qualname__)",
          "774:                     self.process_manager.add_process(cls, args=(self.opts,), name=name)",
          "775:                 except Exception:  # pylint: disable=broad-except",
          "",
          "[Removed Lines]",
          "772:                     cls = _tmp.__getattribute__(cls)",
          "",
          "[Added Lines]",
          "772:                     cls = _tmp.__getattribute__(  # pylint: disable=unnecessary-dunder-call",
          "773:                         cls",
          "774:                     )",
          "",
          "---------------"
        ],
        "salt/modules/aptpkg.py||salt/modules/aptpkg.py": [
          "File: salt/modules/aptpkg.py -> salt/modules/aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:                 opts = _get_opts(self.line)",
          "240:                 self.architectures.extend(opts[\"arch\"][\"value\"])",
          "241:                 self.signedby = opts[\"signedby\"][\"value\"]",
          "243:                     opt = opts[opt][\"full\"]",
          "244:                     if opt:",
          "245:                         try:",
          "",
          "[Removed Lines]",
          "242:                 for opt in opts.keys():",
          "",
          "[Added Lines]",
          "242:                 for opt in opts:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1610:     # rexp parses lines that look like the following:",
          "1611:     # Conf libxfont1 (1:1.4.5-1 Debian:testing [i386])",
          "1613:     keys = [\"name\", \"version\"]",
          "1616:     upgrades = rexp.findall(out)",
          "",
          "[Removed Lines]",
          "1612:     rexp = re.compile(\"(?m)^Conf \" \"([^ ]+) \" r\"\\(([^ ]+)\")  # Package name  # Version",
          "1614:     _get = lambda l, k: l[keys.index(k)]",
          "",
          "[Added Lines]",
          "1612:     rexp = re.compile(r\"(?m)^Conf ([^ ]+) \\(([^ ]+)\")  # Package name  # Version",
          "1615:     def _get(line, k):",
          "1616:         return line[keys.index(k)]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1686:         salt '*' pkg.version_cmp '0.2.4-0ubuntu1' '0.2.4.1-0ubuntu1'",
          "1687:     \"\"\"",
          "1689:     # both apt_pkg.version_compare and _cmd_quote need string arguments.",
          "1690:     pkg1 = normalize(pkg1)",
          "1691:     pkg2 = normalize(pkg2)",
          "",
          "[Removed Lines]",
          "1688:     normalize = lambda x: str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "[Added Lines]",
          "1691:     def normalize(x):",
          "1692:         return str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "---------------"
        ],
        "salt/modules/archive.py||salt/modules/archive.py": [
          "File: salt/modules/archive.py -> salt/modules/archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "380:             dirs, files, links = func(name, cached, *args)",
          "381:         except OSError as exc:",
          "382:             raise CommandExecutionError(",
          "384:             )",
          "385:         except CommandExecutionError as exc:",
          "386:             raise",
          "",
          "[Removed Lines]",
          "383:                 \"Failed to list contents of {}: {}\".format(name, exc.__str__())",
          "",
          "[Added Lines]",
          "383:                 \"Failed to list contents of {}: {}\".format(name, exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "395:                 log.debug(\"Cleaned cached archive %s\", cached)",
          "396:             except OSError as exc:",
          "397:                 if exc.errno != errno.ENOENT:",
          "402:         if strip_components:",
          "403:             for item in (dirs, files, links):",
          "",
          "[Removed Lines]",
          "398:                     log.warning(",
          "399:                         \"Failed to clean cached archive %s: %s\", cached, exc.__str__()",
          "400:                     )",
          "",
          "[Added Lines]",
          "398:                     log.warning(\"Failed to clean cached archive %s: %s\", cached, exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "796:         os.setegid(uinfo[\"gid\"])",
          "797:         os.seteuid(uinfo[\"uid\"])",
          "799:     try:",
          "801:         archived_files = []",
          "802:         with contextlib.closing(",
          "803:             zipfile.ZipFile(zip_file, \"w\", zipfile.ZIP_DEFLATED, zip64)",
          "",
          "[Removed Lines]",
          "800:         exc = None",
          "",
          "[Added Lines]",
          "797:     exc = None",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1203:             \"{} is not a ZIP file\".format(name), info=archive_info",
          "1204:         )",
          "1205:     except Exception as exc:  # pylint: disable=broad-except",
          "1207:     else:",
          "1208:         ret = False",
          "",
          "[Removed Lines]",
          "1206:         raise CommandExecutionError(exc.__str__(), info=archive_info)",
          "",
          "[Added Lines]",
          "1204:         raise CommandExecutionError(exc, info=archive_info)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1213:             log.debug(\"Cleaned cached archive %s\", cached)",
          "1214:         except OSError as exc:",
          "1215:             if exc.errno != errno.ENOENT:",
          "1219:     return ret",
          "",
          "[Removed Lines]",
          "1216:                 log.warning(",
          "1217:                     \"Failed to clean cached archive %s: %s\", cached, exc.__str__()",
          "1218:                 )",
          "",
          "[Added Lines]",
          "1214:                 log.warning(\"Failed to clean cached archive %s: %s\", cached, exc)",
          "",
          "---------------"
        ],
        "salt/modules/boto3_route53.py||salt/modules/boto3_route53.py": [
          "File: salt/modules/boto3_route53.py -> salt/modules/boto3_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "946:     if \"\\\\\" in x:",
          "947:         return x.decode(\"unicode_escape\")",
          "950:         return x.decode(\"idna\")",
          "952:     return x",
          "",
          "[Removed Lines]",
          "949:     if type(x) == bytes:",
          "",
          "[Added Lines]",
          "949:     if isinstance(x, bytes):",
          "",
          "---------------"
        ],
        "salt/modules/boto3_sns.py||salt/modules/boto3_sns.py": [
          "File: salt/modules/boto3_sns.py -> salt/modules/boto3_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:         salt myminion boto3_sns.topic_exists mytopic region=us-east-1",
          "138:     \"\"\"",
          "139:     topics = list_topics(region=region, key=key, keyid=keyid, profile=profile)",
          "143: def create_topic(Name, region=None, key=None, keyid=None, profile=None):",
          "",
          "[Removed Lines]",
          "140:     return name in list(topics.values() + topics.keys())",
          "",
          "[Added Lines]",
          "140:     return name in list(topics.values()) + list(topics)",
          "",
          "---------------"
        ],
        "salt/modules/btrfs.py||salt/modules/btrfs.py": [
          "File: salt/modules/btrfs.py -> salt/modules/btrfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:     \"\"\"",
          "224:     Parse usage/specific.",
          "225:     \"\"\"",
          "227:     raw = raw.split(\"\\n\")",
          "228:     section, size, used = raw[0].split(\" \")",
          "229:     section = section.replace(\",\", \"_\").replace(\":\", \"\").lower()",
          "",
          "[Removed Lines]",
          "226:     get_key = lambda val: dict([tuple(val.split(\":\"))])",
          "",
          "[Added Lines]",
          "227:     def get_key(val):",
          "228:         return dict([tuple(val.split(\":\"))])",
          "",
          "---------------"
        ],
        "salt/modules/consul.py||salt/modules/consul.py": [
          "File: salt/modules/consul.py -> salt/modules/consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:         data = None",
          "76:     else:",
          "77:         if data is not None:",
          "79:                 data = salt.utils.json.dumps(data)",
          "80:         else:",
          "81:             data = salt.utils.json.dumps({})",
          "",
          "[Removed Lines]",
          "78:             if type(data) != str:",
          "",
          "[Added Lines]",
          "78:             if not isinstance(data, str):",
          "",
          "---------------"
        ],
        "salt/modules/cp.py||salt/modules/cp.py": [
          "File: salt/modules/cp.py -> salt/modules/cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:                 if os.path.isfile(dest):",
          "116:                     return \"Path exists and is a file\"",
          "117:             else:",
          "119:         return True",
          "121:     chunk = base64.b64decode(chunk)",
          "",
          "[Removed Lines]",
          "118:                 return _error(exc.__str__())",
          "",
          "[Added Lines]",
          "118:                 return _error(str(exc))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:     except OSError as exc:",
          "127:         if exc.errno != errno.ENOENT:",
          "128:             # Parent dir does not exist, we need to create it",
          "130:         try:",
          "131:             os.makedirs(os.path.dirname(dest))",
          "132:         except OSError as makedirs_exc:",
          "133:             # Failed to make directory",
          "135:         fh_ = salt.utils.files.fopen(dest, open_mode)  # pylint: disable=W8470",
          "137:     try:",
          "",
          "[Removed Lines]",
          "129:             return _error(exc.__str__())",
          "134:             return _error(makedirs_exc.__str__())",
          "",
          "[Added Lines]",
          "129:             return _error(str(exc))",
          "134:             return _error(str(makedirs_exc))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139:         fh_.write(salt.utils.gzip_util.uncompress(chunk) if compressed else chunk)",
          "140:     except OSError as exc:",
          "141:         # Write failed",
          "143:     else:",
          "144:         # Write successful",
          "145:         if not append and mode is not None:",
          "",
          "[Removed Lines]",
          "142:         return _error(exc.__str__())",
          "",
          "[Added Lines]",
          "142:         return _error(str(exc))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "149:             try:",
          "150:                 os.chmod(dest, mode)",
          "151:             except OSError:",
          "153:         return True",
          "154:     finally:",
          "155:         try:",
          "",
          "[Removed Lines]",
          "152:                 return _error(exc.__str__())",
          "",
          "[Added Lines]",
          "152:                 return _error(str(exc))",
          "",
          "---------------"
        ],
        "salt/modules/cryptdev.py||salt/modules/cryptdev.py": [
          "File: salt/modules/cryptdev.py -> salt/modules/cryptdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:         criteria = entry.pick(match_on)",
          "265:     except KeyError:",
          "267:         invalid_keys = filter(filterFn, match_on)",
          "269:         msg = 'Unrecognized keys in match_on: \"{}\"'.format(invalid_keys)",
          "",
          "[Removed Lines]",
          "266:         filterFn = lambda key: key not in _crypttab_entry.crypttab_keys",
          "",
          "[Added Lines]",
          "267:         def filterFn(key):",
          "268:             return key not in _crypttab_entry.crypttab_keys",
          "",
          "---------------"
        ],
        "salt/modules/csf.py||salt/modules/csf.py": [
          "File: salt/modules/csf.py -> salt/modules/csf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     \"\"\"",
          "30:     _type = method.replace(\"temp\", \"\").upper()",
          "31:     cmd = (",
          "33:         \" END {{exit code}}'\".format(_type=_type, ip=ip)",
          "34:     )",
          "35:     exists = __salt__[\"cmd.run_all\"](cmd)",
          "",
          "[Removed Lines]",
          "32:         \"csf -t | awk -v code=1 -v type=_type -v ip=ip '$1==type && $2==ip {{code=0}}\"",
          "",
          "[Added Lines]",
          "32:         \"csf -t | awk -v code=1 -v type={_type} -v ip={ip} '$1==type && $2==ip {{code=0}}\"",
          "",
          "---------------"
        ],
        "salt/modules/datadog_api.py||salt/modules/datadog_api.py": [
          "File: salt/modules/datadog_api.py -> salt/modules/datadog_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:     elif scope:",
          "158:         params = {\"api_key\": api_key, \"application_key\": app_key, \"scope\": scope}",
          "159:         response = requests.post(",
          "161:         )",
          "162:         if response.status_code == 200:",
          "163:             ret[\"result\"] = True",
          "",
          "[Removed Lines]",
          "160:             \"https://app.datadoghq.com/api/v1/downtime/cancel/by_scope\", params=params",
          "",
          "[Added Lines]",
          "160:             \"https://app.datadoghq.com/api/v1/downtime/cancel/by_scope\",",
          "161:             params=params,",
          "162:             timeout=120,",
          "",
          "---------------"
        ],
        "salt/modules/dig.py||salt/modules/dig.py": [
          "File: salt/modules/dig.py -> salt/modules/dig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:     stdout = [x.split() for x in cmd[\"stdout\"].split(\"\\n\")]",
          "316:     if resolve:",
          "319:     return stdout",
          "",
          "[Removed Lines]",
          "317:         return [(lambda x: [x[0], A(x[1], nameserver)[0]])(x) for x in stdout]",
          "",
          "[Added Lines]",
          "317:         return [[x[0], A(x[1], nameserver)[0]] for x in stdout]",
          "",
          "---------------"
        ],
        "salt/modules/disk.py||salt/modules/disk.py": [
          "File: salt/modules/disk.py -> salt/modules/disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:             \"Z\": \"10E21\",",
          "50:             \"Y\": \"10E24\",",
          "51:         }",
          "53:             v = decimal.Decimal(text[:-1])",
          "54:             v = v * decimal.Decimal(postPrefixes[text[-1]])",
          "55:             return v",
          "",
          "[Removed Lines]",
          "52:         if text[-1] in postPrefixes.keys():",
          "",
          "[Added Lines]",
          "52:         if text[-1] in postPrefixes:",
          "",
          "---------------"
        ],
        "salt/modules/dockermod.py||salt/modules/dockermod.py": [
          "File: salt/modules/dockermod.py -> salt/modules/dockermod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "399:                     docker_machine_tls[\"ClientKeyPath\"],",
          "400:                 ),",
          "401:                 ca_cert=docker_machine_tls[\"CaCertPath\"],",
          "403:                 verify=True,",
          "404:             )",
          "405:         except Exception as exc:  # pylint: disable=broad-except",
          "",
          "[Removed Lines]",
          "402:                 assert_hostname=False,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "690:             raise",
          "691:     except docker.errors.DockerException as exc:",
          "692:         # More general docker exception (catches InvalidVersion, etc.)",
          "694:     except Exception as exc:  # pylint: disable=broad-except",
          "696:     else:",
          "697:         return ret",
          "",
          "[Removed Lines]",
          "693:         raise CommandExecutionError(exc.__str__())",
          "695:         err = exc.__str__()",
          "",
          "[Added Lines]",
          "692:         raise CommandExecutionError(str(exc))",
          "694:         err = str(exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1333:                 if bool(subval1) is bool(subval2) is False:",
          "1334:                     continue",
          "1335:                 elif subkey == \"Config\":",
          "1337:                     config1 = sorted(val1[\"Config\"], key=kvsort)",
          "1338:                     config2 = sorted(val2.get(\"Config\", []), key=kvsort)",
          "1339:                     if config1 != config2:",
          "",
          "[Removed Lines]",
          "1336:                     kvsort = lambda x: (list(x.keys()), list(x.values()))",
          "",
          "[Added Lines]",
          "1336:                     def kvsort(x):",
          "1337:                         return (list(x.keys()), list(x.values()))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3312:         except CommandExecutionError as exc:",
          "3313:             raise CommandExecutionError(",
          "3314:                 \"Failed to start container after creation\",",
          "3316:             )",
          "3317:         else:",
          "3318:             response[\"Started\"] = True",
          "",
          "[Removed Lines]",
          "3315:                 info={\"response\": response, \"error\": exc.__str__()},",
          "",
          "[Added Lines]",
          "3317:                 info={\"response\": response, \"error\": str(exc)},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3502:                             f\"Failed to auto_remove container: {rm_exc}\"",
          "3503:                         )",
          "3504:                 # Raise original exception with additional info",
          "3507:         # Start the container",
          "3508:         output = []",
          "",
          "[Removed Lines]",
          "3505:                 raise CommandExecutionError(exc.__str__(), info=exc_info)",
          "",
          "[Added Lines]",
          "3507:                 raise CommandExecutionError(str(exc), info=exc_info)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3554:             # it to other_errors as a fallback.",
          "3555:             exc_info.setdefault(\"other_errors\", []).append(exc.info)",
          "3556:         # Re-raise with all of the available additional info",
          "3559:     return ret",
          "",
          "[Removed Lines]",
          "3557:         raise CommandExecutionError(exc.__str__(), info=exc_info)",
          "",
          "[Added Lines]",
          "3559:         raise CommandExecutionError(str(exc), info=exc_info)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4286:         try:",
          "4287:             ret.setdefault(image, {})[\"Removed\"] = rmi(image, force=force)",
          "4288:         except Exception as exc:  # pylint: disable=broad-except",
          "4290:             log.error(err)",
          "4291:             ret.setdefault(image, {})[\"Comment\"] = err",
          "4292:             ret[image][\"Removed\"] = False",
          "",
          "[Removed Lines]",
          "4289:             err = exc.__str__()",
          "",
          "[Added Lines]",
          "4291:             err = str(exc)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4606:         except Exception as exc:  # pylint: disable=broad-except",
          "4607:             raise CommandExecutionError(",
          "4608:                 f\"Unable to interpret API event: '{event}'\",",
          "4610:             )",
          "4611:         try:",
          "4612:             event_type = next(iter(event))",
          "",
          "[Removed Lines]",
          "4609:                 info={\"Error\": exc.__str__()},",
          "",
          "[Added Lines]",
          "4611:                 info={\"Error\": str(exc)},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4700:         except Exception as exc:  # pylint: disable=broad-except",
          "4701:             raise CommandExecutionError(",
          "4702:                 f\"Unable to interpret API event: '{event}'\",",
          "4704:             )",
          "4705:         try:",
          "4706:             event_type = next(iter(event))",
          "",
          "[Removed Lines]",
          "4703:                 info={\"Error\": exc.__str__()},",
          "",
          "[Added Lines]",
          "4705:                 info={\"Error\": str(exc)},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5496:             disconnect_container_from_network(cname, network_id)",
          "5497:             ret.append(cname)",
          "5498:         except CommandExecutionError as exc:",
          "5500:             if \"404\" not in msg:",
          "5501:                 # If 404 was in the error, then the container no longer exists,",
          "5502:                 # so to avoid a race condition we won't consider 404 errors to",
          "",
          "[Removed Lines]",
          "5499:             msg = exc.__str__()",
          "",
          "[Added Lines]",
          "5501:             msg = str(exc)",
          "",
          "---------------"
        ],
        "salt/modules/ebuildpkg.py||salt/modules/ebuildpkg.py": [
          "File: salt/modules/ebuildpkg.py -> salt/modules/ebuildpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:     if slot_conflicts:",
          "149:         ret[\"slot conflicts\"] = slot_conflicts",
          "155:     unsatisfied = re.compile(r\"Error: The above package list contains\").findall(stderr)",
          "",
          "[Removed Lines]",
          "151:     blocked = re.compile(",
          "152:         r\"(?m)^\\[blocks .+\\] \" r\"([^ ]+/[^ ]+-[0-9]+[^ ]+)\" r\".*$\"",
          "153:     ).findall(stdout)",
          "",
          "[Added Lines]",
          "151:     blocked = re.compile(r\"(?m)^\\[blocks .+\\] ([^ ]+/[^ ]+-[0-9]+[^ ]+).*$\").findall(",
          "152:         stdout",
          "153:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:         r\".*$\"",
          "332:     )",
          "333:     keys = [\"name\", \"version\"]",
          "336:     upgrades = rexp.findall(out)",
          "",
          "[Removed Lines]",
          "334:     _get = lambda l, k: l[keys.index(k)]",
          "",
          "[Added Lines]",
          "335:     def _get(line, k):",
          "336:         return line[keys.index(k)]",
          "",
          "---------------"
        ],
        "salt/modules/file.py||salt/modules/file.py": [
          "File: salt/modules/file.py -> salt/modules/file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4027:         except OSError as exc:",
          "4028:             if exc.errno == errno.EINVAL:",
          "4029:                 raise CommandExecutionError(\"Not a symbolic link: {}\".format(path))",
          "4033: def readdir(path):",
          "",
          "[Removed Lines]",
          "4030:             raise CommandExecutionError(exc.__str__())",
          "",
          "[Added Lines]",
          "4030:             raise CommandExecutionError(str(exc))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5927:                 continue",
          "5928:             paths.append(cached_path)",
          "5929:         except MinionError as exc:",
          "5931:             continue",
          "5933:     if errors:",
          "",
          "[Removed Lines]",
          "5930:             errors.append(salt.utils.stringutils.to_unicode(exc.__str__()))",
          "",
          "[Added Lines]",
          "5930:             errors.append(salt.utils.stringutils.to_unicode(str(exc)))",
          "",
          "---------------"
        ],
        "salt/modules/freebsdjail.py||salt/modules/freebsdjail.py": [
          "File: salt/modules/freebsdjail.py -> salt/modules/freebsdjail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         salt '*' jail.start [<jail name>]",
          "40:     \"\"\"",
          "42:     return not __salt__[\"cmd.retcode\"](cmd)",
          "",
          "[Removed Lines]",
          "41:     cmd = \"service jail onestart {}\".format(jail)",
          "",
          "[Added Lines]",
          "41:     cmd = f\"service jail onestart {jail}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:         salt '*' jail.stop [<jail name>]",
          "54:     \"\"\"",
          "56:     return not __salt__[\"cmd.retcode\"](cmd)",
          "",
          "[Removed Lines]",
          "55:     cmd = \"service jail onestop {}\".format(jail)",
          "",
          "[Added Lines]",
          "55:     cmd = f\"service jail onestop {jail}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:         salt '*' jail.restart [<jail name>]",
          "68:     \"\"\"",
          "70:     return not __salt__[\"cmd.retcode\"](cmd)",
          "",
          "[Removed Lines]",
          "69:     cmd = \"service jail onerestart {}\".format(jail)",
          "",
          "[Added Lines]",
          "69:     cmd = f\"service jail onerestart {jail}\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126:     \"\"\"",
          "127:     ret = {}",
          "128:     if subprocess.call([\"jls\", \"-nq\", \"-j\", jail]) == 0:",
          "132:         jailopts = salt.utils.args.shlex_split(salt.utils.stringutils.to_unicode(jls))",
          "133:         for jailopt in jailopts:",
          "134:             if \"=\" not in jailopt:",
          "",
          "[Removed Lines]",
          "129:         jls = subprocess.check_output(",
          "130:             [\"jls\", \"-nq\", \"-j\", jail]",
          "131:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "129:         jls = subprocess.check_output([\"jls\", \"-nq\", \"-j\", jail])",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "145:                         line = salt.utils.stringutils.to_unicode(line)",
          "146:                         if not line.strip():",
          "147:                             continue",
          "149:                             continue",
          "150:                         key, value = line.split(\"=\")",
          "151:                         ret[key.split(\"_\", 2)[2]] = value.split('\"')[1]",
          "",
          "[Removed Lines]",
          "148:                         if not line.startswith(\"jail_{}_\".format(jail)):",
          "",
          "[Added Lines]",
          "146:                         if not line.startswith(f\"jail_{jail}_\"):",
          "",
          "---------------"
        ],
        "salt/modules/git.py||salt/modules/git.py": [
          "File: salt/modules/git.py -> salt/modules/git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1067:             url, https_user, https_pass, https_only=True",
          "1068:         )",
          "1069:     except ValueError as exc:",
          "1072:     command = [\"git\"] + _format_git_opts(git_opts)",
          "1073:     command.append(\"clone\")",
          "",
          "[Removed Lines]",
          "1070:         raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "1070:         raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3044:             remote, https_user, https_pass, https_only=True",
          "3045:         )",
          "3046:     except ValueError as exc:",
          "3048:     command = [\"git\"] + _format_git_opts(git_opts)",
          "3049:     command.append(\"ls-remote\")",
          "3050:     command.extend(_format_opts(opts))",
          "",
          "[Removed Lines]",
          "3047:         raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "3047:         raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4051:             )",
          "4052:         )",
          "4053:     except ValueError as exc:",
          "4055:     if filter_:",
          "4056:         command.append(filter_)",
          "4057:     output = _git_run(",
          "",
          "[Removed Lines]",
          "4054:         raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "4054:         raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4185:             url, https_user, https_pass, https_only=True",
          "4186:         )",
          "4187:     except ValueError as exc:",
          "4189:     command = [\"git\", \"remote\", \"add\", remote, url]",
          "4190:     _git_run(",
          "4191:         command,",
          "",
          "[Removed Lines]",
          "4188:         raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "4188:         raise SaltInvocationError(str(exc))",
          "",
          "---------------"
        ],
        "salt/modules/glassfish.py||salt/modules/glassfish.py": [
          "File: salt/modules/glassfish.py -> salt/modules/glassfish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:         auth=_get_auth(server[\"user\"], server[\"password\"]),",
          "127:         headers=_get_headers(),",
          "128:         verify=True,",
          "129:     )",
          "130:     return _api_response(response)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:         headers=_get_headers(),",
          "142:         data=salt.utils.json.dumps(data),",
          "143:         verify=True,",
          "144:     )",
          "145:     return _api_response(response)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "156:         headers=_get_headers(),",
          "157:         params=data,",
          "158:         verify=True,",
          "159:     )",
          "160:     return _api_response(response)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:         timeout=120,",
          "",
          "---------------"
        ],
        "salt/modules/grains.py||salt/modules/grains.py": [
          "File: salt/modules/grains.py -> salt/modules/grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: }",
          "42: # http://stackoverflow.com/a/12414913/127816",
          "45: _non_existent_key = \"NonExistentValueMagicNumberSpK3hnufdHfeBUXCfqVK\"",
          "",
          "[Removed Lines]",
          "43: _infinitedict = lambda: collections.defaultdict(_infinitedict)",
          "",
          "[Added Lines]",
          "43: def _infinitedict():",
          "44:     return collections.defaultdict(_infinitedict)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:     return \"{}{}\".format(instr[:index], \"X\" * (length - index))",
          "62: # A dictionary of grain -> function mappings for sanitizing grain output. This",
          "63: # is used when the 'sanitize' flag is given.",
          "64: _SANITIZERS = {",
          "65:     \"serialnumber\": _serial_sanitizer,",
          "72: }",
          "",
          "[Removed Lines]",
          "57: _FQDN_SANITIZER = lambda x: \"MINION.DOMAINNAME\"",
          "58: _HOSTNAME_SANITIZER = lambda x: \"MINION\"",
          "59: _DOMAINNAME_SANITIZER = lambda x: \"DOMAINNAME\"",
          "66:     \"domain\": _DOMAINNAME_SANITIZER,",
          "67:     \"fqdn\": _FQDN_SANITIZER,",
          "68:     \"id\": _FQDN_SANITIZER,",
          "69:     \"host\": _HOSTNAME_SANITIZER,",
          "70:     \"localhost\": _HOSTNAME_SANITIZER,",
          "71:     \"nodename\": _HOSTNAME_SANITIZER,",
          "",
          "[Added Lines]",
          "59: def _fqdn_sanitizer(x):",
          "60:     return \"MINION.DOMAINNAME\"",
          "63: def _hostname_sanitizer(x):",
          "64:     return \"MINION\"",
          "67: def _domainname_sanitizer(x):",
          "68:     return \"DOMAINNAME\"",
          "75:     \"domain\": _domainname_sanitizer,",
          "76:     \"fqdn\": _fqdn_sanitizer,",
          "77:     \"id\": _fqdn_sanitizer,",
          "78:     \"host\": _hostname_sanitizer,",
          "79:     \"localhost\": _hostname_sanitizer,",
          "80:     \"nodename\": _hostname_sanitizer,",
          "",
          "---------------"
        ],
        "salt/modules/heat.py||salt/modules/heat.py": [
          "File: salt/modules/heat.py -> salt/modules/heat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     \"\"\"",
          "242:     if action:",
          "243:         stop_status = (\"{}_FAILED\".format(action), \"{}_COMPLETE\".format(action))",
          "245:     else:",
          "247:     timeout_sec = timeout * 60",
          "248:     no_event_polls = 0",
          "249:     msg_template = \"\\n Stack %(name)s %(status)s \\n\"",
          "",
          "[Removed Lines]",
          "244:         stop_check = lambda a: a in stop_status",
          "246:         stop_check = lambda a: a.endswith(\"_COMPLETE\") or a.endswith(\"_FAILED\")",
          "",
          "[Added Lines]",
          "245:         def stop_check(a):",
          "246:             return a in stop_status",
          "250:         def stop_check(a):",
          "251:             return a.endswith(\"_COMPLETE\") or a.endswith(\"_FAILED\")",
          "",
          "---------------"
        ],
        "salt/modules/inspectlib/fsdb.py||salt/modules/inspectlifsdb.py": [
          "File: salt/modules/inspectlib/fsdb.py -> salt/modules/inspectlifsdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: \"\"\"",
          "17:     :codeauthor: Bo Maryniuk <bo@suse.de>",
          "18: \"\"\"",
          "21: import csv",
          "22: import datetime",
          "23: import gzip",
          "24: import os",
          "25: import re",
          "26: import shutil",
          "29: from salt.utils.odict import OrderedDict",
          "",
          "[Removed Lines]",
          "27: import sys",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:         :param obj:",
          "183:         :return:",
          "184:         \"\"\"",
          "186:         if not os.path.exists(os.path.join(self.db_path, obj._TABLE)):",
          "187:             with gzip.open(os.path.join(self.db_path, obj._TABLE), \"wt\") as table_file:",
          "188:                 csv.writer(table_file).writerow(",
          "189:                     [",
          "191:                         for elm in tuple(obj.__dict__.items())",
          "192:                     ]",
          "193:                 )",
          "",
          "[Removed Lines]",
          "185:         get_type = lambda item: str(type(item)).split(\"'\")[1]",
          "190:                         \"{col}:{type}\".format(col=elm[0], type=get_type(elm[1]))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "270:     def _validate_object(self, obj):",
          "271:         descr = self._tables.get(obj._TABLE)",
          "272:         if descr is None:",
          "274:         return obj._serialize(self._tables[obj._TABLE])",
          "276:     def __criteria(self, obj, matches=None, mt=None, lt=None, eq=None):",
          "",
          "[Removed Lines]",
          "273:             raise Exception(\"Table {} not found.\".format(obj._TABLE))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "333:         return objects",
          "335:     def _to_type(self, data, type):",
          "337:             data = int(data)",
          "338:         elif type == \"float\":",
          "339:             data = float(data)",
          "344:         else:",
          "345:             data = str(data)",
          "346:         return data",
          "",
          "[Removed Lines]",
          "336:         if type == \"int\":",
          "340:         elif type == \"long\":",
          "341:             # pylint: disable=undefined-variable,incompatible-py3-code",
          "342:             data = sys.version_info[0] == 2 and long(data) or int(data)",
          "343:             # pylint: enable=undefined-variable,incompatible-py3-code",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/inspectlib/query.py||salt/modules/inspectliquery.py": [
          "File: salt/modules/inspectlib/query.py -> salt/modules/inspectliquery.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:             raise InspectorQueryException(",
          "481:                 'Unknown \"{}\" value for parameter \"time\"'.format(timeformat)",
          "482:             )",
          "489:         size_fmt = kwargs.get(\"size\")",
          "490:         if size_fmt is not None and size_fmt.lower() not in [\"b\", \"kb\", \"mb\", \"gb\"]:",
          "",
          "[Removed Lines]",
          "483:         tfmt = (",
          "484:             lambda param: timeformat == \"tz\"",
          "485:             and time.strftime(\"%b %d %Y %H:%M:%S\", time.gmtime(param))",
          "486:             or int(param)",
          "487:         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "525:                 pld_files.append(pld_data.path)",
          "526:             else:",
          "527:                 pld_files[pld_data.path] = {",
          "529:                     \"gid\": self._id_resolv(",
          "531:                     ),",
          "532:                     \"size\": _size_format(pld_data.p_size, fmt=size_fmt),",
          "533:                     \"mode\": oct(pld_data.mode),",
          "",
          "[Removed Lines]",
          "528:                     \"uid\": self._id_resolv(pld_data.uid, named=(owners == \"id\")),",
          "530:                         pld_data.gid, named=(owners == \"id\"), uid=False",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/iptables.py||salt/modules/iptables.py": [
          "File: salt/modules/iptables.py -> salt/modules/iptables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:         - \"-A FORWARD\"",
          "26: \"\"\"",
          "28: import logging",
          "29: import os",
          "30: import re",
          "31: import string",
          "33: import uuid",
          "35: import salt.utils.args",
          "",
          "[Removed Lines]",
          "32: import sys",
          "",
          "[Added Lines]",
          "28: import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:         _has_option('--wait')",
          "74:         _has_option('--check', family='ipv6')",
          "75:     \"\"\"",
          "77:     if option in __salt__[\"cmd.run_stdout\"](cmd, output_loglevel=\"quiet\"):",
          "78:         return True",
          "79:     return False",
          "",
          "[Removed Lines]",
          "76:     cmd = \"{} --help\".format(_iptables_cmd(family))",
          "",
          "[Added Lines]",
          "76:     cmd = f\"{_iptables_cmd(family)} --help\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:         IPv6:",
          "193:         salt '*' iptables.version family=ipv6",
          "194:     \"\"\"",
          "196:     out = __salt__[\"cmd.run_stdout\"](cmd).split()",
          "197:     return out[1]",
          "",
          "[Removed Lines]",
          "195:     cmd = \"{} --version\".format(_iptables_cmd(family))",
          "",
          "[Added Lines]",
          "195:     cmd = f\"{_iptables_cmd(family)} --version\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "316:         if not isinstance(match_value, list):",
          "317:             match_value = match_value.split(\",\")",
          "318:         for match in match_value:",
          "320:             if \"name_\" in kwargs and match.strip() in (\"pknock\", \"quota2\", \"recent\"):",
          "321:                 rule.append(\"--name {}\".format(kwargs[\"name_\"]))",
          "322:                 del kwargs[\"name_\"]",
          "",
          "[Removed Lines]",
          "319:             rule.append(\"-m {}\".format(match))",
          "",
          "[Added Lines]",
          "319:             rule.append(f\"-m {match}\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "335:             if match_set.startswith(\"!\") or match_set.startswith(\"not\"):",
          "336:                 negative_match_set = \"! \"",
          "337:                 match_set = re.sub(bang_not_pat, \"\", match_set)",
          "339:         del kwargs[\"match-set\"]",
          "341:     if \"connstate\" in kwargs:",
          "",
          "[Removed Lines]",
          "338:             rule.append(\"-m set {}--match-set {}\".format(negative_match_set, match_set))",
          "",
          "[Added Lines]",
          "338:             rule.append(f\"-m set {negative_match_set}--match-set {match_set}\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "382:                 else:",
          "383:                     dports = mp_value",
          "386:             del kwargs[multiport_arg]",
          "388:     if \"comment\" in kwargs:",
          "",
          "[Removed Lines]",
          "385:             rule.append(\"--{} {}\".format(multiport_arg, dports))",
          "",
          "[Added Lines]",
          "385:             rule.append(f\"--{multiport_arg} {dports}\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "526:         if after_jump_argument in kwargs:",
          "527:             value = kwargs[after_jump_argument]",
          "528:             if value in (None, \"\"):  # options without arguments",
          "530:             elif any(ws_char in str(value) for ws_char in string.whitespace):",
          "532:             else:",
          "534:             del kwargs[after_jump_argument]",
          "536:     for key in kwargs:",
          "",
          "[Removed Lines]",
          "529:                 after_jump.append(\"--{}\".format(after_jump_argument))",
          "531:                 after_jump.append('--{} \"{}\"'.format(after_jump_argument, value))",
          "533:                 after_jump.append(\"--{} {}\".format(after_jump_argument, value))",
          "",
          "[Added Lines]",
          "529:                 after_jump.append(f\"--{after_jump_argument}\")",
          "531:                 after_jump.append(f'--{after_jump_argument} \"{value}\"')",
          "533:                 after_jump.append(f\"--{after_jump_argument} {value}\")",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "539:         # the value in the kwargs, thus we need to fetch it after that has run",
          "540:         value = kwargs[key]",
          "541:         flag = \"-\" if len(key) == 1 else \"--\"",
          "545:     rule += after_jump",
          "",
          "[Removed Lines]",
          "542:         value = \"\" if value in (None, \"\") else \" {}\".format(value)",
          "543:         rule.append(\"{}{}{}{}\".format(negation, flag, key, value))",
          "",
          "[Added Lines]",
          "542:         value = \"\" if value in (None, \"\") else f\" {value}\"",
          "543:         rule.append(f\"{negation}{flag}{key}{value}\")",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "704:     parent_dir = os.path.dirname(filename)",
          "705:     if not os.path.isdir(parent_dir):",
          "706:         os.makedirs(parent_dir)",
          "708:     ipt = __salt__[\"cmd.run_stdout\"](cmd)",
          "710:     # regex out the output if configured with filters",
          "",
          "[Removed Lines]",
          "707:     cmd = \"{}-save\".format(_iptables_cmd(family))",
          "",
          "[Added Lines]",
          "707:     cmd = f\"{_iptables_cmd(family)}-save\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "743:     ipt_cmd = _iptables_cmd(family)",
          "745:     if _has_option(\"--check\", family):",
          "747:         __salt__[\"cmd.run_stderr\"](cmd, output_loglevel=\"quiet\")",
          "748:         return not __context__[\"retcode\"]",
          "749:     else:",
          "750:         _chain_name = hex(uuid.getnode())",
          "752:         # Create temporary table",
          "760:         # Clean up temporary table",
          "764:         for i in out.splitlines():",
          "766:                 if i.replace(_chain_name, chain) in out.splitlines():",
          "767:                     return True",
          "",
          "[Removed Lines]",
          "746:         cmd = \"{} -t {} -C {} {}\".format(ipt_cmd, table, chain, rule)",
          "753:         __salt__[\"cmd.run\"](\"{} -t {} -N {}\".format(ipt_cmd, table, _chain_name))",
          "754:         __salt__[\"cmd.run\"](",
          "755:             \"{} -t {} -A {} {}\".format(ipt_cmd, table, _chain_name, rule)",
          "756:         )",
          "758:         out = __salt__[\"cmd.run_stdout\"](\"{}-save\".format(ipt_cmd))",
          "761:         __salt__[\"cmd.run\"](\"{} -t {} -F {}\".format(ipt_cmd, table, _chain_name))",
          "762:         __salt__[\"cmd.run\"](\"{} -t {} -X {}\".format(ipt_cmd, table, _chain_name))",
          "765:             if i.startswith(\"-A {}\".format(_chain_name)):",
          "",
          "[Added Lines]",
          "746:         cmd = f\"{ipt_cmd} -t {table} -C {chain} {rule}\"",
          "753:         __salt__[\"cmd.run\"](f\"{ipt_cmd} -t {table} -N {_chain_name}\")",
          "754:         __salt__[\"cmd.run\"](f\"{ipt_cmd} -t {table} -A {_chain_name} {rule}\")",
          "756:         out = __salt__[\"cmd.run_stdout\"](f\"{ipt_cmd}-save\")",
          "759:         __salt__[\"cmd.run\"](f\"{ipt_cmd} -t {table} -F {_chain_name}\")",
          "760:         __salt__[\"cmd.run\"](f\"{ipt_cmd} -t {table} -X {_chain_name}\")",
          "763:             if i.startswith(f\"-A {_chain_name}\"):",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "792:     if not chain:",
          "793:         return \"Error: Chain needs to be specified\"",
          "798:     if out != -1:",
          "799:         out = True",
          "",
          "[Removed Lines]",
          "795:     cmd = \"{}-save -t {}\".format(_iptables_cmd(family), table)",
          "796:     out = __salt__[\"cmd.run_stdout\"](cmd).find(\":{} \".format(chain))",
          "",
          "[Added Lines]",
          "793:     cmd = f\"{_iptables_cmd(family)}-save -t {table}\"",
          "794:     out = __salt__[\"cmd.run_stdout\"](cmd).find(f\":{chain} \")",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "823:         return \"Error: Chain needs to be specified\"",
          "825:     wait = \"--wait\" if _has_option(\"--wait\", family) else \"\"",
          "827:     out = __salt__[\"cmd.run_stderr\"](cmd)",
          "829:     if not out:",
          "",
          "[Removed Lines]",
          "826:     cmd = \"{} {} -t {} -N {}\".format(_iptables_cmd(family), wait, table, chain)",
          "",
          "[Added Lines]",
          "824:     cmd = f\"{_iptables_cmd(family)} {wait} -t {table} -N {chain}\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "851:         return \"Error: Chain needs to be specified\"",
          "853:     wait = \"--wait\" if _has_option(\"--wait\", family) else \"\"",
          "855:     out = __salt__[\"cmd.run_stderr\"](cmd)",
          "857:     if not out:",
          "",
          "[Removed Lines]",
          "854:     cmd = \"{} {} -t {} -X {}\".format(_iptables_cmd(family), wait, table, chain)",
          "",
          "[Added Lines]",
          "852:     cmd = f\"{_iptables_cmd(family)} {wait} -t {table} -X {chain}\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "889:     returnCheck = check(table, chain, rule, family)",
          "890:     if isinstance(returnCheck, bool) and returnCheck:",
          "891:         return False",
          "893:     out = __salt__[\"cmd.run_stderr\"](cmd)",
          "894:     return not out",
          "",
          "[Removed Lines]",
          "892:     cmd = \"{} {} -t {} -A {} {}\".format(_iptables_cmd(family), wait, table, chain, rule)",
          "",
          "[Added Lines]",
          "890:     cmd = f\"{_iptables_cmd(family)} {wait} -t {table} -A {chain} {rule}\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "977:         rule = position",
          "979:     wait = \"--wait\" if _has_option(\"--wait\", family) else \"\"",
          "981:     out = __salt__[\"cmd.run_stderr\"](cmd)",
          "982:     return out",
          "",
          "[Removed Lines]",
          "980:     cmd = \"{} {} -t {} -D {} {}\".format(_iptables_cmd(family), wait, table, chain, rule)",
          "",
          "[Added Lines]",
          "978:     cmd = f\"{_iptables_cmd(family)} {wait} -t {table} -D {chain} {rule}\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "998:     \"\"\"",
          "1000:     wait = \"--wait\" if _has_option(\"--wait\", family) else \"\"",
          "1002:     out = __salt__[\"cmd.run_stderr\"](cmd)",
          "1003:     return out",
          "",
          "[Removed Lines]",
          "1001:     cmd = \"{} {} -t {} -F {}\".format(_iptables_cmd(family), wait, table, chain)",
          "",
          "[Added Lines]",
          "999:     cmd = f\"{_iptables_cmd(family)} {wait} -t {table} -F {chain}\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1016:         with salt.utils.files.fopen(conf_file, \"r\") as ifile:",
          "1017:             rules = ifile.read()",
          "1018:     elif in_mem:",
          "1020:         rules = __salt__[\"cmd.run_stdout\"](cmd)",
          "1021:     else:",
          "1022:         raise SaltException(\"A file was not found to parse\")",
          "",
          "[Removed Lines]",
          "1019:         cmd = \"{}-save\".format(_iptables_cmd(family))",
          "",
          "[Added Lines]",
          "1017:         cmd = f\"{_iptables_cmd(family)}-save\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1057:                             and args[index + 1] != \"!\"",
          "1058:                             and not args[index + 1].startswith(\"-\")",
          "1059:                         ):",
          "1061:                 index += 1",
          "1062:             if args[-1].startswith(\"-\"):",
          "1063:                 args.append(\"\")",
          "",
          "[Removed Lines]",
          "1060:                             args[index] += \" {}\".format(args.pop(index + 1))",
          "",
          "[Added Lines]",
          "1058:                             args[index] += f\" {args.pop(index + 1)}\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1082:     iptables(8) and iptables-extensions(8) man pages.  They will not all be",
          "1083:     used by all parts of the module; use them intelligently and appropriately.",
          "1084:     \"\"\"",
          "1097:     # COMMANDS",
          "1098:     add_arg(\"-A\", \"--append\", dest=\"append\", action=\"append\")",
          "",
          "[Removed Lines]",
          "1085:     add_arg = None",
          "1086:     if sys.version.startswith(\"2.6\"):",
          "1087:         import optparse",
          "1089:         parser = optparse.OptionParser()",
          "1090:         add_arg = parser.add_option",
          "1091:     else:",
          "1092:         import argparse  # pylint: disable=minimum-python-version",
          "1094:         parser = argparse.ArgumentParser()",
          "1095:         add_arg = parser.add_argument",
          "",
          "[Added Lines]",
          "1083:     parser = argparse.ArgumentParser()",
          "1084:     add_arg = parser.add_argument",
          "",
          "---------------"
        ],
        "salt/modules/iwtools.py||salt/modules/iwtools.py": [
          "File: salt/modules/iwtools.py -> salt/modules/iwtools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:     Validate the specified interface",
          "113:     \"\"\"",
          "114:     ifaces = list_interfaces()",
          "116:         return True",
          "117:     return False",
          "",
          "[Removed Lines]",
          "115:     if iface in ifaces.keys():",
          "",
          "[Added Lines]",
          "115:     if iface in ifaces:",
          "",
          "---------------"
        ],
        "salt/modules/k8s.py||salt/modules/k8s.py": [
          "File: salt/modules/k8s.py -> salt/modules/k8s.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:     try:",
          "582:         source_url = urllib.parse.urlparse(source)",
          "583:     except TypeError:",
          "586:     protos = (\"salt\", \"http\", \"https\", \"ftp\", \"swift\", \"s3\", \"file\")",
          "",
          "[Removed Lines]",
          "584:         return \"\", {}, \"Invalid format for source parameter\"",
          "",
          "[Added Lines]",
          "584:         return \"\", {}",
          "",
          "---------------"
        ],
        "salt/modules/kubernetesmod.py||salt/modules/kubernetesmod.py": [
          "File: salt/modules/kubernetesmod.py -> salt/modules/kubernetesmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:         or kubernetes.client.configuration.password != password",
          "155:     ):",
          "156:         # Recreates API connection if settings are changed",
          "159:     kubernetes.client.configuration.host = host",
          "160:     kubernetes.client.configuration.user = username",
          "",
          "[Removed Lines]",
          "157:         kubernetes.client.configuration.__init__()",
          "",
          "[Added Lines]",
          "157:         kubernetes.client.configuration.__init__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------"
        ],
        "salt/modules/ldap3.py||salt/modules/ldap3.py": [
          "File: salt/modules/ldap3.py -> salt/modules/ldap3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: def __virtual__():",
          "34:     \"\"\"Only load this module if the Python ldap module is present\"\"\"",
          "38: class LDAPError(Exception):",
          "",
          "[Removed Lines]",
          "35:     return bool(len(available_backends))",
          "",
          "[Added Lines]",
          "35:     if available_backends:",
          "36:         return True",
          "37:     return False",
          "",
          "---------------"
        ],
        "salt/modules/mac_softwareupdate.py||salt/modules/mac_softwareupdate.py": [
          "File: salt/modules/mac_softwareupdate.py -> salt/modules/mac_softwareupdate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:     #     \"Safari6.1.2MountainLion-6.1.2\",",
          "177:     # or:",
          "178:     #     Safari6.1.2MountainLion-6.1.2",
          "181:     return rexp.findall(out)",
          "",
          "[Removed Lines]",
          "179:     rexp = re.compile('(?m)^    [\"]?' r'([^,|\\s].*[^\"|\\n|,])[,|\"]?')",
          "",
          "[Added Lines]",
          "179:     rexp = re.compile(r'(?m)^    [\"]?([^,|\\s].*[^\"|\\n|,])[,|\"]?')",
          "",
          "---------------"
        ],
        "salt/modules/mine.py||salt/modules/mine.py": [
          "File: salt/modules/mine.py -> salt/modules/mine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:     # Load from local minion's cache",
          "310:     if __opts__[\"file_client\"] == \"local\":",
          "311:         ret = {}",
          "323:         if not is_target:",
          "324:             return ret",
          "",
          "[Removed Lines]",
          "312:         is_target = {",
          "313:             \"glob\": __salt__[\"match.glob\"],",
          "314:             \"pcre\": __salt__[\"match.pcre\"],",
          "315:             \"list\": __salt__[\"match.list\"],",
          "316:             \"grain\": __salt__[\"match.grain\"],",
          "317:             \"grain_pcre\": __salt__[\"match.grain_pcre\"],",
          "318:             \"ipcidr\": __salt__[\"match.ipcidr\"],",
          "319:             \"compound\": __salt__[\"match.compound\"],",
          "320:             \"pillar\": __salt__[\"match.pillar\"],",
          "321:             \"pillar_pcre\": __salt__[\"match.pillar_pcre\"],",
          "322:         }[tgt_type](tgt)",
          "",
          "[Added Lines]",
          "313:         is_target = __salt__[f\"match.{tgt_type}\"](tgt)",
          "",
          "---------------"
        ],
        "salt/modules/mount.py||salt/modules/mount.py": [
          "File: salt/modules/mount.py -> salt/modules/mount.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:         criteria = entry.pick(match_on)",
          "868:     except KeyError:",
          "870:         invalid_keys = filter(filterFn, match_on)",
          "872:         msg = 'Unrecognized keys in match_on: \"{}\"'.format(invalid_keys)",
          "",
          "[Removed Lines]",
          "869:         filterFn = lambda key: key not in _fstab_entry.fstab_keys",
          "",
          "[Added Lines]",
          "870:         def filterFn(key):",
          "871:             return key not in _fstab_entry.fstab_keys",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "996:         criteria = entry.pick(match_on)",
          "998:     except KeyError:",
          "1000:         invalid_keys = filter(filterFn, match_on)",
          "1002:         msg = 'Unrecognized keys in match_on: \"{}\"'.format(invalid_keys)",
          "",
          "[Removed Lines]",
          "999:         filterFn = lambda key: key not in _vfstab_entry.vfstab_keys",
          "",
          "[Added Lines]",
          "1003:         def filterFn(key):",
          "1004:             return key not in _vfstab_entry.vfstab_keys",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1878:         criteria = entry_ip.pick(match_on)",
          "1880:     except KeyError:",
          "1882:         invalid_keys = filter(filterFn, match_on)",
          "1883:         raise CommandExecutionError(",
          "1884:             'Unrecognized keys in match_on: \"{}\"'.format(invalid_keys)",
          "",
          "[Removed Lines]",
          "1881:         filterFn = lambda key: key not in _FileSystemsEntry.compatibility_keys",
          "",
          "[Added Lines]",
          "1888:         def filterFn(key):",
          "1889:             return key not in _FileSystemsEntry.compatibility_keys",
          "",
          "---------------"
        ],
        "salt/modules/mysql.py||salt/modules/mysql.py": [
          "File: salt/modules/mysql.py -> salt/modules/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2394:         if dbc != \"*\":",
          "2395:             # _ and % are authorized on GRANT queries and should get escaped",
          "2396:             # on the db name, but only if not requesting a table level grant",
          "2398:         if table != \"*\":",
          "2399:             table = quote_identifier(table)",
          "2400:     # identifiers cannot be used as values, and same thing for grants",
          "",
          "[Removed Lines]",
          "2397:             dbc = quote_identifier(dbc, for_grants=(table == \"*\"))",
          "",
          "[Added Lines]",
          "2397:             dbc = quote_identifier(dbc, for_grants=table == \"*\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2663:     if dbc != \"*\":",
          "2664:         # _ and % are authorized on GRANT queries and should get escaped",
          "2665:         # on the db name, but only if not requesting a table level grant",
          "2667:     if dbc == \"*\":",
          "2668:         # add revoke for *.*",
          "2669:         # before the modification query send to mysql will looks like",
          "",
          "[Removed Lines]",
          "2666:         s_database = quote_identifier(dbc, for_grants=(table == \"*\"))",
          "",
          "[Added Lines]",
          "2666:         s_database = quote_identifier(dbc, for_grants=table == \"*\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2765:     rtn_results = []",
          "2767:     try:",
          "2768:         cursor = conn.cursor()",
          "2769:     except MySQLdb.MySQLError:",
          "2770:         log.error(\"%s: Can't get cursor for SQL->%s\", mod, sql_str)",
          "2772:         log.debug(\"%s-->\", mod)",
          "2773:         return rtn_results",
          "",
          "[Removed Lines]",
          "2771:         cursor.close()",
          "",
          "[Added Lines]",
          "2767:     cursor = None",
          "2772:         if cursor:",
          "2773:             cursor.close()",
          "",
          "---------------"
        ],
        "salt/modules/network.py||salt/modules/network.py": [
          "File: salt/modules/network.py -> salt/modules/network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2015:         salt '*' network.iphexval 10.0.0.1",
          "2016:     \"\"\"",
          "2017:     a = ip.split(\".\")",
          "2019:     return \"\".join(hexval)",
          "",
          "[Removed Lines]",
          "2018:     hexval = [\"%02X\" % int(x) for x in a]  # pylint: disable=E1321",
          "",
          "[Added Lines]",
          "2018:     hexval = [\"%02X\" % int(x) for x in a]",
          "",
          "---------------"
        ],
        "salt/modules/openscap.py||salt/modules/openscap.py": [
          "File: salt/modules/openscap.py -> salt/modules/openscap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Module for OpenSCAP Management",
          "4: \"\"\"",
          "7: import shlex",
          "8: import shutil",
          "9: import tempfile",
          "10: from subprocess import PIPE, Popen",
          "23: _XCCDF_MAP = {",
          "24:     \"eval\": {",
          "25:         \"parser_arguments\": [((\"--profile\",), {\"required\": True})],",
          "",
          "[Removed Lines]",
          "12: ArgumentParser = object",
          "14: try:",
          "15:     import argparse  # pylint: disable=minimum-python-version",
          "17:     ArgumentParser = argparse.ArgumentParser",
          "18:     HAS_ARGPARSE = True",
          "19: except ImportError:  # python 2.6",
          "20:     HAS_ARGPARSE = False",
          "",
          "[Added Lines]",
          "5: import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: }",
          "40:     def __init__(self, action=None, *args, **kwargs):",
          "41:         super().__init__(*args, prog=\"oscap\", **kwargs)",
          "42:         self.add_argument(\"action\", choices=[\"eval\"])",
          "44:         for params, kwparams in _XCCDF_MAP[\"eval\"][\"parser_arguments\"]:",
          "45:             self.add_argument(*params, **kwparams)",
          "",
          "[Removed Lines]",
          "35: def __virtual__():",
          "36:     return HAS_ARGPARSE, \"argparse module is required.\"",
          "39: class _ArgumentParser(ArgumentParser):",
          "43:         add_arg = None",
          "",
          "[Added Lines]",
          "23: class _ArgumentParser(argparse.ArgumentParser):",
          "",
          "---------------"
        ],
        "salt/modules/opkg.py||salt/modules/opkg.py": [
          "File: salt/modules/opkg.py -> salt/modules/opkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1223:         salt '*' pkg.version_cmp '0.2.4-0' '0.2.4.1-0'",
          "1224:     \"\"\"",
          "1226:     pkg1 = normalize(pkg1)",
          "1227:     pkg2 = normalize(pkg2)",
          "",
          "[Removed Lines]",
          "1225:     normalize = lambda x: str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "[Added Lines]",
          "1226:     def normalize(x):",
          "1227:         return str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "---------------"
        ],
        "salt/modules/opsgenie.py||salt/modules/opsgenie.py": [
          "File: salt/modules/opsgenie.py -> salt/modules/opsgenie.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:                 \"Content-Type\": \"application/json\",",
          "100:                 \"Authorization\": \"GenieKey \" + api_key,",
          "101:             },",
          "102:         )",
          "103:     else:",
          "104:         response = requests.post(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108:                 \"Content-Type\": \"application/json\",",
          "109:                 \"Authorization\": \"GenieKey \" + api_key,",
          "110:             },",
          "111:         )",
          "113:     return response.status_code, response.text",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:             timeout=120,",
          "",
          "---------------"
        ],
        "salt/modules/oracle.py||salt/modules/oracle.py": [
          "File: salt/modules/oracle.py -> salt/modules/oracle.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:         salt '*' oracle.version my_db",
          "181:     \"\"\"",
          "182:     pillar_dbs = __salt__[\"pillar.get\"](\"oracle:dbs\")",
          "186:     result = {}",
          "187:     if dbs:",
          "188:         log.debug(\"get db versions for: %s\", dbs)",
          "",
          "[Removed Lines]",
          "183:     get_version = lambda x: [",
          "184:         r[0] for r in run_query(x, \"select banner from v$version order by banner\")",
          "185:     ]",
          "",
          "[Added Lines]",
          "184:     def get_version(x):",
          "185:         return [",
          "186:             r[0] for r in run_query(x, \"select banner from v$version order by banner\")",
          "187:         ]",
          "",
          "---------------"
        ],
        "salt/modules/pagerduty_util.py||salt/modules/pagerduty_util.py": [
          "File: salt/modules/pagerduty_util.py -> salt/modules/pagerduty_util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:         params=params,",
          "175:         data=salt.utils.json.dumps(data),",
          "176:         verify=verify_ssl,",
          "177:     )",
          "179:     if result.text is None or result.text == \"\":",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "196:                 params=params,",
          "197:                 data=data,  # Already serialized above, don't do it again",
          "198:                 verify=verify_ssl,",
          "199:             ).json()",
          "200:             offset = next_page_results[\"offset\"]",
          "201:             limit = next_page_results[\"limit\"]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "200:                 timeout=120,",
          "",
          "---------------"
        ],
        "salt/modules/pkg_resource.py||salt/modules/pkg_resource.py": [
          "File: salt/modules/pkg_resource.py -> salt/modules/pkg_resource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     if normalize and \"pkg.normalize_name\" in __salt__:",
          "27:         _normalize_name = __salt__[\"pkg.normalize_name\"]",
          "28:     else:",
          "31:     repacked_pkgs = {",
          "32:         _normalize_name(str(x)): str(y) if y is not None else y",
          "",
          "[Removed Lines]",
          "29:         _normalize_name = lambda pkgname: pkgname",
          "",
          "[Added Lines]",
          "30:         def _normalize_name(pkgname):",
          "31:             return pkgname",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     if normalize and \"pkg.normalize_name\" in __salt__:",
          "72:         _normalize_name = __salt__[\"pkg.normalize_name\"]",
          "73:     else:",
          "76:     if isinstance(sources, str):",
          "77:         try:",
          "",
          "[Removed Lines]",
          "74:         _normalize_name = lambda pkgname: pkgname",
          "",
          "[Added Lines]",
          "77:         def _normalize_name(pkgname):",
          "78:             return pkgname",
          "",
          "---------------"
        ],
        "salt/modules/portage_config.py||salt/modules/portage_config.py": [
          "File: salt/modules/portage_config.py -> salt/modules/portage_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:             # parts.repo will be empty if there is no repo part",
          "89:             relative_path = parts.repo or \"gentoo\"",
          "90:         elif str(parts.cp).endswith(\"/*\"):",
          "92:         else:",
          "93:             relative_path = os.path.join(",
          "",
          "[Removed Lines]",
          "91:             relative_path = str(parts.cp).split(\"/\")[0] + \"_\"",
          "",
          "[Added Lines]",
          "91:             relative_path = str(parts.cp).split(\"/\", maxsplit=1)[0] + \"_\"",
          "",
          "---------------"
        ],
        "salt/modules/postgres.py||salt/modules/postgres.py": [
          "File: salt/modules/postgres.py -> salt/modules/postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:         postgres.bins_dir: '/usr/pgsql-9.5/bin/'",
          "36: \"\"\"",
          "42: import base64",
          "43: import datetime",
          "44: import hashlib",
          "",
          "[Removed Lines]",
          "38: # This pylint error is popping up where there are no colons?",
          "39: # pylint: disable=E8203",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1007:         return False",
          "1009:     # will return empty string if return_password = False",
          "1012:     query = \"\".join(",
          "1013:         [",
          "",
          "[Removed Lines]",
          "1010:     _x = lambda s: s if return_password else \"\"",
          "",
          "[Added Lines]",
          "1006:     def _x(s):",
          "1007:         return s if return_password else \"\"",
          "",
          "---------------"
        ],
        "salt/modules/quota.py||salt/modules/quota.py": [
          "File: salt/modules/quota.py -> salt/modules/quota.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:         \"file-hard-limit\": 0,",
          "106:     }",
          "109:     cmd = \"setquota\"",
          "110:     if \"user\" in kwargs:",
          "111:         cmd += \" -u {} \".format(kwargs[\"user\"])",
          "",
          "[Removed Lines]",
          "108:     current = None",
          "",
          "[Added Lines]",
          "108:     current = ret = None",
          "",
          "---------------"
        ],
        "salt/modules/rabbitmq.py||salt/modules/rabbitmq.py": [
          "File: salt/modules/rabbitmq.py -> salt/modules/rabbitmq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:     ret = {}",
          "167:     if values_mapper is None:",
          "170:     # remove first and last line: Listing ... - ...done",
          "171:     data_rows = _strip_listing_to_done(cmdoutput.splitlines())",
          "",
          "[Removed Lines]",
          "168:         values_mapper = lambda string: string.split(\"\\t\")",
          "",
          "[Added Lines]",
          "169:         def values_mapper(string):",
          "170:             return string.split(\"\\t\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "237:     )",
          "239:     # func to get tags from string such as \"[admin, monitoring]\"",
          "245:     return _output_to_dict(res, func)",
          "",
          "[Removed Lines]",
          "240:     func = (",
          "241:         lambda string: [x.strip() for x in string[1:-1].split(\",\")]",
          "242:         if \",\" in string",
          "243:         else [x for x in string[1:-1].split(\" \")]",
          "244:     )",
          "",
          "[Added Lines]",
          "242:     def func(string):",
          "243:         if \",\" in string:",
          "244:             return [x.strip() for x in string[1:-1].split(\",\")]",
          "245:         return [x for x in string[1:-1].split(\" \")]",
          "",
          "---------------"
        ],
        "salt/modules/rpm_lowpkg.py||salt/modules/rpm_lowpkg.py": [
          "File: salt/modules/rpm_lowpkg.py -> salt/modules/rpm_lowpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "711:         salt '*' pkg.version_cmp '0.2-001' '0.2.0.1-002'",
          "712:     \"\"\"",
          "714:     ver1 = normalize(ver1)",
          "715:     ver2 = normalize(ver2)",
          "",
          "[Removed Lines]",
          "713:     normalize = lambda x: str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "[Added Lines]",
          "714:     def normalize(x):",
          "715:         return str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "---------------"
        ],
        "salt/modules/saltcheck.py||salt/modules/saltcheck.py": [
          "File: salt/modules/saltcheck.py -> salt/modules/saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:         # Check for situations to disable parallization",
          "478:         if parallel:",
          "480:                 num_proc = int(num_proc)",
          "482:             if multiprocessing.cpu_count() < 2:",
          "",
          "[Removed Lines]",
          "479:             if type(num_proc) == float:",
          "",
          "[Added Lines]",
          "479:             if isinstance(num_proc, float):",
          "",
          "---------------"
        ],
        "salt/modules/selinux.py||salt/modules/selinux.py": [
          "File: salt/modules/selinux.py -> salt/modules/selinux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "375:     Checks if the given filetype is a valid SELinux filetype",
          "376:     specification. Throws an SaltInvocationError if it isn't.",
          "377:     \"\"\"",
          "379:         raise SaltInvocationError(\"Invalid filetype given: {}\".format(filetype))",
          "380:     return True",
          "",
          "[Removed Lines]",
          "378:     if filetype not in _SELINUX_FILETYPES.keys():",
          "",
          "[Added Lines]",
          "378:     if filetype not in _SELINUX_FILETYPES:",
          "",
          "---------------"
        ],
        "salt/modules/sensehat.py||salt/modules/sensehat.py": [
          "File: salt/modules/sensehat.py -> salt/modules/sensehat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:     \"\"\"",
          "40:     if has_sense_hat:",
          "41:         try:",
          "42:             _sensehat = SenseHat()",
          "43:         except OSError:",
          "44:             return (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:             global _sensehat",
          "",
          "---------------"
        ],
        "salt/modules/serverdensity_device.py||salt/modules/serverdensity_device.py": [
          "File: salt/modules/serverdensity_device.py -> salt/modules/serverdensity_device.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:         \"https://api.serverdensity.io/inventory/devices/\",",
          "90:         params={\"token\": get_sd_auth(\"api_token\")},",
          "91:         data=params,",
          "92:     )",
          "93:     log.debug(\"Server Density API Response: %s\", api_response)",
          "94:     log.debug(\"Server Density API Response content: %s\", api_response.content)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:     api_response = requests.delete(",
          "121:         \"https://api.serverdensity.io/inventory/devices/\" + device_id,",
          "122:         params={\"token\": get_sd_auth(\"api_token\")},",
          "123:     )",
          "124:     log.debug(\"Server Density API Response: %s\", api_response)",
          "125:     log.debug(\"Server Density API Response content: %s\", api_response.content)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "171:             \"token\": get_sd_auth(\"api_token\"),",
          "172:             \"filter\": salt.utils.json.dumps(params),",
          "173:         },",
          "174:     )",
          "175:     log.debug(\"Server Density API Response: %s\", api_response)",
          "176:     log.debug(\"Server Density API Response content: %s\", api_response.content)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "209:         \"https://api.serverdensity.io/inventory/devices/\" + device_id,",
          "210:         params={\"token\": get_sd_auth(\"api_token\")},",
          "211:         data=params,",
          "212:     )",
          "213:     log.debug(\"Server Density API Response: %s\", api_response)",
          "214:     log.debug(\"Server Density API Response content: %s\", api_response.content)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:         timeout=120,",
          "",
          "---------------"
        ],
        "salt/modules/smartos_imgadm.py||salt/modules/smartos_imgadm.py": [
          "File: salt/modules/smartos_imgadm.py -> salt/modules/smartos_imgadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     \"\"\"",
          "38:     Translate exit status of imgadm",
          "39:     \"\"\"",
          "49: def _parse_image_meta(image=None, detail=False):",
          "",
          "[Removed Lines]",
          "40:     ret = {",
          "41:         0: \"Successful completion.\",",
          "42:         1: \"An error occurred.\" if not stderr else stderr,",
          "43:         2: \"Usage error.\",",
          "44:         3: \"Image not installed.\",",
          "45:     }[retcode]",
          "46:     return ret",
          "",
          "[Added Lines]",
          "40:     if retcode == 0:",
          "41:         return \"Successful completion.\"",
          "42:     if retcode == 1:",
          "43:         if stderr:",
          "44:             return stderr",
          "45:         return \"An error occurred.\"",
          "46:     if retcode == 2:",
          "47:         return \"Usage error.\"",
          "48:     if retcode == 3:",
          "49:         return \"Image not installed.\"",
          "",
          "---------------"
        ],
        "salt/modules/smartos_vmadm.py||salt/modules/smartos_vmadm.py": [
          "File: salt/modules/smartos_vmadm.py -> salt/modules/smartos_vmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     \"\"\"",
          "44:     Translate exit status of vmadm",
          "45:     \"\"\"",
          "52: def _create_update_from_file(mode=\"create\", uuid=None, path=None):",
          "",
          "[Removed Lines]",
          "46:     ret = {0: \"Successful completion.\", 1: \"An error occurred.\", 2: \"Usage error.\"}[",
          "47:         retcode",
          "48:     ]",
          "49:     return ret",
          "",
          "[Added Lines]",
          "46:     if retcode == 0:",
          "47:         return \"Successful completion.\"",
          "48:     if retcode == 1:",
          "49:         return \"An error occurred.\"",
          "50:     if retcode == 2:",
          "51:         return \"Usage error.\"",
          "",
          "---------------"
        ],
        "salt/modules/solaris_shadow.py||salt/modules/solaris_shadow.py": [
          "File: salt/modules/solaris_shadow.py -> salt/modules/solaris_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     }",
          "116:     try:",
          "118:         ret.update({\"name\": name})",
          "119:     except KeyError:",
          "120:         return ret",
          "",
          "[Removed Lines]",
          "117:         data = pwd.getpwnam(name)",
          "",
          "[Added Lines]",
          "117:         data = pwd.getpwnam(name)  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/modules/splunk_search.py||salt/modules/splunk_search.py": [
          "File: salt/modules/splunk_search.py -> salt/modules/splunk_search.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     _req_url = \"{}/servicesNS/{}/search/saved/searches/{}/acl\".format(",
          "163:         url, config.get(\"username\"), urllib.parse.quote(name)",
          "164:     )",
          "166:     return _get_splunk_search_props(search)",
          "",
          "[Removed Lines]",
          "165:     requests.post(_req_url, auth=auth, verify=True, data=data)",
          "",
          "[Added Lines]",
          "165:     requests.post(_req_url, auth=auth, verify=True, data=data, timeout=120)",
          "",
          "---------------"
        ],
        "salt/modules/status.py||salt/modules/status.py": [
          "File: salt/modules/status.py -> salt/modules/status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:                     try:",
          "187:                         ret[item] = vals[item]",
          "188:                     except KeyError:",
          "190:                         ret[item] = \"UNKNOWN\"",
          "191:             except KeyError:",
          "194:     return ret",
          "",
          "[Removed Lines]",
          "189:                         log.warning(f\"val {item} not in return of {func}\")",
          "192:                 log.warning(f\"custom status {func} isn't loaded\")",
          "",
          "[Added Lines]",
          "189:                         log.warning(\"val %s not in return of %s\", item, func)",
          "192:                 log.warning(\"custom status %s isn't loaded\", func)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1361:         \"\"\"",
          "1362:         freebsd specific implementation of netdev",
          "1363:         \"\"\"",
          "1365:         ret = _dict_tree()",
          "1366:         netstat = __salt__[\"cmd.run\"](\"netstat -i -n -4 -b -d\").splitlines()",
          "1367:         netstat += __salt__[\"cmd.run\"](\"netstat -i -n -6 -b -d\").splitlines()[1:]",
          "",
          "[Removed Lines]",
          "1364:         _dict_tree = lambda: collections.defaultdict(_dict_tree)",
          "",
          "[Added Lines]",
          "1365:         def _dict_tree():",
          "1366:             return collections.defaultdict(_dict_tree)",
          "",
          "---------------"
        ],
        "salt/modules/statuspage.py||salt/modules/statuspage.py": [
          "File: salt/modules/statuspage.py -> salt/modules/statuspage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     \"\"\"",
          "111:     Make the HTTP request and return the body as python object.",
          "112:     \"\"\"",
          "114:     ret = _default_ret()",
          "115:     ok_status = METHOD_OK_STATUS.get(method, 200)",
          "116:     if req.status_code != ok_status:",
          "",
          "[Removed Lines]",
          "113:     req = requests.request(method, url, headers=headers, data=data)",
          "",
          "[Added Lines]",
          "113:     req = requests.request(method, url, headers=headers, data=data, timeout=120)",
          "",
          "---------------"
        ],
        "salt/modules/swarm.py||salt/modules/swarm.py": [
          "File: salt/modules/swarm.py -> salt/modules/swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:     try:",
          "375:         salt_return = {}",
          "376:         client = docker.APIClient(base_url=\"unix://var/run/docker.sock\")",
          "378:         getdata = salt.utils.json.dumps(service)",
          "379:         dump = salt.utils.json.loads(getdata)",
          "380:         for items in dump:",
          "",
          "[Removed Lines]",
          "377:         service = client.nodes(filters=({\"name\": server}))",
          "",
          "[Added Lines]",
          "377:         service = client.nodes(filters={\"name\": server})",
          "",
          "---------------"
        ],
        "salt/modules/sysrc.py||salt/modules/sysrc.py": [
          "File: salt/modules/sysrc.py -> salt/modules/sysrc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     # YES, NO, Yes, No, True, False, etc. to boolean types.  However, in this case,",
          "94:     # we will check to see if that happened and replace it with \"YES\" or \"NO\" because",
          "95:     # those items are accepted in sysrc.",
          "97:         if value:",
          "98:             value = \"YES\"",
          "99:         else:",
          "100:             value = \"NO\"",
          "102:     # This is here for the same reason, except for numbers",
          "104:         value = str(value)",
          "106:     cmd += \" \" + name + '=\"' + value + '\"'",
          "",
          "[Removed Lines]",
          "96:     if type(value) == bool:",
          "103:     if type(value) == int:",
          "",
          "[Added Lines]",
          "96:     if isinstance(value, bool):",
          "103:     if isinstance(value, int):",
          "",
          "---------------"
        ],
        "salt/modules/systemd_service.py||salt/modules/systemd_service.py": [
          "File: salt/modules/systemd_service.py -> salt/modules/systemd_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: # Define the module's virtual name",
          "56: __virtualname__ = \"service\"",
          "62: def __virtual__():",
          "63:     \"\"\"",
          "",
          "[Removed Lines]",
          "58: # Disable check for string substitution",
          "59: # pylint: disable=E1321",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/telegram.py||salt/modules/telegram.py": [
          "File: salt/modules/telegram.py -> salt/modules/telegram.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:         parameters[\"text\"] = message",
          "115:     try:",
          "117:         result = response.json()",
          "119:         log.debug(\"Raw response of the telegram request is %s\", response)",
          "",
          "[Removed Lines]",
          "116:         response = requests.post(url, data=parameters)",
          "",
          "[Added Lines]",
          "116:         response = requests.post(url, data=parameters, timeout=120)",
          "",
          "---------------"
        ],
        "salt/modules/telemetry.py||salt/modules/telemetry.py": [
          "File: salt/modules/telemetry.py -> salt/modules/telemetry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:             _get_telemetry_base(profile)",
          "102:             + \"/notification-channels?_type=EmailNotificationChannel\"",
          "103:         )",
          "106:         if response.status_code == 200:",
          "107:             cache_result = {}",
          "",
          "[Removed Lines]",
          "104:         response = requests.get(get_url, headers=auth)",
          "",
          "[Added Lines]",
          "104:         response = requests.get(get_url, headers=auth, timeout=120)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:             get_url = _get_telemetry_base(profile) + \"/alerts?deployment={}\".format(",
          "141:                 deployment_id",
          "142:             )",
          "144:         except requests.exceptions.RequestException as e:",
          "145:             log.error(str(e))",
          "146:             return False",
          "",
          "[Removed Lines]",
          "143:             response = requests.get(get_url, headers=auth)",
          "",
          "[Added Lines]",
          "143:             response = requests.get(get_url, headers=auth, timeout=120)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:             \"email\": notify_channel,",
          "198:         }",
          "199:         response = requests.post(",
          "201:         )",
          "202:         if response.status_code == 200:",
          "203:             log.info(",
          "",
          "[Removed Lines]",
          "200:             post_url, data=salt.utils.json.dumps(data), headers=auth",
          "",
          "[Added Lines]",
          "200:             post_url, data=salt.utils.json.dumps(data), headers=auth, timeout=120",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:             _get_telemetry_base(profile)",
          "237:             + \"/alerts?deployment={}\".format(deployment_id),",
          "238:             headers=auth,",
          "239:         )",
          "240:     except requests.exceptions.RequestException as e:",
          "241:         log.error(str(e))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "294:     try:",
          "295:         response = requests.post(",
          "297:         )",
          "298:     except requests.exceptions.RequestException as e:",
          "299:         # TODO: May be we should retry?",
          "",
          "[Removed Lines]",
          "296:             request_uri, data=salt.utils.json.dumps(post_body), headers=auth",
          "",
          "[Added Lines]",
          "297:             request_uri,",
          "298:             data=salt.utils.json.dumps(post_body),",
          "299:             headers=auth,",
          "300:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "365:     try:",
          "366:         response = requests.put(",
          "368:         )",
          "369:     except requests.exceptions.RequestException as e:",
          "370:         log.error(\"Update failed: %s\", e)",
          "",
          "[Removed Lines]",
          "367:             request_uri, data=salt.utils.json.dumps(post_body), headers=auth",
          "",
          "[Added Lines]",
          "371:             request_uri,",
          "372:             data=salt.utils.json.dumps(post_body),",
          "373:             headers=auth,",
          "374:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "429:         delete_url = _get_telemetry_base(profile) + \"/alerts/{}\".format(id)",
          "431:         try:",
          "433:             if metric_name:",
          "434:                 log.debug(",
          "435:                     \"updating cache and delete %s key from %s\",",
          "",
          "[Removed Lines]",
          "432:             response = requests.delete(delete_url, headers=auth)",
          "",
          "[Added Lines]",
          "439:             response = requests.delete(delete_url, headers=auth, timeout=120)",
          "",
          "---------------"
        ],
        "salt/modules/tomcat.py||salt/modules/tomcat.py": [
          "File: salt/modules/tomcat.py -> salt/modules/tomcat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "630:         salt '*' tomcat.passwd secret tomcat sha1",
          "631:         salt '*' tomcat.passwd secret tomcat sha1 'Protected Realm'",
          "632:     \"\"\"",
          "633:     # Shouldn't it be SHA265 instead of SHA1?",
          "636:         if realm:",
          "644:         else:",
          "645:             digest.update(passwd)",
          "",
          "[Removed Lines]",
          "634:     digest = hasattr(hashlib, alg) and getattr(hashlib, alg) or None",
          "635:     if digest:",
          "637:             digest.update(",
          "638:                 \"{}:{}:{}\".format(",
          "639:                     user,",
          "640:                     realm,",
          "641:                     passwd,",
          "642:                 )",
          "643:             )",
          "",
          "[Added Lines]",
          "633:     # pylint: disable=no-value-for-parameter",
          "634:     # we call the first parameter the same as the function!",
          "637:     digest = getattr(hashlib, alg, None)",
          "638:     if digest is not None:",
          "640:             digest.update(f\"{user}:{realm}:{passwd}\")",
          "",
          "---------------"
        ],
        "salt/modules/uptime.py||salt/modules/uptime.py": [
          "File: salt/modules/uptime.py -> salt/modules/uptime.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     application_url = _get_application_url()",
          "50:     log.debug(\"[uptime] trying PUT request\")",
          "51:     params.update(url=name)",
          "53:     if not req.ok:",
          "54:         raise CommandExecutionError(\"request to uptime failed : {}\".format(req.reason))",
          "55:     log.debug(\"[uptime] PUT request successful\")",
          "",
          "[Removed Lines]",
          "52:     req = requests.put(\"{}/api/checks\".format(application_url), data=params)",
          "",
          "[Added Lines]",
          "52:     req = requests.put(",
          "53:         \"{}/api/checks\".format(application_url), data=params, timeout=120",
          "54:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:         raise CommandExecutionError(msg)",
          "73:     application_url = _get_application_url()",
          "74:     log.debug(\"[uptime] trying DELETE request\")",
          "76:     url_id = [x[\"_id\"] for x in jcontent if x[\"url\"] == name][0]",
          "78:     if not req.ok:",
          "79:         raise CommandExecutionError(\"request to uptime failed : {}\".format(req.reason))",
          "80:     log.debug(\"[uptime] DELETE request successful\")",
          "",
          "[Removed Lines]",
          "75:     jcontent = requests.get(\"{}/api/checks\".format(application_url)).json()",
          "77:     req = requests.delete(\"{}/api/checks/{}\".format(application_url, url_id))",
          "",
          "[Added Lines]",
          "77:     jcontent = requests.get(\"{}/api/checks\".format(application_url), timeout=120).json()",
          "79:     req = requests.delete(",
          "80:         \"{}/api/checks/{}\".format(application_url, url_id), timeout=120",
          "81:     )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:     \"\"\"",
          "107:     application_url = _get_application_url()",
          "108:     log.debug(\"[uptime] get checks\")",
          "110:     return [x[\"url\"] for x in jcontent]",
          "",
          "[Removed Lines]",
          "109:     jcontent = requests.get(\"{}/api/checks\".format(application_url)).json()",
          "",
          "[Added Lines]",
          "113:     jcontent = requests.get(\"{}/api/checks\".format(application_url), timeout=120).json()",
          "",
          "---------------"
        ],
        "salt/modules/vbox_guest.py||salt/modules/vbox_guest.py": [
          "File: salt/modules/vbox_guest.py -> salt/modules/vbox_guest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: def _additions_install_program_path(mount_point):",
          "103: def _additions_install_opensuse(**kwargs):",
          "104:     kernel_type = re.sub(r\"^(\\d|\\.|-)*\", \"\", __grains__.get(\"kernelrelease\", \"\"))",
          "106:     return __states__[\"pkg.installed\"](None, pkgs=[\"make\", \"gcc\", kernel_devel])",
          "",
          "[Removed Lines]",
          "93:     return os.path.join(",
          "94:         mount_point,",
          "95:         {",
          "96:             \"Linux\": \"VBoxLinuxAdditions.run\",",
          "97:             \"Solaris\": \"VBoxSolarisAdditions.pkg\",",
          "98:             \"Windows\": \"VBoxWindowsAdditions.exe\",",
          "99:         }[__grains__.get(\"kernel\", \"\")],",
          "100:     )",
          "105:     kernel_devel = \"kernel-{}-devel\".format(kernel_type)",
          "",
          "[Added Lines]",
          "93:     kernel = __grains__.get(\"kernel\", \"\")",
          "94:     if kernel == \"Linux\":",
          "95:         exe = \"VBoxLinuxAdditions.run\"",
          "96:     elif kernel == \"Solaris\":",
          "97:         exe = \"VBoxSolarisAdditions.pkg\"",
          "98:     elif kernel == \"Windows\":",
          "99:         exe = \"VBoxWindowsAdditions.exe\"",
          "100:     return os.path.join(mount_point, exe)",
          "105:     kernel_devel = f\"kernel-{kernel_type}-devel\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:     except OSError:",
          "280:         return False",
          "281:     if d and len(os.listdir(d)) > 0:",
          "283:     return False",
          "",
          "[Removed Lines]",
          "282:         return re.sub(r\"^{}-\".format(_additions_dir_prefix), \"\", os.path.basename(d))",
          "",
          "[Added Lines]",
          "282:         return re.sub(rf\"^{_additions_dir_prefix}-\", \"\", os.path.basename(d))",
          "",
          "---------------"
        ],
        "salt/modules/virt.py||salt/modules/virt.py": [
          "File: salt/modules/virt.py -> salt/modules/virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     if vms:",
          "299:         for name in vms:",
          "300:             if name not in all_vms:",
          "304:             else:",
          "305:                 lookup_vms.append(name)",
          "306:     else:",
          "",
          "[Removed Lines]",
          "301:                 raise CommandExecutionError(",
          "302:                     'The VM \"{name}\" is not present'.format(name=name)",
          "303:                 )",
          "",
          "[Added Lines]",
          "301:                 raise CommandExecutionError(f'The VM \"{name}\" is not present')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:             disk_type = elem.get(\"type\")",
          "517:             def _get_disk_volume_data(pool_name, volume_name):",
          "519:                 pool = conn.storagePoolLookupByName(pool_name)",
          "520:                 extra_properties = {}",
          "521:                 try:",
          "",
          "[Removed Lines]",
          "518:                 qemu_target = \"{}/{}\".format(pool_name, volume_name)",
          "",
          "[Added Lines]",
          "516:                 qemu_target = f\"{pool_name}/{volume_name}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "526:                         \"disk size\": vol_info[2],",
          "527:                     }",
          "529:                     backing_files = [",
          "530:                         {",
          "531:                             \"file\": node.find(\"source\").get(\"file\"),",
          "532:                             \"file format\": node.find(\"format\").get(\"type\"),",
          "533:                         }",
          "535:                     ]",
          "537:                     if backing_files:",
          "",
          "[Removed Lines]",
          "534:                         for node in elem.findall(\".//backingStore[source]\")",
          "",
          "[Added Lines]",
          "527:                     _nodes = elem.findall(  # pylint: disable=cell-var-from-loop",
          "528:                         \".//backingStore[source]\"",
          "529:                     )",
          "535:                         for node in _nodes",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "570:                     disks[target.get(\"dev\")] = {\"file\": qemu_target, \"zfs\": True}",
          "571:                     continue",
          "574:                     # If the qemu_target is a known path, output a volume",
          "575:                     volume = all_volumes[qemu_target]",
          "576:                     qemu_target, extra_properties = _get_disk_volume_data(",
          "",
          "[Removed Lines]",
          "573:                 if qemu_target in all_volumes.keys():",
          "",
          "[Added Lines]",
          "574:                 if qemu_target in all_volumes:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "605:             elif disk_type == \"block\":",
          "606:                 qemu_target = source.get(\"dev\", \"\")",
          "607:                 # If the qemu_target is a known path, output a volume",
          "609:                     volume = all_volumes[qemu_target]",
          "610:                     qemu_target, extra_properties = _get_disk_volume_data(",
          "611:                         volume[\"pool\"], volume[\"name\"]",
          "",
          "[Removed Lines]",
          "608:                 if qemu_target in all_volumes.keys():",
          "",
          "[Added Lines]",
          "609:                 if qemu_target in all_volumes:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "614:                 qemu_target = source.get(\"protocol\")",
          "615:                 source_name = source.get(\"name\")",
          "616:                 if source_name:",
          "619:                 # Reverse the magic for the rbd and gluster pools",
          "620:                 if source.get(\"protocol\") in [\"rbd\", \"gluster\"]:",
          "",
          "[Removed Lines]",
          "617:                     qemu_target = \"{}:{}\".format(qemu_target, source_name)",
          "",
          "[Added Lines]",
          "618:                     qemu_target = f\"{qemu_target}:{source_name}\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "622:                         pool_i_xml = ElementTree.fromstring(pool_i.XMLDesc())",
          "623:                         name_node = pool_i_xml.find(\"source/name\")",
          "624:                         if name_node is not None and source_name.startswith(",
          "626:                         ):",
          "627:                             qemu_target = \"{}{}\".format(",
          "628:                                 pool_i.name(), source_name[len(name_node.text) :]",
          "",
          "[Removed Lines]",
          "625:                             \"{}/\".format(name_node.text)",
          "",
          "[Added Lines]",
          "626:                             f\"{name_node.text}/\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "638:                         qemu_target = urllib.parse.urlunparse(",
          "639:                             (",
          "640:                                 source.get(\"protocol\"),",
          "642:                                 source_name,",
          "643:                                 \"\",",
          "644:                                 saxutils.unescape(source.get(\"query\", \"\")),",
          "",
          "[Removed Lines]",
          "641:                                 \"{}:{}\".format(hostname, port) if port else hostname,",
          "",
          "[Added Lines]",
          "642:                                 f\"{hostname}:{port}\" if port else hostname,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "743:         try:",
          "744:             bandwidth_value = int(max_bandwidth)",
          "745:         except ValueError:",
          "749:         dom.migrateSetMaxSpeed(bandwidth_value)",
          "751:     max_downtime = kwargs.get(\"max_downtime\")",
          "",
          "[Removed Lines]",
          "746:             raise SaltInvocationError(",
          "747:                 \"Invalid max_bandwidth value: {}\".format(max_bandwidth)",
          "748:             )",
          "",
          "[Added Lines]",
          "747:             raise SaltInvocationError(f\"Invalid max_bandwidth value: {max_bandwidth}\")",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "753:         try:",
          "754:             downtime_value = int(max_downtime)",
          "755:         except ValueError:",
          "759:         dom.migrateSetMaxDowntime(downtime_value)",
          "761:     if kwargs.get(\"offline\") is True:",
          "",
          "[Removed Lines]",
          "756:             raise SaltInvocationError(",
          "757:                 \"Invalid max_downtime value: {}\".format(max_downtime)",
          "758:             )",
          "",
          "[Added Lines]",
          "755:             raise SaltInvocationError(f\"Invalid max_downtime value: {max_downtime}\")",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "782:             try:",
          "783:                 params[param_key] = int(comp_option_value)",
          "784:             except ValueError:",
          "787:     parallel_connections = kwargs.get(\"parallel_connections\")",
          "788:     if parallel_connections:",
          "",
          "[Removed Lines]",
          "785:                 raise SaltInvocationError(\"Invalid {} value\".format(comp_option))",
          "",
          "[Added Lines]",
          "782:                 raise SaltInvocationError(f\"Invalid {comp_option} value\")",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "888:         # Gluster and RBD need pool/volume name",
          "889:         name_node = pool_xml.find(\"./source/name\")",
          "890:         if name_node is not None:",
          "892:         # Copy the authentication if any for RBD",
          "893:         auth_node = pool_xml.find(\"./source/auth\")",
          "894:         if auth_node is not None:",
          "",
          "[Removed Lines]",
          "891:             disk_context[\"volume\"] = \"{}/{}\".format(name_node.text, volume_name)",
          "",
          "[Added Lines]",
          "888:             disk_context[\"volume\"] = f\"{name_node.text}/{volume_name}\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1013:     efi_value = context[\"boot\"].get(\"efi\", None) if boot else None",
          "1014:     if efi_value is True:",
          "1015:         context[\"boot\"][\"os_attrib\"] = \"firmware='efi'\"",
          "1017:         raise SaltInvocationError(\"Invalid efi value\")",
          "1019:     if os_type == \"xen\":",
          "",
          "[Removed Lines]",
          "1016:     elif efi_value is not None and type(efi_value) != bool:",
          "",
          "[Added Lines]",
          "1013:     elif efi_value is not None and not isinstance(efi_value, bool):",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1391:             )",
          "1392:         )",
          "1395:     log.debug(\"Image destination will be %s\", destination_fs)",
          "1397:     existing_disk = __salt__[\"zfs.list\"](name=pool)",
          "",
          "[Removed Lines]",
          "1394:     destination_fs = os.path.join(pool, \"{}.{}\".format(vm_name, disk_name))",
          "",
          "[Added Lines]",
          "1391:     destination_fs = os.path.join(pool, f\"{vm_name}.{disk_name}\")",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1423:             sparse=sparse_volume,",
          "1424:         )",
          "1429:     log.debug(\"Image path will be %s\", blockdevice_path)",
          "1430:     return blockdevice_path",
          "",
          "[Removed Lines]",
          "1426:     blockdevice_path = os.path.join(",
          "1427:         \"/dev/zvol\", pool, \"{}.{}\".format(vm_name, disk_name)",
          "1428:     )",
          "",
          "[Added Lines]",
          "1423:     blockdevice_path = os.path.join(\"/dev/zvol\", pool, f\"{vm_name}.{disk_name}\")",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1459:         qcow2 = False",
          "1460:         if salt.utils.path.which(\"qemu-img\"):",
          "1462:             imageinfo = salt.utils.yaml.safe_load(res)",
          "1463:             qcow2 = imageinfo[\"file format\"] == \"qcow2\"",
          "1464:         try:",
          "",
          "[Removed Lines]",
          "1461:             res = __salt__[\"cmd.run\"]('qemu-img info \"{}\"'.format(sfn))",
          "",
          "[Added Lines]",
          "1456:             res = __salt__[\"cmd.run\"](f'qemu-img info \"{sfn}\"')",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1478:             if disk_size and qcow2:",
          "1479:                 log.debug(\"Resize qcow2 image to %sM\", disk_size)",
          "1484:             log.debug(\"Apply umask and remove exec bit\")",
          "1485:             mode = (0o0777 ^ mask) & 0o0666",
          "",
          "[Removed Lines]",
          "1480:                 __salt__[\"cmd.run\"](",
          "1481:                     'qemu-img resize \"{}\" {}M'.format(img_dest, disk_size)",
          "1482:                 )",
          "",
          "[Added Lines]",
          "1475:                 __salt__[\"cmd.run\"](f'qemu-img resize \"{img_dest}\" {disk_size}M')",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1488:         except OSError as err:",
          "1489:             raise CommandExecutionError(",
          "1491:             )",
          "1493:     else:",
          "",
          "[Removed Lines]",
          "1490:                 \"Problem while copying image. {} - {}\".format(disk_image, err)",
          "",
          "[Added Lines]",
          "1483:                 f\"Problem while copying image. {disk_image} - {err}\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1515:         except OSError as err:",
          "1516:             raise CommandExecutionError(",
          "1518:             )",
          "1520:     return img_dest",
          "",
          "[Removed Lines]",
          "1517:                 \"Problem while creating volume {} - {}\".format(img_dest, err)",
          "",
          "[Added Lines]",
          "1510:                 f\"Problem while creating volume {img_dest} - {err}\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1730:                     index = min(",
          "1731:                         idx for idx in range(1, max(indexes) + 2) if idx not in indexes",
          "1732:                     )",
          "1735:             # Is the user wanting to reuse an existing volume?",
          "1736:             if disk.get(\"source_file\"):",
          "",
          "[Removed Lines]",
          "1733:                     disk[\"filename\"] = \"{}{}\".format(os.path.basename(device), index)",
          "",
          "[Added Lines]",
          "1726:                     disk[\"filename\"] = f\"{os.path.basename(device)}{index}\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1965:         return True",
          "1967:     # check the case that loader tag might be present. This happens after the vm ran",
          "1969:         if efi_value is True and parent_tag.find(\"loader\") is None:",
          "1970:             parent_tag.set(\"firmware\", \"efi\")",
          "1971:             return True",
          "",
          "[Removed Lines]",
          "1968:     elif type(efi_value) == bool and os_attrib == {}:",
          "",
          "[Added Lines]",
          "1961:     elif isinstance(efi_value, bool) and os_attrib == {}:",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1973:             parent_tag.remove(parent_tag.find(\"loader\"))",
          "1974:             parent_tag.remove(parent_tag.find(\"nvram\"))",
          "1975:             return True",
          "1977:         raise SaltInvocationError(\"Invalid efi value\")",
          "1978:     return False",
          "",
          "[Removed Lines]",
          "1976:     elif type(efi_value) != bool:",
          "",
          "[Added Lines]",
          "1969:     elif not isinstance(efi_value, bool):",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3112:     :param prefix: the prefix of the target name, i.e. \"hd\"",
          "3113:     \"\"\"",
          "3114:     for i in range(disks_count):",
          "3116:         if ret not in targets:",
          "3117:             return ret",
          "3118:     return None",
          "",
          "[Removed Lines]",
          "3115:         ret = \"{}{}\".format(prefix, string.ascii_lowercase[i])",
          "",
          "[Added Lines]",
          "3108:         ret = f\"{prefix}{string.ascii_lowercase[i]}\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3294:         changes[dev_type] = {}",
          "3295:         if not to_skip[dev_type]:",
          "3296:             old = devices_node.findall(dev_type)",
          "3299:     return changes",
          "",
          "[Removed Lines]",
          "3297:             new = new_xml.findall(\"devices/{}\".format(dev_type))",
          "3298:             changes[dev_type] = globals()[\"_diff_{}_lists\".format(dev_type)](old, new)",
          "",
          "[Added Lines]",
          "3290:             new = new_xml.findall(f\"devices/{dev_type}\")",
          "3291:             changes[dev_type] = globals()[f\"_diff_{dev_type}_lists\"](old, new)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3796:         # _handle_unit treats bytes as invalid unit for the purpose of consistency",
          "3797:         unit = unit if unit != \"bytes\" else \"b\"",
          "3798:         value = node.get(\"memory\") or node.get(\"size\") or node.text",
          "3801:     def _set_vcpu(node, value):",
          "3802:         node.text = str(value)",
          "",
          "[Removed Lines]",
          "3799:         return _handle_unit(\"{}{}\".format(value, unit)) if value else None",
          "",
          "[Added Lines]",
          "3792:         return _handle_unit(f\"{value}{unit}\") if value else None",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4063:     for timer in timer_names:",
          "4064:         params_mapping += [",
          "4065:             xmlutil.attribute(",
          "4068:                 \"track\",",
          "4069:                 [\"name\"],",
          "4070:             ),",
          "4071:             xmlutil.attribute(",
          "4074:                 \"tickpolicy\",",
          "4075:                 [\"name\"],",
          "4076:             ),",
          "4077:             xmlutil.int_attribute(",
          "4080:                 \"frequency\",",
          "4081:                 [\"name\"],",
          "4082:             ),",
          "4083:             xmlutil.attribute(",
          "4086:                 \"mode\",",
          "4087:                 [\"name\"],",
          "4088:             ),",
          "4089:             _yesno_attribute(",
          "4092:                 \"present\",",
          "4093:                 [\"name\"],",
          "4094:             ),",
          "",
          "[Removed Lines]",
          "4066:                 \"clock:timers:{}:track\".format(timer),",
          "4067:                 \"clock/timer[@name='{}']\".format(timer),",
          "4072:                 \"clock:timers:{}:tickpolicy\".format(timer),",
          "4073:                 \"clock/timer[@name='{}']\".format(timer),",
          "4078:                 \"clock:timers:{}:frequency\".format(timer),",
          "4079:                 \"clock/timer[@name='{}']\".format(timer),",
          "4084:                 \"clock:timers:{}:mode\".format(timer),",
          "4085:                 \"clock/timer[@name='{}']\".format(timer),",
          "4090:                 \"clock:timers:{}:present\".format(timer),",
          "4091:                 \"clock/timer[@name='{}']\".format(timer),",
          "",
          "[Added Lines]",
          "4059:                 f\"clock:timers:{timer}:track\",",
          "4060:                 f\"clock/timer[@name='{timer}']\",",
          "4065:                 f\"clock:timers:{timer}:tickpolicy\",",
          "4066:                 f\"clock/timer[@name='{timer}']\",",
          "4071:                 f\"clock:timers:{timer}:frequency\",",
          "4072:                 f\"clock/timer[@name='{timer}']\",",
          "4077:                 f\"clock:timers:{timer}:mode\",",
          "4078:                 f\"clock/timer[@name='{timer}']\",",
          "4083:                 f\"clock:timers:{timer}:present\",",
          "4084:                 f\"clock/timer[@name='{timer}']\",",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4096:         for attr in [\"slew\", \"threshold\", \"limit\"]:",
          "4097:             params_mapping.append(",
          "4098:                 xmlutil.int_attribute(",
          "4101:                     attr,",
          "4102:                 )",
          "4103:             )",
          "",
          "[Removed Lines]",
          "4099:                     \"clock:timers:{}:{}\".format(timer, attr),",
          "4100:                     \"clock/timer[@name='{}']/catchup\".format(timer),",
          "",
          "[Added Lines]",
          "4092:                     f\"clock:timers:{timer}:{attr}\",",
          "4093:                     f\"clock/timer[@name='{timer}']/catchup\",",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "5491:     if not urllib.parse.urlparse(target).scheme:",
          "5492:         proto = \"qemu\"",
          "5494:     else:",
          "5495:         dst_uri = target",
          "",
          "[Removed Lines]",
          "5493:         dst_uri = \"{}://{}/system\".format(proto, target)",
          "",
          "[Added Lines]",
          "5486:         dst_uri = f\"{proto}://{target}/system\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "5779:     result = [",
          "5780:         hyper",
          "5781:         for hyper in hypervisors",
          "5783:     ]",
          "5784:     return result[0] if result else None",
          "",
          "[Removed Lines]",
          "5782:         if getattr(sys.modules[__name__], \"_is_{}_hyper\".format(hyper))()",
          "",
          "[Added Lines]",
          "5775:         if getattr(sys.modules[__name__], f\"_is_{hyper}_hyper\")()",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "5862:             cputime_percent = (1.0e-7 * cputime / host_cpus) / vcpus",
          "5863:         return {",
          "5864:             \"cputime\": int(raw[4]),",
          "5866:         }",
          "5868:     info = {}",
          "",
          "[Removed Lines]",
          "5865:             \"cputime_percent\": int(\"{:.0f}\".format(cputime_percent)),",
          "",
          "[Added Lines]",
          "5858:             \"cputime_percent\": int(f\"{cputime_percent:.0f}\"),",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "6134:         )",
          "6136:     if suffix:",
          "6139:     doc = ElementTree.Element(\"domainsnapshot\")",
          "6140:     n_name = ElementTree.SubElement(doc, \"name\")",
          "",
          "[Removed Lines]",
          "6137:         name = \"{name}-{suffix}\".format(name=name, suffix=suffix)",
          "",
          "[Added Lines]",
          "6130:         name = f\"{name}-{suffix}\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "6258:         conn.close()",
          "6259:         raise CommandExecutionError(",
          "6260:             snapshot",
          "6262:             or \"No more previous snapshots available\"",
          "6263:         )",
          "6264:     elif snap.isCurrent():",
          "",
          "[Removed Lines]",
          "6261:             and 'Snapshot \"{}\" not found'.format(vm_snapshot)",
          "",
          "[Added Lines]",
          "6254:             and f'Snapshot \"{vm_snapshot}\" not found'",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "6363:     if mem_node is not None:",
          "6364:         unit = mem_node.get(\"unit\", \"KiB\")",
          "6365:         memory = mem_node.text",
          "6368:     pages = [",
          "6369:         {",
          "",
          "[Removed Lines]",
          "6366:         result[\"memory\"] = \"{} {}\".format(memory, unit)",
          "",
          "[Added Lines]",
          "6359:         result[\"memory\"] = f\"{memory} {unit}\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "6426:         minimum = control.get(\"min\")",
          "6427:         if minimum:",
          "6429:         controls.append(result_control)",
          "6430:     if controls:",
          "6431:         result[\"controls\"] = controls",
          "",
          "[Removed Lines]",
          "6428:             result_control[\"min\"] = \"{} {}\".format(minimum, unit)",
          "",
          "[Added Lines]",
          "6421:             result_control[\"min\"] = f\"{minimum} {unit}\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "6848:             ]",
          "6850:             if not cpu_specs:",
          "6852:             elif len(cpu_specs) > 1:",
          "6857:             cpu_specs = cpu_specs[0]",
          "",
          "[Removed Lines]",
          "6851:                 raise ValueError(\"Model {} not found in CPU map\".format(cpu_model))",
          "6853:                 raise ValueError(",
          "6854:                     \"Multiple models {} found in CPU map\".format(cpu_model)",
          "6855:                 )",
          "",
          "[Added Lines]",
          "6844:                 raise ValueError(f\"Model {cpu_model} not found in CPU map\")",
          "6846:                 raise ValueError(f\"Multiple models {cpu_model} found in CPU map\")",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "7658:         }",
          "7659:         for option_kind in [\"pool\", \"vol\"]:",
          "7660:             options = {}",
          "7664:             if default_format_node is not None:",
          "7665:                 options[\"default_format\"] = default_format_node.get(\"type\")",
          "7666:             options_enums = {",
          "7667:                 enum.get(\"name\"): [value.text for value in enum.findall(\"value\")]",
          "7669:             }",
          "7670:             if options_enums:",
          "7671:                 options.update(options_enums)",
          "",
          "[Removed Lines]",
          "7661:             default_format_node = pool.find(",
          "7662:                 \"{}Options/defaultFormat\".format(option_kind)",
          "7663:             )",
          "7668:                 for enum in pool.findall(\"{}Options/enum\".format(option_kind))",
          "",
          "[Added Lines]",
          "7652:             default_format_node = pool.find(f\"{option_kind}Options/defaultFormat\")",
          "7657:                 for enum in pool.findall(f\"{option_kind}Options/enum\")",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "8077:             # Create secret if needed",
          "8078:             if not secret:",
          "8080:                 if not usage:",
          "8082:                 secret_xml = _gen_secret_xml(secret_type, usage, description)",
          "8083:                 if not test:",
          "8084:                     secret = conn.secretDefineXML(secret_xml)",
          "",
          "[Removed Lines]",
          "8079:                 description = \"Passphrase for {} pool created by Salt\".format(pool_name)",
          "8081:                     usage = \"pool_{}\".format(pool_name)",
          "",
          "[Added Lines]",
          "8068:                 description = f\"Passphrase for {pool_name} pool created by Salt\"",
          "8070:                     usage = f\"pool_{pool_name}\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "8487:             }",
          "8488:             secret_type = auth_types[auth_node.get(\"type\")]",
          "8489:             secret_usage = auth_node.find(\"secret\").get(\"usage\")",
          "8491:                 secret = conn.secretLookupByUsage(secret_type, secret_usage)",
          "8492:                 secret.undefine()",
          "",
          "[Removed Lines]",
          "8490:             if secret_type and \"pool_{}\".format(name) == secret_usage:",
          "",
          "[Added Lines]",
          "8479:             if secret_type and f\"pool_{name}\" == secret_usage:",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "8910:             inData = False",
          "8911:             eof = os.lseek(fd, 0, os.SEEK_END)",
          "8912:             if eof < cur:",
          "8914:             sectionLen = eof - cur",
          "8915:         else:",
          "8916:             if data > cur:",
          "",
          "[Removed Lines]",
          "8913:                 raise RuntimeError(\"Current position in file after EOF: {}\".format(cur))",
          "",
          "[Added Lines]",
          "8902:                 raise RuntimeError(f\"Current position in file after EOF: {cur}\")",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "8963:                 if stream:",
          "8964:                     stream.abort()",
          "8965:                 if ret:",
          "8969:         if stream:",
          "8970:             try:",
          "8971:                 stream.finish()",
          "8972:             except libvirt.libvirtError as err:",
          "8973:                 if ret:",
          "8974:                     raise CommandExecutionError(",
          "8976:                     )",
          "8977:     return ret",
          "",
          "[Removed Lines]",
          "8966:                     raise CommandExecutionError(",
          "8967:                         \"Failed to close file: {}\".format(err.strerror)",
          "8968:                     )",
          "8975:                         \"Failed to finish stream: {}\".format(err.get_error_message())",
          "",
          "[Added Lines]",
          "8955:                     raise CommandExecutionError(f\"Failed to close file: {err.strerror}\")",
          "8962:                         f\"Failed to finish stream: {err.get_error_message()}\"",
          "",
          "---------------"
        ],
        "salt/modules/win_iis.py||salt/modules/win_iis.py": [
          "File: salt/modules/win_iis.py -> salt/modules/win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1454:         # Map to numeric to support server 2008",
          "1455:         if (",
          "1456:             setting == \"processModel.identityType\"",
          "1458:         ):",
          "1459:             value = identityType_map2numeric[settings[setting]]",
          "",
          "[Removed Lines]",
          "1457:             and settings[setting] in identityType_map2numeric.keys()",
          "",
          "[Added Lines]",
          "1457:             and settings[setting] in identityType_map2numeric",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1488:         # map identity type from numeric to string for comparing",
          "1489:         if (",
          "1490:             setting == \"processModel.identityType\"",
          "1492:         ):",
          "1493:             settings[setting] = identityType_map2string[settings[setting]]",
          "",
          "[Removed Lines]",
          "1491:             and settings[setting] in identityType_map2string.keys()",
          "",
          "[Added Lines]",
          "1491:             and settings[setting] in identityType_map2string",
          "",
          "---------------"
        ],
        "salt/modules/win_lgpo.py||salt/modules/win_lgpo.py": [
          "File: salt/modules/win_lgpo.py -> salt/modules/win_lgpo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8687:     }",
          "8688:     policy_class = policy_class.title()",
          "8689:     policy_data = _policy_info()",
          "8692:         ret[\"message\"] = (",
          "8693:             'The requested policy class \"{}\" is invalid, '",
          "8694:             \"policy_class should be one of: {}\"",
          "",
          "[Removed Lines]",
          "8690:     if policy_class not in policy_data.policies.keys():",
          "8691:         policy_classes = \", \".join(policy_data.policies.keys())",
          "",
          "[Added Lines]",
          "8690:     if policy_class not in policy_data.policies:",
          "8691:         policy_classes = \", \".join(policy_data.policies)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9712:         raise SaltInvocationError(\"policy_class must be defined\")",
          "9713:     policy_class = policy_class.title()",
          "9714:     policy_data = _policy_info()",
          "9716:         policy_classes = \", \".join(policy_data.policies.keys())",
          "9717:         raise CommandExecutionError(",
          "9718:             'The requested policy class \"{}\" is invalid, policy_class should '",
          "",
          "[Removed Lines]",
          "9715:     if policy_class not in policy_data.policies.keys():",
          "",
          "[Added Lines]",
          "9715:     if policy_class not in policy_data.policies:",
          "",
          "---------------"
        ],
        "salt/modules/win_lgpo_reg.py||salt/modules/win_lgpo_reg.py": [
          "File: salt/modules/win_lgpo_reg.py -> salt/modules/win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:     if found_key:",
          "374:         if found_name:",
          "375:             if \"**del.\" in found_name:",
          "377:                 pol_data[found_key][v_name] = pol_data[found_key].pop(found_name)",
          "378:                 found_name = v_name",
          "380:             pol_data[found_key][found_name] = {\"data\": v_data, \"type\": v_type}",
          "381:         else:",
          "383:             pol_data[found_key][v_name] = {\"data\": v_data, \"type\": v_type}",
          "384:     else:",
          "386:         pol_data[key] = {v_name: {\"data\": v_data, \"type\": v_type}}",
          "388:     success = True",
          "",
          "[Removed Lines]",
          "376:                 log.debug(f\"LGPO_REG Mod: Found disabled name: {found_name}\")",
          "379:             log.debug(f\"LGPO_REG Mod: Updating value: {found_name}\")",
          "382:             log.debug(f\"LGPO_REG Mod: Setting new value: {found_name}\")",
          "385:         log.debug(f\"LGPO_REG Mod: Adding new key and value: {found_name}\")",
          "",
          "[Added Lines]",
          "376:                 log.debug(\"LGPO_REG Mod: Found disabled name: %s\", found_name)",
          "379:             log.debug(\"LGPO_REG Mod: Updating value: %s\", found_name)",
          "382:             log.debug(\"LGPO_REG Mod: Setting new value: %s\", found_name)",
          "385:         log.debug(\"LGPO_REG Mod: Adding new key and value: %s\", found_name)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "462:     if found_key:",
          "463:         if found_name:",
          "464:             if \"**del.\" in found_name:",
          "466:                 return None",
          "468:             pol_data[found_key].pop(found_name)",
          "469:             found_name = \"**del.{}\".format(found_name)",
          "470:             pol_data[found_key][found_name] = {\"data\": \" \", \"type\": \"REG_SZ\"}",
          "471:         else:",
          "473:             pol_data[found_key][\"**del.{}\".format(v_name)] = {",
          "474:                 \"data\": \" \",",
          "475:                 \"type\": \"REG_SZ\",",
          "476:             }",
          "477:     else:",
          "479:         pol_data[key] = {\"**del.{}\".format(v_name): {\"data\": \" \", \"type\": \"REG_SZ\"}}",
          "481:     success = True",
          "",
          "[Removed Lines]",
          "465:                 log.debug(f\"LGPO_REG Mod: Already disabled: {v_name}\")",
          "467:             log.debug(f\"LGPO_REG Mod: Disabling value name: {v_name}\")",
          "472:             log.debug(f\"LGPO_REG Mod: Setting new disabled value name: {v_name}\")",
          "478:         log.debug(f\"LGPO_REG Mod: Adding new key and disabled value name: {found_name}\")",
          "",
          "[Added Lines]",
          "465:                 log.debug(\"LGPO_REG Mod: Already disabled: %s\", v_name)",
          "467:             log.debug(\"LGPO_REG Mod: Disabling value name: %s\", v_name)",
          "472:             log.debug(\"LGPO_REG Mod: Setting new disabled value name: %s\", v_name)",
          "478:         log.debug(",
          "479:             \"LGPO_REG Mod: Adding new key and disabled value name: %s\", found_name",
          "480:         )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "554:     if found_key:",
          "555:         if found_name:",
          "557:             pol_data[found_key].pop(found_name)",
          "558:         else:",
          "560:             return None",
          "561:         if len(pol_data[found_key]) == 0:",
          "563:             pol_data.pop(found_key)",
          "564:     else:",
          "566:         return None",
          "568:     success = True",
          "",
          "[Removed Lines]",
          "556:             log.debug(f\"LGPO_REG Mod: Removing value name: {found_name}\")",
          "559:             log.debug(f\"LGPO_REG Mod: Value name not found: {v_name}\")",
          "562:             log.debug(f\"LGPO_REG Mod: Removing empty key: {found_key}\")",
          "565:         log.debug(f\"LGPO_REG Mod: Key not found: {key}\")",
          "",
          "[Added Lines]",
          "558:             log.debug(\"LGPO_REG Mod: Removing value name: %s\", found_name)",
          "561:             log.debug(\"LGPO_REG Mod: Value name not found: %s\", v_name)",
          "564:             log.debug(\"LGPO_REG Mod: Removing empty key: %s\", found_key)",
          "567:         log.debug(\"LGPO_REG Mod: Key not found: %s\", key)",
          "",
          "---------------"
        ],
        "salt/modules/win_pkg.py||salt/modules/win_pkg.py": [
          "File: salt/modules/win_pkg.py -> salt/modules/win_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1656:             # single files",
          "1657:             if cache_dir and installer.startswith(\"salt:\"):",
          "1658:                 path, _ = os.path.split(installer)",
          "1660:                 try:",
          "1661:                     __salt__[\"cp.cache_dir\"](",
          "1662:                         path=path,",
          "",
          "[Removed Lines]",
          "1659:                 log.debug(f\"PKG: Caching directory: {path}\")",
          "",
          "[Added Lines]",
          "1659:                 log.debug(\"PKG: Caching directory: %s\", path)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1673:             # Check to see if the cache_file is cached... if passed",
          "1674:             if cache_file and cache_file.startswith(\"salt:\"):",
          "1675:                 cache_file_hash = __salt__[\"cp.hash_file\"](cache_file, saltenv)",
          "1677:                 try:",
          "1678:                     cached_file = __salt__[\"cp.cache_file\"](",
          "1679:                         cache_file,",
          "",
          "[Removed Lines]",
          "1676:                 log.debug(f\"PKG: Caching file: {cache_file}\")",
          "",
          "[Added Lines]",
          "1676:                 log.debug(\"PKG: Caching file: %s\", cache_file)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1703:                 # file if the source_hash doesn't match, which only works on",
          "1704:                 # files hosted on \"salt://\". If the http/https url supports",
          "1705:                 # etag, it should also verify that information before caching",
          "1707:                 try:",
          "1708:                     cached_pkg = __salt__[\"cp.cache_file\"](",
          "1709:                         installer,",
          "",
          "[Removed Lines]",
          "1706:                 log.debug(f\"PKG: Caching file: {installer}\")",
          "",
          "[Added Lines]",
          "1706:                 log.debug(\"PKG: Caching file: %s\", installer)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2103:                 if cache_dir and uninstaller.startswith(\"salt:\"):",
          "2104:                     path, _ = os.path.split(uninstaller)",
          "2106:                     try:",
          "2107:                         __salt__[\"cp.cache_dir\"](",
          "2108:                             path=path,",
          "",
          "[Removed Lines]",
          "2105:                     log.debug(f\"PKG: Caching dir: {path}\")",
          "",
          "[Added Lines]",
          "2105:                     log.debug(\"PKG: Caching dir: %s\", path)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2126:                     # only works on files hosted on \"salt://\". If the http/https",
          "2127:                     # url supports etag, it should also verify that information",
          "2128:                     # before caching",
          "2130:                     try:",
          "2131:                         cached_pkg = __salt__[\"cp.cache_file\"](",
          "2132:                             uninstaller,",
          "",
          "[Removed Lines]",
          "2129:                     log.debug(f\"PKG: Caching file: {uninstaller}\")",
          "",
          "[Added Lines]",
          "2129:                     log.debug(\"PKG: Caching file: %s\", uninstaller)",
          "",
          "---------------"
        ],
        "salt/modules/win_pki.py||salt/modules/win_pki.py": [
          "File: salt/modules/win_pki.py -> salt/modules/win_pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:         salt '*' win_pki.get_stores",
          "125:     \"\"\"",
          "126:     ret = dict()",
          "129:     items = _cmd_run(cmd=cmd, as_json=True)",
          "",
          "[Removed Lines]",
          "127:     cmd = r\"Get-ChildItem -Path 'Cert:\\' | \" r\"Select-Object LocationName, StoreNames\"",
          "",
          "[Added Lines]",
          "127:     cmd = r\"Get-ChildItem -Path 'Cert:\\' | Select-Object LocationName, StoreNames\"",
          "",
          "---------------"
        ],
        "salt/modules/win_shortcut.py||salt/modules/win_shortcut.py": [
          "File: salt/modules/win_shortcut.py -> salt/modules/win_shortcut.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:     # This will load the existing shortcut",
          "84:     with salt.utils.winapi.Com():",
          "86:         shortcut = shell.CreateShortcut(path)",
          "88:         arguments = \"\"",
          "",
          "[Removed Lines]",
          "85:         shell = win32com.client.Dispatch(\"WScript.Shell\")",
          "",
          "[Added Lines]",
          "85:         shell = win32com.client.Dispatch(  # pylint: disable=used-before-assignment",
          "86:             \"WScript.Shell\"",
          "87:         )",
          "",
          "---------------"
        ],
        "salt/modules/win_status.py||salt/modules/win_status.py": [
          "File: salt/modules/win_status.py -> salt/modules/win_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "147:     if not HAS_PSUTIL:",
          "148:         return False, \"win_status.py: Requires psutil\"",
          "153:     return __virtualname__",
          "",
          "[Removed Lines]",
          "150:     # Namespace modules from `status.py`",
          "151:     global ping_master, time_",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "525:         \"\"\"",
          "526:         remotes = set()",
          "527:         try:",
          "531:         except subprocess.CalledProcessError:",
          "532:             log.error(\"Failed netstat\")",
          "533:             raise",
          "",
          "[Removed Lines]",
          "528:             data = subprocess.check_output(",
          "529:                 [\"netstat\", \"-n\", \"-p\", \"TCP\"]",
          "530:             )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "525:             data = subprocess.check_output([\"netstat\", \"-n\", \"-p\", \"TCP\"])",
          "",
          "---------------"
        ],
        "salt/modules/win_task.py||salt/modules/win_task.py": [
          "File: salt/modules/win_task.py -> salt/modules/win_task.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "227:     :rtype: str",
          "228:     \"\"\"",
          "229:     try:",
          "231:     except ValueError:",
          "232:         return \"Never\"",
          "",
          "[Removed Lines]",
          "230:         return \"{}\".format(date)",
          "",
          "[Added Lines]",
          "230:         return f\"{date}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:     \"\"\"",
          "246:     value_index = -1",
          "247:     for idx, dict_value in enumerate(dictionary.values()):",
          "249:             if value in dict_value:",
          "250:                 value_index = idx",
          "251:                 break",
          "",
          "[Removed Lines]",
          "248:         if type(dict_value) == list:",
          "",
          "[Added Lines]",
          "248:         if isinstance(dict_value, list):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:     :rtype: str",
          "270:     \"\"\"",
          "271:     value = dictionary[key]",
          "273:         return value[0]",
          "274:     else:",
          "275:         return value",
          "",
          "[Removed Lines]",
          "272:     if type(value) == list:",
          "",
          "[Added Lines]",
          "272:     if isinstance(value, list):",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "323:         try:",
          "324:             failure_code = fc[exc[5]]",
          "325:         except KeyError:",
          "328:         log.debug(\"Failed to modify task: %s\", failure_code)",
          "333: def list_tasks(location=\"\\\\\"):",
          "",
          "[Removed Lines]",
          "326:             failure_code = \"Unknown Failure: {}\".format(error)",
          "330:         return \"Failed to modify task: {}\".format(failure_code)",
          "",
          "[Added Lines]",
          "326:             failure_code = f\"Unknown Failure: {error}\"",
          "330:         return f\"Failed to modify task: {failure_code}\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "363:         try:",
          "364:             task_folder = task_service.GetFolder(location)",
          "365:         except pywintypes.com_error:",
          "367:             log.error(msg)",
          "368:             raise CommandExecutionError(msg)",
          "",
          "[Removed Lines]",
          "366:             msg = \"Unable to load location: {}\".format(location)",
          "",
          "[Added Lines]",
          "366:             msg = f\"Unable to load location: {location}\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "551:     # Check for existing task",
          "552:     if name in list_tasks(location) and not force:",
          "553:         # Connect to an existing task definition",
          "556:     # connect to the task scheduler",
          "557:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "554:         return \"{} already exists\".format(name)",
          "",
          "[Added Lines]",
          "554:         return f\"{name} already exists\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "642:     # Check for existing task",
          "643:     if name in list_tasks(location):",
          "644:         # Connect to an existing task definition",
          "647:     if not xml_text and not xml_path:",
          "648:         raise ArgumentValueError(\"Must specify either xml_text or xml_path\")",
          "",
          "[Removed Lines]",
          "645:         return \"{} already exists\".format(name)",
          "",
          "[Added Lines]",
          "645:         return f\"{name} already exists\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "731:             try:",
          "732:                 failure_code = fc[error_code]",
          "733:             except KeyError:",
          "735:             finally:",
          "736:                 log.debug(\"Failed to create task: %s\", failure_code)",
          "737:             raise CommandExecutionError(failure_code)",
          "",
          "[Removed Lines]",
          "734:                 failure_code = \"Unknown Failure: {}\".format(error_code)",
          "",
          "[Added Lines]",
          "734:                 failure_code = f\"Unknown Failure: {error_code}\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "767:     # Check for existing folder",
          "768:     if name in list_folders(location):",
          "769:         # Connect to an existing task definition",
          "772:     # Create the task service object",
          "773:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "770:         return \"{} already exists\".format(name)",
          "",
          "[Added Lines]",
          "770:         return f\"{name} already exists\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1017:             else:",
          "1018:                 # Not found and create_new not set, return not found",
          "1021:         # General Information",
          "1022:         if save_definition:",
          "",
          "[Removed Lines]",
          "1019:                 return \"{} not found\".format(name)",
          "",
          "[Added Lines]",
          "1019:                 return f\"{name} not found\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1183:     \"\"\"",
          "1184:     # Check for existing task",
          "1185:     if name not in list_tasks(location):",
          "1188:     # connect to the task scheduler",
          "1189:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1186:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1186:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1224:     \"\"\"",
          "1225:     # Check for existing folder",
          "1226:     if name not in list_folders(location):",
          "1229:     # connect to the task scheduler",
          "1230:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1227:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1227:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1266:     \"\"\"",
          "1267:     # Check for existing folder",
          "1268:     if name not in list_tasks(location):",
          "1271:     # connect to the task scheduler",
          "1272:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1269:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1269:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1309:     \"\"\"",
          "1310:     # Check for existing folder",
          "1311:     if name not in list_tasks(location):",
          "1314:     # connect to the task scheduler",
          "1315:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1312:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1312:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1370:     \"\"\"",
          "1371:     # Check for existing folder",
          "1372:     if name not in list_tasks(location):",
          "1375:     # connect to the task scheduler",
          "1376:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1373:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1373:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1419:     \"\"\"",
          "1420:     # Check for existing folder",
          "1421:     if name not in list_tasks(location):",
          "1424:     # connect to the task scheduler",
          "1425:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1422:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1422:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1458:     \"\"\"",
          "1459:     # Check for existing folder",
          "1460:     if name not in list_tasks(location):",
          "1463:     # connect to the task scheduler",
          "1464:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1461:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1461:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1715:             else:",
          "1716:                 # Not found and create_new not set, return not found",
          "1719:         # Action Settings",
          "1720:         task_action = task_definition.Actions.Create(action_types[action_type])",
          "",
          "[Removed Lines]",
          "1717:                 return \"{} not found\".format(name)",
          "",
          "[Added Lines]",
          "1717:                 return f\"{name} not found\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1808:     # TODO: action.",
          "1809:     # Check for existing task",
          "1810:     if name not in list_tasks(location):",
          "1813:     # Create the task service object",
          "1814:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "1811:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "1811:         return f\"{name} not found in {location}\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2304:             else:",
          "2305:                 # Not found and create_new not set, return not found",
          "2308:         # Create a New Trigger",
          "2309:         trigger = task_definition.Triggers.Create(trigger_types[trigger_type])",
          "",
          "[Removed Lines]",
          "2306:                 return \"{} not found\".format(name)",
          "",
          "[Added Lines]",
          "2306:                 return f\"{name} not found\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2481:     \"\"\"",
          "2482:     # Check for existing task",
          "2483:     if name not in list_tasks(location):",
          "2486:     # Create the task service object",
          "2487:     with salt.utils.winapi.Com():",
          "",
          "[Removed Lines]",
          "2484:         return \"{} not found in {}\".format(name, location)",
          "",
          "[Added Lines]",
          "2484:         return f\"{name} not found in {location}\"",
          "",
          "---------------"
        ],
        "salt/modules/x509_v2.py||salt/modules/x509_v2.py": [
          "File: salt/modules/x509_v2.py -> salt/modules/x509_v2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1907:         )",
          "1908:     result = result[next(iter(result))]",
          "1909:     if not isinstance(result, dict) or \"data\" not in result:",
          "1911:         raise CommandExecutionError(",
          "1912:             \"Received invalid return value from ca_server. See minion log for details\"",
          "1913:         )",
          "",
          "[Removed Lines]",
          "1910:         log.error(f\"Received invalid return value from ca_server: {result}\")",
          "",
          "[Added Lines]",
          "1910:         log.error(\"Received invalid return value from ca_server: %s\", result)",
          "",
          "---------------"
        ],
        "salt/modules/xapi_virt.py||salt/modules/xapi_virt.py": [
          "File: salt/modules/xapi_virt.py -> salt/modules/xapi_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: \"\"\"",
          "19: import contextlib",
          "20: import os",
          "21: import sys",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import importlib",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: import salt.utils.stringutils",
          "27: from salt.exceptions import CommandExecutionError",
          "38: # Define the module's virtual name",
          "39: __virtualname__ = \"virt\"",
          "",
          "[Removed Lines]",
          "29: try:",
          "30:     import importlib  # pylint: disable=minimum-python-version",
          "32:     HAS_IMPORTLIB = True",
          "33: except ImportError:",
          "34:     # Python < 2.7 does not have importlib",
          "35:     HAS_IMPORTLIB = False",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:         if os.path.isfile(debian_xen_version):",
          "51:             # __salt__ is not available in __virtual__",
          "52:             xenversion = salt.modules.cmdmod._run_quiet(debian_xen_version)",
          "54:             if os.path.isdir(xapipath):",
          "55:                 sys.path.append(xapipath)",
          "57:     try:",
          "61:     except (ImportError, AttributeError):",
          "62:         return False",
          "",
          "[Removed Lines]",
          "53:             xapipath = \"/usr/lib/xen-{}/lib/python\".format(xenversion)",
          "58:         if HAS_IMPORTLIB:",
          "59:             return importlib.import_module(\"xen.xm.XenAPI\")",
          "60:         return __import__(\"xen.xm.XenAPI\").xm.XenAPI",
          "",
          "[Added Lines]",
          "45:             xapipath = f\"/usr/lib/xen-{xenversion}/lib/python\"",
          "50:         return importlib.import_module(\"xen.xm.XenAPI\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:     Internal, returns metrics record for a rectype",
          "157:     \"\"\"",
          "158:     metrics_id = record[\"metrics\"]",
          "162: def _get_val(record, keys):",
          "",
          "[Removed Lines]",
          "159:     return getattr(xapi, \"{}_metrics\".format(rectype)).get_record(metrics_id)",
          "",
          "[Added Lines]",
          "149:     return getattr(xapi, f\"{rectype}_metrics\").get_record(metrics_id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "507:         if cpus == \"all\":",
          "508:             cpumap = cpu_make_map(\"0-63\")",
          "509:         else:",
          "512:         try:",
          "514:             return True",
          "515:         # VM.add_to_VCPUs_params_live() implementation in xend 4.1+ has",
          "516:         # a bug which makes the client call fail.",
          "",
          "[Removed Lines]",
          "510:             cpumap = cpu_make_map(\"{}\".format(cpus))",
          "513:             xapi.VM.add_to_VCPUs_params_live(vm_uuid, \"cpumap{}\".format(vcpu), cpumap)",
          "",
          "[Added Lines]",
          "500:             cpumap = cpu_make_map(f\"{cpus}\")",
          "503:             xapi.VM.add_to_VCPUs_params_live(vm_uuid, f\"cpumap{vcpu}\", cpumap)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "518:         # for that particular one, fallback to xm / xl instead.",
          "519:         except Exception:  # pylint: disable=broad-except",
          "520:             return __salt__[\"cmd.run\"](",
          "522:                 python_shell=False,",
          "523:             )",
          "",
          "[Removed Lines]",
          "521:                 \"{} vcpu-pin {} {} {}\".format(_get_xtool(), vm_, vcpu, cpus),",
          "",
          "[Added Lines]",
          "511:                 f\"{_get_xtool()} vcpu-pin {vm_} {vcpu} {cpus}\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "641:     # This function does NOT use the XenAPI. Instead, it use good old xm / xl.",
          "642:     # On Xen Source, creating a virtual machine using XenAPI is really painful.",
          "643:     # XCP / XS make it really easy using xapi.Async.VM.start instead. Anyone?",
          "649: def reboot(vm_):",
          "",
          "[Removed Lines]",
          "644:     return __salt__[\"cmd.run\"](",
          "645:         \"{} create {}\".format(_get_xtool(), config_), python_shell=False",
          "646:     )",
          "",
          "[Added Lines]",
          "634:     return __salt__[\"cmd.run\"](f\"{_get_xtool()} create {config_}\", python_shell=False)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "816:                 cputime_percent = (1.0e-7 * cputime / host_cpus) / vcpus",
          "817:             return {",
          "818:                 \"cputime\": int(cputime),",
          "820:             }",
          "822:         info = {}",
          "",
          "[Removed Lines]",
          "819:                 \"cputime_percent\": int(\"{:.0f}\".format(cputime_percent)),",
          "",
          "[Added Lines]",
          "807:                 \"cputime_percent\": int(f\"{cputime_percent:.0f}\"),",
          "",
          "---------------"
        ],
        "salt/modules/xfs.py||salt/modules/xfs.py": [
          "File: salt/modules/xfs.py -> salt/modules/xfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "319:     \"\"\"",
          "320:     Parse blkid output.",
          "321:     \"\"\"",
          "323:     data = {}",
          "324:     for dev_meta in flt(out.split(\"\\n\\n\")):",
          "325:         dev = {}",
          "",
          "[Removed Lines]",
          "322:     flt = lambda data: [el for el in data if el.strip()]",
          "",
          "[Added Lines]",
          "323:     def flt(data):",
          "324:         return [el for el in data if el.strip()]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:         salt '*' xfs.mkfs /dev/sda1 dso='su=32k,sw=6' lso='logdev=/dev/sda2,size=10000b'",
          "440:     \"\"\"",
          "447:     cmd = [\"mkfs.xfs\"]",
          "448:     if label:",
          "449:         cmd.append(\"-L\")",
          "",
          "[Removed Lines]",
          "442:     getopts = lambda args: dict(",
          "443:         (args and (\"=\" in args) and args or None)",
          "444:         and [kw.split(\"=\") for kw in args.split(\",\")]",
          "445:         or []",
          "446:     )",
          "",
          "[Added Lines]",
          "445:     def getopts(args):",
          "446:         return dict(",
          "447:             (args and (\"=\" in args) and args or None)",
          "448:             and [kw.split(\"=\") for kw in args.split(\",\")]",
          "449:             or []",
          "450:         )",
          "",
          "---------------"
        ],
        "salt/modules/yumpkg.py||salt/modules/yumpkg.py": [
          "File: salt/modules/yumpkg.py -> salt/modules/yumpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:     Look for a specific config variable and return its value",
          "398:     \"\"\"",
          "399:     conf = _get_yum_config(strict_config)",
          "401:         return conf.get(name)",
          "402:     return None",
          "",
          "[Removed Lines]",
          "400:     if name in conf.keys():",
          "",
          "[Added Lines]",
          "400:     if name in conf:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3135:         if key in filerepos[repo].copy().keys():",
          "3136:             del filerepos[repo][key]",
          "3139:     # Old file or new, write out the repos(s)",
          "3140:     filerepos[repo].update(repo_opts)",
          "3141:     content = header",
          "",
          "[Removed Lines]",
          "3138:     _bool_to_str = lambda x: \"1\" if x else \"0\"",
          "",
          "[Added Lines]",
          "3138:     def _bool_to_str(x):",
          "3139:         return \"1\" if x else \"0\"",
          "",
          "---------------"
        ],
        "salt/modules/zcbuildout.py||salt/modules/zcbuildout.py": [
          "File: salt/modules/zcbuildout.py -> salt/modules/zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:     directory = os.path.abspath(directory)",
          "288:     if isinstance(command, list):",
          "289:         command = \" \".join(command)",
          "291:     if not loglevel:",
          "292:         loglevel = \"debug\"",
          "293:     ret = __salt__[\"cmd.run_all\"](",
          "",
          "[Removed Lines]",
          "290:     LOG.debug(\"Running {}\".format(command))  # pylint: disable=str-format-in-logging",
          "",
          "[Added Lines]",
          "290:     LOG.debug(f\"Running {command}\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "499:     else:",
          "500:         buildout_ver = _get_buildout_ver(directory)",
          "501:         booturl = _get_bootstrap_url(directory)",
          "503:     # try to download an up-to-date bootstrap",
          "504:     # set defaulttimeout",
          "505:     # and add possible content",
          "",
          "[Removed Lines]",
          "502:     LOG.debug(\"Using {}\".format(booturl))  # pylint: disable=str-format-in-logging",
          "",
          "[Added Lines]",
          "502:     LOG.debug(f\"Using {booturl}\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "792:     cmds, outputs = [], []",
          "793:     if parts:",
          "794:         for part in parts:",
          "798:             cmd = \"{} -c {} {} install {}\".format(bcmd, config, \" \".join(argv), part)",
          "799:             cmds.append(cmd)",
          "800:             outputs.append(",
          "",
          "[Removed Lines]",
          "795:             LOG.info(",
          "796:                 \"Installing single part: {}\".format(part)",
          "797:             )  # pylint: disable=str-format-in-logging",
          "",
          "[Added Lines]",
          "795:             LOG.info(f\"Installing single part: {part}\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "961:         salt '*' buildout.buildout /srv/mybuildout",
          "962:     \"\"\"",
          "966:     boot_ret = bootstrap(",
          "967:         directory,",
          "968:         config=config,",
          "",
          "[Removed Lines]",
          "963:     LOG.info(",
          "964:         \"Running buildout in {} ({})\".format(directory, config)",
          "965:     )  # pylint: disable=str-format-in-logging",
          "",
          "[Added Lines]",
          "961:     LOG.info(f\"Running buildout in {directory} ({config})\")",
          "",
          "---------------"
        ],
        "salt/netapi/rest_cherrypy/__init__.py||salt/netapi/rest_cherrypy/__init__.py": [
          "File: salt/netapi/rest_cherrypy/__init__.py -> salt/netapi/rest_cherrypy/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: def __virtual__():",
          "32:     mod_opts = __opts__.get(short_name, {})",
          "34:     if mod_opts:",
          "",
          "[Removed Lines]",
          "31:     short_name = __name__.rsplit(\".\")[-1]",
          "",
          "[Added Lines]",
          "31:     short_name = __name__.rsplit(\".\", maxsplit=1)[-1]",
          "",
          "---------------"
        ],
        "salt/netapi/rest_cherrypy/app.py||salt/netapi/rest_cherrypy/app.py": [
          "File: salt/netapi/rest_cherrypy/app.py -> salt/netapi/rest_cherrypy/app.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "711:     :param request: Cherrypy request to check against the API.",
          "712:     :type request: cherrypy.request",
          "713:     \"\"\"",
          "715:     success_str = \"[api_acl] Authentication successful for user %s from IP %s\"",
          "718:     acl = None",
          "719:     # Salt Configuration",
          "",
          "[Removed Lines]",
          "714:     failure_str = \"[api_acl] Authentication failed for \" \"user %s from IP %s\"",
          "716:     pass_str = \"[api_acl] Authentication not checked for \" \"user %s from IP %s\"",
          "",
          "[Added Lines]",
          "714:     failure_str = \"[api_acl] Authentication failed for user %s from IP %s\"",
          "716:     pass_str = \"[api_acl] Authentication not checked for user %s from IP %s\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "777:     Redirect all unauthenticated requests to the login page",
          "778:     \"\"\"",
          "779:     # Redirect to the login page if the session hasn't been authed",
          "781:         raise cherrypy.HTTPError(401)",
          "783:     # Session is authenticated; inform caches",
          "",
          "[Removed Lines]",
          "780:     if \"token\" not in cherrypy.session:  # pylint: disable=W8601",
          "",
          "[Added Lines]",
          "780:     if \"token\" not in cherrypy.session:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1145:     for idx, tool_config in enumerate(tool_list):",
          "1146:         tool_name, tool_fn = tool_config",
          "1147:         setattr(",
          "1149:         )",
          "",
          "[Removed Lines]",
          "1148:             cherrypy.tools, tool_name, cherrypy.Tool(hook, tool_fn, priority=(50 + idx))",
          "",
          "[Added Lines]",
          "1148:             cherrypy.tools, tool_name, cherrypy.Tool(hook, tool_fn, priority=50 + idx)",
          "",
          "---------------"
        ],
        "salt/netapi/rest_tornado/saltnado.py||salt/netapi/rest_tornado/saltnado.py": [
          "File: salt/netapi/rest_tornado/saltnado.py -> salt/netapi/rest_tornado/saltnado.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:         Get an event (asynchronous of course) return a future that will get it later",
          "334:         \"\"\"",
          "335:         future = Future()",
          "336:         if callback is not None:",
          "338:             def handle_future(future):",
          "343:             future.add_done_callback(handle_future)",
          "344:         # add this tag and future to the callbacks",
          "",
          "[Removed Lines]",
          "339:                 salt.ext.tornado.ioloop.IOLoop.current().add_callback(",
          "340:                     callback, future",
          "341:                 )  # pylint: disable=E1102",
          "",
          "[Added Lines]",
          "336:         _loop = salt.ext.tornado.ioloop.IOLoop.current()",
          "337:         assert _loop",
          "341:                 _loop.add_callback(callback, future)  # pylint: disable=not-callable",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:         self.request_map[request].append((tag, matcher, future))",
          "348:         if timeout:",
          "350:                 timeout, self._timeout_future, tag, matcher, future",
          "351:             )",
          "352:             self.timeout_map[future] = timeout_future",
          "",
          "[Removed Lines]",
          "349:             timeout_future = salt.ext.tornado.ioloop.IOLoop.current().call_later(",
          "",
          "[Added Lines]",
          "349:             timeout_future = _loop.call_later(",
          "",
          "---------------"
        ],
        "salt/output/pony.py||salt/output/pony.py": [
          "File: salt/output/pony.py -> salt/output/pony.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     Mane function",
          "67:     \"\"\"",
          "68:     high_out = __salt__[\"highstate\"](data)",
          "",
          "[Removed Lines]",
          "69:     return subprocess.check_output(",
          "70:         [\"ponysay\", salt.utils.data.decode(high_out)]",
          "71:     )  # pylint: disable=E0598",
          "",
          "[Added Lines]",
          "69:     return subprocess.check_output([\"ponysay\", salt.utils.data.decode(high_out)])",
          "",
          "---------------"
        ],
        "salt/pillar/__init__.py||salt/pillar/__init__.py": [
          "File: salt/pillar/__init__.py -> salt/pillar/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:             load[\"clean_cache\"] = self.clean_cache",
          "260:         if self.ext:",
          "261:             load[\"ext\"] = self.ext",
          "262:         try:",
          "264:             ret_pillar = yield self.channel.crypted_transfer_decode_dictentry(",
          "265:                 load,",
          "266:                 dictkey=\"pillar\",",
          "",
          "[Removed Lines]",
          "263:             start = time.monotonic()",
          "",
          "[Added Lines]",
          "262:         start = time.monotonic()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "357:         if self.ext:",
          "358:             load[\"ext\"] = self.ext",
          "360:         try:",
          "362:             ret_pillar = self.channel.crypted_transfer_decode_dictentry(",
          "363:                 load,",
          "364:                 dictkey=\"pillar\",",
          "",
          "[Removed Lines]",
          "361:             start = time.monotonic()",
          "",
          "[Added Lines]",
          "360:         start = time.monotonic()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1217:                     errors.append(",
          "1218:                         \"Failed to load ext_pillar {}: {}\".format(",
          "1219:                             key,",
          "1221:                         )",
          "1222:                     )",
          "1223:                     log.error(",
          "",
          "[Removed Lines]",
          "1220:                             exc.__str__(),",
          "",
          "[Added Lines]",
          "1220:                             exc,",
          "",
          "---------------"
        ],
        "salt/pillar/foreman.py||salt/pillar/foreman.py": [
          "File: salt/pillar/foreman.py -> salt/pillar/foreman.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:             headers=headers,",
          "112:             verify=verify,",
          "113:             cert=(certfile, keyfile),",
          "114:         )",
          "115:         result = resp.json()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:             timeout=120,",
          "",
          "---------------"
        ],
        "salt/pillar/pepa.py||salt/pillar/pepa.py": [
          "File: salt/pillar/pepa.py -> salt/pillar/pepa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "291: # Only used when called from a terminal",
          "292: log = None",
          "293: if __name__ == \"__main__\":",
          "296:     parser = argparse.ArgumentParser()",
          "297:     parser.add_argument(\"hostname\", help=\"Hostname\")",
          "",
          "[Removed Lines]",
          "294:     import argparse  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "294:     import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "612:         log.info(\"Authenticate REST API\")",
          "613:         auth = {\"username\": username, \"password\": password, \"eauth\": \"pam\"}",
          "616:         if not request.ok:",
          "617:             raise RuntimeError(",
          "619:             )",
          "621:         response = request.json()",
          "",
          "[Removed Lines]",
          "614:         request = requests.post(args.url + \"/login\", auth)",
          "618:                 \"Failed to authenticate to SaltStack REST API: {}\".format(request.text)",
          "",
          "[Added Lines]",
          "614:         request = requests.post(args.url + \"/login\", auth, timeout=120)",
          "618:                 f\"Failed to authenticate to SaltStack REST API: {request.text}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "624:         log.info(\"Request Grains from REST API\")",
          "625:         headers = {\"X-Auth-Token\": token, \"Accept\": \"application/json\"}",
          "628:         result = request.json().get(\"return\", [{}])[0]",
          "629:         if args.hostname not in result:",
          "",
          "[Removed Lines]",
          "626:         request = requests.get(args.url + \"/minions/\" + args.hostname, headers=headers)",
          "",
          "[Added Lines]",
          "626:         request = requests.get(",
          "627:             args.url + \"/minions/\" + args.hostname, headers=headers, timeout=120",
          "628:         )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "651:     if __opts__[\"pepa_validate\"]:",
          "652:         validate(result, __opts__[\"ext_pillar\"][loc][\"pepa\"][\"resource\"])",
          "654:     try:",
          "656:         salt.utils.yaml.SafeOrderedDumper.ignore_aliases = lambda x, y: True",
          "658:         def _print_result(result):",
          "",
          "[Removed Lines]",
          "655:         orig_ignore = salt.utils.yaml.SafeOrderedDumper.ignore_aliases",
          "",
          "[Added Lines]",
          "656:     orig_ignore = salt.utils.yaml.SafeOrderedDumper.ignore_aliases",
          "",
          "---------------"
        ],
        "salt/pillar/vault.py||salt/pillar/vault.py": [
          "File: salt/pillar/vault.py -> salt/pillar/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:     except KeyError:",
          "242:         log.warning(\"Could not resolve pillar path pattern %s\", path_pattern)",
          "245:     return paths",
          "",
          "[Removed Lines]",
          "244:     log.debug(f\"{minion_id} vault pillar paths: {paths}\")",
          "",
          "[Added Lines]",
          "244:     log.debug(\"%s vault pillar paths: %s\", minion_id, paths)",
          "",
          "---------------"
        ],
        "salt/pillar/vmware_pillar.py||salt/pillar/vmware_pillar.py": [
          "File: salt/pillar/vmware_pillar.py -> salt/pillar/vmware_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:     if isinstance(obj, datetime.datetime):",
          "484:         if obj.utcoffset() is not None:",
          "485:             obj = obj - obj.utcoffset()",
          "487:     return obj",
          "",
          "[Removed Lines]",
          "486:         return obj.__str__()",
          "",
          "[Added Lines]",
          "486:         return str(obj)",
          "",
          "---------------"
        ],
        "salt/platform/win.py||salt/platform/win.py": [
          "File: salt/platform/win.py -> salt/platform/win.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: import os",
          "16: from ctypes import wintypes",
          "18: import ntsecuritycon",
          "19: import psutil",
          "20: import win32api",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: # pylint: disable=3rd-party-module-not-gated",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23: import win32security",
          "24: import win32service",
          "26: # Set up logging",
          "27: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: # pylint: enable=3rd-party-module-not-gated",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "399:     @classmethod",
          "400:     def from_address_copy(cls, address, size=None):",
          "402:         if size is not None:",
          "403:             ctypes.resize(x, size)",
          "404:         ctypes.memmove(ctypes.byref(x), address, ctypes.sizeof(x))",
          "",
          "[Removed Lines]",
          "401:         x = ctypes.Structure.__new__(cls)",
          "",
          "[Added Lines]",
          "404:         x = ctypes.Structure.__new__(cls)  # pylint: disable=no-value-for-parameter",
          "",
          "---------------"
        ],
        "salt/proxy/dummy.py||salt/proxy/dummy.py": [
          "File: salt/proxy/dummy.py -> salt/proxy/dummy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:     __context__[\"dummy_proxy\"] = {\"id\": opts[\"id\"]}",
          "96:     log.debug(\"dummy proxy init() called...\")",
          "97:     with _loaded_state(opts) as state:",
          "101: def initialized():",
          "",
          "[Removed Lines]",
          "98:         state[\"initialized\"] = True",
          "",
          "[Added Lines]",
          "98:         state[\"initialized\"] = True  # pylint: disable=unsupported-assignment-operation",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:     Make up some grains",
          "114:     \"\"\"",
          "115:     with _loaded_state(__opts__) as state:",
          "122:         return state[\"grains_cache\"]",
          "",
          "[Removed Lines]",
          "116:         if \"grains_cache\" not in state:",
          "117:             state[\"grains_cache\"] = {",
          "118:                 \"dummy_grain_1\": \"one\",",
          "119:                 \"dummy_grain_2\": \"two\",",
          "120:                 \"dummy_grain_3\": \"three\",",
          "121:             }",
          "",
          "[Added Lines]",
          "116:         # pylint: disable=unsupported-assignment-operation,unsupported-membership-test",
          "117:         state[\"grains_cache\"] = {",
          "118:             \"dummy_grain_1\": \"one\",",
          "119:             \"dummy_grain_2\": \"two\",",
          "120:             \"dummy_grain_3\": \"three\",",
          "121:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:     Refresh the grains",
          "128:     \"\"\"",
          "129:     with _loaded_state(__opts__) as state:",
          "131:             state.pop(\"grains_cache\")",
          "132:     return grains()",
          "",
          "[Removed Lines]",
          "130:         if \"grains_cache\" in state:",
          "",
          "[Added Lines]",
          "130:         if \"grains_cache\" in state:  # pylint: disable=unsupported-membership-test",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "262:     \"\"\"",
          "263:     log.debug(\"dummy proxy shutdown() called...\")",
          "264:     with _loaded_state(__opts__) as state:",
          "266:             os.unlink(state[\"filename\"])",
          "",
          "[Removed Lines]",
          "265:         if \"filename\" in state:",
          "",
          "[Added Lines]",
          "265:         if \"filename\" in state:  # pylint: disable=unsupported-membership-test",
          "",
          "---------------"
        ],
        "salt/proxy/philips_hue.py||salt/proxy/philips_hue.py": [
          "File: salt/proxy/philips_hue.py -> salt/proxy/philips_hue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:     # Because salt.utils.query is that dreadful... :(",
          "119:     err = None",
          "123:     conn = http.client.HTTPConnection(CONFIG[\"host\"])",
          "124:     if method == \"PUT\":",
          "125:         conn.request(method, url, salt.utils.json.dumps(state))",
          "",
          "[Removed Lines]",
          "120:     url = \"{}/lights{}\".format(",
          "121:         CONFIG[\"uri\"], lamp_id and \"/{}\".format(lamp_id) or \"\"",
          "122:     ) + (action and \"/{}\".format(action) or \"\")",
          "",
          "[Added Lines]",
          "120:     url = \"{}/lights{}\".format(CONFIG[\"uri\"], lamp_id and f\"/{lamp_id}\" or \"\") + (",
          "121:         action and f\"/{action}\" or \"\"",
          "122:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     if resp.status == http.client.OK:",
          "131:         res = salt.utils.json.loads(resp.read())",
          "132:     else:",
          "134:     conn.close()",
          "135:     if err:",
          "136:         raise CommandExecutionError(err)",
          "",
          "[Removed Lines]",
          "133:         err = \"HTTP error: {}, {}\".format(resp.status, resp.reason)",
          "",
          "[Added Lines]",
          "133:         err = f\"HTTP error: {resp.status}, {resp.reason}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "175:         raise CommandExecutionError(\"Parameter ID is required.\")",
          "177:     return (",
          "179:         and [params[\"id\"]]",
          "180:         or [int(dev) for dev in params[\"id\"].split(\",\")]",
          "181:     )",
          "",
          "[Removed Lines]",
          "178:         type(params[\"id\"]) == int",
          "",
          "[Added Lines]",
          "178:         isinstance(params[\"id\"], int)",
          "",
          "---------------"
        ],
        "salt/renderers/genshi.py||salt/renderers/genshi.py": [
          "File: salt/renderers/genshi.py -> salt/renderers/genshi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: try:",
          "9:     HAS_LIBS = True",
          "10: except ImportError:",
          "",
          "[Removed Lines]",
          "7:     from genshi.template import MarkupTemplate, NewTextTemplate, OldTextTemplate",
          "",
          "[Added Lines]",
          "7:     from genshi.template import MarkupTemplate  # pylint: disable=no-name-in-module",
          "8:     from genshi.template import NewTextTemplate  # pylint: disable=no-name-in-module",
          "9:     from genshi.template import OldTextTemplate  # pylint: disable=no-name-in-module",
          "",
          "---------------"
        ],
        "salt/renderers/stateconf.py||salt/renderers/stateconf.py": [
          "File: salt/renderers/stateconf.py -> salt/renderers/stateconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: def __init__(opts):",
          "66:     global STATE_NAME, STATE_FUNC",
          "67:     STATE_FUNC = __opts__[\"stateconf_state_func\"]",
          "71: MOD_BASENAME = os.path.basename(__file__)",
          "",
          "[Removed Lines]",
          "68:     STATE_NAME = STATE_FUNC.split(\".\")[0]",
          "",
          "[Added Lines]",
          "68:     STATE_NAME = STATE_FUNC.split(\".\", maxsplit=1)[0]",
          "",
          "---------------"
        ],
        "salt/returners/etcd_return.py||salt/returners/etcd_return.py": [
          "File: salt/returners/etcd_return.py -> salt/returners/etcd_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:     client, path = _get_conn(__opts__)",
          "233:     items = client.get(\"/\".join((path, \"minions\")), recurse=True)",
          "234:     for id, jid in items.items():",
          "236:         efun = salt.utils.json.loads(",
          "237:             client.get(\"/\".join((path, \"jobs\", str(jid), id, \"fun\")))",
          "238:         )",
          "",
          "[Removed Lines]",
          "235:         id = str(id).split(\"/\")[-1]",
          "",
          "[Added Lines]",
          "235:         id = str(id).rsplit(\"/\", maxsplit=1)[-1]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251:     items = client.get(\"/\".join((path, \"jobs\")), recurse=True)",
          "252:     for key, value in items.items():",
          "253:         if isinstance(value, dict):  # dict means directory",
          "255:             ret.append(jid)",
          "256:     return ret",
          "",
          "[Removed Lines]",
          "254:             jid = str(key).split(\"/\")[-1]",
          "",
          "[Added Lines]",
          "254:             jid = str(key).rsplit(\"/\", maxsplit=1)[-1]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265:     client, path = _get_conn(__opts__)",
          "266:     items = client.get(\"/\".join((path, \"minions\")), recurse=True)",
          "267:     for id, _ in items.items():",
          "269:         ret.append(id)",
          "270:     return ret",
          "",
          "[Removed Lines]",
          "268:         id = str(id).split(\"/\")[-1]",
          "",
          "[Added Lines]",
          "268:         id = str(id).rsplit(\"/\", maxsplit=1)[-1]",
          "",
          "---------------"
        ],
        "salt/returners/influxdb_return.py||salt/returners/influxdb_return.py": [
          "File: salt/returners/influxdb_return.py -> salt/returners/influxdb_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:     # check the InfluxDB version via the HTTP API",
          "110:     try:",
          "111:         result = requests.get(",
          "113:         )",
          "114:         if influxDBVersionHeader in result.headers:",
          "115:             version = result.headers[influxDBVersionHeader]",
          "",
          "[Removed Lines]",
          "112:             \"http://{}:{}/ping\".format(host, port), auth=(user, password)",
          "",
          "[Added Lines]",
          "112:             \"http://{}:{}/ping\".format(host, port), auth=(user, password), timeout=120",
          "",
          "---------------"
        ],
        "salt/returners/local_cache.py||salt/returners/local_cache.py": [
          "File: salt/returners/local_cache.py -> salt/returners/local_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:     ret = {}",
          "288:     load_p = os.path.join(jid_dir, LOAD_P)",
          "289:     num_tries = 5",
          "290:     for index in range(1, num_tries + 1):",
          "291:         with salt.utils.files.fopen(load_p, \"rb\") as rfh:",
          "292:             try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:     exc = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "297:                     time.sleep(0.25)",
          "298:     else:",
          "299:         log.critical(\"Failed to unpack %s\", load_p)",
          "301:     if ret is None:",
          "302:         ret = {}",
          "303:     minions_cache = [os.path.join(jid_dir, MINIONS_P)]",
          "",
          "[Removed Lines]",
          "300:         raise exc",
          "",
          "[Added Lines]",
          "301:         if exc is not None:",
          "302:             raise exc",
          "",
          "---------------"
        ],
        "salt/returners/mysql.py||salt/returners/mysql.py": [
          "File: salt/returners/mysql.py -> salt/returners/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: import salt.utils.job",
          "149: import salt.utils.json",
          "155: try:",
          "156:     # Trying to import MySQLdb",
          "157:     import MySQLdb",
          "",
          "[Removed Lines]",
          "151: # Let's not allow PyLint complain about string substitution",
          "152: # pylint: disable=W1321,E1321",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "274:                 pass",
          "275:         except OperationalError as exc:",
          "276:             raise salt.exceptions.SaltMasterError(",
          "278:             )",
          "280:     cursor = conn.cursor()",
          "",
          "[Removed Lines]",
          "277:                 \"MySQL returner could not connect to database: {exc}\".format(exc=exc)",
          "",
          "[Added Lines]",
          "273:                 f\"MySQL returner could not connect to database: {exc}\"",
          "",
          "---------------"
        ],
        "salt/returners/pgjsonb.py||salt/returners/pgjsonb.py": [
          "File: salt/returners/pgjsonb.py -> salt/returners/pgjsonb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "170: import salt.utils.data",
          "171: import salt.utils.job",
          "177: try:",
          "178:     import psycopg2",
          "179:     import psycopg2.extras",
          "",
          "[Removed Lines]",
          "173: # Let's not allow PyLint complain about string substitution",
          "174: # pylint: disable=W1321,E1321",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:     }",
          "227:     _options = salt.returners.get_returner_options(",
          "229:         ret,",
          "230:         attrs,",
          "231:         __salt__=__salt__,",
          "",
          "[Removed Lines]",
          "228:         \"returner.{}\".format(__virtualname__),",
          "",
          "[Added Lines]",
          "224:         f\"returner.{__virtualname__}\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "258:             dbname=_options.get(\"db\"),",
          "259:             user=_options.get(\"user\"),",
          "260:             password=_options.get(\"pass\"),",
          "262:         )",
          "263:     except psycopg2.OperationalError as exc:",
          "264:         raise salt.exceptions.SaltMasterError(",
          "266:         )",
          "268:     if conn.server_version is not None and conn.server_version >= 90500:",
          "",
          "[Removed Lines]",
          "265:             \"pgjsonb returner could not connect to database: {exc}\".format(exc=exc)",
          "",
          "[Added Lines]",
          "261:             f\"pgjsonb returner could not connect to database: {exc}\"",
          "",
          "---------------"
        ],
        "salt/returners/splunk.py||salt/returners/splunk.py": [
          "File: salt/returners/splunk.py -> salt/returners/splunk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:             data=salt.utils.json.dumps(data),",
          "211:             headers=headers,",
          "212:             verify=self.verify_ssl,",
          "213:         )",
          "215:         # Print debug info if flag set",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:             timeout=120,",
          "",
          "---------------"
        ],
        "salt/roster/cache.py||salt/roster/cache.py": [
          "File: salt/roster/cache.py -> salt/roster/cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "199: def _minion_lookup(minion_id, key, minion):",
          "200:     grains, pillar, addrs, mine = minion",
          "202:     if key == \"id\":",
          "203:         # Just paste in the minion ID",
          "204:         return minion_id",
          "205:     elif isinstance(key, dict):",
          "206:         # Lookup the key in the dict",
          "207:         for data_id, lookup in key.items():",
          "211:                 if k:",
          "212:                     return k",
          "",
          "[Removed Lines]",
          "208:             ref = {\"pillar\": pillar, \"grain\": grains, \"mine\": mine}[data_id]",
          "210:             for k in _data_lookup(ref, lookup):",
          "",
          "[Added Lines]",
          "202:     def _data_lookup_ref(data_id):",
          "203:         if data_id == \"pillar\":",
          "204:             return pillar",
          "205:         if data_id == \"grains\":",
          "206:             return grains",
          "207:         if data_id == \"mine\":",
          "208:             return mine",
          "216:             for k in _data_lookup(_data_lookup_ref(data_id), lookup):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:         try:",
          "221:             net = ipaddress.ip_network(key, strict=True)",
          "222:         except ValueError:",
          "224:             return None",
          "226:         for addr in addrs[net.version]:",
          "",
          "[Removed Lines]",
          "223:             log.error(\"%s is an invalid CIDR network\", net)",
          "",
          "[Added Lines]",
          "229:             log.error(\"%s is an invalid CIDR network\", key)",
          "",
          "---------------"
        ],
        "salt/runners/asam.py||salt/runners/asam.py": [
          "File: salt/runners/asam.py -> salt/runners/asam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "148: def _make_post_request(url, data, auth, verify=True):",
          "150:     if r.status_code != requests.codes.ok:",
          "151:         r.raise_for_status()",
          "152:     else:",
          "",
          "[Removed Lines]",
          "149:     r = requests.post(url, data=data, auth=auth, verify=verify)",
          "",
          "[Added Lines]",
          "149:     r = requests.post(url, data=data, auth=auth, verify=verify, timeout=120)",
          "",
          "---------------"
        ],
        "salt/runners/launchd.py||salt/runners/launchd.py": [
          "File: salt/runners/launchd.py -> salt/runners/launchd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:         sys.stderr.write(\"Supported programs: '{}'\\n\".format(supported_programs))",
          "52:         sys.exit(-1)",
          "",
          "[Removed Lines]",
          "54:         return plist_sample_text.format(",
          "55:             program=program,",
          "56:             python=sys.executable,",
          "57:             script=os.path.join(os.path.dirname(sys.executable), program),",
          "58:         )",
          "",
          "[Added Lines]",
          "54:     return plist_sample_text.format(",
          "55:         program=program,",
          "56:         python=sys.executable,",
          "57:         script=os.path.join(os.path.dirname(sys.executable), program),",
          "58:     )",
          "",
          "---------------"
        ],
        "salt/runners/pkg.py||salt/runners/pkg.py": [
          "File: salt/runners/pkg.py -> salt/runners/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         for minion in data:",
          "41:             results = data[minion][\"return\"]",
          "42:             for pkg, pkgver in results.items():",
          "44:                     pkgs[pkg] = {pkgver: {\"hosts\": []}}",
          "46:                 if pkgver not in pkgs[pkg].keys():",
          "",
          "[Removed Lines]",
          "43:                 if pkg not in pkgs.keys():",
          "",
          "[Added Lines]",
          "43:                 if pkg not in pkgs:",
          "",
          "---------------"
        ],
        "salt/runners/state.py||salt/runners/state.py": [
          "File: salt/runners/state.py -> salt/runners/state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:         orig_user = __opts__[\"user\"]",
          "107:         __opts__[\"user\"] = __user__",
          "108:         log.debug(",
          "110:         )",
          "111:     except NameError:",
          "112:         log.debug(\"unable to find global user __user__\")",
          "",
          "[Removed Lines]",
          "109:             f\"changed opts user from original '{orig_user}' to global user '{__user__}'\"",
          "",
          "[Added Lines]",
          "109:             \"changed opts user from original '%s' to global user '%s'\",",
          "110:             orig_user,",
          "111:             __user__,",
          "",
          "---------------"
        ],
        "salt/runners/vault.py||salt/runners/vault.py": [
          "File: salt/runners/vault.py -> salt/runners/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:                 if namespace is not None:",
          "85:                     headers = {\"X-Vault-Namespace\": namespace}",
          "86:                 response = requests.post(",
          "88:                 )",
          "89:                 if response.status_code != 200:",
          "90:                     return {\"error\": response.reason}",
          "",
          "[Removed Lines]",
          "87:                     url, headers=headers, json=payload, verify=verify",
          "",
          "[Added Lines]",
          "87:                     url, headers=headers, json=payload, verify=verify, timeout=120",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:             return {\"error\": \"No policies matched minion\"}",
          "119:         log.trace(\"Sending token creation request to Vault\")",
          "122:         if response.status_code != 200:",
          "123:             return {\"error\": response.reason}",
          "",
          "[Removed Lines]",
          "120:         response = requests.post(url, headers=headers, json=payload, verify=verify)",
          "",
          "[Added Lines]",
          "120:         response = requests.post(",
          "121:             url, headers=headers, json=payload, verify=verify, timeout=120",
          "122:         )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "346:         # Add Vault namespace to headers if Vault Enterprise enabled",
          "347:         if namespace is not None:",
          "348:             headers[\"X-Vault-Namespace\"] = namespace",
          "350:         if response.status_code != 200:",
          "351:             return True",
          "352:         return False",
          "",
          "[Removed Lines]",
          "349:         response = requests.get(url, headers=headers, verify=verify)",
          "",
          "[Added Lines]",
          "351:         response = requests.get(url, headers=headers, verify=verify, timeout=120)",
          "",
          "---------------"
        ],
        "salt/scripts.py||salt/scripts.py": [
          "File: salt/scripts.py -> salt/scripts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:     \"\"\"",
          "484:     The main function for salt-cloud",
          "485:     \"\"\"",
          "490:     try:",
          "491:         # Late-imports for CLI performance",
          "492:         import salt.cloud",
          "493:         import salt.cloud.cli",
          "494:     except ImportError as e:",
          "495:         # No salt cloud on Windows",
          "496:         log.error(\"Error importing salt cloud: %s\", e)",
          "497:         print(\"salt-cloud is not available in this system\")",
          "498:         sys.exit(salt.defaults.exitcodes.EX_UNAVAILABLE)",
          "",
          "[Removed Lines]",
          "486:     # Define 'salt' global so we may use it after ImportError. Otherwise,",
          "487:     # UnboundLocalError will be raised.",
          "488:     global salt  # pylint: disable=W0602",
          "",
          "[Added Lines]",
          "492:         import salt.defaults.exitcodes",
          "",
          "---------------"
        ],
        "salt/serializers/msgpack.py||salt/serializers/msgpack.py": [
          "File: salt/serializers/msgpack.py -> salt/serializers/msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     Implements MsgPack serializer.",
          "6: \"\"\"",
          "10: import logging",
          "12: import salt.utils.msgpack",
          "13: from salt.serializers import DeserializationError, SerializationError",
          "15: log = logging.getLogger(__name__)",
          "102:     Serialize Python data to MsgPack.",
          "104:     :param obj: the data structure to serialize",
          "105:     :param options: options given to lower msgpack module.",
          "109:     Deserialize any string of stream like object into a Python data structure.",
          "111:     :param stream_or_string: stream or string to deserialize.",
          "112:     :param options: options given to lower msgpack module.",
          "",
          "[Removed Lines]",
          "9: import copy",
          "16: available = salt.utils.msgpack.HAS_MSGPACK",
          "19: if not available:",
          "21:     def _fail():",
          "22:         raise RuntimeError(\"msgpack is not available\")",
          "24:     def _serialize(obj, **options):",
          "25:         _fail()",
          "27:     def _deserialize(stream_or_string, **options):",
          "28:         _fail()",
          "30: elif salt.utils.msgpack.version >= (1, 0, 0):",
          "32:     def _serialize(obj, **options):",
          "33:         try:",
          "34:             return salt.utils.msgpack.dumps(obj, **options)",
          "35:         except Exception as error:  # pylint: disable=broad-except",
          "36:             raise SerializationError(error)",
          "38:     def _deserialize(stream_or_string, **options):",
          "39:         try:",
          "40:             options.setdefault(\"use_list\", True)",
          "41:             options.setdefault(\"raw\", False)",
          "42:             return salt.utils.msgpack.loads(stream_or_string, **options)",
          "43:         except Exception as error:  # pylint: disable=broad-except",
          "44:             raise DeserializationError(error)",
          "46: elif salt.utils.msgpack.version >= (0, 2, 0):",
          "48:     def _serialize(obj, **options):",
          "49:         try:",
          "50:             return salt.utils.msgpack.dumps(obj, **options)",
          "51:         except Exception as error:  # pylint: disable=broad-except",
          "52:             raise SerializationError(error)",
          "54:     def _deserialize(stream_or_string, **options):",
          "55:         try:",
          "56:             options.setdefault(\"use_list\", True)",
          "57:             options.setdefault(\"encoding\", \"utf-8\")",
          "58:             return salt.utils.msgpack.loads(stream_or_string, **options)",
          "59:         except Exception as error:  # pylint: disable=broad-except",
          "60:             raise DeserializationError(error)",
          "62: else:  # msgpack.version < 0.2.0",
          "64:     def _encoder(obj):",
          "65:         \"\"\"",
          "66:         Since OrderedDict is identified as a dictionary, we can't make use of",
          "67:         msgpack custom types, we will need to convert by hand.",
          "69:         This means iterating through all elements of dictionaries, lists and",
          "70:         tuples.",
          "71:         \"\"\"",
          "72:         if isinstance(obj, dict):",
          "73:             data = [(key, _encoder(value)) for key, value in obj.items()]",
          "74:             return dict(data)",
          "75:         elif isinstance(obj, (list, tuple)):",
          "76:             return [_encoder(value) for value in obj]",
          "77:         return copy.copy(obj)",
          "79:     def _decoder(obj):",
          "80:         return obj",
          "82:     def _serialize(obj, **options):",
          "83:         try:",
          "84:             obj = _encoder(obj)",
          "85:             return salt.utils.msgpack.dumps(obj, **options)",
          "86:         except Exception as error:  # pylint: disable=broad-except",
          "87:             raise SerializationError(error)",
          "89:     def _deserialize(stream_or_string, **options):",
          "90:         options.setdefault(\"use_list\", True)",
          "91:         try:",
          "92:             obj = salt.utils.msgpack.loads(stream_or_string)",
          "93:             return _decoder(obj)",
          "94:         except Exception as error:  # pylint: disable=broad-except",
          "95:             raise DeserializationError(error)",
          "98: serialize = _serialize",
          "99: deserialize = _deserialize",
          "101: serialize.__doc__ = \"\"\"",
          "106: \"\"\"",
          "108: deserialize.__doc__ = \"\"\"",
          "113: \"\"\"",
          "",
          "[Added Lines]",
          "16: __all__ = [\"deserialize\", \"serialize\", \"available\"]",
          "18: available = True",
          "21: def serialize(obj, **options):",
          "22:     \"\"\"",
          "27:     \"\"\"",
          "28:     try:",
          "29:         return salt.utils.msgpack.dumps(obj, **options)",
          "30:     except Exception as error:  # pylint: disable=broad-except",
          "31:         raise SerializationError(error)",
          "34: def deserialize(stream_or_string, **options):",
          "35:     \"\"\"",
          "40:     \"\"\"",
          "41:     try:",
          "42:         options.setdefault(\"use_list\", True)",
          "43:         options.setdefault(\"raw\", False)",
          "44:         return salt.utils.msgpack.loads(stream_or_string, **options)",
          "45:     except Exception as error:  # pylint: disable=broad-except",
          "46:         raise DeserializationError(error)",
          "",
          "---------------"
        ],
        "salt/serializers/yaml.py||salt/serializers/yaml.py": [
          "File: salt/serializers/yaml.py -> salt/serializers/yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:     @staticmethod",
          "92:     def yaml_dumper(dumper, data):",
          "96: class Loader(BaseLoader):  # pylint: disable=W0232",
          "",
          "[Removed Lines]",
          "93:         return dumper.represent_scalar(EncryptedString.yaml_tag, data.__str__())",
          "",
          "[Added Lines]",
          "93:         return dumper.represent_scalar(EncryptedString.yaml_tag, str(data))",
          "",
          "---------------"
        ],
        "salt/state.py||salt/state.py": [
          "File: salt/state.py -> salt/state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: ).union(STATE_RUNTIME_KEYWORDS)",
          "136: def split_low_tag(tag):",
          "",
          "[Removed Lines]",
          "129: def _odict_hashable(self):",
          "130:     return id(self)",
          "133: OrderedDict.__hash__ = _odict_hashable",
          "",
          "[Added Lines]",
          "129: class HashableOrderedDict(OrderedDict):",
          "130:     def __hash__(self):",
          "131:         return id(self)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "448:         errors = []",
          "449:         if not isinstance(high, dict):",
          "450:             errors.append(\"High data is not a dictionary and is invalid\")",
          "452:         if not errors:",
          "453:             for name, body in high.items():",
          "454:                 try:",
          "",
          "[Removed Lines]",
          "451:         reqs = OrderedDict()",
          "",
          "[Added Lines]",
          "449:         reqs = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1490:         errors = []",
          "1491:         if not isinstance(high, dict):",
          "1492:             errors.append(\"High data is not a dictionary and is invalid\")",
          "1494:         for name, body in high.items():",
          "1495:             try:",
          "1496:                 if name.startswith(\"__\"):",
          "",
          "[Removed Lines]",
          "1493:         reqs = OrderedDict()",
          "",
          "[Added Lines]",
          "1491:         reqs = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1570:                                 # It is a list, verify that the members of the",
          "1571:                                 # list are all single key dicts.",
          "1572:                                 else:",
          "1574:                                     for req in arg[argfirst]:",
          "1575:                                         if isinstance(req, str):",
          "1576:                                             req = {\"id\": req}",
          "",
          "[Removed Lines]",
          "1573:                                     reqs[name] = OrderedDict(state=state)",
          "",
          "[Added Lines]",
          "1571:                                     reqs[name] = HashableOrderedDict(state=state)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1945:                                 # Not a use requisite_in",
          "1946:                                 found = False",
          "1947:                                 if name not in extend:",
          "1949:                                 if \".\" in _state:",
          "1950:                                     errors.append(",
          "1951:                                         \"Invalid requisite in {}: {} for \"",
          "",
          "[Removed Lines]",
          "1948:                                     extend[name] = OrderedDict()",
          "",
          "[Added Lines]",
          "1946:                                     extend[name] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2033:                                     if key == \"prereq_in\":",
          "2034:                                         # Add prerequired to origin",
          "2035:                                         if id_ not in extend:",
          "2037:                                         if state not in extend[id_]:",
          "2038:                                             extend[id_][state] = []",
          "2039:                                         extend[id_][state].append(",
          "",
          "[Removed Lines]",
          "2036:                                             extend[id_] = OrderedDict()",
          "",
          "[Added Lines]",
          "2034:                                             extend[id_] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2046:                                         )",
          "2047:                                         for ext_id, _req_state in ext_ids:",
          "2048:                                             if ext_id not in extend:",
          "2050:                                             if _req_state not in extend[ext_id]:",
          "2051:                                                 extend[ext_id][_req_state] = []",
          "2052:                                             extend[ext_id][_req_state].append(",
          "",
          "[Removed Lines]",
          "2049:                                                 extend[ext_id] = OrderedDict()",
          "",
          "[Added Lines]",
          "2047:                                                 extend[ext_id] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2064:                                                 continue",
          "2065:                                             ext_args = state_args(ext_id, _state, high)",
          "2066:                                             if ext_id not in extend:",
          "2068:                                             if _req_state not in extend[ext_id]:",
          "2069:                                                 extend[ext_id][_req_state] = []",
          "2070:                                             ignore_args = req_in_all.union(ext_args)",
          "",
          "[Removed Lines]",
          "2067:                                                 extend[ext_id] = OrderedDict()",
          "",
          "[Added Lines]",
          "2065:                                                 extend[ext_id] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2093:                                                 continue",
          "2094:                                             loc_args = state_args(id_, state, high)",
          "2095:                                             if id_ not in extend:",
          "2097:                                             if state not in extend[id_]:",
          "2098:                                                 extend[id_][state] = []",
          "2099:                                             ignore_args = req_in_all.union(loc_args)",
          "",
          "[Removed Lines]",
          "2096:                                                 extend[id_] = OrderedDict()",
          "",
          "[Added Lines]",
          "2094:                                                 extend[id_] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2113:                                         continue",
          "2114:                                     found = False",
          "2115:                                     if name not in extend:",
          "2117:                                     if _state not in extend[name]:",
          "2118:                                         extend[name][_state] = []",
          "2119:                                     extend[name][\"__env__\"] = body[\"__env__\"]",
          "",
          "[Removed Lines]",
          "2116:                                         extend[name] = OrderedDict()",
          "",
          "[Added Lines]",
          "2114:                                         extend[name] = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2948:                                 \" with name [{}]\".format(req_key, chunk[\"name\"])",
          "2949:                             )",
          "2950:                         except TypeError:",
          "2952:                             # however on Python 3 it will raise a TypeError",
          "2953:                             # This was found when running tests.unit.test_state.StateCompilerTestCase.test_render_error_on_invalid_requisite",
          "2954:                             raise SaltRenderError(",
          "",
          "[Removed Lines]",
          "2951:                             # On Python 2, the above req_val, being an OrderedDict, will raise a KeyError,",
          "",
          "[Added Lines]",
          "2949:                             # On Python 2, the above req_val, being an HashableOrderedDict, will raise a KeyError,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3070:             self.opts.get(\"state_events\", True) or fire_event",
          "3071:         ):",
          "3072:             if not self.opts.get(\"master_uri\"):",
          "3075:                         self.opts, self.opts[\"sock_dir\"], listen=False",
          "3078:             else:",
          "3079:                 ev_func = self.functions[\"event.fire_master\"]",
          "",
          "[Removed Lines]",
          "3073:                 ev_func = (",
          "3074:                     lambda ret, tag, preload=None: salt.utils.event.get_master_event(",
          "3076:                     ).fire_event(ret, tag)",
          "3077:                 )",
          "",
          "[Added Lines]",
          "3072:                 def ev_func(ret, tag, preload=None):",
          "3073:                     with salt.utils.event.get_master_event(",
          "3075:                     ) as _evt:",
          "3076:                         _evt.fire_event(ret, tag)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3738:     def items(self):",
          "3739:         self._fill()",
          "3740:         ret = []",
          "3743:         return ret",
          "",
          "[Removed Lines]",
          "3741:         for saltenv, states in self._avail.items():",
          "3742:             ret.append((saltenv, self.__getitem__(saltenv)))",
          "",
          "[Added Lines]",
          "3741:         for saltenv in self._avail:",
          "3742:             ret.append((saltenv, self[saltenv]))",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3756:         self.opts = self.__gen_opts(opts)",
          "3757:         self.iorder = 10000",
          "3758:         self.avail = self.__gather_avail()",
          "3761:     def __gather_avail(self):",
          "3762:         \"\"\"",
          "",
          "[Removed Lines]",
          "3759:         self.building_highstate = OrderedDict()",
          "",
          "[Added Lines]",
          "3759:         self.building_highstate = HashableOrderedDict()",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3990:         environment from the top file will be considered, and it too will be",
          "3991:         ignored if that environment was defined in the \"base\" top file.",
          "3992:         \"\"\"",
          "3995:         # Check base env first as it is authoritative",
          "3997:         for ctop in base_tops:",
          "3998:             for saltenv, targets in ctop.items():",
          "3999:                 if saltenv == \"include\":",
          "",
          "[Removed Lines]",
          "3993:         top = DefaultOrderedDict(OrderedDict)",
          "3996:         base_tops = tops.pop(\"base\", DefaultOrderedDict(OrderedDict))",
          "",
          "[Added Lines]",
          "3993:         top = DefaultOrderedDict(HashableOrderedDict)",
          "3996:         base_tops = tops.pop(\"base\", DefaultOrderedDict(HashableOrderedDict))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4046:         sections matching a given saltenv, which appear in a different",
          "4047:         saltenv's top file, will be ignored.",
          "4048:         \"\"\"",
          "4050:         for cenv, ctops in tops.items():",
          "4051:             if all([x == {} for x in ctops]):",
          "4052:                 # No top file found in this env, check the default_top",
          "",
          "[Removed Lines]",
          "4049:         top = DefaultOrderedDict(OrderedDict)",
          "",
          "[Added Lines]",
          "4049:         top = DefaultOrderedDict(HashableOrderedDict)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4127:                     states.append(item)",
          "4128:             return match_type, states",
          "4131:         for ctops in tops.values():",
          "4132:             for ctop in ctops:",
          "4133:                 for saltenv, targets in ctop.items():",
          "",
          "[Removed Lines]",
          "4130:         top = DefaultOrderedDict(OrderedDict)",
          "",
          "[Added Lines]",
          "4130:         top = DefaultOrderedDict(HashableOrderedDict)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4223:         Returns:",
          "4224:         {'saltenv': ['state1', 'state2', ...]}",
          "4225:         \"\"\"",
          "4227:         # pylint: disable=cell-var-from-loop",
          "4228:         for saltenv, body in top.items():",
          "4229:             if self.opts[\"saltenv\"]:",
          "",
          "[Removed Lines]",
          "4226:         matches = DefaultOrderedDict(OrderedDict)",
          "",
          "[Added Lines]",
          "4226:         matches = DefaultOrderedDict(HashableOrderedDict)",
          "",
          "---------------"
        ],
        "salt/states/archive.py||salt/states/archive.py": [
          "File: salt/states/archive.py -> salt/states/archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:             log.warning(",
          "120:                 \"Failed to update checksum for %s: %s\",",
          "121:                 path,",
          "123:                 exc_info=True,",
          "124:             )",
          "",
          "[Removed Lines]",
          "122:                 exc.__str__(),",
          "",
          "[Added Lines]",
          "122:                 exc,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1066:             )",
          "1067:         except Exception as exc:  # pylint: disable=broad-except",
          "1068:             msg = \"Failed to cache {}: {}\".format(",
          "1070:             )",
          "1071:             log.exception(msg)",
          "1072:             ret[\"comment\"] = msg",
          "",
          "[Removed Lines]",
          "1069:                 salt.utils.url.redact_http_basic_auth(source_match), exc.__str__()",
          "",
          "[Added Lines]",
          "1069:                 salt.utils.url.redact_http_basic_auth(source_match), exc",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1208:                 else:",
          "1209:                     ret[\"comment\"] = (",
          "1210:                         \"Failed to check for existence of if_missing path \"",
          "1212:                     )",
          "1213:                     return ret",
          "1214:         else:",
          "",
          "[Removed Lines]",
          "1211:                         \"({}): {}\".format(if_missing, exc.__str__())",
          "",
          "[Added Lines]",
          "1211:                         \"({}): {}\".format(if_missing, exc)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1237:                             # that dir will raise an ENOTDIR OSError. So we",
          "1238:                             # expect these and will only abort here if the",
          "1239:                             # error code is something else.",
          "1241:                             return ret",
          "1243:             if incorrect_type:",
          "",
          "[Removed Lines]",
          "1240:                             ret[\"comment\"] = exc.__str__()",
          "",
          "[Added Lines]",
          "1240:                             ret[\"comment\"] = str(exc)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1288:                                 extraction_needed = True",
          "1289:                             except OSError as exc:",
          "1290:                                 if exc.errno != errno.ENOENT:",
          "1292:                         if errors:",
          "1293:                             msg = (",
          "1294:                                 \"One or more paths existed by were the incorrect \"",
          "",
          "[Removed Lines]",
          "1291:                                     errors.append(exc.__str__())",
          "",
          "[Added Lines]",
          "1291:                                     errors.append(str(exc))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1369:                     ret[\"changes\"].setdefault(\"removed\", []).append(full_path)",
          "1370:                 except OSError as exc:",
          "1371:                     if exc.errno != errno.ENOENT:",
          "1374:             if errors:",
          "1375:                 msg = (",
          "",
          "[Removed Lines]",
          "1372:                         errors.append(exc.__str__())",
          "",
          "[Added Lines]",
          "1372:                         errors.append(str(exc))",
          "",
          "---------------"
        ],
        "salt/states/boto3_route53.py||salt/states/boto3_route53.py": [
          "File: salt/states/boto3_route53.py -> salt/states/boto3_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: \"\"\"",
          "62: # keep lint from choking",
          "63: # pylint: disable=W0106",
          "67: import logging",
          "",
          "[Removed Lines]",
          "64: # pylint: disable=E1320",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71: import salt.utils.dictupdate",
          "72: from salt.exceptions import SaltInvocationError",
          "77: def __virtual__():",
          "",
          "[Removed Lines]",
          "74: log = logging.getLogger(__name__)  # pylint: disable=W1699",
          "",
          "[Added Lines]",
          "73: log = logging.getLogger(__name__)",
          "",
          "---------------"
        ],
        "salt/states/docker_container.py||salt/states/docker_container.py": [
          "File: salt/states/docker_container.py -> salt/states/docker_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1686:         if exc.info is not None:",
          "1687:             return _format_comments(ret, exc.info)",
          "1688:         else:",
          "1690:             return ret",
          "1692:     comments = []",
          "",
          "[Removed Lines]",
          "1689:             ret[\"comment\"] = exc.__str__()",
          "",
          "[Added Lines]",
          "1689:             ret[\"comment\"] = str(exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1753:         return _format_comments(ret, comments)",
          "1754:     except Exception as exc:  # pylint: disable=broad-except",
          "1755:         ret[\"result\"] = False",
          "1757:         if (",
          "1758:             isinstance(exc, CommandExecutionError)",
          "1759:             and isinstance(exc.info, dict)",
          "",
          "[Removed Lines]",
          "1756:         msg = exc.__str__()",
          "",
          "[Added Lines]",
          "1756:         msg = str(exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1810:                 # of the network's subnet. An exception will be raised once",
          "1811:                 # you try to start the container, however.",
          "1812:                 ret[\"result\"] = False",
          "1814:                 return _format_comments(ret, comments)",
          "1816:         post_net_connect = __salt__[\"docker.inspect_container\"](temp_container_name)",
          "",
          "[Removed Lines]",
          "1813:                 comments.append(exc.__str__())",
          "",
          "[Added Lines]",
          "1813:                 comments.append(str(exc))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1943:                             )",
          "1944:                             disconnected = True",
          "1945:                     except CommandExecutionError as exc:",
          "1948:                     if net_name in networks:",
          "1949:                         try:",
          "",
          "[Removed Lines]",
          "1946:                         errors.append(exc.__str__())",
          "",
          "[Added Lines]",
          "1946:                         errors.append(str(exc))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1952:                             )",
          "1953:                             connected = True",
          "1954:                         except CommandExecutionError as exc:",
          "1956:                             if disconnected:",
          "1957:                                 # We succeeded in disconnecting but failed",
          "1958:                                 # to reconnect. This can happen if the",
          "",
          "[Removed Lines]",
          "1955:                             errors.append(exc.__str__())",
          "",
          "[Added Lines]",
          "1955:                             errors.append(str(exc))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2205:         if exc.info is not None:",
          "2206:             return _format_comments(ret, exc.info)",
          "2207:         else:",
          "2209:             return ret",
          "2211:     if __opts__[\"test\"]:",
          "",
          "[Removed Lines]",
          "2208:             ret[\"comment\"] = exc.__str__()",
          "",
          "[Added Lines]",
          "2208:             ret[\"comment\"] = str(exc)",
          "",
          "---------------"
        ],
        "salt/states/docker_image.py||salt/states/docker_image.py": [
          "File: salt/states/docker_image.py -> salt/states/docker_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:     try:",
          "248:         image_info = __salt__[\"docker.inspect_image\"](full_image)",
          "249:     except CommandExecutionError as exc:",
          "251:         if \"404\" in msg:",
          "252:             # Image not present",
          "253:             image_info = None",
          "",
          "[Removed Lines]",
          "250:         msg = exc.__str__()",
          "",
          "[Added Lines]",
          "250:         msg = str(exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355:     try:",
          "356:         __salt__[\"docker.inspect_image\"](full_image)",
          "357:     except CommandExecutionError as exc:",
          "359:         if \"404\" not in msg:",
          "360:             error = \"Failed to inspect image '{}' after it was {}: {}\".format(",
          "361:                 full_image, action, msg",
          "",
          "[Removed Lines]",
          "358:         msg = exc.__str__()",
          "",
          "[Added Lines]",
          "358:         msg = str(exc)",
          "",
          "---------------"
        ],
        "salt/states/docker_network.py||salt/states/docker_network.py": [
          "File: salt/states/docker_network.py -> salt/states/docker_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "523:     try:",
          "524:         network = __salt__[\"docker.inspect_network\"](name)",
          "525:     except CommandExecutionError as exc:",
          "527:         if \"404\" in msg:",
          "528:             # Network not present",
          "529:             network = None",
          "",
          "[Removed Lines]",
          "526:         msg = exc.__str__()",
          "",
          "[Added Lines]",
          "526:         msg = str(exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "579:         )",
          "580:     except Exception as exc:  # pylint: disable=broad-except",
          "582:         return ret",
          "584:     # Separate out the IPAM config options and build the IPAM config dict",
          "",
          "[Removed Lines]",
          "581:         ret[\"comment\"] = exc.__str__()",
          "",
          "[Added Lines]",
          "581:         ret[\"comment\"] = str(exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "608:             )",
          "609:         except Exception as exc:  # pylint: disable=broad-except",
          "611:             return ret",
          "613:     # We'll turn this off if we decide below that creating the network is not",
          "",
          "[Removed Lines]",
          "610:             ret[\"comment\"] = exc.__str__()",
          "",
          "[Added Lines]",
          "610:             ret[\"comment\"] = str(exc)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "662:             )",
          "663:         except CommandExecutionError as exc:",
          "664:             ret[\"comment\"] = \"Failed to create temp network for comparison: {}\".format(",
          "666:             )",
          "667:             return ret",
          "668:         else:",
          "",
          "[Removed Lines]",
          "665:                 exc.__str__()",
          "",
          "[Added Lines]",
          "665:                 str(exc)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "674:             try:",
          "675:                 temp_net_info = __salt__[\"docker.inspect_network\"](temp_net_name)",
          "676:             except CommandExecutionError as exc:",
          "680:                 return ret",
          "681:             else:",
          "682:                 temp_net_info[\"EnableIPv6\"] = bool(enable_ipv6)",
          "",
          "[Removed Lines]",
          "677:                 ret[\"comment\"] = \"Failed to inspect temp network: {}\".format(",
          "678:                     exc.__str__()",
          "679:                 )",
          "",
          "[Added Lines]",
          "677:                 ret[\"comment\"] = \"Failed to inspect temp network: {}\".format(str(exc))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "690:             existing_pool_count = len(network[\"IPAM\"][\"Config\"])",
          "691:             desired_pool_count = len(temp_net_info[\"IPAM\"][\"Config\"])",
          "697:             if (",
          "698:                 desired_pool_count == 0",
          "",
          "[Removed Lines]",
          "693:             is_default_pool = (",
          "694:                 lambda x: True if sorted(x) == [\"Gateway\", \"Subnet\"] else False",
          "695:             )",
          "",
          "[Added Lines]",
          "691:             def is_default_pool(x):",
          "692:                 return True if sorted(x) == [\"Gateway\", \"Subnet\"] else False",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "776:                 __salt__[\"docker.remove_network\"](temp_net_name)",
          "777:             except CommandExecutionError as exc:",
          "778:                 ret.setdefault(\"warnings\", []).append(",
          "782:                 )",
          "784:     if create_network:",
          "",
          "[Removed Lines]",
          "779:                     \"Failed to remove temp network '{}': {}.\".format(",
          "780:                         temp_net_name, exc.__str__()",
          "781:                     )",
          "",
          "[Added Lines]",
          "776:                     \"Failed to remove temp network '{}': {}.\".format(temp_net_name, exc)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "804:             )",
          "805:         except Exception as exc:  # pylint: disable=broad-except",
          "809:             return ret",
          "810:         else:",
          "811:             action = \"recreated\" if network is not None else \"created\"",
          "",
          "[Removed Lines]",
          "806:             ret[\"comment\"] = \"Failed to create network '{}': {}\".format(",
          "807:                 name, exc.__str__()",
          "808:             )",
          "",
          "[Added Lines]",
          "801:             ret[\"comment\"] = \"Failed to create network '{}': {}\".format(name, exc)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "859:                 )",
          "860:             except CommandExecutionError as exc:",
          "861:                 if not connect_kwargs:",
          "863:                 else:",
          "864:                     # We failed to reconnect with the container's old IP",
          "865:                     # configuration. Reconnect using automatic IP config.",
          "866:                     try:",
          "867:                         __salt__[\"docker.connect_container_to_network\"](cid, name)",
          "868:                     except CommandExecutionError as exc:",
          "870:                     else:",
          "871:                         ret[\"changes\"].setdefault(",
          "872:                             \"reconnected\"",
          "",
          "[Removed Lines]",
          "862:                     errors.append(exc.__str__())",
          "869:                         errors.append(exc.__str__())",
          "",
          "[Added Lines]",
          "855:                     errors.append(str(exc))",
          "862:                         errors.append(str(exc))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "917:     try:",
          "918:         network = __salt__[\"docker.inspect_network\"](name)",
          "919:     except CommandExecutionError as exc:",
          "921:         if \"404\" in msg:",
          "922:             # Network not present",
          "923:             network = None",
          "",
          "[Removed Lines]",
          "920:         msg = exc.__str__()",
          "",
          "[Added Lines]",
          "913:         msg = str(exc)",
          "",
          "---------------"
        ],
        "salt/states/environ.py||salt/states/environ.py": [
          "File: salt/states/environ.py -> salt/states/environ.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:                             r\" Manager\\Environment\"",
          "132:                         )",
          "134:                     out = __utils__[\"reg.read_value\"](",
          "135:                         permanent_hive, permanent_key, _norm_key(key)",
          "136:                     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:                     # pylint: disable=cell-var-from-loop",
          "",
          "---------------"
        ],
        "salt/states/file.py||salt/states/file.py": [
          "File: salt/states/file.py -> salt/states/file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "567:     like directory or recurse has a clean.",
          "568:     \"\"\"",
          "570:     def _is_child(path, directory):",
          "571:         \"\"\"",
          "572:         Check whether ``path`` is child of ``directory``",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:     walk_ret = set()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1234:     if os.path.isfile(name):",
          "1235:         with salt.utils.winapi.Com():",
          "1237:             scut = shell.CreateShortcut(name)",
          "1238:             state_checks = [scut.TargetPath.lower() == target.lower()]",
          "1239:             if arguments is not None:",
          "",
          "[Removed Lines]",
          "1236:             shell = win32com.client.Dispatch(\"WScript.Shell\")",
          "",
          "[Added Lines]",
          "1238:             shell = win32com.client.Dispatch(  # pylint: disable=used-before-assignment",
          "1239:                 \"WScript.Shell\"",
          "1240:             )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "9063:             name, saltenv=saltenv, source_hash=source_sum.get(\"hsum\"), use_etag=use_etag",
          "9064:         )",
          "9065:     except Exception as exc:  # pylint: disable=broad-except",
          "9067:         return ret",
          "9069:     if not local_copy:",
          "",
          "[Removed Lines]",
          "9066:         ret[\"comment\"] = salt.utils.url.redact_http_basic_auth(exc.__str__())",
          "",
          "[Added Lines]",
          "9070:         ret[\"comment\"] = salt.utils.url.redact_http_basic_auth(str(exc))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9150:         try:",
          "9151:             os.remove(local_copy)",
          "9152:         except Exception as exc:  # pylint: disable=broad-except",
          "9154:         else:",
          "9155:             ret[\"result\"] = True",
          "9156:             ret[\"changes\"][\"deleted\"] = True",
          "",
          "[Removed Lines]",
          "9153:             ret[\"comment\"] = \"Failed to delete {}: {}\".format(local_copy, exc.__str__())",
          "",
          "[Added Lines]",
          "9157:             ret[\"comment\"] = \"Failed to delete {}: {}\".format(local_copy, exc)",
          "",
          "---------------"
        ],
        "salt/states/git.py||salt/states/git.py": [
          "File: salt/states/git.py -> salt/states/git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "146: def _uptodate(ret, target, comments=None, local_changes=False):",
          "148:     if local_changes:",
          "149:         ret[\"comment\"] += (",
          "150:             \", but with uncommitted changes. Set 'force_reset' to True to \"",
          "",
          "[Removed Lines]",
          "147:     ret[\"comment\"] = \"Repository {} is up-to-date\".format(target)",
          "",
          "[Added Lines]",
          "147:     ret[\"comment\"] = f\"Repository {target} is up-to-date\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177: def _already_cloned(ret, target, branch=None, comments=None):",
          "178:     ret[\"result\"] = True",
          "179:     ret[\"comment\"] = \"Repository already exists at {}{}\".format(",
          "181:     )",
          "182:     if comments:",
          "183:         ret[\"comment\"] += \"\\n\\nChanges {}made: {}\".format(",
          "",
          "[Removed Lines]",
          "180:         target, \" and is checked out to branch '{}'\".format(branch) if branch else \"\"",
          "",
          "[Added Lines]",
          "180:         target, f\" and is checked out to branch '{branch}'\" if branch else \"\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "234:         ret,",
          "235:         \"Repository would be updated {}{}, but {}. Set 'force_reset' to \"",
          "236:         \"True{} to force this update{}.{}\".format(",
          "241:             if _need_branch_change(branch, local_branch)",
          "242:             else \"\",",
          "243:             \"this is not a fast-forward merge\"",
          "",
          "[Removed Lines]",
          "237:             \"from {} to {}\".format(pre, post)",
          "238:             if local_changes and pre != post",
          "239:             else \"to {}\".format(post),",
          "240:             \" (after checking out local branch '{}')\".format(branch)",
          "",
          "[Added Lines]",
          "237:             f\"from {pre} to {post}\" if local_changes and pre != post else f\"to {post}\",",
          "238:             f\" (after checking out local branch '{branch}')\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "619:         return _fail(ret, \"'target' argument is required\")",
          "621:     if not rev:",
          "626:     if force_reset not in (True, False, \"remote-changes\"):",
          "627:         return _fail(",
          "",
          "[Removed Lines]",
          "622:         return _fail(",
          "623:             ret, \"'{}' is not a valid value for the 'rev' argument\".format(rev)",
          "624:         )",
          "",
          "[Added Lines]",
          "620:         return _fail(ret, f\"'{rev}' is not a valid value for the 'rev' argument\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "635:         if not isinstance(target, str):",
          "636:             target = str(target)",
          "637:         if not os.path.isabs(target):",
          "639:     if branch is not None and not isinstance(branch, str):",
          "640:         branch = str(branch)",
          "641:     if user is not None and not isinstance(user, str):",
          "",
          "[Removed Lines]",
          "638:             return _fail(ret, \"target '{}' is not an absolute path\".format(target))",
          "",
          "[Added Lines]",
          "634:             return _fail(ret, f\"target '{target}' is not an absolute path\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "656:                     ident_path = __salt__[\"cp.cache_file\"](ident_path, __env__)",
          "657:                 except OSError as exc:",
          "658:                     log.exception(\"Failed to cache %s\", ident_path)",
          "662:             if not os.path.isabs(ident_path):",
          "666:     if https_user is not None and not isinstance(https_user, str):",
          "667:         https_user = str(https_user)",
          "668:     if https_pass is not None and not isinstance(https_pass, str):",
          "",
          "[Removed Lines]",
          "659:                     return _fail(",
          "660:                         ret, \"identity '{}' does not exist.\".format(ident_path)",
          "661:                     )",
          "663:                 return _fail(",
          "664:                     ret, \"identity '{}' is not an absolute path\".format(ident_path)",
          "665:                 )",
          "",
          "[Added Lines]",
          "655:                     return _fail(ret, f\"identity '{ident_path}' does not exist.\")",
          "657:                 return _fail(ret, f\"identity '{ident_path}' is not an absolute path\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "681:     if os.path.isfile(target):",
          "682:         return _fail(",
          "683:             ret,",
          "685:         )",
          "687:     try:",
          "",
          "[Removed Lines]",
          "684:             \"Target '{}' exists and is a regular file, cannot proceed\".format(target),",
          "",
          "[Added Lines]",
          "676:             f\"Target '{target}' exists and is a regular file, cannot proceed\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "689:             name, https_user, https_pass, https_only=True",
          "690:         )",
          "691:     except ValueError as exc:",
          "694:     redacted_fetch_url = salt.utils.url.redact_http_basic_auth(desired_fetch_url)",
          "",
          "[Removed Lines]",
          "692:         return _fail(ret, exc.__str__())",
          "",
          "[Added Lines]",
          "684:         return _fail(ret, str(exc))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "731:             output_encoding=output_encoding,",
          "732:         )",
          "733:     except CommandExecutionError as exc:",
          "736:     if \"HEAD\" in all_remote_refs:",
          "737:         head_rev = all_remote_refs[\"HEAD\"]",
          "",
          "[Removed Lines]",
          "734:         return _fail(ret, \"Failed to check remote refs: {}\".format(_strip_exc(exc)))",
          "",
          "[Added Lines]",
          "726:         return _fail(ret, f\"Failed to check remote refs: {_strip_exc(exc)}\")",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "825:             # remote repo.",
          "826:             return _fail(",
          "827:                 ret,",
          "829:             )",
          "831:     git_ver = Version(__salt__[\"git.version\"](versioninfo=False))",
          "",
          "[Removed Lines]",
          "828:                 \"No revision matching '{}' exists in the remote repository\".format(rev),",
          "",
          "[Added Lines]",
          "820:                 f\"No revision matching '{rev}' exists in the remote repository\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1067:                 if (not revs_match and not update_head) and (",
          "1068:                     branch is None or branch == local_branch",
          "1069:                 ):",
          "1070:                     ret[\"comment\"] = (",
          "1071:                         \"{} is already present and local HEAD ({}) does not \"",
          "1072:                         \"match, but update_head=False. HEAD has not been \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1062:                     # pylint: disable=used-before-assignment",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1200:                     output_encoding=output_encoding,",
          "1201:                 )",
          "1202:                 if fetch_url is None:",
          "1206:                     ret[\"changes\"][\"new\"] = name + \" => \" + remote",
          "1207:                 else:",
          "1208:                     comments.append(",
          "",
          "[Removed Lines]",
          "1203:                     comments.append(",
          "1204:                         \"Remote '{}' set to {}\".format(remote, redacted_fetch_url)",
          "1205:                     )",
          "",
          "[Added Lines]",
          "1196:                     comments.append(f\"Remote '{remote}' set to {redacted_fetch_url}\")",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1217:                 if __opts__[\"test\"]:",
          "1218:                     actions = []",
          "1219:                     if not has_remote_rev:",
          "1221:                     if (not revs_match) and (",
          "1222:                         update_head or (branch is not None and branch != local_branch)",
          "1223:                     ):",
          "",
          "[Removed Lines]",
          "1220:                         actions.append(\"Remote '{}' would be fetched\".format(remote))",
          "",
          "[Added Lines]",
          "1211:                         actions.append(f\"Remote '{remote}' would be fetched\")",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1418:                     else:",
          "1419:                         if fetch_changes:",
          "1420:                             comments.append(",
          "1422:                             )",
          "1424:                     try:",
          "",
          "[Removed Lines]",
          "1421:                                 \"{} was fetched, resulting in updated refs\".format(name)",
          "",
          "[Added Lines]",
          "1412:                                 f\"{name} was fetched, resulting in updated refs\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1518:                             \"as a starting point\".format(branch, remote_loc)",
          "1519:                         )",
          "1520:                     else:",
          "1523:                 if fast_forward is False:",
          "1524:                     __salt__[\"git.reset\"](",
          "",
          "[Removed Lines]",
          "1521:                         comments.append(\"'{}' was checked out\".format(checkout_rev))",
          "",
          "[Added Lines]",
          "1512:                         comments.append(f\"'{checkout_rev}' was checked out\")",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1527:                         user=user,",
          "1528:                         password=password,",
          "1529:                         output_encoding=output_encoding,",
          "1531:                     )",
          "1532:                     ret[\"changes\"][\"forced update\"] = True",
          "1533:                     if local_changes:",
          "1534:                         comments.append(\"Uncommitted changes were discarded\")",
          "1538:                 elif (",
          "1539:                     fast_forward is True and local_changes and force_reset is not False",
          "1540:                 ):",
          "",
          "[Removed Lines]",
          "1535:                     comments.append(",
          "1536:                         \"Repository was hard-reset to {}\".format(remote_loc)",
          "1537:                     )",
          "",
          "[Added Lines]",
          "1526:                     comments.append(f\"Repository was hard-reset to {remote_loc}\")",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1595:                                 user=user,",
          "1596:                                 password=password,",
          "1597:                                 output_encoding=output_encoding,",
          "1599:                             )",
          "1600:                             comments.append(",
          "1602:                             )",
          "1603:                         else:",
          "1604:                             return _fail(",
          "",
          "[Removed Lines]",
          "1601:                                 \"Repository was fast-forwarded to {}\".format(remote_loc)",
          "",
          "[Added Lines]",
          "1590:                                 f\"Repository was fast-forwarded to {remote_loc}\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1615:                             user=user,",
          "1616:                             password=password,",
          "1617:                             output_encoding=output_encoding,",
          "1622:                         )",
          "1624:                 # TODO: Figure out how to add submodule update info to",
          "1625:                 # test=True return data, and changes dict.",
          "",
          "[Removed Lines]",
          "1619:                         )",
          "1620:                         comments.append(",
          "1621:                             \"Repository was reset to {} (fast-forward)\".format(rev)",
          "",
          "[Added Lines]",
          "1609:                         comments.append(f\"Repository was reset to {rev} (fast-forward)\")",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1639:                         return _failed_submodule_update(ret, exc, comments)",
          "1640:             elif bare:",
          "1641:                 if __opts__[\"test\"]:",
          "1643:                     if ret[\"changes\"]:",
          "1644:                         return _neutral_test(ret, msg)",
          "1645:                     else:",
          "",
          "[Removed Lines]",
          "1642:                     msg = \"Bare repository at {} would be fetched\".format(target)",
          "",
          "[Added Lines]",
          "1629:                     msg = f\"Bare repository at {target} would be fetched\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1724:                         if exc.errno != errno.ENOENT:",
          "1725:                             removal_errors[target_path] = exc",
          "1726:                 if removal_errors:",
          "1730:                     return _fail(",
          "1731:                         ret,",
          "1732:                         \"Unable to remove\\n{}\".format(\"\\n\".join(err_strings)),",
          "",
          "[Removed Lines]",
          "1727:                     err_strings = [",
          "1728:                         \"  {}\\n    {}\".format(k, v) for k, v in removal_errors.items()",
          "1729:                     ]",
          "",
          "[Added Lines]",
          "1714:                     err_strings = [f\"  {k}\\n    {v}\" for k, v in removal_errors.items()]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1747:         log.debug(\"Target %s is not found, 'git clone' is required\", target)",
          "1748:         if __opts__[\"test\"]:",
          "1749:             ret[\"changes\"][\"new\"] = name + \" => \" + target",
          "1753:         try:",
          "1754:             clone_opts = [\"--mirror\"] if mirror else [\"--bare\"] if bare else []",
          "1755:             if remote != \"origin\":",
          "",
          "[Removed Lines]",
          "1750:             return _neutral_test(",
          "1751:                 ret, \"Repository {} would be cloned to {}\".format(name, target)",
          "1752:             )",
          "",
          "[Added Lines]",
          "1735:             return _neutral_test(ret, f\"Repository {name} would be cloned to {target}\")",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1774:                     output_encoding=output_encoding,",
          "1775:                 )",
          "1776:             except CommandExecutionError as exc:",
          "1778:                 return _fail(ret, msg, comments)",
          "1780:             ret[\"changes\"][\"new\"] = name + \" => \" + target",
          "",
          "[Removed Lines]",
          "1777:                 msg = \"Clone failed: {}\".format(_strip_exc(exc))",
          "",
          "[Added Lines]",
          "1760:                 msg = f\"Clone failed: {_strip_exc(exc)}\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1799:                         )",
          "1800:                         log.error(msg, name)",
          "1801:                         # Disable check for string substitution",
          "1805:                 else:",
          "1806:                     if remote_rev_type == \"tag\" and rev not in __salt__[",
          "1807:                         \"git.list_tags\"",
          "",
          "[Removed Lines]",
          "1802:                         return _fail(",
          "1803:                             ret, msg % \"Repository\", comments",
          "1804:                         )  # pylint: disable=E1321",
          "",
          "[Added Lines]",
          "1785:                         return _fail(ret, msg % \"Repository\", comments)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1813:                     ):",
          "1814:                         return _fail(",
          "1815:                             ret,",
          "1817:                             comments,",
          "1818:                         )",
          "",
          "[Removed Lines]",
          "1816:                             \"Revision '{}' does not exist in clone\".format(rev),",
          "",
          "[Added Lines]",
          "1797:                             f\"Revision '{rev}' does not exist in clone\",",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1872:                             password=password,",
          "1873:                             output_encoding=output_encoding,",
          "1874:                         )",
          "1877:                     try:",
          "1878:                         upstream = __salt__[\"git.rev_parse\"](",
          "",
          "[Removed Lines]",
          "1875:                         comments.append(\"Repository was reset to {}\".format(remote_loc))",
          "",
          "[Added Lines]",
          "1856:                         comments.append(f\"Repository was reset to {remote_loc}\")",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2110:                 else:",
          "2111:                     salt.utils.files.rm_rf(name)",
          "2112:             except OSError as exc:",
          "2114:             else:",
          "2115:                 ret[\"changes\"][\"forced init\"] = True",
          "2116:         elif os.listdir(name):",
          "",
          "[Removed Lines]",
          "2113:                 return _fail(ret, \"Unable to remove {}: {}\".format(name, exc))",
          "",
          "[Added Lines]",
          "2094:                 return _fail(ret, f\"Unable to remove {name}: {exc}\")",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2143:     actions = [\"Initialized {}repository in {}\".format(\"bare \" if bare else \"\", name)]",
          "2144:     if template:",
          "2146:     if separate_git_dir:",
          "2148:     message = \". \".join(actions)",
          "2149:     if len(actions) > 1:",
          "2150:         message += \".\"",
          "",
          "[Removed Lines]",
          "2145:         actions.append(\"Template directory set to {}\".format(template))",
          "2147:         actions.append(\"Gitdir set to {}\".format(separate_git_dir))",
          "",
          "[Added Lines]",
          "2126:         actions.append(f\"Template directory set to {template}\")",
          "2128:         actions.append(f\"Gitdir set to {separate_git_dir}\")",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2261:         return _fail(ret, salt.utils.args.invalid_kwargs(kwargs, raise_exc=False))",
          "2263:     if not rev:",
          "2268:     if not target:",
          "2273:     # Ensure that certain arguments are strings to ensure that comparisons work",
          "2274:     if not isinstance(rev, str):",
          "",
          "[Removed Lines]",
          "2264:         return _fail(",
          "2265:             ret, \"'{}' is not a valid value for the 'rev' argument\".format(rev)",
          "2266:         )",
          "2269:         return _fail(",
          "2270:             ret, \"'{}' is not a valid value for the 'target' argument\".format(rev)",
          "2271:         )",
          "",
          "[Added Lines]",
          "2245:         return _fail(ret, f\"'{rev}' is not a valid value for the 'rev' argument\")",
          "2248:         return _fail(ret, f\"'{rev}' is not a valid value for the 'target' argument\")",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2277:         if not isinstance(target, str):",
          "2278:             target = str(target)",
          "2279:         if not os.path.isabs(target):",
          "2281:     if user is not None and not isinstance(user, str):",
          "2282:         user = str(user)",
          "2283:     if remote is not None and not isinstance(remote, str):",
          "",
          "[Removed Lines]",
          "2280:             return _fail(ret, \"Target '{}' is not an absolute path\".format(target))",
          "",
          "[Added Lines]",
          "2257:             return _fail(ret, f\"Target '{target}' is not an absolute path\")",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2294:                     ident_path = __salt__[\"cp.cache_file\"](ident_path)",
          "2295:                 except OSError as exc:",
          "2296:                     log.error(\"Failed to cache %s: %s\", ident_path, exc)",
          "2300:             if not os.path.isabs(ident_path):",
          "2304:     if https_user is not None and not isinstance(https_user, str):",
          "2305:         https_user = str(https_user)",
          "2306:     if https_pass is not None and not isinstance(https_pass, str):",
          "",
          "[Removed Lines]",
          "2297:                     return _fail(",
          "2298:                         ret, \"Identity '{}' does not exist.\".format(ident_path)",
          "2299:                     )",
          "2301:                 return _fail(",
          "2302:                     ret, \"Identity '{}' is not an absolute path\".format(ident_path)",
          "2303:                 )",
          "",
          "[Added Lines]",
          "2274:                     return _fail(ret, f\"Identity '{ident_path}' does not exist.\")",
          "2276:                 return _fail(ret, f\"Identity '{ident_path}' is not an absolute path\")",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2309:     if os.path.isfile(target):",
          "2310:         return _fail(",
          "2311:             ret,",
          "2313:         )",
          "2315:     try:",
          "",
          "[Removed Lines]",
          "2312:             \"Target '{}' exists and is a regular file, cannot proceed\".format(target),",
          "",
          "[Added Lines]",
          "2285:             f\"Target '{target}' exists and is a regular file, cannot proceed\",",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2317:             name, https_user, https_pass, https_only=True",
          "2318:         )",
          "2319:     except ValueError as exc:",
          "2322:     redacted_fetch_url = salt.utils.url.redact_http_basic_auth(desired_fetch_url)",
          "",
          "[Removed Lines]",
          "2320:         return _fail(ret, exc.__str__())",
          "",
          "[Added Lines]",
          "2293:         return _fail(ret, str(exc))",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2377:                     current_fetch_url = remotes[remote][\"fetch\"]",
          "2379:                 if __opts__[\"test\"]:",
          "2384:                 __salt__[\"git.remote_set\"](",
          "2385:                     target,",
          "",
          "[Removed Lines]",
          "2380:                     return _neutral_test(",
          "2381:                         ret, \"Remote {} would be set to {}\".format(remote, name)",
          "2382:                     )",
          "",
          "[Added Lines]",
          "2353:                     return _neutral_test(ret, f\"Remote {remote} would be set to {name}\")",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2427:                         if exc.errno != errno.ENOENT:",
          "2428:                             removal_errors[target_path] = exc",
          "2429:                 if removal_errors:",
          "2433:                     return _fail(",
          "2434:                         ret,",
          "2435:                         \"Unable to remove\\n{}\".format(\"\\n\".join(err_strings)),",
          "",
          "[Removed Lines]",
          "2430:                     err_strings = [",
          "2431:                         \"  {}\\n    {}\".format(k, v) for k, v in removal_errors.items()",
          "2432:                     ]",
          "",
          "[Added Lines]",
          "2401:                     err_strings = [f\"  {k}\\n    {v}\" for k, v in removal_errors.items()]",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2450:         log.debug(\"Target %s is not found, 'git clone' is required\", target)",
          "2451:         if __opts__[\"test\"]:",
          "2455:         try:",
          "2456:             clone_opts = [\"--no-checkout\"]",
          "2457:             if remote != \"origin\":",
          "",
          "[Removed Lines]",
          "2452:             return _neutral_test(",
          "2453:                 ret, \"Repository {} would be cloned to {}\".format(name, target)",
          "2454:             )",
          "",
          "[Added Lines]",
          "2421:             return _neutral_test(ret, f\"Repository {name} would be cloned to {target}\")",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2469:                 saltenv=__env__,",
          "2470:                 output_encoding=output_encoding,",
          "2471:             )",
          "2474:         except Exception as exc:  # pylint: disable=broad-except",
          "2475:             log.error(\"Unexpected exception in git.detached state\", exc_info=True)",
          "",
          "[Removed Lines]",
          "2472:             comments.append(\"{} cloned to {}\".format(name, target))",
          "",
          "[Added Lines]",
          "2439:             comments.append(f\"{name} cloned to {target}\")",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2482:     # Repository exists and is ready for fetch/checkout",
          "2483:     refspecs = [",
          "2485:         \"+refs/tags/*:refs/tags/*\",",
          "2486:     ]",
          "2487:     if hash_exists_locally or fetch_remote is False:",
          "",
          "[Removed Lines]",
          "2484:         \"refs/heads/*:refs/remotes/{}/*\".format(remote),",
          "",
          "[Added Lines]",
          "2451:         f\"refs/heads/*:refs/remotes/{remote}/*\",",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2489:     else:",
          "2490:         # Fetch refs from remote",
          "2491:         if __opts__[\"test\"]:",
          "2495:         try:",
          "2496:             fetch_changes = __salt__[\"git.fetch\"](",
          "2497:                 target,",
          "",
          "[Removed Lines]",
          "2492:             return _neutral_test(",
          "2493:                 ret, \"Repository remote {} would be fetched\".format(remote)",
          "2494:             )",
          "",
          "[Added Lines]",
          "2459:             return _neutral_test(ret, f\"Repository remote {remote} would be fetched\")",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2511:         else:",
          "2512:             if fetch_changes:",
          "2513:                 comments.append(",
          "2515:                 )",
          "2517:     # get refs and checkout",
          "",
          "[Removed Lines]",
          "2514:                     \"Remote {} was fetched, resulting in updated refs\".format(remote)",
          "",
          "[Added Lines]",
          "2479:                     f\"Remote {remote} was fetched, resulting in updated refs\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2522:         ):",
          "2523:             checkout_commit_id = rev",
          "2524:         else:",
          "2526:     else:",
          "2527:         try:",
          "2528:             all_remote_refs = __salt__[\"git.remote_refs\"](",
          "",
          "[Removed Lines]",
          "2525:             return _fail(ret, \"Revision '{}' does not exist\".format(rev))",
          "",
          "[Added Lines]",
          "2490:             return _fail(ret, f\"Revision '{rev}' does not exist\")",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2543:             elif \"refs/tags/\" + rev in all_remote_refs:",
          "2544:                 checkout_commit_id = all_remote_refs[\"refs/tags/\" + rev]",
          "2545:             else:",
          "2548:         except CommandExecutionError as exc:",
          "2553:     if hard_reset:",
          "2554:         if __opts__[\"test\"]:",
          "2555:             return _neutral_test(",
          "2557:             )",
          "2558:         __salt__[\"git.reset\"](",
          "2559:             target,",
          "",
          "[Removed Lines]",
          "2546:                 return _fail(ret, \"Revision '{}' does not exist\".format(rev))",
          "2549:             return _fail(",
          "2550:                 ret, \"Failed to list refs for {}: {}\".format(remote, _strip_exc(exc))",
          "2551:             )",
          "2556:                 ret, \"Hard reset to HEAD would be performed on {}\".format(target)",
          "",
          "[Added Lines]",
          "2511:                 return _fail(ret, f\"Revision '{rev}' does not exist\")",
          "2514:             return _fail(ret, f\"Failed to list refs for {remote}: {_strip_exc(exc)}\")",
          "2519:                 ret, f\"Hard reset to HEAD would be performed on {target}\"",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2585:             password=password,",
          "2586:             output_encoding=output_encoding,",
          "2587:         )",
          "2592:         try:",
          "2593:             new_rev = __salt__[\"git.revision\"](",
          "",
          "[Removed Lines]",
          "2588:         comments.append(",
          "2589:             \"Commit ID {} was checked out at {}\".format(checkout_commit_id, target)",
          "2590:         )",
          "",
          "[Added Lines]",
          "2551:         comments.append(f\"Commit ID {checkout_commit_id} was checked out at {target}\")",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2734:             comment = \"{} would be cloned to {}{}\".format(",
          "2735:                 name,",
          "2736:                 target,",
          "2738:             )",
          "2739:             return _neutral_test(ret, comment)",
          "2740:         clone_opts = [\"--branch\", branch] if branch is not None else None",
          "",
          "[Removed Lines]",
          "2737:                 \" with branch '{}'\".format(branch) if branch is not None else \"\",",
          "",
          "[Added Lines]",
          "2698:                 f\" with branch '{branch}'\" if branch is not None else \"\",",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2751:                 output_encoding=output_encoding,",
          "2752:             )",
          "2753:         except CommandExecutionError as exc:",
          "2755:             return _fail(ret, msg, comments)",
          "2757:         comments.append(",
          "2758:             \"{} cloned to {}{}\".format(",
          "2759:                 name,",
          "2760:                 target,",
          "2762:             )",
          "2763:         )",
          "2764:         _clone_changes(ret)",
          "",
          "[Removed Lines]",
          "2754:             msg = \"Clone failed: {}\".format(_strip_exc(exc))",
          "2761:                 \" with branch '{}'\".format(branch) if branch is not None else \"\",",
          "",
          "[Added Lines]",
          "2715:             msg = f\"Clone failed: {_strip_exc(exc)}\"",
          "2722:                 f\" with branch '{branch}'\" if branch is not None else \"\",",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2777:             else:",
          "2778:                 if __opts__[\"test\"]:",
          "2779:                     _branch_changes(ret, current_branch, branch)",
          "2783:                 try:",
          "2784:                     __salt__[\"git.rev_parse\"](",
          "2785:                         target,",
          "",
          "[Removed Lines]",
          "2780:                     return _neutral_test(",
          "2781:                         ret, \"Branch would be changed to '{}'\".format(branch)",
          "2782:                     )",
          "",
          "[Added Lines]",
          "2741:                     return _neutral_test(ret, f\"Branch would be changed to '{branch}'\")",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2809:                         output_encoding=output_encoding,",
          "2810:                     )",
          "2811:                 except CommandExecutionError as exc:",
          "2813:                     return _fail(ret, msg, comments)",
          "2814:                 else:",
          "2816:                     _branch_changes(ret, current_branch, branch)",
          "2817:                     ret[\"comment\"] = _format_comments(comments)",
          "2818:                     ret[\"result\"] = True",
          "",
          "[Removed Lines]",
          "2812:                     msg = \"Failed to change branch to '{}': {}\".format(branch, exc)",
          "2815:                     comments.append(\"Branch changed to '{}'\".format(branch))",
          "",
          "[Added Lines]",
          "2771:                     msg = f\"Failed to change branch to '{branch}': {exc}\"",
          "2774:                     comments.append(f\"Branch changed to '{branch}'\")",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2984:     if __opts__[\"test\"]:",
          "2985:         ret[\"changes\"] = pre_matches",
          "2986:         return _neutral_test(",
          "2988:         )",
          "2990:     if value_regex is None:",
          "",
          "[Removed Lines]",
          "2987:             ret, \"{} key(s) would have value(s) unset\".format(len(pre_matches))",
          "",
          "[Added Lines]",
          "2946:             ret, f\"{len(pre_matches)} key(s) would have value(s) unset\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3016:                 user=user,",
          "3017:                 password=password,",
          "3018:                 output_encoding=output_encoding,",
          "3020:             )",
          "3021:         except CommandExecutionError as exc:",
          "3023:             if value_regex is not None:",
          "3024:                 msg += \" using value_regex '{1}'\"",
          "3025:             msg += \": \" + _strip_exc(exc)",
          "",
          "[Removed Lines]",
          "3022:             msg = \"Failed to unset '{}'\".format(key_name)",
          "",
          "[Added Lines]",
          "2981:             msg = f\"Failed to unset '{key_name}'\"",
          "",
          "---------------"
        ],
        "salt/states/gpg.py||salt/states/gpg.py": [
          "File: salt/states/gpg.py -> salt/states/gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         keys = [keys]",
          "78:     for key in keys:",
          "80:             if trust:",
          "81:                 if trust in _VALID_TRUST_VALUES:",
          "82:                     if current_keys[key][\"trust\"] != TRUST_MAP[trust]:",
          "",
          "[Removed Lines]",
          "79:         if key in current_keys.keys():",
          "",
          "[Added Lines]",
          "79:         if key in current_keys:",
          "",
          "---------------"
        ],
        "salt/states/grafana_dashboard.py||salt/states/grafana_dashboard.py": [
          "File: salt/states/grafana_dashboard.py -> salt/states/grafana_dashboard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:         request_url,",
          "460:         headers={\"Authorization\": \"Bearer {}\".format(profile.get(\"grafana_token\"))},",
          "461:         json=payload,",
          "462:     )",
          "463:     return response.json()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "462:         timeout=120,",
          "",
          "---------------"
        ],
        "salt/states/grains.py||salt/states/grains.py": [
          "File: salt/states/grains.py -> salt/states/grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:                     comments.append(",
          "297:                         \"Value {1} in grain {0} is set to be deleted\".format(name, val)",
          "298:                     )",
          "300:                         ret[\"changes\"] = {\"deleted\": []}",
          "301:                     ret[\"changes\"][\"deleted\"].append(val)",
          "302:                 elif val in grain:",
          "",
          "[Removed Lines]",
          "299:                     if \"deleted\" not in ret[\"changes\"].keys():",
          "",
          "[Added Lines]",
          "299:                     if \"deleted\" not in ret[\"changes\"]:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:                     comments.append(",
          "305:                         \"Value {1} was deleted from grain {0}\".format(name, val)",
          "306:                     )",
          "308:                         ret[\"changes\"] = {\"deleted\": []}",
          "309:                     ret[\"changes\"][\"deleted\"].append(val)",
          "310:             ret[\"comment\"] = \"\\n\".join(comments)",
          "",
          "[Removed Lines]",
          "307:                     if \"deleted\" not in ret[\"changes\"].keys():",
          "",
          "[Added Lines]",
          "307:                     if \"deleted\" not in ret[\"changes\"]:",
          "",
          "---------------"
        ],
        "salt/states/ldap.py||salt/states/ldap.py": [
          "File: salt/states/ldap.py -> salt/states/ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "314:                 o = old.get(dn, {})",
          "315:                 n = new.get(dn, {})",
          "317:                 try:",
          "318:                     # perform the operation",
          "319:                     if o:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:                 op = None",
          "",
          "---------------"
        ],
        "salt/states/netsnmp.py||salt/states/netsnmp.py": [
          "File: salt/states/netsnmp.py -> salt/states/netsnmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:     _mode = community_details.get[\"mode\"] = community_details.get(\"mode\").lower()",
          "120:         community_details[\"mode\"] = _COMMUNITY_MODE_MAP.get(_mode)",
          "122:     if community_details[\"mode\"] not in [\"ro\", \"rw\"]:",
          "",
          "[Removed Lines]",
          "119:     if _mode in _COMMUNITY_MODE_MAP.keys():",
          "",
          "[Added Lines]",
          "119:     if _mode in _COMMUNITY_MODE_MAP:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "201:     DRY to build diff parts (added, removed, updated).",
          "202:     \"\"\"",
          "205:         diff[diff_key] = {}",
          "206:     diff[diff_key][key] = value",
          "",
          "[Removed Lines]",
          "204:     if diff_key not in diff.keys():",
          "",
          "[Added Lines]",
          "204:     if diff_key not in diff:",
          "",
          "---------------"
        ],
        "salt/states/pip_state.py||salt/states/pip_state.py": [
          "File: salt/states/pip_state.py -> salt/states/pip_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:             \"The pkg_resources packages was not loaded. Please install setuptools.\"",
          "356:         )",
          "357:         return None",
          "359:     pkg1 = normalize(pkg1)",
          "360:     pkg2 = normalize(pkg2)",
          "",
          "[Removed Lines]",
          "358:     normalize = lambda x: str(x).split(\"!\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "[Added Lines]",
          "359:     def normalize(x):",
          "360:         return str(x).split(\"!\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368:             return 1",
          "369:     except Exception as exc:  # pylint: disable=broad-except",
          "370:         logger.exception(",
          "372:         )",
          "373:     return None",
          "",
          "[Removed Lines]",
          "371:             f'Comparison of package versions \"{pkg1}\" and \"{pkg2}\" failed: {exc}'",
          "",
          "[Added Lines]",
          "374:             'Comparison of package versions \"%s\" and \"%s\" failed: %s', pkg1, pkg2, exc",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "735:     # prepro = lambda pkg: pkg if type(pkg) == str else \\",
          "736:     #     ' '.join((pkg.items()[0][0], pkg.items()[0][1].replace(',', ';')))",
          "737:     # pkgs = ','.join([prepro(pkg) for pkg in pkgs])",
          "743:     pkgs = [prepro(pkg) for pkg in pkgs]",
          "745:     ret = {\"name\": \";\".join(pkgs), \"result\": None, \"comment\": \"\", \"changes\": {}}",
          "",
          "[Removed Lines]",
          "738:     prepro = (",
          "739:         lambda pkg: pkg",
          "740:         if isinstance(pkg, str)",
          "741:         else \" \".join((pkg.items()[0][0], pkg.items()[0][1]))",
          "742:     )",
          "",
          "[Added Lines]",
          "741:     def prepro(pkg):",
          "742:         return (",
          "743:             pkg",
          "744:             if isinstance(pkg, str)",
          "745:             else \" \".join((pkg.items()[0][0], pkg.items()[0][1]))",
          "746:         )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "862:         # If we fail, then just send False, and we'll try again in the next function call",
          "863:         except Exception as exc:  # pylint: disable=broad-except",
          "864:             logger.exception(",
          "866:             )",
          "867:             pip_list = False",
          "",
          "[Removed Lines]",
          "865:                 f\"Pre-caching of PIP packages during states.pip.installed failed by exception from pip.list: {exc}\"",
          "",
          "[Added Lines]",
          "870:                 \"Pre-caching of PIP packages during states.pip.installed failed by exception from pip.list: %s\",",
          "871:                 exc,",
          "",
          "---------------"
        ],
        "salt/states/pkg.py||salt/states/pkg.py": [
          "File: salt/states/pkg.py -> salt/states/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3943:             (pkg_name, pkg_ver) = next(iter(pkg.items()))",
          "3944:             dpkgs.update({pkg_name: pkg_ver})",
          "3945:         else:",
          "3948:     ret = {\"name\": name, \"changes\": {}, \"result\": True, \"comment\": \"\"}",
          "3949:     comments = []",
          "",
          "[Removed Lines]",
          "3946:             dpkgs.update({pkg: None})",
          "",
          "[Added Lines]",
          "3946:             dpkgs.update({pkg: None})  # pylint: disable=unhashable-member",
          "",
          "---------------"
        ],
        "salt/states/probes.py||salt/states/probes.py": [
          "File: salt/states/probes.py -> salt/states/probes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     expected_probes = {}",
          "82:     for probe_name, probe_test in probes.items():",
          "84:             expected_probes[probe_name] = {}",
          "85:         probe_defaults = probe_test.pop(\"defaults\", {})",
          "86:         for test_name, test_details in probe_test.items():",
          "",
          "[Removed Lines]",
          "83:         if probe_name not in expected_probes.keys():",
          "",
          "[Added Lines]",
          "83:         if probe_name not in expected_probes:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:             expected_test_details.update(",
          "98:                 test_details",
          "99:             )  # update with the actual config of the test",
          "101:                 expected_probes[probe_name][test_name] = expected_test_details",
          "103:     return expected_probes",
          "",
          "[Removed Lines]",
          "100:             if test_name not in expected_probes[probe_name].keys():",
          "",
          "[Added Lines]",
          "100:             if test_name not in expected_probes[probe_name]:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:         # new tests for common probes",
          "169:         for test_name in new_tests_keys_set:",
          "171:                 new_probes[probe_name] = {}",
          "172:             new_probes[probe_name].update({test_name: probe_tests.pop(test_name)})",
          "173:         # old tests for common probes",
          "174:         for test_name in remove_tests_keys_set:",
          "176:                 remove_probes[probe_name] = {}",
          "177:             remove_probes[probe_name].update(",
          "178:                 {test_name: configured_probe_tests.pop(test_name)}",
          "",
          "[Removed Lines]",
          "170:             if probe_name not in new_probes.keys():",
          "175:             if probe_name not in remove_probes.keys():",
          "",
          "[Added Lines]",
          "170:             if probe_name not in new_probes:",
          "175:             if probe_name not in remove_probes:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "182:             configured_test_params = configured_probe_tests.get(test_name, {})",
          "183:             # if test params are different, probe goes to update probes dict!",
          "184:             if test_params != configured_test_params:",
          "186:                     update_probes[probe_name] = {}",
          "187:                 update_probes[probe_name].update({test_name: test_params})",
          "",
          "[Removed Lines]",
          "185:                 if probe_name not in update_probes.keys():",
          "",
          "[Added Lines]",
          "185:                 if probe_name not in update_probes:",
          "",
          "---------------"
        ],
        "salt/states/saltmod.py||salt/states/saltmod.py": [
          "File: salt/states/saltmod.py -> salt/states/saltmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "782:     try:",
          "783:         kwargs[\"__pub_user\"] = __user__",
          "784:         log.debug(",
          "786:         )",
          "787:     except NameError:",
          "788:         log.warning(\"unable to find user for fire args event due to missing __user__\")",
          "",
          "[Removed Lines]",
          "785:             f\"added __pub_user to kwargs using dunder user '{__user__}', kwargs '{kwargs}'\"",
          "",
          "[Added Lines]",
          "785:             \"added __pub_user to kwargs using dunder user '%s', kwargs '%s'\",",
          "786:             __user__,",
          "787:             kwargs,",
          "",
          "---------------"
        ],
        "salt/states/win_iis.py||salt/states/win_iis.py": [
          "File: salt/states/win_iis.py -> salt/states/win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "502:         # map identity type from numeric to string for comparing",
          "503:         if (",
          "504:             setting == \"processModel.identityType\"",
          "506:         ):",
          "507:             settings[setting] = identityType_map2string[settings[setting]]",
          "",
          "[Removed Lines]",
          "505:             and settings[setting] in identityType_map2string.keys()",
          "",
          "[Added Lines]",
          "505:             and settings[setting] in identityType_map2string",
          "",
          "---------------"
        ],
        "salt/utils/ansible.py||salt/utils/ansible.py": [
          "File: salt/utils/ansible.py -> salt/utils/ansible.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: log = logging.getLogger(__name__)",
          "16:     if salt.utils.path.which(\"ansible-inventory\"):",
          "17:         return __virtualname__",
          "18:     return (False, \"Install `ansible` to use inventory\")",
          "",
          "[Removed Lines]",
          "15: def __virtual__():  # pylint: disable=expected-2-blank-lines-found-0",
          "",
          "[Added Lines]",
          "15: def __virtual__():",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     Default: /etc/salt/roster",
          "25:     \"\"\"",
          "26:     if not os.path.isfile(inventory):",
          "28:     if not os.path.isabs(inventory):",
          "29:         raise CommandExecutionError(\"Path to inventory file must be an absolute path\")",
          "",
          "[Removed Lines]",
          "27:         raise CommandExecutionError(\"Inventory file not found: {}\".format(inventory))",
          "",
          "[Added Lines]",
          "27:         raise CommandExecutionError(f\"Inventory file not found: {inventory}\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:         try:",
          "45:             return salt.utils.json.loads(salt.utils.stringutils.to_str(inv))",
          "46:         except ValueError:",
          "",
          "[Removed Lines]",
          "47:             raise CommandExecutionError(",
          "48:                 \"Error processing the inventory: {}\".format(inv)",
          "49:             )",
          "",
          "[Added Lines]",
          "47:             raise CommandExecutionError(f\"Error processing the inventory: {inv}\")",
          "",
          "---------------"
        ],
        "salt/utils/args.py||salt/utils/args.py": [
          "File: salt/utils/args.py -> salt/utils/args.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     \"\"\"",
          "50:     if invalid_kwargs:",
          "51:         if isinstance(invalid_kwargs, dict):",
          "53:             invalid_kwargs = new_invalid",
          "54:     msg = \"The following keyword arguments are not valid: {}\".format(",
          "55:         \", \".join(invalid_kwargs)",
          "",
          "[Removed Lines]",
          "52:             new_invalid = [\"{}={}\".format(x, y) for x, y in invalid_kwargs.items()]",
          "",
          "[Added Lines]",
          "52:             new_invalid = [f\"{x}={y}\" for x, y in invalid_kwargs.items()]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:                             the argspec unless ``is_class_method`` is True.",
          "237:     \"\"\"",
          "238:     if not callable(func):",
          "241:     while hasattr(func, \"__wrapped__\"):",
          "242:         func = func.__wrapped__",
          "",
          "[Removed Lines]",
          "239:         raise TypeError(\"{} is not a callable\".format(func))",
          "",
          "[Added Lines]",
          "239:         raise TypeError(f\"{func} is not a callable\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:     try:",
          "245:         sig = inspect.signature(func)",
          "246:     except TypeError:",
          "249:     # Build a namedtuple which looks like the result of a Python 2 argspec",
          "250:     _ArgSpec = namedtuple(\"ArgSpec\", \"args varargs keywords defaults\")",
          "",
          "[Removed Lines]",
          "247:         raise TypeError(\"Cannot inspect argument list for '{}'\".format(func))",
          "",
          "[Added Lines]",
          "247:         raise TypeError(f\"Cannot inspect argument list for '{func}'\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "345:     Take an input value and split it into a list, returning the resulting list",
          "346:     \"\"\"",
          "347:     if mapper is None:",
          "349:     if isinstance(val, list):",
          "350:         return list(map(mapper, val))",
          "351:     try:",
          "",
          "[Removed Lines]",
          "348:         mapper = lambda x: x",
          "",
          "[Added Lines]",
          "349:         def mapper(x):",
          "350:             return x",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "466:                     # In case this is being called for a state module",
          "467:                     \"full\",",
          "468:                     # Not a state module, build the name",
          "470:                 ),",
          "471:             )",
          "472:         else:",
          "473:             msg = \"{} and '{}' are invalid keyword arguments for '{}'\".format(",
          "475:                 list(extra.keys())[-1],",
          "476:                 ret.get(",
          "477:                     # In case this is being called for a state module",
          "478:                     \"full\",",
          "479:                     # Not a state module, build the name",
          "481:                 ),",
          "482:             )",
          "",
          "[Removed Lines]",
          "469:                     \"{}.{}\".format(fun.__module__, fun.__name__),",
          "474:                 \", \".join([\"'{}'\".format(e) for e in extra][:-1]),",
          "480:                     \"{}.{}\".format(fun.__module__, fun.__name__),",
          "",
          "[Added Lines]",
          "472:                     f\"{fun.__module__}.{fun.__name__}\",",
          "477:                 \", \".join([f\"'{e}'\" for e in extra][:-1]),",
          "483:                     f\"{fun.__module__}.{fun.__name__}\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "529:             key = None",
          "530:             word = []",
          "531:         elif token in \"]})\":",
          "533:                 break",
          "534:             word.append(token)",
          "535:         elif token == \"=\" and not brackets:",
          "",
          "[Removed Lines]",
          "532:             if not brackets or token != {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"}[brackets.pop()]:",
          "",
          "[Added Lines]",
          "535:             _brackets = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"}",
          "536:             if not brackets or token != _brackets[brackets.pop()]:",
          "",
          "---------------"
        ],
        "salt/utils/atomicfile.py||salt/utils/atomicfile.py": [
          "File: salt/utils/atomicfile.py -> salt/utils/atomicfile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: CAN_RENAME_OPEN_FILE = False",
          "16: if os.name == \"nt\":  # pragma: no cover",
          "20:     try:",
          "21:         import ctypes",
          "",
          "[Removed Lines]",
          "17:     _rename = lambda src, dst: False  # pylint: disable=C0103",
          "18:     _rename_atomic = lambda src, dst: False  # pylint: disable=C0103",
          "",
          "[Added Lines]",
          "18:     def _rename(src, dst):",
          "19:         return False",
          "21:     def _rename_atomic(src, dst):",
          "22:         return False",
          "",
          "---------------"
        ],
        "salt/utils/aws.py||salt/utils/aws.py": [
          "File: salt/utils/aws.py -> salt/utils/aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "240:         requesturl=\"https://sts.amazonaws.com/\",",
          "241:     )",
          "242:     headers[\"Accept\"] = \"application/json\"",
          "245:     if result.status_code >= 400:",
          "246:         log.info(\"AssumeRole response: %s\", result.content)",
          "",
          "[Removed Lines]",
          "243:     result = requests.request(\"GET\", requesturl, headers=headers, data=\"\", verify=True)",
          "",
          "[Added Lines]",
          "243:     result = requests.request(",
          "244:         \"GET\",",
          "245:         requesturl,",
          "246:         headers=headers,",
          "247:         data=\"\",",
          "248:         verify=True,",
          "249:         timeout=AWS_METADATA_TIMEOUT,",
          "250:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "511:         log.trace(\"AWS Request Parameters: %s\", params_with_headers)",
          "512:         try:",
          "513:             result = requests.get(",
          "515:             )",
          "516:             log.debug(\"AWS Response Status Code: %s\", result.status_code)",
          "517:             log.trace(\"AWS Response Text: %s\", result.text)",
          "",
          "[Removed Lines]",
          "514:                 requesturl, headers=headers, params=params_with_headers",
          "",
          "[Added Lines]",
          "521:                 requesturl,",
          "522:                 headers=headers,",
          "523:                 params=params_with_headers,",
          "524:                 timeout=AWS_METADATA_TIMEOUT,",
          "",
          "---------------"
        ],
        "salt/utils/cache.py||salt/utils/cache.py": [
          "File: salt/utils/cache.py -> salt/utils/cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:             return",
          "100:         if time.time() - self._key_cache_time[key] > self._ttl:",
          "101:             del self._key_cache_time[key]",
          "104:     def __contains__(self, key):",
          "105:         self._enforce_ttl_key(key)",
          "",
          "[Removed Lines]",
          "102:             self._dict.__delitem__(key)",
          "",
          "[Added Lines]",
          "102:             del self._dict[key]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "365:         file.seek(0)",
          "366:         data = \"\\n\".join(file.readlines())",
          "367:         if data != salt.version.__version__:",
          "369:             file.truncate(0)",
          "370:             file.write(salt.version.__version__)",
          "371:             for item in os.listdir(cache_path):",
          "",
          "[Removed Lines]",
          "368:             log.warning(f\"Cache version mismatch clearing: {repr(cache_path)}\")",
          "",
          "[Added Lines]",
          "368:             log.warning(\"Cache version mismatch clearing: %s\", repr(cache_path))",
          "",
          "---------------"
        ],
        "salt/utils/cloud.py||salt/utils/cloud.py": [
          "File: salt/utils/cloud.py -> salt/utils/cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2120:         return proc.exitstatus",
          "2121:     except salt.utils.vt.TerminalException as err:",
          "2122:         trace = traceback.format_exc()",
          "2126:     finally:",
          "2127:         proc.close(terminate=True, kill=True)",
          "2128:     # Signal an error",
          "",
          "[Removed Lines]",
          "2123:         log.error(",
          "2124:             error_msg.format(cmd, err, trace)",
          "2125:         )  # pylint: disable=str-format-in-logging",
          "",
          "[Added Lines]",
          "2123:         log.error(error_msg.format(cmd, err, trace))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2969:                     \"Python requests library to be installed\"",
          "2970:                 )",
          "2971:             }",
          "2973:         if req.status_code != 200:",
          "2974:             return {",
          "2975:                 \"error\": (",
          "",
          "[Removed Lines]",
          "2972:         req = requests.get(url)",
          "",
          "[Added Lines]",
          "2970:         req = requests.get(url, timeout=120)",
          "",
          "---------------"
        ],
        "salt/utils/compat.py||salt/utils/compat.py": [
          "File: salt/utils/compat.py -> salt/utils/compat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     \"\"\"",
          "40:     def _deepcopy_method(x, memo):",
          "42:         return type(x)(x.im_func, copy.deepcopy(x.im_self, memo), x.im_class)",
          "45:     try:",
          "47:         copy._deepcopy_dispatch[types.MethodType] = _deepcopy_method",
          "48:         ret = copy.deepcopy(name)",
          "49:     finally:",
          "",
          "[Removed Lines]",
          "41:         # pylint: disable=incompatible-py3-code",
          "43:         # pylint: enable=incompatible-py3-code",
          "46:         pre_dispatch = copy._deepcopy_dispatch",
          "",
          "[Added Lines]",
          "43:     pre_dispatch = copy._deepcopy_dispatch",
          "",
          "---------------"
        ],
        "salt/utils/configparser.py||salt/utils/configparser.py": [
          "File: salt/utils/configparser.py -> salt/utils/configparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: \"\"\"",
          "5: import re",
          "6: from configparser import *  # pylint: disable=no-name-in-module,wildcard-import,unused-wildcard-import",
          "8: import salt.utils.stringutils",
          "18: class GitConfigParser(RawConfigParser):",
          "19:     \"\"\"",
          "20:     Custom ConfigParser which reads and writes git config files.",
          "",
          "[Removed Lines]",
          "10: try:",
          "11:     from collections import OrderedDict as _default_dict",
          "12: except ImportError:",
          "13:     # fallback for setup.py which hasn't yet built _collections",
          "14:     _default_dict = dict",
          "17: # pylint: disable=string-substitution-usage-error",
          "",
          "[Added Lines]",
          "6: from collections import OrderedDict",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     def __init__(",
          "48:         self,",
          "49:         defaults=None,",
          "51:         allow_no_value=True,",
          "52:     ):",
          "53:         \"\"\"",
          "",
          "[Removed Lines]",
          "50:         dict_type=_default_dict,",
          "",
          "[Added Lines]",
          "44:         dict_type=OrderedDict,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:             fp_.write(convert(\"[%s]\\n\" % self.DEFAULTSECT))",
          "270:             for (key, value) in self._defaults.items():",
          "271:                 value = salt.utils.stringutils.to_unicode(value).replace(\"\\n\", \"\\n\\t\")",
          "273:         for section in self._sections:",
          "274:             fp_.write(convert(\"[%s]\\n\" % section))",
          "275:             for (key, value) in self._sections[section].items():",
          "",
          "[Removed Lines]",
          "272:                 fp_.write(convert(\"{} = {}\\n\".format(key, value)))",
          "",
          "[Added Lines]",
          "266:                 fp_.write(convert(f\"{key} = {value}\\n\"))",
          "",
          "---------------"
        ],
        "salt/utils/data.py||salt/utils/data.py": [
          "File: salt/utils/data.py -> salt/utils/data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1049:             return {}",
          "1051:     if key_cb is None:",
          "1053:     if val_cb is None:",
          "1056:     valid_non_dict = ((str,), (int,), float)",
          "1057:     if isinstance(data, list):",
          "",
          "[Removed Lines]",
          "1052:         key_cb = lambda x: x",
          "1054:         val_cb = lambda x, y: y",
          "",
          "[Added Lines]",
          "1053:         def key_cb(x):",
          "1054:             return x",
          "1058:         def val_cb(x, y):",
          "1059:             return y",
          "",
          "---------------"
        ],
        "salt/utils/dns.py||salt/utils/dns.py": [
          "File: salt/utils/dns.py -> salt/utils/dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:         assert 1 <= port <= 65535",
          "124:         return port",
          "125:     except (ValueError, AssertionError):",
          "129: def _tree(domain, tld=False):",
          "",
          "[Removed Lines]",
          "126:         raise ValueError(\"Invalid port {}\".format(port))",
          "",
          "[Added Lines]",
          "126:         raise ValueError(f\"Invalid port {port}\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "276:     :param servers: [] of servers to use",
          "277:     :return: [] of records or False if error",
          "278:     \"\"\"",
          "280:     if servers:",
          "282:     if timeout is not None:",
          "283:         if servers:",
          "284:             timeout = int(float(timeout) / len(servers))",
          "285:         else:",
          "286:             timeout = int(timeout)",
          "288:     if secure:",
          "289:         cmd += \"+dnssec +adflag \"",
          "291:     cmd = __salt__[\"cmd.run_all\"](",
          "293:     )",
          "295:     if \"ignoring invalid type\" in cmd[\"stderr\"]:",
          "297:     elif cmd[\"retcode\"] != 0:",
          "298:         log.warning(",
          "299:             \"dig returned (%s): %s\",",
          "",
          "[Removed Lines]",
          "279:     cmd = \"dig {} -t {} \".format(DIG_OPTIONS, rdtype)",
          "281:         cmd += \"\".join([\"@{} \".format(srv) for srv in servers])",
          "287:         cmd += \"+time={} \".format(timeout)",
          "292:         \"{} {}\".format(cmd, name), python_shell=False, output_loglevel=\"quiet\"",
          "296:         raise ValueError(\"Invalid DNS type {}\".format(rdtype))",
          "",
          "[Added Lines]",
          "279:     cmd = f\"dig {DIG_OPTIONS} -t {rdtype} \"",
          "281:         cmd += \"\".join([f\"@{srv} \" for srv in servers])",
          "287:         cmd += f\"+time={timeout} \"",
          "292:         f\"{cmd} {name}\", python_shell=False, output_loglevel=\"quiet\"",
          "296:         raise ValueError(f\"Invalid DNS type {rdtype}\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "333:     cmd = \"drill \"",
          "334:     if secure:",
          "335:         cmd += \"-D -o ad \"",
          "337:     if servers:",
          "339:     cmd = __salt__[\"cmd.run_all\"](",
          "340:         cmd, timeout=timeout, python_shell=False, output_loglevel=\"quiet\"",
          "341:     )",
          "",
          "[Removed Lines]",
          "336:     cmd += \"{} {} \".format(rdtype, name)",
          "338:         cmd += \"\".join([\"@{} \".format(srv) for srv in servers])",
          "",
          "[Added Lines]",
          "336:     cmd += f\"{rdtype} {name} \"",
          "338:         cmd += \"\".join([f\"@{srv} \" for srv in servers])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "364:                 validated = True",
          "365:                 continue",
          "366:             elif l_type != rdtype:",
          "369:             res.append(_data_clean(l_rec))",
          "",
          "[Removed Lines]",
          "367:                 raise ValueError(\"Invalid DNS type {}\".format(rdtype))",
          "",
          "[Added Lines]",
          "367:                 raise ValueError(f\"Invalid DNS type {rdtype}\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "385:     :param timeout: ignored",
          "386:     :return: [] of addresses or False if error",
          "387:     \"\"\"",
          "393:     if timeout:",
          "394:         log.info(\"Ignoring timeout on gai resolver; fix resolv.conf to do that\")",
          "",
          "[Removed Lines]",
          "388:     try:",
          "389:         sock_t = {\"A\": socket.AF_INET, \"AAAA\": socket.AF_INET6}[rdtype]",
          "390:     except KeyError:",
          "391:         raise ValueError(\"Invalid DNS type {} for gai lookup\".format(rdtype))",
          "",
          "[Added Lines]",
          "388:     if rdtype == \"A\":",
          "389:         sock_t = socket.AF_INET",
          "390:     elif rdtype == \"AAAA\":",
          "391:         sock_t = socket.AF_INET6",
          "392:     else:",
          "393:         raise ValueError(f\"Invalid DNS type {rdtype} for gai lookup\")",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "412:     :param timeout: server response wait",
          "413:     :return: [] of records or False if error",
          "414:     \"\"\"",
          "417:     if timeout:",
          "419:     cmd += name",
          "420:     if server is not None:",
          "423:     cmd = __salt__[\"cmd.run_all\"](cmd, python_shell=False, output_loglevel=\"quiet\")",
          "425:     if \"invalid type\" in cmd[\"stderr\"]:",
          "427:     elif cmd[\"retcode\"] != 0:",
          "428:         log.warning(\"host returned (%s): %s\", cmd[\"retcode\"], cmd[\"stderr\"])",
          "429:         return False",
          "",
          "[Removed Lines]",
          "415:     cmd = \"host -t {} \".format(rdtype)",
          "418:         cmd += \"-W {} \".format(int(timeout))",
          "421:         cmd += \" {}\".format(server)",
          "426:         raise ValueError(\"Invalid DNS type {}\".format(rdtype))",
          "",
          "[Added Lines]",
          "417:     cmd = f\"host -t {rdtype} \"",
          "420:         cmd += f\"-W {int(timeout)} \"",
          "423:         cmd += f\" {server}\"",
          "428:         raise ValueError(f\"Invalid DNS type {rdtype}\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "470:         ]",
          "471:         return res",
          "472:     except dns.rdatatype.UnknownRdatatype:",
          "474:     except (",
          "475:         dns.resolver.NXDOMAIN,",
          "476:         dns.resolver.YXDOMAIN,",
          "",
          "[Removed Lines]",
          "473:         raise ValueError(\"Invalid DNS type {}\".format(rdtype))",
          "",
          "[Added Lines]",
          "475:         raise ValueError(f\"Invalid DNS type {rdtype}\")",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "489:     :param server: server to query",
          "490:     :return: [] of records or False if error",
          "491:     \"\"\"",
          "494:     if timeout is not None:",
          "496:     if server is not None:",
          "499:     cmd = __salt__[\"cmd.run_all\"](cmd, python_shell=False, output_loglevel=\"quiet\")",
          "",
          "[Removed Lines]",
          "492:     cmd = \"nslookup -query={} {}\".format(rdtype, name)",
          "495:         cmd += \" -timeout={}\".format(int(timeout))",
          "497:         cmd += \" {}\".format(server)",
          "",
          "[Added Lines]",
          "494:     cmd = f\"nslookup -query={rdtype} {name}\"",
          "497:         cmd += f\" -timeout={int(timeout)}\"",
          "499:         cmd += f\" {server}\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "511:     try:",
          "512:         line = next(lookup_res)",
          "513:         if \"unknown query type\" in line:",
          "516:         while True:",
          "517:             if name in line:",
          "",
          "[Removed Lines]",
          "514:             raise ValueError(\"Invalid DNS type {}\".format(rdtype))",
          "",
          "[Added Lines]",
          "516:             raise ValueError(f\"Invalid DNS type {rdtype}\")",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "582:     rdtype = rdtype.upper()",
          "585:     query_methods = (",
          "586:         (\"gai\", _lookup_gai, not any((rdtype not in (\"A\", \"AAAA\"), servers, secure))),",
          "587:         (\"dnspython\", _lookup_dnspython, HAS_DNSPYTHON),",
          "",
          "[Removed Lines]",
          "584:     # pylint: disable=bad-whitespace,multiple-spaces-before-keyword",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "590:         (\"host\", _lookup_host, HAS_HOST and not secure),",
          "591:         (\"nslookup\", _lookup_nslookup, HAS_NSLOOKUP and not secure),",
          "592:     )",
          "595:     try:",
          "596:         if method == \"auto\":",
          "",
          "[Removed Lines]",
          "593:     # pylint: enable=bad-whitespace,multiple-spaces-before-keyword",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "895:             # It's a modifier",
          "896:             mod, val = mech_spec.split(\"=\", 1)",
          "897:             if mod in mods:",
          "900:             mods.add(mod)",
          "901:             continue",
          "",
          "[Removed Lines]",
          "898:                 raise KeyError(\"Modifier {} can only appear once\".format(mod))",
          "",
          "[Added Lines]",
          "898:                 raise KeyError(f\"Modifier {mod} can only appear once\")",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "960:     if domain:",
          "961:         domain = \".\" + domain",
          "965: def srv_rec(rdatas):",
          "",
          "[Removed Lines]",
          "962:     return \"_{}._{}{}\".format(svc, proto, domain)",
          "",
          "[Added Lines]",
          "962:     return f\"_{svc}._{proto}{domain}\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1133:                         if not curr_desc:",
          "1134:                             pp_res[\"desc\"] = comment",
          "1135:                         elif comment != curr_desc:",
          "1137:                 res[name] = svc_res",
          "1139:     for svc, data in res.items():",
          "",
          "[Removed Lines]",
          "1136:                             pp_res[\"desc\"] = \"{}, {}\".format(curr_desc, comment)",
          "",
          "[Added Lines]",
          "1136:                             pp_res[\"desc\"] = f\"{curr_desc}, {comment}\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1210:                                             ip_addr",
          "1211:                                         )",
          "1212:                                         ip_net = ipaddress.ip_network(",
          "1214:                                         )",
          "1215:                                     if ip_net.version == 6:",
          "1216:                                         # TODO",
          "",
          "[Removed Lines]",
          "1213:                                             \"{}{}\".format(ip_addr, mask), strict=False",
          "",
          "[Added Lines]",
          "1213:                                             f\"{ip_addr}{mask}\", strict=False",
          "",
          "---------------"
        ],
        "salt/utils/dockermod/__init__.py||salt/utils/dockermod/__init__.py": [
          "File: salt/utils/dockermod/__init__.py -> salt/utils/dockermod/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: # functions so that we can get argspecs for the container config, host config,",
          "26: # and networking config (see the get_client_args() function).",
          "27: try:",
          "29: except ImportError:",
          "30:     pass",
          "31: try:",
          "33: except ImportError:",
          "34:     pass",
          "",
          "[Removed Lines]",
          "28:     import docker.types",
          "32:     import docker.utils",
          "",
          "[Added Lines]",
          "28:     import docker.types  # pylint: disable=no-name-in-module",
          "32:     import docker.utils  # pylint: disable=no-name-in-module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241:             pass",
          "243:     except Exception as exc:  # pylint: disable=broad-except",
          "245:         log.error(\"Error translating input: '%s'\", error_message, exc_info=True)",
          "246:     else:",
          "247:         error_message = None",
          "",
          "[Removed Lines]",
          "244:         error_message = exc.__str__()",
          "",
          "[Added Lines]",
          "244:         error_message = str(exc)",
          "",
          "---------------"
        ],
        "salt/utils/dockermod/translate/container.py||salt/utils/dockermod/translate/container.py": [
          "File: salt/utils/dockermod/translate/container.py -> salt/utils/dockermod/translate/container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "378:                 try:",
          "379:                     start, end = helpers.get_port_range(container_port)",
          "380:                 except ValueError as exc:",
          "384:                 bind_vals = [",
          "385:                     (_format_port(port_num, proto), None)",
          "386:                     for port_num in range(start, end + 1)",
          "",
          "[Removed Lines]",
          "381:                     # Using __str__() to avoid deprecation warning for using",
          "382:                     # the message attribute of the ValueError.",
          "383:                     raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "381:                     raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:                     cport_start, cport_end = helpers.get_port_range(container_port)",
          "404:                     hport_start, hport_end = helpers.get_port_range(bind_parts[0])",
          "405:                 except ValueError as exc:",
          "409:                 if (hport_end - hport_start) != (cport_end - cport_start):",
          "410:                     # Port range is mismatched",
          "411:                     raise SaltInvocationError(",
          "",
          "[Removed Lines]",
          "406:                     # Using __str__() to avoid deprecation warning for",
          "407:                     # using the message attribute of the ValueError.",
          "408:                     raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "404:                     raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "427:                 try:",
          "428:                     cport_start, cport_end = helpers.get_port_range(container_port)",
          "429:                 except ValueError as exc:",
          "433:                 cport_list = list(range(cport_start, cport_end + 1))",
          "434:                 if host_port == \"\":",
          "435:                     hport_list = [None] * len(cport_list)",
          "",
          "[Removed Lines]",
          "430:                     # Using __str__() to avoid deprecation warning for",
          "431:                     # using the message attribute of the ValueError.",
          "432:                     raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "426:                     raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "437:                     try:",
          "438:                         hport_start, hport_end = helpers.get_port_range(host_port)",
          "439:                     except ValueError as exc:",
          "443:                     hport_list = list(range(hport_start, hport_end + 1))",
          "445:                     if (hport_end - hport_start) != (cport_end - cport_start):",
          "",
          "[Removed Lines]",
          "440:                         # Using __str__() to avoid deprecation warning for",
          "441:                         # using the message attribute of the ValueError.",
          "442:                         raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "434:                         raise SaltInvocationError(str(exc))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "526:         try:",
          "527:             range_start, range_end = helpers.get_port_range(item)",
          "528:         except ValueError as exc:",
          "532:         new_ports.update(",
          "533:             [helpers.get_port_def(x, proto) for x in range(range_start, range_end + 1)]",
          "534:         )",
          "",
          "[Removed Lines]",
          "529:             # Using __str__() to avoid deprecation warning for using",
          "530:             # the \"message\" attribute of the ValueError.",
          "531:             raise SaltInvocationError(exc.__str__())",
          "",
          "[Added Lines]",
          "521:             raise SaltInvocationError(str(exc))",
          "",
          "---------------"
        ],
        "salt/utils/dockermod/translate/helpers.py||salt/utils/dockermod/translate/helpers.py": [
          "File: salt/utils/dockermod/translate/helpers.py -> salt/utils/dockermod/translate/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:         if range_start > range_end:",
          "73:             raise ValueError(\"start > end\")",
          "74:     except (TypeError, ValueError) as exc:",
          "76:             msg = (",
          "77:                 \"Start of port range ({}) cannot be greater than end of \"",
          "78:                 \"port range ({})\".format(range_start, range_end)",
          "",
          "[Removed Lines]",
          "75:         if exc.__str__() == \"start > end\":",
          "",
          "[Added Lines]",
          "75:         if str(exc) == \"start > end\":",
          "",
          "---------------"
        ],
        "salt/utils/files.py||salt/utils/files.py": [
          "File: salt/utils/files.py -> salt/utils/files.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:         # Don't attempt on Windows, or if no mask was passed",
          "323:         yield",
          "324:     else:",
          "325:         try:",
          "327:             yield",
          "328:         finally:",
          "329:             os.umask(orig_mask)  # pylint: disable=blacklisted-function",
          "",
          "[Removed Lines]",
          "326:             orig_mask = os.umask(mask)  # pylint: disable=blacklisted-function",
          "",
          "[Added Lines]",
          "325:         orig_mask = os.umask(mask)  # pylint: disable=blacklisted-function",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:         )",
          "391:         kwargs[\"buffering\"] = io.DEFAULT_BUFFER_SIZE",
          "395:     if is_fcntl_available():",
          "396:         # modify the file descriptor on systems with fcntl",
          "",
          "[Removed Lines]",
          "393:     f_handle = open(*args, **kwargs)  # pylint: disable=resource-leakage",
          "",
          "[Added Lines]",
          "393:     f_handle = open(  # pylint: disable=resource-leakage,unspecified-encoding",
          "395:     )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "649:     If more than 30% of the chars in the block are non-text, or there",
          "650:     are NUL ('\\x00') bytes in the block, assume this is a binary file.",
          "651:     \"\"\"",
          "653:     text_characters = b\"\".join(int2byte(i) for i in range(32, 127)) + b\"\\n\\r\\t\\f\\b\"",
          "654:     try:",
          "655:         block = fp_.read(blocksize)",
          "",
          "[Removed Lines]",
          "652:     int2byte = lambda x: bytes((x,))",
          "",
          "[Added Lines]",
          "655:     def int2byte(x):",
          "656:         return bytes((x,))",
          "",
          "---------------"
        ],
        "salt/utils/fsutils.py||salt/utils/fsutils.py": [
          "File: salt/utils/fsutils.py -> salt/utils/fsutils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     \"\"\"",
          "58:     Parse blkid output.",
          "59:     \"\"\"",
          "61:     data = {}",
          "62:     for dev_meta in flt(out.split(\"\\n\\n\")):",
          "63:         dev = {}",
          "",
          "[Removed Lines]",
          "60:     flt = lambda data: [el for el in data if el.strip()]",
          "",
          "[Added Lines]",
          "61:     def flt(data):",
          "62:         return [el for el in data if el.strip()]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:     :param fs_type: Filter only devices that are formatted by that file system.",
          "86:     \"\"\"",
          "88:     data = dict()",
          "89:     for dev_meta in flt(",
          "90:         os.popen(\"blkid -o full\").read().split(os.linesep)",
          "",
          "[Removed Lines]",
          "87:     flt = lambda data: [el for el in data if el.strip()]",
          "",
          "[Added Lines]",
          "91:     def flt(data):",
          "92:         return [el for el in data if el.strip()]",
          "",
          "---------------"
        ],
        "salt/utils/functools.py||salt/utils/functools.py": [
          "File: salt/utils/functools.py -> salt/utils/functools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     # function_kwargs is initialized to a dictionary of keyword arguments the function to be run accepts",
          "120:     function_kwargs = dict(",
          "121:         zip(",
          "125:             argspec.defaults or [],",
          "126:         )",
          "127:     )",
          "",
          "[Removed Lines]",
          "122:             argspec.args[",
          "123:                 -len(argspec.defaults or []) :",
          "124:             ],  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "122:             argspec.args[-len(argspec.defaults or []) :],",
          "",
          "---------------"
        ],
        "salt/utils/gitfs.py||salt/utils/gitfs.py": [
          "File: salt/utils/gitfs.py -> salt/utils/gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:     if PYGIT2_VERSION <= Version(\"0.26.3\"):",
          "119:         try:",
          "120:             import pygit2.ffi",
          "122:         except ImportError:",
          "123:             # If we couldn't import these, then we're using an old enough",
          "124:             # version where ffi isn't in use and this workaround would be",
          "",
          "[Removed Lines]",
          "121:             import pygit2.remote",
          "",
          "[Added Lines]",
          "121:             import pygit2.remote  # pylint: disable=no-name-in-module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:     ):",
          "245:         self.opts = opts",
          "246:         self.role = role",
          "247:         self.global_saltenv = salt.utils.data.repack_dictlist(",
          "248:             self.opts.get(\"{}_saltenv\".format(self.role), []),",
          "249:             strict=True,",
          "250:             recurse=True,",
          "251:             key_cb=str,",
          "253:         )",
          "254:         self.conf = copy.deepcopy(per_remote_defaults)",
          "255:         # Remove the 'salt://' from the beginning of any globally-defined",
          "",
          "[Removed Lines]",
          "252:             val_cb=lambda x, y: str(y),",
          "",
          "[Added Lines]",
          "248:         def _val_cb(x, y):",
          "249:             return str(y)",
          "256:             val_cb=_val_cb,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "473:             try:",
          "474:                 self._cache_basename = self.get_checkout_target()",
          "475:             except AttributeError:",
          "477:                 failhard(self.role)",
          "478:         self._cache_full_basename = salt.utils.path.join(",
          "479:             self._cache_basehash, self._cache_basename",
          "",
          "[Removed Lines]",
          "476:                 log.critical(f\"__env__ cant generate basename: {self.role} {self.id}\")",
          "",
          "[Added Lines]",
          "480:                 log.critical(",
          "481:                     \"__env__ cant generate basename: %s %s\", self.role, self.id",
          "482:                 )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "574:         \"\"\"",
          "576:         def _getconf(self, tgt_env=\"base\"):",
          "580:             if self.role != \"gitfs\":",
          "581:                 return strip_sep(getattr(self, \"_\" + name))",
          "582:             # Get saltenv-specific configuration",
          "",
          "[Removed Lines]",
          "577:             strip_sep = (",
          "578:                 lambda x: x.rstrip(os.sep) if name in (\"root\", \"mountpoint\") else x",
          "579:             )",
          "",
          "[Added Lines]",
          "583:             def strip_sep(x):",
          "584:                 return x.rstrip(os.sep) if name in (\"root\", \"mountpoint\") else x",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1203:     def fetch_request_check(self):",
          "1204:         fetch_request = salt.utils.path.join(self._salt_working_dir, \"fetch_request\")",
          "1205:         if os.path.isfile(fetch_request):",
          "1207:             try:",
          "1208:                 os.remove(fetch_request)",
          "1209:             except OSError as exc:",
          "1210:                 log.error(",
          "1212:                     exc_info=True,",
          "1213:                 )",
          "1214:             self.fetch()",
          "",
          "[Removed Lines]",
          "1206:             log.debug(f\"Fetch request: {self._salt_working_dir}\")",
          "1211:                     f\"Failed to remove Fetch request: {self._salt_working_dir} {exc}\",",
          "",
          "[Added Lines]",
          "1212:             log.debug(\"Fetch request: %s\", self._salt_working_dir)",
          "1217:                     \"Failed to remove Fetch request: %s %s\",",
          "1218:                     self._salt_working_dir,",
          "1219:                     exc,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1426:                 tree = tree / self.root(tgt_env)",
          "1427:             except KeyError:",
          "1428:                 return ret",
          "1430:         else:",
          "1435:         for blob in tree.traverse():",
          "1436:             if isinstance(blob, git.Tree):",
          "1437:                 ret.add(add_mountpoint(relpath(blob.path)))",
          "",
          "[Removed Lines]",
          "1429:             relpath = lambda path: os.path.relpath(path, self.root(tgt_env))",
          "1431:             relpath = lambda path: path",
          "1432:         add_mountpoint = lambda path: salt.utils.path.join(",
          "1433:             self.mountpoint(tgt_env), path, use_posixpath=True",
          "1434:         )",
          "",
          "[Added Lines]",
          "1438:             def relpath(path):",
          "1439:                 return os.path.relpath(path, self.root(tgt_env))",
          "1443:             def relpath(path):",
          "1444:                 return path",
          "1446:         def add_mountpoint(path):",
          "1447:             return salt.utils.path.join(",
          "1448:                 self.mountpoint(tgt_env), path, use_posixpath=True",
          "1449:             )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1498:                 tree = tree / self.root(tgt_env)",
          "1499:             except KeyError:",
          "1500:                 return files, symlinks",
          "1502:         else:",
          "1507:         for file_blob in tree.traverse():",
          "1508:             if not isinstance(file_blob, git.Blob):",
          "1509:                 continue",
          "",
          "[Removed Lines]",
          "1501:             relpath = lambda path: os.path.relpath(path, self.root(tgt_env))",
          "1503:             relpath = lambda path: path",
          "1504:         add_mountpoint = lambda path: salt.utils.path.join(",
          "1505:             self.mountpoint(tgt_env), path, use_posixpath=True",
          "1506:         )",
          "",
          "[Added Lines]",
          "1518:             def relpath(path):",
          "1519:                 return os.path.relpath(path, self.root(tgt_env))",
          "1523:             def relpath(path):",
          "1524:                 return path",
          "1526:         def add_mountpoint(path):",
          "1527:             return salt.utils.path.join(",
          "1528:                 self.mountpoint(tgt_env), path, use_posixpath=True",
          "1529:             )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1945:                 return ret",
          "1946:             if not isinstance(tree, pygit2.Tree):",
          "1947:                 return ret",
          "1949:         else:",
          "1951:         blobs = []",
          "1952:         if tree:",
          "1953:             _traverse(tree, blobs, self.root(tgt_env))",
          "1957:         for blob in blobs:",
          "1958:             ret.add(add_mountpoint(relpath(blob)))",
          "1959:         if self.mountpoint(tgt_env):",
          "",
          "[Removed Lines]",
          "1948:             relpath = lambda path: os.path.relpath(path, self.root(tgt_env))",
          "1950:             relpath = lambda path: path",
          "1954:         add_mountpoint = lambda path: salt.utils.path.join(",
          "1955:             self.mountpoint(tgt_env), path, use_posixpath=True",
          "1956:         )",
          "",
          "[Added Lines]",
          "1973:             def relpath(path):",
          "1974:                 return os.path.relpath(path, self.root(tgt_env))",
          "1978:             def relpath(path):",
          "1979:                 return path",
          "1985:         def add_mountpoint(path):",
          "1986:             return salt.utils.path.join(",
          "1987:                 self.mountpoint(tgt_env), path, use_posixpath=True",
          "1988:             )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2086:                 return files, symlinks",
          "2087:             if not isinstance(tree, pygit2.Tree):",
          "2088:                 return files, symlinks",
          "2090:         else:",
          "2092:         blobs = {}",
          "2093:         if tree:",
          "2094:             _traverse(tree, blobs, self.root(tgt_env))",
          "2098:         for repo_path in blobs.get(\"files\", []):",
          "2099:             files.add(add_mountpoint(relpath(repo_path)))",
          "2100:         for repo_path, link_tgt in blobs.get(\"symlinks\", {}).items():",
          "",
          "[Removed Lines]",
          "2089:             relpath = lambda path: os.path.relpath(path, self.root(tgt_env))",
          "2091:             relpath = lambda path: path",
          "2095:         add_mountpoint = lambda path: salt.utils.path.join(",
          "2096:             self.mountpoint(tgt_env), path, use_posixpath=True",
          "2097:         )",
          "",
          "[Added Lines]",
          "2123:             def relpath(path):",
          "2124:                 return os.path.relpath(path, self.root(tgt_env))",
          "2128:             def relpath(path):",
          "2129:                 return path",
          "2135:         def add_mountpoint(path):",
          "2136:             return salt.utils.path.join(",
          "2137:                 self.mountpoint(tgt_env), path, use_posixpath=True",
          "2138:             )",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2181:         if PYGIT2_VERSION >= Version(\"0.23.2\"):",
          "2182:             self.remotecallbacks = pygit2.RemoteCallbacks(credentials=self.credentials)",
          "2183:             if not self.ssl_verify:",
          "2185:                 # just returns True, thus skipping the cert check.",
          "2187:         else:",
          "2188:             self.remotecallbacks = None",
          "2189:             if not self.ssl_verify:",
          "",
          "[Removed Lines]",
          "2184:                 # Override the certificate_check function with a lambda that",
          "2186:                 self.remotecallbacks.certificate_check = lambda *args, **kwargs: True",
          "",
          "[Added Lines]",
          "2226:                 # Override the certificate_check function with another that",
          "2228:                 def _certificate_check(*args, **kwargs):",
          "2229:                     return True",
          "2231:                 self.remotecallbacks.certificate_check = _certificate_check",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2663:                                     pass",
          "2664:                             except OSError as exc:  # pylint: disable=broad-except",
          "2665:                                 log.error(",
          "2667:                                     exc_info=True,",
          "2668:                                 )",
          "2669:                         else:",
          "2671:                     if repo.fetch():",
          "2672:                         # We can't just use the return value from repo.fetch()",
          "2673:                         # because the data could still have changed if old",
          "",
          "[Removed Lines]",
          "2666:                                     f\"Failed to make fetch request: {fetch_path} {exc}\",",
          "2670:                             log.error(f\"Failed to make fetch request: {fetch_path}\")",
          "",
          "[Added Lines]",
          "2711:                                     \"Failed to make fetch request: %s %s\",",
          "2712:                                     fetch_path,",
          "2713:                                     exc,",
          "2717:                             log.error(\"Failed to make fetch request: %s\", fetch_path)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3437:                                         \"Failed to remove existing git_pillar \"",
          "3438:                                         \"mountpoint link %s: %s\",",
          "3439:                                         lcachelink,",
          "3441:                                     )",
          "3442:                                 wipe_linkdir = False",
          "3443:                                 create_link = True",
          "",
          "[Removed Lines]",
          "3440:                                         exc.__str__(),",
          "",
          "[Added Lines]",
          "3487:                                         exc,",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3457:                         log.error(",
          "3458:                             \"Failed to os.makedirs() linkdir parent %s: %s\",",
          "3459:                             ldirname,",
          "3461:                         )",
          "3462:                         return False",
          "",
          "[Removed Lines]",
          "3460:                             exc.__str__(),",
          "",
          "[Added Lines]",
          "3507:                             exc,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3475:                             \"Failed to create symlink to %s at path %s: %s\",",
          "3476:                             lcachedest,",
          "3477:                             lcachelink,",
          "3479:                         )",
          "3480:                         return False",
          "3481:         except GitLockError:",
          "",
          "[Removed Lines]",
          "3478:                             exc.__str__(),",
          "",
          "[Added Lines]",
          "3525:                             exc,",
          "",
          "---------------"
        ],
        "salt/utils/iam.py||salt/utils/iam.py": [
          "File: salt/utils/iam.py -> salt/utils/iam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     Based heavily on boto.utils.retry_url",
          "25:     \"\"\"",
          "26:     for i in range(0, num_retries):",
          "27:         try:",
          "28:             result = requests.get(url, timeout=timeout, proxies={\"http\": \"\"})",
          "29:             if hasattr(result, \"text\"):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:         exc = None",
          "",
          "---------------"
        ],
        "salt/utils/jinja.py||salt/utils/jinja.py": [
          "File: salt/utils/jinja.py -> salt/utils/jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:         for key, value in self.items():",
          "240:             if isinstance(value, str):",
          "241:                 # keeps quotes around strings",
          "243:                 output.append(f\"{key!r}: {value!r}\")",
          "245:             else:",
          "246:                 # let default output",
          "247:                 output.append(f\"{key!r}: {value!s}\")",
          "",
          "[Removed Lines]",
          "242:                 # pylint: disable=repr-flag-used-in-string",
          "244:                 # pylint: enable=repr-flag-used-in-string",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252:         for key, value in self.items():",
          "253:             # Raw string formatter required here because this is a repr",
          "254:             # function.",
          "256:             output.append(f\"{key!r}: {value!r}\")",
          "258:         return \"{\" + \", \".join(output) + \"}\"",
          "",
          "[Removed Lines]",
          "255:             # pylint: disable=repr-flag-used-in-string",
          "257:             # pylint: enable=repr-flag-used-in-string",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/utils/msazure.py||salt/utils/msazure.py": [
          "File: salt/utils/msazure.py -> salt/utils/msazure.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:         \"x_ms_lease_id\": kwargs.get(\"lease_id\", None),",
          "109:     }",
          "110:     if \"blob_path\" in kwargs:",
          "112:             file_path=kwargs[\"blob_path\"], **blob_kwargs",
          "113:         )",
          "114:     elif \"blob_content\" in kwargs:",
          "116:             blob=kwargs[\"blob_content\"], **blob_kwargs",
          "117:         )",
          "122: def get_blob(storage_conn=None, **kwargs):",
          "123:     \"\"\"",
          "",
          "[Removed Lines]",
          "111:         data = storage_conn.put_block_blob_from_path(",
          "115:         data = storage_conn.put_block_blob_from_bytes(",
          "119:     return data",
          "",
          "[Added Lines]",
          "111:         return storage_conn.put_block_blob_from_path(",
          "115:         return storage_conn.put_block_blob_from_bytes(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:     }",
          "159:     if \"local_path\" in kwargs:",
          "161:             file_path=kwargs[\"local_path\"],",
          "162:             open_mode=kwargs.get(\"open_mode\", \"wb\"),",
          "164:         )",
          "165:     elif \"return_content\" in kwargs:",
          "171: def object_to_dict(obj):",
          "",
          "[Removed Lines]",
          "160:         data = storage_conn.get_blob_to_path(",
          "166:         data = storage_conn.get_blob_to_bytes(**blob_kwargs)",
          "168:     return data",
          "",
          "[Added Lines]",
          "158:         return storage_conn.get_blob_to_path(",
          "164:         return storage_conn.get_blob_to_bytes(**blob_kwargs)",
          "",
          "---------------"
        ],
        "salt/utils/nacl.py||salt/utils/nacl.py": [
          "File: salt/utils/nacl.py -> salt/utils/nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: REQ_ERROR = None",
          "17: try:",
          "21:     REQ_ERROR = (",
          "22:         \"PyNaCl import error, perhaps missing python PyNaCl package or should update.\"",
          "23:     )",
          "",
          "[Removed Lines]",
          "18:     import nacl.public",
          "19:     import nacl.secret",
          "20: except (ImportError, OSError) as e:",
          "",
          "[Added Lines]",
          "18:     import nacl.public  # pylint: disable=no-name-in-module",
          "19:     import nacl.secret  # pylint: disable=no-name-in-module",
          "20: except ImportError:",
          "",
          "---------------"
        ],
        "salt/utils/napalm.py||salt/utils/napalm.py": [
          "File: salt/utils/napalm.py -> salt/utils/napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     # try importing ConnectionClosedException",
          "45:     # from napalm-base",
          "46:     # this exception has been introduced only in version 0.24.0",
          "47:     from napalm.base.exceptions import ConnectionClosedException",
          "49:     HAS_CONN_CLOSED_EXC_CLASS = True",
          "50: except ImportError:",
          "51:     HAS_CONN_CLOSED_EXC_CLASS = False",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:     # pylint: disable=unused-import,no-name-in-module",
          "50:     # pylint: enable=unused-import,no-name-in-module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:     else:",
          "94:         return (",
          "95:             False,",
          "100:         )",
          "",
          "[Removed Lines]",
          "96:             '\"{vname}\"\" {filename} cannot be loaded: '",
          "97:             \"NAPALM is not installed: ``pip install napalm``\".format(",
          "98:                 vname=virtualname, filename=\"({filename})\".format(filename=filename)",
          "99:             ),",
          "",
          "[Added Lines]",
          "99:             f'\"{virtualname}\" ({filename}) cannot be loaded: '",
          "100:             \"NAPALM is not installed: ``pip install napalm``\",",
          "",
          "---------------"
        ],
        "salt/utils/nb_popen.py||salt/utils/nb_popen.py": [
          "File: salt/utils/nb_popen.py -> salt/utils/nb_popen.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: mswindows = sys.platform == \"win32\"",
          "28:     import msvcrt",
          "30:     import pywintypes",
          "31:     from win32file import ReadFile, WriteFile",
          "32:     from win32pipe import PeekNamedPipe",
          "36: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "27: try:",
          "33: except ImportError:",
          "34:     import fcntl",
          "",
          "[Added Lines]",
          "27: if mswindows:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:             if conn is None:",
          "181:                 return None",
          "183:             flags = fcntl.fcntl(conn, fcntl.F_GETFL)",
          "184:             if not conn.closed:",
          "185:                 fcntl.fcntl(conn, fcntl.F_SETFL, flags | os.O_NONBLOCK)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181:             import fcntl",
          "",
          "---------------"
        ],
        "salt/utils/network.py||salt/utils/network.py": [
          "File: salt/utils/network.py -> salt/utils/network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1722:     valid = False",
          "1723:     tcp_end = \"dst\" if which_end == \"remote_port\" else \"src\"",
          "1724:     try:",
          "1728:     except subprocess.CalledProcessError:",
          "1729:         log.error(\"Failed ss\")",
          "1730:         raise",
          "",
          "[Removed Lines]",
          "1725:         data = subprocess.check_output(",
          "1726:             [\"ss\", \"-ant\", tcp_end, \":{}\".format(port)]",
          "1727:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1725:         data = subprocess.check_output([\"ss\", \"-ant\", tcp_end, f\":{port}\"])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1770:     \"\"\"",
          "1771:     remotes = set()",
          "1772:     try:",
          "1776:     except subprocess.CalledProcessError:",
          "1777:         log.error(\"Failed netstat\")",
          "1778:         raise",
          "",
          "[Removed Lines]",
          "1773:         data = subprocess.check_output(",
          "1774:             [\"netstat\", \"-f\", \"inet\", \"-n\"]",
          "1775:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1771:         data = subprocess.check_output([\"netstat\", \"-f\", \"inet\", \"-n\"])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1817:     remotes = set()",
          "1819:     try:",
          "1822:     except subprocess.CalledProcessError as ex:",
          "1823:         log.error('Failed \"sockstat\" with returncode = %s', ex.returncode)",
          "1824:         raise",
          "",
          "[Removed Lines]",
          "1820:         cmd = salt.utils.args.shlex_split(\"sockstat -4 -c -p {}\".format(port))",
          "1821:         data = subprocess.check_output(cmd)  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1816:         cmd = salt.utils.args.shlex_split(f\"sockstat -4 -c -p {port}\")",
          "1817:         data = subprocess.check_output(cmd)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1879:     remotes = set()",
          "1881:     try:",
          "1884:     except subprocess.CalledProcessError as ex:",
          "1885:         log.error('Failed \"sockstat\" with returncode = %s', ex.returncode)",
          "1886:         raise",
          "",
          "[Removed Lines]",
          "1882:         cmd = salt.utils.args.shlex_split(\"sockstat -4 -c -n -p {}\".format(port))",
          "1883:         data = subprocess.check_output(cmd)  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1878:         cmd = salt.utils.args.shlex_split(f\"sockstat -4 -c -n -p {port}\")",
          "1879:         data = subprocess.check_output(cmd)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1932:     \"\"\"",
          "1933:     remotes = set()",
          "1934:     try:",
          "1938:     except subprocess.CalledProcessError as exc:",
          "1939:         log.error('Failed \"netstat\" with returncode = %s', exc.returncode)",
          "1940:         raise",
          "",
          "[Removed Lines]",
          "1935:         data = subprocess.check_output(",
          "1936:             [\"netstat\", \"-nf\", \"inet\"]",
          "1937:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1931:         data = subprocess.check_output([\"netstat\", \"-nf\", \"inet\"])",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1973:     \"\"\"",
          "1974:     remotes = set()",
          "1975:     try:",
          "1979:     except subprocess.CalledProcessError:",
          "1980:         log.error(\"Failed netstat\")",
          "1981:         raise",
          "",
          "[Removed Lines]",
          "1976:         data = subprocess.check_output(",
          "1977:             [\"netstat\", \"-n\"]",
          "1978:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "1970:         data = subprocess.check_output([\"netstat\", \"-n\"])",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2024:                 \"-iTCP:{:d}\".format(port),",
          "2025:                 \"-n\",",
          "2026:                 \"-P\",",
          "2028:         )",
          "2029:     except subprocess.CalledProcessError as ex:",
          "2030:         if ex.returncode == 1:",
          "",
          "[Removed Lines]",
          "2027:             ]  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "2019:             ]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2089:     \"\"\"",
          "2090:     remotes = set()",
          "2091:     try:",
          "2095:     except subprocess.CalledProcessError:",
          "2096:         log.error(\"Failed netstat\")",
          "2097:         raise",
          "",
          "[Removed Lines]",
          "2092:         data = subprocess.check_output(",
          "2093:             [\"netstat\", \"-f\", \"inet\", \"-n\"]",
          "2094:         )  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "2084:         data = subprocess.check_output([\"netstat\", \"-f\", \"inet\", \"-n\"])",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2332:     {{ grains['ipv4'] | filter_by_networks(networks) }}",
          "2333:     \"\"\"",
          "2339:     if networks is not None:",
          "2340:         networks = [ipaddress.ip_network(network) for network in networks]",
          "",
          "[Removed Lines]",
          "2335:     _filter = lambda ips, networks: [",
          "2336:         ip for ip in ips for net in networks if ipaddress.ip_address(ip) in net",
          "2337:     ]",
          "",
          "[Added Lines]",
          "2325:     def _filter(ips, networks):",
          "2326:         return [ip for ip in ips for net in networks if ipaddress.ip_address(ip) in net]",
          "",
          "---------------"
        ],
        "salt/utils/odict.py||salt/utils/odict.py": [
          "File: salt/utils/odict.py -> salt/utils/odict.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     salt.utils.odict",
          "6:     ~~~~~~~~~~~~~~~~",
          "16:     combination of ``OrderedDict`` and ``defaultdict``",
          "17:     It's source was submitted here::",
          "19:         http://stackoverflow.com/questions/6190331/",
          "20: \"\"\"",
          "25: from collections.abc import Callable",
          "314: class DefaultOrderedDict(OrderedDict):",
          "315:     \"\"\"",
          "",
          "[Removed Lines]",
          "8:     This is a compatibility/\"importability\" layer for an ordered dictionary.",
          "9:     Tries to import from the standard library if python >= 2.7, then from the",
          "10:     ``ordereddict`` package available from PyPi, and, as a last resort,",
          "11:     provides an ``OrderedDict`` implementation based on::",
          "13:         http://code.activestate.com/recipes/576669/",
          "15:     It also implements a DefaultOrderedDict Class that serves  as a",
          "22: # pragma: no cover  # essentially using Python's OrderDict",
          "27: try:",
          "28:     # pylint: disable=E0611,minimum-python-version",
          "29:     import collections",
          "31:     class OrderedDict(collections.OrderedDict):",
          "32:         __hash__ = None",
          "34: except (ImportError, AttributeError):",
          "35:     try:",
          "36:         import ordereddict",
          "38:         class OrderedDict(ordereddict.OrderedDict):  # pylint: disable=W0232",
          "39:             __hash_ = None",
          "41:     except ImportError:",
          "42:         # {{{ http://code.activestate.com/recipes/576693/ (r9)",
          "43:         # Backport of OrderedDict() class that runs on Python 2.4, 2.5, 2.6, 2.7 and pypy.",
          "44:         # Passes Python2.7's test suite and incorporates all the latest updates.",
          "46:         try:",
          "47:             from _thread import get_ident as _get_ident",
          "48:         except ImportError:",
          "49:             from _dummy_thread import get_ident as _get_ident",
          "51:         #        try:",
          "52:         #            from _abcoll import KeysView, ValuesView, ItemsView",
          "53:         #        except ImportError:",
          "54:         #            pass",
          "56:         class OrderedDict(dict):",
          "57:             \"Dictionary that remembers insertion order\"",
          "58:             # An inherited dict maps keys to values.",
          "59:             # The inherited dict provides __getitem__, __len__, __contains__, and get.",
          "60:             # The remaining methods are order-aware.",
          "61:             # Big-O running times for all methods are the same as for regular dictionaries.",
          "63:             # The internal self.__map dictionary maps keys to links in a doubly linked list.",
          "64:             # The circular doubly linked list starts and ends with a sentinel element.",
          "65:             # The sentinel element never gets deleted (this simplifies the algorithm).",
          "66:             # Each link is stored as a list of length three:  [PREV, NEXT, KEY].",
          "67:             __hash_ = None",
          "69:             def __init__(self, *args, **kwds):  # pylint: disable=E1003",
          "70:                 \"\"\"Initialize an ordered dictionary.  Signature is the same as for",
          "71:                 regular dictionaries, but keyword arguments are not recommended",
          "72:                 because their insertion order is arbitrary.",
          "74:                 \"\"\"",
          "75:                 super().__init__()",
          "76:                 if len(args) > 1:",
          "77:                     raise TypeError(",
          "78:                         \"expected at most 1 arguments, got {}\".format(len(args))",
          "79:                     )",
          "80:                 try:",
          "81:                     self.__root",
          "82:                 except AttributeError:",
          "83:                     self.__root = root = []  # sentinel node",
          "84:                     root[:] = [root, root, None]",
          "85:                     self.__map = {}",
          "86:                 self.__update(*args, **kwds)",
          "88:             def __setitem__(self, key, value, dict_setitem=dict.__setitem__):",
          "89:                 \"od.__setitem__(i, y) <==> od[i]=y\"",
          "90:                 # Setting a new item creates a new link which goes at the end of the linked",
          "91:                 # list, and the inherited dictionary is updated with the new key/value pair.",
          "92:                 if key not in self:",
          "93:                     root = self.__root",
          "94:                     last = root[0]",
          "95:                     last[1] = root[0] = self.__map[key] = [last, root, key]",
          "96:                 dict_setitem(self, key, value)",
          "98:             def __delitem__(self, key, dict_delitem=dict.__delitem__):",
          "99:                 \"od.__delitem__(y) <==> del od[y]\"",
          "100:                 # Deleting an existing item uses self.__map to find the link which is",
          "101:                 # then removed by updating the links in the predecessor and successor nodes.",
          "102:                 dict_delitem(self, key)",
          "103:                 link_prev, link_next, key = self.__map.pop(key)",
          "104:                 link_prev[1] = link_next",
          "105:                 link_next[0] = link_prev",
          "107:             def __iter__(self):",
          "108:                 \"od.__iter__() <==> iter(od)\"",
          "109:                 root = self.__root",
          "110:                 curr = root[1]",
          "111:                 while curr is not root:",
          "112:                     yield curr[2]",
          "113:                     curr = curr[1]",
          "115:             def __reversed__(self):",
          "116:                 \"od.__reversed__() <==> reversed(od)\"",
          "117:                 root = self.__root",
          "118:                 curr = root[0]",
          "119:                 while curr is not root:",
          "120:                     yield curr[2]",
          "121:                     curr = curr[0]",
          "123:             def clear(self):",
          "124:                 \"od.clear() -> None.  Remove all items from od.\"",
          "125:                 try:",
          "126:                     for node in self.__map.values():",
          "127:                         del node[:]",
          "128:                     root = self.__root",
          "129:                     root[:] = [root, root, None]",
          "130:                     self.__map.clear()",
          "131:                 except AttributeError:",
          "132:                     pass",
          "133:                 dict.clear(self)",
          "135:             def popitem(self, last=True):",
          "136:                 \"\"\"od.popitem() -> (k, v), return and remove a (key, value) pair.",
          "137:                 Pairs are returned in LIFO order if last is true or FIFO order if false.",
          "139:                 \"\"\"",
          "140:                 if not self:",
          "141:                     raise KeyError(\"dictionary is empty\")",
          "142:                 root = self.__root",
          "143:                 if last:",
          "144:                     link = root[0]",
          "145:                     link_prev = link[0]",
          "146:                     link_prev[1] = root",
          "147:                     root[0] = link_prev",
          "148:                 else:",
          "149:                     link = root[1]",
          "150:                     link_next = link[1]",
          "151:                     root[1] = link_next",
          "152:                     link_next[0] = root",
          "153:                 key = link[2]",
          "154:                 del self.__map[key]",
          "155:                 value = dict.pop(self, key)",
          "156:                 return key, value",
          "158:             # -- the following methods do not depend on the internal structure --",
          "160:             def keys(self):",
          "161:                 \"od.keys() -> list of keys in od\"",
          "162:                 return list(self)",
          "164:             def values(self):",
          "165:                 \"od.values() -> list of values in od\"",
          "166:                 return [self[key] for key in self]",
          "168:             def items(self):",
          "169:                 \"od.items() -> list of (key, value) pairs in od\"",
          "170:                 return [(key, self[key]) for key in self]",
          "172:             def iterkeys(self):",
          "173:                 \"od.iterkeys() -> an iterator over the keys in od\"",
          "174:                 return iter(self)",
          "176:             def itervalues(self):",
          "177:                 \"od.itervalues -> an iterator over the values in od\"",
          "178:                 for k in self:",
          "179:                     yield self[k]",
          "181:             def iteritems(self):",
          "182:                 \"od.iteritems -> an iterator over the (key, value) items in od\"",
          "183:                 for k in self:",
          "184:                     yield (k, self[k])",
          "186:             def update(*args, **kwds):  # pylint: disable=E0211",
          "187:                 \"\"\"od.update(E, **F) -> None.  Update od from dict/iterable E and F.",
          "189:                 If E is a dict instance, does:           for k in E: od[k] = E[k]",
          "190:                 If E has a .keys() method, does:         for k in E.keys(): od[k] = E[k]",
          "191:                 Or if E is an iterable of items, does:   for k, v in E: od[k] = v",
          "192:                 In either case, this is followed by:     for k, v in F.items(): od[k] = v",
          "194:                 \"\"\"",
          "195:                 if len(args) > 2:",
          "196:                     raise TypeError(",
          "197:                         \"update() takes at most 2 positional \"",
          "198:                         \"arguments ({} given)\".format(len(args))",
          "199:                     )",
          "200:                 elif not args:",
          "201:                     raise TypeError(\"update() takes at least 1 argument (0 given)\")",
          "202:                 self = args[0]",
          "203:                 # Make progressively weaker assumptions about \"other\"",
          "204:                 other = ()",
          "205:                 if len(args) == 2:",
          "206:                     other = args[1]",
          "207:                 if isinstance(other, dict):",
          "208:                     for key in other:",
          "209:                         self[key] = other[key]",
          "210:                 elif hasattr(other, \"keys\"):",
          "211:                     for key in other:",
          "212:                         self[key] = other[key]",
          "213:                 else:",
          "214:                     for key, value in other:",
          "215:                         self[key] = value",
          "216:                 for key, value in kwds.items():",
          "217:                     self[key] = value",
          "219:             __update = (",
          "220:                 update  # let subclasses override update without breaking __init__",
          "221:             )",
          "223:             __marker = object()",
          "225:             def pop(self, key, default=__marker):",
          "226:                 \"\"\"od.pop(k[,d]) -> v, remove specified key and return the corresponding value.",
          "227:                 If key is not found, d is returned if given, otherwise KeyError is raised.",
          "229:                 \"\"\"",
          "230:                 if key in self:",
          "231:                     result = self[key]",
          "232:                     del self[key]",
          "233:                     return result",
          "234:                 if default is self.__marker:",
          "235:                     raise KeyError(key)",
          "236:                 return default",
          "238:             def setdefault(self, key, default=None):",
          "239:                 \"od.setdefault(k[,d]) -> od.get(k,d), also set od[k]=d if k not in od\"",
          "240:                 if key in self:",
          "241:                     return self[key]",
          "242:                 self[key] = default",
          "243:                 return default",
          "245:             def __repr__(self, _repr_running={}):  # pylint: disable=W0102",
          "246:                 \"od.__repr__() <==> repr(od)\"",
          "247:                 call_key = id(self), _get_ident()",
          "248:                 if call_key in _repr_running:",
          "249:                     return \"...\"",
          "250:                 _repr_running[call_key] = 1",
          "251:                 try:",
          "252:                     if not self:",
          "253:                         return \"{}()\".format(self.__class__.__name__)",
          "254:                     return \"{}('{}')\".format(",
          "255:                         self.__class__.__name__, list(self.items())",
          "256:                     )",
          "257:                 finally:",
          "258:                     del _repr_running[call_key]",
          "260:             def __reduce__(self):",
          "261:                 \"Return state information for pickling\"",
          "262:                 items = [[k, self[k]] for k in self]",
          "263:                 inst_dict = vars(self).copy()",
          "264:                 for k in vars(OrderedDict()):",
          "265:                     inst_dict.pop(k, None)",
          "266:                 if inst_dict:",
          "267:                     return (self.__class__, (items,), inst_dict)",
          "268:                 return self.__class__, (items,)",
          "270:             def copy(self):",
          "271:                 \"od.copy() -> a shallow copy of od\"",
          "272:                 return self.__class__(self)",
          "274:             @classmethod",
          "275:             def fromkeys(cls, iterable, value=None):",
          "276:                 \"\"\"OD.fromkeys(S[, v]) -> New ordered dictionary with keys from S",
          "277:                 and values equal to v (which defaults to None).",
          "279:                 \"\"\"",
          "280:                 d = cls()",
          "281:                 for key in iterable:",
          "282:                     d[key] = value",
          "283:                 return d",
          "285:             def __eq__(self, other):",
          "286:                 \"\"\"od.__eq__(y) <==> od==y.  Comparison to another OD is order-sensitive",
          "287:                 while comparison to a regular mapping is order-insensitive.",
          "289:                 \"\"\"",
          "290:                 if isinstance(other, OrderedDict):",
          "291:                     return len(self) == len(other) and self.items() == other.items()",
          "292:                 return dict.__eq__(self, other)",
          "294:             def __ne__(self, other):",
          "295:                 return not self == other",
          "298: #            # -- the following methods are only used in Python 2.7 --",
          "299: #",
          "300: #            def viewkeys(self):",
          "301: #                \"od.viewkeys() -> a set-like object providing a view on od's keys\"",
          "302: #                return KeysView(self)",
          "303: #",
          "304: #            def viewvalues(self):",
          "305: #                \"od.viewvalues() -> an object providing a view on od's values\"",
          "306: #                return ValuesView(self)",
          "307: #",
          "308: #            def viewitems(self):",
          "309: #                \"od.viewitems() -> a set-like object providing a view on od's items\"",
          "310: #                return ItemsView(self)",
          "311: #        ## end of http://code.activestate.com/recipes/576693/ }}}",
          "",
          "[Added Lines]",
          "8:     Implements a DefaultOrderedDict Class that serves  as a",
          "14: import copy",
          "15: from collections import OrderedDict",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:         return type(self), args, None, None, self.items()",
          "344:     def copy(self):",
          "347:     def __copy__(self):",
          "348:         return type(self)(self.default_factory, self)",
          "",
          "[Removed Lines]",
          "345:         return self.__copy__()",
          "",
          "[Added Lines]",
          "50:         return copy.copy(self)",
          "",
          "---------------"
        ],
        "salt/utils/openstack/nova.py||salt/utils/openstack/nova.py": [
          "File: salt/utils/openstack/nova.py -> salt/utils/openstack/nova.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:             self.extra[\"password\"] = password",
          "199:     def __str__(self):",
          "203: def get_entry(dict_, key, value, raise_error=True):",
          "",
          "[Removed Lines]",
          "200:         return self.__dict__",
          "",
          "[Added Lines]",
          "200:         return str(self.__dict__)",
          "",
          "---------------"
        ],
        "salt/utils/oset.py||salt/utils/oset.py": [
          "File: salt/utils/oset.py -> salt/utils/oset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:     def __contains__(self, key):",
          "114:         return key in self.map",
          "117:         \"\"\"",
          "118:         Add `key` as an item to this OrderedSet, then return its index.",
          "",
          "[Removed Lines]",
          "116:     def add(self, key):  # pylint: disable=arguments-differ",
          "",
          "[Added Lines]",
          "116:     def add(self, key):  # pylint: disable=arguments-differ,arguments-renamed",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:         del self.map[elem]",
          "169:         return elem",
          "172:         \"\"\"",
          "173:         Remove an element.  Do not raise an exception if absent.",
          "",
          "[Removed Lines]",
          "171:     def discard(self, key):  # pylint: disable=arguments-differ",
          "",
          "[Added Lines]",
          "171:     def discard(self, key):  # pylint: disable=arguments-differ,arguments-renamed",
          "",
          "---------------"
        ],
        "salt/utils/parsers.py||salt/utils/parsers.py": [
          "File: salt/utils/parsers.py -> salt/utils/parsers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: import copy",
          "14: import getpass",
          "15: import logging",
          "17: import os",
          "18: import signal",
          "19: import sys",
          "",
          "[Removed Lines]",
          "16: import optparse",
          "",
          "[Added Lines]",
          "16: import optparse  # pylint: disable=deprecated-module",
          "",
          "---------------"
        ],
        "salt/utils/path.py||salt/utils/path.py": [
          "File: salt/utils/path.py -> salt/utils/path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:         # The specified extension isn't valid, so we just assume it's part of the",
          "183:         # filename and proceed to walk the pathext list",
          "184:         else:",
          "189:     else:",
          "190:         # in posix, there's no such thing as file extensions..only zuul",
          "",
          "[Removed Lines]",
          "185:             is_executable = lambda path, membership=res: is_executable_common(",
          "186:                 path",
          "187:             ) and has_executable_ext(path, membership)",
          "",
          "[Added Lines]",
          "186:             def is_executable(path, membership=res):",
          "187:                 return is_executable_common(path) and has_executable_ext(",
          "188:                     path, membership",
          "189:                 )",
          "",
          "---------------"
        ],
        "salt/utils/pkg/__init__.py||salt/utils/pkg/__init__.py": [
          "File: salt/utils/pkg/__init__.py -> salt/utils/pkg/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         if exc.errno != errno.ENOENT:",
          "34:             # Using __str__() here to get the fully-formatted error message",
          "35:             # (error number, error message, path)",
          "39: def write_rtag(opts):",
          "",
          "[Removed Lines]",
          "36:             log.warning(\"Encountered error removing rtag: %s\", exc.__str__())",
          "",
          "[Added Lines]",
          "36:             log.warning(\"Encountered error removing rtag: %s\", exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:             with salt.utils.files.fopen(rtag_file, \"w+\"):",
          "47:                 pass",
          "48:         except OSError as exc:",
          "52: def check_refresh(opts, refresh=None):",
          "",
          "[Removed Lines]",
          "49:             log.warning(\"Encountered error writing rtag: %s\", exc.__str__())",
          "",
          "[Added Lines]",
          "49:             log.warning(\"Encountered error writing rtag: %s\", exc)",
          "",
          "---------------"
        ],
        "salt/utils/pkg/win.py||salt/utils/pkg/win.py": [
          "File: salt/utils/pkg/win.py -> salt/utils/pkg/win.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "825:         Returns:",
          "826:             str: Package Id",
          "827:         \"\"\"",
          "830:     def get(self, pkg_id, default_value=None):",
          "831:         \"\"\"",
          "",
          "[Removed Lines]",
          "828:         return self.__next__()",
          "",
          "[Added Lines]",
          "828:         return next(self)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "848:         return 1 if Version(ver1) > Version(ver2) else -1",
          "850:     @staticmethod",
          "852:         \"\"\"",
          "853:         Used for sorting version numbers, latest to oldest",
          "854:         \"\"\"",
          "",
          "[Removed Lines]",
          "851:     def __latest_to_oldest_version(ver1, ver2):",
          "",
          "[Added Lines]",
          "851:     def __latest_to_oldest_version(ver1, ver2):  # pylint: disable=unused-private-member",
          "",
          "---------------"
        ],
        "salt/utils/preseed.py||salt/utils/preseed.py": [
          "File: salt/utils/preseed.py -> salt/utils/preseed.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:                 continue",
          "27:             comps = shlex.split(line)",
          "29:                 ps_opts[comps[0]] = {}",
          "30:             cmds = comps[1].split(\"/\")",
          "",
          "[Removed Lines]",
          "28:             if comps[0] not in ps_opts.keys():",
          "",
          "[Added Lines]",
          "28:             if comps[0] not in ps_opts:",
          "",
          "---------------"
        ],
        "salt/utils/process.py||salt/utils/process.py": [
          "File: salt/utils/process.py -> salt/utils/process.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "590:             # with the tree option will not be able to find them.",
          "591:             return",
          "594:             try:",
          "595:                 os.kill(pid, signal_)",
          "596:             except OSError as exc:",
          "",
          "[Removed Lines]",
          "593:         for pid in self._process_map.copy().keys():",
          "",
          "[Added Lines]",
          "593:         for pid in self._process_map.copy():",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "942:             \"logging_config\": self.__logging_config__,",
          "943:         }",
          "946:         @functools.wraps(run_func)",
          "947:         def wrapped_run_func():",
          "948:             # Static after fork method, always needs to happen first",
          "",
          "[Removed Lines]",
          "945:     def __decorate_run(self, run_func):",
          "",
          "[Added Lines]",
          "945:     def __decorate_run(self, run_func):  # pylint: disable=unused-private-member",
          "",
          "---------------"
        ],
        "salt/utils/psutil_compat.py||salt/utils/psutil_compat.py": [
          "File: salt/utils/psutil_compat.py -> salt/utils/psutil_compat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: Built off of http://grodola.blogspot.com/2014/01/psutil-20-porting.html",
          "10: \"\"\"",
          "",
          "[Removed Lines]",
          "13: # No exception handling, as we want ImportError if psutil doesn't exist",
          "14: import psutil  # pylint: disable=3rd-party-module-not-gated",
          "16: if psutil.version_info >= (2, 0):",
          "17:     from psutil import *  # pylint: disable=wildcard-import,unused-wildcard-import,3rd-party-module-not-gated",
          "18: else:",
          "19:     # Import hack to work around bugs in old psutil's",
          "20:     # Psuedo \"from psutil import *\"",
          "21:     _globals = globals()",
          "22:     for attr in psutil.__all__:",
          "23:         _temp = __import__(\"psutil\", globals(), locals(), [attr], 0)",
          "24:         try:",
          "25:             _globals[attr] = getattr(_temp, attr)",
          "26:         except AttributeError:",
          "27:             pass",
          "29:     # Import functions not in __all__",
          "30:     # pylint: disable=unused-import,3rd-party-module-not-gated",
          "31:     from psutil import disk_partitions, disk_usage",
          "33:     # pylint: enable=unused-import,3rd-party-module-not-gated",
          "34:     # Alias new module functions",
          "35:     def boot_time():",
          "36:         return psutil.BOOT_TIME",
          "38:     def cpu_count():",
          "39:         return psutil.NUM_CPUS",
          "41:     # Alias renamed module functions",
          "42:     pids = psutil.get_pid_list",
          "43:     try:",
          "44:         users = psutil.get_users",
          "45:     except AttributeError:",
          "46:         users = lambda: (_ for _ in ()).throw(",
          "47:             NotImplementedError(\"Your psutil version is too old\")",
          "48:         )",
          "50:     # Deprecated in 1.0.1, but not mentioned in blog post",
          "51:     if psutil.version_info < (1, 0, 1):",
          "52:         net_io_counters = psutil.network_io_counters()",
          "54:     class Process(psutil.Process):  # pylint: disable=no-init",
          "55:         # Reimplement overloaded getters/setters",
          "56:         # pylint: disable=arguments-differ",
          "57:         def cpu_affinity(self, *args, **kwargs):",
          "58:             if args or kwargs:",
          "59:                 return self.set_cpu_affinity(*args, **kwargs)",
          "60:             else:",
          "61:                 return self.get_cpu_affinity()",
          "63:         def ionice(self, *args, **kwargs):",
          "64:             if args or kwargs:",
          "65:                 return self.set_ionice(*args, **kwargs)",
          "66:             else:",
          "67:                 return self.get_ionice()",
          "69:         def nice(self, *args, **kwargs):",
          "70:             if args or kwargs:",
          "71:                 return self.set_nice(*args, **kwargs)",
          "72:             else:",
          "73:                 return self.get_nice()",
          "75:         def rlimit(self, *args, **kwargs):",
          "76:             \"\"\"",
          "77:             set_rlimit and get_limit were not introduced until psutil v1.1.0",
          "78:             \"\"\"",
          "79:             if psutil.version_info >= (1, 1, 0):",
          "80:                 if args or kwargs:",
          "81:                     return self.set_rlimit(*args, **kwargs)",
          "82:                 else:",
          "83:                     return self.get_rlimit()",
          "84:             else:",
          "85:                 pass",
          "87:         # pylint: enable=arguments-differ",
          "89:     # Alias renamed Process functions",
          "90:     _PROCESS_FUNCTION_MAP = {",
          "91:         \"children\": \"get_children\",",
          "92:         \"connections\": \"get_connections\",",
          "93:         \"cpu_percent\": \"get_cpu_percent\",",
          "94:         \"cpu_times\": \"get_cpu_times\",",
          "95:         \"io_counters\": \"get_io_counters\",",
          "96:         \"memory_info\": \"get_memory_info\",",
          "97:         \"memory_info_ex\": \"get_ext_memory_info\",",
          "98:         \"memory_maps\": \"get_memory_maps\",",
          "99:         \"memory_percent\": \"get_memory_percent\",",
          "100:         \"num_ctx_switches\": \"get_num_ctx_switches\",",
          "101:         \"num_fds\": \"get_num_fds\",",
          "102:         \"num_threads\": \"get_num_threads\",",
          "103:         \"open_files\": \"get_open_files\",",
          "104:         \"threads\": \"get_threads\",",
          "105:         \"cwd\": \"getcwd\",",
          "106:     }",
          "108:     for new, old in _PROCESS_FUNCTION_MAP.items():",
          "109:         try:",
          "110:             setattr(Process, new, psutil.Process.__dict__[old])",
          "111:         except KeyError:",
          "112:             pass",
          "",
          "[Added Lines]",
          "12: from psutil import *  # pylint: disable=wildcard-import,unused-wildcard-import,3rd-party-module-not-gated",
          "",
          "---------------"
        ],
        "salt/utils/reactor.py||salt/utils/reactor.py": [
          "File: salt/utils/reactor.py -> salt/utils/reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "312:         Populate the client cache with an instance of the specified type",
          "313:         \"\"\"",
          "314:         reaction_type = low[\"state\"]",
          "315:         if reaction_type not in self.client_cache:",
          "316:             log.debug(\"Reactor is populating %s client cache\", reaction_type)",
          "317:             if reaction_type in (\"runner\", \"wheel\"):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:         # pylint: disable=unsupported-membership-test,unsupported-assignment-operation",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:                 self.client_cache[reaction_type] = self.reaction_class[reaction_type](",
          "334:                     self.opts[\"conf_file\"]",
          "335:                 )",
          "337:     def run(self, low):",
          "338:         \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:         # pylint: enable=unsupported-membership-test,unsupported-assignment-operation",
          "",
          "---------------"
        ],
        "salt/utils/ssdp.py||salt/utils/ssdp.py": [
          "File: salt/utils/ssdp.py -> salt/utils/ssdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:         :return:",
          "158:         \"\"\"",
          "159:         tries = 0",
          "161:         slp = slp_time()",
          "162:         while tries < attempts:",
          "163:             try:",
          "",
          "[Removed Lines]",
          "160:         slp_time = lambda: 0.5 / random.randint(10, 30)",
          "",
          "[Added Lines]",
          "161:         def slp_time():",
          "162:             return 0.5 / random.randint(10, 30)",
          "",
          "---------------"
        ],
        "salt/utils/templates.py||salt/utils/templates.py": [
          "File: salt/utils/templates.py -> salt/utils/templates.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Template render systems",
          "3: \"\"\"",
          "4: import codecs",
          "5: import logging",
          "6: import os",
          "7: import sys",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import importlib.machinery",
          "6: import importlib.util",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: from salt.utils.odict import OrderedDict",
          "33: from salt.utils.versions import Version",
          "46: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "35: if sys.version_info[:2] >= (3, 5):",
          "36:     import importlib.machinery  # pylint: disable=no-name-in-module,import-error",
          "37:     import importlib.util  # pylint: disable=no-name-in-module,import-error",
          "39:     USE_IMPORTLIB = True",
          "40: else:",
          "41:     import imp",
          "43:     USE_IMPORTLIB = False",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "676:     base_fname = os.path.basename(sfn)",
          "677:     name = base_fname.split(\".\")[0]",
          "692:     # File templates need these set as __var__",
          "693:     if \"__env__\" not in kwargs and \"saltenv\" in kwargs:",
          "",
          "[Removed Lines]",
          "679:     if USE_IMPORTLIB:",
          "680:         # pylint: disable=no-member",
          "681:         loader = importlib.machinery.SourceFileLoader(name, sfn)",
          "682:         spec = importlib.util.spec_from_file_location(name, sfn, loader=loader)",
          "683:         if spec is None:",
          "684:             raise ImportError()",
          "685:         mod = importlib.util.module_from_spec(spec)",
          "686:         spec.loader.exec_module(mod)",
          "687:         # pylint: enable=no-member",
          "688:         sys.modules[name] = mod",
          "689:     else:",
          "690:         mod = imp.load_source(name, sfn)",
          "",
          "[Added Lines]",
          "670:     loader = importlib.machinery.SourceFileLoader(name, sfn)",
          "671:     spec = importlib.util.spec_from_file_location(name, sfn, loader=loader)",
          "672:     if spec is None:",
          "673:         raise ImportError()",
          "674:     mod = importlib.util.module_from_spec(spec)",
          "675:     spec.loader.exec_module(mod)",
          "676:     sys.modules[name] = mod",
          "",
          "---------------"
        ],
        "salt/utils/vault.py||salt/utils/vault.py": [
          "File: salt/utils/vault.py -> salt/utils/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:                     if namespace is not None:",
          "137:                         headers = {\"X-Vault-Namespace\": namespace}",
          "138:                         response = requests.post(",
          "140:                         )",
          "141:                     else:",
          "143:                     if response.status_code != 200:",
          "144:                         errmsg = \"An error occurred while getting a token from approle\"",
          "145:                         raise salt.exceptions.CommandExecutionError(errmsg)",
          "",
          "[Removed Lines]",
          "139:                             url, headers=headers, json=payload, verify=verify",
          "142:                         response = requests.post(url, json=payload, verify=verify)",
          "",
          "[Added Lines]",
          "139:                             url,",
          "140:                             headers=headers,",
          "141:                             json=payload,",
          "142:                             verify=verify,",
          "143:                             timeout=120,",
          "146:                         response = requests.post(",
          "147:                             url, json=payload, verify=verify, timeout=120",
          "148:                         )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:                     headers = {\"X-Vault-Token\": __opts__[\"vault\"][\"auth\"][\"token\"]}",
          "154:                     if namespace is not None:",
          "155:                         headers[\"X-Vault-Namespace\"] = namespace",
          "157:                     if response.status_code != 200:",
          "158:                         errmsg = \"An error occured while unwrapping vault token\"",
          "159:                         raise salt.exceptions.CommandExecutionError(errmsg)",
          "",
          "[Removed Lines]",
          "156:                     response = requests.post(url, headers=headers, verify=verify)",
          "",
          "[Added Lines]",
          "162:                     response = requests.post(",
          "163:                         url, headers=headers, verify=verify, timeout=120",
          "164:                     )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "334:     token = connection[\"token\"] if not token else token",
          "335:     vault_url = connection[\"url\"] if not vault_url else vault_url",
          "336:     namespace = namespace or connection.get(\"namespace\")",
          "340:         try:",
          "341:             args[\"verify\"] = __opts__.get(\"vault\").get(\"verify\", None)",
          "342:         except (TypeError, AttributeError):",
          "343:             # Don't worry about setting verify if it doesn't exist",
          "344:             pass",
          "345:     url = \"{}/{}\".format(vault_url, resource)",
          "346:     headers = {\"X-Vault-Token\": str(token), \"Content-Type\": \"application/json\"}",
          "347:     if namespace is not None:",
          "348:         headers[\"X-Vault-Namespace\"] = namespace",
          "350:     if not response.ok and response.json().get(\"errors\", None) == [\"permission denied\"]:",
          "351:         log.info(\"Permission denied from vault\")",
          "352:         del_cache()",
          "",
          "[Removed Lines]",
          "337:     if \"verify\" in args:",
          "338:         args[\"verify\"] = args[\"verify\"]",
          "339:     else:",
          "349:     response = requests.request(method, url, headers=headers, **args)",
          "",
          "[Added Lines]",
          "345:     if \"verify\" not in args:",
          "351:     if \"timeout\" not in args:",
          "352:         args[\"timeout\"] = 120",
          "357:     response = requests.request(  # pylint: disable=missing-timeout",
          "358:         method, url, headers=headers, **args",
          "359:     )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "407:         headers = {\"X-Vault-Token\": __opts__[\"vault\"][\"auth\"][\"token\"]}",
          "408:         if namespace is not None:",
          "409:             headers[\"X-Vault-Namespace\"] = namespace",
          "411:         if response.status_code != 200:",
          "412:             return True",
          "413:         return False",
          "",
          "[Removed Lines]",
          "410:         response = requests.get(url, headers=headers, verify=verify)",
          "",
          "[Added Lines]",
          "420:         response = requests.get(url, headers=headers, verify=verify, timeout=120)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "431:         headers = {\"X-Vault-Token\": __opts__[\"vault\"][\"auth\"][\"token\"]}",
          "432:         if namespace is not None:",
          "433:             headers[\"X-Vault-Namespace\"] = namespace",
          "435:         if response.status_code != 200:",
          "436:             return False",
          "437:         return True",
          "",
          "[Removed Lines]",
          "434:         response = requests.post(url, headers=headers, verify=verify)",
          "",
          "[Added Lines]",
          "444:         response = requests.post(url, headers=headers, verify=verify, timeout=120)",
          "",
          "---------------"
        ],
        "salt/utils/verify.py||salt/utils/verify.py": [
          "File: salt/utils/verify.py -> salt/utils/verify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "328:     try:",
          "329:         if hasattr(os, \"initgroups\"):",
          "331:         else:",
          "332:             os.setgroups(salt.utils.user.get_gid_list(user, include_default=False))",
          "333:         os.setgid(pwuser.pw_gid)",
          "",
          "[Removed Lines]",
          "330:             os.initgroups(user, pwuser.pw_gid)  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "330:             os.initgroups(user, pwuser.pw_gid)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "418:         # and the python binding http://timgolden.me.uk/pywin32-docs/win32file.html",
          "419:         mof_s = mof_h = win32file._getmaxstdio()",
          "420:     else:",
          "423:     accepted_keys_dir = os.path.join(opts.get(\"pki_dir\"), \"minions\")",
          "424:     accepted_count = len(os.listdir(accepted_keys_dir))",
          "",
          "[Removed Lines]",
          "421:         mof_s, mof_h = resource.getrlimit(resource.RLIMIT_NOFILE)",
          "",
          "[Added Lines]",
          "422:         mof_s, mof_h = resource.getrlimit(  # pylint: disable=used-before-assignment",
          "423:             resource.RLIMIT_NOFILE",
          "424:         )",
          "",
          "---------------"
        ],
        "salt/utils/versions.py||salt/utils/versions.py": [
          "File: salt/utils/versions.py -> salt/utils/versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "352:     version2, and 1 if version1 > version2. Return None if there was a problem",
          "353:     making the comparison.",
          "354:     \"\"\"",
          "356:     pkg1 = normalize(pkg1)",
          "357:     pkg2 = normalize(pkg2)",
          "",
          "[Removed Lines]",
          "355:     normalize = lambda x: str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "[Added Lines]",
          "356:     def normalize(x):",
          "357:         return str(x).split(\":\", 1)[-1] if ignore_epoch else str(x)",
          "",
          "---------------"
        ],
        "salt/utils/vt.py||salt/utils/vt.py": [
          "File: salt/utils/vt.py -> salt/utils/vt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     Thank you for the shortcut PEXPECT",
          "75:     \"\"\"",
          "76:     TIOCSWINSZ = getattr(termios, \"TIOCSWINSZ\", -2146929561)",
          "77:     if TIOCSWINSZ == 2148037735:",
          "78:         # Same bits, but with sign.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     # pylint: disable=used-before-assignment",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "396:         def _spawn(self):",
          "397:             if not isinstance(self.args, str) and self.shell is True:",
          "398:                 self.args = \" \".join(self.args)",
          "400:             err_parent, err_child = os.pipe()",
          "401:             child_name = os.ttyname(child)",
          "402:             proc = subprocess.Popen(  # pylint: disable=subprocess-popen-preexec-fn",
          "",
          "[Removed Lines]",
          "399:             parent, child = pty.openpty()",
          "",
          "[Added Lines]",
          "400:             parent, child = pty.openpty()  # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/utils/win_network.py||salt/utils/win_network.py": [
          "File: salt/utils/win_network.py -> salt/utils/win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "332: def _get_network_interfaces():",
          "333:     return NetworkInformation.NetworkInterface.GetAllNetworkInterfaces()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:     # pylint: disable=used-before-assignment",
          "",
          "---------------"
        ],
        "salt/utils/win_runas.py||salt/utils/win_runas.py": [
          "File: salt/utils/win_runas.py -> salt/utils/win_runas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:             break",
          "82:     if env is not None:",
          "83:         return env",
          "87: def runas(cmdLine, username, password=None, cwd=None):",
          "",
          "[Removed Lines]",
          "84:     raise exc",
          "",
          "[Added Lines]",
          "84:     if exc is not None:",
          "85:         raise exc",
          "",
          "---------------"
        ],
        "salt/version.py||salt/version.py": [
          "File: salt/version.py -> salt/version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     _previous_release = None",
          "59:     _next_release = None",
          "62:     # ----- Please refrain from fixing whitespace ---------------------------------->",
          "63:     # The idea is to keep this readable.",
          "64:     # -------------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "61:     # pylint: disable=bad-whitespace,multiple-spaces-before-operator",
          "",
          "[Added Lines]",
          "61:     # pylint: disable=bad-whitespace",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:     # <---- Please refrain from fixing whitespace -----------------------------------",
          "185:     # The idea is to keep this readable.",
          "186:     # -------------------------------------------------------------------------------",
          "188:     # fmt: on",
          "190:     @classmethod",
          "",
          "[Removed Lines]",
          "187:     # pylint: enable=bad-whitespace,multiple-spaces-before-operator",
          "",
          "[Added Lines]",
          "187:     # pylint: enable=bad-whitespace",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "862:     Report the versions of dependent software.",
          "863:     \"\"\"",
          "864:     py_info = [",
          "866:     ]",
          "867:     salt_info = list(salt_information())",
          "868:     lib_info = list(dependency_information(include_salt_cloud))",
          "",
          "[Removed Lines]",
          "865:         (\"Python\", sys.version.rsplit(\"\\n\")[0].strip()),",
          "",
          "[Added Lines]",
          "865:         (\"Python\", sys.version.rsplit(\"\\n\", maxsplit=1)[0].strip()),",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: The setup script for salt",
          "4: \"\"\"",
          "7: import setuptools  # isort:skip",
          "8: import distutils.dist",
          "9: import glob",
          "",
          "[Removed Lines]",
          "6: # pylint: disable=file-perms,resource-leakage",
          "",
          "[Added Lines]",
          "6: # pylint: disable=file-perms,resource-leakage,deprecated-module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182: def _parse_requirements_file(requirements_file):",
          "183:     parsed_requirements = []",
          "185:         for line in rfh.readlines():",
          "186:             line = line.strip()",
          "187:             if not line or line.startswith((\"#\", \"-r\", \"--\")):",
          "",
          "[Removed Lines]",
          "184:     with open(requirements_file) as rfh:",
          "",
          "[Added Lines]",
          "184:     with open(requirements_file, encoding=\"utf-8\") as rfh:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260:             exit(1)",
          "262:         # Write the system paths file",
          "264:             INSTALL_SYSPATHS_TEMPLATE.format(",
          "265:                 date=DATE,",
          "266:                 root_dir=self.distribution.salt_root_dir,",
          "",
          "[Removed Lines]",
          "263:         open(self.distribution.salt_syspaths_hardcoded_path, \"w\").write(",
          "",
          "[Added Lines]",
          "263:         open(",
          "264:             self.distribution.salt_syspaths_hardcoded_path, \"w\", encoding=\"utf-8\"",
          "265:         ).write(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "308:                 exit(1)",
          "310:             # pylint: disable=E0602",
          "314:             # pylint: enable=E0602",
          "",
          "[Removed Lines]",
          "311:             open(self.distribution.salt_ssh_packaging_file, \"w\").write(",
          "312:                 \"Packaged for Salt-SSH\\n\"",
          "313:             )",
          "",
          "[Added Lines]",
          "313:             open(",
          "314:                 self.distribution.salt_ssh_packaging_file, \"w\", encoding=\"utf-8\"",
          "315:             ).write(\"Packaged for Salt-SSH\\n\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "463:             try:",
          "464:                 import requests",
          "467:                 if req.status_code == 200:",
          "468:                     script_contents = req.text.encode(req.encoding)",
          "469:                 else:",
          "",
          "[Removed Lines]",
          "466:                 req = requests.get(url)",
          "",
          "[Added Lines]",
          "468:                 req = requests.get(url, timeout=120)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "482:                         \"Error code: {}\".format(req.getcode())",
          "483:                     )",
          "484:             try:",
          "486:                     fp_.write(script_contents)",
          "487:             except OSError as err:",
          "488:                 log.error(\"Failed to write the updated script: {}\".format(err))",
          "",
          "[Removed Lines]",
          "485:                 with open(deploy_path, \"w\") as fp_:",
          "",
          "[Added Lines]",
          "487:                 with open(deploy_path, \"w\", encoding=\"utf-8\") as fp_:",
          "",
          "---------------"
        ],
        "tests/buildpackage.py||tests/buildpackage.py": [
          "File: tests/buildpackage.py -> tests/buildpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import shutil",
          "19: import subprocess",
          "20: import sys",
          "23: logging.QUIET = 0",
          "24: logging.GARBAGE = 1",
          "",
          "[Removed Lines]",
          "21: from optparse import OptionGroup, OptionParser",
          "",
          "[Added Lines]",
          "21: from optparse import OptionGroup, OptionParser  # pylint: disable=deprecated-module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:     log.info(\"Building CentOS RPM\")",
          "237:     log.info(\"Detecting major release\")",
          "238:     try:",
          "240:             redhat_release = fp_.read().strip()",
          "241:             major_release = int(redhat_release.split()[2].split(\".\")[0])",
          "242:     except (ValueError, IndexError):",
          "",
          "[Removed Lines]",
          "239:         with open(\"/etc/redhat-release\") as fp_:",
          "",
          "[Added Lines]",
          "239:         with open(\"/etc/redhat-release\", encoding=\"utf-8\") as fp_:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "323:     # Prepare SPEC file",
          "324:     spec_path = os.path.join(opts.build_dir, \"SPECS\", \"salt.spec\")",
          "326:         spec_lines = spec.read().splitlines()",
          "328:         for line in spec_lines:",
          "329:             if line.startswith(\"%global srcver \"):",
          "330:                 line = \"%global srcver {}\".format(salt_srcver)",
          "",
          "[Removed Lines]",
          "325:     with open(opts.spec_file) as spec:",
          "327:     with open(spec_path, \"w\") as fp_:",
          "",
          "[Added Lines]",
          "325:     with open(opts.spec_file, encoding=\"utf-8\") as spec:",
          "327:     with open(spec_path, \"w\", encoding=\"utf-8\") as fp_:",
          "",
          "---------------"
        ],
        "tests/committer_parser.py||tests/committer_parser.py": [
          "File: tests/committer_parser.py -> tests/committer_parser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     if not filename or filename == \"-\":",
          "54:         fh = sys.stdin",
          "55:     else:",
          "58:     try:",
          "59:         commitcount = 0",
          "",
          "[Removed Lines]",
          "56:         fh = open(filename, \"r+\")",
          "",
          "[Added Lines]",
          "56:         fh = open(filename, \"r+\", encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/conftest.py||tests/conftest.py": [
          "File: tests/conftest.py -> tests/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     PRE_PYTEST_SKIP_REASON,",
          "35:     get_virtualenv_binary_path,",
          "36: )",
          "38: from tests.support.runtests import RUNTIME_VARS",
          "39: from tests.support.sminion import check_required_sminion_attributes, create_sminion",
          "",
          "[Removed Lines]",
          "37: from tests.support.pytest.helpers import *  # pylint: disable=unused-wildcard-import",
          "",
          "[Added Lines]",
          "37: from tests.support.pytest.helpers import *  # pylint: disable=unused-wildcard-import,wildcard-import",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1559:         ):",
          "1560:             # In this case, this path is considered to be a file containing a line separated list",
          "1561:             # of files to consider",
          "1563:             for sep in (\"\\r\\n\", \"\\\\r\\\\n\", \"\\\\n\"):",
          "1564:                 contents = contents.replace(sep, \"\\n\")",
          "1565:             for line in contents.split(\"\\n\"):",
          "",
          "[Removed Lines]",
          "1562:             contents = properly_slashed_path.read_text()",
          "",
          "[Added Lines]",
          "1562:             contents = properly_slashed_path.read_text(encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/eventlisten.py||tests/eventlisten.py": [
          "File: tests/eventlisten.py -> tests/eventlisten.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: This script is a generic tool to test event output",
          "6: \"\"\"",
          "10: import os",
          "11: import pprint",
          "12: import time",
          "",
          "[Removed Lines]",
          "9: import optparse",
          "",
          "[Added Lines]",
          "7: import optparse  # pylint: disable=deprecated-module",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_oneandone.py||tests/integration/cloud/clouds/test_oneandone.py": [
          "File: tests/integration/cloud/clouds/test_oneandone.py -> tests/integration/cloud/clouds/test_oneandone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: from tests.integration.cloud.helpers.cloud_test_base import TIMEOUT, CloudTest",
          "17: class OneAndOneTest(CloudTest):",
          "18:     \"\"\"",
          "19:     Integration tests for the 1and1 cloud provider",
          "",
          "[Removed Lines]",
          "8: try:",
          "9:     from oneandone.client import OneAndOneService  # pylint: disable=unused-import",
          "11:     HAS_ONEANDONE = True",
          "12: except ImportError:",
          "13:     HAS_ONEANDONE = False",
          "16: @pytest.mark.skipif(HAS_ONEANDONE is False, reason=\"salt-cloud requires >= 1and1 1.2.0\")",
          "",
          "[Added Lines]",
          "8: pytest.importorskip(\"oneandone.client\", reason=\"salt-cloud requires >= 1and1 1.2.0\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         \"\"\"",
          "27:         Tests the return of running the --list-images command for 1and1",
          "28:         \"\"\"",
          "30:         self.assertIn(\"coreOSimage\", [i.strip() for i in image_list])",
          "32:     def test_instance(self):",
          "",
          "[Removed Lines]",
          "29:         image_list = self.run_cloud(\"--list-images {}\".format(self.PROVIDER_NAME))",
          "",
          "[Added Lines]",
          "23:         image_list = self.run_cloud(f\"--list-images {self.PROVIDER_NAME}\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:         \"\"\"",
          "36:         # check if instance with salt installed returned",
          "37:         ret_str = self.run_cloud(",
          "39:         )",
          "40:         self.assertInstanceExists(ret_str)",
          "",
          "[Removed Lines]",
          "38:             \"-p oneandone-test {}\".format(self.instance_name), timeout=TIMEOUT",
          "",
          "[Added Lines]",
          "32:             f\"-p oneandone-test {self.instance_name}\", timeout=TIMEOUT",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_vmware.py||tests/integration/cloud/clouds/test_vmware.py": [
          "File: tests/integration/cloud/clouds/test_vmware.py -> tests/integration/cloud/clouds/test_vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:         \"\"\"",
          "103:         # salt-cloud -p my-instant-clone IC3",
          "104:         profile_name = \"vmware-test-instant-clone\"",
          "107:         # create the instance",
          "108:         log_format = \"%(message)s\"",
          "",
          "[Removed Lines]",
          "105:         self.run_cloud(f\"-a remove_all_snapshots cloud-tests-template-base\")",
          "",
          "[Added Lines]",
          "105:         self.run_cloud(\"-a remove_all_snapshots cloud-tests-template-base\")",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_cp.py||tests/integration/modules/test_cp.py": [
          "File: tests/integration/modules/test_cp.py -> tests/integration/modules/test_cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "597:     @pytest.mark.slow_test",
          "598:     def test_push(self):",
          "599:         log_to_xfer = os.path.join(RUNTIME_VARS.TMP, uuid.uuid4().hex)",
          "601:         try:",
          "602:             self.run_function(\"cp.push\", [log_to_xfer])",
          "603:             tgt_cache_file = os.path.join(",
          "",
          "[Removed Lines]",
          "600:         open(log_to_xfer, \"w\").close()  # pylint: disable=resource-leakage",
          "",
          "[Added Lines]",
          "600:         open(  # pylint: disable=resource-leakage",
          "601:             log_to_xfer, \"w\", encoding=\"utf-8\"",
          "602:         ).close()",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_ssh.py||tests/integration/modules/test_ssh.py": [
          "File: tests/integration/modules/test_ssh.py -> tests/integration/modules/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     Check the status of Github for remote operations",
          "22:     \"\"\"",
          "23:     try:",
          "25:     except Exception:  # pylint: disable=broad-except",
          "26:         return False",
          "",
          "[Removed Lines]",
          "24:         return requests.get(\"https://github.com\").status_code == 200",
          "",
          "[Added Lines]",
          "24:         return requests.get(\"https://github.com\", timeout=60).status_code == 200",
          "",
          "---------------"
        ],
        "tests/integration/netapi/rest_tornado/test_app.py||tests/integration/netapi/rest_tornado/test_app.py": [
          "File: tests/integration/netapi/rest_tornado/test_app.py -> tests/integration/netapi/rest_tornado/test_app.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     def setUp(self):",
          "68:         super().setUp()",
          "69:         self.patched_environ = patched_environ(ASYNC_TEST_TIMEOUT=\"30\")",
          "71:         self.addCleanup(self.patched_environ.__exit__)",
          "73:     def tearDown(self):",
          "",
          "[Removed Lines]",
          "70:         self.patched_environ.__enter__()",
          "",
          "[Added Lines]",
          "70:         self.patched_environ.__enter__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------"
        ],
        "tests/minionswarm.py||tests/minionswarm.py": [
          "File: tests/minionswarm.py -> tests/minionswarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # pylint: disable=resource-leakage",
          "9: import hashlib",
          "11: import os",
          "12: import random",
          "13: import shutil",
          "",
          "[Removed Lines]",
          "10: import optparse",
          "",
          "[Added Lines]",
          "10: import optparse  # pylint: disable=deprecated-module",
          "",
          "---------------"
        ],
        "tests/modparser.py||tests/modparser.py": [
          "File: tests/modparser.py -> tests/modparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import modulefinder",
          "5: import os",
          "6: import pprint",
          "",
          "[Removed Lines]",
          "1: #!/usr/bin/env python2",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env python",
          "3: import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import salt.utils.json",
          "10: import salt.utils.yaml",
          "20: def parse():",
          "21:     \"\"\"",
          "",
          "[Removed Lines]",
          "12: try:",
          "13:     import argparse  # pylint: disable=minimum-python-version",
          "15:     HAS_ARGPARSE = True",
          "16: except ImportError:",
          "17:     HAS_ARGPARSE = False",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:     try:",
          "47:         finder.load_file(full)",
          "48:     except ImportError as exc:",
          "50:         return ret",
          "51:     for name, mod in finder.modules.items():",
          "52:         basemod = name.split(\".\")[0]",
          "",
          "[Removed Lines]",
          "49:         print(\"ImportError - {} (Reason: {})\".format(full, exc), file=sys.stderr)",
          "",
          "[Added Lines]",
          "42:         print(f\"ImportError - {full} (Reason: {exc})\", file=sys.stderr)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88: if __name__ == \"__main__\":",
          "91:     opts = parse()",
          "92:     try:",
          "93:         scand = scan(opts)",
          "",
          "[Removed Lines]",
          "89:     if not HAS_ARGPARSE:",
          "90:         print(\"The argparse python module is required\")",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_etcd.py||tests/pytests/functional/cache/test_etcd.py": [
          "File: tests/pytests/functional/cache/test_etcd.py -> tests/pytests/functional/cache/test_etcd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     scope=\"module\",",
          "22:     params=(EtcdVersion.v2, EtcdVersion.v3_v2_mode),",
          "23:     ids=etcd_version_ids,",
          "26:     # The only parameter is True because the salt cache does not use",
          "27:     # salt/utils/etcd_util.py and if coded for etcd v2",
          "28:     if request.param and not HAS_ETCD_V2:",
          "",
          "[Removed Lines]",
          "24: )  # pylint: disable=function-redefined",
          "25: def etcd_version(request):",
          "",
          "[Added Lines]",
          "24: )",
          "25: def etcd_version(request):  # pylint: disable=function-redefined",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_data.py||tests/pytests/functional/modules/test_data.py": [
          "File: tests/pytests/functional/modules/test_data.py -> tests/pytests/functional/modules/test_data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:     ret = data_module.update(\"foo\", \"bar\")",
          "140:     assert ret",
          "143:     assert ret",
          "147:     assert not ret",
          "",
          "[Removed Lines]",
          "142:     ret = data_module.has_key(\"foo\")  # pylint: disable=.has_key-is-deprecated-use-in",
          "145:     ret = data_module.has_key(\"bar\")  # pylint: disable=.has_key-is-deprecated-use-in",
          "",
          "[Added Lines]",
          "142:     ret = data_module.has_key(\"foo\")",
          "145:     ret = data_module.has_key(\"bar\")",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_system.py||tests/pytests/functional/modules/test_system.py": [
          "File: tests/pytests/functional/modules/test_system.py -> tests/pytests/functional/modules/test_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:         raise CompareTimeout",
          "130:     for _ in range(2):",
          "131:         try:",
          "133:             signal.alarm(3)",
          "134:             rpipeFd, wpipeFd = os.pipe()",
          "135:             log.debug(\"Comparing hwclock to sys clock\")",
          "",
          "[Removed Lines]",
          "132:             orig_handler = signal.signal(signal.SIGALRM, _alrm_handler)",
          "",
          "[Added Lines]",
          "131:         orig_handler = signal.signal(signal.SIGALRM, _alrm_handler)",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_append.py||tests/pytests/functional/states/file/test_append.py": [
          "File: tests/pytests/functional/states/file/test_append.py -> tests/pytests/functional/states/file/test_append.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:     Test that check_cmd works for file.append",
          "146:     and those states do not run.",
          "147:     \"\"\"",
          "155:     \"\"\"",
          "156:     with pytest.helpers.temp_file(",
          "157:         \"file-append-check-cmd.sls\", sls_contents, state_tree",
          "",
          "[Removed Lines]",
          "148:     sls_contents = f\"\"\"",
          "149: append_in_file:",
          "150:   file.append:",
          "151:     - name: /tmp/test",
          "152:     - text: \"appended text\"",
          "153:     - check_cmd:",
          "154:       - \"djasjahj\"",
          "",
          "[Added Lines]",
          "148:     sls_contents = \"\"\"",
          "149:     append_in_file:",
          "150:       file.append:",
          "151:         - name: /tmp/test",
          "152:         - text: \"appended text\"",
          "153:         - check_cmd:",
          "154:           - \"djasjahj\"",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_replace.py||tests/pytests/functional/states/file/test_replace.py": [
          "File: tests/pytests/functional/states/file/test_replace.py -> tests/pytests/functional/states/file/test_replace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "378:     assert managed_file.exists()",
          "382:     \"\"\"",
          "383:     Test that check_cmd works for file.replace",
          "384:     and those states do not run.",
          "385:     \"\"\"",
          "395:     \"\"\"",
          "396:     with pytest.helpers.temp_file(",
          "397:         \"file-replace-check-cmd.sls\", sls_contents, state_tree",
          "",
          "[Removed Lines]",
          "381: def test_file_replace_check_cmd(modules, state_tree, tmp_path):",
          "386:     sls_contents = f\"\"\"",
          "387: replace_in_file:",
          "388:   file.replace:",
          "389:     - name: /tmp/test",
          "390:     - pattern: hi",
          "391:     - repl: \"replacement text\"",
          "392:     - append_if_not_found: True",
          "393:     - check_cmd:",
          "394:       - \"djasjahj\"",
          "",
          "[Added Lines]",
          "381: def test_file_replace_check_cmd(modules, state_tree):",
          "386:     sls_contents = \"\"\"",
          "387:     replace_in_file:",
          "388:       file.replace:",
          "389:         - name: /tmp/test",
          "390:         - pattern: hi",
          "391:         - repl: \"replacement text\"",
          "392:         - append_if_not_found: True",
          "393:         - check_cmd:",
          "394:           - \"djasjahj\"",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/pkgrepo/test_debian.py||tests/pytests/functional/states/pkgrepo/test_debian.py": [
          "File: tests/pytests/functional/states/pkgrepo/test_debian.py -> tests/pytests/functional/states/pkgrepo/test_debian.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:     with subtests.test(\"Remove repo with trailing slash in URI\"):",
          "616:         # Write contents to file with trailing slash in URI",
          "618:         # Perform and validate removal",
          "619:         ret = pkgrepo.absent(name=repo_content)",
          "620:         assert ret.result",
          "",
          "[Removed Lines]",
          "617:         repo_file.write_text(f\"{repo_content}\\n\")",
          "",
          "[Added Lines]",
          "617:         repo_file.write_text(f\"{repo_content}\\n\", encoding=\"utf-8\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "630:         # Create a repo file that matches the URI but contains no architecture.",
          "631:         # This should not be identified as a match for repo_content, and thus",
          "632:         # the result of a state should be a no-op.",
          "634:         # Since this was a no-op, the state should have succeeded, made no",
          "635:         # changes, and left the repo file in place.",
          "636:         ret = pkgrepo.absent(name=repo_content)",
          "",
          "[Removed Lines]",
          "633:         repo_file.write_text(f\"deb {repo_uri} stable main\\n\")",
          "",
          "[Added Lines]",
          "633:         repo_file.write_text(f\"deb {repo_uri} stable main\\n\", encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_docker_container.py||tests/pytests/functional/states/test_docker_container.py": [
          "File: tests/pytests/functional/states/test_docker_container.py -> tests/pytests/functional/states/test_docker_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         return ipaddress.ip_network(self.subnet)",
          "57:     @_rand_indexes.default",
          "59:         return random.sample(",
          "60:             range(2, self.net.num_addresses - 1), self.net.num_addresses - 3",
          "61:         )",
          "",
          "[Removed Lines]",
          "58:     def __rand_indexes(self):",
          "",
          "[Added Lines]",
          "58:     def __rand_indexes(self):  # pylint: disable=unused-private-member",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:     @staticmethod",
          "72:     def arg_map(arg_name):",
          "80:     @property",
          "81:     def compressed_subnet(self):",
          "",
          "[Removed Lines]",
          "73:         return {",
          "74:             \"ipv4_address\": \"IPv4Address\",",
          "75:             \"ipv6_address\": \"IPv6Address\",",
          "76:             \"links\": \"Links\",",
          "77:             \"aliases\": \"Aliases\",",
          "78:         }[arg_name]",
          "",
          "[Added Lines]",
          "73:         if arg_name == \"ipv4_address\":",
          "74:             return \"IPv4Address\"",
          "75:         if arg_name == \"ipv6_address\":",
          "76:             return \"IPv6Address\"",
          "77:         if arg_name == \"links\":",
          "78:             return \"Links\"",
          "79:         if arg_name == \"aliases\":",
          "80:             return \"Aliases\"",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_docker_network.py||tests/pytests/functional/states/test_docker_network.py": [
          "File: tests/pytests/functional/states/test_docker_network.py -> tests/pytests/functional/states/test_docker_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:                 \"Indexing not supported for networks without a custom subnet\"",
          "47:             )",
          "57:     @property",
          "58:     def subnet(self):",
          "",
          "[Removed Lines]",
          "49:     def arg_map(self, arg_name):",
          "50:         return {",
          "51:             \"ipv4_address\": \"IPv4Address\",",
          "52:             \"ipv6_address\": \"IPv6Address\",",
          "53:             \"links\": \"Links\",",
          "54:             \"aliases\": \"Aliases\",",
          "55:         }[arg_name]",
          "",
          "[Added Lines]",
          "49:     @staticmethod",
          "50:     def arg_map(arg_name):",
          "51:         if arg_name == \"ipv4_address\":",
          "52:             return \"IPv4Address\"",
          "53:         if arg_name == \"ipv6_address\":",
          "54:             return \"IPv6Address\"",
          "55:         if arg_name == \"links\":",
          "56:             return \"Links\"",
          "57:         if arg_name == \"aliases\":",
          "58:             return \"Aliases\"",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_pkg.py||tests/pytests/functional/states/test_pkg.py": [
          "File: tests/pytests/functional/states/test_pkg.py -> tests/pytests/functional/states/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "513:     )",
          "515:     expected_comment = (",
          "517:     )",
          "518:     assert ret.result is True",
          "519:     assert ret.raw[next(iter(ret.raw))][\"comment\"] == expected_comment",
          "",
          "[Removed Lines]",
          "516:         \"All specified packages are already installed and are at the \" \"desired version\"",
          "",
          "[Added Lines]",
          "516:         \"All specified packages are already installed and are at the desired version\"",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_ssh_auth.py||tests/pytests/functional/states/test_ssh_auth.py": [
          "File: tests/pytests/functional/states/test_ssh_auth.py -> tests/pytests/functional/states/test_ssh_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         ssh_auth_state.manage(",
          "46:             name=\"test\",",
          "47:             user=system_user.username,",
          "49:             config=str(new_auth_file),",
          "50:             ssh_keys=[\"\"],",
          "51:         )",
          "",
          "[Removed Lines]",
          "48:             source=f\"salt://authorized\",",
          "",
          "[Added Lines]",
          "48:             source=\"salt://authorized\",",
          "",
          "---------------"
        ],
        "tests/pytests/functional/test_crypt.py||tests/pytests/functional/test_crypt.py": [
          "File: tests/pytests/functional/test_crypt.py -> tests/pytests/functional/test_crypt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: @pytest.mark.windows_whitelisted",
          "9: def test_generated_keys(tmp_path):",
          "",
          "[Removed Lines]",
          "10:     priv = salt.crypt.gen_keys(tmp_path, \"aaa\", 2048)",
          "11:     assert \"\\r\" not in pathlib.Path(priv).read_text()",
          "12:     assert \"\\r\" not in pathlib.Path(priv.replace(\".pem\", \".pub\")).read_text()",
          "",
          "[Added Lines]",
          "10:     priv = pathlib.Path(salt.crypt.gen_keys(tmp_path, \"aaa\", 2048))",
          "11:     pub = priv.with_suffix(\".pub\")",
          "12:     assert \"\\r\" not in priv.read_text(encoding=\"utf-8\")",
          "13:     assert \"\\r\" not in pub.read_text(encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/pytests/integration/_logging/test_jid_logging.py||tests/pytests/integration/_logging/test_jid_logging.py": [
          "File: tests/pytests/integration/_logging/test_jid_logging.py -> tests/pytests/integration/_logging/test_jid_logging.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     \"\"\"",
          "13:     Test JID in log_format",
          "14:     \"\"\"",
          "16:     formatter = logging.Formatter(fmt=\"%(jid)s %(message)s\")",
          "17:     with caplog.at_level(logging.DEBUG):",
          "18:         previous_formatter = caplog.handler.formatter",
          "",
          "[Removed Lines]",
          "15:     jid_formatted_str = DFLT_LOG_FMT_JID.split(\"%\")[0]",
          "",
          "[Added Lines]",
          "15:     jid_formatted_str = DFLT_LOG_FMT_JID.split(\"%\", maxsplit=1)[0]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_batch.py||tests/pytests/integration/cli/test_batch.py": [
          "File: tests/pytests/integration/cli/test_batch.py -> tests/pytests/integration/cli/test_batch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:     # Executing salt with batch: 1 and with failhard. It should stop after the first error.",
          "143:     cmd = salt_cli.run(",
          "145:         \"-b 1\",",
          "146:         \"--out=yaml\",",
          "147:         \"--failhard\",",
          "",
          "[Removed Lines]",
          "144:         \"state.single\" \"test.fail_without_changes\" \"name=test_me\",",
          "",
          "[Added Lines]",
          "144:         \"state.single\",",
          "145:         \"test.fail_without_changes\",",
          "146:         \"name=test_me\",",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt.py||tests/pytests/integration/cli/test_salt.py": [
          "File: tests/pytests/integration/cli/test_salt.py -> tests/pytests/integration/cli/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     Ensure correct exit status when salt CLI starts correctly.",
          "256:     \"\"\"",
          "258:     custom_test_state:",
          "259:       test.configurable_test_state:",
          "260:         - name: example",
          "",
          "[Removed Lines]",
          "257:     state = f\"\"\"",
          "",
          "[Added Lines]",
          "257:     state = \"\"\"",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_syndic_eauth.py||tests/pytests/integration/cli/test_syndic_eauth.py": [
          "File: tests/pytests/integration/cli/test_syndic_eauth.py -> tests/pytests/integration/cli/test_syndic_eauth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "523:             except docker.errors.APIError as exc:",
          "524:                 # if the container isn't running, there's not thing we can do",
          "525:                 # at this point.",
          "529: @pytest.fixture(",
          "",
          "[Removed Lines]",
          "526:                 log.info(f\"Docker failed removing /etc/salt: %s\", exc)",
          "",
          "[Added Lines]",
          "526:                 log.info(\"Docker failed removing /etc/salt: %s\", exc)",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/state/test_state_test.py||tests/pytests/integration/modules/state/test_state_test.py": [
          "File: tests/pytests/integration/modules/state/test_state_test.py -> tests/pytests/integration/modules/state/test_state_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:     true post the state already being run previously",
          "137:     \"\"\"",
          "138:     source = pathlib.Path(RUNTIME_VARS.BASE_FILES, \"testfile\")",
          "140:     testfile_path.chmod(0o644)",
          "141:     ret = salt_call_cli.run(\"state.sls\", \"sls-id-test\")",
          "142:     assert ret.returncode == 0",
          "",
          "[Removed Lines]",
          "139:     testfile_path.write_text(source.read_text())",
          "",
          "[Added Lines]",
          "139:     testfile_path.write_text(source.read_text(encoding=\"utf-8\"), encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/pytests/integration/sdb/test_etcd_db.py||tests/pytests/integration/sdtest_etcd_db.py": [
          "File: tests/pytests/integration/sdb/test_etcd_db.py -> tests/pytests/integration/sdtest_etcd_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     scope=\"module\",",
          "29:     params=(EtcdVersion.v2, EtcdVersion.v3_v2_mode),",
          "30:     ids=etcd_version_ids,",
          "33:     # The only parameter is True because the salt integration",
          "34:     # configuration for the salt-master and salt-minion defaults",
          "35:     # to v2.",
          "",
          "[Removed Lines]",
          "31: )  # pylint: disable=function-redefined",
          "32: def etcd_version(request):",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_pre_flight.py||tests/pytests/integration/ssh/test_pre_flight.py": [
          "File: tests/pytests/integration/ssh/test_pre_flight.py -> tests/pytests/integration/ssh/test_pre_flight.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:     try:",
          "208:         script = pathlib.Path.home() / \"hacked\"",
          "209:         tmp_preflight = pathlib.Path(\"/tmp\", \"ssh_pre_flight.sh\")",
          "211:         os.chown(tmp_preflight, account.info.uid, account.info.gid)",
          "212:         ret = salt_ssh_cli.run(\"test.ping\")",
          "213:         assert not script.is_file()",
          "",
          "[Removed Lines]",
          "210:         tmp_preflight.write_text(f\"touch {script}\")",
          "",
          "[Added Lines]",
          "210:         tmp_preflight.write_text(f\"touch {script}\", encoding=\"utf-8\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:     try:",
          "240:         script = pathlib.Path(\"/tmp\", \"itworked\")",
          "241:         preflight = pathlib.Path(\"/ssh_pre_flight.sh\")",
          "243:         tmp_preflight = pathlib.Path(\"/tmp\", preflight.name)",
          "245:         _custom_roster(salt_ssh_cli.roster_file, {\"ssh_pre_flight\": str(preflight)})",
          "",
          "[Removed Lines]",
          "242:         preflight.write_text(f\"touch {str(script)}\")",
          "",
          "[Added Lines]",
          "242:         preflight.write_text(f\"touch {str(script)}\", encoding=\"utf-8\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "255:             fi",
          "256:             x=$(( $x + 1 ))",
          "257:         done",
          "259:         )",
          "260:         run_script.chmod(0o0777)",
          "261:         # pylint: disable=W1509",
          "",
          "[Removed Lines]",
          "258:         \"\"\"",
          "",
          "[Added Lines]",
          "258:         \"\"\",",
          "259:             encoding=\"utf-8\",",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import pathlib",
          "8: import shutil",
          "11: import pytest",
          "12: from pytestskipmarkers.utils import platform",
          "",
          "[Removed Lines]",
          "10: import packaging",
          "",
          "[Added Lines]",
          "10: import packaging.version",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:         salt_release = \"3006.0rc2\"",
          "98:     if pkg_test_type == \"download-pkgs\":",
          "99:         if packaging.version.parse(salt_release) < packaging.version.parse(\"3006.0rc1\"):",
          "101:     return salt_release",
          "",
          "[Removed Lines]",
          "100:             log.warning(f\"The salt release being tested, {salt_release!r} looks off.\")",
          "",
          "[Added Lines]",
          "100:             log.warning(\"The salt release being tested, %r looks off.\", salt_release)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:         latest_release = packaging.version.parse(latest_env_var)",
          "110:         if current_release >= latest_release:",
          "111:             log.debug(",
          "113:             )",
          "114:             params.append(\"latest\")",
          "115:     return params",
          "",
          "[Removed Lines]",
          "112:                 f\"Running the tests for the latest release since {str(current_release)} >= {str(latest_release)}\"",
          "",
          "[Added Lines]",
          "112:                 \"Running the tests for the latest release since %s >= %s\",",
          "113:                 current_release,",
          "114:                 latest_release,",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_pip_upgrade.py||tests/pytests/pkg/integration/test_pip_upgrade.py": [
          "File: tests/pytests/pkg/integration/test_pip_upgrade.py -> tests/pytests/pkg/integration/test_pip_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:             pytest.fail(f\"Failed to find {dep} in the versions report output\")",
          "51:         if dep_version == installed_version:",
          "53:         else:",
          "54:             found_new = True",
          "55:             break",
          "",
          "[Removed Lines]",
          "52:             log.warning(f\"The {dep} dependency is already latest\")",
          "",
          "[Added Lines]",
          "52:             log.warning(\"The %s dependency is already latest\", dep)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:             else:",
          "89:                 pytest.fail(f\"Failed to find {dep} in the versions report output\")",
          "90:         finally:",
          "92:             assert salt_call_cli.run(",
          "93:                 \"--local\", \"pip.uninstall\", f\"{dep}=={dep_version}\"",
          "94:             )",
          "",
          "[Removed Lines]",
          "91:             log.info(f\"Uninstalling {dep_version}\")",
          "",
          "[Added Lines]",
          "91:             log.info(\"Uninstalling %s\", dep_version)",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py": [
          "File: tests/pytests/pkg/integration/test_salt_user.py -> tests/pytests/pkg/integration/test_salt_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:                                 for _path in log_files_list:",
          "297:                                     log_path = pathlib.Path(_path)",
          "298:                                     assert log_path.exists()",
          "300:                                         f.write(\"This is a log rotation test\\n\")",
          "302:                                 # force log rotation",
          "",
          "[Removed Lines]",
          "299:                                     with log_path.open(\"a\") as f:",
          "",
          "[Added Lines]",
          "299:                                     with log_path.open(\"a\", encoding=\"utf-8\") as f:",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/blackout/conftest.py||tests/pytests/scenarios/blackout/conftest.py": [
          "File: tests/pytests/scenarios/blackout/conftest.py -> tests/pytests/scenarios/blackout/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:         self.minion_1_pillar.write_text(pillar_contents)",
          "47:         self.refresh_pillar(exiting_blackout=False)",
          "48:         self.in_blackout = True",
          "51:     def exit_blackout(self):",
          "52:         if self.in_blackout:",
          "",
          "[Removed Lines]",
          "49:         return self.__enter__()",
          "",
          "[Added Lines]",
          "49:         return self.__enter__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_salt_monitor.py||tests/pytests/unit/beacons/test_salt_monitor.py": [
          "File: tests/pytests/unit/beacons/test_salt_monitor.py -> tests/pytests/unit/beacons/test_salt_monitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import pytest",
          "5: import salt.beacons.salt_monitor as salt_monitor",
          "",
          "[Removed Lines]",
          "1: # pylint: disable=E8231",
          "2: # Salt libs",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cli/test_daemons.py||tests/pytests/unit/cli/test_daemons.py": [
          "File: tests/pytests/unit/cli/test_daemons.py -> tests/pytests/unit/cli/test_daemons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         :return:",
          "62:         \"\"\"",
          "63:         for data in self.messages:",
          "67:             if (data[\"type\"] == log_type or not log_type) and log_str.find(msg) > -1:",
          "68:                 return True",
          "",
          "[Removed Lines]",
          "64:             log_str = (",
          "65:                 data[\"message\"] % data[\"args\"]",
          "66:             )  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "64:             log_str = data[\"message\"] % data[\"args\"]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_ssh.py||tests/pytests/unit/client/ssh/test_ssh.py": [
          "File: tests/pytests/unit/client/ssh/test_ssh.py -> tests/pytests/unit/client/ssh/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:     assert opts[\"tgt\"] == user + host",
          "230:     client._update_targets()",
          "231:     assert opts[\"tgt\"] == host",
          "235: def test_update_targets_dns(opts):",
          "",
          "[Removed Lines]",
          "232:     assert client.targets[host][\"user\"] == user.split(\"@\")[0]",
          "",
          "[Added Lines]",
          "232:     assert client.targets[host][\"user\"] == user.split(\"@\", maxsplit=1)[0]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:     assert opts[\"tgt\"] == user + host",
          "246:     client._update_targets()",
          "247:     assert opts[\"tgt\"] == host",
          "251: def test_update_targets_no_user(opts):",
          "",
          "[Removed Lines]",
          "248:     assert client.targets[host][\"user\"] == user.split(\"@\")[0]",
          "",
          "[Added Lines]",
          "248:     assert client.targets[host][\"user\"] == user.split(\"@\", maxsplit=1)[0]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282:         client._expand_target()",
          "283:     client._update_targets()",
          "284:     assert opts[\"tgt\"] == host",
          "288: def test_parse_tgt(opts):",
          "",
          "[Removed Lines]",
          "285:     assert client.targets[host][\"user\"] == user.split(\"@\")[0]",
          "",
          "[Added Lines]",
          "285:     assert client.targets[host][\"user\"] == user.split(\"@\", maxsplit=1)[0]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "298:         assert not opts.get(\"ssh_cli_tgt\")",
          "299:         client = ssh.SSH(opts)",
          "300:         assert client.parse_tgt[\"hostname\"] == host",
          "302:         assert opts.get(\"ssh_cli_tgt\") == user + host",
          "",
          "[Removed Lines]",
          "301:         assert client.parse_tgt[\"user\"] == user.split(\"@\")[0]",
          "",
          "[Added Lines]",
          "301:         assert client.parse_tgt[\"user\"] == user.split(\"@\", maxsplit=1)[0]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_proxmox.py||tests/pytests/unit/cloud/clouds/test_proxmox.py": [
          "File: tests/pytests/unit/cloud/clouds/test_proxmox.py -> tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "384:             \"https://proxmox.connection.url:9999/api2/json/access/ticket\",",
          "385:             verify=True,",
          "386:             data={\"username\": (\"fakeuser\",), \"password\": \"secretpassword\"},",
          "387:         )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "387:             timeout=120,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py||tests/pytests/unit/daemons/masterapi/test_remote_funcs.py": [
          "File: tests/pytests/unit/daemons/masterapi/test_remote_funcs.py -> tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     funcs.cache.store(\"minions/webserver\", \"mine\", dict(ip_addr=\"2001:db8::1:3\"))",
          "43:     with patch(",
          "44:         \"salt.utils.minions.CkMinions._check_compound_minions\",",
          "46:     ):",
          "47:         ret = funcs._mine_get(",
          "48:             {",
          "",
          "[Removed Lines]",
          "45:         MagicMock(return_value=(dict(minions=[\"webserver\"], missing=[]))),",
          "",
          "[Added Lines]",
          "45:         MagicMock(return_value=dict(minions=[\"webserver\"], missing=[])),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     )",
          "82:     with patch(",
          "83:         \"salt.utils.minions.CkMinions._check_compound_minions\",",
          "85:     ):",
          "86:         ret = funcs._mine_get(",
          "87:             {",
          "",
          "[Removed Lines]",
          "84:         MagicMock(return_value=(dict(minions=[\"webserver\"], missing=[]))),",
          "",
          "[Added Lines]",
          "84:         MagicMock(return_value=dict(minions=[\"webserver\"], missing=[])),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:     )",
          "115:     with patch(",
          "116:         \"salt.utils.minions.CkMinions._check_compound_minions\",",
          "118:     ):",
          "119:         ret = funcs._mine_get(",
          "120:             {",
          "",
          "[Removed Lines]",
          "117:         MagicMock(return_value=(dict(minions=[\"webserver\"], missing=[]))),",
          "",
          "[Added Lines]",
          "117:         MagicMock(return_value=dict(minions=[\"webserver\"], missing=[])),",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:     \"\"\"",
          "291:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
          "292:     badfile.write_text(\"Bad file\")",
          "294:     ret = roots.find_file(badpath)",
          "295:     assert ret == {\"path\": \"\", \"rel\": \"\"}",
          "296:     badpath = f\"{tmp_state_tree / '..' / 'bar'}\"",
          "",
          "[Removed Lines]",
          "293:     badpath = f\"../bar\"",
          "",
          "[Added Lines]",
          "293:     badpath = \"../bar\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:     \"\"\"",
          "305:     badfile = pathlib.Path(tmp_state_tree).parent / \"bar\"",
          "306:     badfile.write_text(\"Bad file\")",
          "308:     load = {\"path\": \"salt://|..\\\\bar\", \"saltenv\": \"base\", \"loc\": 0}",
          "309:     fnd = {",
          "310:         \"path\": f\"{tmp_state_tree / '..' / 'bar'}\",",
          "",
          "[Removed Lines]",
          "307:     badpath = f\"../bar\"",
          "",
          "[Added Lines]",
          "307:     badpath = \"../bar\"",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/dockermod/test_module.py||tests/pytests/unit/modules/dockermod/test_module.py": [
          "File: tests/pytests/unit/modules/dockermod/test_module.py -> tests/pytests/unit/modules/dockermod/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:         try:",
          "308:             mine_send.assert_called_with(\"docker.ps\", verbose=True, all=True, host=True)",
          "309:         except AssertionError as exc:",
          "311:                 \"command '{}' did not call docker.ps with expected \"",
          "312:                 \"arguments: {}\".format(command_name, exc)",
          "316: def test_update_mine():",
          "",
          "[Removed Lines]",
          "310:             raise Exception(",
          "313:             )",
          "",
          "[Added Lines]",
          "310:             raise AssertionError(",
          "313:             ) from exc",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319:     \"\"\"",
          "321:     def config_get_disabled(val, default):",
          "331:     def config_get_enabled(val, default):",
          "341:     mine_mock = Mock()",
          "342:     dunder_salt = {",
          "",
          "[Removed Lines]",
          "322:         return {",
          "323:             \"base_url\": docker_mod.NOTSET,",
          "324:             \"version\": docker_mod.NOTSET,",
          "325:             \"docker.url\": docker_mod.NOTSET,",
          "326:             \"docker.version\": docker_mod.NOTSET,",
          "327:             \"docker.machine\": docker_mod.NOTSET,",
          "328:             \"docker.update_mine\": False,",
          "329:         }[val]",
          "332:         return {",
          "333:             \"base_url\": docker_mod.NOTSET,",
          "334:             \"version\": docker_mod.NOTSET,",
          "335:             \"docker.url\": docker_mod.NOTSET,",
          "336:             \"docker.version\": docker_mod.NOTSET,",
          "337:             \"docker.machine\": docker_mod.NOTSET,",
          "338:             \"docker.update_mine\": True,",
          "339:         }[val]",
          "",
          "[Added Lines]",
          "322:         if val == \"docker.update_mine\":",
          "323:             return False",
          "324:         return docker_mod.NOTSET",
          "327:         if val == \"docker.update_mine\":",
          "328:             return True",
          "329:         return docker_mod.NOTSET",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "937:     \"\"\"",
          "939:     def _inspect_container_effect(id_):",
          "942:                 \"Config\": {\"Image\": \"realimage:latest\"},",
          "943:                 \"HostConfig\": {},",
          "948:     def _inspect_image_effect(id_):",
          "954:     inspect_container_mock = MagicMock(side_effect=_inspect_container_effect)",
          "955:     inspect_image_mock = MagicMock(side_effect=_inspect_image_effect)",
          "",
          "[Removed Lines]",
          "940:         return {",
          "941:             \"container1\": {",
          "944:             },",
          "945:             \"container2\": {\"Config\": {\"Image\": \"image_id\"}, \"HostConfig\": {}},",
          "946:         }[id_]",
          "949:         return {",
          "950:             \"realimage:latest\": {\"Id\": \"image_id\"},",
          "951:             \"image_id\": {\"Id\": \"image_id\"},",
          "952:         }[id_]",
          "",
          "[Added Lines]",
          "930:         if id_ == \"container1\":",
          "931:             return {",
          "934:             }",
          "935:         if id_ == \"container2\":",
          "936:             return {\"Config\": {\"Image\": \"image_id\"}, \"HostConfig\": {}}",
          "939:         if id_ == \"realimage:latest\":",
          "940:             return {\"Id\": \"image_id\"}",
          "941:         if id_ == \"image_id\":",
          "942:             return {\"Id\": \"image_id\"}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "967:     \"\"\"",
          "969:     def _inspect_container_effect(id_):",
          "972:                 \"Config\": {},",
          "973:                 \"HostConfig\": {",
          "974:                     \"Ulimits\": [",
          "",
          "[Removed Lines]",
          "970:         return {",
          "971:             \"container1\": {",
          "",
          "[Added Lines]",
          "960:         if id_ == \"container1\":",
          "961:             return {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "976:                         {\"Hard\": 65536, \"Soft\": 65536, \"Name\": \"nofile\"},",
          "977:                     ]",
          "978:                 },",
          "981:                 \"Config\": {},",
          "982:                 \"HostConfig\": {",
          "983:                     \"Ulimits\": [",
          "",
          "[Removed Lines]",
          "979:             },",
          "980:             \"container2\": {",
          "",
          "[Added Lines]",
          "969:             }",
          "970:         if id_ == \"container2\":",
          "971:             return {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "985:                         {\"Hard\": -1, \"Soft\": -1, \"Name\": \"core\"},",
          "986:                     ]",
          "987:                 },",
          "991:     inspect_container_mock = MagicMock(side_effect=_inspect_container_effect)",
          "",
          "[Removed Lines]",
          "988:             },",
          "989:         }[id_]",
          "",
          "[Added Lines]",
          "979:             }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1004:     \"\"\"",
          "1006:     def _inspect_container_effect(id_):",
          "1009:                 \"Config\": {},",
          "1010:                 \"HostConfig\": {\"Env\": [\"FOO=bar\", \"HELLO=world\"]},",
          "1013:                 \"Config\": {},",
          "1014:                 \"HostConfig\": {\"Env\": [\"HELLO=world\", \"FOO=bar\"]},",
          "1018:     inspect_container_mock = MagicMock(side_effect=_inspect_container_effect)",
          "",
          "[Removed Lines]",
          "1007:         return {",
          "1008:             \"container1\": {",
          "1011:             },",
          "1012:             \"container2\": {",
          "1015:             },",
          "1016:         }[id_]",
          "",
          "[Added Lines]",
          "997:         if id_ == \"container1\":",
          "998:             return {",
          "1001:             }",
          "1002:         if id_ == \"container2\":",
          "1003:             return {",
          "1006:             }",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_line.py||tests/pytests/unit/modules/file/test_file_line.py": [
          "File: tests/pytests/unit/modules/file/test_file_line.py -> tests/pytests/unit/modules/file/test_file_line.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1633:     )",
          "1634:     # pylint: enable=W1401",
          "1635:     after, before = (",
          "1637:         file_content.split(os.linesep)[2],",
          "1638:     )",
          "",
          "[Removed Lines]",
          "1636:         file_content.split(os.linesep)[0],",
          "",
          "[Added Lines]",
          "1636:         file_content.split(os.linesep, maxsplit=1)[0],",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_lsattr.py||tests/pytests/unit/modules/file/test_file_lsattr.py": [
          "File: tests/pytests/unit/modules/file/test_file_lsattr.py -> tests/pytests/unit/modules/file/test_file_lsattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     )",
          "80:     with patch_has_ext, patch_run:",
          "81:         actual = set(filemod.lsattr(fname)[fname])",
          "85:         assert actual == expected, msg",
          "",
          "[Removed Lines]",
          "82:         msg = \"Actual: {!r} Expected: {!r}\".format(",
          "83:             actual, expected",
          "84:         )  # pylint: disable=E1322",
          "",
          "[Added Lines]",
          "82:         msg = f\"Actual: {actual!r} Expected: {expected!r}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:     )",
          "108:     with patch_has_ext, patch_run:",
          "109:         actual = set(filemod.lsattr(fname)[fname])",
          "113:         assert actual == expected, msg",
          "",
          "[Removed Lines]",
          "110:         msg = \"Actual: {!r} Expected: {!r}\".format(",
          "111:             actual, expected",
          "112:         )  # pylint: disable=E1322",
          "",
          "[Added Lines]",
          "108:         msg = f\"Actual: {actual!r} Expected: {expected!r}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:     )",
          "136:     with patch_has_ext, patch_run:",
          "137:         actual = set(filemod.lsattr(fname)[fname])",
          "141:         assert actual == expected, msg",
          "",
          "[Removed Lines]",
          "138:         msg = \"Actual: {!r} Expected: {!r}\".format(",
          "139:             actual, expected",
          "140:         )  # pylint: disable=E1322",
          "",
          "[Added Lines]",
          "134:         msg = f\"Actual: {actual!r} Expected: {expected!r}\"",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_module.py||tests/pytests/unit/modules/file/test_file_module.py": [
          "File: tests/pytests/unit/modules/file/test_file_module.py -> tests/pytests/unit/modules/file/test_file_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "506:             mockself.path = path",
          "508:         def readlines(mockself):  # pylint: disable=unused-argument",
          "516:         def __enter__(mockself):",
          "517:             return mockself",
          "",
          "[Removed Lines]",
          "509:             return {",
          "510:                 \"text1\": text1.encode(\"utf8\"),",
          "511:                 \"text2\": text2.encode(\"utf8\"),",
          "512:                 \"binary1\": binary1,",
          "513:                 \"binary2\": binary2,",
          "514:             }[mockself.path].splitlines(True)",
          "",
          "[Added Lines]",
          "509:             if mockself.path == \"text1\":",
          "510:                 return text1.encode(\"utf8\").splitlines(True)",
          "511:             if mockself.path == \"text2\":",
          "512:                 return text2.encode(\"utf8\").splitlines(True)",
          "513:             if mockself.path == \"binary1\":",
          "514:                 return binary1.splitlines(True)",
          "515:             if mockself.path == \"binary2\":",
          "516:                 return binary2.splitlines(True)",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/state/test_state.py||tests/pytests/unit/modules/state/test_state.py": [
          "File: tests/pytests/unit/modules/state/test_state.py -> tests/pytests/unit/modules/state/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "759:                         with patch.object(os.path, \"join\", mock):",
          "760:                             mock = MagicMock(return_value=True)",
          "761:                             with patch.object(state, \"_set_retcode\", mock):",
          "767: def test_highstate():",
          "",
          "[Removed Lines]",
          "762:                                 assert state.top(",
          "763:                                     \"reverse_top.sls \" \"exclude=exclude.sls\"",
          "764:                                 )",
          "",
          "[Added Lines]",
          "762:                                 assert state.top(\"reverse_top.sls exclude=exclude.sls\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "800:                             mock = MagicMock(return_value=True)",
          "801:                             with patch.object(salt.payload, \"Serial\", mock):",
          "802:                                 with patch.object(os.path, \"join\", mock):",
          "804:                                         assert state.highstate(arg)",
          "",
          "[Removed Lines]",
          "803:                                     with patch.object(state, \"_set\" \"_retcode\", mock):",
          "",
          "[Added Lines]",
          "801:                                     with patch.object(state, \"_set_retcode\", mock):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "906:                         assert state.sls(arg, None, None, True, cache=True)",
          "908:                     MockState.HighState.flag = True",
          "911:                     MockState.HighState.flag = False",
          "912:                     with patch.object(",
          "914:                     ), patch.object(os.path, \"join\", return_value=True), patch.object(",
          "915:                         os, \"umask\", return_value=True",
          "916:                     ), patch.object(",
          "",
          "[Removed Lines]",
          "909:                     assert state.sls(\"core,edit\" \".vim dev\", None, None, True)",
          "913:                         state, \"_filter_\" \"running\", return_value=True",
          "",
          "[Added Lines]",
          "907:                     assert state.sls(\"core,edit.vim dev\", None, None, True)",
          "911:                         state, \"_filter_running\", return_value=True",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "922:                     ), patch(",
          "923:                         \"salt.utils.files.fopen\", mock_open()",
          "924:                     ):",
          "928: def test_get_test_value():",
          "",
          "[Removed Lines]",
          "925:                         assert state.sls(\"core,edit\" \".vim dev\", None, None, True)",
          "",
          "[Added Lines]",
          "923:                         assert state.sls(\"core,edit.vim dev\", None, None, True)",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cp.py||tests/pytests/unit/modules/test_cp.py": [
          "File: tests/pytests/unit/modules/test_cp.py -> tests/pytests/unit/modules/test_cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     saltenv = \"base\"",
          "44:     template = \"jinja\"",
          "45:     file_data = \"Remember to keep your files well salted.\"",
          "47:     with patch.dict(templates.TEMPLATE_REGISTRY, {\"jinja\": mock_jinja}):",
          "48:         with patch(\"salt.utils.files.fopen\", mock_open(read_data=file_data)):",
          "49:             pytest.raises(",
          "",
          "[Removed Lines]",
          "46:     mock_jinja = lambda *args, **kwargs: {\"result\": False, \"data\": file_data}",
          "",
          "[Added Lines]",
          "47:     def mock_jinja(*args, **kwargs):",
          "48:         return {\"result\": False, \"data\": file_data}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     saltenv = \"base\"",
          "66:     template = \"jinja\"",
          "67:     file_data = \"/srv/salt/biscuits\"",
          "69:     ret = (file_data, file_data)  # salt.utils.files.fopen can only be mocked once",
          "70:     with patch.dict(templates.TEMPLATE_REGISTRY, {\"jinja\": mock_jinja}):",
          "71:         with patch(\"salt.utils.files.fopen\", mock_open(read_data=file_data)):",
          "",
          "[Removed Lines]",
          "68:     mock_jinja = lambda *args, **kwargs: {\"result\": True, \"data\": file_data}",
          "",
          "[Added Lines]",
          "72:     def mock_jinja(*args, **kwargs):",
          "73:         return {\"result\": True, \"data\": file_data}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:         assert num_opens == 1, num_opens",
          "150:         fh_ = m_open.filehandles[filename][0]",
          "151:         assert fh_.read.call_count == 2, fh_.read.call_count",
          "153:             dict(",
          "154:                 loc=fh_.tell(),  # pylint: disable=resource-leakage",
          "155:                 cmd=\"_file_recv\",",
          "",
          "[Removed Lines]",
          "152:         req_channel_factory_mock().__enter__().send.assert_called_once_with(",
          "",
          "[Added Lines]",
          "159:         req_channel_factory_mock().__enter__().send.assert_called_once_with(  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_devinfo.py||tests/pytests/unit/modules/test_devinfo.py": [
          "File: tests/pytests/unit/modules/test_devinfo.py -> tests/pytests/unit/modules/test_devinfo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:         \"E\": {\"ID_BUS\": \"ata\"},",
          "43:     }",
          "45:     with patch.dict(",
          "46:         devinfo.__salt__,",
          "48:     ), patch.dict(devinfo.__grains__, {\"disks\": [\"sda\", \"sdb\", \"sr0\"]}):",
          "49:         assert devinfo.filter_({\"e.id_bus\": \"ata\"}, {}) == [\"sda\", \"sr0\"]",
          "50:         assert devinfo.filter_({\"e.id_bus\": \"usb\"}, {}) == [\"sdb\"]",
          "",
          "[Removed Lines]",
          "47:         {\"udev.info\": lambda d: {\"sda\": hd, \"sdb\": usb, \"sr0\": cdrom}[d]},",
          "",
          "[Added Lines]",
          "45:     def _udev_info(key):",
          "46:         if key == \"sda\":",
          "47:             return hd",
          "48:         if key == \"sdb\":",
          "49:             return usb",
          "50:         if key == \"sr0\":",
          "51:             return cdrom",
          "55:         {\"udev.info\": _udev_info},",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_glassfish.py||tests/pytests/unit/modules/test_glassfish.py": [
          "File: tests/pytests/unit/modules/test_glassfish.py -> tests/pytests/unit/modules/test_glassfish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         url=\"http://localhost:4848/management/domain/ThePath\",",
          "34:         verify=True,",
          "35:         auth=None,",
          "36:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:         verify=True,",
          "52:         auth=None,",
          "53:         data='{\"1\": 1}',",
          "54:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:         verify=True,",
          "70:         auth=None,",
          "71:         params={1: 1},",
          "72:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:         timeout=120,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_gpg.py||tests/pytests/unit/modules/test_gpg.py": [
          "File: tests/pytests/unit/modules/test_gpg.py -> tests/pytests/unit/modules/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "621:                     keyids=\"xxxxxxxxxxxxxxxx\", output=exported_keyfile, bare=True",
          "622:                 )",
          "623:                 assert ret == GPG_TEST_PUB_KEY",
          "625:                 assert keyfile_contents == GPG_TEST_PUB_KEY",
          "",
          "[Removed Lines]",
          "624:                 keyfile_contents = pathlib.Path(exported_keyfile).read_text()",
          "",
          "[Added Lines]",
          "624:                 keyfile_contents = pathlib.Path(exported_keyfile).read_text(",
          "625:                     encoding=\"utf-8\"",
          "626:                 )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "746:                     True,",
          "747:                     passphrase=GPG_TEST_KEY_PASSPHRASE,",
          "748:                 )",
          "750:                 assert keyfile_contents == GPG_TEST_PRIV_KEY",
          "",
          "[Removed Lines]",
          "749:                 keyfile_contents = pathlib.Path(exported_keyfile).read_text()",
          "",
          "[Added Lines]",
          "751:                 keyfile_contents = pathlib.Path(exported_keyfile).read_text(",
          "752:                     encoding=\"utf-8\"",
          "753:                 )",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_hg.py||tests/pytests/unit/modules/test_hg.py": [
          "File: tests/pytests/unit/modules/test_hg.py -> tests/pytests/unit/modules/test_hg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     \"\"\"",
          "98:     Test for Status to a given repository (cwd is list)",
          "99:     \"\"\"",
          "100:     with patch.dict(",
          "101:         hg.__salt__,",
          "112:     ):",
          "113:         assert hg.status([\"dir 0\", \"dir 1\"]) == {",
          "114:             \"dir 0\": {\"added\": [\"file 0\"]},",
          "",
          "[Removed Lines]",
          "102:         {",
          "103:             \"cmd.run_stdout\": MagicMock(",
          "104:                 side_effect=(",
          "105:                     lambda *args, **kwargs: {",
          "106:                         \"dir 0\": \"A file 0\\n\",",
          "107:                         \"dir 1\": \"M file 1\",",
          "108:                     }[kwargs[\"cwd\"]]",
          "109:                 )",
          "110:             )",
          "111:         },",
          "",
          "[Added Lines]",
          "101:     def func(*args, **kwargs):",
          "102:         if kwargs[\"cwd\"] == \"dir 0\":",
          "103:             return \"A file 0\\n\"",
          "104:         return \"M file 1\"",
          "108:         {\"cmd.run_stdout\": MagicMock(side_effect=func)},",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mount.py||tests/pytests/unit/modules/test_mount.py": [
          "File: tests/pytests/unit/modules/test_mount.py -> tests/pytests/unit/modules/test_mount.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:     Tests to verify set_filesystems reads and adjusts file /etc/filesystems correctly",
          "417:     \"\"\"",
          "418:     # Note AIX uses tabs in filesystems files, hence disable warings and errors for tabs and spaces",
          "421:     config_filepath = str(tmp_sub_dir / \"filesystems\")",
          "422:     with patch.dict(mount.__grains__, {\"os\": \"AIX\", \"kernel\": \"AIX\"}):",
          "423:         mount.set_filesystems(",
          "",
          "[Removed Lines]",
          "419:     # pylint: disable=W8191",
          "420:     # pylint: disable=E8101",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_salt_version.py||tests/pytests/unit/modules/test_salt_version.py": [
          "File: tests/pytests/unit/modules/test_salt_version.py -> tests/pytests/unit/modules/test_salt_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:         else:",
          "30:             assert len(v) == 2",
          "35:     with patch(\"salt.version.SaltStackVersion.LNAMES\", {\"neon\": (2019, 8)}):",
          "36:         sv = salt.version.SaltStackVersion.from_name(\"Neon\")",
          "",
          "[Removed Lines]",
          "32:     sv = sv.__str__()",
          "33:     assert isinstance(sv, str)",
          "",
          "[Added Lines]",
          "32:     assert isinstance(str(sv), str)",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_solaris_shadow.py||tests/pytests/unit/modules/test_solaris_shadow.py": [
          "File: tests/pytests/unit/modules/test_solaris_shadow.py -> tests/pytests/unit/modules/test_solaris_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     missing_pwd, reason=\"Has no pwd module for accessing /etc/password passwords\"",
          "30: )",
          "34: # TODO: A lot of the shadow functionality is common across solaris and Linux.",
          "35: # It would be possible to combine some of this into salt/utils -W. Werner, 2021-01-26",
          "",
          "[Removed Lines]",
          "32: # pylint: disable=singleton-comparison,comparison-to-True-should-be-if-cond-is-True-or-if-cond",
          "",
          "[Added Lines]",
          "32: # pylint: disable=singleton-comparison",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_powercfg.py||tests/pytests/unit/modules/test_win_powercfg.py": [
          "File: tests/pytests/unit/modules/test_win_powercfg.py -> tests/pytests/unit/modules/test_win_powercfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "168:         calls = [",
          "169:             call(\"powercfg /getactivescheme\", python_shell=False),",
          "170:             call(",
          "172:                 python_shell=False,",
          "173:             ),",
          "174:         ]",
          "",
          "[Removed Lines]",
          "171:                 \"powercfg /q 381b4222-f694-41f0-9685-ff5bb260df2e SUB_DISK\" \" DISKIDLE\",",
          "",
          "[Added Lines]",
          "171:                 \"powercfg /q 381b4222-f694-41f0-9685-ff5bb260df2e SUB_DISK DISKIDLE\",",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zabbix.py||tests/pytests/unit/modules/test_zabbix.py": [
          "File: tests/pytests/unit/modules/test_zabbix.py -> tests/pytests/unit/modules/test_zabbix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:     \"\"\"",
          "409:     module_return = True",
          "411:     query_return(",
          "412:         {",
          "413:             \"jsonrpc\": \"2.0\",",
          "",
          "[Removed Lines]",
          "410:     # pylint: disable=E8128",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "464:             \"type\": \"3\",",
          "465:         }",
          "466:     ]",
          "468:     query_return(",
          "469:         {",
          "470:             \"jsonrpc\": \"2.0\",",
          "",
          "[Removed Lines]",
          "467:     # pylint: disable=E8128",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "547:             \"active\": \"0\",",
          "548:         }",
          "549:     ]",
          "551:     query_return(",
          "552:         {",
          "553:             \"jsonrpc\": \"2.0\",",
          "",
          "[Removed Lines]",
          "550:     # pylint: disable=E8128",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "707:             \"type\": \"1\",",
          "708:         },",
          "709:     ]",
          "711:     query_return(",
          "712:         {",
          "713:             \"jsonrpc\": \"2.0\",",
          "",
          "[Removed Lines]",
          "710:     # pylint: disable=E8128",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "924:             \"users_status\": \"0\",",
          "925:         },",
          "926:     ]",
          "928:     query_return(",
          "929:         {",
          "930:             \"jsonrpc\": \"2.0\",",
          "",
          "[Removed Lines]",
          "927:     # pylint: disable=E8128",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/conftest.py||tests/pytests/unit/modules/virt/conftest.py": [
          "File: tests/pytests/unit/modules/virt/conftest.py -> tests/pytests/unit/modules/virt/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     def __init__(self):",
          "41:         def mapped_results(*args, **kwargs):",
          "43:                 raise virt.libvirt.libvirtError(\"Not found: {}\".format(args[0]))",
          "44:             return self._instances[args[0]]",
          "",
          "[Removed Lines]",
          "42:             if args[0] not in self._instances.keys():",
          "",
          "[Added Lines]",
          "42:             if args[0] not in self._instances:",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py||tests/pytests/unit/modules/win_lgpo/test_admx_policies.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_admx_policies.py -> tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         # download lgpo.zip",
          "84:         log.debug(\"Downloading LGPO.exe from Microsoft\")",
          "85:         url = \"https://download.microsoft.com/download/8/5/C/85C25433-A1B0-4FFA-9429-7E023E7DA8D8/LGPO.zip\"",
          "87:         with salt.utils.files.fopen(zip_file, \"wb\") as f:",
          "88:             f.write(r.content)",
          "89:         # extract zip",
          "",
          "[Removed Lines]",
          "86:         r = requests.get(url)",
          "",
          "[Added Lines]",
          "86:         r = requests.get(url, timeout=60)",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_consul_pillar.py||tests/pytests/unit/pillar/test_consul_pillar.py": [
          "File: tests/pytests/unit/pillar/test_consul_pillar.py -> tests/pytests/unit/pillar/test_consul_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: def test_connection(base_pillar_data):",
          "60:         with patch.object(",
          "61:             consul_pillar,",
          "62:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "57:     with patch.dict(",
          "58:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "59:     ):",
          "",
          "[Added Lines]",
          "57:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73: def test_pillar_data(base_pillar_data):",
          "77:         with patch.object(",
          "78:             consul_pillar,",
          "79:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "74:     with patch.dict(",
          "75:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "76:     ):",
          "",
          "[Added Lines]",
          "72:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92: def test_blank_root(base_pillar_data):",
          "96:         with patch.object(",
          "97:             consul_pillar,",
          "98:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "93:     with patch.dict(",
          "94:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "95:     ):",
          "",
          "[Added Lines]",
          "89:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106: def test_pillar_nest(base_pillar_data):",
          "110:         with patch.object(",
          "111:             consul_pillar,",
          "112:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "107:     with patch.dict(",
          "108:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "109:     ):",
          "",
          "[Added Lines]",
          "101:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124: def test_value_parsing(base_pillar_data):",
          "128:         with patch.object(",
          "129:             consul_pillar,",
          "130:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "125:     with patch.dict(",
          "126:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "127:     ):",
          "",
          "[Added Lines]",
          "117:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "139: def test_non_expansion(base_pillar_data):",
          "143:         with patch.object(",
          "144:             consul_pillar,",
          "145:             \"consul_fetch\",",
          "",
          "[Removed Lines]",
          "140:     with patch.dict(",
          "141:         consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value=({}))}",
          "142:     ):",
          "",
          "[Added Lines]",
          "130:     with patch.dict(consul_pillar.__salt__, {\"grains.get\": MagicMock(return_value={})}):",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_napalm.py||tests/pytests/unit/proxy/test_napalm.py": [
          "File: tests/pytests/unit/proxy/test_napalm.py -> tests/pytests/unit/proxy/test_napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "277: def test_fns():",
          "278:     ret = napalm_proxy.fns()",
          "282: def test_shutdown(test_opts):",
          "",
          "[Removed Lines]",
          "279:     assert \"details\" in ret.keys()",
          "",
          "[Added Lines]",
          "279:     assert \"details\" in ret",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_asam.py||tests/pytests/unit/runners/test_asam.py": [
          "File: tests/pytests/unit/runners/test_asam.py -> tests/pytests/unit/runners/test_asam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:         auth=(\"TheUsername\", \"ThePassword\"),",
          "45:         data={\"manual\": \"false\"},",
          "46:         verify=True,",
          "47:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:             \"Submit\": \"Yes\",",
          "70:         },",
          "71:         verify=True,",
          "72:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:         auth=(\"TheUsername\", \"ThePassword\"),",
          "89:         data={\"manual\": \"false\"},",
          "90:         verify=True,",
          "91:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:         timeout=120,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:         auth=(\"TheUsername\", \"ThePassword\"),",
          "108:         data={\"manual\": \"false\"},",
          "109:         verify=True,",
          "110:     )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:         timeout=120,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/vault/test_app_role_auth.py||tests/pytests/unit/runners/vault/test_app_role_auth.py": [
          "File: tests/pytests/unit/runners/vault/test_app_role_auth.py -> tests/pytests/unit/runners/vault/test_app_role_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:                 headers=ANY,",
          "74:                 json=ANY,",
          "75:                 verify=ANY,",
          "76:             ),",
          "78:         ]",
          "79:         mock.assert_has_calls(calls)",
          "",
          "[Removed Lines]",
          "77:             call(\"http://fake_url\", headers=ANY, json=ANY, verify=ANY),",
          "",
          "[Added Lines]",
          "76:                 timeout=120,",
          "77:             ),",
          "78:             call(",
          "79:                 \"http://fake_url\",",
          "80:                 headers=ANY,",
          "81:                 json=ANY,",
          "82:                 verify=ANY,",
          "83:                 timeout=120,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/vault/test_token_auth.py||tests/pytests/unit/runners/vault/test_token_auth.py": [
          "File: tests/pytests/unit/runners/vault/test_token_auth.py -> tests/pytests/unit/runners/vault/test_token_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         assert \"error\" not in result",
          "69:         assert \"token\" in result",
          "70:         assert result[\"token\"] == \"test\"",
          "73:         # Test uses",
          "74:         num_uses = 6",
          "",
          "[Removed Lines]",
          "71:         mock.assert_called_with(\"http://fake_url\", headers=ANY, json=ANY, verify=ANY)",
          "",
          "[Added Lines]",
          "71:         mock.assert_called_with(",
          "72:             \"http://fake_url\", headers=ANY, json=ANY, verify=ANY, timeout=120",
          "73:         )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:             },",
          "86:         }",
          "87:         mock.assert_called_with(",
          "89:         )",
          "91:         # Test ttl",
          "",
          "[Removed Lines]",
          "88:             \"http://fake_url\", headers=ANY, json=json_request, verify=ANY",
          "",
          "[Added Lines]",
          "90:             \"http://fake_url\",",
          "91:             headers=ANY,",
          "92:             json=json_request,",
          "93:             verify=ANY,",
          "94:             timeout=120,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "103:             },",
          "104:         }",
          "105:         mock.assert_called_with(",
          "107:         )",
          "109:     mock = _mock_json_response({}, status_code=403, reason=\"no reason\")",
          "",
          "[Removed Lines]",
          "106:             \"http://fake_url\", headers=ANY, json=json_request, verify=ANY",
          "",
          "[Added Lines]",
          "112:             \"http://fake_url\", headers=ANY, json=json_request, verify=ANY, timeout=120",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152:                 },",
          "153:                 json=ANY,",
          "154:                 verify=ANY,",
          "155:             )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:                 timeout=120,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/serializers/test_serializers.py||tests/pytests/unit/serializers/test_serializers.py": [
          "File: tests/pytests/unit/serializers/test_serializers.py -> tests/pytests/unit/serializers/test_serializers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "284:     sls_obj = convert(OrderedDict([(\"foo\", \"bar\"), (\"baz\", \"qux\")]))",
          "286:     # ensure that repr and str are yaml friendly",
          "290:     # ensure that repr and str are already quoted",
          "295: @pytest.mark.skipif(yamlex.available is False, reason=SKIP_MESSAGE.format(\"sls\"))",
          "",
          "[Removed Lines]",
          "287:     assert sls_obj.__str__() == \"{foo: bar, baz: qux}\"",
          "288:     assert sls_obj.__repr__() == \"{foo: bar, baz: qux}\"",
          "291:     assert sls_obj[\"foo\"].__str__() == '\"bar\"'",
          "292:     assert sls_obj[\"foo\"].__repr__() == '\"bar\"'",
          "",
          "[Added Lines]",
          "287:     assert str(sls_obj) == \"{foo: bar, baz: qux}\"",
          "288:     assert repr(sls_obj) == \"{foo: bar, baz: qux}\"",
          "291:     assert str(sls_obj[\"foo\"]) == '\"bar\"'",
          "292:     assert repr(sls_obj[\"foo\"]) == '\"bar\"'",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_compiler.py||tests/pytests/unit/state/test_state_compiler.py": [
          "File: tests/pytests/unit/state/test_state_compiler.py -> tests/pytests/unit/state/test_state_compiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import salt.utils.files",
          "12: import salt.utils.platform",
          "13: from salt.exceptions import CommandExecutionError",
          "15: from tests.support.mock import MagicMock, patch",
          "17: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "14: from salt.utils.odict import OrderedDict",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:     \"\"\"",
          "57:     with patch(\"salt.state.State._gather_pillar\"):",
          "58:         high_data = {",
          "60:                 [",
          "61:                     (",
          "62:                         \"pkg\",",
          "63:                         [",
          "65:                                 [",
          "66:                                     (",
          "67:                                         \"require\",",
          "68:                                         [",
          "70:                                                 [",
          "71:                                                     (",
          "72:                                                         \"file\",",
          "74:                                                             [(\"test1\", \"test\")]",
          "75:                                                         ),",
          "76:                                                     )",
          "",
          "[Removed Lines]",
          "59:             \"git\": OrderedDict(",
          "64:                             OrderedDict(",
          "69:                                             OrderedDict(",
          "73:                                                         OrderedDict(",
          "",
          "[Added Lines]",
          "58:             \"git\": salt.state.HashableOrderedDict(",
          "63:                             salt.state.HashableOrderedDict(",
          "68:                                             salt.state.HashableOrderedDict(",
          "72:                                                         salt.state.HashableOrderedDict(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:                 ]",
          "90:             )",
          "91:         }",
          "93:         state_obj = salt.state.State(minion_opts)",
          "94:         with pytest.raises(salt.exceptions.SaltRenderError):",
          "95:             state_obj.call_high(high_data)",
          "",
          "[Removed Lines]",
          "92:         minion_opts[\"pillar\"] = {\"git\": OrderedDict([(\"test1\", \"test\")])}",
          "",
          "[Added Lines]",
          "91:         minion_opts[\"pillar\"] = {",
          "92:             \"git\": salt.state.HashableOrderedDict([(\"test1\", \"test\")])",
          "93:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "720:     \"\"\"",
          "721:     with patch(\"salt.state.State._gather_pillar\"):",
          "722:         high_data = {",
          "724:                 [",
          "725:                     (",
          "726:                         \"test\",",
          "727:                         [",
          "730:                             ),",
          "731:                             \"succeed_with_changes\",",
          "732:                             {\"order\": 10000},",
          "",
          "[Removed Lines]",
          "723:             \"step_one\": OrderedDict(",
          "728:                             OrderedDict(",
          "729:                                 [(\"require\", [OrderedDict([(\"test\", \"step_two\")])])]",
          "",
          "[Added Lines]",
          "724:             \"step_one\": salt.state.HashableOrderedDict(",
          "729:                             salt.state.HashableOrderedDict(",
          "730:                                 [",
          "731:                                     (",
          "732:                                         \"require\",",
          "733:                                         [",
          "734:                                             salt.state.HashableOrderedDict(",
          "735:                                                 [(\"test\", \"step_two\")]",
          "736:                                             )",
          "737:                                         ],",
          "738:                                     )",
          "739:                                 ]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "764:                 \"__env__\": \"base\",",
          "765:                 \"__sls__\": \"test.disable_require_in\",",
          "766:             },",
          "768:                 [",
          "769:                     (",
          "770:                         \"test\",",
          "771:                         [",
          "773:                                 [",
          "774:                                     (",
          "775:                                         \"require_in\",",
          "777:                                     )",
          "778:                                 ]",
          "779:                             ),",
          "",
          "[Removed Lines]",
          "767:             \"step_two\": OrderedDict(",
          "772:                             OrderedDict(",
          "776:                                         [OrderedDict([(\"test\", \"step_one\")])],",
          "",
          "[Added Lines]",
          "777:             \"step_two\": salt.state.HashableOrderedDict(",
          "782:                             salt.state.HashableOrderedDict(",
          "786:                                         [",
          "787:                                             salt.state.HashableOrderedDict(",
          "788:                                                 [(\"test\", \"step_one\")]",
          "789:                                             )",
          "790:                                         ],",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "974:         \"__sls__\": \"test.62439\",",
          "975:         \"__env__\": \"base\",",
          "976:         \"__id__\": \"sl\",",
          "978:         \"order\": 10002,",
          "979:         \"aggregate\": True,",
          "980:         \"fun\": \"installed\",",
          "",
          "[Removed Lines]",
          "977:         \"require_in\": [OrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "[Added Lines]",
          "991:         \"require_in\": [salt.state.HashableOrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1000:             \"__env__\": \"base\",",
          "1001:             \"__id__\": \"figlet\",",
          "1002:             \"__agg__\": True,",
          "1004:             \"order\": 10001,",
          "1005:             \"aggregate\": True,",
          "1006:             \"fun\": \"installed\",",
          "",
          "[Removed Lines]",
          "1003:             \"require\": [OrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "[Added Lines]",
          "1017:             \"require\": [salt.state.HashableOrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1011:             \"__sls__\": \"test.62439\",",
          "1012:             \"__env__\": \"base\",",
          "1013:             \"__id__\": \"sl\",",
          "1015:             \"order\": 10002,",
          "1016:             \"aggregate\": True,",
          "1017:             \"fun\": \"installed\",",
          "",
          "[Removed Lines]",
          "1014:             \"require_in\": [OrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "[Added Lines]",
          "1028:             \"require_in\": [salt.state.HashableOrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1026:         \"__sls__\": \"test.62439\",",
          "1027:         \"__env__\": \"base\",",
          "1028:         \"__id__\": \"sl\",",
          "1030:         \"order\": 10002,",
          "1031:         \"fun\": \"installed\",",
          "1032:         \"__agg__\": True,",
          "",
          "[Removed Lines]",
          "1029:         \"require_in\": [OrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "[Added Lines]",
          "1043:         \"require_in\": [salt.state.HashableOrderedDict([(\"file\", \"/tmp/foo\")])],",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1045:             assert \"require_in\" in low_ret",
          "1047:             # Ensure all the requires from pkg states are in low",
          "1050:             # Ensure that the require requisite from the",
          "1051:             # figlet state doesn't find its way into this state",
          "",
          "[Removed Lines]",
          "1048:             assert low_ret[\"require_in\"] == [OrderedDict([(\"file\", \"/tmp/foo\")])]",
          "",
          "[Added Lines]",
          "1062:             assert low_ret[\"require_in\"] == [",
          "1063:                 salt.state.HashableOrderedDict([(\"file\", \"/tmp/foo\")])",
          "1064:             ]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1190:         \"__sls__\": \"test\",",
          "1191:         \"__env__\": \"base\",",
          "1192:         \"__id__\": \"nginx\",",
          "1194:         \"order\": 10000,",
          "1195:         \"fun\": \"installed\",",
          "1196:     }",
          "",
          "[Removed Lines]",
          "1193:         \"provider\": [OrderedDict([(\"cmd\", \"cmdmod\")])],",
          "",
          "[Added Lines]",
          "1209:         \"provider\": [salt.state.HashableOrderedDict([(\"cmd\", \"cmdmod\")])],",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1215:         \"__sls__\": \"test\",",
          "1216:         \"__env__\": \"base\",",
          "1217:         \"__id__\": \"nginx\",",
          "1219:         \"order\": 10000,",
          "1220:         \"fun\": \"installed\",",
          "1221:     }",
          "",
          "[Removed Lines]",
          "1218:         \"provider\": OrderedDict([(\"cmd\", \"test\")]),",
          "",
          "[Added Lines]",
          "1234:         \"provider\": salt.state.HashableOrderedDict([(\"cmd\", \"test\")]),",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_host.py||tests/pytests/unit/states/test_host.py": [
          "File: tests/pytests/unit/states/test_host.py -> tests/pytests/unit/states/test_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:     ):",
          "260:         ret = host.present(hostname, ip_str)",
          "261:         assert ret[\"result\"] is True",
          "267:         assert ret[\"changes\"] == {}, ret[\"changes\"]",
          "268:         assert add_host.mock_calls == [], add_host.mock_calls",
          "269:         assert rm_host.mock_calls == [], rm_host.mock_calls",
          "",
          "[Removed Lines]",
          "262:         assert (",
          "263:             ret[\"comment\"]",
          "264:             == \"Host {} ({}) already present\".format(hostname, ip_str)",
          "265:             in ret[\"comment\"]",
          "266:         )",
          "",
          "[Added Lines]",
          "262:         assert \"Host {} ({}) already present\".format(hostname, ip_str) in ret[\"comment\"]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_zeromq.py||tests/pytests/unit/transport/test_zeromq.py": [
          "File: tests/pytests/unit/transport/test_zeromq.py -> tests/pytests/unit/transport/test_zeromq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "616:     if HAS_M2:",
          "617:         aes = key.private_decrypt(ret[\"key\"], RSA.pkcs1_oaep_padding)",
          "618:     else:",
          "620:         aes = cipher.decrypt(ret[\"key\"])",
          "621:     pcrypt = salt.crypt.Crypticle(opts, aes)",
          "622:     signed_msg = pcrypt.loads(ret[dictkey])",
          "",
          "[Removed Lines]",
          "619:         cipher = PKCS1_OAEP.new(key)",
          "",
          "[Added Lines]",
          "619:         cipher = PKCS1_OAEP.new(key)  # pylint: disable=used-before-assignment",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1541:     try:",
          "1542:         assert client._closing is False",
          "1543:         with pytest.warns(salt.transport.base.TransportWarning):",
          "1545:     finally:",
          "1546:         client.close()",
          "",
          "[Removed Lines]",
          "1544:             client.__del__()",
          "",
          "[Added Lines]",
          "1544:             client.__del__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1557:     try:",
          "1558:         assert client._closing is False",
          "1559:         with pytest.warns(salt.transport.base.TransportWarning):",
          "1561:     finally:",
          "1562:         client.close()",
          "",
          "[Removed Lines]",
          "1560:             client.__del__()",
          "",
          "[Added Lines]",
          "1560:             client.__del__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_cloud.py||tests/pytests/unit/utils/test_cloud.py": [
          "File: tests/pytests/unit/utils/test_cloud.py -> tests/pytests/unit/utils/test_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:             def set_password(",
          "61:                 self, servicename, username, password",
          "63:                 self.__storage.setdefault(servicename, {}).update({username: password})",
          "64:                 return 0",
          "66:             def get_password(",
          "67:                 self, servicename, username",
          "69:                 return self.__storage.setdefault(servicename, {}).get(username)",
          "71:             def delete_password(",
          "72:                 self, servicename, username",
          "74:                 self.__storage.setdefault(servicename, {}).pop(username, None)",
          "75:                 return 0",
          "",
          "[Removed Lines]",
          "62:             ):  # pylint: disable=arguments-differ",
          "68:             ):  # pylint: disable=arguments-differ",
          "73:             ):  # pylint: disable=arguments-differ",
          "",
          "[Added Lines]",
          "62:             ):  # pylint: disable=arguments-differ,arguments-renamed",
          "68:             ):  # pylint: disable=arguments-differ,arguments-renamed",
          "73:             ):  # pylint: disable=arguments-differ,arguments-renamed",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:             \"MermaidMan\",",
          "250:             \"BarnicleBoy\",",
          "251:         )",
          "252:         mock_client.return_value.cleanup = MagicMock(side_effect=CannotDelete())",
          "254:         cloud.run_psexec_command(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:         # pylint: disable=no-value-for-parameter",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "475:     ):",
          "477:         try:",
          "479:         except ImportError:",
          "480:             raise pytest.skip('The \"winrm\" python module is not installed in this env.')",
          "481:         else:",
          "",
          "[Removed Lines]",
          "478:             import winrm",
          "",
          "[Added Lines]",
          "479:             import winrm  # pylint: disable=unused-import",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_data.py||tests/pytests/unit/utils/test_data.py": [
          "File: tests/pytests/unit/utils/test_data.py -> tests/pytests/unit/utils/test_data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: log = logging.getLogger(__name__)",
          "21: @pytest.fixture",
          "",
          "[Removed Lines]",
          "17: _b = lambda x: x.encode(\"utf-8\")",
          "18: _s = lambda x: salt.utils.stringutils.to_str(x, normalize=True)",
          "",
          "[Added Lines]",
          "18: def _b(x):",
          "19:     return x.encode(\"utf-8\")",
          "22: def _s(x):",
          "23:     return salt.utils.stringutils.to_str(x, normalize=True)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566:         None,",
          "567:         [True, _b(get_EGGS), get_BYTES],",
          "568:     ]",
          "570:         123,",
          "571:         _b(\"hello\"),",
          "572:         _b(\"world\"),",
          "",
          "[Removed Lines]",
          "569:     expected[11][_b(\"subdict\")][_b(\"tuple\")] = [",
          "",
          "[Added Lines]",
          "574:     expected[11][_b(\"subdict\")][  # pylint: disable=unsupported-assignment-operation",
          "575:         _b(\"tuple\")",
          "576:     ] = [",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_vault.py||tests/pytests/unit/utils/test_vault.py": [
          "File: tests/pytests/unit/utils/test_vault.py -> tests/pytests/unit/utils/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:                 \"http://127.0.0.1:8200/key\",",
          "302:                 headers=expected_headers,",
          "303:                 verify=ANY,",
          "304:             )",
          "305:             assert vault_return.json() == json_success",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304:                 timeout=ANY,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "324:                     \"http://127.0.0.1:8200/key\",",
          "325:                     headers=expected_headers,",
          "326:                     verify=ANY,",
          "327:                 )",
          "328:                 assert vault_return.json() == json_denied",
          "329:                 mock_del_cache.assert_called()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:                     timeout=ANY,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "358:                         \"http://127.0.0.1:8200/key\",",
          "359:                         headers=expected_headers,",
          "360:                         verify=ANY,",
          "361:                     )",
          "362:                     mock_write_cache.assert_called_with(expected_cache_write)",
          "363:                     assert vault_return.json() == json_success",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "363:                         timeout=ANY,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "381:                         \"http://127.0.0.1:8200/key\",",
          "382:                         headers=expected_headers,",
          "383:                         verify=ANY,",
          "384:                     )",
          "385:                     mock_del_cache.assert_called()",
          "386:                     assert vault_return.json() == json_success",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "387:                         timeout=ANY,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "404:                         \"http://127.0.0.1:8200/key\",",
          "405:                         headers=expected_headers,",
          "406:                         verify=ANY,",
          "407:                     )",
          "408:                     assert (",
          "409:                         not mock_del_cache.called",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "411:                         timeout=ANY,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "508:                     \"http://127.0.0.1:8200/key\",",
          "509:                     headers=expected_headers,",
          "510:                     verify=ANY,",
          "511:                 )",
          "512:                 assert vault_return.json() == json_success",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:                     timeout=ANY,",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_vt.py||tests/pytests/unit/utils/test_vt.py": [
          "File: tests/pytests/unit/utils/test_vt.py -> tests/pytests/unit/utils/test_vt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:         stream_stderr=False,",
          "52:     )",
          "53:     with caplog.at_level(logging.DEBUG):",
          "55:     assert password not in caplog.text",
          "56:     assert \"******\" in caplog.text",
          "",
          "[Removed Lines]",
          "54:         ret = term.recv()",
          "",
          "[Added Lines]",
          "54:         term.recv()",
          "",
          "---------------"
        ],
        "tests/pytests/unit/wheel/test_file_roots.py||tests/pytests/unit/wheel/test_file_roots.py": [
          "File: tests/pytests/unit/wheel/test_file_roots.py -> tests/pytests/unit/wheel/test_file_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:             full_path.write_bytes(content)",
          "18:         else:",
          "19:             content = str(full_path)",
          "23: @pytest.fixture",
          "",
          "[Removed Lines]",
          "20:             full_path.write_text(content)",
          "",
          "[Added Lines]",
          "20:             full_path.write_text(content, encoding=\"utf-8\")",
          "",
          "---------------"
        ],
        "tests/salt-tcpdump.py||tests/salt-tcpdump.py": [
          "File: tests/salt-tcpdump.py -> tests/salt-tcpdump.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: \"\"\"",
          "35: # pylint: disable=resource-leakage",
          "38: import socket",
          "39: import sys",
          "40: import time",
          "",
          "[Removed Lines]",
          "37: import argparse  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "37: import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "125:             packet_data = {\"ip\": {}, \"tcp\": {}}",
          "129:             eth_length, eth_protocol = self.parse_ether(packet)",
          "",
          "[Removed Lines]",
          "127:             (header, packet) = cap.next()  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "127:             (header, packet) = cap.next()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:         \"\"\"",
          "233:         Read the table of tcp connections & remove header",
          "234:         \"\"\"",
          "236:             content = tcp_f.readlines()",
          "237:             content.pop(0)",
          "238:         return content",
          "",
          "[Removed Lines]",
          "235:         with open(\"/proc/net/tcp\") as tcp_f:",
          "",
          "[Added Lines]",
          "235:         with open(\"/proc/net/tcp\", encoding=\"utf-8\") as tcp_f:",
          "",
          "---------------"
        ],
        "tests/saltsh.py||tests/saltsh.py": [
          "File: tests/saltsh.py -> tests/saltsh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env python",
          "3: Welcome to the Salt repl which exposes the execution environment of a minion in",
          "4: a pre-configured Python shell",
          "",
          "[Removed Lines]",
          "2: '''\\",
          "",
          "[Added Lines]",
          "2: '''",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:         __pillar__ = {}",
          "93:     # pylint: disable=invalid-name,unused-variable,possibly-unused-variable",
          "97:     # pylint: enable=invalid-name,unused-variable,possibly-unused-variable",
          "99:     return locals()",
          "",
          "[Removed Lines]",
          "94:     JINJA = lambda x, **y: jinja2.Template(x).render(",
          "95:         grains=__grains__, salt=__salt__, opts=__opts__, pillar=__pillar__, **y",
          "96:     )",
          "",
          "[Added Lines]",
          "94:     def JINJA(x, **y):",
          "95:         return jinja2.Template(x).render(",
          "96:             grains=__grains__, salt=__salt__, opts=__opts__, pillar=__pillar__, **y",
          "97:         )",
          "",
          "---------------"
        ],
        "tests/support/copyartifacts.py||tests/support/copyartifacts.py": [
          "File: tests/support/copyartifacts.py -> tests/support/copyartifacts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: Script for copying back xml junit files from tests",
          "3: \"\"\"",
          "6: import os",
          "7: import subprocess",
          "",
          "[Removed Lines]",
          "5: import argparse  # pylint: disable=minimum-python-version",
          "",
          "[Added Lines]",
          "5: import argparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:         self.sftpclient = paramiko.SFTPClient.from_transport(self.transport)",
          "21:     def setup_transport(self):",
          "23:         config = salt.utils.yaml.safe_load(",
          "24:             subprocess.check_output(",
          "25:                 [\"bundle\", \"exec\", \"kitchen\", \"diagnose\", self.instance]",
          "26:             )",
          "27:         )",
          "29:         state = config[\"instances\"][self.instance][\"state_file\"]",
          "30:         tport = config[\"instances\"][self.instance][\"transport\"]",
          "31:         transport = paramiko.Transport(",
          "",
          "[Removed Lines]",
          "22:         # pylint: disable=minimum-python-version",
          "28:         # pylint: enable=minimum-python-version",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:         Make sure all xml files are readable by the world so that anyone can grab them",
          "45:         \"\"\"",
          "46:         for remote, _ in self.artifacts:",
          "51:     def download(self):",
          "52:         self._set_permissions()",
          "",
          "[Removed Lines]",
          "47:             self.transport.open_session().exec_command(",
          "48:                 \"sudo chmod -R +r {}\".format(remote)",
          "49:             )",
          "",
          "[Added Lines]",
          "46:             self.transport.open_session().exec_command(f\"sudo chmod -R +r {remote}\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "61:                 self._do_download(remote, os.path.join(local, os.path.basename(remote)))",
          "63:     def _do_download(self, remote, local):",
          "65:         try:",
          "66:             self.sftpclient.get(remote, local)",
          "67:         except OSError:",
          "71: if __name__ == \"__main__\":",
          "",
          "[Removed Lines]",
          "64:         print(\"Copying from {} to {}\".format(remote, local))",
          "68:             print(\"Failed to copy: {}\".format(remote))",
          "",
          "[Added Lines]",
          "61:         print(f\"Copying from {remote} to {local}\")",
          "65:             print(f\"Failed to copy: {remote}\")",
          "",
          "---------------"
        ],
        "tests/support/generate-names-file-from-failed-test-reports.py||tests/support/generate-names-file-from-failed-test-reports.py": [
          "File: tests/support/generate-names-file-from-failed-test-reports.py -> tests/support/generate-names-file-from-failed-test-reports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     failures = set()",
          "44:     for fname in sorted(glob.glob(os.path.join(options.reports_dir, \"*.xml\"))):",
          "45:         total_xml_reports += 1",
          "47:             test_suite, test_result = xunitparser.parse(rfh)",
          "48:             if not test_result.errors and not test_result.failures:",
          "49:                 continue",
          "",
          "[Removed Lines]",
          "46:         with open(fname) as rfh:",
          "",
          "[Added Lines]",
          "46:         with open(fname, encoding=\"utf-8\") as rfh:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:     if not total_xml_reports:",
          "55:         parser.exit(status=1, message=\"No JUnit XML files were parsed\")",
          "58:         wfh.write(os.linesep.join(sorted(failures)))",
          "60:     parser.exit(status=0)",
          "",
          "[Removed Lines]",
          "57:     with open(options.output_file, \"w\") as wfh:",
          "",
          "[Added Lines]",
          "57:     with open(options.output_file, \"w\", encoding=\"utf-8\") as wfh:",
          "",
          "---------------"
        ],
        "tests/support/pkg.py||tests/support/pkg.py": [
          "File: tests/support/pkg.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:                             self.install_dir / \"salt-minion.exe\"",
          "257:                         ).exists() and not self.relenv:",
          "258:                             log.debug(",
          "260:                             )",
          "261:                             (self.install_dir / \"salt-minion.exe\").unlink()",
          "",
          "[Removed Lines]",
          "259:                                 f\"Removing {(self.install_dir / 'salt-minion.exe')}\"",
          "",
          "[Added Lines]",
          "259:                                 \"Removing %s\", self.install_dir / \"salt-minion.exe\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "640:                 Pin: origin \"repo.saltproject.io\"",
          "641:                 Pin-Priority: 1001",
          "642:                 \"\"\"",
          "644:                 )",
          "645:                 cmd.append(\"--allow-downgrades\")",
          "646:             env = os.environ.copy()",
          "",
          "[Removed Lines]",
          "643:                     )",
          "",
          "[Added Lines]",
          "643:                     ),",
          "644:                     encoding=\"utf-8\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1487: @pytest.helpers.register",
          "1488: def download_file(url, dest, auth=None):",
          "1489:     # NOTE the stream=True parameter below",
          "1491:         r.raise_for_status()",
          "1492:         with salt.utils.files.fopen(dest, \"wb\") as f:",
          "1493:             for chunk in r.iter_content(chunk_size=8192):",
          "",
          "[Removed Lines]",
          "1490:     with requests.get(url, stream=True, auth=auth) as r:",
          "",
          "[Added Lines]",
          "1491:     with requests.get(url, stream=True, auth=auth, timeout=60) as r:",
          "",
          "---------------"
        ],
        "tests/support/pytest/etcd.py||tests/support/pytest/etcd.py": [
          "File: tests/support/pytest/etcd.py -> tests/support/pytest/etcd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     sleeptime = 1",
          "60:     while time.time() <= timeout_at:",
          "61:         try:",
          "63:             try:",
          "64:                 version = response.json()",
          "65:                 if \"etcdserver\" in version:",
          "",
          "[Removed Lines]",
          "62:             response = requests.get(\"http://localhost:{}/version\".format(etcd_port))",
          "",
          "[Added Lines]",
          "62:             response = requests.get(",
          "63:                 \"http://localhost:{}/version\".format(etcd_port), timeout=60",
          "64:             )",
          "",
          "---------------"
        ],
        "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py": [
          "File: tests/support/pytest/helpers.py -> tests/support/pytest/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "706:             log.info(\"The '%s' file is not avilable\", kernel_entropy_file)",
          "707:             return",
          "710:         log.info(\"Available Entropy: %s\", self.current_entropy)",
          "712:         if not kernel_poolsize_file.exists():",
          "713:             log.info(\"The '%s' file is not avilable\", kernel_poolsize_file)",
          "714:         else:",
          "716:             log.info(\"Entropy Poolsize: %s\", self.current_poolsize)",
          "717:             # Account for smaller poolsizes using BLAKE2s",
          "718:             if self.current_poolsize == 256:",
          "",
          "[Removed Lines]",
          "709:         self.current_entropy = int(kernel_entropy_file.read_text().strip())",
          "715:             self.current_poolsize = int(kernel_poolsize_file.read_text().strip())",
          "",
          "[Added Lines]",
          "709:         self.current_entropy = int(",
          "710:             kernel_entropy_file.read_text(encoding=\"utf-8\").strip()",
          "711:         )",
          "717:             self.current_poolsize = int(",
          "718:                 kernel_poolsize_file.read_text(encoding=\"utf-8\").strip()",
          "719:             )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "738:                         raise pytest.skip.Exception(message, _use_item_location=True)",
          "739:                     raise pytest.fail(message)",
          "740:                 subprocess.run([rngd, \"-r\", \"/dev/urandom\"], shell=False, check=True)",
          "742:                 log.info(\"Available Entropy: %s\", self.current_entropy)",
          "743:                 if self.current_entropy >= self.minimum_entropy:",
          "744:                     break",
          "",
          "[Removed Lines]",
          "741:                 self.current_entropy = int(kernel_entropy_file.read_text().strip())",
          "",
          "[Added Lines]",
          "745:                 self.current_entropy = int(",
          "746:                     kernel_entropy_file.read_text(encoding=\"utf-8\").strip()",
          "747:                 )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "773:                     check=True,",
          "774:                 )",
          "775:                 os.unlink(target_file.name)",
          "777:                 log.info(\"Available Entropy: %s\", self.current_entropy)",
          "778:                 if self.current_entropy >= self.minimum_entropy:",
          "779:                     break",
          "",
          "[Removed Lines]",
          "776:                 self.current_entropy = int(kernel_entropy_file.read_text().strip())",
          "",
          "[Added Lines]",
          "782:                 self.current_entropy = int(",
          "783:                     kernel_entropy_file.read_text(encoding=\"utf-8\").strip()",
          "784:                 )",
          "",
          "---------------"
        ],
        "tests/support/unit.py||tests/support/unit.py": [
          "File: tests/support/unit.py -> tests/support/unit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "159: class TestCase(_TestCase):",
          "162:     ##   Commented out because it may be causing tests to hang",
          "163:     ##   at the end of the run",
          "164:     #",
          "",
          "[Removed Lines]",
          "161:     # pylint: disable=expected-an-indented-block-comment,too-many-leading-hastag-for-block-comment",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:     #            print('\\nWARNING: A misbehaving test has modified the working directory!\\nThe test suite has reset the working directory '",
          "179:     #                    'on tearDown() to {0}\\n'.format(cls._cwd))",
          "180:     #            cls._chdir_counter += 1",
          "183:     def run(self, result=None):",
          "184:         self._prerun_instance_attributes = dir(self)",
          "",
          "[Removed Lines]",
          "181:     # pylint: enable=expected-an-indented-block-comment,too-many-leading-hastag-for-block-comment",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225:                             found_zombies += 1",
          "226:                 except Exception:  # pylint: disable=broad-except",
          "227:                     pass",
          "229:             proc_info += \"] {short_desc}\".format(short_desc=desc if desc else \"\")",
          "230:             return proc_info",
          "231:         else:",
          "",
          "[Removed Lines]",
          "228:                 proc_info += \"|Z:{}\".format(found_zombies)",
          "",
          "[Added Lines]",
          "226:                 proc_info += f\"|Z:{found_zombies}\"",
          "",
          "---------------"
        ],
        "tests/support/win_installer.py||tests/support/win_installer.py": [
          "File: tests/support/win_installer.py -> tests/support/win_installer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     Download an installer and verify its contents.",
          "30:     \"\"\"",
          "31:     md5 = \"{}.md5\".format(name)",
          "34:     if resp.status_code != 200:",
          "35:         raise Exception(\"Unable to fetch installer md5\")",
          "36:     installer_md5 = resp.text.strip().split()[0].lower()",
          "38:     if resp.status_code != 200:",
          "39:         raise Exception(\"Unable to fetch installer\")",
          "40:     md5hsh = hashlib.md5()",
          "",
          "[Removed Lines]",
          "32:     url = lambda x: \"{}/{}\".format(repo, x)",
          "33:     resp = requests.get(url(md5))",
          "37:     resp = requests.get(url(name), stream=True)",
          "",
          "[Added Lines]",
          "33:     def url(x):",
          "34:         return \"{}/{}\".format(repo, x)",
          "36:     resp = requests.get(url(md5), timeout=60)",
          "40:     resp = requests.get(url(name), stream=True, timeout=60)",
          "",
          "---------------"
        ],
        "tests/unit/ext/test_ipaddress.py||tests/unit/ext/test_ipaddress.py": [
          "File: tests/unit/ext/test_ipaddress.py -> tests/unit/ext/test_ipaddress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: \"\"\"Unittest for ipaddress module.\"\"\"",
          "18: import contextlib",
          "19: import functools",
          "",
          "[Removed Lines]",
          "16: # pylint: disable=string-substitution-usage-error,pointless-statement,abstract-method,cell-var-from-loop",
          "",
          "[Added Lines]",
          "16: # pylint: disable=pointless-statement,abstract-method,cell-var-from-loop,unnecessary-dunder-call",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "313:     def test_invalid_characters(self):",
          "314:         def assertBadOctet(addr, octet):",
          "316:             with self.assertAddressError(re.escape(msg)):",
          "317:                 ipaddress.IPv4Address(addr)",
          "",
          "[Removed Lines]",
          "315:             msg = \"Only decimal digits permitted in {!r} in {!r}\".format(octet, addr)",
          "",
          "[Added Lines]",
          "315:             msg = f\"Only decimal digits permitted in {octet!r} in {addr!r}\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "657:         def assertBadNetmask(addr, netmask):",
          "658:             msg = \"%r is not a valid netmask\" % netmask",
          "659:             with self.assertNetmaskError(re.escape(msg)):",
          "662:         assertBadNetmask(\"1.2.3.4\", \"\")",
          "663:         assertBadNetmask(\"1.2.3.4\", \"-1\")",
          "",
          "[Removed Lines]",
          "660:                 self.factory(\"{}/{}\".format(addr, netmask))",
          "",
          "[Added Lines]",
          "660:                 self.factory(f\"{addr}/{netmask}\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "827:         def assertBadNetmask(addr, netmask):",
          "828:             msg = \"%r is not a valid netmask\" % netmask",
          "829:             with self.assertNetmaskError(re.escape(msg)):",
          "832:         assertBadNetmask(\"::1\", \"\")",
          "833:         assertBadNetmask(\"::1\", \"::1\")",
          "",
          "[Removed Lines]",
          "830:                 self.factory(\"{}/{}\".format(addr, netmask))",
          "",
          "[Added Lines]",
          "830:                 self.factory(f\"{addr}/{netmask}\")",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_elasticsearch.py||tests/unit/modules/test_elasticsearch.py": [
          "File: tests/unit/modules/test_elasticsearch.py -> tests/unit/modules/test_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: from tests.support.mock import MagicMock, patch",
          "10: from tests.support.unit import TestCase",
          "22:     reason=\"Install elasticsearch-py before running Elasticsearch unit tests.\",",
          "23: )",
          "24: class ElasticsearchTestCase(TestCase):",
          "25:     \"\"\"",
          "26:     Test cases for salt.modules.elasticsearch",
          "",
          "[Removed Lines]",
          "12: # Import elasticsearch exceptions",
          "13: NO_ELASTIC = False",
          "14: try:",
          "15:     from elasticsearch import NotFoundError, TransportError",
          "16: except Exception:  # pylint: disable=broad-except",
          "17:     NO_ELASTIC = True",
          "20: @pytest.mark.skipif(",
          "21:     NO_ELASTIC,",
          "",
          "[Added Lines]",
          "12: _es_module = pytest.importorskip(",
          "13:     \"elasticsearch\",",
          "16: NotFoundError = _es_module.NotFoundError",
          "17: TransportError = _es_module.TransportError",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_sysmod.py||tests/unit/modules/test_sysmod.py": [
          "File: tests/unit/modules/test_sysmod.py -> tests/unit/modules/test_sysmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:             cls.salt_dunder[func] = MockDocstringable(docstring)",
          "114:             cls._docstrings[func] = docstring",
          "117:             cls._statedocstrings[func] = docstring",
          "118:             cls._statedocstrings[module] = \"docstring for {}\".format(module)",
          "122:             docstring = \"docstring for {}\".format(func)",
          "123:             mock = MockDocstringable(docstring)",
          "125:             Mockstate.State.states[func] = mock",
          "127:         cls._modules = sorted(list(cls._modules))",
          "",
          "[Removed Lines]",
          "116:             module = func.split(\".\")[0]",
          "120:             cls._modules.add(func.split(\".\")[0])",
          "124:             mock.set_module_docstring(\"docstring for {}\".format(func.split(\".\")[0]))",
          "",
          "[Added Lines]",
          "116:             module = func.split(\".\", maxsplit=1)[0]",
          "120:             cls._modules.add(func.split(\".\", maxsplit=1)[0])",
          "124:             mock.set_module_docstring(",
          "125:                 \"docstring for {}\".format(func.split(\".\", maxsplit=1)[0])",
          "126:             )",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_zcbuildout.py||tests/unit/modules/test_zcbuildout.py": [
          "File: tests/unit/modules/test_zcbuildout.py -> tests/unit/modules/test_zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:     def setUp(self):",
          "117:         if salt.utils.platform.is_darwin():",
          "118:             self.patched_environ = patched_environ(__cleanup__=[\"__PYVENV_LAUNCHER__\"])",
          "120:             self.addCleanup(self.patched_environ.__exit__)",
          "122:         super().setUp()",
          "",
          "[Removed Lines]",
          "119:             self.patched_environ.__enter__()",
          "",
          "[Added Lines]",
          "119:             self.patched_environ.__enter__()  # pylint: disable=unnecessary-dunder-call",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "490:         out = ret[\"out\"]",
          "491:         comment = ret[\"comment\"]",
          "492:         self.assertTrue(ret[\"status\"])",
          "495:         self.assertTrue(\"{} bootstrap.py\".format(self.py_st) in comment)",
          "496:         self.assertTrue(\"buildout -c buildout.cfg\" in comment)",
          "497:         ret = buildout.buildout(",
          "",
          "[Removed Lines]",
          "493:         self.assertTrue(\"Creating directory\" in out)",
          "494:         self.assertTrue(\"Installing a.\" in out)",
          "",
          "[Added Lines]",
          "493:         self.assertIn(\"Creating directory\", out)",
          "494:         self.assertIn(\"Installing a.\", out)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "500:         outlog = ret[\"outlog\"]",
          "501:         out = ret[\"out\"]",
          "502:         comment = ret[\"comment\"]",
          "507:         ret = buildout.buildout(",
          "508:             b_dir, parts=[\"a\", \"b\", \"c\"], buildout_ver=2, newest=True, python=self.py_st",
          "509:         )",
          "510:         outlog = ret[\"outlog\"]",
          "511:         out = ret[\"out\"]",
          "512:         comment = ret[\"comment\"]",
          "516: # TODO: Is this test even still needed?",
          "",
          "[Removed Lines]",
          "503:         self.assertTrue(\"Installing single part: a\" in outlog)",
          "504:         self.assertTrue(\"buildout -c buildout.cfg -N install a\" in comment)",
          "505:         self.assertTrue(\"Installing b.\" in out)",
          "506:         self.assertTrue(\"Installing c.\" in out)",
          "513:         self.assertTrue(\"buildout -c buildout.cfg -n install a\" in comment)",
          "",
          "[Added Lines]",
          "503:         self.assertIn(\"Installing single part: a\", outlog)",
          "504:         self.assertIn(\"buildout -c buildout.cfg -N install a\", comment)",
          "505:         self.assertIn(\"Installing b.\", out)",
          "506:         self.assertIn(\"Installing c.\", out)",
          "513:         self.assertIn(\"buildout -c buildout.cfg -n install a\", comment)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "537:                 out = ret[\"out\"].decode(\"utf-8\")",
          "539:         for out in [\"\u00e0\u00e9\", \"\u00e7\u00e7\u00e0\u00e9\"]:",
          "543:     def test_setup(self):",
          "544:         buildout.LOG.clear()",
          "",
          "[Removed Lines]",
          "540:             self.assertTrue(out in uretm[\"logs_by_level\"][\"info\"])",
          "541:             self.assertTrue(out in uretm[\"outlog_by_level\"])",
          "",
          "[Added Lines]",
          "540:             self.assertIn(out, uretm[\"logs_by_level\"][\"info\"])",
          "541:             self.assertIn(out, uretm[\"outlog_by_level\"])",
          "",
          "---------------"
        ],
        "tests/unit/states/test_loop.py||tests/unit/states/test_loop.py": [
          "File: tests/unit/states/test_loop.py -> tests/unit/states/test_loop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:         \"\"\"",
          "295:         with patch.dict(",
          "296:             salt.states.loop.__salt__,  # pylint: disable=no-member",
          "300:         ):",
          "301:             self.assertDictEqual(",
          "302:                 salt.states.loop.until(",
          "",
          "[Removed Lines]",
          "297:             {",
          "298:                 \"foo.bar\": MagicMock(side_effect=range(1, 7))",
          "299:             },  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "297:             {\"foo.bar\": MagicMock(side_effect=range(1, 7))},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "313:         with patch.dict(",
          "314:             salt.states.loop.__salt__,  # pylint: disable=no-member",
          "318:         ):",
          "319:             self.assertDictEqual(",
          "320:                 salt.states.loop.until_no_eval(",
          "",
          "[Removed Lines]",
          "315:             {",
          "316:                 \"foo.bar\": MagicMock(side_effect=range(1, 7))",
          "317:             },  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "313:             {\"foo.bar\": MagicMock(side_effect=range(1, 7))},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "334:         \"\"\"",
          "335:         with patch.dict(",
          "336:             salt.states.loop.__salt__,  # pylint: disable=no-member",
          "340:         ):",
          "341:             self.assertDictEqual(",
          "342:                 salt.states.loop.until(",
          "",
          "[Removed Lines]",
          "337:             {",
          "338:                 \"foo.bar\": MagicMock(side_effect=range(1, 7))",
          "339:             },  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "333:             {\"foo.bar\": MagicMock(side_effect=range(1, 7))},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "354:         # returning a lower number of attempts (because it's slower).",
          "355:         with patch.dict(",
          "356:             salt.states.loop.__salt__,  # pylint: disable=no-member",
          "360:         ):",
          "361:             self.assertDictEqual(",
          "362:                 salt.states.loop.until_no_eval(",
          "",
          "[Removed Lines]",
          "357:             {",
          "358:                 \"foo.bar\": MagicMock(side_effect=range(1, 7))",
          "359:             },  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "351:             {\"foo.bar\": MagicMock(side_effect=range(1, 7))},",
          "",
          "---------------"
        ],
        "tests/unit/test_pillar.py||tests/unit/test_pillar.py": [
          "File: tests/unit/test_pillar.py -> tests/unit/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:             self.list_states = lambda *x, **y: list_states",
          "38:     # pylint: disable=unused-argument,no-method-argument,method-hidden",
          "40:         raise NotImplementedError()",
          "43:         raise NotImplementedError()",
          "46:         raise NotImplementedError()",
          "48:     # pylint: enable=unused-argument,no-method-argument,method-hidden",
          "",
          "[Removed Lines]",
          "39:     def cache_file(*args, **kwargs):",
          "42:     def get_state(*args, **kwargs):",
          "45:     def list_states(*args, **kwargs):",
          "",
          "[Added Lines]",
          "39:     def cache_file(self, *args, **kwargs):",
          "42:     def get_state(self, *args, **kwargs):",
          "45:     def list_states(self, *args, **kwargs):",
          "",
          "---------------"
        ],
        "tests/unit/test_zypp_plugins.py||tests/unit/test_zypp_plugins.py": [
          "File: tests/unit/test_zypp_plugins.py -> tests/unit/test_zypp_plugins.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: \"\"\"",
          "2:     :codeauthor: Bo Maryniuk <bo@suse.de>",
          "3: \"\"\"",
          "5: import os",
          "7: import pytest",
          "",
          "[Removed Lines]",
          "4: import imp",
          "",
          "[Added Lines]",
          "4: import imp  # pylint: disable=deprecated-module",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_configparser.py||tests/unit/utils/test_configparser.py": [
          "File: tests/unit/utils/test_configparser.py -> tests/unit/utils/test_configparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:             self.conf.write(fp_)",
          "180:         # Confirm that the new file was written correctly",
          "181:         expected = self.fix_indent(ORIG_CONFIG)",
          "185:         self.assertEqual(self.get_lines(self.new_config), expected)",
          "187:     def test_remove_option(self):",
          "",
          "[Removed Lines]",
          "182:         # pylint: disable=string-substitution-usage-error",
          "183:         expected.insert(6, \"\\tfetch = %s\" % new_refspec)",
          "184:         # pylint: enable=string-substitution-usage-error",
          "",
          "[Added Lines]",
          "182:         expected.insert(6, f\"\\tfetch = {new_refspec}\")",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_context.py||tests/unit/utils/test_context.py": [
          "File: tests/unit/utils/test_context.py -> tests/unit/utils/test_context.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:         wait_iterator = salt.ext.tornado.gen.WaitIterator(*futures)",
          "104:         while not wait_iterator.done():",
          "106:             self.assertEqual(r[0], r[1])  # verify that the global value remails",
          "107:             self.assertEqual(r[2], r[3])  # verify that the override sticks locally",
          "108:             self.assertEqual(",
          "",
          "[Removed Lines]",
          "105:             r = yield wait_iterator.next()  # pylint: disable=incompatible-py3-code",
          "",
          "[Added Lines]",
          "105:             r = yield wait_iterator.next()",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dns.py||tests/unit/utils/test_dns.py": [
          "File: tests/unit/utils/test_dns.py -> tests/unit/utils/test_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:         :param secure: delta cmd.run_all output for secured RESULTS",
          "260:         \"\"\"",
          "261:         # wrong",
          "264:                 self.assertEqual(lookup_cb(\"mockq\", \"A\"), False)",
          "266:         # empty response",
          "",
          "[Removed Lines]",
          "262:         for wrong in wrong:",
          "263:             with self._mock_cmd_ret(wrong):",
          "",
          "[Added Lines]",
          "262:         for _wrong in wrong:",
          "263:             with self._mock_cmd_ret(_wrong):",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_systemd.py||tests/unit/utils/test_systemd.py": [
          "File: tests/unit/utils/test_systemd.py -> tests/unit/utils/test_systemd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:             Raised by DBUS, e.g. when a PID does not belong to a service",
          "352:             \"\"\"",
          "356:         dbus_mock = Mock()",
          "357:         dbus_mock.DBusException = DBusException()",
          "358:         dbus_mock.GetUnitByPID = Mock(site_effect=dbus_mock.DBusException)",
          "",
          "[Removed Lines]",
          "354:             ...",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_thin.py||tests/unit/utils/test_thin.py": [
          "File: tests/unit/utils/test_thin.py -> tests/unit/utils/test_thin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:         return popen",
          "117:         \"\"\"",
          "118:         Fake version info.",
          "",
          "[Removed Lines]",
          "116:     def _version_info(self, major=None, minor=None):",
          "",
          "[Added Lines]",
          "116:     @staticmethod",
          "117:     def _version_info(major=None, minor=None):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "801:         \"salt.utils.thin.tempfile.mkstemp\", MagicMock(return_value=(3, \".temporary\"))",
          "802:     )",
          "803:     @patch(\"salt.utils.thin.shutil\", MagicMock())",
          "805:     @patch(\"salt.utils.path.which\", MagicMock(return_value=\"/usr/bin/python\"))",
          "806:     def test_gen_thin_compression_fallback_py3(self):",
          "807:         \"\"\"",
          "",
          "[Removed Lines]",
          "804:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(None, 3, 6))",
          "",
          "[Added Lines]",
          "805:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(3, 6))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "852:         \"salt.utils.thin.tempfile.mkstemp\", MagicMock(return_value=(3, \".temporary\"))",
          "853:     )",
          "854:     @patch(\"salt.utils.thin.shutil\", MagicMock())",
          "856:     @patch(\"salt.utils.path.which\", MagicMock(return_value=\"/usr/bin/python\"))",
          "857:     def test_gen_thin_control_files_written_py3(self):",
          "858:         \"\"\"",
          "",
          "[Removed Lines]",
          "855:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(None, 3, 6))",
          "",
          "[Added Lines]",
          "856:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(3, 6))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "905:         \"salt.utils.thin.tempfile.mkstemp\", MagicMock(return_value=(3, \".temporary\"))",
          "906:     )",
          "907:     @patch(\"salt.utils.thin.shutil\", MagicMock())",
          "909:     @patch(\"salt.utils.hashutils.DigestCollector\", MagicMock())",
          "910:     @patch(\"salt.utils.path.which\", MagicMock(return_value=\"/usr/bin/python\"))",
          "911:     def test_gen_thin_main_content_files_written_py3(self):",
          "",
          "[Removed Lines]",
          "908:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(None, 3, 6))",
          "",
          "[Added Lines]",
          "909:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(3, 6))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "974:         \"salt.utils.thin.tempfile.mkstemp\", MagicMock(return_value=(3, \".temporary\"))",
          "975:     )",
          "976:     @patch(\"salt.utils.thin.shutil\", MagicMock())",
          "978:     @patch(\"salt.utils.hashutils.DigestCollector\", MagicMock())",
          "979:     @patch(\"salt.utils.path.which\", MagicMock(return_value=\"/usr/bin/python\"))",
          "980:     def test_gen_thin_ext_alternative_content_files_written_py3(self):",
          "",
          "[Removed Lines]",
          "977:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(None, 3, 6))",
          "",
          "[Added Lines]",
          "978:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(3, 6))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1087:         \"salt.utils.thin.tempfile.mkstemp\", MagicMock(return_value=(3, \".temporary\"))",
          "1088:     )",
          "1089:     @patch(\"salt.utils.thin.shutil\", MagicMock())",
          "1091:     def test_gen_thin_control_files_written_access_denied_cwd(self):",
          "1092:         \"\"\"",
          "1093:         Test thin.gen_thin function if control files are written (version, salt-call etc)",
          "",
          "[Removed Lines]",
          "1090:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(None, 3, 6))",
          "",
          "[Added Lines]",
          "1091:     @patch(\"salt.utils.thin.sys.version_info\", _version_info(3, 6))",
          "",
          "---------------"
        ],
        "tests/wheeltest.py||tests/wheeltest.py": [
          "File: tests/wheeltest.py -> tests/wheeltest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: Test interacting with the wheel system. This script is useful when testing",
          "4: wheel modules",
          "5: \"\"\"",
          "9: import pprint",
          "11: import salt.auth",
          "",
          "[Removed Lines]",
          "8: import optparse",
          "",
          "[Added Lines]",
          "6: import optparse  # pylint: disable=deprecated-module",
          "",
          "---------------"
        ],
        "tools/changelog.py||tools/changelog.py": [
          "File: tools/changelog.py -> tools/changelog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     header = f\"* {date} Salt Project Packaging <saltproject-packaging@vmware.com> - {str_salt_version}\\n\"",
          "111:     parts = orig.split(\"%changelog\")",
          "112:     tmpspec = \"pkg/rpm/salt.spec.1\"",
          "114:         wfp.write(parts[0])",
          "115:         wfp.write(\"%changelog\\n\")",
          "116:         wfp.write(header)",
          "117:         wfp.write(changes)",
          "118:         wfp.write(parts[1])",
          "119:     try:",
          "121:             if draft:",
          "122:                 ctx.info(rfp.read())",
          "123:             else:",
          "125:                     wfp.write(rfp.read())",
          "126:     finally:",
          "127:         os.remove(tmpspec)",
          "",
          "[Removed Lines]",
          "113:     with open(tmpspec, \"w\") as wfp:",
          "120:         with open(tmpspec) as rfp:",
          "124:                 with open(\"pkg/rpm/salt.spec\", \"w\") as wfp:",
          "",
          "[Added Lines]",
          "113:     with open(tmpspec, \"w\", encoding=\"utf-8\") as wfp:",
          "120:         with open(tmpspec, encoding=\"utf-8\") as rfp:",
          "124:                 with open(\"pkg/rpm/salt.spec\", \"w\", encoding=\"utf-8\") as wfp:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:     tmpchanges = \"pkg/rpm/salt.spec.1\"",
          "154:     debian_changelog_path = \"pkg/debian/changelog\"",
          "155:     tmp_debian_changelog_path = f\"{debian_changelog_path}.1\"",
          "157:         wfp.write(f\"salt ({salt_version}) stable; urgency=medium\\n\\n\")",
          "158:         wfp.write(formated)",
          "159:         wfp.write(",
          "160:             f\"\\n -- Salt Project Packaging <saltproject-packaging@vmware.com>  {date}\\n\\n\"",
          "161:         )",
          "163:             wfp.write(rfp.read())",
          "164:     try:",
          "166:             if draft:",
          "167:                 ctx.info(rfp.read())",
          "168:             else:",
          "170:                     wfp.write(rfp.read())",
          "171:     finally:",
          "172:         os.remove(tmp_debian_changelog_path)",
          "",
          "[Removed Lines]",
          "156:     with open(tmp_debian_changelog_path, \"w\") as wfp:",
          "162:         with open(debian_changelog_path) as rfp:",
          "165:         with open(tmp_debian_changelog_path) as rfp:",
          "169:                 with open(debian_changelog_path, \"w\") as wfp:",
          "",
          "[Added Lines]",
          "156:     with open(tmp_debian_changelog_path, \"w\", encoding=\"utf-8\") as wfp:",
          "162:         with open(debian_changelog_path, encoding=\"utf-8\") as rfp:",
          "165:         with open(tmp_debian_changelog_path, encoding=\"utf-8\") as rfp:",
          "169:                 with open(debian_changelog_path, \"w\", encoding=\"utf-8\") as wfp:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:             return",
          "256:     unreleased = \" - UNRELEASED\"",
          "258: <!---",
          "259: Do not edit this file. This is auto generated.",
          "260: Edit the templates in doc/topics/releases/templates/",
          "",
          "[Removed Lines]",
          "257:     warning = f\"\"\"",
          "",
          "[Added Lines]",
          "257:     warning = \"\"\"",
          "",
          "---------------"
        ],
        "tools/ci.py||tools/ci.py": [
          "File: tools/ci.py -> tools/ci.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         assert gh_event_path is not None",
          "59:     try:",
          "61:     except Exception as exc:",
          "62:         ctx.error(f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc)",
          "63:         ctx.exit(1)",
          "",
          "[Removed Lines]",
          "60:         gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "60:         gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:         assert github_output is not None",
          "181:     try:",
          "183:     except Exception as exc:",
          "184:         ctx.error(f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc)",
          "185:         ctx.exit(1)",
          "",
          "[Removed Lines]",
          "182:         gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "182:         gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     gh_event_path = os.environ.get(\"GITHUB_EVENT_PATH\") or None",
          "327:     if gh_event_path is not None:",
          "328:         try:",
          "330:         except Exception as exc:",
          "331:             ctx.error(",
          "332:                 f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc",
          "",
          "[Removed Lines]",
          "329:             gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "329:             gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "473:     gh_event_path = os.environ.get(\"GITHUB_EVENT_PATH\") or None",
          "474:     if gh_event_path is not None:",
          "475:         try:",
          "477:         except Exception as exc:",
          "478:             ctx.error(",
          "479:                 f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc",
          "",
          "[Removed Lines]",
          "476:             gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "476:             gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "931:             assert gh_event_path is not None",
          "933:         try:",
          "935:         except Exception as exc:",
          "936:             ctx.error(",
          "937:                 f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc",
          "",
          "[Removed Lines]",
          "934:             gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "934:             gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1100:     gh_event_path = os.environ.get(\"GITHUB_EVENT_PATH\") or None",
          "1101:     if gh_event_path is not None:",
          "1102:         try:",
          "1104:         except Exception as exc:",
          "1105:             ctx.error(",
          "1106:                 f\"Could not load the GH Event payload from {gh_event_path!r}:\\n\", exc",
          "",
          "[Removed Lines]",
          "1103:             gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "1103:             gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1167:     gh_event_path = os.environ.get(\"GITHUB_EVENT_PATH\") or None",
          "1168:     if gh_event_path is not None:",
          "1169:         try:",
          "1171:             pr_event_data = gh_event.get(\"pull_request\")",
          "1172:             if pr_event_data:",
          "1173:                 codecov_args.extend([\"--parent\", pr_event_data[\"base\"][\"sha\"]])",
          "",
          "[Removed Lines]",
          "1170:             gh_event = json.loads(open(gh_event_path).read())",
          "",
          "[Added Lines]",
          "1170:             gh_event = json.loads(open(gh_event_path, encoding=\"utf-8\").read())",
          "",
          "---------------"
        ],
        "tools/pkg/__init__.py||tools/pkg/__init__.py": [
          "File: tools/pkg/__init__.py -> tools/pkg/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:         ctx.exit(1)",
          "171:     try:",
          "173:     except Exception as exc:",
          "174:         ctx.error(f\"Unable to write 'salt/_version.txt': {exc}\")",
          "175:         ctx.exit(1)",
          "",
          "[Removed Lines]",
          "172:         tools.utils.REPO_ROOT.joinpath(\"salt/_version.txt\").write_text(salt_version)",
          "",
          "[Added Lines]",
          "172:         tools.utils.REPO_ROOT.joinpath(\"salt/_version.txt\").write_text(",
          "173:             salt_version, encoding=\"utf-8\"",
          "174:         )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:     version_instance = tools.utils.Version(salt_version)",
          "180:     if release and not version_instance.is_prerelease:",
          "182:             contents = rwfh.read()",
          "183:             match = f\"info=({version_instance.major}, {version_instance.minor}))\"",
          "184:             if match in contents:",
          "",
          "[Removed Lines]",
          "181:         with open(tools.utils.REPO_ROOT / \"salt\" / \"version.py\", \"r+\") as rwfh:",
          "",
          "[Added Lines]",
          "183:         with open(",
          "184:             tools.utils.REPO_ROOT / \"salt\" / \"version.py\", \"r+\", encoding=\"utf-8\"",
          "185:         ) as rwfh:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "239:     When running on Windows and macOS, some additional cleanup is also done.",
          "240:     \"\"\"",
          "241:     with open(",
          "243:     ) as rfh:",
          "244:         patterns = yaml.safe_load(rfh.read())",
          "",
          "[Removed Lines]",
          "242:         str(tools.utils.REPO_ROOT / \"pkg\" / \"common\" / \"env-cleanup-rules.yml\")",
          "",
          "[Added Lines]",
          "246:         str(tools.utils.REPO_ROOT / \"pkg\" / \"common\" / \"env-cleanup-rules.yml\"),",
          "247:         encoding=\"utf-8\",",
          "",
          "---------------"
        ],
        "tools/pkg/build.py||tools/pkg/build.py": [
          "File: tools/pkg/build.py -> tools/pkg/build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:         )",
          "145:         os.environ[\"SALT_ONEDIR_ARCHIVE\"] = str(onedir_artifact)",
          "146:     else:",
          "148:         if arch is None:",
          "149:             ctx.error(",
          "150:                 \"Building the package from the source files but the arch to build for has not been given\"",
          "151:             )",
          "152:             ctx.exit(1)",
          "154:         shared_constants = _get_shared_constants()",
          "155:         if not python_version:",
          "156:             python_version = shared_constants[\"python_version\"]",
          "",
          "[Removed Lines]",
          "147:         ctx.info(f\"Building the package from the source files\")",
          "153:         ctx.info(f\"Building the package from the source files\")",
          "",
          "[Added Lines]",
          "147:         ctx.info(\"Building the package from the source files\")",
          "153:         ctx.info(\"Building the package from the source files\")",
          "",
          "---------------"
        ],
        "tools/pkg/repo/__init__.py||tools/pkg/repo/__init__.py": [
          "File: tools/pkg/repo/__init__.py -> tools/pkg/repo/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     github_output = os.environ.get(\"GITHUB_OUTPUT\")",
          "48:     if github_output is not None:",
          "49:         with open(github_output, \"a\", encoding=\"utf-8\") as wfh:",
          "51:     ctx.info(\"Done\")",
          "",
          "[Removed Lines]",
          "50:             wfh.write(f\"backup-complete=true\\n\")",
          "",
          "[Added Lines]",
          "50:             wfh.write(\"backup-complete=true\\n\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:             )",
          "158:         except ClientError as exc:",
          "159:             if \"Error\" not in exc.response:",
          "161:                 ctx.exit(1)",
          "162:             if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "163:                 ctx.error(f\"Could not find {remote_path} in bucket.\")",
          "",
          "[Removed Lines]",
          "160:                 log.exception(f\"Could not get information about {remote_path}: {exc}\")",
          "",
          "[Added Lines]",
          "160:                 log.exception(",
          "161:                     \"Could not get information about %s: %s\", remote_path, exc",
          "162:                 )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:             if exc.response[\"Error\"][\"Code\"] == \"400\":",
          "166:                 ctx.error(f\"Could get information about {remote_path}: {exc}\")",
          "167:                 ctx.exit(1)",
          "169:             ctx.exit(1)",
          "170:     ctx.info(f\"Version {salt_version} has been staged for release\")",
          "171:     ctx.exit(0)",
          "",
          "[Removed Lines]",
          "168:             log.exception(f\"Error getting information about {remote_path}: {exc}\")",
          "",
          "[Added Lines]",
          "170:             log.exception(\"Error getting information about %s: %s\", remote_path, exc)",
          "",
          "---------------"
        ],
        "tools/pkg/repo/create.py||tools/pkg/repo/create.py": [
          "File: tools/pkg/repo/create.py -> tools/pkg/repo/create.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:         for hash_name in (\"blake2b\", \"sha512\", \"sha3_512\"):",
          "790:             ctx.info(f\"   * Calculating {hash_name} ...\")",
          "791:             hexdigest = _get_file_checksum(fpath, hash_name)",
          "793:                 wfh.write(f\"{hexdigest} {dpath.name}\\n\")",
          "795:                 wfh.write(f\"{hexdigest} {dpath.name}\\n\")",
          "797:     for fpath in create_repo_path.iterdir():",
          "",
          "[Removed Lines]",
          "792:             with open(f\"{hashes_base_path}_{hash_name.upper()}\", \"a+\") as wfh:",
          "794:             with open(f\"{dpath}.{hash_name}\", \"a+\") as wfh:",
          "",
          "[Added Lines]",
          "792:             with open(",
          "793:                 f\"{hashes_base_path}_{hash_name.upper()}\", \"a+\", encoding=\"utf-8\"",
          "794:             ) as wfh:",
          "796:             with open(f\"{dpath}.{hash_name}\", \"a+\", encoding=\"utf-8\") as wfh:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "929:             ctx.info(f\"   * Calculating {hash_name} ...\")",
          "930:             hexdigest = _get_file_checksum(fpath, hash_name)",
          "931:             release_json[dpath.name][hash_name.upper()] = hexdigest",
          "933:                 wfh.write(f\"{hexdigest} {dpath.name}\\n\")",
          "935:                 wfh.write(f\"{hexdigest} {dpath.name}\\n\")",
          "937:     for fpath in create_repo_path.iterdir():",
          "",
          "[Removed Lines]",
          "932:             with open(f\"{hashes_base_path}_{hash_name.upper()}\", \"a+\") as wfh:",
          "934:             with open(f\"{dpath}.{hash_name}\", \"a+\") as wfh:",
          "",
          "[Added Lines]",
          "934:             with open(",
          "935:                 f\"{hashes_base_path}_{hash_name.upper()}\", \"a+\", encoding=\"utf-8\"",
          "936:             ) as wfh:",
          "938:             with open(f\"{dpath}.{hash_name}\", \"a+\", encoding=\"utf-8\") as wfh:",
          "",
          "---------------"
        ],
        "tools/pkg/repo/publish.py||tools/pkg/repo/publish.py": [
          "File: tools/pkg/repo/publish.py -> tools/pkg/repo/publish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:             files_to_copy = json.loads(local_release_files_path.read_text())",
          "120:         except ClientError as exc:",
          "121:             if \"Error\" not in exc.response:",
          "123:                 ctx.exit(1)",
          "124:             if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "125:                 ctx.error(f\"Could not find {repo_release_files_path} in bucket.\")",
          "",
          "[Removed Lines]",
          "122:                 log.exception(f\"Error downloading {repo_release_files_path}: {exc}\")",
          "",
          "[Added Lines]",
          "122:                 log.exception(\"Error downloading %s: %s\", repo_release_files_path, exc)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:                     f\"Could not download {repo_release_files_path} from bucket: {exc}\"",
          "130:                 )",
          "131:                 ctx.exit(1)",
          "133:             ctx.exit(1)",
          "134:         local_release_symlinks_path = (",
          "135:             pathlib.Path(tsd) / repo_release_symlinks_path.name",
          "",
          "[Removed Lines]",
          "132:             log.exception(f\"Error downloading {repo_release_files_path}: {exc}\")",
          "",
          "[Added Lines]",
          "132:             log.exception(\"Error downloading %s: %s\", repo_release_files_path, exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:             directories_to_delete = json.loads(local_release_symlinks_path.read_text())",
          "148:         except ClientError as exc:",
          "149:             if \"Error\" not in exc.response:",
          "151:                 ctx.exit(1)",
          "152:             if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "153:                 ctx.error(f\"Could not find {repo_release_symlinks_path} in bucket.\")",
          "",
          "[Removed Lines]",
          "150:                 log.exception(f\"Error downloading {repo_release_symlinks_path}: {exc}\")",
          "",
          "[Added Lines]",
          "150:                 log.exception(",
          "151:                     \"Error downloading %s: %s\", repo_release_symlinks_path, exc",
          "152:                 )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "157:                     f\"Could not download {repo_release_symlinks_path} from bucket: {exc}\"",
          "158:                 )",
          "159:                 ctx.exit(1)",
          "161:             ctx.exit(1)",
          "163:         if directories_to_delete:",
          "",
          "[Removed Lines]",
          "160:             log.exception(f\"Error downloading {repo_release_symlinks_path}: {exc}\")",
          "",
          "[Added Lines]",
          "162:             log.exception(\"Error downloading %s: %s\", repo_release_symlinks_path, exc)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212:                 )",
          "213:                 already_copied_files.append(fpath)",
          "214:             except ClientError:",
          "216:             finally:",
          "217:                 progress.update(task, advance=1)",
          "",
          "[Removed Lines]",
          "215:                 log.exception(f\"Failed to copy {fpath}\")",
          "",
          "[Added Lines]",
          "217:                 log.exception(\"Failed to copy %s\", fpath)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "326:                 updated_contents = re.sub(",
          "327:                     r\"^(baseurl|gpgkey)=https://([^/]+)/(.*)$\",",
          "328:                     rf\"\\1=https://{release_domain}/\\3\",",
          "330:                     flags=re.MULTILINE,",
          "331:                 )",
          "332:                 ctx.info(f\"Updated '{repo_file_path.relative_to(repo_path)}:\")",
          "333:                 ctx.print(updated_contents)",
          "335:             except ClientError as exc:",
          "336:                 if \"Error\" not in exc.response:",
          "337:                     raise",
          "",
          "[Removed Lines]",
          "329:                     repo_file_path.read_text(),",
          "334:                 repo_file_path.write_text(updated_contents)",
          "",
          "[Added Lines]",
          "331:                     repo_file_path.read_text(encoding=\"utf-8\"),",
          "336:                 repo_file_path.write_text(updated_contents, encoding=\"utf-8\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "592:                     Delete={\"Objects\": objects},",
          "593:                 )",
          "594:             except ClientError:",
          "596:             finally:",
          "597:                 progress.update(task, advance=1)",
          "",
          "[Removed Lines]",
          "595:                 log.exception(f\"Failed to delete {bucket_uri}\")",
          "",
          "[Added Lines]",
          "597:                 log.exception(\"Failed to delete %s\", bucket_uri)",
          "",
          "---------------"
        ],
        "tools/precommit/workflows.py||tools/precommit/workflows.py": [
          "File: tools/precommit/workflows.py -> tools/precommit/workflows.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: WORKFLOWS = tools.utils.REPO_ROOT / \".github\" / \"workflows\"",
          "21: TEMPLATES = WORKFLOWS / \"templates\"",
          "23:     AMIS = json.load(rfh)",
          "",
          "[Removed Lines]",
          "22: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open() as rfh:",
          "",
          "[Added Lines]",
          "22: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open(",
          "23:     \"r\", encoding=\"utf-8\"",
          "24: ) as rfh:",
          "",
          "---------------"
        ],
        "tools/release.py||tools/release.py": [
          "File: tools/release.py -> tools/release.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:                     Delete={\"Objects\": objects},",
          "77:                 )",
          "78:             except ClientError:",
          "80:             finally:",
          "81:                 progress.update(task, advance=1)",
          "",
          "[Removed Lines]",
          "79:                 log.exception(f\"Failed to delete '{bucket_uri}'\")",
          "",
          "[Added Lines]",
          "79:                 log.exception(\"Failed to delete '%s'\", bucket_uri)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:                 )",
          "175:     except ClientError as exc:",
          "176:         if \"Error\" not in exc.response:",
          "178:             ctx.exit(1)",
          "179:         if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "180:             ctx.error(f\"Could not find {remote_path} in bucket.\")",
          "",
          "[Removed Lines]",
          "177:             log.exception(f\"Error downloading {remote_path}: {exc}\")",
          "",
          "[Added Lines]",
          "177:             log.exception(\"Error downloading %s: %s\", remote_path, exc)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:             ctx.error(f\"Could not download {remote_path} from bucket: {exc}\")",
          "184:             ctx.exit(1)",
          "185:         else:",
          "187:             ctx.exit(1)",
          "189:     if not archive_path.exists():",
          "",
          "[Removed Lines]",
          "186:             log.exception(f\"Failed to download {remote_path}: {exc}\")",
          "",
          "[Added Lines]",
          "186:             log.exception(\"Failed to download %s: %s\", remote_path, exc)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "228:             files_to_copy = json.loads(local_release_files_path.read_text())",
          "229:         except ClientError as exc:",
          "230:             if \"Error\" not in exc.response:",
          "232:                 ctx.exit(1)",
          "233:             if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "234:                 ctx.error(f\"Could not find {repo_release_files_path} in bucket.\")",
          "",
          "[Removed Lines]",
          "231:                 log.exception(f\"Error downloading {repo_release_files_path}: {exc}\")",
          "",
          "[Added Lines]",
          "231:                 log.exception(\"Error downloading %s: %s\", repo_release_files_path, exc)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238:                     f\"Could not download {repo_release_files_path} from bucket: {exc}\"",
          "239:                 )",
          "240:                 ctx.exit(1)",
          "242:             ctx.exit(1)",
          "244:     # If we get approval, we can add RPM and DEB",
          "",
          "[Removed Lines]",
          "241:             log.exception(f\"Error downloading {repo_release_files_path}: {exc}\")",
          "",
          "[Added Lines]",
          "241:             log.exception(\"Error downloading %s: %s\", repo_release_files_path, exc)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "276:                     )",
          "277:             except ClientError as exc:",
          "278:                 if \"Error\" not in exc.response:",
          "280:                     ctx.exit(1)",
          "281:                 if exc.response[\"Error\"][\"Code\"] == \"404\":",
          "282:                     ctx.error(f\"Could not find {download_file} in bucket.\")",
          "",
          "[Removed Lines]",
          "279:                     log.exception(f\"Error downloading {download_file}: {exc}\")",
          "",
          "[Added Lines]",
          "279:                     log.exception(\"Error downloading %s: %s\", download_file, exc)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "284:                 if exc.response[\"Error\"][\"Code\"] == \"400\":",
          "285:                     ctx.error(f\"Could not download {download_file} from bucket: {exc}\")",
          "286:                     ctx.exit(1)",
          "288:                 ctx.exit(1)",
          "290:             # API key should be an environment variable",
          "",
          "[Removed Lines]",
          "287:                 log.exception(f\"Error downloading {download_file}: {exc}\")",
          "",
          "[Added Lines]",
          "287:                 log.exception(\"Error downloading %s: %s\", download_file, exc)",
          "",
          "---------------"
        ],
        "tools/testsuite/__init__.py||tools/testsuite/__init__.py": [
          "File: tools/testsuite/__init__.py -> tools/testsuite/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: # pylint: disable=resource-leakage,broad-except,3rd-party-module-not-gated",
          "5: from __future__ import annotations",
          "8: import json",
          "9: import logging",
          "13: from typing import TYPE_CHECKING",
          "15: from ptscripts import Context, command_group",
          "",
          "[Removed Lines]",
          "7: import contextlib",
          "10: import shutil",
          "11: import sys",
          "12: import zipfile",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18: import tools.utils.gh",
          "19: from tools.utils import ExitCode",
          "22:     OS_SLUGS = sorted(json.load(rfh))",
          "24: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "21: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open() as rfh:",
          "",
          "[Added Lines]",
          "17: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open(",
          "18:     \"r\", encoding=\"utf-8\"",
          "19: ) as rfh:",
          "",
          "---------------"
        ],
        "tools/testsuite/download.py||tools/testsuite/download.py": [
          "File: tools/testsuite/download.py -> tools/testsuite/download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: import tools.utils",
          "15: import tools.utils.gh",
          "18:     OS_SLUGS = sorted(json.load(rfh))",
          "20: log = logging.getLogger(__name__)",
          "",
          "[Removed Lines]",
          "17: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open() as rfh:",
          "",
          "[Added Lines]",
          "17: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open(",
          "18:     \"r\", encoding=\"utf-8\"",
          "19: ) as rfh:",
          "",
          "---------------"
        ],
        "tools/vm.py||tools/vm.py": [
          "File: tools/vm.py -> tools/vm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: log = logging.getLogger(__name__)",
          "48: STATE_DIR = tools.utils.REPO_ROOT / \".vms-state\"",
          "50:     AMIS = json.load(rfh)",
          "51: REPO_CHECKOUT_ID = hashlib.sha256(",
          "52:     \"|\".join(list(platform.uname()) + [str(tools.utils.REPO_ROOT)]).encode()",
          "",
          "[Removed Lines]",
          "49: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open() as rfh:",
          "",
          "[Added Lines]",
          "49: with tools.utils.REPO_ROOT.joinpath(\"cicd\", \"golden-images.json\").open(",
          "50:     \"r\", encoding=\"utf-8\"",
          "51: ) as rfh:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "633:             except FileNotFoundError:",
          "634:                 if not delete:",
          "635:                     log.info(",
          "637:                     )",
          "638:                 else:",
          "639:                     shutil.rmtree(state_path)",
          "640:                     log.info(",
          "642:                     )",
          "643:             else:",
          "644:                 cached_instances[instance_id] = state_path.name",
          "",
          "[Removed Lines]",
          "636:                         f\"Would remove {state_path.name} (No valid ID) from cache at {state_path}\"",
          "641:                         f\"REMOVED {state_path.name} (No valid ID) from cache at {state_path}\"",
          "",
          "[Added Lines]",
          "638:                         \"Would remove %s (No valid ID) from cache at %s\",",
          "639:                         state_path.name,",
          "640:                         state_path,",
          "645:                         \"REMOVED %s (No valid ID) from cache at %s\",",
          "646:                         state_path.name,",
          "647:                         state_path,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "659:         if delete:",
          "660:             shutil.rmtree(STATE_DIR / vm_name)",
          "661:             log.info(",
          "663:             )",
          "664:         else:",
          "665:             log.info(",
          "667:             )",
          "668:     if not delete and to_remove:",
          "669:         log.info(\"To force the removal of the above cache entries, pass --delete\")",
          "",
          "[Removed Lines]",
          "662:                 f\"REMOVED {vm_name} ({cached_id.strip()}) from cache at {STATE_DIR / vm_name}\"",
          "666:                 f\"Would remove {vm_name} ({cached_id.strip()}) from cache at {STATE_DIR / vm_name}\"",
          "",
          "[Added Lines]",
          "668:                 \"REMOVED %s (%s) from cache at %s\",",
          "669:                 vm_name,",
          "670:                 cached_id.strip(),",
          "671:                 STATE_DIR / vm_name,",
          "675:                 \"Would remove %s (%s) from cache at %s\",",
          "676:                 vm_name,",
          "677:                 cached_id.strip(),",
          "678:                 STATE_DIR / vm_name,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "719:             extras = sep + sep.join(",
          "720:                 [f\"{key}: {value}\" for key, value in extra_info.items()]",
          "721:             )",
          "725: def _get_instances_by_key(ctx: Context, key_name: str):",
          "",
          "[Removed Lines]",
          "722:             log.info(f\"{vm_name} ({vm_state}){extras}\")",
          "",
          "[Added Lines]",
          "734:             log.info(\"%s (%s)%s\", vm_name, vm_state, extras)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "785:                 if key in AMIConfig.__annotations__",
          "786:             }",
          "787:         )",
          "789:         return config",
          "791:     @state_dir.default",
          "",
          "[Removed Lines]",
          "788:         log.info(f\"Loaded VM Configuration:\\n{config}\")",
          "",
          "[Added Lines]",
          "800:         log.info(\"Loaded VM Configuration:\\n%s\", config)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "827:                 {\"Name\": \"tag:vm-name\", \"Values\": [self.name]},",
          "828:                 {\"Name\": \"tag:instance-client-id\", \"Values\": [REPO_CHECKOUT_ID]},",
          "829:             ]",
          "831:             try:",
          "832:                 instances = list(",
          "833:                     self.ec2.instances.filter(",
          "",
          "[Removed Lines]",
          "830:             log.info(f\"Checking existing instance of {self.name}({self.config.ami})...\")",
          "",
          "[Added Lines]",
          "842:             log.info(",
          "843:                 \"Checking existing instance of %s(%s)...\", self.name, self.config.ami",
          "844:             )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "895:         environment=None,",
          "896:     ):",
          "897:         if self.is_running:",
          "899:             return True",
          "900:         self.get_ec2_resource.cache_clear()",
          "",
          "[Removed Lines]",
          "898:             log.info(f\"{self!r} is already running...\")",
          "",
          "[Added Lines]",
          "912:             log.info(\"%r is already running...\", self)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1005:             log.info(\"Starting CI configured VM\")",
          "1006:         else:",
          "1007:             # This is a developer running",
          "1009:             security_group_filters = [",
          "1010:                 {",
          "1011:                     \"Name\": \"vpc-id\",",
          "",
          "[Removed Lines]",
          "1008:             log.info(f\"Starting Developer configured VM In Environment '{environment}'\")",
          "",
          "[Added Lines]",
          "1022:             log.info(",
          "1023:                 \"Starting Developer configured VM In Environment '%s'\", environment",
          "1024:             )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1272:     def destroy(self, no_wait: bool = False):",
          "1273:         try:",
          "1274:             if not self.is_running:",
          "1276:                 return",
          "1277:             timeout = self.config.terminate_timeout",
          "1278:             timeout_progress = 0.0",
          "",
          "[Removed Lines]",
          "1275:                 log.info(f\"{self!r} is not running...\")",
          "",
          "[Added Lines]",
          "1291:                 log.info(\"%r is not running...\", self)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1286:                         time.sleep(1)",
          "1287:                         if no_wait and not self.is_running:",
          "1288:                             log.info(",
          "1291:                             )",
          "1292:                             break",
          "1293:                         if self.state == \"terminated\":",
          "",
          "[Removed Lines]",
          "1289:                                 f\"{self!r} started the destroy process. \"",
          "1290:                                 \"Not waiting for completion of that process.\"",
          "",
          "[Added Lines]",
          "1305:                                 \"%r started the destroy process. Not waiting \"",
          "1306:                                 \"for completion of that process.\",",
          "1307:                                 self,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1418:                 env=env,",
          "1419:                 log_command_level=log_command_level,",
          "1420:             )",
          "1422:             return self.ctx.run(",
          "1424:                 check=check,",
          "",
          "[Removed Lines]",
          "1421:             log.debug(f\"Running {ssh_command!r} ...\")",
          "",
          "[Added Lines]",
          "1438:             log.debug(\"Running %r ...\", ssh_command)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1574:                 destination,",
          "1575:             ]",
          "1576:         )",
          "1578:         progress = create_progress_bar(transient=True)",
          "1579:         task = progress.add_task(description, total=100)",
          "1580:         if sys.platform == \"win32\":",
          "",
          "[Removed Lines]",
          "1577:         log.info(f\"Running {' '.join(cmd)!r}\")  # type: ignore[arg-type]",
          "",
          "[Added Lines]",
          "1594:         log.info(\"Running '%s'\", \" \".join(cmd))  # type: ignore[arg-type]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1642:             remote_command.extend(list(command))",
          "1643:             log.log(",
          "1644:                 log_command_level,",
          "1646:             )",
          "1647:             _ssh_command_args.extend(remote_command)",
          "1648:         return _ssh_command_args",
          "",
          "[Removed Lines]",
          "1645:                 f\"Running {' '.join(remote_command[1:])!r} in {self.name}\",",
          "",
          "[Added Lines]",
          "1662:                 \"Running '%s' in %s\",",
          "1663:                 \" \".join(remote_command[1:]),",
          "1664:                 self.name,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1109ee516f9592768ec95d26a73db6af6fd08067",
      "candidate_info": {
        "commit_hash": "1109ee516f9592768ec95d26a73db6af6fd08067",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/1109ee516f9592768ec95d26a73db6af6fd08067",
        "files": [
          "tests/pytests/unit/fileserver/test_roots.py"
        ],
        "message": "Clean up test fixtures",
        "before_after_code_files": [
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     return \"\u0441\u043e\u043b\u044c\"",
          "32: def testfile(tmp_path):",
          "33:     fp = tmp_path / \"testfile\"",
          "34:     fp.write_text(\"This is a testfile\")",
          "35:     return fp",
          "39: def tmp_state_tree(tmp_path, testfile, unicode_filename, unicode_dirname):",
          "40:     dirname = tmp_path / \"roots_tmp_state_tree\"",
          "41:     dirname.mkdir(parents=True, exist_ok=True)",
          "",
          "[Removed Lines]",
          "31: @pytest.fixture(autouse=True)",
          "38: @pytest.fixture(autouse=True)",
          "",
          "[Added Lines]",
          "31: @pytest.fixture",
          "38: @pytest.fixture",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     return dirname",
          "57: def testfilepath(tmp_state_tree, testfile):",
          "58:     return tmp_state_tree / testfile.name",
          "61: @pytest.fixture",
          "64:     overrides = {\"file_roots\": {\"base\": [str(tmp_state_tree)]}}",
          "69: def test_file_list(unicode_filename):",
          "",
          "[Removed Lines]",
          "56: @pytest.fixture(autouse=True)",
          "62: def configure_loader_modules(tmp_state_tree, temp_salt_master):",
          "63:     opts = temp_salt_master.config.copy()",
          "65:     opts.update(overrides)",
          "66:     return {roots: {\"__opts__\": opts}}",
          "",
          "[Added Lines]",
          "56: @pytest.fixture",
          "62: def configure_loader_modules(tmp_state_tree, master_config):",
          "64:     master_config.update(overrides)",
          "65:     return {roots: {\"__opts__\": master_config}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5369d5843caad6b418bb656e7f26f55ea0d8d93c",
      "candidate_info": {
        "commit_hash": "5369d5843caad6b418bb656e7f26f55ea0d8d93c",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/5369d5843caad6b418bb656e7f26f55ea0d8d93c",
        "files": [
          "tests/pytests/unit/fileserver/__init__.py",
          "tests/pytests/unit/fileserver/gitfs/__init__.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/fileserver/test_s3fs.py",
          "tests/pytests/unit/fileserver/test_svnfs.py",
          "tests/unit/fileserver/test_gitfs.py",
          "tests/unit/fileserver/test_roots.py",
          "tests/unit/fileserver/test_s3fs.py",
          "tests/unit/fileserver/test_svnfs.py"
        ],
        "message": "migrate fileserver unit tests to pytest",
        "before_after_code_files": [
          "tests/pytests/unit/fileserver/gitfs/test_gitfs.py||tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py||tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/fileserver/test_s3fs.py||tests/pytests/unit/fileserver/test_s3fs.py",
          "tests/pytests/unit/fileserver/test_svnfs.py||tests/pytests/unit/fileserver/test_svnfs.py",
          "tests/unit/fileserver/test_gitfs.py||tests/unit/fileserver/test_gitfs.py",
          "tests/unit/fileserver/test_roots.py||tests/unit/fileserver/test_roots.py",
          "tests/unit/fileserver/test_s3fs.py||tests/unit/fileserver/test_s3fs.py",
          "tests/unit/fileserver/test_svnfs.py||tests/unit/fileserver/test_svnfs.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/pytests/unit/fileserver/gitfs/test_gitfs.py||tests/pytests/unit/fileserver/gitfs/test_gitfs.py": [
          "File: tests/pytests/unit/fileserver/gitfs/test_gitfs.py -> tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2: These are where the tests go, so that they can be run using both GitPython",
          "3: and pygit2.",
          "5: NOTE: The gitfs.update() has to happen AFTER the setUp is called. This is",
          "6: because running it inside the setUp will spawn a new singleton, which means",
          "7: that tests which need to mock the __opts__ will be too late; the setUp will",
          "8: have created a new singleton that will bypass our mocking. To ensure that",
          "9: our tests are reliable and correct, we want to make sure that each test",
          "10: uses a new gitfs object, allowing different manipulations of the opts to be",
          "11: tested.",
          "13: Therefore, keep the following in mind:",
          "15: 1. Each test needs to call gitfs.update() *after* any patching, and",
          "17: 2. Do *NOT* move the gitfs.update() into the setUp.",
          "19:     :codeauthor: Erik Johnson <erik@saltstack.com>",
          "20: \"\"\"",
          "22: import logging",
          "23: import os",
          "24: import pathlib",
          "26: import pytest",
          "28: import salt.ext.tornado.ioloop",
          "29: import salt.fileserver.gitfs as gitfs",
          "30: import salt.utils.files",
          "31: import salt.utils.gitfs",
          "32: import salt.utils.platform",
          "33: import salt.utils.win_functions",
          "34: import salt.utils.yaml",
          "35: from salt.utils.gitfs import (",
          "36:     GITPYTHON_MINVER,",
          "37:     GITPYTHON_VERSION,",
          "38:     LIBGIT2_MINVER,",
          "39:     LIBGIT2_VERSION,",
          "40:     PYGIT2_MINVER,",
          "41:     PYGIT2_VERSION,",
          "42: )",
          "43: from tests.support.helpers import patched_environ",
          "44: from tests.support.mock import patch",
          "46: try:",
          "47:     import pwd  # pylint: disable=unused-import",
          "48: except ImportError:",
          "49:     pass",
          "52: try:",
          "53:     import git",
          "55:     # We still need to use GitPython here for temp repo setup, so we do need to",
          "56:     # actually import it. But we don't need import pygit2 in this module, we",
          "57:     # can just use the LooseVersion instances imported along with",
          "58:     # salt.utils.gitfs to check if we have a compatible version.",
          "59:     HAS_GITPYTHON = GITPYTHON_VERSION >= GITPYTHON_MINVER",
          "60: except (ImportError, AttributeError):",
          "61:     HAS_GITPYTHON = False",
          "63: try:",
          "64:     HAS_PYGIT2 = PYGIT2_VERSION >= PYGIT2_MINVER and LIBGIT2_VERSION >= LIBGIT2_MINVER",
          "65: except AttributeError:",
          "66:     HAS_PYGIT2 = False",
          "68: log = logging.getLogger(__name__)",
          "71: @pytest.fixture(scope=\"module\", params=[\"gitpython\", \"pygit2\"], autouse=True)",
          "72: def provider(request):",
          "73:     if not HAS_GITPYTHON:",
          "74:         pytest.skip(",
          "75:             \"GitPython >= {} required for temp repo setup\".format(GITPYTHON_MINVER)",
          "76:         )",
          "77:     if request.param == \"pygit2\":",
          "78:         if not HAS_PYGIT2:",
          "79:             pytest.skip(",
          "80:                 \"pygit2 >= {} and libgit2 >= {} required\".format(",
          "81:                     PYGIT2_MINVER, LIBGIT2_MINVER",
          "82:                 )",
          "83:             )",
          "84:         if salt.utils.platform.is_windows():",
          "85:             pytest.skip(\"Skip Pygit2 on windows, due to pygit2 access error on windows\")",
          "87:     return request.param",
          "90: @pytest.fixture",
          "91: def sock_dir(tmp_path):",
          "92:     dirname = tmp_path / \"sock_dir\"",
          "93:     dirname.mkdir(parents=True, exist_ok=True)",
          "94:     return dirname",
          "97: @pytest.fixture(scope=\"module\")",
          "98: def unicode_filename():",
          "99:     return \"\u043f\u0438\u0442\u043e\u043d.txt\"",
          "102: @pytest.fixture(scope=\"module\")",
          "103: def tag_name():",
          "104:     return \"mytag\"",
          "107: @pytest.fixture(scope=\"module\")",
          "108: def unicode_dirname():",
          "109:     return \"\u0441\u043e\u043b\u044c\"",
          "112: @pytest.fixture(scope=\"module\")",
          "113: def load():",
          "114:     return {\"saltenv\": \"base\"}",
          "117: @pytest.fixture(autouse=True)",
          "118: def testfile(tmp_path):",
          "119:     fp = tmp_path / \"testfile\"",
          "120:     fp.write_text(\"This is a testfile\")",
          "121:     return fp",
          "124: @pytest.fixture",
          "125: def repo_dir(tmp_path, unicode_dirname, tag_name, unicode_filename):",
          "126:     try:",
          "127:         del salt.utils.gitfs.GitFS.instance_map[",
          "128:             salt.ext.tornado.ioloop.IOLoop.current()",
          "129:         ]",
          "130:     except KeyError:",
          "131:         pass",
          "133:     dirname = str(tmp_path / \"repo_dir\")",
          "134:     if salt.utils.platform.is_windows():",
          "135:         dirname = dirname.replace(\"\\\\\", \"/\")",
          "137:     # Populate repo",
          "138:     root = pathlib.Path(dirname)",
          "139:     grail_dir = root / \"grail\"",
          "140:     grail_dir.mkdir(parents=True, exist_ok=True)",
          "141:     (grail_dir / \"random_file\").touch()",
          "142:     testfile = root / \"testfile\"",
          "143:     testfile.write_text(\"this is a testfile in a git repo\\n\")",
          "144:     unicode_file = root / unicode_filename",
          "145:     unicode_file.write_text(\"\\nThis is a file with a unicode name\\n\")",
          "146:     unicode_dir = root / unicode_dirname",
          "147:     unicode_dir.mkdir(parents=True, exist_ok=True)",
          "148:     (unicode_dir / \"foo.txt\").touch()",
          "150:     # Generate git data",
          "151:     repo = git.Repo.init(dirname)",
          "152:     try:",
          "153:         if salt.utils.platform.is_windows():",
          "154:             username = salt.utils.win_functions.get_current_user()",
          "155:         else:",
          "156:             username = pwd.getpwuid(os.geteuid()).pw_name",
          "157:     except AttributeError:",
          "158:         log.error(\"Unable to get effective username, falling back to 'root'.\")",
          "159:         username = \"root\"",
          "161:     with patched_environ(USERNAME=username):",
          "162:         repo.index.add([x for x in os.listdir(dirname) if x != \".git\"])",
          "163:         repo.index.commit(\"Test\")",
          "165:         # Add another branch with unicode characters in the name",
          "166:         repo.create_head(unicode_dirname, \"HEAD\")",
          "168:         # Add a tag",
          "169:         repo.create_tag(tag_name, \"HEAD\")",
          "170:         # Older GitPython versions do not have a close method.",
          "171:         if hasattr(repo, \"close\"):",
          "172:             repo.close()",
          "174:     return dirname",
          "177: @pytest.fixture",
          "178: def cache_dir(tmp_path):",
          "179:     dirname = tmp_path / \"cache_dir\"",
          "180:     dirname.mkdir(parents=True, exist_ok=True)",
          "181:     return dirname",
          "184: @pytest.fixture",
          "185: def configure_loader_modules(provider, sock_dir, repo_dir, cache_dir):",
          "186:     opts = {",
          "187:         \"sock_dir\": str(sock_dir),",
          "188:         \"gitfs_remotes\": [\"file://\" + str(repo_dir)],",
          "189:         \"cachedir\": str(cache_dir),",
          "190:         \"gitfs_root\": \"\",",
          "191:         \"fileserver_backend\": [\"gitfs\"],",
          "192:         \"gitfs_base\": \"master\",",
          "193:         \"gitfs_fallback\": \"\",",
          "194:         \"fileserver_events\": True,",
          "195:         \"transport\": \"zeromq\",",
          "196:         \"gitfs_mountpoint\": \"\",",
          "197:         \"gitfs_saltenv\": [],",
          "198:         \"gitfs_saltenv_whitelist\": [],",
          "199:         \"gitfs_saltenv_blacklist\": [],",
          "200:         \"gitfs_user\": \"\",",
          "201:         \"gitfs_password\": \"\",",
          "202:         \"gitfs_insecure_auth\": False,",
          "203:         \"gitfs_privkey\": \"\",",
          "204:         \"gitfs_pubkey\": \"\",",
          "205:         \"gitfs_passphrase\": \"\",",
          "206:         \"gitfs_refspecs\": [",
          "207:             \"+refs/heads/*:refs/remotes/origin/*\",",
          "208:             \"+refs/tags/*:refs/tags/*\",",
          "209:         ],",
          "210:         \"gitfs_ssl_verify\": True,",
          "211:         \"gitfs_disable_saltenv_mapping\": False,",
          "212:         \"gitfs_ref_types\": [\"branch\", \"tag\", \"sha\"],",
          "213:         \"gitfs_update_interval\": 60,",
          "214:         \"__role\": \"master\",",
          "215:         \"gitfs_provider\": provider,",
          "216:     }",
          "218:     return {gitfs: {\"__opts__\": opts}}",
          "221: @pytest.fixture(autouse=True)",
          "222: def skip_on_no_virtual(configure_loader_modules):",
          "223:     if not gitfs.__virtual__():",
          "224:         pytest.skip(\"GitFS could not be loaded. Skipping GitFS tests!\")",
          "227: @pytest.mark.slow_test",
          "228: def test_file_list(load, unicode_filename, unicode_dirname):",
          "229:     gitfs.update()",
          "230:     ret = gitfs.file_list(load)",
          "231:     assert \"testfile\" in ret",
          "232:     assert unicode_filename in ret",
          "233:     # This function does not use os.sep, the Salt fileserver uses the",
          "234:     # forward slash, hence it being explicitly used to join here.",
          "235:     assert \"/\".join((unicode_dirname, \"foo.txt\")) in ret",
          "238: @pytest.mark.slow_test",
          "239: def test_dir_list(load, unicode_dirname):",
          "240:     gitfs.update()",
          "241:     ret = gitfs.dir_list(load)",
          "242:     assert \"grail\" in ret",
          "243:     assert unicode_dirname in ret",
          "246: def test_find_and_serve_file(repo_dir):",
          "247:     with patch.dict(gitfs.__opts__, {\"file_buffer_size\": 262144}):",
          "248:         gitfs.update()",
          "250:         # find_file",
          "251:         ret = gitfs.find_file(\"testfile\")",
          "252:         assert \"testfile\" == ret[\"rel\"]",
          "254:         full_path_to_file = salt.utils.path.join(",
          "255:             gitfs.__opts__[\"cachedir\"], \"gitfs\", \"refs\", \"base\", \"testfile\"",
          "256:         )",
          "257:         assert full_path_to_file == ret[\"path\"]",
          "259:         # serve_file",
          "260:         load = {\"saltenv\": \"base\", \"path\": full_path_to_file, \"loc\": 0}",
          "261:         fnd = {\"path\": full_path_to_file, \"rel\": \"testfile\"}",
          "262:         ret = gitfs.serve_file(load, fnd)",
          "264:         with salt.utils.files.fopen(",
          "265:             os.path.join(repo_dir, \"testfile\"), \"r\"",
          "266:         ) as fp_:  # NB: Why not 'rb'?",
          "267:             data = fp_.read()",
          "269:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
          "272: def test_file_list_fallback(unicode_filename, unicode_dirname):",
          "273:     with patch.dict(gitfs.__opts__, {\"gitfs_fallback\": \"master\"}):",
          "274:         gitfs.update()",
          "275:         ret = gitfs.file_list({\"saltenv\": \"notexisting\"})",
          "276:         assert \"testfile\" in ret",
          "277:         assert unicode_filename in ret",
          "278:         # This function does not use os.sep, the Salt fileserver uses the",
          "279:         # forward slash, hence it being explicitly used to join here.",
          "280:         assert \"/\".join((unicode_dirname, \"foo.txt\")) in ret",
          "283: def test_dir_list_fallback(unicode_dirname):",
          "284:     with patch.dict(gitfs.__opts__, {\"gitfs_fallback\": \"master\"}):",
          "285:         gitfs.update()",
          "286:         ret = gitfs.dir_list({\"saltenv\": \"notexisting\"})",
          "287:         assert \"grail\" in ret",
          "288:         assert unicode_dirname in ret",
          "291: def test_find_and_serve_file_fallback(repo_dir):",
          "292:     with patch.dict(",
          "293:         gitfs.__opts__, {\"file_buffer_size\": 262144, \"gitfs_fallback\": \"master\"}",
          "294:     ):",
          "295:         gitfs.update()",
          "297:         # find_file",
          "298:         ret = gitfs.find_file(\"testfile\", tgt_env=\"notexisting\")",
          "299:         assert \"testfile\" == ret[\"rel\"]",
          "301:         full_path_to_file = salt.utils.path.join(",
          "302:             gitfs.__opts__[\"cachedir\"], \"gitfs\", \"refs\", \"notexisting\", \"testfile\"",
          "303:         )",
          "304:         assert full_path_to_file == ret[\"path\"]",
          "306:         # serve_file",
          "307:         load = {\"saltenv\": \"notexisting\", \"path\": full_path_to_file, \"loc\": 0}",
          "308:         fnd = {\"path\": full_path_to_file, \"rel\": \"testfile\"}",
          "309:         ret = gitfs.serve_file(load, fnd)",
          "311:         with salt.utils.files.fopen(",
          "312:             os.path.join(repo_dir, \"testfile\"), \"r\"",
          "313:         ) as fp_:  # NB: Why not 'rb'?",
          "314:             data = fp_.read()",
          "316:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
          "319: @pytest.mark.slow_test",
          "320: def test_envs(unicode_dirname, tag_name):",
          "321:     gitfs.update()",
          "322:     ret = gitfs.envs(ignore_cache=True)",
          "323:     assert \"base\" in ret",
          "324:     assert unicode_dirname in ret",
          "325:     assert tag_name in ret",
          "328: @pytest.mark.slow_test",
          "329: def test_ref_types_global(unicode_dirname, tag_name):",
          "330:     \"\"\"",
          "331:     Test the global gitfs_ref_types config option",
          "332:     \"\"\"",
          "333:     with patch.dict(gitfs.__opts__, {\"gitfs_ref_types\": [\"branch\"]}):",
          "334:         gitfs.update()",
          "335:         ret = gitfs.envs(ignore_cache=True)",
          "336:         # Since we are restricting to branches only, the tag should not",
          "337:         # appear in the envs list.",
          "338:         assert \"base\" in ret",
          "339:         assert unicode_dirname in ret",
          "340:         assert tag_name not in ret",
          "343: @pytest.mark.slow_test",
          "344: def test_ref_types_per_remote(repo_dir, unicode_dirname, tag_name):",
          "345:     \"\"\"",
          "346:     Test the per_remote ref_types config option, using a different",
          "347:     ref_types setting than the global test.",
          "348:     \"\"\"",
          "349:     remotes = [{\"file://\" + repo_dir: [{\"ref_types\": [\"tag\"]}]}]",
          "350:     with patch.dict(gitfs.__opts__, {\"gitfs_remotes\": remotes}):",
          "351:         gitfs.update()",
          "352:         ret = gitfs.envs(ignore_cache=True)",
          "353:         # Since we are restricting to tags only, the tag should appear in",
          "354:         # the envs list, but the branches should not.",
          "355:         assert \"base\" not in ret",
          "356:         assert unicode_dirname not in ret",
          "357:         assert tag_name in ret",
          "360: @pytest.mark.slow_test",
          "361: def test_disable_saltenv_mapping_global_with_mapping_defined_globally():",
          "362:     \"\"\"",
          "363:     Test the global gitfs_disable_saltenv_mapping config option, combined",
          "364:     with the per-saltenv mapping being defined in the global gitfs_saltenv",
          "365:     option.",
          "366:     \"\"\"",
          "367:     opts = {",
          "368:         \"gitfs_disable_saltenv_mapping\": True,",
          "369:         \"gitfs_saltenv\": [{\"foo\": [{\"ref\": \"somebranch\"}]}],",
          "370:     }",
          "371:     with patch.dict(gitfs.__opts__, opts):",
          "372:         gitfs.update()",
          "373:         ret = gitfs.envs(ignore_cache=True)",
          "374:         # Since we are restricting to tags only, the tag should appear in",
          "375:         # the envs list, but the branches should not.",
          "376:         assert ret == [\"base\", \"foo\"]",
          "379: @pytest.mark.slow_test",
          "380: def test_saltenv_blacklist(unicode_dirname):",
          "381:     \"\"\"",
          "382:     test saltenv_blacklist",
          "383:     \"\"\"",
          "384:     opts = {\"gitfs_saltenv_blacklist\": \"base\"}",
          "385:     with patch.dict(gitfs.__opts__, opts):",
          "386:         gitfs.update()",
          "387:         ret = gitfs.envs(ignore_cache=True)",
          "388:         assert \"base\" not in ret",
          "389:         assert unicode_dirname in ret",
          "390:         assert \"mytag\" in ret",
          "393: @pytest.mark.slow_test",
          "394: def test_saltenv_whitelist(unicode_dirname):",
          "395:     \"\"\"",
          "396:     test saltenv_whitelist",
          "397:     \"\"\"",
          "398:     opts = {\"gitfs_saltenv_whitelist\": \"base\"}",
          "399:     with patch.dict(gitfs.__opts__, opts):",
          "400:         gitfs.update()",
          "401:         ret = gitfs.envs(ignore_cache=True)",
          "402:         assert \"base\" in ret",
          "403:         assert unicode_dirname not in ret",
          "404:         assert \"mytag\" not in ret",
          "407: @pytest.mark.slow_test",
          "408: def test_env_deprecated_opts(unicode_dirname):",
          "409:     \"\"\"",
          "410:     ensure deprecated options gitfs_env_whitelist",
          "411:     and gitfs_env_blacklist do not cause gitfs to",
          "412:     not load.",
          "413:     \"\"\"",
          "414:     opts = {",
          "415:         \"gitfs_env_whitelist\": \"base\",",
          "416:         \"gitfs_env_blacklist\": \"\",",
          "417:     }",
          "418:     with patch.dict(gitfs.__opts__, opts):",
          "419:         gitfs.update()",
          "420:         ret = gitfs.envs(ignore_cache=True)",
          "421:         assert \"base\" in ret",
          "422:         assert unicode_dirname in ret",
          "423:         assert \"mytag\" in ret",
          "426: @pytest.mark.slow_test",
          "427: def test_disable_saltenv_mapping_global_with_mapping_defined_per_remote(repo_dir):",
          "428:     \"\"\"",
          "429:     Test the global gitfs_disable_saltenv_mapping config option, combined",
          "430:     with the per-saltenv mapping being defined in the remote itself via the",
          "431:     \"saltenv\" per-remote option.",
          "432:     \"\"\"",
          "433:     opts = {",
          "434:         \"gitfs_disable_saltenv_mapping\": True,",
          "435:         \"gitfs_remotes\": [",
          "436:             {repo_dir: [{\"saltenv\": [{\"bar\": [{\"ref\": \"somebranch\"}]}]}]}",
          "437:         ],",
          "438:     }",
          "439:     with patch.dict(gitfs.__opts__, opts):",
          "440:         gitfs.update()",
          "441:         ret = gitfs.envs(ignore_cache=True)",
          "442:         # Since we are restricting to tags only, the tag should appear in",
          "443:         # the envs list, but the branches should not.",
          "444:         assert ret == [\"bar\", \"base\"]",
          "447: @pytest.mark.slow_test",
          "448: def test_disable_saltenv_mapping_per_remote_with_mapping_defined_globally(repo_dir):",
          "449:     \"\"\"",
          "450:     Test the per-remote disable_saltenv_mapping config option, combined",
          "451:     with the per-saltenv mapping being defined in the global gitfs_saltenv",
          "452:     option.",
          "453:     \"\"\"",
          "454:     opts = {",
          "455:         \"gitfs_remotes\": [{repo_dir: [{\"disable_saltenv_mapping\": True}]}],",
          "456:         \"gitfs_saltenv\": [{\"hello\": [{\"ref\": \"somebranch\"}]}],",
          "457:     }",
          "459:     with patch.dict(gitfs.__opts__, opts):",
          "460:         gitfs.update()",
          "461:         ret = gitfs.envs(ignore_cache=True)",
          "462:         # Since we are restricting to tags only, the tag should appear in",
          "463:         # the envs list, but the branches should not.",
          "464:         assert ret == [\"base\", \"hello\"]",
          "467: @pytest.mark.slow_test",
          "468: def test_disable_saltenv_mapping_per_remote_with_mapping_defined_per_remote(repo_dir):",
          "469:     \"\"\"",
          "470:     Test the per-remote disable_saltenv_mapping config option, combined",
          "471:     with the per-saltenv mapping being defined in the remote itself via the",
          "472:     \"saltenv\" per-remote option.",
          "473:     \"\"\"",
          "474:     opts = {",
          "475:         \"gitfs_remotes\": [",
          "476:             {",
          "477:                 repo_dir: [",
          "478:                     {\"disable_saltenv_mapping\": True},",
          "479:                     {\"saltenv\": [{\"world\": [{\"ref\": \"somebranch\"}]}]},",
          "480:                 ]",
          "481:             }",
          "482:         ]",
          "483:     }",
          "484:     with patch.dict(gitfs.__opts__, opts):",
          "485:         gitfs.update()",
          "486:         ret = gitfs.envs(ignore_cache=True)",
          "487:         # Since we are restricting to tags only, the tag should appear in",
          "488:         # the envs list, but the branches should not.",
          "489:         assert ret == [\"base\", \"world\"]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py||tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py": [
          "File: tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py -> tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import textwrap",
          "3: import pytest",
          "5: import salt.ext.tornado.ioloop",
          "6: import salt.fileserver.gitfs as gitfs",
          "7: import salt.utils.files",
          "8: import salt.utils.gitfs",
          "9: import salt.utils.platform",
          "10: import salt.utils.win_functions",
          "11: import salt.utils.yaml",
          "12: from salt.utils.gitfs import GITPYTHON_MINVER, GITPYTHON_VERSION",
          "13: from tests.support.mock import patch",
          "15: try:",
          "16:     # pylint: disable=unused-import",
          "17:     import git",
          "19:     # We still need to use GitPython here for temp repo setup, so we do need to",
          "20:     # actually import it. But we don't need import pygit2 in this module, we",
          "21:     # can just use the LooseVersion instances imported along with",
          "22:     # salt.utils.gitfs to check if we have a compatible version.",
          "23:     HAS_GITPYTHON = GITPYTHON_VERSION >= GITPYTHON_MINVER",
          "24: except (ImportError, AttributeError):",
          "25:     HAS_GITPYTHON = False",
          "28: pytestmark = [",
          "29:     pytest.mark.skipif(",
          "30:         not HAS_GITPYTHON, reason=\"GitPython >= {} required\".format(GITPYTHON_MINVER)",
          "31:     )",
          "32: ]",
          "35: @pytest.fixture",
          "36: def configure_loader_modules(tmp_path):",
          "37:     opts = {",
          "38:         \"sock_dir\": str(tmp_path / \"sock_dir\"),",
          "39:         \"gitfs_remotes\": [\"file://\" + str(tmp_path / \"repo_dir\")],",
          "40:         \"cachedir\": str(tmp_path / \"cache_dir\"),",
          "41:         \"gitfs_root\": \"\",",
          "42:         \"fileserver_backend\": [\"gitfs\"],",
          "43:         \"gitfs_base\": \"master\",",
          "44:         \"gitfs_fallback\": \"\",",
          "45:         \"fileserver_events\": True,",
          "46:         \"transport\": \"zeromq\",",
          "47:         \"gitfs_mountpoint\": \"\",",
          "48:         \"gitfs_saltenv\": [],",
          "49:         \"gitfs_saltenv_whitelist\": [],",
          "50:         \"gitfs_saltenv_blacklist\": [],",
          "51:         \"gitfs_user\": \"\",",
          "52:         \"gitfs_password\": \"\",",
          "53:         \"gitfs_insecure_auth\": False,",
          "54:         \"gitfs_privkey\": \"\",",
          "55:         \"gitfs_pubkey\": \"\",",
          "56:         \"gitfs_passphrase\": \"\",",
          "57:         \"gitfs_refspecs\": [",
          "58:             \"+refs/heads/*:refs/remotes/origin/*\",",
          "59:             \"+refs/tags/*:refs/tags/*\",",
          "60:         ],",
          "61:         \"gitfs_ssl_verify\": True,",
          "62:         \"gitfs_disable_saltenv_mapping\": False,",
          "63:         \"gitfs_ref_types\": [\"branch\", \"tag\", \"sha\"],",
          "64:         \"gitfs_update_interval\": 60,",
          "65:         \"__role\": \"master\",",
          "66:     }",
          "67:     if salt.utils.platform.is_windows():",
          "68:         opts[\"gitfs_remotes\"] = opts[\"gitfs_remotes\"].replace(\"\\\\\", \"/\")",
          "70:     return {gitfs: {\"__opts__\": opts}}",
          "73: @pytest.fixture(scope=\"module\", autouse=True)",
          "74: def clear_instance_map():",
          "75:     try:",
          "76:         del salt.utils.gitfs.GitFS.instance_map[",
          "77:             salt.ext.tornado.ioloop.IOLoop.current()",
          "78:         ]",
          "79:     except KeyError:",
          "80:         pass",
          "83: def test_per_saltenv_config():",
          "84:     opts_override = textwrap.dedent(",
          "85:         \"\"\"",
          "86:         gitfs_root: salt",
          "88:         gitfs_saltenv:",
          "89:           - baz:",
          "90:             # when loaded, the \"salt://\" prefix will be removed",
          "91:             - mountpoint: salt://baz_mountpoint",
          "92:             - ref: baz_branch",
          "93:             - root: baz_root",
          "95:         gitfs_remotes:",
          "97:           - file://{0}tmp/repo1:",
          "98:             - saltenv:",
          "99:               - foo:",
          "100:                 - ref: foo_branch",
          "101:                 - root: foo_root",
          "103:           - file://{0}tmp/repo2:",
          "104:             - mountpoint: repo2",
          "105:             - saltenv:",
          "106:               - baz:",
          "107:                 - mountpoint: abc",
          "108:     \"\"\".format(",
          "109:             \"/\" if salt.utils.platform.is_windows() else \"\"",
          "110:         )",
          "111:     )",
          "112:     with patch.dict(gitfs.__opts__, salt.utils.yaml.safe_load(opts_override)):",
          "113:         git_fs = salt.utils.gitfs.GitFS(",
          "114:             gitfs.__opts__,",
          "115:             gitfs.__opts__[\"gitfs_remotes\"],",
          "116:             per_remote_overrides=gitfs.PER_REMOTE_OVERRIDES,",
          "117:             per_remote_only=gitfs.PER_REMOTE_ONLY,",
          "118:         )",
          "120:     # repo1 (branch: foo)",
          "121:     # The mountpoint should take the default (from gitfs_mountpoint), while",
          "122:     # ref and root should take the per-saltenv params.",
          "123:     assert git_fs.remotes[0].mountpoint(\"foo\") == \"\"",
          "124:     assert git_fs.remotes[0].ref(\"foo\") == \"foo_branch\"",
          "125:     assert git_fs.remotes[0].root(\"foo\") == \"foo_root\"",
          "127:     # repo1 (branch: bar)",
          "128:     # The 'bar' branch does not have a per-saltenv configuration set, so",
          "129:     # each of the below values should fall back to global values.",
          "130:     assert git_fs.remotes[0].mountpoint(\"bar\") == \"\"",
          "131:     assert git_fs.remotes[0].ref(\"bar\") == \"bar\"",
          "132:     assert git_fs.remotes[0].root(\"bar\") == \"salt\"",
          "134:     # repo1 (branch: baz)",
          "135:     # The 'baz' branch does not have a per-saltenv configuration set, but",
          "136:     # it is defined in the gitfs_saltenv parameter, so the values",
          "137:     # from that parameter should be returned.",
          "138:     assert git_fs.remotes[0].mountpoint(\"baz\") == \"baz_mountpoint\"",
          "139:     assert git_fs.remotes[0].ref(\"baz\") == \"baz_branch\"",
          "140:     assert git_fs.remotes[0].root(\"baz\") == \"baz_root\"",
          "142:     # repo2 (branch: foo)",
          "143:     # The mountpoint should take the per-remote mountpoint value of",
          "144:     # 'repo2', while ref and root should fall back to global values.",
          "145:     assert git_fs.remotes[1].mountpoint(\"foo\") == \"repo2\"",
          "146:     assert git_fs.remotes[1].ref(\"foo\") == \"foo\"",
          "147:     assert git_fs.remotes[1].root(\"foo\") == \"salt\"",
          "149:     # repo2 (branch: bar)",
          "150:     # The 'bar' branch does not have a per-saltenv configuration set, so",
          "151:     # the mountpoint should take the per-remote mountpoint value of",
          "152:     # 'repo2', while ref and root should fall back to global values.",
          "153:     assert git_fs.remotes[1].mountpoint(\"bar\") == \"repo2\"",
          "154:     assert git_fs.remotes[1].ref(\"bar\") == \"bar\"",
          "155:     assert git_fs.remotes[1].root(\"bar\") == \"salt\"",
          "157:     # repo2 (branch: baz)",
          "158:     # The 'baz' branch has the mountpoint configured as a per-saltenv",
          "159:     # parameter. The other two should take the values defined in",
          "160:     # gitfs_saltenv.",
          "161:     assert git_fs.remotes[1].mountpoint(\"baz\") == \"abc\"",
          "162:     assert git_fs.remotes[1].ref(\"baz\") == \"baz_branch\"",
          "163:     assert git_fs.remotes[1].root(\"baz\") == \"baz_root\"",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"",
          "2:     :codeauthor: Mike Place <mp@saltstack.com>",
          "3: \"\"\"",
          "5: import copy",
          "6: import pathlib",
          "7: import shutil",
          "8: import textwrap",
          "10: import pytest",
          "12: import salt.fileclient",
          "13: import salt.fileserver.roots as roots",
          "14: import salt.utils.files",
          "15: import salt.utils.hashutils",
          "16: import salt.utils.platform",
          "17: import salt.utils.stringutils",
          "18: from tests.support.mock import MagicMock, mock_open, patch",
          "21: @pytest.fixture(scope=\"module\")",
          "22: def unicode_filename():",
          "23:     return \"\u043f\u0438\u0442\u043e\u043d.txt\"",
          "26: @pytest.fixture(scope=\"module\")",
          "27: def unicode_dirname():",
          "28:     return \"\u0441\u043e\u043b\u044c\"",
          "31: @pytest.fixture(autouse=True)",
          "32: def testfile(tmp_path):",
          "33:     fp = tmp_path / \"testfile\"",
          "34:     fp.write_text(\"This is a testfile\")",
          "35:     return fp",
          "38: @pytest.fixture(autouse=True)",
          "39: def tmp_state_tree(tmp_path, testfile, unicode_filename, unicode_dirname):",
          "40:     dirname = tmp_path / \"roots_tmp_state_tree\"",
          "41:     dirname.mkdir(parents=True, exist_ok=True)",
          "42:     shutil.copyfile(str(testfile), str(dirname / testfile.name))",
          "43:     unicode_dir = dirname / unicode_dirname",
          "44:     unicode_dir.mkdir(parents=True, exist_ok=True)",
          "45:     (dirname / unicode_filename).write_text(\"this is a unicode file\")",
          "46:     (unicode_dir / unicode_filename).write_text(",
          "47:         \"this is a unicode file in a unicode env\"",
          "48:     )",
          "49:     (unicode_dir / \"notunicode\").write_text(",
          "50:         \"this is NOT a unicode file in a unicode env\"",
          "51:     )",
          "53:     return dirname",
          "56: @pytest.fixture",
          "57: def configure_loader_modules(tmp_state_tree, temp_salt_master):",
          "58:     opts = temp_salt_master.config.copy()",
          "59:     overrides = {\"file_roots\": {\"base\": [str(tmp_state_tree)]}}",
          "60:     opts.update(overrides)",
          "61:     return {roots: {\"__opts__\": opts}}",
          "64: def test_file_list(unicode_filename):",
          "65:     ret = roots.file_list({\"saltenv\": \"base\"})",
          "66:     assert \"testfile\" in ret",
          "67:     assert unicode_filename in ret",
          "70: def test_find_file(tmp_state_tree):",
          "71:     ret = roots.find_file(\"testfile\")",
          "72:     assert \"testfile\" == ret[\"rel\"]",
          "74:     full_path_to_file = str(tmp_state_tree / \"testfile\")",
          "75:     assert full_path_to_file == ret[\"path\"]",
          "78: def test_serve_file(testfile):",
          "79:     with patch.dict(roots.__opts__, {\"file_buffer_size\": 262144}):",
          "80:         load = {",
          "81:             \"saltenv\": \"base\",",
          "82:             \"path\": str(testfile),",
          "83:             \"loc\": 0,",
          "84:         }",
          "85:         fnd = {\"path\": str(testfile), \"rel\": \"testfile\"}",
          "86:         ret = roots.serve_file(load, fnd)",
          "88:         with salt.utils.files.fopen(str(testfile), \"rb\") as fp_:",
          "89:             data = fp_.read()",
          "91:         assert ret == {\"data\": data, \"dest\": \"testfile\"}",
          "94: def test_envs(unicode_dirname):",
          "95:     opts = {\"file_roots\": copy.copy(roots.__opts__[\"file_roots\"])}",
          "96:     opts[\"file_roots\"][unicode_dirname] = opts[\"file_roots\"][\"base\"]",
          "97:     with patch.dict(roots.__opts__, opts):",
          "98:         ret = roots.envs()",
          "99:     assert \"base\" in ret",
          "100:     assert unicode_dirname in ret",
          "103: def test_file_hash(testfile):",
          "104:     load = {",
          "105:         \"saltenv\": \"base\",",
          "106:         \"path\": str(testfile),",
          "107:     }",
          "108:     fnd = {\"path\": str(testfile), \"rel\": \"testfile\"}",
          "109:     ret = roots.file_hash(load, fnd)",
          "111:     # Hashes are different in Windows. May be how git translates line",
          "112:     # endings",
          "113:     with salt.utils.files.fopen(str(testfile), \"rb\") as fp_:",
          "114:         hsum = salt.utils.hashutils.sha256_digest(fp_.read())",
          "116:     assert ret == {\"hsum\": hsum, \"hash_type\": \"sha256\"}",
          "119: def test_file_list_emptydirs(tmp_state_tree):",
          "120:     empty_dir = tmp_state_tree / \"empty_dir\"",
          "121:     empty_dir.mkdir(parents=True, exist_ok=True)",
          "122:     ret = roots.file_list_emptydirs({\"saltenv\": \"base\"})",
          "123:     assert \"empty_dir\" in ret",
          "126: def test_file_list_with_slash(unicode_filename):",
          "127:     opts = {\"file_roots\": copy.copy(roots.__opts__[\"file_roots\"])}",
          "128:     opts[\"file_roots\"][\"foo/bar\"] = opts[\"file_roots\"][\"base\"]",
          "129:     load = {",
          "130:         \"saltenv\": \"foo/bar\",",
          "131:     }",
          "132:     with patch.dict(roots.__opts__, opts):",
          "133:         ret = roots.file_list(load)",
          "134:     assert \"testfile\" in ret",
          "135:     assert unicode_filename in ret",
          "138: def test_dir_list(tmp_state_tree, unicode_dirname):",
          "139:     empty_dir = tmp_state_tree / \"empty_dir\"",
          "140:     empty_dir.mkdir(parents=True, exist_ok=True)",
          "141:     ret = roots.dir_list({\"saltenv\": \"base\"})",
          "142:     assert \"empty_dir\" in ret",
          "143:     assert unicode_dirname in ret",
          "146: def test_symlink_list(tmp_state_tree):",
          "147:     source_sym = tmp_state_tree / \"source_sym\"",
          "148:     source_sym.write_text(\"\")",
          "149:     dest_sym = tmp_state_tree / \"dest_sym\"",
          "150:     dest_sym.symlink_to(str(source_sym))",
          "151:     ret = roots.symlink_list({\"saltenv\": \"base\"})",
          "152:     assert ret == {\"dest_sym\": str(source_sym)}",
          "155: def test_dynamic_file_roots(tmp_path):",
          "156:     dyn_root_dir = tmp_path / \"dyn_root_dir\"",
          "157:     dyn_root_dir.mkdir(parents=True, exist_ok=True)",
          "158:     top_sls = dyn_root_dir / \"top.sls\"",
          "159:     with salt.utils.files.fopen(str(top_sls), \"w\") as fp_:",
          "160:         fp_.write(\"{{saltenv}}:\\n  '*':\\n    - dynamo\\n\")",
          "161:     dynamo_sls = dyn_root_dir / \"dynamo.sls\"",
          "162:     with salt.utils.files.fopen(str(dynamo_sls), \"w\") as fp_:",
          "163:         fp_.write(\"foo:\\n  test.nop\\n\")",
          "164:     opts = {\"file_roots\": copy.copy(roots.__opts__[\"file_roots\"])}",
          "165:     opts[\"file_roots\"][\"__env__\"] = [str(dyn_root_dir)]",
          "166:     with patch.dict(roots.__opts__, opts):",
          "167:         ret1 = roots.find_file(\"dynamo.sls\", \"dyn\")",
          "168:         ret2 = roots.file_list({\"saltenv\": \"dyn\"})",
          "169:     assert \"dynamo.sls\" == ret1[\"rel\"]",
          "170:     assert \"top.sls\" in ret2",
          "171:     assert \"dynamo.sls\" in ret2",
          "174: pytest.mark.skipif(",
          "175:     salt.utils.platform.is_windows(),",
          "176:     reason=\"Windows does not support this master function\",",
          "177: )",
          "180: def test_update_no_change():",
          "181:     # process all changes that have happen",
          "182:     # changes will always take place the first time during testing",
          "183:     ret = roots.update()",
          "184:     assert ret[\"changed\"] is True",
          "186:     # check if no changes took place",
          "187:     ret = roots.update()",
          "188:     assert ret[\"changed\"] is False",
          "189:     assert ret[\"files\"][\"changed\"] == []",
          "190:     assert ret[\"files\"][\"removed\"] == []",
          "191:     assert ret[\"files\"][\"added\"] == []",
          "194: def test_update_mtime_map():",
          "195:     \"\"\"",
          "196:     Test that files with colons in the filename are properly handled in the",
          "197:     mtime_map, and that they are properly identified as having changed.",
          "198:     \"\"\"",
          "199:     mtime_map_path = pathlib.Path(roots.__opts__[\"cachedir\"], \"roots\", \"mtime_map\")",
          "200:     mtime_map_mock = mock_open(",
          "201:         read_data={",
          "202:             str(mtime_map_path): textwrap.dedent(",
          "203:                 \"\"\"\\",
          "204:                 /srv/salt/kleine_Datei.txt:1594263154.0469685",
          "205:                 /srv/salt/gro\u00dfe:Datei.txt:1594263160.9336357",
          "206:                 \"\"\"",
          "207:             ),",
          "208:         }",
          "209:     )",
          "210:     new_mtime_map = {",
          "211:         \"/srv/salt/kleine_Datei.txt\": 1594263154.0469685,",
          "212:         \"/srv/salt/gro\u00dfe:Datei.txt\": 1594263261.0616212,",
          "213:     }",
          "215:     with patch(",
          "216:         \"salt.fileserver.reap_fileserver_cache_dir\", MagicMock(return_value=True)",
          "217:     ), patch(",
          "218:         \"salt.fileserver.generate_mtime_map\", MagicMock(return_value=new_mtime_map)",
          "219:     ), patch.dict(",
          "220:         roots.__opts__, {\"fileserver_events\": False}",
          "221:     ), patch(",
          "222:         \"salt.utils.files.fopen\", mtime_map_mock",
          "223:     ):",
          "224:         ret = roots.update()",
          "226:     # Confirm the expected return from the function",
          "227:     assert ret == {",
          "228:         \"changed\": True,",
          "229:         \"files\": {",
          "230:             \"changed\": [\"/srv/salt/gro\u00dfe:Datei.txt\"],",
          "231:             \"removed\": [],",
          "232:             \"added\": [],",
          "233:         },",
          "234:         \"backend\": \"roots\",",
          "235:     }, ret",
          "237:     # Confirm that the new values were written to the mtime_map. Sort both",
          "238:     # lists of lines to account for variances in dictionary iteration order",
          "239:     # between Python releases.",
          "240:     lines_written = sorted(mtime_map_mock.write_calls())",
          "241:     expected = sorted(",
          "242:         salt.utils.stringutils.to_bytes(\"{key}:{val}\\n\".format(key=key, val=val))",
          "243:         for key, val in new_mtime_map.items()",
          "244:     )",
          "245:     assert lines_written == expected, lines_written",
          "248: def test_update_mtime_map_unicode_error(tmp_path):",
          "249:     \"\"\"",
          "250:     Test that a malformed mtime_map (which causes an UnicodeDecodeError",
          "251:     exception) is handled properly.",
          "252:     \"\"\"",
          "253:     new_mtime_map = {",
          "254:         \"/srv/salt/gro\u00dfe:Datei.txt\": 1594263261.0616212,",
          "255:     }",
          "256:     tmpdirname = tmp_path / \"unicode_error\"",
          "257:     mtime_map_path = tmpdirname / \"roots\" / \"mtime_map\"",
          "258:     mtime_map_path.parent.mkdir(parents=True, exist_ok=True)",
          "259:     with salt.utils.files.fopen(str(mtime_map_path), \"wb\") as fp:",
          "260:         fp.write(b\"\\x9c\")",
          "262:     with patch(",
          "263:         \"salt.fileserver.reap_fileserver_cache_dir\",",
          "264:         MagicMock(return_value=True),",
          "265:     ), patch(",
          "266:         \"salt.fileserver.generate_mtime_map\",",
          "267:         MagicMock(return_value=new_mtime_map),",
          "268:     ), patch.dict(",
          "269:         roots.__opts__,",
          "270:         {\"fileserver_events\": False, \"cachedir\": str(tmpdirname)},",
          "271:     ):",
          "272:         ret = roots.update()",
          "274:     assert ret == {",
          "275:         \"changed\": True,",
          "276:         \"files\": {",
          "277:             \"changed\": [],",
          "278:             \"removed\": [],",
          "279:             \"added\": [\"/srv/salt/gro\u00dfe:Datei.txt\"],",
          "280:         },",
          "281:         \"backend\": \"roots\",",
          "282:     }",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_s3fs.py||tests/pytests/unit/fileserver/test_s3fs.py": [
          "File: tests/pytests/unit/fileserver/test_s3fs.py -> tests/pytests/unit/fileserver/test_s3fs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import pytest",
          "3: import salt.fileserver.s3fs as s3fs",
          "6: @pytest.fixture",
          "7: def configure_loader_modules(tmp_path):",
          "8:     opts = {",
          "9:         \"cachedir\": tmp_path,",
          "10:     }",
          "11:     return {s3fs: {\"__opts__\": opts}}",
          "14: def test_cache_round_trip():",
          "15:     metadata = {\"foo\": \"bar\"}",
          "16:     cache_file = s3fs._get_cached_file_name(\"base\", \"fake_bucket\", \"some_file\")",
          "18:     s3fs._write_buckets_cache_file(metadata, cache_file)",
          "19:     assert s3fs._read_buckets_cache_file(cache_file) == metadata",
          "22: def test_ignore_pickle_load_exceptions():",
          "23:     #  TODO: parameterized test with patched pickle.load that raises the",
          "24:     #  various allowable exception from _read_buckets_cache_file",
          "25:     pass",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_svnfs.py||tests/pytests/unit/fileserver/test_svnfs.py": [
          "File: tests/pytests/unit/fileserver/test_svnfs.py -> tests/pytests/unit/fileserver/test_svnfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import pytest",
          "3: import salt.fileserver.svnfs as svnfs",
          "4: from tests.support.mock import patch",
          "7: @pytest.fixture",
          "8: def configure_loader_modules():",
          "9:     return {svnfs: {}}",
          "12: def test_env_is_exposed():",
          "13:     \"\"\"",
          "14:     test _env_is_exposed method when",
          "15:     base is in whitelist",
          "16:     \"\"\"",
          "17:     with patch.dict(",
          "18:         svnfs.__opts__,",
          "19:         {\"svnfs_saltenv_whitelist\": \"base\", \"svnfs_saltenv_blacklist\": \"\"},",
          "20:     ):",
          "21:         assert svnfs._env_is_exposed(\"base\")",
          "24: def test_env_is_exposed_blacklist():",
          "25:     \"\"\"",
          "26:     test _env_is_exposed method when",
          "27:     base is in blacklist",
          "28:     \"\"\"",
          "29:     with patch.dict(",
          "30:         svnfs.__opts__,",
          "31:         {\"svnfs_saltenv_whitelist\": \"\", \"svnfs_saltenv_blacklist\": \"base\"},",
          "32:     ):",
          "33:         assert not svnfs._env_is_exposed(\"base\")",
          "",
          "---------------"
        ],
        "tests/unit/fileserver/test_gitfs.py||tests/unit/fileserver/test_gitfs.py": [
          "File: tests/unit/fileserver/test_gitfs.py -> tests/unit/fileserver/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/fileserver/test_roots.py||tests/unit/fileserver/test_roots.py": [
          "File: tests/unit/fileserver/test_roots.py -> tests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/fileserver/test_s3fs.py||tests/unit/fileserver/test_s3fs.py": [
          "File: tests/unit/fileserver/test_s3fs.py -> tests/unit/fileserver/test_s3fs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/fileserver/test_svnfs.py||tests/unit/fileserver/test_svnfs.py": [
          "File: tests/unit/fileserver/test_svnfs.py -> tests/unit/fileserver/test_svnfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1694f8464383f85fed696bc0d80849e7cd94eb10",
      "candidate_info": {
        "commit_hash": "1694f8464383f85fed696bc0d80849e7cd94eb10",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/1694f8464383f85fed696bc0d80849e7cd94eb10",
        "files": [
          "salt/fileserver/roots.py",
          "tests/pytests/unit/fileserver/test_roots.py"
        ],
        "message": "roots fileserver fix path verification for symlinks with destination outside of root",
        "before_after_code_files": [
          "salt/fileserver/roots.py||salt/fileserver/roots.py",
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "salt/fileserver/roots.py||salt/fileserver/roots.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "salt/fileserver/roots.py||salt/fileserver/roots.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "salt/fileserver/roots.py||salt/fileserver/roots.py": [
          "File: salt/fileserver/roots.py -> salt/fileserver/roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         full = os.path.join(root, path)",
          "103:         # Refuse to serve file that is not under the root.",
          "105:             continue",
          "107:         if os.path.isfile(full) and not salt.fileserver.is_file_ignored(__opts__, full):",
          "",
          "[Removed Lines]",
          "104:         if not salt.utils.verify.clean_path(root, full, subdir=True):",
          "",
          "[Added Lines]",
          "104:         if not salt.utils.verify.clean_path(",
          "105:             root, full, subdir=True, realpath=not __opts__[\"fileserver_followsymlinks\"]",
          "106:         ):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:         if saltenv == \"__env__\":",
          "150:             root = root.replace(\"__env__\", actual_saltenv)",
          "151:         # Refuse to serve file that is not under the root.",
          "153:             file_in_root = True",
          "154:     if not file_in_root:",
          "155:         return ret",
          "",
          "[Removed Lines]",
          "152:         if salt.utils.verify.clean_path(root, fpath, subdir=True):",
          "",
          "[Added Lines]",
          "154:         if salt.utils.verify.clean_path(",
          "155:             root, fpath, subdir=True, realpath=not __opts__[\"fileserver_followsymlinks\"]",
          "156:         ):",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         assert ret == {\"data\": \"\", \"dest\": \"..\\\\bar\"}",
          "316:     else:",
          "317:         assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320: def test_find_file_symlink_destination_not_in_root(tmp_state_tree):",
          "321:     dirname = pathlib.Path(tmp_state_tree).parent / \"foo\"",
          "322:     dirname.mkdir(parents=True, exist_ok=True)",
          "323:     testfile = dirname / \"testfile\"",
          "324:     testfile.write_text(\"testfile\")",
          "325:     symlink = tmp_state_tree / \"bar\"",
          "326:     symlink.symlink_to(str(dirname))",
          "327:     ret = roots.find_file(\"bar/testfile\")",
          "328:     assert ret[\"path\"] == str(symlink / \"testfile\")",
          "329:     assert ret[\"rel\"] == \"bar/testfile\"",
          "332: def test_serve_file_symlink_destination_not_in_root(tmp_state_tree):",
          "333:     dirname = pathlib.Path(tmp_state_tree).parent / \"foo\"",
          "334:     dirname.mkdir(parents=True, exist_ok=True)",
          "335:     testfile = dirname / \"testfile\"",
          "336:     testfile.write_text(\"testfile\")",
          "337:     symlink = tmp_state_tree / \"bar\"",
          "338:     symlink.symlink_to(str(dirname))",
          "339:     load = {\"path\": \"bar/testfile\", \"saltenv\": \"base\", \"loc\": 0}",
          "340:     fnd = {\"path\": str(symlink / \"testfile\"), \"rel\": \"bar/testfile\"}",
          "341:     ret = roots.serve_file(load, fnd)",
          "342:     assert ret == {\"data\": b\"testfile\", \"dest\": \"bar/testfile\"}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34439f7750746e128235c37d20ca4408c5b4cb1a",
      "candidate_info": {
        "commit_hash": "34439f7750746e128235c37d20ca4408c5b4cb1a",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/34439f7750746e128235c37d20ca4408c5b4cb1a",
        "files": [
          "salt/fileserver/roots.py",
          "tests/pytests/unit/fileserver/test_roots.py"
        ],
        "message": "roots fileserver fix path verification for symlinks with destination outside of root",
        "before_after_code_files": [
          "salt/fileserver/roots.py||salt/fileserver/roots.py",
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "salt/fileserver/roots.py||salt/fileserver/roots.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ],
          "candidate": [
            "salt/fileserver/roots.py||salt/fileserver/roots.py",
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py"
          ]
        }
      },
      "candidate_diff": {
        "salt/fileserver/roots.py||salt/fileserver/roots.py": [
          "File: salt/fileserver/roots.py -> salt/fileserver/roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         full = os.path.join(root, path)",
          "103:         # Refuse to serve file that is not under the root.",
          "105:             continue",
          "107:         if os.path.isfile(full) and not salt.fileserver.is_file_ignored(__opts__, full):",
          "",
          "[Removed Lines]",
          "104:         if not salt.utils.verify.clean_path(root, full, subdir=True):",
          "",
          "[Added Lines]",
          "104:         if not salt.utils.verify.clean_path(",
          "105:             root, full, subdir=True, realpath=not __opts__[\"fileserver_followsymlinks\"]",
          "106:         ):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:         if saltenv == \"__env__\":",
          "150:             root = root.replace(\"__env__\", actual_saltenv)",
          "151:         # Refuse to serve file that is not under the root.",
          "153:             file_in_root = True",
          "154:     if not file_in_root:",
          "155:         return ret",
          "",
          "[Removed Lines]",
          "152:         if salt.utils.verify.clean_path(root, fpath, subdir=True):",
          "",
          "[Added Lines]",
          "154:         if salt.utils.verify.clean_path(",
          "155:             root, fpath, subdir=True, realpath=not __opts__[\"fileserver_followsymlinks\"]",
          "156:         ):",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         assert ret == {\"data\": \"\", \"dest\": \"..\\\\bar\"}",
          "316:     else:",
          "317:         assert ret == {\"data\": \"\", \"dest\": \"../bar\"}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320: def test_find_file_symlink_destination_not_in_root(tmp_state_tree):",
          "321:     dirname = pathlib.Path(tmp_state_tree).parent / \"foo\"",
          "322:     dirname.mkdir(parents=True, exist_ok=True)",
          "323:     testfile = dirname / \"testfile\"",
          "324:     testfile.write_text(\"testfile\")",
          "325:     symlink = tmp_state_tree / \"bar\"",
          "326:     symlink.symlink_to(str(dirname))",
          "327:     ret = roots.find_file(\"bar/testfile\")",
          "328:     assert ret[\"path\"] == str(symlink / \"testfile\")",
          "329:     assert ret[\"rel\"] == \"bar/testfile\"",
          "332: def test_serve_file_symlink_destination_not_in_root(tmp_state_tree):",
          "333:     dirname = pathlib.Path(tmp_state_tree).parent / \"foo\"",
          "334:     dirname.mkdir(parents=True, exist_ok=True)",
          "335:     testfile = dirname / \"testfile\"",
          "336:     testfile.write_text(\"testfile\")",
          "337:     symlink = tmp_state_tree / \"bar\"",
          "338:     symlink.symlink_to(str(dirname))",
          "339:     load = {\"path\": \"bar/testfile\", \"saltenv\": \"base\", \"loc\": 0}",
          "340:     fnd = {\"path\": str(symlink / \"testfile\"), \"rel\": \"bar/testfile\"}",
          "341:     ret = roots.serve_file(load, fnd)",
          "342:     assert ret == {\"data\": b\"testfile\", \"dest\": \"bar/testfile\"}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3515c78cfc829840ffe007ff9d5b433c1ce7a496",
      "candidate_info": {
        "commit_hash": "3515c78cfc829840ffe007ff9d5b433c1ce7a496",
        "repo": "saltstack/salt",
        "commit_url": "https://github.com/saltstack/salt/commit/3515c78cfc829840ffe007ff9d5b433c1ce7a496",
        "files": [
          "salt/auth/django.py",
          "salt/auth/keystone.py",
          "salt/auth/ldap.py",
          "salt/auth/mysql.py",
          "salt/auth/yubico.py",
          "salt/beacons/adb.py",
          "salt/beacons/aix_account.py",
          "salt/beacons/avahi_announce.py",
          "salt/beacons/bonjour_announce.py",
          "salt/beacons/btmp.py",
          "salt/beacons/glxinfo.py",
          "salt/beacons/haproxy.py",
          "salt/beacons/junos_rre_keys.py",
          "salt/beacons/smartos_imgadm.py",
          "salt/beacons/smartos_vmadm.py",
          "salt/beacons/telegram_bot_msg.py",
          "salt/beacons/twilio_txt_msg.py",
          "salt/beacons/wtmp.py",
          "salt/cloud/clouds/aliyun.py",
          "salt/cloud/clouds/clc.py",
          "salt/cloud/clouds/cloudstack.py",
          "salt/cloud/clouds/digitalocean.py",
          "salt/cloud/clouds/dimensiondata.py",
          "salt/cloud/clouds/ec2.py",
          "salt/cloud/clouds/gce.py",
          "salt/cloud/clouds/gogrid.py",
          "salt/cloud/clouds/hetzner.py",
          "salt/cloud/clouds/joyent.py",
          "salt/cloud/clouds/libvirt.py",
          "salt/cloud/clouds/linode.py",
          "salt/cloud/clouds/lxc.py",
          "salt/cloud/clouds/oneandone.py",
          "salt/cloud/clouds/opennebula.py",
          "salt/cloud/clouds/openstack.py",
          "salt/cloud/clouds/packet.py",
          "salt/cloud/clouds/parallels.py",
          "salt/cloud/clouds/profitbricks.py",
          "salt/cloud/clouds/proxmox.py",
          "salt/cloud/clouds/pyrax.py",
          "salt/cloud/clouds/qingcloud.py",
          "salt/cloud/clouds/scaleway.py",
          "salt/cloud/clouds/softlayer.py",
          "salt/cloud/clouds/softlayer_hw.py",
          "salt/cloud/clouds/tencentcloud.py",
          "salt/cloud/clouds/vagrant.py",
          "salt/cloud/clouds/virtualbox.py",
          "salt/cloud/clouds/vmware.py",
          "salt/cloud/clouds/vultrpy.py",
          "salt/cloud/clouds/xen.py",
          "salt/engines/docker_events.py",
          "salt/engines/fluent.py",
          "salt/engines/http_logstash.py",
          "salt/engines/ircbot.py",
          "salt/engines/junos_syslog.py",
          "salt/engines/libvirt_events.py",
          "salt/engines/logentries.py",
          "salt/engines/logstash_engine.py",
          "salt/engines/napalm_syslog.py",
          "salt/engines/redis_sentinel.py",
          "salt/engines/slack.py",
          "salt/engines/slack_bolt_engine.py",
          "salt/engines/sqs_events.py",
          "salt/engines/stalekey.py",
          "salt/executors/docker.py",
          "salt/executors/splay.py",
          "salt/fileserver/gitfs.py",
          "salt/grains/chronos.py",
          "salt/grains/cimc.py",
          "salt/grains/esxi.py",
          "salt/grains/fibre_channel.py",
          "salt/grains/fx2.py",
          "salt/grains/iscsi.py",
          "salt/grains/junos.py",
          "salt/grains/lvm.py",
          "salt/grains/marathon.py",
          "salt/grains/mdadm.py",
          "salt/grains/mdata.py",
          "salt/grains/metadata.py",
          "salt/grains/metadata_gce.py",
          "salt/grains/napalm.py",
          "salt/grains/nvme.py",
          "salt/grains/nxos.py",
          "salt/grains/panos.py",
          "salt/grains/philips_hue.py",
          "salt/grains/rest_sample.py",
          "salt/grains/smartos.py",
          "salt/grains/ssh_sample.py",
          "salt/grains/zfs.py",
          "salt/log_handlers/fluent_mod.py",
          "salt/log_handlers/log4mongo_mod.py",
          "salt/log_handlers/logstash_mod.py",
          "salt/log_handlers/sentry_mod.py",
          "salt/matchers/compound_match.py",
          "salt/matchers/compound_pillar_exact_match.py",
          "salt/matchers/confirm_top.py",
          "salt/matchers/data_match.py",
          "salt/matchers/glob_match.py",
          "salt/matchers/grain_match.py",
          "salt/matchers/grain_pcre_match.py",
          "salt/matchers/ipcidr_match.py",
          "salt/matchers/list_match.py",
          "salt/matchers/nodegroup_match.py",
          "salt/matchers/pcre_match.py",
          "salt/matchers/pillar_exact_match.py",
          "salt/matchers/pillar_match.py",
          "salt/matchers/pillar_pcre_match.py",
          "salt/matchers/range_match.py",
          "salt/modules/acme.py",
          "salt/modules/aix_group.py",
          "salt/modules/aix_shadow.py",
          "salt/modules/aixpkg.py",
          "salt/modules/aliases.py",
          "salt/modules/alternatives.py",
          "salt/modules/ansiblegate.py",
          "salt/modules/apcups.py",
          "salt/modules/apkpkg.py",
          "salt/modules/aptly.py",
          "salt/modules/arista_pyeapi.py",
          "salt/modules/artifactory.py",
          "salt/modules/at_solaris.py",
          "salt/modules/augeas_cfg.py",
          "salt/modules/bamboohr.py",
          "salt/modules/bcache.py",
          "salt/modules/bigip.py",
          "salt/modules/bluez_bluetooth.py",
          "salt/modules/boto3_elasticache.py",
          "salt/modules/boto3_elasticsearch.py",
          "salt/modules/boto3_route53.py",
          "salt/modules/boto3_sns.py",
          "salt/modules/boto_apigateway.py",
          "salt/modules/boto_asg.py",
          "salt/modules/boto_cfn.py",
          "salt/modules/boto_cloudfront.py",
          "salt/modules/boto_cloudtrail.py",
          "salt/modules/boto_cloudwatch.py",
          "salt/modules/boto_cloudwatch_event.py",
          "salt/modules/boto_cognitoidentity.py",
          "salt/modules/boto_datapipeline.py",
          "salt/modules/boto_dynamodb.py",
          "salt/modules/boto_ec2.py",
          "salt/modules/boto_efs.py",
          "salt/modules/boto_elasticache.py",
          "salt/modules/boto_elasticsearch_domain.py",
          "salt/modules/boto_elb.py",
          "salt/modules/boto_elbv2.py",
          "salt/modules/boto_iam.py",
          "salt/modules/boto_iot.py",
          "salt/modules/boto_kinesis.py",
          "salt/modules/boto_kms.py",
          "salt/modules/boto_lambda.py",
          "salt/modules/boto_rds.py",
          "salt/modules/boto_route53.py",
          "salt/modules/boto_s3.py",
          "salt/modules/boto_s3_bucket.py",
          "salt/modules/boto_secgroup.py",
          "salt/modules/boto_sns.py",
          "salt/modules/boto_sqs.py",
          "salt/modules/boto_ssm.py",
          "salt/modules/boto_vpc.py",
          "salt/modules/bridge.py",
          "salt/modules/bsd_shadow.py",
          "salt/modules/btrfs.py",
          "salt/modules/cabal.py",
          "salt/modules/capirca_acl.py",
          "salt/modules/cassandra_cql.py",
          "salt/modules/cassandra_mod.py",
          "salt/modules/celery.py",
          "salt/modules/ceph.py",
          "salt/modules/chassis.py",
          "salt/modules/chef.py",
          "salt/modules/chocolatey.py",
          "salt/modules/chronos.py",
          "salt/modules/cimc.py",
          "salt/modules/ciscoconfparse_mod.py",
          "salt/modules/cisconso.py",
          "salt/modules/composer.py",
          "salt/modules/consul.py",
          "salt/modules/container_resource.py",
          "salt/modules/cpan.py",
          "salt/modules/cryptdev.py",
          "salt/modules/csf.py",
          "salt/modules/cyg.py",
          "salt/modules/daemontools.py",
          "salt/modules/datadog_api.py",
          "salt/modules/ddns.py",
          "salt/modules/deb_apache.py",
          "salt/modules/deb_postgres.py",
          "salt/modules/debuild_pkgbuild.py",
          "salt/modules/djangomod.py",
          "salt/modules/dnsmasq.py",
          "salt/modules/dockercompose.py",
          "salt/modules/dockermod.py",
          "salt/modules/drac.py",
          "salt/modules/dracr.py",
          "salt/modules/drbd.py",
          "salt/modules/dummyproxy_pkg.py",
          "salt/modules/dummyproxy_service.py",
          "salt/modules/ebuildpkg.py",
          "salt/modules/eix.py",
          "salt/modules/elasticsearch.py",
          "salt/modules/eselect.py",
          "salt/modules/esxcluster.py",
          "salt/modules/esxdatacenter.py",
          "salt/modules/esxi.py",
          "salt/modules/esxvm.py",
          "salt/modules/etcd_mod.py",
          "salt/modules/freebsd_sysctl.py",
          "salt/modules/freebsd_update.py",
          "salt/modules/freebsdjail.py",
          "salt/modules/freebsdkmod.py",
          "salt/modules/freebsdpkg.py",
          "salt/modules/freebsdports.py",
          "salt/modules/freebsdservice.py",
          "salt/modules/freezer.py",
          "salt/modules/gcp_addon.py",
          "salt/modules/gem.py",
          "salt/modules/genesis.py",
          "salt/modules/gentoo_service.py",
          "salt/modules/gentoolkitmod.py",
          "salt/modules/github.py",
          "salt/modules/glanceng.py",
          "salt/modules/glassfish.py",
          "salt/modules/glusterfs.py",
          "salt/modules/gnomedesktop.py",
          "salt/modules/google_chat.py",
          "salt/modules/grafana4.py",
          "salt/modules/grub_legacy.py",
          "salt/modules/hadoop.py",
          "salt/modules/haproxyconn.py",
          "salt/modules/heat.py",
          "salt/modules/helm.py",
          "salt/modules/hg.py",
          "salt/modules/icinga2.py",
          "salt/modules/ifttt.py",
          "salt/modules/ilo.py",
          "salt/modules/incron.py",
          "salt/modules/influxdb08mod.py",
          "salt/modules/influxdbmod.py",
          "salt/modules/infoblox.py",
          "salt/modules/inspector.py",
          "salt/modules/introspect.py",
          "salt/modules/iosconfig.py",
          "salt/modules/jboss7.py",
          "salt/modules/jboss7_cli.py",
          "salt/modules/jenkinsmod.py",
          "salt/modules/jira_mod.py",
          "salt/modules/junos.py",
          "salt/modules/k8s.py",
          "salt/modules/kapacitor.py",
          "salt/modules/kerberos.py",
          "salt/modules/kernelpkg_linux_apt.py",
          "salt/modules/kernelpkg_linux_yum.py",
          "salt/modules/keystone.py",
          "salt/modules/keystoneng.py",
          "salt/modules/keystore.py",
          "salt/modules/kubeadm.py",
          "salt/modules/kubernetesmod.py",
          "salt/modules/launchctl_service.py",
          "salt/modules/layman.py",
          "salt/modules/ldap3.py",
          "salt/modules/ldapmod.py",
          "salt/modules/libcloud_compute.py",
          "salt/modules/libcloud_dns.py",
          "salt/modules/libcloud_loadbalancer.py",
          "salt/modules/libcloud_storage.py",
          "salt/modules/lvs.py",
          "salt/modules/lxc.py",
          "salt/modules/lxd.py",
          "salt/modules/mac_assistive.py",
          "salt/modules/mac_brew_pkg.py",
          "salt/modules/mac_desktop.py",
          "salt/modules/mac_group.py",
          "salt/modules/mac_keychain.py",
          "salt/modules/mac_pkgutil.py",
          "salt/modules/mac_portspkg.py",
          "salt/modules/mac_power.py",
          "salt/modules/mac_service.py",
          "salt/modules/mac_shadow.py",
          "salt/modules/mac_softwareupdate.py",
          "salt/modules/mac_sysctl.py",
          "salt/modules/mac_system.py",
          "salt/modules/mac_timezone.py",
          "salt/modules/mac_user.py",
          "salt/modules/mac_xattr.py",
          "salt/modules/macdefaults.py",
          "salt/modules/macpackage.py",
          "salt/modules/mandrill.py",
          "salt/modules/marathon.py",
          "salt/modules/mattermost.py",
          "salt/modules/mdata.py",
          "salt/modules/memcached.py",
          "salt/modules/modjk.py",
          "salt/modules/mongodb.py",
          "salt/modules/monit.py",
          "salt/modules/moosefs.py",
          "salt/modules/mssql.py",
          "salt/modules/msteams.py",
          "salt/modules/munin.py",
          "salt/modules/mysql.py",
          "salt/modules/nagios.py",
          "salt/modules/nagios_rpc.py",
          "salt/modules/namecheap_domains.py",
          "salt/modules/namecheap_domains_dns.py",
          "salt/modules/namecheap_domains_ns.py",
          "salt/modules/namecheap_ssl.py",
          "salt/modules/namecheap_users.py",
          "salt/modules/napalm_bgp.py",
          "salt/modules/napalm_formula.py",
          "salt/modules/napalm_mod.py",
          "salt/modules/napalm_netacl.py",
          "salt/modules/napalm_network.py",
          "salt/modules/napalm_ntp.py",
          "salt/modules/napalm_probes.py",
          "salt/modules/napalm_route.py",
          "salt/modules/napalm_snmp.py",
          "salt/modules/napalm_users.py",
          "salt/modules/napalm_yang_mod.py",
          "salt/modules/netbox.py",
          "salt/modules/netbsd_sysctl.py",
          "salt/modules/netbsdservice.py",
          "salt/modules/netmiko_mod.py",
          "salt/modules/netscaler.py",
          "salt/modules/neutron.py",
          "salt/modules/neutronng.py",
          "salt/modules/nexus.py",
          "salt/modules/nfs3.py",
          "salt/modules/nginx.py",
          "salt/modules/nilrt_ip.py",
          "salt/modules/nix.py",
          "salt/modules/nova.py",
          "salt/modules/npm.py",
          "salt/modules/nspawn.py",
          "salt/modules/nxos.py",
          "salt/modules/nxos_api.py",
          "salt/modules/nxos_upgrade.py",
          "salt/modules/omapi.py",
          "salt/modules/openbsd_sysctl.py",
          "salt/modules/openbsdpkg.py",
          "salt/modules/openbsdrcctl_service.py",
          "salt/modules/openbsdservice.py",
          "salt/modules/openscap.py",
          "salt/modules/openstack_config.py",
          "salt/modules/openstack_mng.py",
          "salt/modules/openvswitch.py",
          "salt/modules/opsgenie.py",
          "salt/modules/oracle.py",
          "salt/modules/osquery.py",
          "salt/modules/pagerduty.py",
          "salt/modules/pagerduty_util.py",
          "salt/modules/panos.py",
          "salt/modules/parallels.py",
          "salt/modules/pcs.py",
          "salt/modules/pdbedit.py",
          "salt/modules/pecl.py",
          "salt/modules/peeringdb.py",
          "salt/modules/pf.py",
          "salt/modules/philips_hue.py",
          "salt/modules/pkgin.py",
          "salt/modules/pkgng.py",
          "salt/modules/pkgutil.py",
          "salt/modules/portage_config.py",
          "salt/modules/postfix.py",
          "salt/modules/postgres.py",
          "salt/modules/poudriere.py",
          "salt/modules/powerpath.py",
          "salt/modules/puppet.py",
          "salt/modules/purefa.py",
          "salt/modules/purefb.py",
          "salt/modules/pushbullet.py",
          "salt/modules/pushover_notify.py",
          "salt/modules/qemu_img.py",
          "salt/modules/rallydev.py",
          "salt/modules/random_org.py",
          "salt/modules/rbac_solaris.py",
          "salt/modules/rbenv.py",
          "salt/modules/rdp.py",
          "salt/modules/rebootmgr.py",
          "salt/modules/redismod.py",
          "salt/modules/reg.py",
          "salt/modules/restconf.py",
          "salt/modules/rh_ip.py",
          "salt/modules/riak.py",
          "salt/modules/runit.py",
          "salt/modules/rvm.py",
          "salt/modules/s3.py",
          "salt/modules/s6.py",
          "salt/modules/scsi.py",
          "salt/modules/sensehat.py",
          "salt/modules/sensors.py",
          "salt/modules/serverdensity_device.py",
          "salt/modules/servicenow.py",
          "salt/modules/slack_notify.py",
          "salt/modules/slackware_service.py",
          "salt/modules/slsutil.py",
          "salt/modules/smartos_imgadm.py",
          "salt/modules/smartos_nictagadm.py",
          "salt/modules/smartos_virt.py",
          "salt/modules/smartos_vmadm.py",
          "salt/modules/smf_service.py",
          "salt/modules/solaris_fmadm.py",
          "salt/modules/solaris_group.py",
          "salt/modules/solaris_shadow.py",
          "salt/modules/solaris_system.py",
          "salt/modules/solaris_user.py",
          "salt/modules/solarisipspkg.py",
          "salt/modules/solarispkg.py",
          "salt/modules/solr.py",
          "salt/modules/solrcloud.py",
          "salt/modules/splunk.py",
          "salt/modules/splunk_search.py",
          "salt/modules/statuspage.py",
          "salt/modules/supervisord.py",
          "salt/modules/suse_apache.py",
          "salt/modules/suse_ip.py",
          "salt/modules/svn.py",
          "salt/modules/swarm.py",
          "salt/modules/swift.py",
          "salt/modules/sysbench.py",
          "salt/modules/sysrc.py",
          "salt/modules/system_profiler.py",
          "salt/modules/systemd_service.py",
          "salt/modules/telegram.py",
          "salt/modules/telemetry.py",
          "salt/modules/testinframod.py",
          "salt/modules/tomcat.py",
          "salt/modules/trafficserver.py",
          "salt/modules/travisci.py",
          "salt/modules/tuned.py",
          "salt/modules/twilio_notify.py",
          "salt/modules/upstart_service.py",
          "salt/modules/uptime.py",
          "salt/modules/uwsgi.py",
          "salt/modules/vagrant.py",
          "salt/modules/varnish.py",
          "salt/modules/vault.py",
          "salt/modules/vbox_guest.py",
          "salt/modules/vboxmanage.py",
          "salt/modules/vcenter.py",
          "salt/modules/victorops.py",
          "salt/modules/virt.py",
          "salt/modules/vmctl.py",
          "salt/modules/vsphere.py",
          "salt/modules/win_appx.py",
          "salt/modules/win_auditpol.py",
          "salt/modules/win_autoruns.py",
          "salt/modules/win_certutil.py",
          "salt/modules/win_dacl.py",
          "salt/modules/win_disk.py",
          "salt/modules/win_dism.py",
          "salt/modules/win_dns_client.py",
          "salt/modules/win_dsc.py",
          "salt/modules/win_event.py",
          "salt/modules/win_file.py",
          "salt/modules/win_firewall.py",
          "salt/modules/win_groupadd.py",
          "salt/modules/win_iis.py",
          "salt/modules/win_ip.py",
          "salt/modules/win_lgpo.py",
          "salt/modules/win_lgpo_reg.py",
          "salt/modules/win_license.py",
          "salt/modules/win_network.py",
          "salt/modules/win_ntp.py",
          "salt/modules/win_path.py",
          "salt/modules/win_pkg.py",
          "salt/modules/win_pki.py",
          "salt/modules/win_powercfg.py",
          "salt/modules/win_psget.py",
          "salt/modules/win_servermanager.py",
          "salt/modules/win_service.py",
          "salt/modules/win_shadow.py",
          "salt/modules/win_shortcut.py",
          "salt/modules/win_smtp_server.py",
          "salt/modules/win_snmp.py",
          "salt/modules/win_status.py",
          "salt/modules/win_system.py",
          "salt/modules/win_task.py",
          "salt/modules/win_timezone.py",
          "salt/modules/win_useradd.py",
          "salt/modules/win_wua.py",
          "salt/modules/win_wusa.py",
          "salt/modules/winrepo.py",
          "salt/modules/wordpress.py",
          "salt/modules/xapi_virt.py",
          "salt/modules/xbpspkg.py",
          "salt/modules/xmpp.py",
          "salt/modules/yaml.py",
          "salt/modules/zabbix.py",
          "salt/modules/zcbuildout.py",
          "salt/modules/zenoss.py",
          "salt/modules/zk_concurrency.py",
          "salt/modules/znc.py",
          "salt/modules/zoneadm.py",
          "salt/modules/zonecfg.py",
          "salt/modules/zookeeper.py",
          "salt/modules/zpool.py",
          "salt/modules/zypperpkg.py",
          "salt/output/dson.py",
          "salt/output/highstate.py",
          "salt/output/json_out.py",
          "salt/output/key.py",
          "salt/output/nested.py",
          "salt/output/newline_values_only.py",
          "salt/output/no_out_quiet.py",
          "salt/output/no_return.py",
          "salt/output/overstatestage.py",
          "salt/output/pony.py",
          "salt/output/pprint_out.py",
          "salt/output/profile.py",
          "salt/output/progress.py",
          "salt/output/raw.py",
          "salt/output/table_out.py",
          "salt/output/txt.py",
          "salt/output/virt_query.py",
          "salt/output/yaml_out.py",
          "salt/pillar/cmd_json.py",
          "salt/pillar/cmd_yaml.py",
          "salt/pillar/cmd_yamlex.py",
          "salt/pillar/cobbler.py",
          "salt/pillar/confidant.py",
          "salt/pillar/consul_pillar.py",
          "salt/pillar/csvpillar.py",
          "salt/pillar/digicert.py",
          "salt/pillar/django_orm.py",
          "salt/pillar/ec2_pillar.py",
          "salt/pillar/etcd_pillar.py",
          "salt/pillar/extra_minion_data_in_pillar.py",
          "salt/pillar/file_tree.py",
          "salt/pillar/foreman.py",
          "salt/pillar/git_pillar.py",
          "salt/pillar/gpg.py",
          "salt/pillar/hg_pillar.py",
          "salt/pillar/hiera.py",
          "salt/pillar/http_json.py",
          "salt/pillar/http_yaml.py",
          "salt/pillar/libvirt.py",
          "salt/pillar/makostack.py",
          "salt/pillar/mongo.py",
          "salt/pillar/mysql.py",
          "salt/pillar/nacl.py",
          "salt/pillar/netbox.py",
          "salt/pillar/neutron.py",
          "salt/pillar/nodegroups.py",
          "salt/pillar/pepa.py",
          "salt/pillar/pillar_ldap.py",
          "salt/pillar/postgres.py",
          "salt/pillar/puppet.py",
          "salt/pillar/reclass_adapter.py",
          "salt/pillar/redismod.py",
          "salt/pillar/rethinkdb_pillar.py",
          "salt/pillar/s3.py",
          "salt/pillar/saltclass.py",
          "salt/pillar/sql_base.py",
          "salt/pillar/sqlcipher.py",
          "salt/pillar/sqlite3.py",
          "salt/pillar/stack.py",
          "salt/pillar/svn_pillar.py",
          "salt/pillar/varstack_pillar.py",
          "salt/pillar/vault.py",
          "salt/pillar/venafi.py",
          "salt/pillar/virtkey.py",
          "salt/pillar/vmware_pillar.py",
          "salt/proxy/arista_pyeapi.py",
          "salt/proxy/chronos.py",
          "salt/proxy/cimc.py",
          "salt/proxy/cisconso.py",
          "salt/proxy/deltaproxy.py",
          "salt/proxy/docker.py",
          "salt/proxy/dummy.py",
          "salt/proxy/esxcluster.py",
          "salt/proxy/esxdatacenter.py",
          "salt/proxy/esxi.py",
          "salt/proxy/esxvm.py",
          "salt/proxy/fx2.py",
          "salt/proxy/junos.py",
          "salt/proxy/marathon.py",
          "salt/proxy/napalm.py",
          "salt/proxy/netmiko_px.py",
          "salt/proxy/nxos.py",
          "salt/proxy/nxos_api.py",
          "salt/proxy/panos.py",
          "salt/proxy/philips_hue.py",
          "salt/proxy/rest_sample.py",
          "salt/proxy/restconf.py",
          "salt/proxy/ssh_sample.py",
          "salt/proxy/vcenter.py",
          "salt/queues/pgjsonb_queue.py",
          "salt/queues/sqlite_queue.py",
          "salt/renderers/aws_kms.py",
          "salt/renderers/cheetah.py",
          "salt/renderers/dson.py",
          "salt/renderers/genshi.py",
          "salt/renderers/gpg.py",
          "salt/renderers/hjson.py",
          "salt/renderers/jinja.py",
          "salt/renderers/json.py",
          "salt/renderers/json5.py",
          "salt/renderers/mako.py",
          "salt/renderers/msgpack.py",
          "salt/renderers/nacl.py",
          "salt/renderers/pass.py",
          "salt/renderers/py.py",
          "salt/renderers/pydsl.py",
          "salt/renderers/pyobjects.py",
          "salt/renderers/stateconf.py",
          "salt/renderers/tomlmod.py",
          "salt/renderers/wempy.py",
          "salt/renderers/yaml.py",
          "salt/renderers/yamlex.py",
          "salt/returners/appoptics_return.py",
          "salt/returners/carbon_return.py",
          "salt/returners/cassandra_cql_return.py",
          "salt/returners/cassandra_return.py",
          "salt/returners/couchbase_return.py",
          "salt/returners/couchdb_return.py",
          "salt/returners/django_return.py",
          "salt/returners/elasticsearch_return.py",
          "salt/returners/etcd_return.py",
          "salt/returners/highstate_return.py",
          "salt/returners/influxdb_return.py",
          "salt/returners/kafka_return.py",
          "salt/returners/librato_return.py",
          "salt/returners/local.py",
          "salt/returners/local_cache.py",
          "salt/returners/mattermost_returner.py",
          "salt/returners/memcache_return.py",
          "salt/returners/mongo_future_return.py",
          "salt/returners/mongo_return.py",
          "salt/returners/multi_returner.py",
          "salt/returners/mysql.py",
          "salt/returners/nagios_nrdp_return.py",
          "salt/returners/odbc.py",
          "salt/returners/pgjsonb.py",
          "salt/returners/postgres.py",
          "salt/returners/postgres_local_cache.py",
          "salt/returners/pushover_returner.py",
          "salt/returners/rawfile_json.py",
          "salt/returners/redis_return.py",
          "salt/returners/sentry_return.py",
          "salt/returners/slack_returner.py",
          "salt/returners/slack_webhook_return.py",
          "salt/returners/sms_return.py",
          "salt/returners/smtp_return.py",
          "salt/returners/splunk.py",
          "salt/returners/sqlite3_return.py",
          "salt/returners/syslog_return.py",
          "salt/returners/telegram_return.py",
          "salt/returners/xmpp_return.py",
          "salt/returners/zabbix_return.py",
          "salt/roster/ansible.py",
          "salt/roster/cache.py",
          "salt/roster/cloud.py",
          "salt/roster/clustershell.py",
          "salt/roster/dir.py",
          "salt/roster/flat.py",
          "salt/roster/range.py",
          "salt/roster/scan.py",
          "salt/roster/sshconfig.py",
          "salt/roster/sshknownhosts.py",
          "salt/roster/terraform.py",
          "salt/runners/asam.py",
          "salt/runners/auth.py",
          "salt/runners/bgp.py",
          "salt/runners/cache.py",
          "salt/runners/cloud.py",
          "salt/runners/config.py",
          "salt/runners/ddns.py",
          "salt/runners/digicertapi.py",
          "salt/runners/doc.py",
          "salt/runners/drac.py",
          "salt/runners/error.py",
          "salt/runners/event.py",
          "salt/runners/f5.py",
          "salt/runners/fileserver.py",
          "salt/runners/git_pillar.py",
          "salt/runners/http.py",
          "salt/runners/jobs.py",
          "salt/runners/launchd.py",
          "salt/runners/lxc.py",
          "salt/runners/manage.py",
          "salt/runners/match.py",
          "salt/runners/mattermost.py",
          "salt/runners/mine.py",
          "salt/runners/nacl.py",
          "salt/runners/net.py",
          "salt/runners/network.py",
          "salt/runners/pagerduty.py",
          "salt/runners/pillar.py",
          "salt/runners/pkg.py",
          "salt/runners/queue.py",
          "salt/runners/reactor.py",
          "salt/runners/salt.py",
          "salt/runners/saltutil.py",
          "salt/runners/sdb.py",
          "salt/runners/smartos_vmadm.py",
          "salt/runners/spacewalk.py",
          "salt/runners/ssh.py",
          "salt/runners/state.py",
          "salt/runners/survey.py",
          "salt/runners/test.py",
          "salt/runners/thin.py",
          "salt/runners/vault.py",
          "salt/runners/venafiapi.py",
          "salt/runners/virt.py",
          "salt/runners/vistara.py",
          "salt/runners/winrepo.py",
          "salt/sdb/cache.py",
          "salt/sdb/confidant.py",
          "salt/sdb/consul.py",
          "salt/sdb/couchdb.py",
          "salt/sdb/env.py",
          "salt/sdb/etcd_db.py",
          "salt/sdb/keyring_db.py",
          "salt/sdb/memcached.py",
          "salt/sdb/redis_sdb.py",
          "salt/sdb/rest.py",
          "salt/sdb/sqlite3.py",
          "salt/sdb/tism.py",
          "salt/sdb/vault.py",
          "salt/sdb/yaml.py",
          "salt/serializers/configparser.py",
          "salt/serializers/json.py",
          "salt/serializers/keyvalue.py",
          "salt/serializers/msgpack.py",
          "salt/serializers/plist.py",
          "salt/serializers/python.py",
          "salt/serializers/tomlmod.py",
          "salt/serializers/yaml.py",
          "salt/serializers/yamlex.py",
          "salt/states/acme.py",
          "salt/states/alias.py",
          "salt/states/alternatives.py",
          "salt/states/ansiblegate.py",
          "salt/states/aptpkg.py",
          "salt/states/artifactory.py",
          "salt/states/augeas.py",
          "salt/states/bigip.py",
          "salt/states/blockdev.py",
          "salt/states/boto3_elasticache.py",
          "salt/states/boto3_elasticsearch.py",
          "salt/states/boto3_route53.py",
          "salt/states/boto3_sns.py",
          "salt/states/boto_apigateway.py",
          "salt/states/boto_asg.py",
          "salt/states/boto_cfn.py",
          "salt/states/boto_cloudfront.py",
          "salt/states/boto_cloudtrail.py",
          "salt/states/boto_cloudwatch_alarm.py",
          "salt/states/boto_cloudwatch_event.py",
          "salt/states/boto_cognitoidentity.py",
          "salt/states/boto_datapipeline.py",
          "salt/states/boto_dynamodb.py",
          "salt/states/boto_ec2.py",
          "salt/states/boto_elasticache.py",
          "salt/states/boto_elasticsearch_domain.py",
          "salt/states/boto_elb.py",
          "salt/states/boto_elbv2.py",
          "salt/states/boto_iam.py",
          "salt/states/boto_iam_role.py",
          "salt/states/boto_iot.py",
          "salt/states/boto_kinesis.py",
          "salt/states/boto_kms.py",
          "salt/states/boto_lambda.py",
          "salt/states/boto_lc.py",
          "salt/states/boto_rds.py",
          "salt/states/boto_route53.py",
          "salt/states/boto_s3.py",
          "salt/states/boto_s3_bucket.py",
          "salt/states/boto_secgroup.py",
          "salt/states/boto_sns.py",
          "salt/states/boto_sqs.py",
          "salt/states/boto_vpc.py",
          "salt/states/btrfs.py",
          "salt/states/cabal.py",
          "salt/states/ceph.py",
          "salt/states/chef.py",
          "salt/states/chocolatey.py",
          "salt/states/chronos_job.py",
          "salt/states/cimc.py",
          "salt/states/cisconso.py",
          "salt/states/composer.py",
          "salt/states/consul.py",
          "salt/states/cryptdev.py",
          "salt/states/csf.py",
          "salt/states/cyg.py",
          "salt/states/ddns.py",
          "salt/states/debconfmod.py",
          "salt/states/dellchassis.py",
          "salt/states/docker_container.py",
          "salt/states/docker_image.py",
          "salt/states/docker_network.py",
          "salt/states/docker_volume.py",
          "salt/states/drac.py",
          "salt/states/dvs.py",
          "salt/states/elasticsearch.py",
          "salt/states/elasticsearch_index.py",
          "salt/states/elasticsearch_index_template.py",
          "salt/states/eselect.py",
          "salt/states/esxcluster.py",
          "salt/states/esxdatacenter.py",
          "salt/states/esxi.py",
          "salt/states/esxvm.py",
          "salt/states/ethtool.py",
          "salt/states/gem.py",
          "salt/states/github.py",
          "salt/states/glance_image.py",
          "salt/states/glassfish.py",
          "salt/states/glusterfs.py",
          "salt/states/gnomedesktop.py",
          "salt/states/grafana.py",
          "salt/states/grafana4_dashboard.py",
          "salt/states/grafana4_datasource.py",
          "salt/states/grafana4_org.py",
          "salt/states/grafana4_user.py",
          "salt/states/grafana_dashboard.py",
          "salt/states/grafana_datasource.py",
          "salt/states/heat.py",
          "salt/states/helm.py",
          "salt/states/hg.py",
          "salt/states/icinga2.py",
          "salt/states/ifttt.py",
          "salt/states/incron.py",
          "salt/states/influxdb08_database.py",
          "salt/states/influxdb08_user.py",
          "salt/states/influxdb_continuous_query.py",
          "salt/states/influxdb_database.py",
          "salt/states/influxdb_retention_policy.py",
          "salt/states/influxdb_user.py",
          "salt/states/infoblox_a.py",
          "salt/states/infoblox_cname.py",
          "salt/states/infoblox_host_record.py",
          "salt/states/infoblox_range.py",
          "salt/states/jboss7.py",
          "salt/states/jenkins.py",
          "salt/states/junos.py",
          "salt/states/kapacitor.py",
          "salt/states/kernelpkg.py",
          "salt/states/keystone.py",
          "salt/states/keystone_domain.py",
          "salt/states/keystone_endpoint.py",
          "salt/states/keystone_group.py",
          "salt/states/keystone_project.py",
          "salt/states/keystone_role.py",
          "salt/states/keystone_role_grant.py",
          "salt/states/keystone_service.py",
          "salt/states/keystone_user.py",
          "salt/states/keystore.py",
          "salt/states/kmod.py",
          "salt/states/kubernetes.py",
          "salt/states/layman.py",
          "salt/states/ldap.py",
          "salt/states/libcloud_dns.py",
          "salt/states/libcloud_loadbalancer.py",
          "salt/states/libcloud_storage.py",
          "salt/states/locale.py",
          "salt/states/logadm.py",
          "salt/states/lvs_server.py",
          "salt/states/lvs_service.py",
          "salt/states/lxc.py",
          "salt/states/lxd.py",
          "salt/states/lxd_container.py",
          "salt/states/lxd_image.py",
          "salt/states/lxd_profile.py",
          "salt/states/mac_assistive.py",
          "salt/states/mac_keychain.py",
          "salt/states/mac_xattr.py",
          "salt/states/macdefaults.py",
          "salt/states/macpackage.py",
          "salt/states/marathon_app.py",
          "salt/states/memcached.py",
          "salt/states/modjk.py",
          "salt/states/modjk_worker.py",
          "salt/states/module.py",
          "salt/states/mongodb_database.py",
          "salt/states/mongodb_user.py",
          "salt/states/monit.py",
          "salt/states/mssql_database.py",
          "salt/states/mssql_login.py",
          "salt/states/mssql_role.py",
          "salt/states/mssql_user.py",
          "salt/states/msteams.py",
          "salt/states/mysql_database.py",
          "salt/states/mysql_grants.py",
          "salt/states/mysql_query.py",
          "salt/states/mysql_user.py",
          "salt/states/net_napalm_yang.py",
          "salt/states/neutron_network.py",
          "salt/states/neutron_secgroup.py",
          "salt/states/neutron_secgroup_rule.py",
          "salt/states/neutron_subnet.py",
          "salt/states/nexus.py",
          "salt/states/nfs_export.py",
          "salt/states/nftables.py",
          "salt/states/nxos.py",
          "salt/states/nxos_upgrade.py",
          "salt/states/openstack_config.py",
          "salt/states/openvswitch_bridge.py",
          "salt/states/openvswitch_db.py",
          "salt/states/openvswitch_port.py",
          "salt/states/opsgenie.py",
          "salt/states/pagerduty.py",
          "salt/states/pagerduty_escalation_policy.py",
          "salt/states/pagerduty_schedule.py",
          "salt/states/pagerduty_service.py",
          "salt/states/pagerduty_user.py",
          "salt/states/panos.py",
          "salt/states/pbm.py",
          "salt/states/pcs.py",
          "salt/states/pdbedit.py",
          "salt/states/pecl.py",
          "salt/states/pkgng.py",
          "salt/states/pkgrepo.py",
          "salt/states/portage_config.py",
          "salt/states/ports.py",
          "salt/states/postgres_cluster.py",
          "salt/states/postgres_database.py",
          "salt/states/postgres_extension.py",
          "salt/states/postgres_group.py",
          "salt/states/postgres_initdb.py",
          "salt/states/postgres_language.py",
          "salt/states/postgres_privileges.py",
          "salt/states/postgres_schema.py",
          "salt/states/postgres_tablespace.py",
          "salt/states/postgres_user.py",
          "salt/states/powerpath.py",
          "salt/states/probes.py",
          "salt/states/process.py",
          "salt/states/pushover.py",
          "salt/states/pyrax_queues.py",
          "salt/states/rabbitmq_cluster.py",
          "salt/states/rabbitmq_plugin.py",
          "salt/states/rabbitmq_policy.py",
          "salt/states/rabbitmq_upstream.py",
          "salt/states/rabbitmq_user.py",
          "salt/states/rabbitmq_vhost.py",
          "salt/states/rbac_solaris.py",
          "salt/states/rbenv.py",
          "salt/states/rdp.py",
          "salt/states/redismod.py",
          "salt/states/reg.py",
          "salt/states/restconf.py",
          "salt/states/rsync.py",
          "salt/states/rvm.py",
          "salt/states/serverdensity_device.py",
          "salt/states/slack.py",
          "salt/states/smartos.py",
          "salt/states/snapper.py",
          "salt/states/solrcloud.py",
          "salt/states/splunk.py",
          "salt/states/splunk_search.py",
          "salt/states/sqlite3.py",
          "salt/states/statuspage.py",
          "salt/states/supervisord.py",
          "salt/states/svn.py",
          "salt/states/sysrc.py",
          "salt/states/telemetry_alert.py",
          "salt/states/testinframod.py",
          "salt/states/tomcat.py",
          "salt/states/trafficserver.py",
          "salt/states/vagrant.py",
          "salt/states/vault.py",
          "salt/states/vbox_guest.py",
          "salt/states/victorops.py",
          "salt/states/virt.py",
          "salt/states/virtualenv_mod.py",
          "salt/states/webutil.py",
          "salt/states/win_appx.py",
          "salt/states/win_certutil.py",
          "salt/states/win_dacl.py",
          "salt/states/win_dism.py",
          "salt/states/win_dns_client.py",
          "salt/states/win_firewall.py",
          "salt/states/win_iis.py",
          "salt/states/win_lgpo.py",
          "salt/states/win_lgpo_reg.py",
          "salt/states/win_license.py",
          "salt/states/win_network.py",
          "salt/states/win_path.py",
          "salt/states/win_pki.py",
          "salt/states/win_powercfg.py",
          "salt/states/win_servermanager.py",
          "salt/states/win_shortcut.py",
          "salt/states/win_smtp_server.py",
          "salt/states/win_snmp.py",
          "salt/states/win_system.py",
          "salt/states/win_wua.py",
          "salt/states/win_wusa.py",
          "salt/states/winrepo.py",
          "salt/states/wordpress.py",
          "salt/states/xml.py",
          "salt/states/xmpp.py",
          "salt/states/zabbix_action.py",
          "salt/states/zabbix_host.py",
          "salt/states/zabbix_hostgroup.py",
          "salt/states/zabbix_mediatype.py",
          "salt/states/zabbix_template.py",
          "salt/states/zabbix_user.py",
          "salt/states/zabbix_usergroup.py",
          "salt/states/zabbix_usermacro.py",
          "salt/states/zabbix_valuemap.py",
          "salt/states/zcbuildout.py",
          "salt/states/zenoss.py",
          "salt/states/zfs.py",
          "salt/states/zk_concurrency.py",
          "salt/states/zone.py",
          "salt/states/zookeeper.py",
          "salt/states/zpool.py",
          "tests/__init__.py",
          "tests/buildpackage.py",
          "tests/committer_parser.py",
          "tests/conftest.py",
          "tests/eventlisten.py",
          "tests/integration/__init__.py",
          "tests/integration/cli/__init__.py",
          "tests/integration/cli/test_custom_module.py",
          "tests/integration/client/__init__.py",
          "tests/integration/client/test_kwarg.py",
          "tests/integration/client/test_standard.py",
          "tests/integration/client/test_syndic.py",
          "tests/integration/cloud/__init__.py",
          "tests/integration/cloud/clouds/__init__.py",
          "tests/integration/cloud/clouds/test_digitalocean.py",
          "tests/integration/cloud/clouds/test_dimensiondata.py",
          "tests/integration/cloud/clouds/test_ec2.py",
          "tests/integration/cloud/clouds/test_gce.py",
          "tests/integration/cloud/clouds/test_gogrid.py",
          "tests/integration/cloud/clouds/test_linode.py",
          "tests/integration/cloud/clouds/test_oneandone.py",
          "tests/integration/cloud/clouds/test_openstack.py",
          "tests/integration/cloud/clouds/test_profitbricks.py",
          "tests/integration/cloud/clouds/test_tencentcloud.py",
          "tests/integration/cloud/clouds/test_virtualbox.py",
          "tests/integration/cloud/clouds/test_vmware.py",
          "tests/integration/cloud/clouds/test_vultrpy.py",
          "tests/integration/cloud/helpers/__init__.py",
          "tests/integration/cloud/helpers/cloud_test_base.py",
          "tests/integration/cloud/helpers/virtualbox.py",
          "tests/integration/cloud/test_cloud.py",
          "tests/integration/conftest.py",
          "tests/integration/doc/__init__.py",
          "tests/integration/executors/__init__.py",
          "tests/integration/externalapi/__init__.py",
          "tests/integration/externalapi/test_venafiapi.py",
          "tests/integration/files/extension_modules/pillar/ext_pillar_opts.py",
          "tests/integration/files/extension_modules/tops/master_tops_test.py",
          "tests/integration/files/file/base/_executors/arg.py",
          "tests/integration/files/file/base/_grains/custom_grain2.py",
          "tests/integration/files/file/base/_grains/custom_grains.py",
          "tests/integration/files/file/base/_grains/matcher_grain.py",
          "tests/integration/files/file/base/_modules/depends_versioned.py",
          "tests/integration/files/file/base/_modules/depends_versionless.py",
          "tests/integration/files/file/base/_modules/override_test.py",
          "tests/integration/files/file/base/_modules/runtests_decorators.py",
          "tests/integration/files/file/base/_modules/runtests_helpers.py",
          "tests/integration/files/file/base/_modules/salttest.py",
          "tests/integration/files/file/base/_runners/runtests_helpers.py",
          "tests/integration/files/file/base/_states/salttest.py",
          "tests/integration/files/file/base/_wheel/runtests_helpers.py",
          "tests/integration/files/file/base/buildout/var/tb/1/bootstrap.py",
          "tests/integration/files/file/base/buildout/var/tb/2/bootstrap.py",
          "tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py",
          "tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py",
          "tests/integration/files/file/base/script.py",
          "tests/integration/files/returners/noop_returner.py",
          "tests/integration/fileserver/__init__.py",
          "tests/integration/grains/__init__.py",
          "tests/integration/grains/test_core.py",
          "tests/integration/grains/test_custom.py",
          "tests/integration/loader/__init__.py",
          "tests/integration/loader/test_ext_grains.py",
          "tests/integration/loader/test_ext_modules.py",
          "tests/integration/master/__init__.py",
          "tests/integration/master/test_event_return.py",
          "tests/integration/minion/__init__.py",
          "tests/integration/minion/test_executor.py",
          "tests/integration/minion/test_minion_cache.py",
          "tests/integration/minion/test_timeout.py",
          "tests/integration/modules/__init__.py",
          "tests/integration/modules/test_boto_iam.py",
          "tests/integration/modules/test_boto_sns.py",
          "tests/integration/modules/test_chocolatey.py",
          "tests/integration/modules/test_cmdmod.py",
          "tests/integration/modules/test_config.py",
          "tests/integration/modules/test_cp.py",
          "tests/integration/modules/test_decorators.py",
          "tests/integration/modules/test_disk.py",
          "tests/integration/modules/test_file.py",
          "tests/integration/modules/test_gem.py",
          "tests/integration/modules/test_gentoolkitmod.py",
          "tests/integration/modules/test_git.py",
          "tests/integration/modules/test_groupadd.py",
          "tests/integration/modules/test_hosts.py",
          "tests/integration/modules/test_key.py",
          "tests/integration/modules/test_linux_acl.py",
          "tests/integration/modules/test_linux_shadow.py",
          "tests/integration/modules/test_localemod.py",
          "tests/integration/modules/test_lxc.py",
          "tests/integration/modules/test_macdefaults.py",
          "tests/integration/modules/test_mine.py",
          "tests/integration/modules/test_mysql.py",
          "tests/integration/modules/test_publish.py",
          "tests/integration/modules/test_pw_user.py",
          "tests/integration/modules/test_rabbitmq.py",
          "tests/integration/modules/test_saltcheck.py",
          "tests/integration/modules/test_ssh.py",
          "tests/integration/modules/test_status.py",
          "tests/integration/modules/test_supervisord.py",
          "tests/integration/modules/test_sysctl.py",
          "tests/integration/modules/test_sysrc.py",
          "tests/integration/modules/test_test.py",
          "tests/integration/modules/test_timezone.py",
          "tests/integration/modules/test_tls.py",
          "tests/integration/modules/test_win_autoruns.py",
          "tests/integration/modules/test_win_dns_client.py",
          "tests/integration/modules/test_win_firewall.py",
          "tests/integration/modules/test_win_ip.py",
          "tests/integration/modules/test_win_ntp.py",
          "tests/integration/modules/test_win_pkg.py",
          "tests/integration/modules/test_win_servermanager.py",
          "tests/integration/modules/test_win_task.py",
          "tests/integration/netapi/__init__.py",
          "tests/integration/netapi/rest_tornado/__init__.py",
          "tests/integration/netapi/rest_tornado/test_app.py",
          "tests/integration/output/__init__.py",
          "tests/integration/output/test_output.py",
          "tests/integration/pillar/__init__.py",
          "tests/integration/pillar/test_git_pillar.py",
          "tests/integration/renderers/__init__.py",
          "tests/integration/renderers/test_pydsl.py",
          "tests/integration/returners/__init__.py",
          "tests/integration/returners/test_appoptics_return.py",
          "tests/integration/returners/test_librato_return.py",
          "tests/integration/runners/__init__.py",
          "tests/integration/runners/test_fileserver.py",
          "tests/integration/runners/test_manage.py",
          "tests/integration/runners/test_runner_returns.py",
          "tests/integration/runners/test_salt.py",
          "tests/integration/sdb/__init__.py",
          "tests/integration/sdb/test_env.py",
          "tests/integration/shell/__init__.py",
          "tests/integration/shell/test_arguments.py",
          "tests/integration/shell/test_enabled.py",
          "tests/integration/shell/test_master_tops.py",
          "tests/integration/shell/test_spm.py",
          "tests/integration/spm/__init__.py",
          "tests/integration/spm/test_build.py",
          "tests/integration/spm/test_files.py",
          "tests/integration/spm/test_info.py",
          "tests/integration/spm/test_install.py",
          "tests/integration/spm/test_remove.py",
          "tests/integration/spm/test_repo.py",
          "tests/integration/ssh/__init__.py",
          "tests/integration/ssh/test_state.py",
          "tests/integration/states/__init__.py",
          "tests/integration/states/test_alternatives.py",
          "tests/integration/states/test_archive.py",
          "tests/integration/states/test_boto_sns.py",
          "tests/integration/states/test_bower.py",
          "tests/integration/states/test_chocolatey.py",
          "tests/integration/states/test_cmd.py",
          "tests/integration/states/test_compiler.py",
          "tests/integration/states/test_git.py",
          "tests/integration/states/test_handle_error.py",
          "tests/integration/states/test_handle_iorder.py",
          "tests/integration/states/test_host.py",
          "tests/integration/states/test_keystone.py",
          "tests/integration/states/test_lxd.py",
          "tests/integration/states/test_lxd_container.py",
          "tests/integration/states/test_lxd_image.py",
          "tests/integration/states/test_lxd_profile.py",
          "tests/integration/states/test_match.py",
          "tests/integration/states/test_mysql_database.py",
          "tests/integration/states/test_mysql_grants.py",
          "tests/integration/states/test_network.py",
          "tests/integration/states/test_rabbitmq_user.py",
          "tests/integration/states/test_rabbitmq_vhost.py",
          "tests/integration/states/test_reg.py",
          "tests/integration/states/test_renderers.py",
          "tests/integration/states/test_ssh_auth.py",
          "tests/integration/states/test_ssh_known_hosts.py",
          "tests/integration/states/test_supervisord.py",
          "tests/integration/states/test_x509.py",
          "tests/integration/utils/__init__.py",
          "tests/integration/utils/test_idem.py",
          "tests/integration/utils/test_smb.py",
          "tests/integration/utils/test_win_runas.py",
          "tests/kitchen/__init__.py",
          "tests/kitchen/test_kitchen.py",
          "tests/kitchen/tests/wordpress/tests/conftest.py",
          "tests/kitchen/tests/wordpress/tests/salt/test_salt.py",
          "tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py",
          "tests/minionswarm.py",
          "tests/modparser.py",
          "tests/packdump.py",
          "tests/pytests/__init__.py",
          "tests/pytests/conftest.py",
          "tests/pytests/functional/__init__.py",
          "tests/pytests/functional/cache/__init__.py",
          "tests/pytests/functional/cache/helpers.py",
          "tests/pytests/functional/cache/test_consul.py",
          "tests/pytests/functional/cache/test_etcd.py",
          "tests/pytests/functional/cache/test_localfs.py",
          "tests/pytests/functional/cache/test_memcache.py",
          "tests/pytests/functional/cache/test_mysql.py",
          "tests/pytests/functional/cache/test_redis.py",
          "tests/pytests/functional/channel/__init__.py",
          "tests/pytests/functional/channel/conftest.py",
          "tests/pytests/functional/channel/test_client.py",
          "tests/pytests/functional/channel/test_server.py",
          "tests/pytests/functional/cli/__init__.py",
          "tests/pytests/functional/cli/conftest.py",
          "tests/pytests/functional/cli/test_api.py",
          "tests/pytests/functional/cli/test_batch.py",
          "tests/pytests/functional/cli/test_salt.py",
          "tests/pytests/functional/cli/test_salt_cloud.py",
          "tests/pytests/functional/cli/test_salt_deltaproxy.py",
          "tests/pytests/functional/cli/test_salt_master.py",
          "tests/pytests/functional/cli/test_salt_pip.py",
          "tests/pytests/functional/cli/test_salt_run_.py",
          "tests/pytests/functional/cli/test_salt_run_show_jid.py",
          "tests/pytests/functional/conftest.py",
          "tests/pytests/functional/fileserver/__init__.py",
          "tests/pytests/functional/fileserver/hgfs/__init__.py",
          "tests/pytests/functional/fileserver/hgfs/test_hgfs.py",
          "tests/pytests/functional/fileserver/test_roots.py",
          "tests/pytests/functional/formulas/conftest.py",
          "tests/pytests/functional/formulas/test_docker.py",
          "tests/pytests/functional/formulas/test_nginx.py",
          "tests/pytests/functional/formulas/test_salt.py",
          "tests/pytests/functional/formulas/test_sudoers.py",
          "tests/pytests/functional/formulas/test_users.py",
          "tests/pytests/functional/formulas/test_vim.py",
          "tests/pytests/functional/grains/test_grains.py",
          "tests/pytests/functional/loader/__init__.py",
          "tests/pytests/functional/loader/test_loaded_base_name.py",
          "tests/pytests/functional/loader/test_loader.py",
          "tests/pytests/functional/log_handlers/__init__.py",
          "tests/pytests/functional/log_handlers/test_logstash_mod.py",
          "tests/pytests/functional/masterminion/test_masterminion_conf.py",
          "tests/pytests/functional/modules/__init__.py",
          "tests/pytests/functional/modules/cmd/__init__.py",
          "tests/pytests/functional/modules/cmd/test_powershell.py",
          "tests/pytests/functional/modules/cmd/test_runas.py",
          "tests/pytests/functional/modules/conftest.py",
          "tests/pytests/functional/modules/file/__init__.py",
          "tests/pytests/functional/modules/file/test_readlink.py",
          "tests/pytests/functional/modules/file/test_replace.py",
          "tests/pytests/functional/modules/file/test_rmdir.py",
          "tests/pytests/functional/modules/file/test_symlink.py",
          "tests/pytests/functional/modules/file/test_touch.py",
          "tests/pytests/functional/modules/pillar/test_config.py",
          "tests/pytests/functional/modules/pillar/test_default.py",
          "tests/pytests/functional/modules/state/__init__.py",
          "tests/pytests/functional/modules/state/conftest.py",
          "tests/pytests/functional/modules/state/requisites/__init__.py",
          "tests/pytests/functional/modules/state/requisites/test_listen.py",
          "tests/pytests/functional/modules/state/requisites/test_mixed.py",
          "tests/pytests/functional/modules/state/requisites/test_onchanges.py",
          "tests/pytests/functional/modules/state/requisites/test_onfail.py",
          "tests/pytests/functional/modules/state/requisites/test_onlyif.py",
          "tests/pytests/functional/modules/state/requisites/test_prereq.py",
          "tests/pytests/functional/modules/state/requisites/test_require.py",
          "tests/pytests/functional/modules/state/requisites/test_unless.py",
          "tests/pytests/functional/modules/state/requisites/test_use.py",
          "tests/pytests/functional/modules/state/requisites/test_watch.py",
          "tests/pytests/functional/modules/state/test_jinja_filters.py",
          "tests/pytests/functional/modules/state/test_jinja_renderer.py",
          "tests/pytests/functional/modules/state/test_mako_renderer.py",
          "tests/pytests/functional/modules/state/test_pyobjects_renderer.py",
          "tests/pytests/functional/modules/state/test_state.py",
          "tests/pytests/functional/modules/test_aliases.py",
          "tests/pytests/functional/modules/test_ansiblegate.py",
          "tests/pytests/functional/modules/test_aptpkg.py",
          "tests/pytests/functional/modules/test_archive.py",
          "tests/pytests/functional/modules/test_data.py",
          "tests/pytests/functional/modules/test_defaults.py",
          "tests/pytests/functional/modules/test_dockermod.py",
          "tests/pytests/functional/modules/test_etcd_mod.py",
          "tests/pytests/functional/modules/test_freezer.py",
          "tests/pytests/functional/modules/test_gpg.py",
          "tests/pytests/functional/modules/test_grains.py",
          "tests/pytests/functional/modules/test_http.py",
          "tests/pytests/functional/modules/test_ipset.py",
          "tests/pytests/functional/modules/test_mac_assistive.py",
          "tests/pytests/functional/modules/test_mac_brew_pkg.py",
          "tests/pytests/functional/modules/test_mac_desktop.py",
          "tests/pytests/functional/modules/test_mac_group.py",
          "tests/pytests/functional/modules/test_mac_keychain.py",
          "tests/pytests/functional/modules/test_mac_pkgutil.py",
          "tests/pytests/functional/modules/test_mac_portspkg.py",
          "tests/pytests/functional/modules/test_mac_power.py",
          "tests/pytests/functional/modules/test_mac_service.py",
          "tests/pytests/functional/modules/test_mac_shadow.py",
          "tests/pytests/functional/modules/test_mac_softwareupdate.py",
          "tests/pytests/functional/modules/test_mac_system.py",
          "tests/pytests/functional/modules/test_mac_timezone.py",
          "tests/pytests/functional/modules/test_mac_user.py",
          "tests/pytests/functional/modules/test_mac_xattr.py",
          "tests/pytests/functional/modules/test_mysql.py",
          "tests/pytests/functional/modules/test_network.py",
          "tests/pytests/functional/modules/test_nilrt_ip.py",
          "tests/pytests/functional/modules/test_opkg.py",
          "tests/pytests/functional/modules/test_pip.py",
          "tests/pytests/functional/modules/test_pkg.py",
          "tests/pytests/functional/modules/test_runit.py",
          "tests/pytests/functional/modules/test_saltcheck.py",
          "tests/pytests/functional/modules/test_saltutil.py",
          "tests/pytests/functional/modules/test_sdb.py",
          "tests/pytests/functional/modules/test_service.py",
          "tests/pytests/functional/modules/test_swarm.py",
          "tests/pytests/functional/modules/test_system.py",
          "tests/pytests/functional/modules/test_test.py",
          "tests/pytests/functional/modules/test_user.py",
          "tests/pytests/functional/modules/test_vault.py",
          "tests/pytests/functional/modules/test_virtualenv_mod.py",
          "tests/pytests/functional/modules/test_win_certutil.py",
          "tests/pytests/functional/modules/test_win_dsc.py",
          "tests/pytests/functional/modules/test_win_shortcut.py",
          "tests/pytests/functional/modules/test_x509_v2.py",
          "tests/pytests/functional/modules/test_yaml.py",
          "tests/pytests/functional/modules/test_yumpkg.py",
          "tests/pytests/functional/modules/win_file/test_check_perms.py",
          "tests/pytests/functional/modules/win_file/test_remove.py",
          "tests/pytests/functional/modules/win_file/test_stat.py",
          "tests/pytests/functional/modules/win_lgpo/__init__.py",
          "tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py",
          "tests/pytests/functional/modules/win_lgpo/test_get_policy.py",
          "tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py",
          "tests/pytests/functional/modules/win_lgpo/test_registry_policy.py",
          "tests/pytests/functional/netapi/__init__.py",
          "tests/pytests/functional/netapi/conftest.py",
          "tests/pytests/functional/netapi/rest_cherrypy/__init__.py",
          "tests/pytests/functional/netapi/rest_cherrypy/conftest.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_auth.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_cors.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py",
          "tests/pytests/functional/netapi/rest_tornado/__init__.py",
          "tests/pytests/functional/netapi/rest_tornado/conftest.py",
          "tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py",
          "tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_event_listener.py",
          "tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py",
          "tests/pytests/functional/netapi/rest_tornado/test_run_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_utils.py",
          "tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py",
          "tests/pytests/functional/pillar/__init__.py",
          "tests/pytests/functional/pillar/conftest.py",
          "tests/pytests/functional/pillar/hg_pillar/__init__.py",
          "tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py",
          "tests/pytests/functional/pillar/test_etcd_pillar.py",
          "tests/pytests/functional/pillar/test_git_pillar.py",
          "tests/pytests/functional/pillar/test_gpg.py",
          "tests/pytests/functional/pillar/test_top.py",
          "tests/pytests/functional/returners/__init__.py",
          "tests/pytests/functional/returners/test_etcd_return.py",
          "tests/pytests/functional/runners/__init__.py",
          "tests/pytests/functional/runners/test_winrepo.py",
          "tests/pytests/functional/sdb/__init__.py",
          "tests/pytests/functional/sdb/test_etcd_db.py",
          "tests/pytests/functional/state/test_masterless_tops.py",
          "tests/pytests/functional/states/__init__.py",
          "tests/pytests/functional/states/cmd/__init__.py",
          "tests/pytests/functional/states/cmd/conftest.py",
          "tests/pytests/functional/states/cmd/test_runas.py",
          "tests/pytests/functional/states/conftest.py",
          "tests/pytests/functional/states/file/__init__.py",
          "tests/pytests/functional/states/file/conftest.py",
          "tests/pytests/functional/states/file/test__check_directory_win.py",
          "tests/pytests/functional/states/file/test_absent.py",
          "tests/pytests/functional/states/file/test_accumulated.py",
          "tests/pytests/functional/states/file/test_append.py",
          "tests/pytests/functional/states/file/test_blockreplace.py",
          "tests/pytests/functional/states/file/test_cached.py",
          "tests/pytests/functional/states/file/test_comment.py",
          "tests/pytests/functional/states/file/test_copy.py",
          "tests/pytests/functional/states/file/test_directory.py",
          "tests/pytests/functional/states/file/test_directory_win.py",
          "tests/pytests/functional/states/file/test_keyvalue.py",
          "tests/pytests/functional/states/file/test_line.py",
          "tests/pytests/functional/states/file/test_managed.py",
          "tests/pytests/functional/states/file/test_patch.py",
          "tests/pytests/functional/states/file/test_prepend.py",
          "tests/pytests/functional/states/file/test_pruned.py",
          "tests/pytests/functional/states/file/test_recurse.py",
          "tests/pytests/functional/states/file/test_rename.py",
          "tests/pytests/functional/states/file/test_replace.py",
          "tests/pytests/functional/states/file/test_serialize.py",
          "tests/pytests/functional/states/file/test_symlink.py",
          "tests/pytests/functional/states/file/test_touch.py",
          "tests/pytests/functional/states/file/test_uncomment.py",
          "tests/pytests/functional/states/pkgrepo/__init__.py",
          "tests/pytests/functional/states/pkgrepo/test_centos.py",
          "tests/pytests/functional/states/pkgrepo/test_debian.py",
          "tests/pytests/functional/states/rabbitmq/__init__.py",
          "tests/pytests/functional/states/rabbitmq/conftest.py",
          "tests/pytests/functional/states/rabbitmq/test_cluster.py",
          "tests/pytests/functional/states/rabbitmq/test_plugin.py",
          "tests/pytests/functional/states/rabbitmq/test_policy.py",
          "tests/pytests/functional/states/rabbitmq/test_upstream.py",
          "tests/pytests/functional/states/rabbitmq/test_user.py",
          "tests/pytests/functional/states/rabbitmq/test_vhost.py",
          "tests/pytests/functional/states/test_archive.py",
          "tests/pytests/functional/states/test_chocolatey_1_2_1.py",
          "tests/pytests/functional/states/test_chocolatey_latest.py",
          "tests/pytests/functional/states/test_docker_container.py",
          "tests/pytests/functional/states/test_docker_network.py",
          "tests/pytests/functional/states/test_etcd_mod.py",
          "tests/pytests/functional/states/test_file.py",
          "tests/pytests/functional/states/test_gpg.py",
          "tests/pytests/functional/states/test_ipset.py",
          "tests/pytests/functional/states/test_module.py",
          "tests/pytests/functional/states/test_mysql.py",
          "tests/pytests/functional/states/test_npm.py",
          "tests/pytests/functional/states/test_pip_state.py",
          "tests/pytests/functional/states/test_pkg.py",
          "tests/pytests/functional/states/test_pkgrepo.py",
          "tests/pytests/functional/states/test_reg.py",
          "tests/pytests/functional/states/test_service.py",
          "tests/pytests/functional/states/test_ssh_auth.py",
          "tests/pytests/functional/states/test_svn.py",
          "tests/pytests/functional/states/test_user.py",
          "tests/pytests/functional/states/test_virtualenv_mod.py",
          "tests/pytests/functional/states/test_win_certutil.py",
          "tests/pytests/functional/states/test_win_shortcut.py",
          "tests/pytests/functional/states/test_x509_v2.py",
          "tests/pytests/functional/states/test_zookeeper.py",
          "tests/pytests/functional/states/win_lgpo/__init__.py",
          "tests/pytests/functional/states/win_lgpo/test_admx_policy.py",
          "tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py",
          "tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py",
          "tests/pytests/functional/states/win_lgpo/test_rights_assignment.py",
          "tests/pytests/functional/test_config.py",
          "tests/pytests/functional/test_payload.py",
          "tests/pytests/functional/test_version.py",
          "tests/pytests/functional/transport/__init__.py",
          "tests/pytests/functional/transport/conftest.py",
          "tests/pytests/functional/transport/ipc/__init__.py",
          "tests/pytests/functional/transport/ipc/test_client.py",
          "tests/pytests/functional/transport/ipc/test_pub_server_channel.py",
          "tests/pytests/functional/transport/ipc/test_subscriber.py",
          "tests/pytests/functional/transport/server/__init__.py",
          "tests/pytests/functional/transport/server/conftest.py",
          "tests/pytests/functional/transport/server/test_req_channel.py",
          "tests/pytests/functional/transport/tcp/test_load_balanced_server.py",
          "tests/pytests/functional/transport/tcp/test_message_client.py",
          "tests/pytests/functional/transport/tcp/test_pub_server.py",
          "tests/pytests/functional/transport/zeromq/__init__.py",
          "tests/pytests/functional/transport/zeromq/conftest.py",
          "tests/pytests/functional/transport/zeromq/test_pub_server_channel.py",
          "tests/pytests/functional/transport/zeromq/test_request_client.py",
          "tests/pytests/functional/utils/__init__.py",
          "tests/pytests/functional/utils/functools/__init__.py",
          "tests/pytests/functional/utils/functools/test_namespaced_function.py",
          "tests/pytests/functional/utils/test_cache.py",
          "tests/pytests/functional/utils/test_etcd_util.py",
          "tests/pytests/functional/utils/test_extension_deprecation.py",
          "tests/pytests/functional/utils/test_gitfs.py",
          "tests/pytests/functional/utils/test_http.py",
          "tests/pytests/functional/utils/test_jinja.py",
          "tests/pytests/functional/utils/test_job.py",
          "tests/pytests/functional/utils/test_pillar.py",
          "tests/pytests/functional/utils/test_process.py",
          "tests/pytests/functional/utils/test_vault.py",
          "tests/pytests/functional/utils/test_winrepo.py",
          "tests/pytests/functional/utils/user/__init__.py",
          "tests/pytests/functional/utils/user/test__getgrall.py",
          "tests/pytests/functional/utils/user/test_chugid_and_umask.py",
          "tests/pytests/functional/utils/user/test_get_group_dict.py",
          "tests/pytests/functional/utils/user/test_get_group_list.py",
          "tests/pytests/functional/utils/win_dacl/test_file.py",
          "tests/pytests/functional/utils/win_dacl/test_get_name.py",
          "tests/pytests/functional/utils/win_dacl/test_get_sid.py",
          "tests/pytests/functional/utils/win_dacl/test_get_sid_string.py",
          "tests/pytests/functional/utils/win_dacl/test_reg.py",
          "tests/pytests/functional/utils/yamllint/__init__.py",
          "tests/pytests/functional/utils/yamllint/test_yamllint.py",
          "tests/pytests/integration/__init__.py",
          "tests/pytests/integration/_logging/__init__.py",
          "tests/pytests/integration/_logging/test_jid_logging.py",
          "tests/pytests/integration/_logging/test_logging.py",
          "tests/pytests/integration/_logging/test_multiple_processes_logging.py",
          "tests/pytests/integration/cli/__init__.py",
          "tests/pytests/integration/cli/conftest.py",
          "tests/pytests/integration/cli/test_batch.py",
          "tests/pytests/integration/cli/test_matcher.py",
          "tests/pytests/integration/cli/test_salt.py",
          "tests/pytests/integration/cli/test_salt_auth.py",
          "tests/pytests/integration/cli/test_salt_call.py",
          "tests/pytests/integration/cli/test_salt_cp.py",
          "tests/pytests/integration/cli/test_salt_deltaproxy.py",
          "tests/pytests/integration/cli/test_salt_key.py",
          "tests/pytests/integration/cli/test_salt_master.py",
          "tests/pytests/integration/cli/test_salt_minion.py",
          "tests/pytests/integration/cli/test_salt_proxy.py",
          "tests/pytests/integration/cli/test_salt_run.py",
          "tests/pytests/integration/cli/test_salt_syndic.py",
          "tests/pytests/integration/cli/test_syndic_eauth.py",
          "tests/pytests/integration/client/__init__.py",
          "tests/pytests/integration/client/conftest.py",
          "tests/pytests/integration/client/test_runner.py",
          "tests/pytests/integration/cluster/__init__.py",
          "tests/pytests/integration/cluster/conftest.py",
          "tests/pytests/integration/cluster/test_basic_cluster.py",
          "tests/pytests/integration/conftest.py",
          "tests/pytests/integration/daemons/__init__.py",
          "tests/pytests/integration/daemons/test_masterapi.py",
          "tests/pytests/integration/daemons/test_memory_leak.py",
          "tests/pytests/integration/grains/test_grains.py",
          "tests/pytests/integration/master/__init__.py",
          "tests/pytests/integration/master/test_clear_funcs.py",
          "tests/pytests/integration/master/test_payload.py",
          "tests/pytests/integration/master/test_peer.py",
          "tests/pytests/integration/minion/__init__.py",
          "tests/pytests/integration/minion/test_job_return.py",
          "tests/pytests/integration/minion/test_reauth.py",
          "tests/pytests/integration/minion/test_return_retries.py",
          "tests/pytests/integration/modules/__init__.py",
          "tests/pytests/integration/modules/grains/__init__.py",
          "tests/pytests/integration/modules/grains/conftest.py",
          "tests/pytests/integration/modules/grains/test_append.py",
          "tests/pytests/integration/modules/grains/test_module.py",
          "tests/pytests/integration/modules/saltutil/__init__.py",
          "tests/pytests/integration/modules/saltutil/test_grains.py",
          "tests/pytests/integration/modules/saltutil/test_modules.py",
          "tests/pytests/integration/modules/saltutil/test_pillar.py",
          "tests/pytests/integration/modules/saltutil/test_wheel.py",
          "tests/pytests/integration/modules/state/__init__.py",
          "tests/pytests/integration/modules/state/test_state.py",
          "tests/pytests/integration/modules/state/test_state_pillar_errors.py",
          "tests/pytests/integration/modules/state/test_state_state_events.py",
          "tests/pytests/integration/modules/state/test_state_test.py",
          "tests/pytests/integration/modules/test_beacons.py",
          "tests/pytests/integration/modules/test_cmdmod.py",
          "tests/pytests/integration/modules/test_event.py",
          "tests/pytests/integration/modules/test_file.py",
          "tests/pytests/integration/modules/test_idem.py",
          "tests/pytests/integration/modules/test_jinja.py",
          "tests/pytests/integration/modules/test_mac_sysctl.py",
          "tests/pytests/integration/modules/test_pillar.py",
          "tests/pytests/integration/modules/test_pip.py",
          "tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py",
          "tests/pytests/integration/modules/test_state.py",
          "tests/pytests/integration/modules/test_test.py",
          "tests/pytests/integration/modules/test_useradd.py",
          "tests/pytests/integration/modules/test_vault.py",
          "tests/pytests/integration/modules/test_virt.py",
          "tests/pytests/integration/modules/test_x509_v2.py",
          "tests/pytests/integration/netapi/__init__.py",
          "tests/pytests/integration/netapi/conftest.py",
          "tests/pytests/integration/netapi/rest_cherrypy/__init__.py",
          "tests/pytests/integration/netapi/rest_cherrypy/conftest.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_auth.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_run.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py",
          "tests/pytests/integration/netapi/rest_tornado/__init__.py",
          "tests/pytests/integration/netapi/rest_tornado/conftest.py",
          "tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_root_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py",
          "tests/pytests/integration/netapi/test_client.py",
          "tests/pytests/integration/netapi/test_ssh_client.py",
          "tests/pytests/integration/pillar/__init__.py",
          "tests/pytests/integration/pillar/cache/__init__.py",
          "tests/pytests/integration/pillar/cache/conftest.py",
          "tests/pytests/integration/pillar/cache/test_pillar_cache.py",
          "tests/pytests/integration/pillar/test_pillar_include.py",
          "tests/pytests/integration/proxy/__init__.py",
          "tests/pytests/integration/proxy/conftest.py",
          "tests/pytests/integration/proxy/test_deltaproxy.py",
          "tests/pytests/integration/proxy/test_shell.py",
          "tests/pytests/integration/proxy/test_simple.py",
          "tests/pytests/integration/reactor/__init__.py",
          "tests/pytests/integration/reactor/test_reactor.py",
          "tests/pytests/integration/renderers/__init__.py",
          "tests/pytests/integration/renderers/test_jinja.py",
          "tests/pytests/integration/renderers/test_toml.py",
          "tests/pytests/integration/returners/__init__.py",
          "tests/pytests/integration/returners/test_noop_return.py",
          "tests/pytests/integration/runners/__init__.py",
          "tests/pytests/integration/runners/state/__init__.py",
          "tests/pytests/integration/runners/state/orchestrate/__init__.py",
          "tests/pytests/integration/runners/state/orchestrate/test_events.py",
          "tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py",
          "tests/pytests/integration/runners/test_cache.py",
          "tests/pytests/integration/runners/test_jobs.py",
          "tests/pytests/integration/runners/test_manage.py",
          "tests/pytests/integration/runners/test_match.py",
          "tests/pytests/integration/runners/test_nacl.py",
          "tests/pytests/integration/runners/test_saltutil.py",
          "tests/pytests/integration/runners/test_vault.py",
          "tests/pytests/integration/sdb/__init__.py",
          "tests/pytests/integration/sdb/conftest.py",
          "tests/pytests/integration/sdb/test_etcd_db.py",
          "tests/pytests/integration/sdb/test_vault.py",
          "tests/pytests/integration/ssh/__init__.py",
          "tests/pytests/integration/ssh/state/conftest.py",
          "tests/pytests/integration/ssh/state/test_pillar_override.py",
          "tests/pytests/integration/ssh/state/test_pillar_override_template.py",
          "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py",
          "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py",
          "tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py",
          "tests/pytests/integration/ssh/state/test_retcode_render_exception.py",
          "tests/pytests/integration/ssh/state/test_retcode_run_fail.py",
          "tests/pytests/integration/ssh/state/test_state.py",
          "tests/pytests/integration/ssh/test_deploy.py",
          "tests/pytests/integration/ssh/test_grains.py",
          "tests/pytests/integration/ssh/test_jinja_filters.py",
          "tests/pytests/integration/ssh/test_jinja_mods.py",
          "tests/pytests/integration/ssh/test_log.py",
          "tests/pytests/integration/ssh/test_master.py",
          "tests/pytests/integration/ssh/test_mine.py",
          "tests/pytests/integration/ssh/test_pillar.py",
          "tests/pytests/integration/ssh/test_pillar_compilation.py",
          "tests/pytests/integration/ssh/test_pre_flight.py",
          "tests/pytests/integration/ssh/test_publish.py",
          "tests/pytests/integration/ssh/test_py_versions.py",
          "tests/pytests/integration/ssh/test_raw.py",
          "tests/pytests/integration/ssh/test_saltcheck.py",
          "tests/pytests/integration/ssh/test_ssh_setup.py",
          "tests/pytests/integration/ssh/test_terraform.py",
          "tests/pytests/integration/states/__init__.py",
          "tests/pytests/integration/states/test_ansiblegate.py",
          "tests/pytests/integration/states/test_beacon.py",
          "tests/pytests/integration/states/test_cron.py",
          "tests/pytests/integration/states/test_file.py",
          "tests/pytests/integration/states/test_idem.py",
          "tests/pytests/integration/states/test_include.py",
          "tests/pytests/integration/states/test_ini_manage.py",
          "tests/pytests/integration/states/test_state_test.py",
          "tests/pytests/integration/states/test_x509_v2.py",
          "tests/pytests/integration/utils/__init__.py",
          "tests/pytests/integration/utils/test_templates.py",
          "tests/pytests/integration/wheel/__init__.py",
          "tests/pytests/integration/wheel/conftest.py",
          "tests/pytests/integration/wheel/test_client.py",
          "tests/pytests/integration/wheel/test_key.py",
          "tests/pytests/integration/wheel/test_pillar_roots.py",
          "tests/pytests/pkg/__init__.py",
          "tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/downgrade/__init__.py",
          "tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "tests/pytests/pkg/download/__init__.py",
          "tests/pytests/pkg/download/test_pkg_download.py",
          "tests/pytests/pkg/integration/__init__.py",
          "tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_clean_zmq_teardown.py",
          "tests/pytests/pkg/integration/test_enabled_disabled.py",
          "tests/pytests/pkg/integration/test_help.py",
          "tests/pytests/pkg/integration/test_logrotate_config.py",
          "tests/pytests/pkg/integration/test_multi_minion.py",
          "tests/pytests/pkg/integration/test_pip.py",
          "tests/pytests/pkg/integration/test_pip_upgrade.py",
          "tests/pytests/pkg/integration/test_pkg.py",
          "tests/pytests/pkg/integration/test_python.py",
          "tests/pytests/pkg/integration/test_salt_api.py",
          "tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_exec.py",
          "tests/pytests/pkg/integration/test_salt_grains.py",
          "tests/pytests/pkg/integration/test_salt_key.py",
          "tests/pytests/pkg/integration/test_salt_minion.py",
          "tests/pytests/pkg/integration/test_salt_output.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py",
          "tests/pytests/pkg/integration/test_salt_ufw.py",
          "tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/pkg/integration/test_ssm.py",
          "tests/pytests/pkg/integration/test_systemd_config.py",
          "tests/pytests/pkg/integration/test_version.py",
          "tests/pytests/pkg/upgrade/__init__.py",
          "tests/pytests/pkg/upgrade/test_salt_upgrade.py",
          "tests/pytests/scenarios/__init__.py",
          "tests/pytests/scenarios/blackout/__init__.py",
          "tests/pytests/scenarios/blackout/conftest.py",
          "tests/pytests/scenarios/blackout/test_minion_blackout.py",
          "tests/pytests/scenarios/cluster/conftest.py",
          "tests/pytests/scenarios/cluster/test_cluster.py",
          "tests/pytests/scenarios/compat/__init__.py",
          "tests/pytests/scenarios/compat/conftest.py",
          "tests/pytests/scenarios/compat/test_with_versions.py",
          "tests/pytests/scenarios/daemons/__init__.py",
          "tests/pytests/scenarios/daemons/conftest.py",
          "tests/pytests/scenarios/daemons/test_salt_as_daemons.py",
          "tests/pytests/scenarios/failover/__init__.py",
          "tests/pytests/scenarios/failover/multimaster/__init__.py",
          "tests/pytests/scenarios/failover/multimaster/conftest.py",
          "tests/pytests/scenarios/failover/multimaster/test_failover_master.py",
          "tests/pytests/scenarios/multimaster/__init__.py",
          "tests/pytests/scenarios/multimaster/beacons/__init__.py",
          "tests/pytests/scenarios/multimaster/beacons/test_inotify.py",
          "tests/pytests/scenarios/multimaster/conftest.py",
          "tests/pytests/scenarios/multimaster/modules/__init__.py",
          "tests/pytests/scenarios/multimaster/modules/test_test.py",
          "tests/pytests/scenarios/multimaster/test_multimaster.py",
          "tests/pytests/scenarios/multimaster/test_offline_master.py",
          "tests/pytests/scenarios/performance/__init__.py",
          "tests/pytests/scenarios/performance/conftest.py",
          "tests/pytests/scenarios/performance/test_performance.py",
          "tests/pytests/scenarios/reauth/__init__.py",
          "tests/pytests/scenarios/reauth/conftest.py",
          "tests/pytests/scenarios/reauth/test_reauth.py",
          "tests/pytests/scenarios/setup/__init__.py",
          "tests/pytests/scenarios/setup/conftest.py",
          "tests/pytests/scenarios/setup/test_install.py",
          "tests/pytests/scenarios/setup/test_man.py",
          "tests/pytests/scenarios/swarm/__init__.py",
          "tests/pytests/scenarios/swarm/conftest.py",
          "tests/pytests/scenarios/swarm/test_minion_swarm.py",
          "tests/pytests/unit/__init__.py",
          "tests/pytests/unit/_logging/__init__.py",
          "tests/pytests/unit/_logging/handlers/__init__.py",
          "tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py",
          "tests/pytests/unit/auth/__init__.py",
          "tests/pytests/unit/auth/test_auth.py",
          "tests/pytests/unit/auth/test_ldap.py",
          "tests/pytests/unit/auth/test_pam.py",
          "tests/pytests/unit/auth/test_rest.py",
          "tests/pytests/unit/beacons/__init__.py",
          "tests/pytests/unit/beacons/test_adb.py",
          "tests/pytests/unit/beacons/test_avahi_announce.py",
          "tests/pytests/unit/beacons/test_bonjour_announce.py",
          "tests/pytests/unit/beacons/test_btmp.py",
          "tests/pytests/unit/beacons/test_cert_info.py",
          "tests/pytests/unit/beacons/test_diskusage.py",
          "tests/pytests/unit/beacons/test_glxinfo.py",
          "tests/pytests/unit/beacons/test_haproxy.py",
          "tests/pytests/unit/beacons/test_inotify.py",
          "tests/pytests/unit/beacons/test_journald.py",
          "tests/pytests/unit/beacons/test_load.py",
          "tests/pytests/unit/beacons/test_log_beacon.py",
          "tests/pytests/unit/beacons/test_memusage.py",
          "tests/pytests/unit/beacons/test_network_info.py",
          "tests/pytests/unit/beacons/test_network_settings.py",
          "tests/pytests/unit/beacons/test_ps.py",
          "tests/pytests/unit/beacons/test_salt_monitor.py",
          "tests/pytests/unit/beacons/test_salt_proxy.py",
          "tests/pytests/unit/beacons/test_sensehat.py",
          "tests/pytests/unit/beacons/test_service.py",
          "tests/pytests/unit/beacons/test_smartos_imgadm.py",
          "tests/pytests/unit/beacons/test_smartos_vmadm.py",
          "tests/pytests/unit/beacons/test_status.py",
          "tests/pytests/unit/beacons/test_swapusage.py",
          "tests/pytests/unit/beacons/test_telegram_bot_msg.py",
          "tests/pytests/unit/beacons/test_twilio_txt_msg.py",
          "tests/pytests/unit/beacons/test_watchdog.py",
          "tests/pytests/unit/beacons/test_wtmp.py",
          "tests/pytests/unit/cache/__init__.py",
          "tests/pytests/unit/cache/test_cache.py",
          "tests/pytests/unit/cache/test_localfs.py",
          "tests/pytests/unit/cache/test_memcache.py",
          "tests/pytests/unit/cache/test_mysql_cache.py",
          "tests/pytests/unit/channel/test_request_channel.py",
          "tests/pytests/unit/cli/__init__.py",
          "tests/pytests/unit/cli/test_batch.py",
          "tests/pytests/unit/cli/test_daemons.py",
          "tests/pytests/unit/cli/test_ssh.py",
          "tests/pytests/unit/client/__init__.py",
          "tests/pytests/unit/client/ssh/__init__.py",
          "tests/pytests/unit/client/ssh/test_password.py",
          "tests/pytests/unit/client/ssh/test_return_events.py",
          "tests/pytests/unit/client/ssh/test_roster_defaults.py",
          "tests/pytests/unit/client/ssh/test_shell.py",
          "tests/pytests/unit/client/ssh/test_single.py",
          "tests/pytests/unit/client/ssh/test_ssh.py",
          "tests/pytests/unit/client/ssh/test_ssh_classes.py",
          "tests/pytests/unit/client/ssh/wrapper/__init__.py",
          "tests/pytests/unit/client/ssh/wrapper/test_state.py",
          "tests/pytests/unit/client/test_init.py",
          "tests/pytests/unit/client/test_netapi.py",
          "tests/pytests/unit/cloud/__init__.py",
          "tests/pytests/unit/cloud/clouds/__init__.py",
          "tests/pytests/unit/cloud/clouds/test_digitalocean.py",
          "tests/pytests/unit/cloud/clouds/test_dimensiondata.py",
          "tests/pytests/unit/cloud/clouds/test_ec2.py",
          "tests/pytests/unit/cloud/clouds/test_gce.py",
          "tests/pytests/unit/cloud/clouds/test_hetzner.py",
          "tests/pytests/unit/cloud/clouds/test_joyent.py",
          "tests/pytests/unit/cloud/clouds/test_linode.py",
          "tests/pytests/unit/cloud/clouds/test_opennebula.py",
          "tests/pytests/unit/cloud/clouds/test_openstack.py",
          "tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "tests/pytests/unit/cloud/clouds/test_qingcloud.py",
          "tests/pytests/unit/cloud/clouds/test_saltify.py",
          "tests/pytests/unit/cloud/clouds/test_scaleway.py",
          "tests/pytests/unit/cloud/clouds/test_vultrpy.py",
          "tests/pytests/unit/cloud/clouds/test_xen.py",
          "tests/pytests/unit/cloud/clouds/vmware/__init__.py",
          "tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py",
          "tests/pytests/unit/cloud/clouds/vmware/test_vmware.py",
          "tests/pytests/unit/cloud/test_cloud.py",
          "tests/pytests/unit/cloud/test_map.py",
          "tests/pytests/unit/config/__init__.py",
          "tests/pytests/unit/config/schemas/__init__.py",
          "tests/pytests/unit/config/schemas/test_ssh.py",
          "tests/pytests/unit/config/test__validate_opts.py",
          "tests/pytests/unit/config/test_master_config.py",
          "tests/pytests/unit/conftest.py",
          "tests/pytests/unit/daemons/__init__.py",
          "tests/pytests/unit/daemons/masterapi/__init__.py",
          "tests/pytests/unit/daemons/masterapi/test_auto_key.py",
          "tests/pytests/unit/daemons/masterapi/test_local_funcs.py",
          "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "tests/pytests/unit/engines/__init__.py",
          "tests/pytests/unit/engines/test_engines.py",
          "tests/pytests/unit/engines/test_libvirt_events.py",
          "tests/pytests/unit/engines/test_script.py",
          "tests/pytests/unit/engines/test_slack.py",
          "tests/pytests/unit/engines/test_slack_bolt_engine.py",
          "tests/pytests/unit/engines/test_sqs_events.py",
          "tests/pytests/unit/engines/test_stalekey.py",
          "tests/pytests/unit/executors/__init__.py",
          "tests/pytests/unit/executors/test_splay.py",
          "tests/pytests/unit/fileclient/test_fileclient.py",
          "tests/pytests/unit/fileclient/test_fileclient_cache.py",
          "tests/pytests/unit/fileserver/__init__.py",
          "tests/pytests/unit/fileserver/gitfs/__init__.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/fileserver/test_s3fs.py",
          "tests/pytests/unit/fileserver/test_svnfs.py",
          "tests/pytests/unit/grains/__init__.py",
          "tests/pytests/unit/grains/test_core.py",
          "tests/pytests/unit/grains/test_disks.py",
          "tests/pytests/unit/grains/test_esxi.py",
          "tests/pytests/unit/grains/test_fibre_channel.py",
          "tests/pytests/unit/grains/test_iscsi.py",
          "tests/pytests/unit/grains/test_lvm.py",
          "tests/pytests/unit/grains/test_mdata.py",
          "tests/pytests/unit/grains/test_metadata_gce.py",
          "tests/pytests/unit/grains/test_napalm.py",
          "tests/pytests/unit/grains/test_nvme.py",
          "tests/pytests/unit/grains/test_package.py",
          "tests/pytests/unit/grains/test_pending_reboot.py",
          "tests/pytests/unit/grains/test_smartos.py",
          "tests/pytests/unit/loader/__init__.py",
          "tests/pytests/unit/loader/test_context.py",
          "tests/pytests/unit/loader/test_lazy.py",
          "tests/pytests/unit/loader/test_loader.py",
          "tests/pytests/unit/log_handlers/__init__.py",
          "tests/pytests/unit/log_handlers/test_sentry_mod.py",
          "tests/pytests/unit/matchers/__init__.py",
          "tests/pytests/unit/matchers/test_confirm_top.py",
          "tests/pytests/unit/modules/__init__.py",
          "tests/pytests/unit/modules/dockermod/__init__.py",
          "tests/pytests/unit/modules/dockermod/test_module.py",
          "tests/pytests/unit/modules/dockermod/test_trans_tar.py",
          "tests/pytests/unit/modules/file/__init__.py",
          "tests/pytests/unit/modules/file/test_file_basics.py",
          "tests/pytests/unit/modules/file/test_file_block_replace.py",
          "tests/pytests/unit/modules/file/test_file_chattr.py",
          "tests/pytests/unit/modules/file/test_file_check.py",
          "tests/pytests/unit/modules/file/test_file_comment_line.py",
          "tests/pytests/unit/modules/file/test_file_grep.py",
          "tests/pytests/unit/modules/file/test_file_line.py",
          "tests/pytests/unit/modules/file/test_file_lsattr.py",
          "tests/pytests/unit/modules/file/test_file_module.py",
          "tests/pytests/unit/modules/file/test_file_rmdir.py",
          "tests/pytests/unit/modules/file/test_file_selinux.py",
          "tests/pytests/unit/modules/napalm/__init__.py",
          "tests/pytests/unit/modules/napalm/test_bgp.py",
          "tests/pytests/unit/modules/napalm/test_formula.py",
          "tests/pytests/unit/modules/napalm/test_mod.py",
          "tests/pytests/unit/modules/napalm/test_netacl.py",
          "tests/pytests/unit/modules/napalm/test_network.py",
          "tests/pytests/unit/modules/napalm/test_ntp.py",
          "tests/pytests/unit/modules/napalm/test_route.py",
          "tests/pytests/unit/modules/napalm/test_snmp.py",
          "tests/pytests/unit/modules/napalm/test_users.py",
          "tests/pytests/unit/modules/state/__init__.py",
          "tests/pytests/unit/modules/state/test_initial_pillar.py",
          "tests/pytests/unit/modules/state/test_state.py",
          "tests/pytests/unit/modules/state/test_top_file_merge.py",
          "tests/pytests/unit/modules/test_acme.py",
          "tests/pytests/unit/modules/test_aix_status.py",
          "tests/pytests/unit/modules/test_aixpkg.py",
          "tests/pytests/unit/modules/test_aliases.py",
          "tests/pytests/unit/modules/test_alternatives.py",
          "tests/pytests/unit/modules/test_ansiblegate.py",
          "tests/pytests/unit/modules/test_apache.py",
          "tests/pytests/unit/modules/test_aptpkg.py",
          "tests/pytests/unit/modules/test_archive.py",
          "tests/pytests/unit/modules/test_artifactory.py",
          "tests/pytests/unit/modules/test_at.py",
          "tests/pytests/unit/modules/test_augeas_cfg.py",
          "tests/pytests/unit/modules/test_baredoc.py",
          "tests/pytests/unit/modules/test_beacons.py",
          "tests/pytests/unit/modules/test_bigip.py",
          "tests/pytests/unit/modules/test_bluez_bluetooth.py",
          "tests/pytests/unit/modules/test_boto_dynamodb.py",
          "tests/pytests/unit/modules/test_boto_elbv2.py",
          "tests/pytests/unit/modules/test_boto_ssm.py",
          "tests/pytests/unit/modules/test_bower.py",
          "tests/pytests/unit/modules/test_bridge.py",
          "tests/pytests/unit/modules/test_btrfs.py",
          "tests/pytests/unit/modules/test_cassandra_cql.py",
          "tests/pytests/unit/modules/test_cassandra_mod.py",
          "tests/pytests/unit/modules/test_chocolatey.py",
          "tests/pytests/unit/modules/test_chroot.py",
          "tests/pytests/unit/modules/test_cmdmod.py",
          "tests/pytests/unit/modules/test_composer.py",
          "tests/pytests/unit/modules/test_config.py",
          "tests/pytests/unit/modules/test_consul.py",
          "tests/pytests/unit/modules/test_cp.py",
          "tests/pytests/unit/modules/test_cpan.py",
          "tests/pytests/unit/modules/test_cryptdev.py",
          "tests/pytests/unit/modules/test_daemontools.py",
          "tests/pytests/unit/modules/test_data.py",
          "tests/pytests/unit/modules/test_ddns.py",
          "tests/pytests/unit/modules/test_deb_apache.py",
          "tests/pytests/unit/modules/test_deb_postgres.py",
          "tests/pytests/unit/modules/test_debconfmod.py",
          "tests/pytests/unit/modules/test_debian_ip.py",
          "tests/pytests/unit/modules/test_debian_service.py",
          "tests/pytests/unit/modules/test_defaults.py",
          "tests/pytests/unit/modules/test_devinfo.py",
          "tests/pytests/unit/modules/test_devmap.py",
          "tests/pytests/unit/modules/test_dig.py",
          "tests/pytests/unit/modules/test_disk.py",
          "tests/pytests/unit/modules/test_djangomod.py",
          "tests/pytests/unit/modules/test_dnsmasq.py",
          "tests/pytests/unit/modules/test_dnsutil.py",
          "tests/pytests/unit/modules/test_dpkg_lowpkg.py",
          "tests/pytests/unit/modules/test_drac.py",
          "tests/pytests/unit/modules/test_drbd.py",
          "tests/pytests/unit/modules/test_environ.py",
          "tests/pytests/unit/modules/test_esxcluster.py",
          "tests/pytests/unit/modules/test_esxdatacenter.py",
          "tests/pytests/unit/modules/test_etcd_mod.py",
          "tests/pytests/unit/modules/test_ethtool.py",
          "tests/pytests/unit/modules/test_event.py",
          "tests/pytests/unit/modules/test_extfs.py",
          "tests/pytests/unit/modules/test_firewalld.py",
          "tests/pytests/unit/modules/test_freebsd_sysctl.py",
          "tests/pytests/unit/modules/test_freezer.py",
          "tests/pytests/unit/modules/test_gem.py",
          "tests/pytests/unit/modules/test_genesis.py",
          "tests/pytests/unit/modules/test_gentoo_service.py",
          "tests/pytests/unit/modules/test_git.py",
          "tests/pytests/unit/modules/test_glassfish.py",
          "tests/pytests/unit/modules/test_glusterfs.py",
          "tests/pytests/unit/modules/test_gnomedesktop.py",
          "tests/pytests/unit/modules/test_google_chat.py",
          "tests/pytests/unit/modules/test_gpg.py",
          "tests/pytests/unit/modules/test_grains.py",
          "tests/pytests/unit/modules/test_groupadd.py",
          "tests/pytests/unit/modules/test_grub_legacy.py",
          "tests/pytests/unit/modules/test_guestfs.py",
          "tests/pytests/unit/modules/test_hadoop.py",
          "tests/pytests/unit/modules/test_haproxyconn.py",
          "tests/pytests/unit/modules/test_hashutil.py",
          "tests/pytests/unit/modules/test_helm.py",
          "tests/pytests/unit/modules/test_hg.py",
          "tests/pytests/unit/modules/test_http.py",
          "tests/pytests/unit/modules/test_ilo.py",
          "tests/pytests/unit/modules/test_incron.py",
          "tests/pytests/unit/modules/test_ini_manage.py",
          "tests/pytests/unit/modules/test_introspect.py",
          "tests/pytests/unit/modules/test_iosconfig.py",
          "tests/pytests/unit/modules/test_ipset.py",
          "tests/pytests/unit/modules/test_iptables.py",
          "tests/pytests/unit/modules/test_junos.py",
          "tests/pytests/unit/modules/test_key.py",
          "tests/pytests/unit/modules/test_keyboard.py",
          "tests/pytests/unit/modules/test_keystone.py",
          "tests/pytests/unit/modules/test_kmod.py",
          "tests/pytests/unit/modules/test_kubeadm.py",
          "tests/pytests/unit/modules/test_launchctl_service.py",
          "tests/pytests/unit/modules/test_ldapmod.py",
          "tests/pytests/unit/modules/test_linux_lvm.py",
          "tests/pytests/unit/modules/test_linux_service.py",
          "tests/pytests/unit/modules/test_linux_shadow.py",
          "tests/pytests/unit/modules/test_linux_sysctl.py",
          "tests/pytests/unit/modules/test_locate.py",
          "tests/pytests/unit/modules/test_logadm.py",
          "tests/pytests/unit/modules/test_logrotate.py",
          "tests/pytests/unit/modules/test_lvs.py",
          "tests/pytests/unit/modules/test_mac_assistive.py",
          "tests/pytests/unit/modules/test_mac_brew_pkg.py",
          "tests/pytests/unit/modules/test_mac_desktop.py",
          "tests/pytests/unit/modules/test_mac_group.py",
          "tests/pytests/unit/modules/test_mac_keychain.py",
          "tests/pytests/unit/modules/test_mac_pkgutil.py",
          "tests/pytests/unit/modules/test_mac_power.py",
          "tests/pytests/unit/modules/test_mac_service.py",
          "tests/pytests/unit/modules/test_mac_softwareupdate.py",
          "tests/pytests/unit/modules/test_mac_sysctl.py",
          "tests/pytests/unit/modules/test_mac_user.py",
          "tests/pytests/unit/modules/test_mac_xattr.py",
          "tests/pytests/unit/modules/test_macdefaults.py",
          "tests/pytests/unit/modules/test_macpackage.py",
          "tests/pytests/unit/modules/test_mandrill.py",
          "tests/pytests/unit/modules/test_match.py",
          "tests/pytests/unit/modules/test_mdadm_raid.py",
          "tests/pytests/unit/modules/test_mine.py",
          "tests/pytests/unit/modules/test_mod_random.py",
          "tests/pytests/unit/modules/test_modjk.py",
          "tests/pytests/unit/modules/test_mongodb.py",
          "tests/pytests/unit/modules/test_monit.py",
          "tests/pytests/unit/modules/test_moosefs.py",
          "tests/pytests/unit/modules/test_mount.py",
          "tests/pytests/unit/modules/test_msteams.py",
          "tests/pytests/unit/modules/test_munin.py",
          "tests/pytests/unit/modules/test_mysql.py",
          "tests/pytests/unit/modules/test_nacl.py",
          "tests/pytests/unit/modules/test_nagios.py",
          "tests/pytests/unit/modules/test_network.py",
          "tests/pytests/unit/modules/test_nexus.py",
          "tests/pytests/unit/modules/test_nfs3.py",
          "tests/pytests/unit/modules/test_nftables.py",
          "tests/pytests/unit/modules/test_nginx.py",
          "tests/pytests/unit/modules/test_nilrt_ip.py",
          "tests/pytests/unit/modules/test_npm.py",
          "tests/pytests/unit/modules/test_openbsd_sysctl.py",
          "tests/pytests/unit/modules/test_openbsdpkg.py",
          "tests/pytests/unit/modules/test_openbsdrcctl_service.py",
          "tests/pytests/unit/modules/test_openscap.py",
          "tests/pytests/unit/modules/test_openvswitch.py",
          "tests/pytests/unit/modules/test_opkg.py",
          "tests/pytests/unit/modules/test_oracle.py",
          "tests/pytests/unit/modules/test_osquery.py",
          "tests/pytests/unit/modules/test_pacmanpkg.py",
          "tests/pytests/unit/modules/test_pagerduty.py",
          "tests/pytests/unit/modules/test_pam.py",
          "tests/pytests/unit/modules/test_parallels.py",
          "tests/pytests/unit/modules/test_pcs.py",
          "tests/pytests/unit/modules/test_pdbedit.py",
          "tests/pytests/unit/modules/test_pecl.py",
          "tests/pytests/unit/modules/test_pf.py",
          "tests/pytests/unit/modules/test_pillar.py",
          "tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/modules/test_pkg_resource.py",
          "tests/pytests/unit/modules/test_pkgin.py",
          "tests/pytests/unit/modules/test_pkgng.py",
          "tests/pytests/unit/modules/test_pkgutil.py",
          "tests/pytests/unit/modules/test_portage_config.py",
          "tests/pytests/unit/modules/test_postfix.py",
          "tests/pytests/unit/modules/test_postgres.py",
          "tests/pytests/unit/modules/test_poudriere.py",
          "tests/pytests/unit/modules/test_powerpath.py",
          "tests/pytests/unit/modules/test_proxy.py",
          "tests/pytests/unit/modules/test_ps.py",
          "tests/pytests/unit/modules/test_publish.py",
          "tests/pytests/unit/modules/test_puppet.py",
          "tests/pytests/unit/modules/test_purefa.py",
          "tests/pytests/unit/modules/test_purefb.py",
          "tests/pytests/unit/modules/test_pw_group.py",
          "tests/pytests/unit/modules/test_pw_user.py",
          "tests/pytests/unit/modules/test_pyenv.py",
          "tests/pytests/unit/modules/test_qemu_img.py",
          "tests/pytests/unit/modules/test_qemu_nbd.py",
          "tests/pytests/unit/modules/test_rabbitmq.py",
          "tests/pytests/unit/modules/test_rbenv.py",
          "tests/pytests/unit/modules/test_rdp.py",
          "tests/pytests/unit/modules/test_rebootmgr.py",
          "tests/pytests/unit/modules/test_redismod.py",
          "tests/pytests/unit/modules/test_reg.py",
          "tests/pytests/unit/modules/test_restartcheck.py",
          "tests/pytests/unit/modules/test_restconf.py",
          "tests/pytests/unit/modules/test_ret.py",
          "tests/pytests/unit/modules/test_rh_service.py",
          "tests/pytests/unit/modules/test_riak.py",
          "tests/pytests/unit/modules/test_rpm_lowpkg.py",
          "tests/pytests/unit/modules/test_rsync.py",
          "tests/pytests/unit/modules/test_rvm.py",
          "tests/pytests/unit/modules/test_s3.py",
          "tests/pytests/unit/modules/test_s6.py",
          "tests/pytests/unit/modules/test_salt_version.py",
          "tests/pytests/unit/modules/test_saltcheck.py",
          "tests/pytests/unit/modules/test_saltcloudmod.py",
          "tests/pytests/unit/modules/test_saltutil.py",
          "tests/pytests/unit/modules/test_schedule.py",
          "tests/pytests/unit/modules/test_scsi.py",
          "tests/pytests/unit/modules/test_sdb.py",
          "tests/pytests/unit/modules/test_seed.py",
          "tests/pytests/unit/modules/test_selinux.py",
          "tests/pytests/unit/modules/test_sensors.py",
          "tests/pytests/unit/modules/test_serverdensity_device.py",
          "tests/pytests/unit/modules/test_servicenow.py",
          "tests/pytests/unit/modules/test_slack.py",
          "tests/pytests/unit/modules/test_slackware_service.py",
          "tests/pytests/unit/modules/test_slsutil.py",
          "tests/pytests/unit/modules/test_smartos_imgadm.py",
          "tests/pytests/unit/modules/test_smf_service.py",
          "tests/pytests/unit/modules/test_smtp.py",
          "tests/pytests/unit/modules/test_solaris_shadow.py",
          "tests/pytests/unit/modules/test_solarisipspkg.py",
          "tests/pytests/unit/modules/test_solarispkg.py",
          "tests/pytests/unit/modules/test_solr.py",
          "tests/pytests/unit/modules/test_state.py",
          "tests/pytests/unit/modules/test_status.py",
          "tests/pytests/unit/modules/test_suse_ip.py",
          "tests/pytests/unit/modules/test_svn.py",
          "tests/pytests/unit/modules/test_swarm.py",
          "tests/pytests/unit/modules/test_swift.py",
          "tests/pytests/unit/modules/test_sysbench.py",
          "tests/pytests/unit/modules/test_syslog_ng.py",
          "tests/pytests/unit/modules/test_system.py",
          "tests/pytests/unit/modules/test_systemd_service.py",
          "tests/pytests/unit/modules/test_telegram.py",
          "tests/pytests/unit/modules/test_timezone.py",
          "tests/pytests/unit/modules/test_tls.py",
          "tests/pytests/unit/modules/test_transactional_update.py",
          "tests/pytests/unit/modules/test_tuned.py",
          "tests/pytests/unit/modules/test_udev.py",
          "tests/pytests/unit/modules/test_uptime.py",
          "tests/pytests/unit/modules/test_useradd.py",
          "tests/pytests/unit/modules/test_uwsgi.py",
          "tests/pytests/unit/modules/test_vagrant.py",
          "tests/pytests/unit/modules/test_varnish.py",
          "tests/pytests/unit/modules/test_vault.py",
          "tests/pytests/unit/modules/test_vmctl.py",
          "tests/pytests/unit/modules/test_webutil.py",
          "tests/pytests/unit/modules/test_win_appx.py",
          "tests/pytests/unit/modules/test_win_autoruns.py",
          "tests/pytests/unit/modules/test_win_certutil.py",
          "tests/pytests/unit/modules/test_win_disk.py",
          "tests/pytests/unit/modules/test_win_dism.py",
          "tests/pytests/unit/modules/test_win_dns_client.py",
          "tests/pytests/unit/modules/test_win_event.py",
          "tests/pytests/unit/modules/test_win_file.py",
          "tests/pytests/unit/modules/test_win_iis.py",
          "tests/pytests/unit/modules/test_win_ip.py",
          "tests/pytests/unit/modules/test_win_lgpo_reg.py",
          "tests/pytests/unit/modules/test_win_licence.py",
          "tests/pytests/unit/modules/test_win_network.py",
          "tests/pytests/unit/modules/test_win_ntp.py",
          "tests/pytests/unit/modules/test_win_path.py",
          "tests/pytests/unit/modules/test_win_pkg.py",
          "tests/pytests/unit/modules/test_win_pki.py",
          "tests/pytests/unit/modules/test_win_powercfg.py",
          "tests/pytests/unit/modules/test_win_psget.py",
          "tests/pytests/unit/modules/test_win_servermanager.py",
          "tests/pytests/unit/modules/test_win_service.py",
          "tests/pytests/unit/modules/test_win_shadow.py",
          "tests/pytests/unit/modules/test_win_snmp.py",
          "tests/pytests/unit/modules/test_win_system.py",
          "tests/pytests/unit/modules/test_win_task.py",
          "tests/pytests/unit/modules/test_win_timezone.py",
          "tests/pytests/unit/modules/test_win_wua.py",
          "tests/pytests/unit/modules/test_win_wusa.py",
          "tests/pytests/unit/modules/test_xapi_virt.py",
          "tests/pytests/unit/modules/test_xfs.py",
          "tests/pytests/unit/modules/test_xml.py",
          "tests/pytests/unit/modules/test_yumpkg.py",
          "tests/pytests/unit/modules/test_zabbix.py",
          "tests/pytests/unit/modules/test_zenoss.py",
          "tests/pytests/unit/modules/test_zfs.py",
          "tests/pytests/unit/modules/test_zfs_solaris10.py",
          "tests/pytests/unit/modules/test_zfs_solaris11.py",
          "tests/pytests/unit/modules/test_znc.py",
          "tests/pytests/unit/modules/test_zpool.py",
          "tests/pytests/unit/modules/test_zypperpkg.py",
          "tests/pytests/unit/modules/virt/__init__.py",
          "tests/pytests/unit/modules/virt/conftest.py",
          "tests/pytests/unit/modules/virt/test_domain.py",
          "tests/pytests/unit/modules/virt/test_helpers.py",
          "tests/pytests/unit/modules/virt/test_host.py",
          "tests/pytests/unit/modules/virt/test_network.py",
          "tests/pytests/unit/modules/win_lgpo/__init__.py",
          "tests/pytests/unit/modules/win_lgpo/test__policy_info.py",
          "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "tests/pytests/unit/modules/win_lgpo/test_adv_audit.py",
          "tests/pytests/unit/modules/win_lgpo/test_defined_policies.py",
          "tests/pytests/unit/modules/win_lgpo/test_get_policy.py",
          "tests/pytests/unit/modules/win_lgpo/test_mechanisms.py",
          "tests/pytests/unit/modules/win_lgpo/test_netsh.py",
          "tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py",
          "tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_info.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_resources.py",
          "tests/pytests/unit/modules/win_lgpo/test_reg_pol.py",
          "tests/pytests/unit/modules/win_lgpo/test_secedit.py",
          "tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py",
          "tests/pytests/unit/netapi/__init__.py",
          "tests/pytests/unit/netapi/cherrypy/__init__.py",
          "tests/pytests/unit/netapi/cherrypy/test_events.py",
          "tests/pytests/unit/netapi/cherrypy/test_login.py",
          "tests/pytests/unit/netapi/saltnado/__init__.py",
          "tests/pytests/unit/netapi/saltnado/test_base_handler.py",
          "tests/pytests/unit/output/__init__.py",
          "tests/pytests/unit/output/test_highstate.py",
          "tests/pytests/unit/output/test_highstate_terse.py",
          "tests/pytests/unit/output/test_json_out.py",
          "tests/pytests/unit/output/test_nested.py",
          "tests/pytests/unit/output/test_table_out.py",
          "tests/pytests/unit/output/test_yaml_out.py",
          "tests/pytests/unit/pillar/__init__.py",
          "tests/pytests/unit/pillar/test_consul_pillar.py",
          "tests/pytests/unit/pillar/test_csvpillar.py",
          "tests/pytests/unit/pillar/test_etcd_pillar.py",
          "tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py",
          "tests/pytests/unit/pillar/test_file_tree.py",
          "tests/pytests/unit/pillar/test_http_json_pillar.py",
          "tests/pytests/unit/pillar/test_http_yaml_pillar.py",
          "tests/pytests/unit/pillar/test_mongo.py",
          "tests/pytests/unit/pillar/test_mysql.py",
          "tests/pytests/unit/pillar/test_nacl.py",
          "tests/pytests/unit/pillar/test_netbox.py",
          "tests/pytests/unit/pillar/test_nodegroups.py",
          "tests/pytests/unit/pillar/test_pepa.py",
          "tests/pytests/unit/pillar/test_pillar.py",
          "tests/pytests/unit/pillar/test_pillar_ldap.py",
          "tests/pytests/unit/pillar/test_s3.py",
          "tests/pytests/unit/pillar/test_saltclass.py",
          "tests/pytests/unit/pillar/test_sql_base.py",
          "tests/pytests/unit/pillar/test_sqlcipher.py",
          "tests/pytests/unit/pillar/test_sqlite3.py",
          "tests/pytests/unit/pillar/test_stack.py",
          "tests/pytests/unit/pillar/test_vault.py",
          "tests/pytests/unit/proxy/__init__.py",
          "tests/pytests/unit/proxy/nxos/__init__.py",
          "tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py",
          "tests/pytests/unit/proxy/nxos/test_nxos_ssh.py",
          "tests/pytests/unit/proxy/test_cimc.py",
          "tests/pytests/unit/proxy/test_esxcluster.py",
          "tests/pytests/unit/proxy/test_esxdatacenter.py",
          "tests/pytests/unit/proxy/test_junos.py",
          "tests/pytests/unit/proxy/test_napalm.py",
          "tests/pytests/unit/proxy/test_netmiko_px.py",
          "tests/pytests/unit/proxy/test_panos.py",
          "tests/pytests/unit/proxy/test_restconf.py",
          "tests/pytests/unit/proxy/test_ssh_sample.py",
          "tests/pytests/unit/renderers/__init__.py",
          "tests/pytests/unit/renderers/test_aws_kms.py",
          "tests/pytests/unit/renderers/test_gpg.py",
          "tests/pytests/unit/renderers/test_nacl.py",
          "tests/pytests/unit/renderers/test_pass.py",
          "tests/pytests/unit/renderers/test_stateconf.py",
          "tests/pytests/unit/renderers/test_toml.py",
          "tests/pytests/unit/renderers/test_yaml.py",
          "tests/pytests/unit/renderers/test_yamlex.py",
          "tests/pytests/unit/returners/__init__.py",
          "tests/pytests/unit/returners/local_cache/__init__.py",
          "tests/pytests/unit/returners/local_cache/test_local_cache.py",
          "tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py",
          "tests/pytests/unit/returners/test_elasticsearch_return.py",
          "tests/pytests/unit/returners/test_etcd_return.py",
          "tests/pytests/unit/returners/test_highstate_return.py",
          "tests/pytests/unit/returners/test_mongo_future_return.py",
          "tests/pytests/unit/returners/test_mysql.py",
          "tests/pytests/unit/returners/test_nagios_nrdp_return.py",
          "tests/pytests/unit/returners/test_pgjsonb.py",
          "tests/pytests/unit/returners/test_postgres.py",
          "tests/pytests/unit/returners/test_postgres_local_cache.py",
          "tests/pytests/unit/returners/test_sentry_return.py",
          "tests/pytests/unit/returners/test_slack_webhook_return.py",
          "tests/pytests/unit/returners/test_smtp_return.py",
          "tests/pytests/unit/returners/test_splunk_return.py",
          "tests/pytests/unit/returners/test_syslog_return.py",
          "tests/pytests/unit/returners/test_telegram_return.py",
          "tests/pytests/unit/roster/__init__.py",
          "tests/pytests/unit/roster/test_ansible.py",
          "tests/pytests/unit/roster/test_clustershell.py",
          "tests/pytests/unit/roster/test_dir.py",
          "tests/pytests/unit/roster/test_scan.py",
          "tests/pytests/unit/roster/test_ssh_config.py",
          "tests/pytests/unit/roster/test_sshknownhosts.py",
          "tests/pytests/unit/roster/test_terraform.py",
          "tests/pytests/unit/runners/__init__.py",
          "tests/pytests/unit/runners/test_asam.py",
          "tests/pytests/unit/runners/test_bgp.py",
          "tests/pytests/unit/runners/test_cache.py",
          "tests/pytests/unit/runners/test_fileserver.py",
          "tests/pytests/unit/runners/test_git_pillar.py",
          "tests/pytests/unit/runners/test_jobs.py",
          "tests/pytests/unit/runners/test_manage.py",
          "tests/pytests/unit/runners/test_nacl.py",
          "tests/pytests/unit/runners/test_net.py",
          "tests/pytests/unit/runners/test_network.py",
          "tests/pytests/unit/runners/test_pillar.py",
          "tests/pytests/unit/runners/test_queue.py",
          "tests/pytests/unit/runners/test_reactor.py",
          "tests/pytests/unit/runners/test_saltutil.py",
          "tests/pytests/unit/runners/test_spacewalk.py",
          "tests/pytests/unit/runners/test_state.py",
          "tests/pytests/unit/runners/test_winrepo.py",
          "tests/pytests/unit/runners/vault/__init__.py",
          "tests/pytests/unit/runners/vault/test_token_auth_deprecated.py",
          "tests/pytests/unit/runners/vault/test_vault.py",
          "tests/pytests/unit/sdb/__init__.py",
          "tests/pytests/unit/sdb/test_etcd_db.py",
          "tests/pytests/unit/sdb/test_vault.py",
          "tests/pytests/unit/sdb/test_yaml.py",
          "tests/pytests/unit/serializers/__init__.py",
          "tests/pytests/unit/serializers/test_serializers.py",
          "tests/pytests/unit/spm/__init__.py",
          "tests/pytests/unit/spm/test_pkgfiles.py",
          "tests/pytests/unit/spm/test_spm.py",
          "tests/pytests/unit/state/__init__.py",
          "tests/pytests/unit/state/test_global_state_conditions.py",
          "tests/pytests/unit/state/test_multi_env_highstate.py",
          "tests/pytests/unit/state/test_reactor_compiler.py",
          "tests/pytests/unit/state/test_state_basic.py",
          "tests/pytests/unit/state/test_state_compiler.py",
          "tests/pytests/unit/state/test_state_format_slots.py",
          "tests/pytests/unit/state/test_state_highstate.py",
          "tests/pytests/unit/state/test_state_options.py",
          "tests/pytests/unit/state/test_state_returns.py",
          "tests/pytests/unit/state/test_sub_state_returns.py",
          "tests/pytests/unit/states/__init__.py",
          "tests/pytests/unit/states/apache/__init__.py",
          "tests/pytests/unit/states/apache/test_apache.py",
          "tests/pytests/unit/states/apache/test_conf.py",
          "tests/pytests/unit/states/apache/test_module.py",
          "tests/pytests/unit/states/apache/test_site.py",
          "tests/pytests/unit/states/file/__init__.py",
          "tests/pytests/unit/states/file/test__clean_dir.py",
          "tests/pytests/unit/states/file/test_absent.py",
          "tests/pytests/unit/states/file/test_comment.py",
          "tests/pytests/unit/states/file/test_copy.py",
          "tests/pytests/unit/states/file/test_directory.py",
          "tests/pytests/unit/states/file/test_filestate.py",
          "tests/pytests/unit/states/file/test_find_keep_files.py",
          "tests/pytests/unit/states/file/test_hardlink.py",
          "tests/pytests/unit/states/file/test_keyvalue.py",
          "tests/pytests/unit/states/file/test_managed.py",
          "tests/pytests/unit/states/file/test_mod_beacon.py",
          "tests/pytests/unit/states/file/test_prepend.py",
          "tests/pytests/unit/states/file/test_private_functions.py",
          "tests/pytests/unit/states/file/test_pruned.py",
          "tests/pytests/unit/states/file/test_rename.py",
          "tests/pytests/unit/states/file/test_retention_schedule.py",
          "tests/pytests/unit/states/file/test_selinux.py",
          "tests/pytests/unit/states/file/test_symlink.py",
          "tests/pytests/unit/states/file/test_tidied.py",
          "tests/pytests/unit/states/mysql/__init__.py",
          "tests/pytests/unit/states/mysql/test_database.py",
          "tests/pytests/unit/states/mysql/test_grants.py",
          "tests/pytests/unit/states/mysql/test_query.py",
          "tests/pytests/unit/states/mysql/test_user.py",
          "tests/pytests/unit/states/postgresql/__init__.py",
          "tests/pytests/unit/states/postgresql/test_cluster.py",
          "tests/pytests/unit/states/postgresql/test_database.py",
          "tests/pytests/unit/states/postgresql/test_extension.py",
          "tests/pytests/unit/states/postgresql/test_group.py",
          "tests/pytests/unit/states/postgresql/test_initdb.py",
          "tests/pytests/unit/states/postgresql/test_language.py",
          "tests/pytests/unit/states/postgresql/test_privileges.py",
          "tests/pytests/unit/states/postgresql/test_schema.py",
          "tests/pytests/unit/states/postgresql/test_user.py",
          "tests/pytests/unit/states/rabbitmq/__init__.py",
          "tests/pytests/unit/states/rabbitmq/test_cluster.py",
          "tests/pytests/unit/states/rabbitmq/test_plugin.py",
          "tests/pytests/unit/states/rabbitmq/test_policy.py",
          "tests/pytests/unit/states/rabbitmq/test_vhost.py",
          "tests/pytests/unit/states/saltmod/__init__.py",
          "tests/pytests/unit/states/saltmod/test_function.py",
          "tests/pytests/unit/states/saltmod/test_parallel_runners.py",
          "tests/pytests/unit/states/saltmod/test_runner.py",
          "tests/pytests/unit/states/saltmod/test_state.py",
          "tests/pytests/unit/states/saltmod/test_wait_for_event.py",
          "tests/pytests/unit/states/saltmod/test_wheel.py",
          "tests/pytests/unit/states/test_acme.py",
          "tests/pytests/unit/states/test_alias.py",
          "tests/pytests/unit/states/test_alternatives.py",
          "tests/pytests/unit/states/test_ansiblegate.py",
          "tests/pytests/unit/states/test_aptpkg.py",
          "tests/pytests/unit/states/test_archive.py",
          "tests/pytests/unit/states/test_artifactory.py",
          "tests/pytests/unit/states/test_at.py",
          "tests/pytests/unit/states/test_augeas.py",
          "tests/pytests/unit/states/test_aws_sqs.py",
          "tests/pytests/unit/states/test_beacon.py",
          "tests/pytests/unit/states/test_blockdev.py",
          "tests/pytests/unit/states/test_boto_asg.py",
          "tests/pytests/unit/states/test_boto_cloudfront.py",
          "tests/pytests/unit/states/test_boto_cloudtrail.py",
          "tests/pytests/unit/states/test_boto_cloudwatch_alarm.py",
          "tests/pytests/unit/states/test_boto_cloudwatch_event.py",
          "tests/pytests/unit/states/test_boto_dynamodb.py",
          "tests/pytests/unit/states/test_boto_ec2.py",
          "tests/pytests/unit/states/test_boto_elasticache.py",
          "tests/pytests/unit/states/test_boto_elasticsearch_domain.py",
          "tests/pytests/unit/states/test_boto_elb.py",
          "tests/pytests/unit/states/test_boto_iam_role.py",
          "tests/pytests/unit/states/test_boto_iot.py",
          "tests/pytests/unit/states/test_boto_kinesis.py",
          "tests/pytests/unit/states/test_boto_lambda.py",
          "tests/pytests/unit/states/test_boto_lc.py",
          "tests/pytests/unit/states/test_boto_route53.py",
          "tests/pytests/unit/states/test_boto_s3_bucket.py",
          "tests/pytests/unit/states/test_boto_secgroup.py",
          "tests/pytests/unit/states/test_boto_sns.py",
          "tests/pytests/unit/states/test_boto_sqs.py",
          "tests/pytests/unit/states/test_bower.py",
          "tests/pytests/unit/states/test_btrfs.py",
          "tests/pytests/unit/states/test_chef.py",
          "tests/pytests/unit/states/test_chocolatey.py",
          "tests/pytests/unit/states/test_cloud.py",
          "tests/pytests/unit/states/test_cmd.py",
          "tests/pytests/unit/states/test_composer.py",
          "tests/pytests/unit/states/test_consul.py",
          "tests/pytests/unit/states/test_ddns.py",
          "tests/pytests/unit/states/test_debconfmod.py",
          "tests/pytests/unit/states/test_docker_image.py",
          "tests/pytests/unit/states/test_docker_volume.py",
          "tests/pytests/unit/states/test_drac.py",
          "tests/pytests/unit/states/test_elasticsearch.py",
          "tests/pytests/unit/states/test_environ.py",
          "tests/pytests/unit/states/test_eselect.py",
          "tests/pytests/unit/states/test_etcd_mod.py",
          "tests/pytests/unit/states/test_ethtool.py",
          "tests/pytests/unit/states/test_event.py",
          "tests/pytests/unit/states/test_file.py",
          "tests/pytests/unit/states/test_gem.py",
          "tests/pytests/unit/states/test_git.py",
          "tests/pytests/unit/states/test_glusterfs.py",
          "tests/pytests/unit/states/test_gnomedesktop.py",
          "tests/pytests/unit/states/test_gpg.py",
          "tests/pytests/unit/states/test_grafana.py",
          "tests/pytests/unit/states/test_grafana_datasource.py",
          "tests/pytests/unit/states/test_group.py",
          "tests/pytests/unit/states/test_helm.py",
          "tests/pytests/unit/states/test_hg.py",
          "tests/pytests/unit/states/test_host.py",
          "tests/pytests/unit/states/test_http.py",
          "tests/pytests/unit/states/test_incron.py",
          "tests/pytests/unit/states/test_influxdb08_database.py",
          "tests/pytests/unit/states/test_influxdb08_user.py",
          "tests/pytests/unit/states/test_influxdb_continuous_query.py",
          "tests/pytests/unit/states/test_ini_manage.py",
          "tests/pytests/unit/states/test_ipmi.py",
          "tests/pytests/unit/states/test_iptables.py",
          "tests/pytests/unit/states/test_jboss7.py",
          "tests/pytests/unit/states/test_kapacitor.py",
          "tests/pytests/unit/states/test_kernelpkg.py",
          "tests/pytests/unit/states/test_keyboard.py",
          "tests/pytests/unit/states/test_keystone.py",
          "tests/pytests/unit/states/test_keystore.py",
          "tests/pytests/unit/states/test_kmod.py",
          "tests/pytests/unit/states/test_kubernetes.py",
          "tests/pytests/unit/states/test_layman.py",
          "tests/pytests/unit/states/test_ldap.py",
          "tests/pytests/unit/states/test_libcloud_dns.py",
          "tests/pytests/unit/states/test_linux_acl.py",
          "tests/pytests/unit/states/test_locale.py",
          "tests/pytests/unit/states/test_lvm.py",
          "tests/pytests/unit/states/test_lvs_server.py",
          "tests/pytests/unit/states/test_lvs_service.py",
          "tests/pytests/unit/states/test_lxc.py",
          "tests/pytests/unit/states/test_mac_assistive.py",
          "tests/pytests/unit/states/test_mac_keychain.py",
          "tests/pytests/unit/states/test_mac_xattr.py",
          "tests/pytests/unit/states/test_macdefaults.py",
          "tests/pytests/unit/states/test_macpackage.py",
          "tests/pytests/unit/states/test_makeconf.py",
          "tests/pytests/unit/states/test_mdadm_raid.py",
          "tests/pytests/unit/states/test_memcached.py",
          "tests/pytests/unit/states/test_modjk.py",
          "tests/pytests/unit/states/test_modjk_worker.py",
          "tests/pytests/unit/states/test_mongodb_database.py",
          "tests/pytests/unit/states/test_mongodb_user.py",
          "tests/pytests/unit/states/test_mount.py",
          "tests/pytests/unit/states/test_net_napalm_yang.py",
          "tests/pytests/unit/states/test_netconfig.py",
          "tests/pytests/unit/states/test_network.py",
          "tests/pytests/unit/states/test_nexus.py",
          "tests/pytests/unit/states/test_nftables.py",
          "tests/pytests/unit/states/test_npm.py",
          "tests/pytests/unit/states/test_ntp.py",
          "tests/pytests/unit/states/test_nxos.py",
          "tests/pytests/unit/states/test_openstack_config.py",
          "tests/pytests/unit/states/test_openvswitch_bridge.py",
          "tests/pytests/unit/states/test_openvswitch_db.py",
          "tests/pytests/unit/states/test_openvswitch_port.py",
          "tests/pytests/unit/states/test_pagerduty.py",
          "tests/pytests/unit/states/test_pdbedit.py",
          "tests/pytests/unit/states/test_pecl.py",
          "tests/pytests/unit/states/test_pip.py",
          "tests/pytests/unit/states/test_pkg.py",
          "tests/pytests/unit/states/test_pkgng.py",
          "tests/pytests/unit/states/test_pkgrepo.py",
          "tests/pytests/unit/states/test_portage_config.py",
          "tests/pytests/unit/states/test_ports.py",
          "tests/pytests/unit/states/test_powerpath.py",
          "tests/pytests/unit/states/test_process.py",
          "tests/pytests/unit/states/test_proxy.py",
          "tests/pytests/unit/states/test_pyenv.py",
          "tests/pytests/unit/states/test_pyrax_queues.py",
          "tests/pytests/unit/states/test_quota.py",
          "tests/pytests/unit/states/test_rbenv.py",
          "tests/pytests/unit/states/test_rdp.py",
          "tests/pytests/unit/states/test_redismod.py",
          "tests/pytests/unit/states/test_restconf.py",
          "tests/pytests/unit/states/test_rsync.py",
          "tests/pytests/unit/states/test_rvm.py",
          "tests/pytests/unit/states/test_saltutil.py",
          "tests/pytests/unit/states/test_schedule.py",
          "tests/pytests/unit/states/test_selinux.py",
          "tests/pytests/unit/states/test_serverdensity_device.py",
          "tests/pytests/unit/states/test_service.py",
          "tests/pytests/unit/states/test_slack.py",
          "tests/pytests/unit/states/test_smartos.py",
          "tests/pytests/unit/states/test_smtp.py",
          "tests/pytests/unit/states/test_splunk_search.py",
          "tests/pytests/unit/states/test_ssh_auth.py",
          "tests/pytests/unit/states/test_ssh_known_hosts.py",
          "tests/pytests/unit/states/test_status.py",
          "tests/pytests/unit/states/test_supervisord.py",
          "tests/pytests/unit/states/test_svn.py",
          "tests/pytests/unit/states/test_sysctl.py",
          "tests/pytests/unit/states/test_sysfs.py",
          "tests/pytests/unit/states/test_sysrc.py",
          "tests/pytests/unit/states/test_test.py",
          "tests/pytests/unit/states/test_timezone.py",
          "tests/pytests/unit/states/test_tomcat.py",
          "tests/pytests/unit/states/test_user.py",
          "tests/pytests/unit/states/test_vault.py",
          "tests/pytests/unit/states/test_vbox_guest.py",
          "tests/pytests/unit/states/test_virtualenv_mod.py",
          "tests/pytests/unit/states/test_webutil.py",
          "tests/pytests/unit/states/test_win_appx.py",
          "tests/pytests/unit/states/test_win_certutil.py",
          "tests/pytests/unit/states/test_win_dism.py",
          "tests/pytests/unit/states/test_win_dns_client.py",
          "tests/pytests/unit/states/test_win_iis.py",
          "tests/pytests/unit/states/test_win_lgpo.py",
          "tests/pytests/unit/states/test_win_lgpo_reg.py",
          "tests/pytests/unit/states/test_win_license.py",
          "tests/pytests/unit/states/test_win_network.py",
          "tests/pytests/unit/states/test_win_path.py",
          "tests/pytests/unit/states/test_win_pki.py",
          "tests/pytests/unit/states/test_win_powercfg.py",
          "tests/pytests/unit/states/test_win_servermanager.py",
          "tests/pytests/unit/states/test_win_snmp.py",
          "tests/pytests/unit/states/test_win_system.py",
          "tests/pytests/unit/states/test_win_wua.py",
          "tests/pytests/unit/states/test_win_wusa.py",
          "tests/pytests/unit/states/test_winrepo.py",
          "tests/pytests/unit/states/test_xml.py",
          "tests/pytests/unit/states/test_xmpp.py",
          "tests/pytests/unit/states/test_zfs.py",
          "tests/pytests/unit/states/test_zk_concurrency.py",
          "tests/pytests/unit/states/test_zpool.py",
          "tests/pytests/unit/states/virt/__init__.py",
          "tests/pytests/unit/states/virt/conftest.py",
          "tests/pytests/unit/states/virt/helpers.py",
          "tests/pytests/unit/states/virt/test_domain.py",
          "tests/pytests/unit/states/virt/test_network.py",
          "tests/pytests/unit/states/zabbix/__init__.py",
          "tests/pytests/unit/states/zabbix/test_action.py",
          "tests/pytests/unit/states/zabbix/test_host.py",
          "tests/pytests/unit/states/zabbix/test_template.py",
          "tests/pytests/unit/states/zabbix/test_valuemap.py",
          "tests/pytests/unit/test_acl.py",
          "tests/pytests/unit/test_auth.py",
          "tests/pytests/unit/test_beacons.py",
          "tests/pytests/unit/test_client.py",
          "tests/pytests/unit/test_config.py",
          "tests/pytests/unit/test_crypt.py",
          "tests/pytests/unit/test_defaults.py",
          "tests/pytests/unit/test_log.py",
          "tests/pytests/unit/test_master.py",
          "tests/pytests/unit/test_minion.py",
          "tests/pytests/unit/test_payload.py",
          "tests/pytests/unit/test_pytest_pass_fail.py",
          "tests/pytests/unit/test_scripts.py",
          "tests/pytests/unit/test_syspaths.py",
          "tests/pytests/unit/test_template.py",
          "tests/pytests/unit/test_version.py",
          "tests/pytests/unit/tokens/__init__.py",
          "tests/pytests/unit/tokens/test_localfs.py",
          "tests/pytests/unit/tops/__init__.py",
          "tests/pytests/unit/tops/test_ext_nodes.py",
          "tests/pytests/unit/transport/__init__.py",
          "tests/pytests/unit/transport/test_base.py",
          "tests/pytests/unit/transport/test_ipc.py",
          "tests/pytests/unit/transport/test_publish_client.py",
          "tests/pytests/unit/transport/test_tcp.py",
          "tests/pytests/unit/transport/test_zeromq.py",
          "tests/pytests/unit/utils/__init__.py",
          "tests/pytests/unit/utils/event/__init__.py",
          "tests/pytests/unit/utils/event/test_event.py",
          "tests/pytests/unit/utils/event/test_event_return.py",
          "tests/pytests/unit/utils/jinja/__init__.py",
          "tests/pytests/unit/utils/jinja/conftest.py",
          "tests/pytests/unit/utils/jinja/test_custom_extensions.py",
          "tests/pytests/unit/utils/jinja/test_dot_notation_looup.py",
          "tests/pytests/unit/utils/jinja/test_get_template.py",
          "tests/pytests/unit/utils/jinja/test_jinja.py",
          "tests/pytests/unit/utils/jinja/test_jinja_default_options.py",
          "tests/pytests/unit/utils/jinja/test_salt_cache_loader.py",
          "tests/pytests/unit/utils/parsers/test_daemon_mixin.py",
          "tests/pytests/unit/utils/parsers/test_log_parsers.py",
          "tests/pytests/unit/utils/parsers/test_saltfile_mixin.py",
          "tests/pytests/unit/utils/scheduler/__init__.py",
          "tests/pytests/unit/utils/scheduler/conftest.py",
          "tests/pytests/unit/utils/scheduler/test_error.py",
          "tests/pytests/unit/utils/scheduler/test_eval.py",
          "tests/pytests/unit/utils/scheduler/test_helpers.py",
          "tests/pytests/unit/utils/scheduler/test_maxrunning.py",
          "tests/pytests/unit/utils/scheduler/test_postpone.py",
          "tests/pytests/unit/utils/scheduler/test_run_job.py",
          "tests/pytests/unit/utils/scheduler/test_schedule.py",
          "tests/pytests/unit/utils/scheduler/test_skip.py",
          "tests/pytests/unit/utils/templates/__init__.py",
          "tests/pytests/unit/utils/templates/conftest.py",
          "tests/pytests/unit/utils/templates/test_cheetah.py",
          "tests/pytests/unit/utils/templates/test_genshi.py",
          "tests/pytests/unit/utils/templates/test_jinja.py",
          "tests/pytests/unit/utils/templates/test_mako.py",
          "tests/pytests/unit/utils/templates/test_wempy.py",
          "tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py",
          "tests/pytests/unit/utils/test_args.py",
          "tests/pytests/unit/utils/test_aws.py",
          "tests/pytests/unit/utils/test_beacons.py",
          "tests/pytests/unit/utils/test_cache.py",
          "tests/pytests/unit/utils/test_cloud.py",
          "tests/pytests/unit/utils/test_compat.py",
          "tests/pytests/unit/utils/test_crypt.py",
          "tests/pytests/unit/utils/test_data.py",
          "tests/pytests/unit/utils/test_dictdiffer.py",
          "tests/pytests/unit/utils/test_etcd_util.py",
          "tests/pytests/unit/utils/test_files.py",
          "tests/pytests/unit/utils/test_gitfs.py",
          "tests/pytests/unit/utils/test_http.py",
          "tests/pytests/unit/utils/test_listdiffer.py",
          "tests/pytests/unit/utils/test_mako.py",
          "tests/pytests/unit/utils/test_minions.py",
          "tests/pytests/unit/utils/test_msgpack.py",
          "tests/pytests/unit/utils/test_nacl.py",
          "tests/pytests/unit/utils/test_network.py",
          "tests/pytests/unit/utils/test_package.py",
          "tests/pytests/unit/utils/test_pkg.py",
          "tests/pytests/unit/utils/test_platform.py",
          "tests/pytests/unit/utils/test_pycrypto.py",
          "tests/pytests/unit/utils/test_pyobjects.py",
          "tests/pytests/unit/utils/test_reactor.py",
          "tests/pytests/unit/utils/test_rsax931.py",
          "tests/pytests/unit/utils/test_schedule.py",
          "tests/pytests/unit/utils/test_slack.py",
          "tests/pytests/unit/utils/test_stringutils.py",
          "tests/pytests/unit/utils/test_thin.py",
          "tests/pytests/unit/utils/test_user.py",
          "tests/pytests/unit/utils/test_versions.py",
          "tests/pytests/unit/utils/test_vt.py",
          "tests/pytests/unit/utils/test_win_functions.py",
          "tests/pytests/unit/utils/test_win_lgpo_reg.py",
          "tests/pytests/unit/utils/test_win_network.py",
          "tests/pytests/unit/utils/test_win_pwsh.py",
          "tests/pytests/unit/utils/test_win_reg.py",
          "tests/pytests/unit/utils/test_win_runas.py",
          "tests/pytests/unit/utils/test_win_update.py",
          "tests/pytests/unit/utils/test_x509.py",
          "tests/pytests/unit/utils/test_xmlutil.py",
          "tests/pytests/unit/utils/vault/__init__.py",
          "tests/pytests/unit/utils/vault/conftest.py",
          "tests/pytests/unit/utils/vault/test_api.py",
          "tests/pytests/unit/utils/vault/test_auth.py",
          "tests/pytests/unit/utils/vault/test_cache.py",
          "tests/pytests/unit/utils/vault/test_client.py",
          "tests/pytests/unit/utils/vault/test_factory.py",
          "tests/pytests/unit/utils/vault/test_helpers.py",
          "tests/pytests/unit/utils/vault/test_kv.py",
          "tests/pytests/unit/utils/vault/test_leases.py",
          "tests/pytests/unit/utils/verify/test_clean_path.py",
          "tests/pytests/unit/utils/verify/test_clean_path_link.py",
          "tests/pytests/unit/utils/verify/test_verify.py",
          "tests/pytests/unit/utils/verify/test_verify_logs.py",
          "tests/pytests/unit/utils/win_lgpo/__init__.py",
          "tests/pytests/unit/utils/win_lgpo/test_auditpol.py",
          "tests/pytests/unit/utils/win_lgpo/test_netsh.py",
          "tests/pytests/unit/wheel/__init__.py",
          "tests/pytests/unit/wheel/test_file_roots.py",
          "tests/runtests.py",
          "tests/salt-tcpdump.py",
          "tests/saltsh.py",
          "tests/support/__init__.py",
          "tests/support/case.py",
          "tests/support/cli_scripts.py",
          "tests/support/copyartifacts.py",
          "tests/support/events.py",
          "tests/support/ext/__init__.py",
          "tests/support/ext/console.py",
          "tests/support/generate-names-file-from-failed-test-reports.py",
          "tests/support/gitfs.py",
          "tests/support/helpers.py",
          "tests/support/kernelpkg.py",
          "tests/support/mixins.py",
          "tests/support/mock.py",
          "tests/support/napalm.py",
          "tests/support/netapi.py",
          "tests/support/paths.py",
          "tests/support/pkg.py",
          "tests/support/pytest/__init__.py",
          "tests/support/pytest/etcd.py",
          "tests/support/pytest/formulas.py",
          "tests/support/pytest/helpers.py",
          "tests/support/pytest/loader.py",
          "tests/support/pytest/mysql.py",
          "tests/support/pytest/transport.py",
          "tests/support/pytest/vault.py",
          "tests/support/runtests.py",
          "tests/support/sminion.py",
          "tests/support/unit.py",
          "tests/support/virt.py",
          "tests/support/win_installer.py",
          "tests/support/xmlunit.py",
          "tests/support/zfs.py",
          "tests/unit/__init__.py",
          "tests/unit/conftest.py",
          "tests/unit/ext/__init__.py",
          "tests/unit/ext/test_ipaddress.py",
          "tests/unit/modules/__init__.py",
          "tests/unit/modules/inspectlib/__init__.py",
          "tests/unit/modules/inspectlib/test_collector.py",
          "tests/unit/modules/inspectlib/test_fsdb.py",
          "tests/unit/modules/nxos/__init__.py",
          "tests/unit/modules/nxos/nxos_config.py",
          "tests/unit/modules/nxos/nxos_grains.py",
          "tests/unit/modules/nxos/nxos_n36k.py",
          "tests/unit/modules/nxos/nxos_n3k.py",
          "tests/unit/modules/nxos/nxos_n5k.py",
          "tests/unit/modules/nxos/nxos_n7k.py",
          "tests/unit/modules/nxos/nxos_n93k.py",
          "tests/unit/modules/nxos/nxos_n93klxc.py",
          "tests/unit/modules/nxos/nxos_n95k.py",
          "tests/unit/modules/nxos/nxos_platform.py",
          "tests/unit/modules/nxos/nxos_show_cmd_output.py",
          "tests/unit/modules/nxos/nxos_show_run.py",
          "tests/unit/modules/test_boto3_elasticsearch.py",
          "tests/unit/modules/test_boto3_route53.py",
          "tests/unit/modules/test_boto_apigateway.py",
          "tests/unit/modules/test_boto_cloudtrail.py",
          "tests/unit/modules/test_boto_cloudwatch_event.py",
          "tests/unit/modules/test_boto_cognitoidentity.py",
          "tests/unit/modules/test_boto_elasticsearch_domain.py",
          "tests/unit/modules/test_boto_elb.py",
          "tests/unit/modules/test_boto_iot.py",
          "tests/unit/modules/test_boto_lambda.py",
          "tests/unit/modules/test_boto_route53.py",
          "tests/unit/modules/test_boto_s3_bucket.py",
          "tests/unit/modules/test_boto_secgroup.py",
          "tests/unit/modules/test_boto_vpc.py",
          "tests/unit/modules/test_bsd_shadow.py",
          "tests/unit/modules/test_cron.py",
          "tests/unit/modules/test_elasticsearch.py",
          "tests/unit/modules/test_freezer.py",
          "tests/unit/modules/test_heat.py",
          "tests/unit/modules/test_hosts.py",
          "tests/unit/modules/test_influxdb08mod.py",
          "tests/unit/modules/test_ini_manage.py",
          "tests/unit/modules/test_jboss7.py",
          "tests/unit/modules/test_jboss7_cli.py",
          "tests/unit/modules/test_k8s.py",
          "tests/unit/modules/test_kapacitor.py",
          "tests/unit/modules/test_kernelpkg_linux_apt.py",
          "tests/unit/modules/test_kernelpkg_linux_yum.py",
          "tests/unit/modules/test_kubernetesmod.py",
          "tests/unit/modules/test_libcloud_compute.py",
          "tests/unit/modules/test_libcloud_dns.py",
          "tests/unit/modules/test_libcloud_loadbalancer.py",
          "tests/unit/modules/test_libcloud_storage.py",
          "tests/unit/modules/test_linux_acl.py",
          "tests/unit/modules/test_localemod.py",
          "tests/unit/modules/test_memcached.py",
          "tests/unit/modules/test_napalm_probes.py",
          "tests/unit/modules/test_napalm_yang_mod.py",
          "tests/unit/modules/test_netbox.py",
          "tests/unit/modules/test_netmiko_mod.py",
          "tests/unit/modules/test_netscaler.py",
          "tests/unit/modules/test_network.py",
          "tests/unit/modules/test_neutron.py",
          "tests/unit/modules/test_nginx.py",
          "tests/unit/modules/test_nilrt_ip.py",
          "tests/unit/modules/test_nova.py",
          "tests/unit/modules/test_nxos.py",
          "tests/unit/modules/test_nxos_upgrade.py",
          "tests/unit/modules/test_openstack_config.py",
          "tests/unit/modules/test_opkg.py",
          "tests/unit/modules/test_parted_partition.py",
          "tests/unit/modules/test_pdbedit.py",
          "tests/unit/modules/test_random_org.py",
          "tests/unit/modules/test_rh_ip.py",
          "tests/unit/modules/test_saltcheck.py",
          "tests/unit/modules/test_snapper.py",
          "tests/unit/modules/test_solarisipspkg.py",
          "tests/unit/modules/test_sqlite3.py",
          "tests/unit/modules/test_ssh.py",
          "tests/unit/modules/test_supervisord.py",
          "tests/unit/modules/test_swarm.py",
          "tests/unit/modules/test_sysmod.py",
          "tests/unit/modules/test_twilio_notify.py",
          "tests/unit/modules/test_useradd.py",
          "tests/unit/modules/test_virt.py",
          "tests/unit/modules/test_virtualenv_mod.py",
          "tests/unit/modules/test_vsphere.py",
          "tests/unit/modules/test_win_groupadd.py",
          "tests/unit/modules/test_win_status.py",
          "tests/unit/modules/test_win_system.py",
          "tests/unit/modules/test_x509.py",
          "tests/unit/modules/test_zcbuildout.py",
          "tests/unit/modules/test_zypperpkg.py",
          "tests/unit/netapi/rest_tornado/test_saltnado.py",
          "tests/unit/states/__init__.py",
          "tests/unit/states/test_boto_apigateway.py",
          "tests/unit/states/test_boto_cognitoidentity.py",
          "tests/unit/states/test_boto_vpc.py",
          "tests/unit/states/test_cron.py",
          "tests/unit/states/test_disk.py",
          "tests/unit/states/test_esxdatacenter.py",
          "tests/unit/states/test_esxi.py",
          "tests/unit/states/test_group.py",
          "tests/unit/states/test_heat.py",
          "tests/unit/states/test_ipset.py",
          "tests/unit/states/test_loop.py",
          "tests/unit/states/test_module.py",
          "tests/unit/states/test_pip_state.py",
          "tests/unit/states/test_syslog_ng.py",
          "tests/unit/states/test_virt.py",
          "tests/unit/states/test_x509.py",
          "tests/unit/states/test_zcbuildout.py",
          "tests/unit/test_config.py",
          "tests/unit/test_engines.py",
          "tests/unit/test_fileserver.py",
          "tests/unit/test_loader.py",
          "tests/unit/test_mock.py",
          "tests/unit/test_module_names.py",
          "tests/unit/test_pillar.py",
          "tests/unit/test_proxy_minion.py",
          "tests/unit/test_virtualname.py",
          "tests/unit/test_zypp_plugins.py",
          "tests/unit/transport/__init__.py",
          "tests/unit/transport/mixins.py",
          "tests/unit/transport/test_ipc.py",
          "tests/unit/transport/test_tcp.py",
          "tests/unit/utils/__init__.py",
          "tests/unit/utils/test_aggregation.py",
          "tests/unit/utils/test_asynchronous.py",
          "tests/unit/utils/test_boto3mod.py",
          "tests/unit/utils/test_botomod.py",
          "tests/unit/utils/test_color.py",
          "tests/unit/utils/test_configcomparer.py",
          "tests/unit/utils/test_configparser.py",
          "tests/unit/utils/test_context.py",
          "tests/unit/utils/test_dateutils.py",
          "tests/unit/utils/test_decorators.py",
          "tests/unit/utils/test_dicttrim.py",
          "tests/unit/utils/test_dictupdate.py",
          "tests/unit/utils/test_dns.py",
          "tests/unit/utils/test_doc.py",
          "tests/unit/utils/test_dockermod.py",
          "tests/unit/utils/test_environment.py",
          "tests/unit/utils/test_extend.py",
          "tests/unit/utils/test_filebuffer.py",
          "tests/unit/utils/test_find.py",
          "tests/unit/utils/test_gitfs.py",
          "tests/unit/utils/test_hashutils.py",
          "tests/unit/utils/test_immutabletypes.py",
          "tests/unit/utils/test_jid.py",
          "tests/unit/utils/test_job.py",
          "tests/unit/utils/test_json.py",
          "tests/unit/utils/test_kickstart.py",
          "tests/unit/utils/test_locales.py",
          "tests/unit/utils/test_mac_utils.py",
          "tests/unit/utils/test_master.py",
          "tests/unit/utils/test_minion.py",
          "tests/unit/utils/test_minions.py",
          "tests/unit/utils/test_msgpack.py",
          "tests/unit/utils/test_path.py",
          "tests/unit/utils/test_pbm.py",
          "tests/unit/utils/test_pkg.py",
          "tests/unit/utils/test_process.py",
          "tests/unit/utils/test_proxy.py",
          "tests/unit/utils/test_pydsl.py",
          "tests/unit/utils/test_pyobjects.py",
          "tests/unit/utils/test_reactor.py",
          "tests/unit/utils/test_roster_matcher.py",
          "tests/unit/utils/test_sanitizers.py",
          "tests/unit/utils/test_schema.py",
          "tests/unit/utils/test_sdb.py",
          "tests/unit/utils/test_ssdp.py",
          "tests/unit/utils/test_state.py",
          "tests/unit/utils/test_systemd.py",
          "tests/unit/utils/test_thin.py",
          "tests/unit/utils/test_timed_subprocess.py",
          "tests/unit/utils/test_timeout.py",
          "tests/unit/utils/test_url.py",
          "tests/unit/utils/test_vmware.py",
          "tests/unit/utils/test_vsan.py",
          "tests/unit/utils/test_vt.py",
          "tests/unit/utils/test_win_chcp.py",
          "tests/unit/utils/test_win_dotnet.py",
          "tests/unit/utils/test_win_functions.py",
          "tests/unit/utils/test_win_osinfo.py",
          "tests/unit/utils/test_win_pdh.py",
          "tests/unit/utils/test_win_service.py",
          "tests/unit/utils/test_win_system.py",
          "tests/unit/utils/test_xmlutil.py",
          "tests/unit/utils/test_yamldumper.py",
          "tests/unit/utils/test_yamlencoding.py",
          "tests/unit/utils/test_yamlloader.py",
          "tests/unit/utils/test_zeromq.py",
          "tests/unit/utils/test_zfs.py",
          "tests/unit/utils/validate/__init__.py",
          "tests/unit/utils/validate/test_net.py",
          "tests/wheeltest.py",
          "tests/zypp_plugin.py"
        ],
        "message": "Remove core and community extensions",
        "before_after_code_files": [
          "salt/auth/django.py||salt/auth/django.py",
          "salt/auth/keystone.py||salt/auth/keystone.py",
          "salt/auth/ldap.py||salt/auth/ldap.py",
          "salt/auth/mysql.py||salt/auth/mysql.py",
          "salt/auth/yubico.py||salt/auth/yubico.py",
          "salt/beacons/adb.py||salt/beacons/adb.py",
          "salt/beacons/aix_account.py||salt/beacons/aix_account.py",
          "salt/beacons/avahi_announce.py||salt/beacons/avahi_announce.py",
          "salt/beacons/bonjour_announce.py||salt/beacons/bonjour_announce.py",
          "salt/beacons/btmp.py||salt/beacons/btmp.py",
          "salt/beacons/glxinfo.py||salt/beacons/glxinfo.py",
          "salt/beacons/haproxy.py||salt/beacons/haproxy.py",
          "salt/beacons/junos_rre_keys.py||salt/beacons/junos_rre_keys.py",
          "salt/beacons/smartos_imgadm.py||salt/beacons/smartos_imgadm.py",
          "salt/beacons/smartos_vmadm.py||salt/beacons/smartos_vmadm.py",
          "salt/beacons/telegram_bot_msg.py||salt/beacons/telegram_bot_msg.py",
          "salt/beacons/twilio_txt_msg.py||salt/beacons/twilio_txt_msg.py",
          "salt/beacons/wtmp.py||salt/beacons/wtmp.py",
          "salt/cloud/clouds/aliyun.py||salt/cloud/clouds/aliyun.py",
          "salt/cloud/clouds/clc.py||salt/cloud/clouds/clc.py",
          "salt/cloud/clouds/cloudstack.py||salt/cloud/clouds/cloudstack.py",
          "salt/cloud/clouds/digitalocean.py||salt/cloud/clouds/digitalocean.py",
          "salt/cloud/clouds/dimensiondata.py||salt/cloud/clouds/dimensiondata.py",
          "salt/cloud/clouds/ec2.py||salt/cloud/clouds/ec2.py",
          "salt/cloud/clouds/gce.py||salt/cloud/clouds/gce.py",
          "salt/cloud/clouds/gogrid.py||salt/cloud/clouds/gogrid.py",
          "salt/cloud/clouds/hetzner.py||salt/cloud/clouds/hetzner.py",
          "salt/cloud/clouds/joyent.py||salt/cloud/clouds/joyent.py",
          "salt/cloud/clouds/libvirt.py||salt/cloud/clouds/libvirt.py",
          "salt/cloud/clouds/linode.py||salt/cloud/clouds/linode.py",
          "salt/cloud/clouds/lxc.py||salt/cloud/clouds/lxc.py",
          "salt/cloud/clouds/oneandone.py||salt/cloud/clouds/oneandone.py",
          "salt/cloud/clouds/opennebula.py||salt/cloud/clouds/opennebula.py",
          "salt/cloud/clouds/openstack.py||salt/cloud/clouds/openstack.py",
          "salt/cloud/clouds/packet.py||salt/cloud/clouds/packet.py",
          "salt/cloud/clouds/parallels.py||salt/cloud/clouds/parallels.py",
          "salt/cloud/clouds/profitbricks.py||salt/cloud/clouds/profitbricks.py",
          "salt/cloud/clouds/proxmox.py||salt/cloud/clouds/proxmox.py",
          "salt/cloud/clouds/pyrax.py||salt/cloud/clouds/pyrax.py",
          "salt/cloud/clouds/qingcloud.py||salt/cloud/clouds/qingcloud.py",
          "salt/cloud/clouds/scaleway.py||salt/cloud/clouds/scaleway.py",
          "salt/cloud/clouds/softlayer.py||salt/cloud/clouds/softlayer.py",
          "salt/cloud/clouds/softlayer_hw.py||salt/cloud/clouds/softlayer_hw.py",
          "salt/cloud/clouds/tencentcloud.py||salt/cloud/clouds/tencentcloud.py",
          "salt/cloud/clouds/vagrant.py||salt/cloud/clouds/vagrant.py",
          "salt/cloud/clouds/virtualbox.py||salt/cloud/clouds/virtualbox.py",
          "salt/cloud/clouds/vmware.py||salt/cloud/clouds/vmware.py",
          "salt/cloud/clouds/vultrpy.py||salt/cloud/clouds/vultrpy.py",
          "salt/cloud/clouds/xen.py||salt/cloud/clouds/xen.py",
          "salt/engines/docker_events.py||salt/engines/docker_events.py",
          "salt/engines/fluent.py||salt/engines/fluent.py",
          "salt/engines/http_logstash.py||salt/engines/http_logstash.py",
          "salt/engines/ircbot.py||salt/engines/ircbot.py",
          "salt/engines/junos_syslog.py||salt/engines/junos_syslog.py",
          "salt/engines/libvirt_events.py||salt/engines/libvirt_events.py",
          "salt/engines/logentries.py||salt/engines/logentries.py",
          "salt/engines/logstash_engine.py||salt/engines/logstash_engine.py",
          "salt/engines/napalm_syslog.py||salt/engines/napalm_syslog.py",
          "salt/engines/redis_sentinel.py||salt/engines/redis_sentinel.py",
          "salt/engines/slack.py||salt/engines/slack.py",
          "salt/engines/slack_bolt_engine.py||salt/engines/slack_bolt_engine.py",
          "salt/engines/sqs_events.py||salt/engines/sqs_events.py",
          "salt/engines/stalekey.py||salt/engines/stalekey.py",
          "salt/executors/docker.py||salt/executors/docker.py",
          "salt/executors/splay.py||salt/executors/splay.py",
          "salt/fileserver/gitfs.py||salt/fileserver/gitfs.py",
          "salt/grains/chronos.py||salt/grains/chronos.py",
          "salt/grains/cimc.py||salt/grains/cimc.py",
          "salt/grains/esxi.py||salt/grains/esxi.py",
          "salt/grains/fibre_channel.py||salt/grains/fibre_channel.py",
          "salt/grains/fx2.py||salt/grains/fx2.py",
          "salt/grains/iscsi.py||salt/grains/iscsi.py",
          "salt/grains/junos.py||salt/grains/junos.py",
          "salt/grains/lvm.py||salt/grains/lvm.py",
          "salt/grains/marathon.py||salt/grains/marathon.py",
          "salt/grains/mdadm.py||salt/grains/mdadm.py",
          "salt/grains/mdata.py||salt/grains/mdata.py",
          "salt/grains/metadata.py||salt/grains/metadata.py",
          "salt/grains/metadata_gce.py||salt/grains/metadata_gce.py",
          "salt/grains/napalm.py||salt/grains/napalm.py",
          "salt/grains/nvme.py||salt/grains/nvme.py",
          "salt/grains/nxos.py||salt/grains/nxos.py",
          "salt/grains/panos.py||salt/grains/panos.py",
          "salt/grains/philips_hue.py||salt/grains/philips_hue.py",
          "salt/grains/rest_sample.py||salt/grains/rest_sample.py",
          "salt/grains/smartos.py||salt/grains/smartos.py",
          "salt/grains/ssh_sample.py||salt/grains/ssh_sample.py",
          "salt/grains/zfs.py||salt/grains/zfs.py",
          "salt/log_handlers/fluent_mod.py||salt/log_handlers/fluent_mod.py",
          "salt/log_handlers/log4mongo_mod.py||salt/log_handlers/log4mongo_mod.py",
          "salt/log_handlers/logstash_mod.py||salt/log_handlers/logstash_mod.py",
          "salt/log_handlers/sentry_mod.py||salt/log_handlers/sentry_mod.py",
          "salt/matchers/compound_match.py||salt/matchers/compound_match.py",
          "salt/matchers/compound_pillar_exact_match.py||salt/matchers/compound_pillar_exact_match.py",
          "salt/matchers/confirm_top.py||salt/matchers/confirm_top.py",
          "salt/matchers/data_match.py||salt/matchers/data_match.py",
          "salt/matchers/glob_match.py||salt/matchers/glob_match.py",
          "salt/matchers/grain_match.py||salt/matchers/grain_match.py",
          "salt/matchers/grain_pcre_match.py||salt/matchers/grain_pcre_match.py",
          "salt/matchers/ipcidr_match.py||salt/matchers/ipcidr_match.py",
          "salt/matchers/list_match.py||salt/matchers/list_match.py",
          "salt/matchers/nodegroup_match.py||salt/matchers/nodegroup_match.py",
          "salt/matchers/pcre_match.py||salt/matchers/pcre_match.py",
          "salt/matchers/pillar_exact_match.py||salt/matchers/pillar_exact_match.py",
          "salt/matchers/pillar_match.py||salt/matchers/pillar_match.py",
          "salt/matchers/pillar_pcre_match.py||salt/matchers/pillar_pcre_match.py",
          "salt/matchers/range_match.py||salt/matchers/range_match.py",
          "salt/modules/acme.py||salt/modules/acme.py",
          "salt/modules/aix_group.py||salt/modules/aix_group.py",
          "salt/modules/aix_shadow.py||salt/modules/aix_shadow.py",
          "salt/modules/aixpkg.py||salt/modules/aixpkg.py",
          "salt/modules/aliases.py||salt/modules/aliases.py",
          "salt/modules/alternatives.py||salt/modules/alternatives.py",
          "salt/modules/ansiblegate.py||salt/modules/ansiblegate.py",
          "salt/modules/apcups.py||salt/modules/apcups.py",
          "salt/modules/apkpkg.py||salt/modules/apkpkg.py",
          "salt/modules/aptly.py||salt/modules/aptly.py",
          "salt/modules/arista_pyeapi.py||salt/modules/arista_pyeapi.py",
          "salt/modules/artifactory.py||salt/modules/artifactory.py",
          "salt/modules/at_solaris.py||salt/modules/at_solaris.py",
          "salt/modules/augeas_cfg.py||salt/modules/augeas_cfg.py",
          "salt/modules/bamboohr.py||salt/modules/bamboohr.py",
          "salt/modules/bcache.py||salt/modules/bcache.py",
          "salt/modules/bigip.py||salt/modules/bigip.py",
          "salt/modules/bluez_bluetooth.py||salt/modules/bluez_bluetooth.py",
          "salt/modules/boto3_elasticache.py||salt/modules/boto3_elasticache.py",
          "salt/modules/boto3_elasticsearch.py||salt/modules/boto3_elasticsearch.py",
          "salt/modules/boto3_route53.py||salt/modules/boto3_route53.py",
          "salt/modules/boto3_sns.py||salt/modules/boto3_sns.py",
          "salt/modules/boto_apigateway.py||salt/modules/boto_apigateway.py",
          "salt/modules/boto_asg.py||salt/modules/boto_asg.py",
          "salt/modules/boto_cfn.py||salt/modules/boto_cfn.py",
          "salt/modules/boto_cloudfront.py||salt/modules/boto_cloudfront.py",
          "salt/modules/boto_cloudtrail.py||salt/modules/boto_cloudtrail.py",
          "salt/modules/boto_cloudwatch.py||salt/modules/boto_cloudwatch.py",
          "salt/modules/boto_cloudwatch_event.py||salt/modules/boto_cloudwatch_event.py",
          "salt/modules/boto_cognitoidentity.py||salt/modules/boto_cognitoidentity.py",
          "salt/modules/boto_datapipeline.py||salt/modules/boto_datapipeline.py",
          "salt/modules/boto_dynamodb.py||salt/modules/boto_dynamodb.py",
          "salt/modules/boto_ec2.py||salt/modules/boto_ec2.py",
          "salt/modules/boto_efs.py||salt/modules/boto_efs.py",
          "salt/modules/boto_elasticache.py||salt/modules/boto_elasticache.py",
          "salt/modules/boto_elasticsearch_domain.py||salt/modules/boto_elasticsearch_domain.py",
          "salt/modules/boto_elb.py||salt/modules/boto_elb.py",
          "salt/modules/boto_elbv2.py||salt/modules/boto_elbv2.py",
          "salt/modules/boto_iam.py||salt/modules/boto_iam.py",
          "salt/modules/boto_iot.py||salt/modules/boto_iot.py",
          "salt/modules/boto_kinesis.py||salt/modules/boto_kinesis.py",
          "salt/modules/boto_kms.py||salt/modules/boto_kms.py",
          "salt/modules/boto_lambda.py||salt/modules/boto_lambda.py",
          "salt/modules/boto_rds.py||salt/modules/boto_rds.py",
          "salt/modules/boto_route53.py||salt/modules/boto_route53.py",
          "salt/modules/boto_s3.py||salt/modules/boto_s3.py",
          "salt/modules/boto_s3_bucket.py||salt/modules/boto_s3_bucket.py",
          "salt/modules/boto_secgroup.py||salt/modules/boto_secgroup.py",
          "salt/modules/boto_sns.py||salt/modules/boto_sns.py",
          "salt/modules/boto_sqs.py||salt/modules/boto_sqs.py",
          "salt/modules/boto_ssm.py||salt/modules/boto_ssm.py",
          "salt/modules/boto_vpc.py||salt/modules/boto_vpc.py",
          "salt/modules/bridge.py||salt/modules/bridge.py",
          "salt/modules/bsd_shadow.py||salt/modules/bsd_shadow.py",
          "salt/modules/btrfs.py||salt/modules/btrfs.py",
          "salt/modules/cabal.py||salt/modules/cabal.py",
          "salt/modules/capirca_acl.py||salt/modules/capirca_acl.py",
          "salt/modules/cassandra_cql.py||salt/modules/cassandra_cql.py",
          "salt/modules/cassandra_mod.py||salt/modules/cassandra_mod.py",
          "salt/modules/celery.py||salt/modules/celery.py",
          "salt/modules/ceph.py||salt/modules/ceph.py",
          "salt/modules/chassis.py||salt/modules/chassis.py",
          "salt/modules/chef.py||salt/modules/chef.py",
          "salt/modules/chocolatey.py||salt/modules/chocolatey.py",
          "salt/modules/chronos.py||salt/modules/chronos.py",
          "salt/modules/cimc.py||salt/modules/cimc.py",
          "salt/modules/ciscoconfparse_mod.py||salt/modules/ciscoconfparse_mod.py",
          "salt/modules/cisconso.py||salt/modules/cisconso.py",
          "salt/modules/composer.py||salt/modules/composer.py",
          "salt/modules/consul.py||salt/modules/consul.py",
          "salt/modules/container_resource.py||salt/modules/container_resource.py",
          "salt/modules/cpan.py||salt/modules/cpan.py",
          "salt/modules/cryptdev.py||salt/modules/cryptdev.py",
          "salt/modules/csf.py||salt/modules/csf.py",
          "salt/modules/cyg.py||salt/modules/cyg.py",
          "salt/modules/daemontools.py||salt/modules/daemontools.py",
          "salt/modules/datadog_api.py||salt/modules/datadog_api.py",
          "salt/modules/ddns.py||salt/modules/ddns.py",
          "salt/modules/deb_apache.py||salt/modules/deb_apache.py",
          "salt/modules/deb_postgres.py||salt/modules/deb_postgres.py",
          "salt/modules/debuild_pkgbuild.py||salt/modules/debuild_pkgbuild.py",
          "salt/modules/djangomod.py||salt/modules/djangomod.py",
          "salt/modules/dnsmasq.py||salt/modules/dnsmasq.py",
          "salt/modules/dockercompose.py||salt/modules/dockercompose.py",
          "salt/modules/dockermod.py||salt/modules/dockermod.py",
          "salt/modules/drac.py||salt/modules/drac.py",
          "salt/modules/dracr.py||salt/modules/dracr.py",
          "salt/modules/drbd.py||salt/modules/drbd.py",
          "salt/modules/dummyproxy_pkg.py||salt/modules/dummyproxy_pkg.py",
          "salt/modules/dummyproxy_service.py||salt/modules/dummyproxy_service.py",
          "salt/modules/ebuildpkg.py||salt/modules/ebuildpkg.py",
          "salt/modules/eix.py||salt/modules/eix.py",
          "salt/modules/elasticsearch.py||salt/modules/elasticsearch.py",
          "salt/modules/eselect.py||salt/modules/eselect.py",
          "salt/modules/esxcluster.py||salt/modules/esxcluster.py",
          "salt/modules/esxdatacenter.py||salt/modules/esxdatacenter.py",
          "salt/modules/esxi.py||salt/modules/esxi.py",
          "salt/modules/esxvm.py||salt/modules/esxvm.py",
          "salt/modules/etcd_mod.py||salt/modules/etcd_mod.py",
          "salt/modules/freebsd_sysctl.py||salt/modules/freebsd_sysctl.py",
          "salt/modules/freebsd_update.py||salt/modules/freebsd_update.py",
          "salt/modules/freebsdjail.py||salt/modules/freebsdjail.py",
          "salt/modules/freebsdkmod.py||salt/modules/freebsdkmod.py",
          "salt/modules/freebsdpkg.py||salt/modules/freebsdpkg.py",
          "salt/modules/freebsdports.py||salt/modules/freebsdports.py",
          "salt/modules/freebsdservice.py||salt/modules/freebsdservice.py",
          "salt/modules/freezer.py||salt/modules/freezer.py",
          "salt/modules/gcp_addon.py||salt/modules/gcp_addon.py",
          "salt/modules/gem.py||salt/modules/gem.py",
          "salt/modules/genesis.py||salt/modules/genesis.py",
          "salt/modules/gentoo_service.py||salt/modules/gentoo_service.py",
          "salt/modules/gentoolkitmod.py||salt/modules/gentoolkitmod.py",
          "salt/modules/github.py||salt/modules/github.py",
          "salt/modules/glanceng.py||salt/modules/glanceng.py",
          "salt/modules/glassfish.py||salt/modules/glassfish.py",
          "salt/modules/glusterfs.py||salt/modules/glusterfs.py",
          "salt/modules/gnomedesktop.py||salt/modules/gnomedesktop.py",
          "salt/modules/google_chat.py||salt/modules/google_chat.py",
          "salt/modules/grafana4.py||salt/modules/grafana4.py",
          "salt/modules/grub_legacy.py||salt/modules/grub_legacy.py",
          "salt/modules/hadoop.py||salt/modules/hadoop.py",
          "salt/modules/haproxyconn.py||salt/modules/haproxyconn.py",
          "salt/modules/heat.py||salt/modules/heat.py",
          "salt/modules/helm.py||salt/modules/helm.py",
          "salt/modules/hg.py||salt/modules/hg.py",
          "salt/modules/icinga2.py||salt/modules/icinga2.py",
          "salt/modules/ifttt.py||salt/modules/ifttt.py",
          "salt/modules/ilo.py||salt/modules/ilo.py",
          "salt/modules/incron.py||salt/modules/incron.py",
          "salt/modules/influxdb08mod.py||salt/modules/influxdb08mod.py",
          "salt/modules/influxdbmod.py||salt/modules/influxdbmod.py",
          "salt/modules/infoblox.py||salt/modules/infoblox.py",
          "salt/modules/inspector.py||salt/modules/inspector.py",
          "salt/modules/introspect.py||salt/modules/introspect.py",
          "salt/modules/iosconfig.py||salt/modules/iosconfig.py",
          "salt/modules/jboss7.py||salt/modules/jboss7.py",
          "salt/modules/jboss7_cli.py||salt/modules/jboss7_cli.py",
          "salt/modules/jenkinsmod.py||salt/modules/jenkinsmod.py",
          "salt/modules/jira_mod.py||salt/modules/jira_mod.py",
          "salt/modules/junos.py||salt/modules/junos.py",
          "salt/modules/k8s.py||salt/modules/k8s.py",
          "salt/modules/kapacitor.py||salt/modules/kapacitor.py",
          "salt/modules/kerberos.py||salt/modules/kerberos.py",
          "salt/modules/kernelpkg_linux_apt.py||salt/modules/kernelpkg_linux_apt.py",
          "salt/modules/kernelpkg_linux_yum.py||salt/modules/kernelpkg_linux_yum.py",
          "salt/modules/keystone.py||salt/modules/keystone.py",
          "salt/modules/keystoneng.py||salt/modules/keystoneng.py",
          "salt/modules/keystore.py||salt/modules/keystore.py",
          "salt/modules/kubeadm.py||salt/modules/kubeadm.py",
          "salt/modules/kubernetesmod.py||salt/modules/kubernetesmod.py",
          "salt/modules/launchctl_service.py||salt/modules/launchctl_service.py",
          "salt/modules/layman.py||salt/modules/layman.py",
          "salt/modules/ldap3.py||salt/modules/ldap3.py",
          "salt/modules/ldapmod.py||salt/modules/ldapmod.py",
          "salt/modules/libcloud_compute.py||salt/modules/libcloud_compute.py",
          "salt/modules/libcloud_dns.py||salt/modules/libcloud_dns.py",
          "salt/modules/libcloud_loadbalancer.py||salt/modules/libcloud_loadbalancer.py",
          "salt/modules/libcloud_storage.py||salt/modules/libcloud_storage.py",
          "salt/modules/lvs.py||salt/modules/lvs.py",
          "salt/modules/lxc.py||salt/modules/lxc.py",
          "salt/modules/lxd.py||salt/modules/lxd.py",
          "salt/modules/mac_assistive.py||salt/modules/mac_assistive.py",
          "salt/modules/mac_brew_pkg.py||salt/modules/mac_brew_pkg.py",
          "salt/modules/mac_desktop.py||salt/modules/mac_desktop.py",
          "salt/modules/mac_group.py||salt/modules/mac_group.py",
          "salt/modules/mac_keychain.py||salt/modules/mac_keychain.py",
          "salt/modules/mac_pkgutil.py||salt/modules/mac_pkgutil.py",
          "salt/modules/mac_portspkg.py||salt/modules/mac_portspkg.py",
          "salt/modules/mac_power.py||salt/modules/mac_power.py",
          "salt/modules/mac_service.py||salt/modules/mac_service.py",
          "salt/modules/mac_shadow.py||salt/modules/mac_shadow.py",
          "salt/modules/mac_softwareupdate.py||salt/modules/mac_softwareupdate.py",
          "salt/modules/mac_sysctl.py||salt/modules/mac_sysctl.py",
          "salt/modules/mac_system.py||salt/modules/mac_system.py",
          "salt/modules/mac_timezone.py||salt/modules/mac_timezone.py",
          "salt/modules/mac_user.py||salt/modules/mac_user.py",
          "salt/modules/mac_xattr.py||salt/modules/mac_xattr.py",
          "salt/modules/macdefaults.py||salt/modules/macdefaults.py",
          "salt/modules/macpackage.py||salt/modules/macpackage.py",
          "salt/modules/mandrill.py||salt/modules/mandrill.py",
          "salt/modules/marathon.py||salt/modules/marathon.py",
          "salt/modules/mattermost.py||salt/modules/mattermost.py",
          "salt/modules/mdata.py||salt/modules/mdata.py",
          "salt/modules/memcached.py||salt/modules/memcached.py",
          "salt/modules/modjk.py||salt/modules/modjk.py",
          "salt/modules/mongodb.py||salt/modules/mongodb.py",
          "salt/modules/monit.py||salt/modules/monit.py",
          "salt/modules/moosefs.py||salt/modules/moosefs.py",
          "salt/modules/mssql.py||salt/modules/mssql.py",
          "salt/modules/msteams.py||salt/modules/msteams.py",
          "salt/modules/munin.py||salt/modules/munin.py",
          "salt/modules/mysql.py||salt/modules/mysql.py",
          "salt/modules/nagios.py||salt/modules/nagios.py",
          "salt/modules/nagios_rpc.py||salt/modules/nagios_rpc.py",
          "salt/modules/namecheap_domains.py||salt/modules/namecheap_domains.py",
          "salt/modules/namecheap_domains_dns.py||salt/modules/namecheap_domains_dns.py",
          "salt/modules/namecheap_domains_ns.py||salt/modules/namecheap_domains_ns.py",
          "salt/modules/namecheap_ssl.py||salt/modules/namecheap_ssl.py",
          "salt/modules/namecheap_users.py||salt/modules/namecheap_users.py",
          "salt/modules/napalm_bgp.py||salt/modules/napalm_bgp.py",
          "salt/modules/napalm_formula.py||salt/modules/napalm_formula.py",
          "salt/modules/napalm_mod.py||salt/modules/napalm_mod.py",
          "salt/modules/napalm_netacl.py||salt/modules/napalm_netacl.py",
          "salt/modules/napalm_network.py||salt/modules/napalm_network.py",
          "salt/modules/napalm_ntp.py||salt/modules/napalm_ntp.py",
          "salt/modules/napalm_probes.py||salt/modules/napalm_probes.py",
          "salt/modules/napalm_route.py||salt/modules/napalm_route.py",
          "salt/modules/napalm_snmp.py||salt/modules/napalm_snmp.py",
          "salt/modules/napalm_users.py||salt/modules/napalm_users.py",
          "salt/modules/napalm_yang_mod.py||salt/modules/napalm_yang_mod.py",
          "salt/modules/netbox.py||salt/modules/netbox.py",
          "salt/modules/netbsd_sysctl.py||salt/modules/netbsd_sysctl.py",
          "salt/modules/netbsdservice.py||salt/modules/netbsdservice.py",
          "salt/modules/netmiko_mod.py||salt/modules/netmiko_mod.py",
          "salt/modules/netscaler.py||salt/modules/netscaler.py",
          "salt/modules/neutron.py||salt/modules/neutron.py",
          "salt/modules/neutronng.py||salt/modules/neutronng.py",
          "salt/modules/nexus.py||salt/modules/nexus.py",
          "salt/modules/nfs3.py||salt/modules/nfs3.py",
          "salt/modules/nginx.py||salt/modules/nginx.py",
          "salt/modules/nilrt_ip.py||salt/modules/nilrt_ip.py",
          "salt/modules/nix.py||salt/modules/nix.py",
          "salt/modules/nova.py||salt/modules/nova.py",
          "salt/modules/npm.py||salt/modules/npm.py",
          "salt/modules/nspawn.py||salt/modules/nspawn.py",
          "salt/modules/nxos.py||salt/modules/nxos.py",
          "salt/modules/nxos_api.py||salt/modules/nxos_api.py",
          "salt/modules/nxos_upgrade.py||salt/modules/nxos_upgrade.py",
          "salt/modules/omapi.py||salt/modules/omapi.py",
          "salt/modules/openbsd_sysctl.py||salt/modules/openbsd_sysctl.py",
          "salt/modules/openbsdpkg.py||salt/modules/openbsdpkg.py",
          "salt/modules/openbsdrcctl_service.py||salt/modules/openbsdrcctl_service.py",
          "salt/modules/openbsdservice.py||salt/modules/openbsdservice.py",
          "salt/modules/openscap.py||salt/modules/openscap.py",
          "salt/modules/openstack_config.py||salt/modules/openstack_config.py",
          "salt/modules/openstack_mng.py||salt/modules/openstack_mng.py",
          "salt/modules/openvswitch.py||salt/modules/openvswitch.py",
          "salt/modules/opsgenie.py||salt/modules/opsgenie.py",
          "salt/modules/oracle.py||salt/modules/oracle.py",
          "salt/modules/osquery.py||salt/modules/osquery.py",
          "salt/modules/pagerduty.py||salt/modules/pagerduty.py",
          "salt/modules/pagerduty_util.py||salt/modules/pagerduty_util.py",
          "salt/modules/panos.py||salt/modules/panos.py",
          "salt/modules/parallels.py||salt/modules/parallels.py",
          "salt/modules/pcs.py||salt/modules/pcs.py",
          "salt/modules/pdbedit.py||salt/modules/pdbedit.py",
          "salt/modules/pecl.py||salt/modules/pecl.py",
          "salt/modules/peeringdb.py||salt/modules/peeringdb.py",
          "salt/modules/pf.py||salt/modules/pf.py",
          "salt/modules/philips_hue.py||salt/modules/philips_hue.py",
          "salt/modules/pkgin.py||salt/modules/pkgin.py",
          "salt/modules/pkgng.py||salt/modules/pkgng.py",
          "salt/modules/pkgutil.py||salt/modules/pkgutil.py",
          "salt/modules/portage_config.py||salt/modules/portage_config.py",
          "salt/modules/postfix.py||salt/modules/postfix.py",
          "salt/modules/postgres.py||salt/modules/postgres.py",
          "salt/modules/poudriere.py||salt/modules/poudriere.py",
          "salt/modules/powerpath.py||salt/modules/powerpath.py",
          "salt/modules/puppet.py||salt/modules/puppet.py",
          "salt/modules/purefa.py||salt/modules/purefa.py",
          "salt/modules/purefb.py||salt/modules/purefb.py",
          "salt/modules/pushbullet.py||salt/modules/pushbullet.py",
          "salt/modules/pushover_notify.py||salt/modules/pushover_notify.py",
          "salt/modules/qemu_img.py||salt/modules/qemu_img.py",
          "salt/modules/rallydev.py||salt/modules/rallydev.py",
          "salt/modules/random_org.py||salt/modules/random_org.py",
          "salt/modules/rbac_solaris.py||salt/modules/rbac_solaris.py",
          "salt/modules/rbenv.py||salt/modules/rbenv.py",
          "salt/modules/rdp.py||salt/modules/rdp.py",
          "salt/modules/rebootmgr.py||salt/modules/rebootmgr.py",
          "salt/modules/redismod.py||salt/modules/redismod.py",
          "salt/modules/reg.py||salt/modules/reg.py",
          "salt/modules/restconf.py||salt/modules/restconf.py",
          "salt/modules/rh_ip.py||salt/modules/rh_ip.py",
          "salt/modules/riak.py||salt/modules/riak.py",
          "salt/modules/runit.py||salt/modules/runit.py",
          "salt/modules/rvm.py||salt/modules/rvm.py",
          "salt/modules/s3.py||salt/modules/s3.py",
          "salt/modules/s6.py||salt/modules/s6.py",
          "salt/modules/scsi.py||salt/modules/scsi.py",
          "salt/modules/sensehat.py||salt/modules/sensehat.py",
          "salt/modules/sensors.py||salt/modules/sensors.py",
          "salt/modules/serverdensity_device.py||salt/modules/serverdensity_device.py",
          "salt/modules/servicenow.py||salt/modules/servicenow.py",
          "salt/modules/slack_notify.py||salt/modules/slack_notify.py",
          "salt/modules/slackware_service.py||salt/modules/slackware_service.py",
          "salt/modules/slsutil.py||salt/modules/slsutil.py",
          "salt/modules/smartos_imgadm.py||salt/modules/smartos_imgadm.py",
          "salt/modules/smartos_nictagadm.py||salt/modules/smartos_nictagadm.py",
          "salt/modules/smartos_virt.py||salt/modules/smartos_virt.py",
          "salt/modules/smartos_vmadm.py||salt/modules/smartos_vmadm.py",
          "salt/modules/smf_service.py||salt/modules/smf_service.py",
          "salt/modules/solaris_fmadm.py||salt/modules/solaris_fmadm.py",
          "salt/modules/solaris_group.py||salt/modules/solaris_group.py",
          "salt/modules/solaris_shadow.py||salt/modules/solaris_shadow.py",
          "salt/modules/solaris_system.py||salt/modules/solaris_system.py",
          "salt/modules/solaris_user.py||salt/modules/solaris_user.py",
          "salt/modules/solarisipspkg.py||salt/modules/solarisipspkg.py",
          "salt/modules/solarispkg.py||salt/modules/solarispkg.py",
          "salt/modules/solr.py||salt/modules/solr.py",
          "salt/modules/solrcloud.py||salt/modules/solrcloud.py",
          "salt/modules/splunk.py||salt/modules/splunk.py",
          "salt/modules/splunk_search.py||salt/modules/splunk_search.py",
          "salt/modules/statuspage.py||salt/modules/statuspage.py",
          "salt/modules/supervisord.py||salt/modules/supervisord.py",
          "salt/modules/suse_apache.py||salt/modules/suse_apache.py",
          "salt/modules/suse_ip.py||salt/modules/suse_ip.py",
          "salt/modules/svn.py||salt/modules/svn.py",
          "salt/modules/swarm.py||salt/modules/swarm.py",
          "salt/modules/swift.py||salt/modules/swift.py",
          "salt/modules/sysbench.py||salt/modules/sysbench.py",
          "salt/modules/sysrc.py||salt/modules/sysrc.py",
          "salt/modules/system_profiler.py||salt/modules/system_profiler.py",
          "salt/modules/systemd_service.py||salt/modules/systemd_service.py",
          "salt/modules/telegram.py||salt/modules/telegram.py",
          "salt/modules/telemetry.py||salt/modules/telemetry.py",
          "salt/modules/testinframod.py||salt/modules/testinframod.py",
          "salt/modules/tomcat.py||salt/modules/tomcat.py",
          "salt/modules/trafficserver.py||salt/modules/trafficserver.py",
          "salt/modules/travisci.py||salt/modules/travisci.py",
          "salt/modules/tuned.py||salt/modules/tuned.py",
          "salt/modules/twilio_notify.py||salt/modules/twilio_notify.py",
          "salt/modules/upstart_service.py||salt/modules/upstart_service.py",
          "salt/modules/uptime.py||salt/modules/uptime.py",
          "salt/modules/uwsgi.py||salt/modules/uwsgi.py",
          "salt/modules/vagrant.py||salt/modules/vagrant.py",
          "salt/modules/varnish.py||salt/modules/varnish.py",
          "salt/modules/vault.py||salt/modules/vault.py",
          "salt/modules/vbox_guest.py||salt/modules/vbox_guest.py",
          "salt/modules/vboxmanage.py||salt/modules/vboxmanage.py",
          "salt/modules/vcenter.py||salt/modules/vcenter.py",
          "salt/modules/victorops.py||salt/modules/victorops.py",
          "salt/modules/virt.py||salt/modules/virt.py",
          "salt/modules/vmctl.py||salt/modules/vmctl.py",
          "salt/modules/vsphere.py||salt/modules/vsphere.py",
          "salt/modules/win_appx.py||salt/modules/win_appx.py",
          "salt/modules/win_auditpol.py||salt/modules/win_auditpol.py",
          "salt/modules/win_autoruns.py||salt/modules/win_autoruns.py",
          "salt/modules/win_certutil.py||salt/modules/win_certutil.py",
          "salt/modules/win_dacl.py||salt/modules/win_dacl.py",
          "salt/modules/win_disk.py||salt/modules/win_disk.py",
          "salt/modules/win_dism.py||salt/modules/win_dism.py",
          "salt/modules/win_dns_client.py||salt/modules/win_dns_client.py",
          "salt/modules/win_dsc.py||salt/modules/win_dsc.py",
          "salt/modules/win_event.py||salt/modules/win_event.py",
          "salt/modules/win_file.py||salt/modules/win_file.py",
          "salt/modules/win_firewall.py||salt/modules/win_firewall.py",
          "salt/modules/win_groupadd.py||salt/modules/win_groupadd.py",
          "salt/modules/win_iis.py||salt/modules/win_iis.py",
          "salt/modules/win_ip.py||salt/modules/win_ip.py",
          "salt/modules/win_lgpo.py||salt/modules/win_lgpo.py",
          "salt/modules/win_lgpo_reg.py||salt/modules/win_lgpo_reg.py",
          "salt/modules/win_license.py||salt/modules/win_license.py",
          "salt/modules/win_network.py||salt/modules/win_network.py",
          "salt/modules/win_ntp.py||salt/modules/win_ntp.py",
          "salt/modules/win_path.py||salt/modules/win_path.py",
          "salt/modules/win_pkg.py||salt/modules/win_pkg.py",
          "salt/modules/win_pki.py||salt/modules/win_pki.py",
          "salt/modules/win_powercfg.py||salt/modules/win_powercfg.py",
          "salt/modules/win_psget.py||salt/modules/win_psget.py",
          "salt/modules/win_servermanager.py||salt/modules/win_servermanager.py",
          "salt/modules/win_service.py||salt/modules/win_service.py",
          "salt/modules/win_shadow.py||salt/modules/win_shadow.py",
          "salt/modules/win_shortcut.py||salt/modules/win_shortcut.py",
          "salt/modules/win_smtp_server.py||salt/modules/win_smtp_server.py",
          "salt/modules/win_snmp.py||salt/modules/win_snmp.py",
          "salt/modules/win_status.py||salt/modules/win_status.py",
          "salt/modules/win_system.py||salt/modules/win_system.py",
          "salt/modules/win_task.py||salt/modules/win_task.py",
          "salt/modules/win_timezone.py||salt/modules/win_timezone.py",
          "salt/modules/win_useradd.py||salt/modules/win_useradd.py",
          "salt/modules/win_wua.py||salt/modules/win_wua.py",
          "salt/modules/win_wusa.py||salt/modules/win_wusa.py",
          "salt/modules/winrepo.py||salt/modules/winrepo.py",
          "salt/modules/wordpress.py||salt/modules/wordpress.py",
          "salt/modules/xapi_virt.py||salt/modules/xapi_virt.py",
          "salt/modules/xbpspkg.py||salt/modules/xbpspkg.py",
          "salt/modules/xmpp.py||salt/modules/xmpp.py",
          "salt/modules/yaml.py||salt/modules/yaml.py",
          "salt/modules/zabbix.py||salt/modules/zabbix.py",
          "salt/modules/zcbuildout.py||salt/modules/zcbuildout.py",
          "salt/modules/zenoss.py||salt/modules/zenoss.py",
          "salt/modules/zk_concurrency.py||salt/modules/zk_concurrency.py",
          "salt/modules/znc.py||salt/modules/znc.py",
          "salt/modules/zoneadm.py||salt/modules/zoneadm.py",
          "salt/modules/zonecfg.py||salt/modules/zonecfg.py",
          "salt/modules/zookeeper.py||salt/modules/zookeeper.py",
          "salt/modules/zpool.py||salt/modules/zpool.py",
          "salt/modules/zypperpkg.py||salt/modules/zypperpkg.py",
          "salt/output/dson.py||salt/output/dson.py",
          "salt/output/highstate.py||salt/output/highstate.py",
          "salt/output/json_out.py||salt/output/json_out.py",
          "salt/output/key.py||salt/output/key.py",
          "salt/output/nested.py||salt/output/nested.py",
          "salt/output/newline_values_only.py||salt/output/newline_values_only.py",
          "salt/output/no_out_quiet.py||salt/output/no_out_quiet.py",
          "salt/output/no_return.py||salt/output/no_return.py",
          "salt/output/overstatestage.py||salt/output/overstatestage.py",
          "salt/output/pony.py||salt/output/pony.py",
          "salt/output/pprint_out.py||salt/output/pprint_out.py",
          "salt/output/profile.py||salt/output/profile.py",
          "salt/output/progress.py||salt/output/progress.py",
          "salt/output/raw.py||salt/output/raw.py",
          "salt/output/table_out.py||salt/output/table_out.py",
          "salt/output/txt.py||salt/output/txt.py",
          "salt/output/virt_query.py||salt/output/virt_query.py",
          "salt/output/yaml_out.py||salt/output/yaml_out.py",
          "salt/pillar/cmd_json.py||salt/pillar/cmd_json.py",
          "salt/pillar/cmd_yaml.py||salt/pillar/cmd_yaml.py",
          "salt/pillar/cmd_yamlex.py||salt/pillar/cmd_yamlex.py",
          "salt/pillar/cobbler.py||salt/pillar/cobbler.py",
          "salt/pillar/confidant.py||salt/pillar/confidant.py",
          "salt/pillar/consul_pillar.py||salt/pillar/consul_pillar.py",
          "salt/pillar/csvpillar.py||salt/pillar/csvpillar.py",
          "salt/pillar/digicert.py||salt/pillar/digicert.py",
          "salt/pillar/django_orm.py||salt/pillar/django_orm.py",
          "salt/pillar/ec2_pillar.py||salt/pillar/ec2_pillar.py",
          "salt/pillar/etcd_pillar.py||salt/pillar/etcd_pillar.py",
          "salt/pillar/extra_minion_data_in_pillar.py||salt/pillar/extra_minion_data_in_pillar.py",
          "salt/pillar/file_tree.py||salt/pillar/file_tree.py",
          "salt/pillar/foreman.py||salt/pillar/foreman.py",
          "salt/pillar/git_pillar.py||salt/pillar/git_pillar.py",
          "salt/pillar/gpg.py||salt/pillar/gpg.py",
          "salt/pillar/hg_pillar.py||salt/pillar/hg_pillar.py",
          "salt/pillar/hiera.py||salt/pillar/hiera.py",
          "salt/pillar/http_json.py||salt/pillar/http_json.py",
          "salt/pillar/http_yaml.py||salt/pillar/http_yaml.py",
          "salt/pillar/libvirt.py||salt/pillar/libvirt.py",
          "salt/pillar/makostack.py||salt/pillar/makostack.py",
          "salt/pillar/mongo.py||salt/pillar/mongo.py",
          "salt/pillar/mysql.py||salt/pillar/mysql.py",
          "salt/pillar/nacl.py||salt/pillar/nacl.py",
          "salt/pillar/netbox.py||salt/pillar/netbox.py",
          "salt/pillar/neutron.py||salt/pillar/neutron.py",
          "salt/pillar/nodegroups.py||salt/pillar/nodegroups.py",
          "salt/pillar/pepa.py||salt/pillar/pepa.py",
          "salt/pillar/pillar_ldap.py||salt/pillar/pillar_ldap.py",
          "salt/pillar/postgres.py||salt/pillar/postgres.py",
          "salt/pillar/puppet.py||salt/pillar/puppet.py",
          "salt/pillar/reclass_adapter.py||salt/pillar/reclass_adapter.py",
          "salt/pillar/redismod.py||salt/pillar/redismod.py",
          "salt/pillar/rethinkdb_pillar.py||salt/pillar/rethinkdb_pillar.py",
          "salt/pillar/s3.py||salt/pillar/s3.py",
          "salt/pillar/saltclass.py||salt/pillar/saltclass.py",
          "salt/pillar/sql_base.py||salt/pillar/sql_base.py",
          "salt/pillar/sqlcipher.py||salt/pillar/sqlcipher.py",
          "salt/pillar/sqlite3.py||salt/pillar/sqlite3.py",
          "salt/pillar/stack.py||salt/pillar/stack.py",
          "salt/pillar/svn_pillar.py||salt/pillar/svn_pillar.py",
          "salt/pillar/varstack_pillar.py||salt/pillar/varstack_pillar.py",
          "salt/pillar/vault.py||salt/pillar/vault.py",
          "salt/pillar/venafi.py||salt/pillar/venafi.py",
          "salt/pillar/virtkey.py||salt/pillar/virtkey.py",
          "salt/pillar/vmware_pillar.py||salt/pillar/vmware_pillar.py",
          "salt/proxy/arista_pyeapi.py||salt/proxy/arista_pyeapi.py",
          "salt/proxy/chronos.py||salt/proxy/chronos.py",
          "salt/proxy/cimc.py||salt/proxy/cimc.py",
          "salt/proxy/cisconso.py||salt/proxy/cisconso.py",
          "salt/proxy/deltaproxy.py||salt/proxy/deltaproxy.py",
          "salt/proxy/docker.py||salt/proxy/docker.py",
          "salt/proxy/dummy.py||salt/proxy/dummy.py",
          "salt/proxy/esxcluster.py||salt/proxy/esxcluster.py",
          "salt/proxy/esxdatacenter.py||salt/proxy/esxdatacenter.py",
          "salt/proxy/esxi.py||salt/proxy/esxi.py",
          "salt/proxy/esxvm.py||salt/proxy/esxvm.py",
          "salt/proxy/fx2.py||salt/proxy/fx2.py",
          "salt/proxy/junos.py||salt/proxy/junos.py",
          "salt/proxy/marathon.py||salt/proxy/marathon.py",
          "salt/proxy/napalm.py||salt/proxy/napalm.py",
          "salt/proxy/netmiko_px.py||salt/proxy/netmiko_px.py",
          "salt/proxy/nxos.py||salt/proxy/nxos.py",
          "salt/proxy/nxos_api.py||salt/proxy/nxos_api.py",
          "salt/proxy/panos.py||salt/proxy/panos.py",
          "salt/proxy/philips_hue.py||salt/proxy/philips_hue.py",
          "salt/proxy/rest_sample.py||salt/proxy/rest_sample.py",
          "salt/proxy/restconf.py||salt/proxy/restconf.py",
          "salt/proxy/ssh_sample.py||salt/proxy/ssh_sample.py",
          "salt/proxy/vcenter.py||salt/proxy/vcenter.py",
          "salt/queues/pgjsonb_queue.py||salt/queues/pgjsonb_queue.py",
          "salt/queues/sqlite_queue.py||salt/queues/sqlite_queue.py",
          "salt/renderers/aws_kms.py||salt/renderers/aws_kms.py",
          "salt/renderers/cheetah.py||salt/renderers/cheetah.py",
          "salt/renderers/dson.py||salt/renderers/dson.py",
          "salt/renderers/genshi.py||salt/renderers/genshi.py",
          "salt/renderers/gpg.py||salt/renderers/gpg.py",
          "salt/renderers/hjson.py||salt/renderers/hjson.py",
          "salt/renderers/jinja.py||salt/renderers/jinja.py",
          "salt/renderers/json.py||salt/renderers/json.py",
          "salt/renderers/json5.py||salt/renderers/json5.py",
          "salt/renderers/mako.py||salt/renderers/mako.py",
          "salt/renderers/msgpack.py||salt/renderers/msgpack.py",
          "salt/renderers/nacl.py||salt/renderers/nacl.py",
          "salt/renderers/pass.py||salt/renderers/pass.py",
          "salt/renderers/py.py||salt/renderers/py.py",
          "salt/renderers/pydsl.py||salt/renderers/pydsl.py",
          "salt/renderers/pyobjects.py||salt/renderers/pyobjects.py",
          "salt/renderers/stateconf.py||salt/renderers/stateconf.py",
          "salt/renderers/tomlmod.py||salt/renderers/tomlmod.py",
          "salt/renderers/wempy.py||salt/renderers/wempy.py",
          "salt/renderers/yaml.py||salt/renderers/yaml.py",
          "salt/renderers/yamlex.py||salt/renderers/yamlex.py",
          "salt/returners/appoptics_return.py||salt/returners/appoptics_return.py",
          "salt/returners/carbon_return.py||salt/returners/carbon_return.py",
          "salt/returners/cassandra_cql_return.py||salt/returners/cassandra_cql_return.py",
          "salt/returners/cassandra_return.py||salt/returners/cassandra_return.py",
          "salt/returners/couchbase_return.py||salt/returners/couchbase_return.py",
          "salt/returners/couchdb_return.py||salt/returners/couchdb_return.py",
          "salt/returners/django_return.py||salt/returners/django_return.py",
          "salt/returners/elasticsearch_return.py||salt/returners/elasticsearch_return.py",
          "salt/returners/etcd_return.py||salt/returners/etcd_return.py",
          "salt/returners/highstate_return.py||salt/returners/highstate_return.py",
          "salt/returners/influxdb_return.py||salt/returners/influxdb_return.py",
          "salt/returners/kafka_return.py||salt/returners/kafka_return.py",
          "salt/returners/librato_return.py||salt/returners/librato_return.py",
          "salt/returners/local.py||salt/returners/local.py",
          "salt/returners/local_cache.py||salt/returners/local_cache.py",
          "salt/returners/mattermost_returner.py||salt/returners/mattermost_returner.py",
          "salt/returners/memcache_return.py||salt/returners/memcache_return.py",
          "salt/returners/mongo_future_return.py||salt/returners/mongo_future_return.py",
          "salt/returners/mongo_return.py||salt/returners/mongo_return.py",
          "salt/returners/multi_returner.py||salt/returners/multi_returner.py",
          "salt/returners/mysql.py||salt/returners/mysql.py",
          "salt/returners/nagios_nrdp_return.py||salt/returners/nagios_nrdp_return.py",
          "salt/returners/odbc.py||salt/returners/odbc.py",
          "salt/returners/pgjsonb.py||salt/returners/pgjsonb.py",
          "salt/returners/postgres.py||salt/returners/postgres.py",
          "salt/returners/postgres_local_cache.py||salt/returners/postgres_local_cache.py",
          "salt/returners/pushover_returner.py||salt/returners/pushover_returner.py",
          "salt/returners/rawfile_json.py||salt/returners/rawfile_json.py",
          "salt/returners/redis_return.py||salt/returners/redis_return.py",
          "salt/returners/sentry_return.py||salt/returners/sentry_return.py",
          "salt/returners/slack_returner.py||salt/returners/slack_returner.py",
          "salt/returners/slack_webhook_return.py||salt/returners/slack_webhook_return.py",
          "salt/returners/sms_return.py||salt/returners/sms_return.py",
          "salt/returners/smtp_return.py||salt/returners/smtp_return.py",
          "salt/returners/splunk.py||salt/returners/splunk.py",
          "salt/returners/sqlite3_return.py||salt/returners/sqlite3_return.py",
          "salt/returners/syslog_return.py||salt/returners/syslog_return.py",
          "salt/returners/telegram_return.py||salt/returners/telegram_return.py",
          "salt/returners/xmpp_return.py||salt/returners/xmpp_return.py",
          "salt/returners/zabbix_return.py||salt/returners/zabbix_return.py",
          "salt/roster/ansible.py||salt/roster/ansible.py",
          "salt/roster/cache.py||salt/roster/cache.py",
          "salt/roster/cloud.py||salt/roster/cloud.py",
          "salt/roster/clustershell.py||salt/roster/clustershell.py",
          "salt/roster/dir.py||salt/roster/dir.py",
          "salt/roster/flat.py||salt/roster/flat.py",
          "salt/roster/range.py||salt/roster/range.py",
          "salt/roster/scan.py||salt/roster/scan.py",
          "salt/roster/sshconfig.py||salt/roster/sshconfig.py",
          "salt/roster/sshknownhosts.py||salt/roster/sshknownhosts.py",
          "salt/roster/terraform.py||salt/roster/terraform.py",
          "salt/runners/asam.py||salt/runners/asam.py",
          "salt/runners/auth.py||salt/runners/auth.py",
          "salt/runners/bgp.py||salt/runners/bgp.py",
          "salt/runners/cache.py||salt/runners/cache.py",
          "salt/runners/cloud.py||salt/runners/cloud.py",
          "salt/runners/config.py||salt/runners/config.py",
          "salt/runners/ddns.py||salt/runners/ddns.py",
          "salt/runners/digicertapi.py||salt/runners/digicertapi.py",
          "salt/runners/doc.py||salt/runners/doc.py",
          "salt/runners/drac.py||salt/runners/drac.py",
          "salt/runners/error.py||salt/runners/error.py",
          "salt/runners/event.py||salt/runners/event.py",
          "salt/runners/f5.py||salt/runners/f5.py",
          "salt/runners/fileserver.py||salt/runners/fileserver.py",
          "salt/runners/git_pillar.py||salt/runners/git_pillar.py",
          "salt/runners/http.py||salt/runners/http.py",
          "salt/runners/jobs.py||salt/runners/jobs.py",
          "salt/runners/launchd.py||salt/runners/launchd.py",
          "salt/runners/lxc.py||salt/runners/lxc.py",
          "salt/runners/manage.py||salt/runners/manage.py",
          "salt/runners/match.py||salt/runners/match.py",
          "salt/runners/mattermost.py||salt/runners/mattermost.py",
          "salt/runners/mine.py||salt/runners/mine.py",
          "salt/runners/nacl.py||salt/runners/nacl.py",
          "salt/runners/net.py||salt/runners/net.py",
          "salt/runners/network.py||salt/runners/network.py",
          "salt/runners/pagerduty.py||salt/runners/pagerduty.py",
          "salt/runners/pillar.py||salt/runners/pillar.py",
          "salt/runners/pkg.py||salt/runners/pkg.py",
          "salt/runners/queue.py||salt/runners/queue.py",
          "salt/runners/reactor.py||salt/runners/reactor.py",
          "salt/runners/salt.py||salt/runners/salt.py",
          "salt/runners/saltutil.py||salt/runners/saltutil.py",
          "salt/runners/sdb.py||salt/runners/sdb.py",
          "salt/runners/smartos_vmadm.py||salt/runners/smartos_vmadm.py",
          "salt/runners/spacewalk.py||salt/runners/spacewalk.py",
          "salt/runners/ssh.py||salt/runners/ssh.py",
          "salt/runners/state.py||salt/runners/state.py",
          "salt/runners/survey.py||salt/runners/survey.py",
          "salt/runners/test.py||salt/runners/test.py",
          "salt/runners/thin.py||salt/runners/thin.py",
          "salt/runners/vault.py||salt/runners/vault.py",
          "salt/runners/venafiapi.py||salt/runners/venafiapi.py",
          "salt/runners/virt.py||salt/runners/virt.py",
          "salt/runners/vistara.py||salt/runners/vistara.py",
          "salt/runners/winrepo.py||salt/runners/winrepo.py",
          "salt/sdb/cache.py||salt/sdcache.py",
          "salt/sdb/confidant.py||salt/sdconfidant.py",
          "salt/sdb/consul.py||salt/sdconsul.py",
          "salt/sdb/couchdb.py||salt/sdcouchdb.py",
          "salt/sdb/env.py||salt/sdenv.py",
          "salt/sdb/etcd_db.py||salt/sdetcd_db.py",
          "salt/sdb/keyring_db.py||salt/sdkeyring_db.py",
          "salt/sdb/memcached.py||salt/sdmemcached.py",
          "salt/sdb/redis_sdb.py||salt/sdredis_sdb.py",
          "salt/sdb/rest.py||salt/sdrest.py",
          "salt/sdb/sqlite3.py||salt/sdsqlite3.py",
          "salt/sdb/tism.py||salt/sdtism.py",
          "salt/sdb/vault.py||salt/sdvault.py",
          "salt/sdb/yaml.py||salt/sdyaml.py",
          "salt/serializers/configparser.py||salt/serializers/configparser.py",
          "salt/serializers/json.py||salt/serializers/json.py",
          "salt/serializers/keyvalue.py||salt/serializers/keyvalue.py",
          "salt/serializers/msgpack.py||salt/serializers/msgpack.py",
          "salt/serializers/plist.py||salt/serializers/plist.py",
          "salt/serializers/python.py||salt/serializers/python.py",
          "salt/serializers/tomlmod.py||salt/serializers/tomlmod.py",
          "salt/serializers/yaml.py||salt/serializers/yaml.py",
          "salt/serializers/yamlex.py||salt/serializers/yamlex.py",
          "salt/states/acme.py||salt/states/acme.py",
          "salt/states/alias.py||salt/states/alias.py",
          "salt/states/alternatives.py||salt/states/alternatives.py",
          "salt/states/ansiblegate.py||salt/states/ansiblegate.py",
          "salt/states/aptpkg.py||salt/states/aptpkg.py",
          "salt/states/artifactory.py||salt/states/artifactory.py",
          "salt/states/augeas.py||salt/states/augeas.py",
          "salt/states/bigip.py||salt/states/bigip.py",
          "salt/states/blockdev.py||salt/states/blockdev.py",
          "salt/states/boto3_elasticache.py||salt/states/boto3_elasticache.py",
          "salt/states/boto3_elasticsearch.py||salt/states/boto3_elasticsearch.py",
          "salt/states/boto3_route53.py||salt/states/boto3_route53.py",
          "salt/states/boto3_sns.py||salt/states/boto3_sns.py",
          "salt/states/boto_apigateway.py||salt/states/boto_apigateway.py",
          "salt/states/boto_asg.py||salt/states/boto_asg.py",
          "salt/states/boto_cfn.py||salt/states/boto_cfn.py",
          "salt/states/boto_cloudfront.py||salt/states/boto_cloudfront.py",
          "salt/states/boto_cloudtrail.py||salt/states/boto_cloudtrail.py",
          "salt/states/boto_cloudwatch_alarm.py||salt/states/boto_cloudwatch_alarm.py",
          "salt/states/boto_cloudwatch_event.py||salt/states/boto_cloudwatch_event.py",
          "salt/states/boto_cognitoidentity.py||salt/states/boto_cognitoidentity.py",
          "salt/states/boto_datapipeline.py||salt/states/boto_datapipeline.py",
          "salt/states/boto_dynamodb.py||salt/states/boto_dynamodb.py",
          "salt/states/boto_ec2.py||salt/states/boto_ec2.py",
          "salt/states/boto_elasticache.py||salt/states/boto_elasticache.py",
          "salt/states/boto_elasticsearch_domain.py||salt/states/boto_elasticsearch_domain.py",
          "salt/states/boto_elb.py||salt/states/boto_elb.py",
          "salt/states/boto_elbv2.py||salt/states/boto_elbv2.py",
          "salt/states/boto_iam.py||salt/states/boto_iam.py",
          "salt/states/boto_iam_role.py||salt/states/boto_iam_role.py",
          "salt/states/boto_iot.py||salt/states/boto_iot.py",
          "salt/states/boto_kinesis.py||salt/states/boto_kinesis.py",
          "salt/states/boto_kms.py||salt/states/boto_kms.py",
          "salt/states/boto_lambda.py||salt/states/boto_lambda.py",
          "salt/states/boto_lc.py||salt/states/boto_lc.py",
          "salt/states/boto_rds.py||salt/states/boto_rds.py",
          "salt/states/boto_route53.py||salt/states/boto_route53.py",
          "salt/states/boto_s3.py||salt/states/boto_s3.py",
          "salt/states/boto_s3_bucket.py||salt/states/boto_s3_bucket.py",
          "salt/states/boto_secgroup.py||salt/states/boto_secgroup.py",
          "salt/states/boto_sns.py||salt/states/boto_sns.py",
          "salt/states/boto_sqs.py||salt/states/boto_sqs.py",
          "salt/states/boto_vpc.py||salt/states/boto_vpc.py",
          "salt/states/btrfs.py||salt/states/btrfs.py",
          "salt/states/cabal.py||salt/states/cabal.py",
          "salt/states/ceph.py||salt/states/ceph.py",
          "salt/states/chef.py||salt/states/chef.py",
          "salt/states/chocolatey.py||salt/states/chocolatey.py",
          "salt/states/chronos_job.py||salt/states/chronos_job.py",
          "salt/states/cimc.py||salt/states/cimc.py",
          "salt/states/cisconso.py||salt/states/cisconso.py",
          "salt/states/composer.py||salt/states/composer.py",
          "salt/states/consul.py||salt/states/consul.py",
          "salt/states/cryptdev.py||salt/states/cryptdev.py",
          "salt/states/csf.py||salt/states/csf.py",
          "salt/states/cyg.py||salt/states/cyg.py",
          "salt/states/ddns.py||salt/states/ddns.py",
          "salt/states/debconfmod.py||salt/states/debconfmod.py",
          "salt/states/dellchassis.py||salt/states/dellchassis.py",
          "salt/states/docker_container.py||salt/states/docker_container.py",
          "salt/states/docker_image.py||salt/states/docker_image.py",
          "salt/states/docker_network.py||salt/states/docker_network.py",
          "salt/states/docker_volume.py||salt/states/docker_volume.py",
          "salt/states/drac.py||salt/states/drac.py",
          "salt/states/dvs.py||salt/states/dvs.py",
          "salt/states/elasticsearch.py||salt/states/elasticsearch.py",
          "salt/states/elasticsearch_index.py||salt/states/elasticsearch_index.py",
          "salt/states/elasticsearch_index_template.py||salt/states/elasticsearch_index_template.py",
          "salt/states/eselect.py||salt/states/eselect.py",
          "salt/states/esxcluster.py||salt/states/esxcluster.py",
          "salt/states/esxdatacenter.py||salt/states/esxdatacenter.py",
          "salt/states/esxi.py||salt/states/esxi.py",
          "salt/states/esxvm.py||salt/states/esxvm.py",
          "salt/states/ethtool.py||salt/states/ethtool.py",
          "salt/states/gem.py||salt/states/gem.py",
          "salt/states/github.py||salt/states/github.py",
          "salt/states/glance_image.py||salt/states/glance_image.py",
          "salt/states/glassfish.py||salt/states/glassfish.py",
          "salt/states/glusterfs.py||salt/states/glusterfs.py",
          "salt/states/gnomedesktop.py||salt/states/gnomedesktop.py",
          "salt/states/grafana.py||salt/states/grafana.py",
          "salt/states/grafana4_dashboard.py||salt/states/grafana4_dashboard.py",
          "salt/states/grafana4_datasource.py||salt/states/grafana4_datasource.py",
          "salt/states/grafana4_org.py||salt/states/grafana4_org.py",
          "salt/states/grafana4_user.py||salt/states/grafana4_user.py",
          "salt/states/grafana_dashboard.py||salt/states/grafana_dashboard.py",
          "salt/states/grafana_datasource.py||salt/states/grafana_datasource.py",
          "salt/states/heat.py||salt/states/heat.py",
          "salt/states/helm.py||salt/states/helm.py",
          "salt/states/hg.py||salt/states/hg.py",
          "salt/states/icinga2.py||salt/states/icinga2.py",
          "salt/states/ifttt.py||salt/states/ifttt.py",
          "salt/states/incron.py||salt/states/incron.py",
          "salt/states/influxdb08_database.py||salt/states/influxdb08_database.py",
          "salt/states/influxdb08_user.py||salt/states/influxdb08_user.py",
          "salt/states/influxdb_continuous_query.py||salt/states/influxdb_continuous_query.py",
          "salt/states/influxdb_database.py||salt/states/influxdb_database.py",
          "salt/states/influxdb_retention_policy.py||salt/states/influxdb_retention_policy.py",
          "salt/states/influxdb_user.py||salt/states/influxdb_user.py",
          "salt/states/infoblox_a.py||salt/states/infoblox_a.py",
          "salt/states/infoblox_cname.py||salt/states/infoblox_cname.py",
          "salt/states/infoblox_host_record.py||salt/states/infoblox_host_record.py",
          "salt/states/infoblox_range.py||salt/states/infoblox_range.py",
          "salt/states/jboss7.py||salt/states/jboss7.py",
          "salt/states/jenkins.py||salt/states/jenkins.py",
          "salt/states/junos.py||salt/states/junos.py",
          "salt/states/kapacitor.py||salt/states/kapacitor.py",
          "salt/states/kernelpkg.py||salt/states/kernelpkg.py",
          "salt/states/keystone.py||salt/states/keystone.py",
          "salt/states/keystone_domain.py||salt/states/keystone_domain.py",
          "salt/states/keystone_endpoint.py||salt/states/keystone_endpoint.py",
          "salt/states/keystone_group.py||salt/states/keystone_group.py",
          "salt/states/keystone_project.py||salt/states/keystone_project.py",
          "salt/states/keystone_role.py||salt/states/keystone_role.py",
          "salt/states/keystone_role_grant.py||salt/states/keystone_role_grant.py",
          "salt/states/keystone_service.py||salt/states/keystone_service.py",
          "salt/states/keystone_user.py||salt/states/keystone_user.py",
          "salt/states/keystore.py||salt/states/keystore.py",
          "salt/states/kmod.py||salt/states/kmod.py",
          "salt/states/kubernetes.py||salt/states/kubernetes.py",
          "salt/states/layman.py||salt/states/layman.py",
          "salt/states/ldap.py||salt/states/ldap.py",
          "salt/states/libcloud_dns.py||salt/states/libcloud_dns.py",
          "salt/states/libcloud_loadbalancer.py||salt/states/libcloud_loadbalancer.py",
          "salt/states/libcloud_storage.py||salt/states/libcloud_storage.py",
          "salt/states/locale.py||salt/states/locale.py",
          "salt/states/logadm.py||salt/states/logadm.py",
          "salt/states/lvs_server.py||salt/states/lvs_server.py",
          "salt/states/lvs_service.py||salt/states/lvs_service.py",
          "salt/states/lxc.py||salt/states/lxc.py",
          "salt/states/lxd.py||salt/states/lxd.py",
          "salt/states/lxd_container.py||salt/states/lxd_container.py",
          "salt/states/lxd_image.py||salt/states/lxd_image.py",
          "salt/states/lxd_profile.py||salt/states/lxd_profile.py",
          "salt/states/mac_assistive.py||salt/states/mac_assistive.py",
          "salt/states/mac_keychain.py||salt/states/mac_keychain.py",
          "salt/states/mac_xattr.py||salt/states/mac_xattr.py",
          "salt/states/macdefaults.py||salt/states/macdefaults.py",
          "salt/states/macpackage.py||salt/states/macpackage.py",
          "salt/states/marathon_app.py||salt/states/marathon_app.py",
          "salt/states/memcached.py||salt/states/memcached.py",
          "salt/states/modjk.py||salt/states/modjk.py",
          "salt/states/modjk_worker.py||salt/states/modjk_worker.py",
          "salt/states/module.py||salt/states/module.py",
          "salt/states/mongodb_database.py||salt/states/mongodb_database.py",
          "salt/states/mongodb_user.py||salt/states/mongodb_user.py",
          "salt/states/monit.py||salt/states/monit.py",
          "salt/states/mssql_database.py||salt/states/mssql_database.py",
          "salt/states/mssql_login.py||salt/states/mssql_login.py",
          "salt/states/mssql_role.py||salt/states/mssql_role.py",
          "salt/states/mssql_user.py||salt/states/mssql_user.py",
          "salt/states/msteams.py||salt/states/msteams.py",
          "salt/states/mysql_database.py||salt/states/mysql_database.py",
          "salt/states/mysql_grants.py||salt/states/mysql_grants.py",
          "salt/states/mysql_query.py||salt/states/mysql_query.py",
          "salt/states/mysql_user.py||salt/states/mysql_user.py",
          "salt/states/net_napalm_yang.py||salt/states/net_napalm_yang.py",
          "salt/states/neutron_network.py||salt/states/neutron_network.py",
          "salt/states/neutron_secgroup.py||salt/states/neutron_secgroup.py",
          "salt/states/neutron_secgroup_rule.py||salt/states/neutron_secgroup_rule.py",
          "salt/states/neutron_subnet.py||salt/states/neutron_subnet.py",
          "salt/states/nexus.py||salt/states/nexus.py",
          "salt/states/nfs_export.py||salt/states/nfs_export.py",
          "salt/states/nftables.py||salt/states/nftables.py",
          "salt/states/nxos.py||salt/states/nxos.py",
          "salt/states/nxos_upgrade.py||salt/states/nxos_upgrade.py",
          "salt/states/openstack_config.py||salt/states/openstack_config.py",
          "salt/states/openvswitch_bridge.py||salt/states/openvswitch_bridge.py",
          "salt/states/openvswitch_db.py||salt/states/openvswitch_db.py",
          "salt/states/openvswitch_port.py||salt/states/openvswitch_port.py",
          "salt/states/opsgenie.py||salt/states/opsgenie.py",
          "salt/states/pagerduty.py||salt/states/pagerduty.py",
          "salt/states/pagerduty_escalation_policy.py||salt/states/pagerduty_escalation_policy.py",
          "salt/states/pagerduty_schedule.py||salt/states/pagerduty_schedule.py",
          "salt/states/pagerduty_service.py||salt/states/pagerduty_service.py",
          "salt/states/pagerduty_user.py||salt/states/pagerduty_user.py",
          "salt/states/panos.py||salt/states/panos.py",
          "salt/states/pbm.py||salt/states/pbm.py",
          "salt/states/pcs.py||salt/states/pcs.py",
          "salt/states/pdbedit.py||salt/states/pdbedit.py",
          "salt/states/pecl.py||salt/states/pecl.py",
          "salt/states/pkgng.py||salt/states/pkgng.py",
          "salt/states/pkgrepo.py||salt/states/pkgrepo.py",
          "salt/states/portage_config.py||salt/states/portage_config.py",
          "salt/states/ports.py||salt/states/ports.py",
          "salt/states/postgres_cluster.py||salt/states/postgres_cluster.py",
          "salt/states/postgres_database.py||salt/states/postgres_database.py",
          "salt/states/postgres_extension.py||salt/states/postgres_extension.py",
          "salt/states/postgres_group.py||salt/states/postgres_group.py",
          "salt/states/postgres_initdb.py||salt/states/postgres_initdb.py",
          "salt/states/postgres_language.py||salt/states/postgres_language.py",
          "salt/states/postgres_privileges.py||salt/states/postgres_privileges.py",
          "salt/states/postgres_schema.py||salt/states/postgres_schema.py",
          "salt/states/postgres_tablespace.py||salt/states/postgres_tablespace.py",
          "salt/states/postgres_user.py||salt/states/postgres_user.py",
          "salt/states/powerpath.py||salt/states/powerpath.py",
          "salt/states/probes.py||salt/states/probes.py",
          "salt/states/process.py||salt/states/process.py",
          "salt/states/pushover.py||salt/states/pushover.py",
          "salt/states/pyrax_queues.py||salt/states/pyrax_queues.py",
          "salt/states/rabbitmq_cluster.py||salt/states/rabbitmq_cluster.py",
          "salt/states/rabbitmq_plugin.py||salt/states/rabbitmq_plugin.py",
          "salt/states/rabbitmq_policy.py||salt/states/rabbitmq_policy.py",
          "salt/states/rabbitmq_upstream.py||salt/states/rabbitmq_upstream.py",
          "salt/states/rabbitmq_user.py||salt/states/rabbitmq_user.py",
          "salt/states/rabbitmq_vhost.py||salt/states/rabbitmq_vhost.py",
          "salt/states/rbac_solaris.py||salt/states/rbac_solaris.py",
          "salt/states/rbenv.py||salt/states/rbenv.py",
          "salt/states/rdp.py||salt/states/rdp.py",
          "salt/states/redismod.py||salt/states/redismod.py",
          "salt/states/reg.py||salt/states/reg.py",
          "salt/states/restconf.py||salt/states/restconf.py",
          "salt/states/rsync.py||salt/states/rsync.py",
          "salt/states/rvm.py||salt/states/rvm.py",
          "salt/states/serverdensity_device.py||salt/states/serverdensity_device.py",
          "salt/states/slack.py||salt/states/slack.py",
          "salt/states/smartos.py||salt/states/smartos.py",
          "salt/states/snapper.py||salt/states/snapper.py",
          "salt/states/solrcloud.py||salt/states/solrcloud.py",
          "salt/states/splunk.py||salt/states/splunk.py",
          "salt/states/splunk_search.py||salt/states/splunk_search.py",
          "salt/states/sqlite3.py||salt/states/sqlite3.py",
          "salt/states/statuspage.py||salt/states/statuspage.py",
          "salt/states/supervisord.py||salt/states/supervisord.py",
          "salt/states/svn.py||salt/states/svn.py",
          "salt/states/sysrc.py||salt/states/sysrc.py",
          "salt/states/telemetry_alert.py||salt/states/telemetry_alert.py",
          "salt/states/testinframod.py||salt/states/testinframod.py",
          "salt/states/tomcat.py||salt/states/tomcat.py",
          "salt/states/trafficserver.py||salt/states/trafficserver.py",
          "salt/states/vagrant.py||salt/states/vagrant.py",
          "salt/states/vault.py||salt/states/vault.py",
          "salt/states/vbox_guest.py||salt/states/vbox_guest.py",
          "salt/states/victorops.py||salt/states/victorops.py",
          "salt/states/virt.py||salt/states/virt.py",
          "salt/states/virtualenv_mod.py||salt/states/virtualenv_mod.py",
          "salt/states/webutil.py||salt/states/webutil.py",
          "salt/states/win_appx.py||salt/states/win_appx.py",
          "salt/states/win_certutil.py||salt/states/win_certutil.py",
          "salt/states/win_dacl.py||salt/states/win_dacl.py",
          "salt/states/win_dism.py||salt/states/win_dism.py",
          "salt/states/win_dns_client.py||salt/states/win_dns_client.py",
          "salt/states/win_firewall.py||salt/states/win_firewall.py",
          "salt/states/win_iis.py||salt/states/win_iis.py",
          "salt/states/win_lgpo.py||salt/states/win_lgpo.py",
          "salt/states/win_lgpo_reg.py||salt/states/win_lgpo_reg.py",
          "salt/states/win_license.py||salt/states/win_license.py",
          "salt/states/win_network.py||salt/states/win_network.py",
          "salt/states/win_path.py||salt/states/win_path.py",
          "salt/states/win_pki.py||salt/states/win_pki.py",
          "salt/states/win_powercfg.py||salt/states/win_powercfg.py",
          "salt/states/win_servermanager.py||salt/states/win_servermanager.py",
          "salt/states/win_shortcut.py||salt/states/win_shortcut.py",
          "salt/states/win_smtp_server.py||salt/states/win_smtp_server.py",
          "salt/states/win_snmp.py||salt/states/win_snmp.py",
          "salt/states/win_system.py||salt/states/win_system.py",
          "salt/states/win_wua.py||salt/states/win_wua.py",
          "salt/states/win_wusa.py||salt/states/win_wusa.py",
          "salt/states/winrepo.py||salt/states/winrepo.py",
          "salt/states/wordpress.py||salt/states/wordpress.py",
          "salt/states/xml.py||salt/states/xml.py",
          "salt/states/xmpp.py||salt/states/xmpp.py",
          "salt/states/zabbix_action.py||salt/states/zabbix_action.py",
          "salt/states/zabbix_host.py||salt/states/zabbix_host.py",
          "salt/states/zabbix_hostgroup.py||salt/states/zabbix_hostgroup.py",
          "salt/states/zabbix_mediatype.py||salt/states/zabbix_mediatype.py",
          "salt/states/zabbix_template.py||salt/states/zabbix_template.py",
          "salt/states/zabbix_user.py||salt/states/zabbix_user.py",
          "salt/states/zabbix_usergroup.py||salt/states/zabbix_usergroup.py",
          "salt/states/zabbix_usermacro.py||salt/states/zabbix_usermacro.py",
          "salt/states/zabbix_valuemap.py||salt/states/zabbix_valuemap.py",
          "salt/states/zcbuildout.py||salt/states/zcbuildout.py",
          "salt/states/zenoss.py||salt/states/zenoss.py",
          "salt/states/zfs.py||salt/states/zfs.py",
          "salt/states/zk_concurrency.py||salt/states/zk_concurrency.py",
          "salt/states/zone.py||salt/states/zone.py",
          "salt/states/zookeeper.py||salt/states/zookeeper.py",
          "salt/states/zpool.py||salt/states/zpool.py",
          "tests/__init__.py||tests/__init__.py",
          "tests/buildpackage.py||tests/buildpackage.py",
          "tests/committer_parser.py||tests/committer_parser.py",
          "tests/conftest.py||tests/conftest.py",
          "tests/eventlisten.py||tests/eventlisten.py",
          "tests/integration/cli/test_custom_module.py||tests/integration/cli/test_custom_module.py",
          "tests/integration/client/test_kwarg.py||tests/integration/client/test_kwarg.py",
          "tests/integration/client/test_standard.py||tests/integration/client/test_standard.py",
          "tests/integration/client/test_syndic.py||tests/integration/client/test_syndic.py",
          "tests/integration/cloud/clouds/test_digitalocean.py||tests/integration/cloud/clouds/test_digitalocean.py",
          "tests/integration/cloud/clouds/test_dimensiondata.py||tests/integration/cloud/clouds/test_dimensiondata.py",
          "tests/integration/cloud/clouds/test_ec2.py||tests/integration/cloud/clouds/test_ec2.py",
          "tests/integration/cloud/clouds/test_gce.py||tests/integration/cloud/clouds/test_gce.py",
          "tests/integration/cloud/clouds/test_gogrid.py||tests/integration/cloud/clouds/test_gogrid.py",
          "tests/integration/cloud/clouds/test_linode.py||tests/integration/cloud/clouds/test_linode.py",
          "tests/integration/cloud/clouds/test_oneandone.py||tests/integration/cloud/clouds/test_oneandone.py",
          "tests/integration/cloud/clouds/test_openstack.py||tests/integration/cloud/clouds/test_openstack.py",
          "tests/integration/cloud/clouds/test_profitbricks.py||tests/integration/cloud/clouds/test_profitbricks.py",
          "tests/integration/cloud/clouds/test_tencentcloud.py||tests/integration/cloud/clouds/test_tencentcloud.py",
          "tests/integration/cloud/clouds/test_virtualbox.py||tests/integration/cloud/clouds/test_virtualbox.py",
          "tests/integration/cloud/clouds/test_vmware.py||tests/integration/cloud/clouds/test_vmware.py",
          "tests/integration/cloud/clouds/test_vultrpy.py||tests/integration/cloud/clouds/test_vultrpy.py",
          "tests/integration/cloud/helpers/__init__.py||tests/integration/cloud/helpers/__init__.py",
          "tests/integration/cloud/helpers/cloud_test_base.py||tests/integration/cloud/helpers/cloud_test_base.py",
          "tests/integration/cloud/helpers/virtualbox.py||tests/integration/cloud/helpers/virtualbox.py",
          "tests/integration/cloud/test_cloud.py||tests/integration/cloud/test_cloud.py",
          "tests/integration/conftest.py||tests/integration/conftest.py",
          "tests/integration/externalapi/test_venafiapi.py||tests/integration/externalapi/test_venafiapi.py",
          "tests/integration/files/extension_modules/pillar/ext_pillar_opts.py||tests/integration/files/extension_modules/pillar/ext_pillar_opts.py",
          "tests/integration/files/extension_modules/tops/master_tops_test.py||tests/integration/files/extension_modules/tops/master_tops_test.py",
          "tests/integration/files/file/base/_executors/arg.py||tests/integration/files/file/base/_executors/arg.py",
          "tests/integration/files/file/base/_grains/custom_grain2.py||tests/integration/files/file/base/_grains/custom_grain2.py",
          "tests/integration/files/file/base/_grains/custom_grains.py||tests/integration/files/file/base/_grains/custom_grains.py",
          "tests/integration/files/file/base/_grains/matcher_grain.py||tests/integration/files/file/base/_grains/matcher_grain.py",
          "tests/integration/files/file/base/_modules/depends_versioned.py||tests/integration/files/file/base/_modules/depends_versioned.py",
          "tests/integration/files/file/base/_modules/depends_versionless.py||tests/integration/files/file/base/_modules/depends_versionless.py",
          "tests/integration/files/file/base/_modules/override_test.py||tests/integration/files/file/base/_modules/override_test.py",
          "tests/integration/files/file/base/_modules/runtests_decorators.py||tests/integration/files/file/base/_modules/runtests_decorators.py",
          "tests/integration/files/file/base/_modules/runtests_helpers.py||tests/integration/files/file/base/_modules/runtests_helpers.py",
          "tests/integration/files/file/base/_modules/salttest.py||tests/integration/files/file/base/_modules/salttest.py",
          "tests/integration/files/file/base/_runners/runtests_helpers.py||tests/integration/files/file/base/_runners/runtests_helpers.py",
          "tests/integration/files/file/base/_states/salttest.py||tests/integration/files/file/base/_states/salttest.py",
          "tests/integration/files/file/base/_wheel/runtests_helpers.py||tests/integration/files/file/base/_wheel/runtests_helpers.py",
          "tests/integration/files/file/base/buildout/var/tb/2/bootstrap.py||tests/integration/files/file/base/buildout/var/t2/bootstrap.py",
          "tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py||tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py",
          "tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py||tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py",
          "tests/integration/files/file/base/script.py||tests/integration/files/file/base/script.py",
          "tests/integration/files/returners/noop_returner.py||tests/integration/files/returners/noop_returner.py",
          "tests/integration/grains/test_core.py||tests/integration/grains/test_core.py",
          "tests/integration/grains/test_custom.py||tests/integration/grains/test_custom.py",
          "tests/integration/loader/test_ext_grains.py||tests/integration/loader/test_ext_grains.py",
          "tests/integration/loader/test_ext_modules.py||tests/integration/loader/test_ext_modules.py",
          "tests/integration/master/test_event_return.py||tests/integration/master/test_event_return.py",
          "tests/integration/minion/test_executor.py||tests/integration/minion/test_executor.py",
          "tests/integration/minion/test_minion_cache.py||tests/integration/minion/test_minion_cache.py",
          "tests/integration/minion/test_timeout.py||tests/integration/minion/test_timeout.py",
          "tests/integration/modules/test_boto_iam.py||tests/integration/modules/test_boto_iam.py",
          "tests/integration/modules/test_boto_sns.py||tests/integration/modules/test_boto_sns.py",
          "tests/integration/modules/test_chocolatey.py||tests/integration/modules/test_chocolatey.py",
          "tests/integration/modules/test_cmdmod.py||tests/integration/modules/test_cmdmod.py",
          "tests/integration/modules/test_config.py||tests/integration/modules/test_config.py",
          "tests/integration/modules/test_cp.py||tests/integration/modules/test_cp.py",
          "tests/integration/modules/test_decorators.py||tests/integration/modules/test_decorators.py",
          "tests/integration/modules/test_disk.py||tests/integration/modules/test_disk.py",
          "tests/integration/modules/test_file.py||tests/integration/modules/test_file.py",
          "tests/integration/modules/test_gem.py||tests/integration/modules/test_gem.py",
          "tests/integration/modules/test_gentoolkitmod.py||tests/integration/modules/test_gentoolkitmod.py",
          "tests/integration/modules/test_git.py||tests/integration/modules/test_git.py",
          "tests/integration/modules/test_groupadd.py||tests/integration/modules/test_groupadd.py",
          "tests/integration/modules/test_hosts.py||tests/integration/modules/test_hosts.py",
          "tests/integration/modules/test_key.py||tests/integration/modules/test_key.py",
          "tests/integration/modules/test_linux_acl.py||tests/integration/modules/test_linux_acl.py",
          "tests/integration/modules/test_linux_shadow.py||tests/integration/modules/test_linux_shadow.py",
          "tests/integration/modules/test_localemod.py||tests/integration/modules/test_localemod.py",
          "tests/integration/modules/test_lxc.py||tests/integration/modules/test_lxc.py",
          "tests/integration/modules/test_macdefaults.py||tests/integration/modules/test_macdefaults.py",
          "tests/integration/modules/test_mine.py||tests/integration/modules/test_mine.py",
          "tests/integration/modules/test_mysql.py||tests/integration/modules/test_mysql.py",
          "tests/integration/modules/test_publish.py||tests/integration/modules/test_publish.py",
          "tests/integration/modules/test_pw_user.py||tests/integration/modules/test_pw_user.py",
          "tests/integration/modules/test_rabbitmq.py||tests/integration/modules/test_rabbitmq.py",
          "tests/integration/modules/test_saltcheck.py||tests/integration/modules/test_saltcheck.py",
          "tests/integration/modules/test_ssh.py||tests/integration/modules/test_ssh.py",
          "tests/integration/modules/test_status.py||tests/integration/modules/test_status.py",
          "tests/integration/modules/test_supervisord.py||tests/integration/modules/test_supervisord.py",
          "tests/integration/modules/test_sysctl.py||tests/integration/modules/test_sysctl.py",
          "tests/integration/modules/test_sysrc.py||tests/integration/modules/test_sysrc.py",
          "tests/integration/modules/test_test.py||tests/integration/modules/test_test.py",
          "tests/integration/modules/test_timezone.py||tests/integration/modules/test_timezone.py",
          "tests/integration/modules/test_tls.py||tests/integration/modules/test_tls.py",
          "tests/integration/modules/test_win_autoruns.py||tests/integration/modules/test_win_autoruns.py",
          "tests/integration/modules/test_win_dns_client.py||tests/integration/modules/test_win_dns_client.py",
          "tests/integration/modules/test_win_firewall.py||tests/integration/modules/test_win_firewall.py",
          "tests/integration/modules/test_win_ip.py||tests/integration/modules/test_win_ip.py",
          "tests/integration/modules/test_win_ntp.py||tests/integration/modules/test_win_ntp.py",
          "tests/integration/modules/test_win_pkg.py||tests/integration/modules/test_win_pkg.py",
          "tests/integration/modules/test_win_servermanager.py||tests/integration/modules/test_win_servermanager.py",
          "tests/integration/modules/test_win_task.py||tests/integration/modules/test_win_task.py",
          "tests/integration/netapi/rest_tornado/test_app.py||tests/integration/netapi/rest_tornado/test_app.py",
          "tests/integration/output/test_output.py||tests/integration/output/test_output.py",
          "tests/integration/pillar/test_git_pillar.py||tests/integration/pillar/test_git_pillar.py",
          "tests/integration/renderers/test_pydsl.py||tests/integration/renderers/test_pydsl.py",
          "tests/integration/returners/test_appoptics_return.py||tests/integration/returners/test_appoptics_return.py",
          "tests/integration/returners/test_librato_return.py||tests/integration/returners/test_librato_return.py",
          "tests/integration/runners/test_fileserver.py||tests/integration/runners/test_fileserver.py",
          "tests/integration/runners/test_manage.py||tests/integration/runners/test_manage.py",
          "tests/integration/runners/test_runner_returns.py||tests/integration/runners/test_runner_returns.py",
          "tests/integration/runners/test_salt.py||tests/integration/runners/test_salt.py",
          "tests/integration/sdb/test_env.py||tests/integration/sdtest_env.py",
          "tests/integration/shell/test_arguments.py||tests/integration/shell/test_arguments.py",
          "tests/integration/shell/test_enabled.py||tests/integration/shell/test_enabled.py",
          "tests/integration/shell/test_master_tops.py||tests/integration/shell/test_master_tops.py",
          "tests/integration/shell/test_spm.py||tests/integration/shell/test_spm.py",
          "tests/integration/spm/test_build.py||tests/integration/spm/test_build.py",
          "tests/integration/spm/test_files.py||tests/integration/spm/test_files.py",
          "tests/integration/spm/test_info.py||tests/integration/spm/test_info.py",
          "tests/integration/spm/test_install.py||tests/integration/spm/test_install.py",
          "tests/integration/spm/test_remove.py||tests/integration/spm/test_remove.py",
          "tests/integration/spm/test_repo.py||tests/integration/spm/test_repo.py",
          "tests/integration/ssh/test_state.py||tests/integration/ssh/test_state.py",
          "tests/integration/states/test_alternatives.py||tests/integration/states/test_alternatives.py",
          "tests/integration/states/test_archive.py||tests/integration/states/test_archive.py",
          "tests/integration/states/test_boto_sns.py||tests/integration/states/test_boto_sns.py",
          "tests/integration/states/test_bower.py||tests/integration/states/test_bower.py",
          "tests/integration/states/test_chocolatey.py||tests/integration/states/test_chocolatey.py",
          "tests/integration/states/test_cmd.py||tests/integration/states/test_cmd.py",
          "tests/integration/states/test_compiler.py||tests/integration/states/test_compiler.py",
          "tests/integration/states/test_git.py||tests/integration/states/test_git.py",
          "tests/integration/states/test_handle_error.py||tests/integration/states/test_handle_error.py",
          "tests/integration/states/test_handle_iorder.py||tests/integration/states/test_handle_iorder.py",
          "tests/integration/states/test_host.py||tests/integration/states/test_host.py",
          "tests/integration/states/test_keystone.py||tests/integration/states/test_keystone.py",
          "tests/integration/states/test_lxd.py||tests/integration/states/test_lxd.py",
          "tests/integration/states/test_lxd_container.py||tests/integration/states/test_lxd_container.py",
          "tests/integration/states/test_lxd_image.py||tests/integration/states/test_lxd_image.py",
          "tests/integration/states/test_lxd_profile.py||tests/integration/states/test_lxd_profile.py",
          "tests/integration/states/test_match.py||tests/integration/states/test_match.py",
          "tests/integration/states/test_mysql_database.py||tests/integration/states/test_mysql_database.py",
          "tests/integration/states/test_mysql_grants.py||tests/integration/states/test_mysql_grants.py",
          "tests/integration/states/test_network.py||tests/integration/states/test_network.py",
          "tests/integration/states/test_rabbitmq_user.py||tests/integration/states/test_rabbitmq_user.py",
          "tests/integration/states/test_rabbitmq_vhost.py||tests/integration/states/test_rabbitmq_vhost.py",
          "tests/integration/states/test_reg.py||tests/integration/states/test_reg.py",
          "tests/integration/states/test_renderers.py||tests/integration/states/test_renderers.py",
          "tests/integration/states/test_ssh_auth.py||tests/integration/states/test_ssh_auth.py",
          "tests/integration/states/test_ssh_known_hosts.py||tests/integration/states/test_ssh_known_hosts.py",
          "tests/integration/states/test_supervisord.py||tests/integration/states/test_supervisord.py",
          "tests/integration/states/test_x509.py||tests/integration/states/test_x509.py",
          "tests/integration/utils/__init__.py||tests/integration/utils/__init__.py",
          "tests/integration/utils/test_idem.py||tests/integration/utils/test_idem.py",
          "tests/integration/utils/test_smb.py||tests/integration/utils/test_smb.py",
          "tests/integration/utils/test_win_runas.py||tests/integration/utils/test_win_runas.py",
          "tests/kitchen/test_kitchen.py||tests/kitchen/test_kitchen.py",
          "tests/kitchen/tests/wordpress/tests/conftest.py||tests/kitchen/tests/wordpress/tests/conftest.py",
          "tests/kitchen/tests/wordpress/tests/salt/test_salt.py||tests/kitchen/tests/wordpress/tests/salt/test_salt.py",
          "tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py||tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py",
          "tests/minionswarm.py||tests/minionswarm.py",
          "tests/modparser.py||tests/modparser.py",
          "tests/packdump.py||tests/packdump.py",
          "tests/pytests/conftest.py||tests/pytests/conftest.py",
          "tests/pytests/functional/cache/helpers.py||tests/pytests/functional/cache/helpers.py",
          "tests/pytests/functional/cache/test_consul.py||tests/pytests/functional/cache/test_consul.py",
          "tests/pytests/functional/cache/test_etcd.py||tests/pytests/functional/cache/test_etcd.py",
          "tests/pytests/functional/cache/test_localfs.py||tests/pytests/functional/cache/test_localfs.py",
          "tests/pytests/functional/cache/test_memcache.py||tests/pytests/functional/cache/test_memcache.py",
          "tests/pytests/functional/cache/test_mysql.py||tests/pytests/functional/cache/test_mysql.py",
          "tests/pytests/functional/cache/test_redis.py||tests/pytests/functional/cache/test_redis.py",
          "tests/pytests/functional/channel/conftest.py||tests/pytests/functional/channel/conftest.py",
          "tests/pytests/functional/channel/test_client.py||tests/pytests/functional/channel/test_client.py",
          "tests/pytests/functional/channel/test_server.py||tests/pytests/functional/channel/test_server.py",
          "tests/pytests/functional/cli/conftest.py||tests/pytests/functional/cli/conftest.py",
          "tests/pytests/functional/cli/test_api.py||tests/pytests/functional/cli/test_api.py",
          "tests/pytests/functional/cli/test_batch.py||tests/pytests/functional/cli/test_batch.py",
          "tests/pytests/functional/cli/test_salt.py||tests/pytests/functional/cli/test_salt.py",
          "tests/pytests/functional/cli/test_salt_cloud.py||tests/pytests/functional/cli/test_salt_cloud.py",
          "tests/pytests/functional/cli/test_salt_deltaproxy.py||tests/pytests/functional/cli/test_salt_deltaproxy.py",
          "tests/pytests/functional/cli/test_salt_master.py||tests/pytests/functional/cli/test_salt_master.py",
          "tests/pytests/functional/cli/test_salt_pip.py||tests/pytests/functional/cli/test_salt_pip.py",
          "tests/pytests/functional/cli/test_salt_run_.py||tests/pytests/functional/cli/test_salt_run_.py",
          "tests/pytests/functional/cli/test_salt_run_show_jid.py||tests/pytests/functional/cli/test_salt_run_show_jid.py",
          "tests/pytests/functional/conftest.py||tests/pytests/functional/conftest.py",
          "tests/pytests/functional/fileserver/hgfs/test_hgfs.py||tests/pytests/functional/fileserver/hgfs/test_hgfs.py",
          "tests/pytests/functional/fileserver/test_roots.py||tests/pytests/functional/fileserver/test_roots.py",
          "tests/pytests/functional/formulas/conftest.py||tests/pytests/functional/formulas/conftest.py",
          "tests/pytests/functional/formulas/test_docker.py||tests/pytests/functional/formulas/test_docker.py",
          "tests/pytests/functional/formulas/test_nginx.py||tests/pytests/functional/formulas/test_nginx.py",
          "tests/pytests/functional/formulas/test_salt.py||tests/pytests/functional/formulas/test_salt.py",
          "tests/pytests/functional/formulas/test_sudoers.py||tests/pytests/functional/formulas/test_sudoers.py",
          "tests/pytests/functional/formulas/test_users.py||tests/pytests/functional/formulas/test_users.py",
          "tests/pytests/functional/formulas/test_vim.py||tests/pytests/functional/formulas/test_vim.py",
          "tests/pytests/functional/grains/test_grains.py||tests/pytests/functional/grains/test_grains.py",
          "tests/pytests/functional/loader/test_loaded_base_name.py||tests/pytests/functional/loader/test_loaded_base_name.py",
          "tests/pytests/functional/loader/test_loader.py||tests/pytests/functional/loader/test_loader.py",
          "tests/pytests/functional/log_handlers/test_logstash_mod.py||tests/pytests/functional/log_handlers/test_logstash_mod.py",
          "tests/pytests/functional/masterminion/test_masterminion_conf.py||tests/pytests/functional/masterminion/test_masterminion_conf.py",
          "tests/pytests/functional/modules/cmd/test_powershell.py||tests/pytests/functional/modules/cmd/test_powershell.py",
          "tests/pytests/functional/modules/cmd/test_runas.py||tests/pytests/functional/modules/cmd/test_runas.py",
          "tests/pytests/functional/modules/conftest.py||tests/pytests/functional/modules/conftest.py",
          "tests/pytests/functional/modules/file/test_readlink.py||tests/pytests/functional/modules/file/test_readlink.py",
          "tests/pytests/functional/modules/file/test_replace.py||tests/pytests/functional/modules/file/test_replace.py",
          "tests/pytests/functional/modules/file/test_rmdir.py||tests/pytests/functional/modules/file/test_rmdir.py",
          "tests/pytests/functional/modules/file/test_symlink.py||tests/pytests/functional/modules/file/test_symlink.py",
          "tests/pytests/functional/modules/file/test_touch.py||tests/pytests/functional/modules/file/test_touch.py",
          "tests/pytests/functional/modules/pillar/test_config.py||tests/pytests/functional/modules/pillar/test_config.py",
          "tests/pytests/functional/modules/pillar/test_default.py||tests/pytests/functional/modules/pillar/test_default.py",
          "tests/pytests/functional/modules/state/conftest.py||tests/pytests/functional/modules/state/conftest.py",
          "tests/pytests/functional/modules/state/requisites/__init__.py||tests/pytests/functional/modules/state/requisites/__init__.py",
          "tests/pytests/functional/modules/state/requisites/test_listen.py||tests/pytests/functional/modules/state/requisites/test_listen.py",
          "tests/pytests/functional/modules/state/requisites/test_mixed.py||tests/pytests/functional/modules/state/requisites/test_mixed.py",
          "tests/pytests/functional/modules/state/requisites/test_onchanges.py||tests/pytests/functional/modules/state/requisites/test_onchanges.py",
          "tests/pytests/functional/modules/state/requisites/test_onfail.py||tests/pytests/functional/modules/state/requisites/test_onfail.py",
          "tests/pytests/functional/modules/state/requisites/test_onlyif.py||tests/pytests/functional/modules/state/requisites/test_onlyif.py",
          "tests/pytests/functional/modules/state/requisites/test_prereq.py||tests/pytests/functional/modules/state/requisites/test_prereq.py",
          "tests/pytests/functional/modules/state/requisites/test_require.py||tests/pytests/functional/modules/state/requisites/test_require.py",
          "tests/pytests/functional/modules/state/requisites/test_unless.py||tests/pytests/functional/modules/state/requisites/test_unless.py",
          "tests/pytests/functional/modules/state/requisites/test_use.py||tests/pytests/functional/modules/state/requisites/test_use.py",
          "tests/pytests/functional/modules/state/requisites/test_watch.py||tests/pytests/functional/modules/state/requisites/test_watch.py",
          "tests/pytests/functional/modules/state/test_jinja_filters.py||tests/pytests/functional/modules/state/test_jinja_filters.py",
          "tests/pytests/functional/modules/state/test_jinja_renderer.py||tests/pytests/functional/modules/state/test_jinja_renderer.py",
          "tests/pytests/functional/modules/state/test_mako_renderer.py||tests/pytests/functional/modules/state/test_mako_renderer.py",
          "tests/pytests/functional/modules/state/test_pyobjects_renderer.py||tests/pytests/functional/modules/state/test_pyobjects_renderer.py",
          "tests/pytests/functional/modules/state/test_state.py||tests/pytests/functional/modules/state/test_state.py",
          "tests/pytests/functional/modules/test_aliases.py||tests/pytests/functional/modules/test_aliases.py",
          "tests/pytests/functional/modules/test_ansiblegate.py||tests/pytests/functional/modules/test_ansiblegate.py",
          "tests/pytests/functional/modules/test_aptpkg.py||tests/pytests/functional/modules/test_aptpkg.py",
          "tests/pytests/functional/modules/test_archive.py||tests/pytests/functional/modules/test_archive.py",
          "tests/pytests/functional/modules/test_data.py||tests/pytests/functional/modules/test_data.py",
          "tests/pytests/functional/modules/test_defaults.py||tests/pytests/functional/modules/test_defaults.py",
          "tests/pytests/functional/modules/test_dockermod.py||tests/pytests/functional/modules/test_dockermod.py",
          "tests/pytests/functional/modules/test_etcd_mod.py||tests/pytests/functional/modules/test_etcd_mod.py",
          "tests/pytests/functional/modules/test_freezer.py||tests/pytests/functional/modules/test_freezer.py",
          "tests/pytests/functional/modules/test_gpg.py||tests/pytests/functional/modules/test_gpg.py",
          "tests/pytests/functional/modules/test_grains.py||tests/pytests/functional/modules/test_grains.py",
          "tests/pytests/functional/modules/test_http.py||tests/pytests/functional/modules/test_http.py",
          "tests/pytests/functional/modules/test_ipset.py||tests/pytests/functional/modules/test_ipset.py",
          "tests/pytests/functional/modules/test_mac_assistive.py||tests/pytests/functional/modules/test_mac_assistive.py",
          "tests/pytests/functional/modules/test_mac_brew_pkg.py||tests/pytests/functional/modules/test_mac_brew_pkg.py",
          "tests/pytests/functional/modules/test_mac_desktop.py||tests/pytests/functional/modules/test_mac_desktop.py",
          "tests/pytests/functional/modules/test_mac_group.py||tests/pytests/functional/modules/test_mac_group.py",
          "tests/pytests/functional/modules/test_mac_keychain.py||tests/pytests/functional/modules/test_mac_keychain.py",
          "tests/pytests/functional/modules/test_mac_pkgutil.py||tests/pytests/functional/modules/test_mac_pkgutil.py",
          "tests/pytests/functional/modules/test_mac_portspkg.py||tests/pytests/functional/modules/test_mac_portspkg.py",
          "tests/pytests/functional/modules/test_mac_power.py||tests/pytests/functional/modules/test_mac_power.py",
          "tests/pytests/functional/modules/test_mac_service.py||tests/pytests/functional/modules/test_mac_service.py",
          "tests/pytests/functional/modules/test_mac_shadow.py||tests/pytests/functional/modules/test_mac_shadow.py",
          "tests/pytests/functional/modules/test_mac_softwareupdate.py||tests/pytests/functional/modules/test_mac_softwareupdate.py",
          "tests/pytests/functional/modules/test_mac_system.py||tests/pytests/functional/modules/test_mac_system.py",
          "tests/pytests/functional/modules/test_mac_timezone.py||tests/pytests/functional/modules/test_mac_timezone.py",
          "tests/pytests/functional/modules/test_mac_user.py||tests/pytests/functional/modules/test_mac_user.py",
          "tests/pytests/functional/modules/test_mac_xattr.py||tests/pytests/functional/modules/test_mac_xattr.py",
          "tests/pytests/functional/modules/test_mysql.py||tests/pytests/functional/modules/test_mysql.py",
          "tests/pytests/functional/modules/test_network.py||tests/pytests/functional/modules/test_network.py",
          "tests/pytests/functional/modules/test_nilrt_ip.py||tests/pytests/functional/modules/test_nilrt_ip.py",
          "tests/pytests/functional/modules/test_opkg.py||tests/pytests/functional/modules/test_opkg.py",
          "tests/pytests/functional/modules/test_pip.py||tests/pytests/functional/modules/test_pip.py",
          "tests/pytests/functional/modules/test_pkg.py||tests/pytests/functional/modules/test_pkg.py",
          "tests/pytests/functional/modules/test_runit.py||tests/pytests/functional/modules/test_runit.py",
          "tests/pytests/functional/modules/test_saltcheck.py||tests/pytests/functional/modules/test_saltcheck.py",
          "tests/pytests/functional/modules/test_saltutil.py||tests/pytests/functional/modules/test_saltutil.py",
          "tests/pytests/functional/modules/test_sdb.py||tests/pytests/functional/modules/test_sdb.py",
          "tests/pytests/functional/modules/test_service.py||tests/pytests/functional/modules/test_service.py",
          "tests/pytests/functional/modules/test_swarm.py||tests/pytests/functional/modules/test_swarm.py",
          "tests/pytests/functional/modules/test_system.py||tests/pytests/functional/modules/test_system.py",
          "tests/pytests/functional/modules/test_test.py||tests/pytests/functional/modules/test_test.py",
          "tests/pytests/functional/modules/test_user.py||tests/pytests/functional/modules/test_user.py",
          "tests/pytests/functional/modules/test_vault.py||tests/pytests/functional/modules/test_vault.py",
          "tests/pytests/functional/modules/test_virtualenv_mod.py||tests/pytests/functional/modules/test_virtualenv_mod.py",
          "tests/pytests/functional/modules/test_win_certutil.py||tests/pytests/functional/modules/test_win_certutil.py",
          "tests/pytests/functional/modules/test_win_dsc.py||tests/pytests/functional/modules/test_win_dsc.py",
          "tests/pytests/functional/modules/test_win_shortcut.py||tests/pytests/functional/modules/test_win_shortcut.py",
          "tests/pytests/functional/modules/test_x509_v2.py||tests/pytests/functional/modules/test_x509_v2.py",
          "tests/pytests/functional/modules/test_yaml.py||tests/pytests/functional/modules/test_yaml.py",
          "tests/pytests/functional/modules/test_yumpkg.py||tests/pytests/functional/modules/test_yumpkg.py",
          "tests/pytests/functional/modules/win_file/test_check_perms.py||tests/pytests/functional/modules/win_file/test_check_perms.py",
          "tests/pytests/functional/modules/win_file/test_remove.py||tests/pytests/functional/modules/win_file/test_remove.py",
          "tests/pytests/functional/modules/win_file/test_stat.py||tests/pytests/functional/modules/win_file/test_stat.py",
          "tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py||tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py",
          "tests/pytests/functional/modules/win_lgpo/test_get_policy.py||tests/pytests/functional/modules/win_lgpo/test_get_policy.py",
          "tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py||tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py",
          "tests/pytests/functional/modules/win_lgpo/test_registry_policy.py||tests/pytests/functional/modules/win_lgpo/test_registry_policy.py",
          "tests/pytests/functional/netapi/conftest.py||tests/pytests/functional/netapi/conftest.py",
          "tests/pytests/functional/netapi/rest_cherrypy/conftest.py||tests/pytests/functional/netapi/rest_cherrypy/conftest.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_auth.py||tests/pytests/functional/netapi/rest_cherrypy/test_auth.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py||tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_cors.py||tests/pytests/functional/netapi/rest_cherrypy/test_cors.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py||tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py||tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py",
          "tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py||tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py",
          "tests/pytests/functional/netapi/rest_tornado/conftest.py||tests/pytests/functional/netapi/rest_tornado/conftest.py",
          "tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py||tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py||tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py",
          "tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py||tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_event_listener.py||tests/pytests/functional/netapi/rest_tornado/test_event_listener.py",
          "tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py||tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py",
          "tests/pytests/functional/netapi/rest_tornado/test_run_handler.py||tests/pytests/functional/netapi/rest_tornado/test_run_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_utils.py||tests/pytests/functional/netapi/rest_tornado/test_utils.py",
          "tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py||tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py",
          "tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py||tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py",
          "tests/pytests/functional/pillar/conftest.py||tests/pytests/functional/pillar/conftest.py",
          "tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py||tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py",
          "tests/pytests/functional/pillar/test_etcd_pillar.py||tests/pytests/functional/pillar/test_etcd_pillar.py",
          "tests/pytests/functional/pillar/test_git_pillar.py||tests/pytests/functional/pillar/test_git_pillar.py",
          "tests/pytests/functional/pillar/test_gpg.py||tests/pytests/functional/pillar/test_gpg.py",
          "tests/pytests/functional/pillar/test_top.py||tests/pytests/functional/pillar/test_top.py",
          "tests/pytests/functional/returners/test_etcd_return.py||tests/pytests/functional/returners/test_etcd_return.py",
          "tests/pytests/functional/runners/test_winrepo.py||tests/pytests/functional/runners/test_winrepo.py",
          "tests/pytests/functional/sdb/test_etcd_db.py||tests/pytests/functional/sdtest_etcd_db.py",
          "tests/pytests/functional/state/test_masterless_tops.py||tests/pytests/functional/state/test_masterless_tops.py",
          "tests/pytests/functional/states/cmd/conftest.py||tests/pytests/functional/states/cmd/conftest.py",
          "tests/pytests/functional/states/cmd/test_runas.py||tests/pytests/functional/states/cmd/test_runas.py",
          "tests/pytests/functional/states/conftest.py||tests/pytests/functional/states/conftest.py",
          "tests/pytests/functional/states/file/conftest.py||tests/pytests/functional/states/file/conftest.py",
          "tests/pytests/functional/states/file/test__check_directory_win.py||tests/pytests/functional/states/file/test__check_directory_win.py",
          "tests/pytests/functional/states/file/test_absent.py||tests/pytests/functional/states/file/test_absent.py",
          "tests/pytests/functional/states/file/test_accumulated.py||tests/pytests/functional/states/file/test_accumulated.py",
          "tests/pytests/functional/states/file/test_append.py||tests/pytests/functional/states/file/test_append.py",
          "tests/pytests/functional/states/file/test_blockreplace.py||tests/pytests/functional/states/file/test_blockreplace.py",
          "tests/pytests/functional/states/file/test_cached.py||tests/pytests/functional/states/file/test_cached.py",
          "tests/pytests/functional/states/file/test_comment.py||tests/pytests/functional/states/file/test_comment.py",
          "tests/pytests/functional/states/file/test_copy.py||tests/pytests/functional/states/file/test_copy.py",
          "tests/pytests/functional/states/file/test_directory.py||tests/pytests/functional/states/file/test_directory.py",
          "tests/pytests/functional/states/file/test_directory_win.py||tests/pytests/functional/states/file/test_directory_win.py",
          "tests/pytests/functional/states/file/test_keyvalue.py||tests/pytests/functional/states/file/test_keyvalue.py",
          "tests/pytests/functional/states/file/test_line.py||tests/pytests/functional/states/file/test_line.py",
          "tests/pytests/functional/states/file/test_managed.py||tests/pytests/functional/states/file/test_managed.py",
          "tests/pytests/functional/states/file/test_patch.py||tests/pytests/functional/states/file/test_patch.py",
          "tests/pytests/functional/states/file/test_prepend.py||tests/pytests/functional/states/file/test_prepend.py",
          "tests/pytests/functional/states/file/test_pruned.py||tests/pytests/functional/states/file/test_pruned.py",
          "tests/pytests/functional/states/file/test_recurse.py||tests/pytests/functional/states/file/test_recurse.py",
          "tests/pytests/functional/states/file/test_rename.py||tests/pytests/functional/states/file/test_rename.py",
          "tests/pytests/functional/states/file/test_replace.py||tests/pytests/functional/states/file/test_replace.py",
          "tests/pytests/functional/states/file/test_serialize.py||tests/pytests/functional/states/file/test_serialize.py",
          "tests/pytests/functional/states/file/test_symlink.py||tests/pytests/functional/states/file/test_symlink.py",
          "tests/pytests/functional/states/file/test_touch.py||tests/pytests/functional/states/file/test_touch.py",
          "tests/pytests/functional/states/file/test_uncomment.py||tests/pytests/functional/states/file/test_uncomment.py",
          "tests/pytests/functional/states/pkgrepo/test_centos.py||tests/pytests/functional/states/pkgrepo/test_centos.py",
          "tests/pytests/functional/states/pkgrepo/test_debian.py||tests/pytests/functional/states/pkgrepo/test_debian.py",
          "tests/pytests/functional/states/rabbitmq/conftest.py||tests/pytests/functional/states/rabbitmq/conftest.py",
          "tests/pytests/functional/states/rabbitmq/test_cluster.py||tests/pytests/functional/states/rabbitmq/test_cluster.py",
          "tests/pytests/functional/states/rabbitmq/test_plugin.py||tests/pytests/functional/states/rabbitmq/test_plugin.py",
          "tests/pytests/functional/states/rabbitmq/test_policy.py||tests/pytests/functional/states/rabbitmq/test_policy.py",
          "tests/pytests/functional/states/rabbitmq/test_upstream.py||tests/pytests/functional/states/rabbitmq/test_upstream.py",
          "tests/pytests/functional/states/rabbitmq/test_user.py||tests/pytests/functional/states/rabbitmq/test_user.py",
          "tests/pytests/functional/states/rabbitmq/test_vhost.py||tests/pytests/functional/states/rabbitmq/test_vhost.py",
          "tests/pytests/functional/states/test_archive.py||tests/pytests/functional/states/test_archive.py",
          "tests/pytests/functional/states/test_chocolatey_1_2_1.py||tests/pytests/functional/states/test_chocolatey_1_2_1.py",
          "tests/pytests/functional/states/test_chocolatey_latest.py||tests/pytests/functional/states/test_chocolatey_latest.py",
          "tests/pytests/functional/states/test_docker_container.py||tests/pytests/functional/states/test_docker_container.py",
          "tests/pytests/functional/states/test_docker_network.py||tests/pytests/functional/states/test_docker_network.py",
          "tests/pytests/functional/states/test_etcd_mod.py||tests/pytests/functional/states/test_etcd_mod.py",
          "tests/pytests/functional/states/test_file.py||tests/pytests/functional/states/test_file.py",
          "tests/pytests/functional/states/test_gpg.py||tests/pytests/functional/states/test_gpg.py",
          "tests/pytests/functional/states/test_ipset.py||tests/pytests/functional/states/test_ipset.py",
          "tests/pytests/functional/states/test_module.py||tests/pytests/functional/states/test_module.py",
          "tests/pytests/functional/states/test_mysql.py||tests/pytests/functional/states/test_mysql.py",
          "tests/pytests/functional/states/test_npm.py||tests/pytests/functional/states/test_npm.py",
          "tests/pytests/functional/states/test_pip_state.py||tests/pytests/functional/states/test_pip_state.py",
          "tests/pytests/functional/states/test_pkg.py||tests/pytests/functional/states/test_pkg.py",
          "tests/pytests/functional/states/test_pkgrepo.py||tests/pytests/functional/states/test_pkgrepo.py",
          "tests/pytests/functional/states/test_reg.py||tests/pytests/functional/states/test_reg.py",
          "tests/pytests/functional/states/test_service.py||tests/pytests/functional/states/test_service.py",
          "tests/pytests/functional/states/test_ssh_auth.py||tests/pytests/functional/states/test_ssh_auth.py",
          "tests/pytests/functional/states/test_svn.py||tests/pytests/functional/states/test_svn.py",
          "tests/pytests/functional/states/test_user.py||tests/pytests/functional/states/test_user.py",
          "tests/pytests/functional/states/test_virtualenv_mod.py||tests/pytests/functional/states/test_virtualenv_mod.py",
          "tests/pytests/functional/states/test_win_certutil.py||tests/pytests/functional/states/test_win_certutil.py",
          "tests/pytests/functional/states/test_win_shortcut.py||tests/pytests/functional/states/test_win_shortcut.py",
          "tests/pytests/functional/states/test_x509_v2.py||tests/pytests/functional/states/test_x509_v2.py",
          "tests/pytests/functional/states/test_zookeeper.py||tests/pytests/functional/states/test_zookeeper.py",
          "tests/pytests/functional/states/win_lgpo/test_admx_policy.py||tests/pytests/functional/states/win_lgpo/test_admx_policy.py",
          "tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py||tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py",
          "tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py||tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py",
          "tests/pytests/functional/states/win_lgpo/test_rights_assignment.py||tests/pytests/functional/states/win_lgpo/test_rights_assignment.py",
          "tests/pytests/functional/test_config.py||tests/pytests/functional/test_config.py",
          "tests/pytests/functional/test_payload.py||tests/pytests/functional/test_payload.py",
          "tests/pytests/functional/test_version.py||tests/pytests/functional/test_version.py",
          "tests/pytests/functional/transport/conftest.py||tests/pytests/functional/transport/conftest.py",
          "tests/pytests/functional/transport/ipc/test_client.py||tests/pytests/functional/transport/ipc/test_client.py",
          "tests/pytests/functional/transport/ipc/test_pub_server_channel.py||tests/pytests/functional/transport/ipc/test_pub_server_channel.py",
          "tests/pytests/functional/transport/ipc/test_subscriber.py||tests/pytests/functional/transport/ipc/test_subscriber.py",
          "tests/pytests/functional/transport/server/conftest.py||tests/pytests/functional/transport/server/conftest.py",
          "tests/pytests/functional/transport/server/test_req_channel.py||tests/pytests/functional/transport/server/test_req_channel.py",
          "tests/pytests/functional/transport/tcp/test_load_balanced_server.py||tests/pytests/functional/transport/tcp/test_load_balanced_server.py",
          "tests/pytests/functional/transport/tcp/test_message_client.py||tests/pytests/functional/transport/tcp/test_message_client.py",
          "tests/pytests/functional/transport/tcp/test_pub_server.py||tests/pytests/functional/transport/tcp/test_pub_server.py",
          "tests/pytests/functional/transport/zeromq/conftest.py||tests/pytests/functional/transport/zeromq/conftest.py",
          "tests/pytests/functional/transport/zeromq/test_pub_server_channel.py||tests/pytests/functional/transport/zeromq/test_pub_server_channel.py",
          "tests/pytests/functional/transport/zeromq/test_request_client.py||tests/pytests/functional/transport/zeromq/test_request_client.py",
          "tests/pytests/functional/utils/functools/test_namespaced_function.py||tests/pytests/functional/utils/functools/test_namespaced_function.py",
          "tests/pytests/functional/utils/test_cache.py||tests/pytests/functional/utils/test_cache.py",
          "tests/pytests/functional/utils/test_etcd_util.py||tests/pytests/functional/utils/test_etcd_util.py",
          "tests/pytests/functional/utils/test_extension_deprecation.py||tests/pytests/functional/utils/test_extension_deprecation.py",
          "tests/pytests/functional/utils/test_gitfs.py||tests/pytests/functional/utils/test_gitfs.py",
          "tests/pytests/functional/utils/test_http.py||tests/pytests/functional/utils/test_http.py",
          "tests/pytests/functional/utils/test_jinja.py||tests/pytests/functional/utils/test_jinja.py",
          "tests/pytests/functional/utils/test_job.py||tests/pytests/functional/utils/test_job.py",
          "tests/pytests/functional/utils/test_pillar.py||tests/pytests/functional/utils/test_pillar.py",
          "tests/pytests/functional/utils/test_process.py||tests/pytests/functional/utils/test_process.py",
          "tests/pytests/functional/utils/test_vault.py||tests/pytests/functional/utils/test_vault.py",
          "tests/pytests/functional/utils/test_winrepo.py||tests/pytests/functional/utils/test_winrepo.py",
          "tests/pytests/functional/utils/user/test__getgrall.py||tests/pytests/functional/utils/user/test__getgrall.py",
          "tests/pytests/functional/utils/user/test_chugid_and_umask.py||tests/pytests/functional/utils/user/test_chugid_and_umask.py",
          "tests/pytests/functional/utils/user/test_get_group_dict.py||tests/pytests/functional/utils/user/test_get_group_dict.py",
          "tests/pytests/functional/utils/user/test_get_group_list.py||tests/pytests/functional/utils/user/test_get_group_list.py",
          "tests/pytests/functional/utils/win_dacl/test_file.py||tests/pytests/functional/utils/win_dacl/test_file.py",
          "tests/pytests/functional/utils/win_dacl/test_get_name.py||tests/pytests/functional/utils/win_dacl/test_get_name.py",
          "tests/pytests/functional/utils/win_dacl/test_get_sid.py||tests/pytests/functional/utils/win_dacl/test_get_sid.py",
          "tests/pytests/functional/utils/win_dacl/test_get_sid_string.py||tests/pytests/functional/utils/win_dacl/test_get_sid_string.py",
          "tests/pytests/functional/utils/win_dacl/test_reg.py||tests/pytests/functional/utils/win_dacl/test_reg.py",
          "tests/pytests/functional/utils/yamllint/test_yamllint.py||tests/pytests/functional/utils/yamllint/test_yamllint.py",
          "tests/pytests/integration/_logging/test_jid_logging.py||tests/pytests/integration/_logging/test_jid_logging.py",
          "tests/pytests/integration/_logging/test_logging.py||tests/pytests/integration/_logging/test_logging.py",
          "tests/pytests/integration/_logging/test_multiple_processes_logging.py||tests/pytests/integration/_logging/test_multiple_processes_logging.py",
          "tests/pytests/integration/cli/conftest.py||tests/pytests/integration/cli/conftest.py",
          "tests/pytests/integration/cli/test_batch.py||tests/pytests/integration/cli/test_batch.py",
          "tests/pytests/integration/cli/test_matcher.py||tests/pytests/integration/cli/test_matcher.py",
          "tests/pytests/integration/cli/test_salt.py||tests/pytests/integration/cli/test_salt.py",
          "tests/pytests/integration/cli/test_salt_auth.py||tests/pytests/integration/cli/test_salt_auth.py",
          "tests/pytests/integration/cli/test_salt_call.py||tests/pytests/integration/cli/test_salt_call.py",
          "tests/pytests/integration/cli/test_salt_cp.py||tests/pytests/integration/cli/test_salt_cp.py",
          "tests/pytests/integration/cli/test_salt_deltaproxy.py||tests/pytests/integration/cli/test_salt_deltaproxy.py",
          "tests/pytests/integration/cli/test_salt_key.py||tests/pytests/integration/cli/test_salt_key.py",
          "tests/pytests/integration/cli/test_salt_master.py||tests/pytests/integration/cli/test_salt_master.py",
          "tests/pytests/integration/cli/test_salt_minion.py||tests/pytests/integration/cli/test_salt_minion.py",
          "tests/pytests/integration/cli/test_salt_proxy.py||tests/pytests/integration/cli/test_salt_proxy.py",
          "tests/pytests/integration/cli/test_salt_run.py||tests/pytests/integration/cli/test_salt_run.py",
          "tests/pytests/integration/cli/test_salt_syndic.py||tests/pytests/integration/cli/test_salt_syndic.py",
          "tests/pytests/integration/cli/test_syndic_eauth.py||tests/pytests/integration/cli/test_syndic_eauth.py",
          "tests/pytests/integration/client/conftest.py||tests/pytests/integration/client/conftest.py",
          "tests/pytests/integration/client/test_runner.py||tests/pytests/integration/client/test_runner.py",
          "tests/pytests/integration/cluster/conftest.py||tests/pytests/integration/cluster/conftest.py",
          "tests/pytests/integration/cluster/test_basic_cluster.py||tests/pytests/integration/cluster/test_basic_cluster.py",
          "tests/pytests/integration/conftest.py||tests/pytests/integration/conftest.py",
          "tests/pytests/integration/daemons/test_masterapi.py||tests/pytests/integration/daemons/test_masterapi.py",
          "tests/pytests/integration/daemons/test_memory_leak.py||tests/pytests/integration/daemons/test_memory_leak.py",
          "tests/pytests/integration/grains/test_grains.py||tests/pytests/integration/grains/test_grains.py",
          "tests/pytests/integration/master/test_clear_funcs.py||tests/pytests/integration/master/test_clear_funcs.py",
          "tests/pytests/integration/master/test_payload.py||tests/pytests/integration/master/test_payload.py",
          "tests/pytests/integration/master/test_peer.py||tests/pytests/integration/master/test_peer.py",
          "tests/pytests/integration/minion/test_job_return.py||tests/pytests/integration/minion/test_job_return.py",
          "tests/pytests/integration/minion/test_reauth.py||tests/pytests/integration/minion/test_reauth.py",
          "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py",
          "tests/pytests/integration/modules/grains/conftest.py||tests/pytests/integration/modules/grains/conftest.py",
          "tests/pytests/integration/modules/grains/test_append.py||tests/pytests/integration/modules/grains/test_append.py",
          "tests/pytests/integration/modules/grains/test_module.py||tests/pytests/integration/modules/grains/test_module.py",
          "tests/pytests/integration/modules/saltutil/test_grains.py||tests/pytests/integration/modules/saltutil/test_grains.py",
          "tests/pytests/integration/modules/saltutil/test_modules.py||tests/pytests/integration/modules/saltutil/test_modules.py",
          "tests/pytests/integration/modules/saltutil/test_pillar.py||tests/pytests/integration/modules/saltutil/test_pillar.py",
          "tests/pytests/integration/modules/saltutil/test_wheel.py||tests/pytests/integration/modules/saltutil/test_wheel.py",
          "tests/pytests/integration/modules/state/test_state.py||tests/pytests/integration/modules/state/test_state.py",
          "tests/pytests/integration/modules/state/test_state_pillar_errors.py||tests/pytests/integration/modules/state/test_state_pillar_errors.py",
          "tests/pytests/integration/modules/state/test_state_state_events.py||tests/pytests/integration/modules/state/test_state_state_events.py",
          "tests/pytests/integration/modules/state/test_state_test.py||tests/pytests/integration/modules/state/test_state_test.py",
          "tests/pytests/integration/modules/test_beacons.py||tests/pytests/integration/modules/test_beacons.py",
          "tests/pytests/integration/modules/test_cmdmod.py||tests/pytests/integration/modules/test_cmdmod.py",
          "tests/pytests/integration/modules/test_event.py||tests/pytests/integration/modules/test_event.py",
          "tests/pytests/integration/modules/test_file.py||tests/pytests/integration/modules/test_file.py",
          "tests/pytests/integration/modules/test_idem.py||tests/pytests/integration/modules/test_idem.py",
          "tests/pytests/integration/modules/test_jinja.py||tests/pytests/integration/modules/test_jinja.py",
          "tests/pytests/integration/modules/test_mac_sysctl.py||tests/pytests/integration/modules/test_mac_sysctl.py",
          "tests/pytests/integration/modules/test_pillar.py||tests/pytests/integration/modules/test_pillar.py",
          "tests/pytests/integration/modules/test_pip.py||tests/pytests/integration/modules/test_pip.py",
          "tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py||tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py",
          "tests/pytests/integration/modules/test_state.py||tests/pytests/integration/modules/test_state.py",
          "tests/pytests/integration/modules/test_test.py||tests/pytests/integration/modules/test_test.py",
          "tests/pytests/integration/modules/test_useradd.py||tests/pytests/integration/modules/test_useradd.py",
          "tests/pytests/integration/modules/test_vault.py||tests/pytests/integration/modules/test_vault.py",
          "tests/pytests/integration/modules/test_virt.py||tests/pytests/integration/modules/test_virt.py",
          "tests/pytests/integration/modules/test_x509_v2.py||tests/pytests/integration/modules/test_x509_v2.py",
          "tests/pytests/integration/netapi/conftest.py||tests/pytests/integration/netapi/conftest.py",
          "tests/pytests/integration/netapi/rest_cherrypy/conftest.py||tests/pytests/integration/netapi/rest_cherrypy/conftest.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py||tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_auth.py||tests/pytests/integration/netapi/rest_cherrypy/test_auth.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py||tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_run.py||tests/pytests/integration/netapi/rest_cherrypy/test_run.py",
          "tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py||tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py",
          "tests/pytests/integration/netapi/rest_tornado/conftest.py||tests/pytests/integration/netapi/rest_tornado/conftest.py",
          "tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_root_handler.py||tests/pytests/integration/netapi/rest_tornado/test_root_handler.py",
          "tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py",
          "tests/pytests/integration/netapi/test_client.py||tests/pytests/integration/netapi/test_client.py",
          "tests/pytests/integration/netapi/test_ssh_client.py||tests/pytests/integration/netapi/test_ssh_client.py",
          "tests/pytests/integration/pillar/cache/conftest.py||tests/pytests/integration/pillar/cache/conftest.py",
          "tests/pytests/integration/pillar/cache/test_pillar_cache.py||tests/pytests/integration/pillar/cache/test_pillar_cache.py",
          "tests/pytests/integration/pillar/test_pillar_include.py||tests/pytests/integration/pillar/test_pillar_include.py",
          "tests/pytests/integration/proxy/conftest.py||tests/pytests/integration/proxy/conftest.py",
          "tests/pytests/integration/proxy/test_deltaproxy.py||tests/pytests/integration/proxy/test_deltaproxy.py",
          "tests/pytests/integration/proxy/test_shell.py||tests/pytests/integration/proxy/test_shell.py",
          "tests/pytests/integration/proxy/test_simple.py||tests/pytests/integration/proxy/test_simple.py",
          "tests/pytests/integration/reactor/test_reactor.py||tests/pytests/integration/reactor/test_reactor.py",
          "tests/pytests/integration/renderers/test_jinja.py||tests/pytests/integration/renderers/test_jinja.py",
          "tests/pytests/integration/renderers/test_toml.py||tests/pytests/integration/renderers/test_toml.py",
          "tests/pytests/integration/returners/test_noop_return.py||tests/pytests/integration/returners/test_noop_return.py",
          "tests/pytests/integration/runners/state/orchestrate/test_events.py||tests/pytests/integration/runners/state/orchestrate/test_events.py",
          "tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py||tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py",
          "tests/pytests/integration/runners/test_cache.py||tests/pytests/integration/runners/test_cache.py",
          "tests/pytests/integration/runners/test_jobs.py||tests/pytests/integration/runners/test_jobs.py",
          "tests/pytests/integration/runners/test_manage.py||tests/pytests/integration/runners/test_manage.py",
          "tests/pytests/integration/runners/test_match.py||tests/pytests/integration/runners/test_match.py",
          "tests/pytests/integration/runners/test_nacl.py||tests/pytests/integration/runners/test_nacl.py",
          "tests/pytests/integration/runners/test_saltutil.py||tests/pytests/integration/runners/test_saltutil.py",
          "tests/pytests/integration/runners/test_vault.py||tests/pytests/integration/runners/test_vault.py",
          "tests/pytests/integration/sdb/conftest.py||tests/pytests/integration/sdconftest.py",
          "tests/pytests/integration/sdb/test_etcd_db.py||tests/pytests/integration/sdtest_etcd_db.py",
          "tests/pytests/integration/sdb/test_vault.py||tests/pytests/integration/sdtest_vault.py",
          "tests/pytests/integration/ssh/state/conftest.py||tests/pytests/integration/ssh/state/conftest.py",
          "tests/pytests/integration/ssh/state/test_pillar_override.py||tests/pytests/integration/ssh/state/test_pillar_override.py",
          "tests/pytests/integration/ssh/state/test_pillar_override_template.py||tests/pytests/integration/ssh/state/test_pillar_override_template.py",
          "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py||tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py",
          "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py||tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py",
          "tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py||tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py",
          "tests/pytests/integration/ssh/state/test_retcode_render_exception.py||tests/pytests/integration/ssh/state/test_retcode_render_exception.py",
          "tests/pytests/integration/ssh/state/test_retcode_run_fail.py||tests/pytests/integration/ssh/state/test_retcode_run_fail.py",
          "tests/pytests/integration/ssh/state/test_state.py||tests/pytests/integration/ssh/state/test_state.py",
          "tests/pytests/integration/ssh/test_deploy.py||tests/pytests/integration/ssh/test_deploy.py",
          "tests/pytests/integration/ssh/test_grains.py||tests/pytests/integration/ssh/test_grains.py",
          "tests/pytests/integration/ssh/test_jinja_filters.py||tests/pytests/integration/ssh/test_jinja_filters.py",
          "tests/pytests/integration/ssh/test_jinja_mods.py||tests/pytests/integration/ssh/test_jinja_mods.py",
          "tests/pytests/integration/ssh/test_log.py||tests/pytests/integration/ssh/test_log.py",
          "tests/pytests/integration/ssh/test_master.py||tests/pytests/integration/ssh/test_master.py",
          "tests/pytests/integration/ssh/test_mine.py||tests/pytests/integration/ssh/test_mine.py",
          "tests/pytests/integration/ssh/test_pillar.py||tests/pytests/integration/ssh/test_pillar.py",
          "tests/pytests/integration/ssh/test_pillar_compilation.py||tests/pytests/integration/ssh/test_pillar_compilation.py",
          "tests/pytests/integration/ssh/test_pre_flight.py||tests/pytests/integration/ssh/test_pre_flight.py",
          "tests/pytests/integration/ssh/test_publish.py||tests/pytests/integration/ssh/test_publish.py",
          "tests/pytests/integration/ssh/test_py_versions.py||tests/pytests/integration/ssh/test_py_versions.py",
          "tests/pytests/integration/ssh/test_raw.py||tests/pytests/integration/ssh/test_raw.py",
          "tests/pytests/integration/ssh/test_saltcheck.py||tests/pytests/integration/ssh/test_saltcheck.py",
          "tests/pytests/integration/ssh/test_ssh_setup.py||tests/pytests/integration/ssh/test_ssh_setup.py",
          "tests/pytests/integration/ssh/test_terraform.py||tests/pytests/integration/ssh/test_terraform.py",
          "tests/pytests/integration/states/test_ansiblegate.py||tests/pytests/integration/states/test_ansiblegate.py",
          "tests/pytests/integration/states/test_beacon.py||tests/pytests/integration/states/test_beacon.py",
          "tests/pytests/integration/states/test_cron.py||tests/pytests/integration/states/test_cron.py",
          "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py",
          "tests/pytests/integration/states/test_idem.py||tests/pytests/integration/states/test_idem.py",
          "tests/pytests/integration/states/test_include.py||tests/pytests/integration/states/test_include.py",
          "tests/pytests/integration/states/test_ini_manage.py||tests/pytests/integration/states/test_ini_manage.py",
          "tests/pytests/integration/states/test_state_test.py||tests/pytests/integration/states/test_state_test.py",
          "tests/pytests/integration/states/test_x509_v2.py||tests/pytests/integration/states/test_x509_v2.py",
          "tests/pytests/integration/utils/test_templates.py||tests/pytests/integration/utils/test_templates.py",
          "tests/pytests/integration/wheel/conftest.py||tests/pytests/integration/wheel/conftest.py",
          "tests/pytests/integration/wheel/test_client.py||tests/pytests/integration/wheel/test_client.py",
          "tests/pytests/integration/wheel/test_key.py||tests/pytests/integration/wheel/test_key.py",
          "tests/pytests/integration/wheel/test_pillar_roots.py||tests/pytests/integration/wheel/test_pillar_roots.py",
          "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py",
          "tests/pytests/pkg/downgrade/test_salt_downgrade.py||tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py",
          "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py",
          "tests/pytests/pkg/integration/test_clean_zmq_teardown.py||tests/pytests/pkg/integration/test_clean_zmq_teardown.py",
          "tests/pytests/pkg/integration/test_enabled_disabled.py||tests/pytests/pkg/integration/test_enabled_disabled.py",
          "tests/pytests/pkg/integration/test_help.py||tests/pytests/pkg/integration/test_help.py",
          "tests/pytests/pkg/integration/test_logrotate_config.py||tests/pytests/pkg/integration/test_logrotate_config.py",
          "tests/pytests/pkg/integration/test_multi_minion.py||tests/pytests/pkg/integration/test_multi_minion.py",
          "tests/pytests/pkg/integration/test_pip.py||tests/pytests/pkg/integration/test_pip.py",
          "tests/pytests/pkg/integration/test_pip_upgrade.py||tests/pytests/pkg/integration/test_pip_upgrade.py",
          "tests/pytests/pkg/integration/test_pkg.py||tests/pytests/pkg/integration/test_pkg.py",
          "tests/pytests/pkg/integration/test_python.py||tests/pytests/pkg/integration/test_python.py",
          "tests/pytests/pkg/integration/test_salt_api.py||tests/pytests/pkg/integration/test_salt_api.py",
          "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py",
          "tests/pytests/pkg/integration/test_salt_exec.py||tests/pytests/pkg/integration/test_salt_exec.py",
          "tests/pytests/pkg/integration/test_salt_grains.py||tests/pytests/pkg/integration/test_salt_grains.py",
          "tests/pytests/pkg/integration/test_salt_key.py||tests/pytests/pkg/integration/test_salt_key.py",
          "tests/pytests/pkg/integration/test_salt_minion.py||tests/pytests/pkg/integration/test_salt_minion.py",
          "tests/pytests/pkg/integration/test_salt_output.py||tests/pytests/pkg/integration/test_salt_output.py",
          "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py",
          "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py",
          "tests/pytests/pkg/integration/test_salt_ufw.py||tests/pytests/pkg/integration/test_salt_ufw.py",
          "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py",
          "tests/pytests/pkg/integration/test_ssm.py||tests/pytests/pkg/integration/test_ssm.py",
          "tests/pytests/pkg/integration/test_systemd_config.py||tests/pytests/pkg/integration/test_systemd_config.py",
          "tests/pytests/pkg/integration/test_version.py||tests/pytests/pkg/integration/test_version.py",
          "tests/pytests/pkg/upgrade/test_salt_upgrade.py||tests/pytests/pkg/upgrade/test_salt_upgrade.py",
          "tests/pytests/scenarios/blackout/conftest.py||tests/pytests/scenarios/blackout/conftest.py",
          "tests/pytests/scenarios/blackout/test_minion_blackout.py||tests/pytests/scenarios/blackout/test_minion_blackout.py",
          "tests/pytests/scenarios/cluster/conftest.py||tests/pytests/scenarios/cluster/conftest.py",
          "tests/pytests/scenarios/cluster/test_cluster.py||tests/pytests/scenarios/cluster/test_cluster.py",
          "tests/pytests/scenarios/compat/conftest.py||tests/pytests/scenarios/compat/conftest.py",
          "tests/pytests/scenarios/compat/test_with_versions.py||tests/pytests/scenarios/compat/test_with_versions.py",
          "tests/pytests/scenarios/daemons/conftest.py||tests/pytests/scenarios/daemons/conftest.py",
          "tests/pytests/scenarios/daemons/test_salt_as_daemons.py||tests/pytests/scenarios/daemons/test_salt_as_daemons.py",
          "tests/pytests/scenarios/failover/multimaster/conftest.py||tests/pytests/scenarios/failover/multimaster/conftest.py",
          "tests/pytests/scenarios/failover/multimaster/test_failover_master.py||tests/pytests/scenarios/failover/multimaster/test_failover_master.py",
          "tests/pytests/scenarios/multimaster/beacons/test_inotify.py||tests/pytests/scenarios/multimaster/beacons/test_inotify.py",
          "tests/pytests/scenarios/multimaster/conftest.py||tests/pytests/scenarios/multimaster/conftest.py",
          "tests/pytests/scenarios/multimaster/modules/test_test.py||tests/pytests/scenarios/multimaster/modules/test_test.py",
          "tests/pytests/scenarios/multimaster/test_multimaster.py||tests/pytests/scenarios/multimaster/test_multimaster.py",
          "tests/pytests/scenarios/multimaster/test_offline_master.py||tests/pytests/scenarios/multimaster/test_offline_master.py",
          "tests/pytests/scenarios/performance/conftest.py||tests/pytests/scenarios/performance/conftest.py",
          "tests/pytests/scenarios/performance/test_performance.py||tests/pytests/scenarios/performance/test_performance.py",
          "tests/pytests/scenarios/reauth/conftest.py||tests/pytests/scenarios/reauth/conftest.py",
          "tests/pytests/scenarios/reauth/test_reauth.py||tests/pytests/scenarios/reauth/test_reauth.py",
          "tests/pytests/scenarios/setup/conftest.py||tests/pytests/scenarios/setup/conftest.py",
          "tests/pytests/scenarios/setup/test_install.py||tests/pytests/scenarios/setup/test_install.py",
          "tests/pytests/scenarios/setup/test_man.py||tests/pytests/scenarios/setup/test_man.py",
          "tests/pytests/scenarios/swarm/conftest.py||tests/pytests/scenarios/swarm/conftest.py",
          "tests/pytests/scenarios/swarm/test_minion_swarm.py||tests/pytests/scenarios/swarm/test_minion_swarm.py",
          "tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py||tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py",
          "tests/pytests/unit/auth/test_auth.py||tests/pytests/unit/auth/test_auth.py",
          "tests/pytests/unit/auth/test_ldap.py||tests/pytests/unit/auth/test_ldap.py",
          "tests/pytests/unit/auth/test_pam.py||tests/pytests/unit/auth/test_pam.py",
          "tests/pytests/unit/auth/test_rest.py||tests/pytests/unit/auth/test_rest.py",
          "tests/pytests/unit/beacons/test_adb.py||tests/pytests/unit/beacons/test_adb.py",
          "tests/pytests/unit/beacons/test_avahi_announce.py||tests/pytests/unit/beacons/test_avahi_announce.py",
          "tests/pytests/unit/beacons/test_bonjour_announce.py||tests/pytests/unit/beacons/test_bonjour_announce.py",
          "tests/pytests/unit/beacons/test_btmp.py||tests/pytests/unit/beacons/test_btmp.py",
          "tests/pytests/unit/beacons/test_cert_info.py||tests/pytests/unit/beacons/test_cert_info.py",
          "tests/pytests/unit/beacons/test_diskusage.py||tests/pytests/unit/beacons/test_diskusage.py",
          "tests/pytests/unit/beacons/test_glxinfo.py||tests/pytests/unit/beacons/test_glxinfo.py",
          "tests/pytests/unit/beacons/test_haproxy.py||tests/pytests/unit/beacons/test_haproxy.py",
          "tests/pytests/unit/beacons/test_inotify.py||tests/pytests/unit/beacons/test_inotify.py",
          "tests/pytests/unit/beacons/test_journald.py||tests/pytests/unit/beacons/test_journald.py",
          "tests/pytests/unit/beacons/test_load.py||tests/pytests/unit/beacons/test_load.py",
          "tests/pytests/unit/beacons/test_log_beacon.py||tests/pytests/unit/beacons/test_log_beacon.py",
          "tests/pytests/unit/beacons/test_memusage.py||tests/pytests/unit/beacons/test_memusage.py",
          "tests/pytests/unit/beacons/test_network_info.py||tests/pytests/unit/beacons/test_network_info.py",
          "tests/pytests/unit/beacons/test_network_settings.py||tests/pytests/unit/beacons/test_network_settings.py",
          "tests/pytests/unit/beacons/test_ps.py||tests/pytests/unit/beacons/test_ps.py",
          "tests/pytests/unit/beacons/test_salt_monitor.py||tests/pytests/unit/beacons/test_salt_monitor.py",
          "tests/pytests/unit/beacons/test_salt_proxy.py||tests/pytests/unit/beacons/test_salt_proxy.py",
          "tests/pytests/unit/beacons/test_sensehat.py||tests/pytests/unit/beacons/test_sensehat.py",
          "tests/pytests/unit/beacons/test_service.py||tests/pytests/unit/beacons/test_service.py",
          "tests/pytests/unit/beacons/test_smartos_imgadm.py||tests/pytests/unit/beacons/test_smartos_imgadm.py",
          "tests/pytests/unit/beacons/test_smartos_vmadm.py||tests/pytests/unit/beacons/test_smartos_vmadm.py",
          "tests/pytests/unit/beacons/test_status.py||tests/pytests/unit/beacons/test_status.py",
          "tests/pytests/unit/beacons/test_swapusage.py||tests/pytests/unit/beacons/test_swapusage.py",
          "tests/pytests/unit/beacons/test_telegram_bot_msg.py||tests/pytests/unit/beacons/test_telegram_bot_msg.py",
          "tests/pytests/unit/beacons/test_twilio_txt_msg.py||tests/pytests/unit/beacons/test_twilio_txt_msg.py",
          "tests/pytests/unit/beacons/test_watchdog.py||tests/pytests/unit/beacons/test_watchdog.py",
          "tests/pytests/unit/beacons/test_wtmp.py||tests/pytests/unit/beacons/test_wtmp.py",
          "tests/pytests/unit/cache/test_cache.py||tests/pytests/unit/cache/test_cache.py",
          "tests/pytests/unit/cache/test_localfs.py||tests/pytests/unit/cache/test_localfs.py",
          "tests/pytests/unit/cache/test_memcache.py||tests/pytests/unit/cache/test_memcache.py",
          "tests/pytests/unit/cache/test_mysql_cache.py||tests/pytests/unit/cache/test_mysql_cache.py",
          "tests/pytests/unit/channel/test_request_channel.py||tests/pytests/unit/channel/test_request_channel.py",
          "tests/pytests/unit/cli/test_batch.py||tests/pytests/unit/cli/test_batch.py",
          "tests/pytests/unit/cli/test_daemons.py||tests/pytests/unit/cli/test_daemons.py",
          "tests/pytests/unit/cli/test_ssh.py||tests/pytests/unit/cli/test_ssh.py",
          "tests/pytests/unit/client/ssh/test_password.py||tests/pytests/unit/client/ssh/test_password.py",
          "tests/pytests/unit/client/ssh/test_return_events.py||tests/pytests/unit/client/ssh/test_return_events.py",
          "tests/pytests/unit/client/ssh/test_roster_defaults.py||tests/pytests/unit/client/ssh/test_roster_defaults.py",
          "tests/pytests/unit/client/ssh/test_shell.py||tests/pytests/unit/client/ssh/test_shell.py",
          "tests/pytests/unit/client/ssh/test_single.py||tests/pytests/unit/client/ssh/test_single.py",
          "tests/pytests/unit/client/ssh/test_ssh.py||tests/pytests/unit/client/ssh/test_ssh.py",
          "tests/pytests/unit/client/ssh/test_ssh_classes.py||tests/pytests/unit/client/ssh/test_ssh_classes.py",
          "tests/pytests/unit/client/ssh/wrapper/test_state.py||tests/pytests/unit/client/ssh/wrapper/test_state.py",
          "tests/pytests/unit/client/test_init.py||tests/pytests/unit/client/test_init.py",
          "tests/pytests/unit/client/test_netapi.py||tests/pytests/unit/client/test_netapi.py",
          "tests/pytests/unit/cloud/clouds/test_digitalocean.py||tests/pytests/unit/cloud/clouds/test_digitalocean.py",
          "tests/pytests/unit/cloud/clouds/test_dimensiondata.py||tests/pytests/unit/cloud/clouds/test_dimensiondata.py",
          "tests/pytests/unit/cloud/clouds/test_ec2.py||tests/pytests/unit/cloud/clouds/test_ec2.py",
          "tests/pytests/unit/cloud/clouds/test_gce.py||tests/pytests/unit/cloud/clouds/test_gce.py",
          "tests/pytests/unit/cloud/clouds/test_hetzner.py||tests/pytests/unit/cloud/clouds/test_hetzner.py",
          "tests/pytests/unit/cloud/clouds/test_joyent.py||tests/pytests/unit/cloud/clouds/test_joyent.py",
          "tests/pytests/unit/cloud/clouds/test_linode.py||tests/pytests/unit/cloud/clouds/test_linode.py",
          "tests/pytests/unit/cloud/clouds/test_opennebula.py||tests/pytests/unit/cloud/clouds/test_opennebula.py",
          "tests/pytests/unit/cloud/clouds/test_openstack.py||tests/pytests/unit/cloud/clouds/test_openstack.py",
          "tests/pytests/unit/cloud/clouds/test_proxmox.py||tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "tests/pytests/unit/cloud/clouds/test_qingcloud.py||tests/pytests/unit/cloud/clouds/test_qingcloud.py",
          "tests/pytests/unit/cloud/clouds/test_saltify.py||tests/pytests/unit/cloud/clouds/test_saltify.py",
          "tests/pytests/unit/cloud/clouds/test_scaleway.py||tests/pytests/unit/cloud/clouds/test_scaleway.py",
          "tests/pytests/unit/cloud/clouds/test_vultrpy.py||tests/pytests/unit/cloud/clouds/test_vultrpy.py",
          "tests/pytests/unit/cloud/clouds/test_xen.py||tests/pytests/unit/cloud/clouds/test_xen.py",
          "tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py||tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py",
          "tests/pytests/unit/cloud/clouds/vmware/test_vmware.py||tests/pytests/unit/cloud/clouds/vmware/test_vmware.py",
          "tests/pytests/unit/cloud/test_cloud.py||tests/pytests/unit/cloud/test_cloud.py",
          "tests/pytests/unit/cloud/test_map.py||tests/pytests/unit/cloud/test_map.py",
          "tests/pytests/unit/config/schemas/test_ssh.py||tests/pytests/unit/config/schemas/test_ssh.py",
          "tests/pytests/unit/config/test__validate_opts.py||tests/pytests/unit/config/test__validate_opts.py",
          "tests/pytests/unit/config/test_master_config.py||tests/pytests/unit/config/test_master_config.py",
          "tests/pytests/unit/conftest.py||tests/pytests/unit/conftest.py",
          "tests/pytests/unit/daemons/masterapi/test_auto_key.py||tests/pytests/unit/daemons/masterapi/test_auto_key.py",
          "tests/pytests/unit/daemons/masterapi/test_local_funcs.py||tests/pytests/unit/daemons/masterapi/test_local_funcs.py",
          "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py||tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "tests/pytests/unit/engines/__init__.py||tests/pytests/unit/engines/__init__.py",
          "tests/pytests/unit/engines/test_engines.py||tests/pytests/unit/engines/test_engines.py",
          "tests/pytests/unit/engines/test_libvirt_events.py||tests/pytests/unit/engines/test_libvirt_events.py",
          "tests/pytests/unit/engines/test_script.py||tests/pytests/unit/engines/test_script.py",
          "tests/pytests/unit/engines/test_slack.py||tests/pytests/unit/engines/test_slack.py",
          "tests/pytests/unit/engines/test_slack_bolt_engine.py||tests/pytests/unit/engines/test_slack_bolt_engine.py",
          "tests/pytests/unit/engines/test_sqs_events.py||tests/pytests/unit/engines/test_sqs_events.py",
          "tests/pytests/unit/engines/test_stalekey.py||tests/pytests/unit/engines/test_stalekey.py",
          "tests/pytests/unit/executors/test_splay.py||tests/pytests/unit/executors/test_splay.py",
          "tests/pytests/unit/fileclient/test_fileclient.py||tests/pytests/unit/fileclient/test_fileclient.py",
          "tests/pytests/unit/fileclient/test_fileclient_cache.py||tests/pytests/unit/fileclient/test_fileclient_cache.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs.py||tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py||tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
          "tests/pytests/unit/fileserver/test_s3fs.py||tests/pytests/unit/fileserver/test_s3fs.py",
          "tests/pytests/unit/fileserver/test_svnfs.py||tests/pytests/unit/fileserver/test_svnfs.py",
          "tests/pytests/unit/grains/test_core.py||tests/pytests/unit/grains/test_core.py",
          "tests/pytests/unit/grains/test_disks.py||tests/pytests/unit/grains/test_disks.py",
          "tests/pytests/unit/grains/test_esxi.py||tests/pytests/unit/grains/test_esxi.py",
          "tests/pytests/unit/grains/test_fibre_channel.py||tests/pytests/unit/grains/test_fibre_channel.py",
          "tests/pytests/unit/grains/test_iscsi.py||tests/pytests/unit/grains/test_iscsi.py",
          "tests/pytests/unit/grains/test_lvm.py||tests/pytests/unit/grains/test_lvm.py",
          "tests/pytests/unit/grains/test_mdata.py||tests/pytests/unit/grains/test_mdata.py",
          "tests/pytests/unit/grains/test_metadata_gce.py||tests/pytests/unit/grains/test_metadata_gce.py",
          "tests/pytests/unit/grains/test_napalm.py||tests/pytests/unit/grains/test_napalm.py",
          "tests/pytests/unit/grains/test_nvme.py||tests/pytests/unit/grains/test_nvme.py",
          "tests/pytests/unit/grains/test_package.py||tests/pytests/unit/grains/test_package.py",
          "tests/pytests/unit/grains/test_pending_reboot.py||tests/pytests/unit/grains/test_pending_reboot.py",
          "tests/pytests/unit/grains/test_smartos.py||tests/pytests/unit/grains/test_smartos.py",
          "tests/pytests/unit/loader/test_context.py||tests/pytests/unit/loader/test_context.py",
          "tests/pytests/unit/loader/test_lazy.py||tests/pytests/unit/loader/test_lazy.py",
          "tests/pytests/unit/loader/test_loader.py||tests/pytests/unit/loader/test_loader.py",
          "tests/pytests/unit/log_handlers/test_sentry_mod.py||tests/pytests/unit/log_handlers/test_sentry_mod.py",
          "tests/pytests/unit/matchers/test_confirm_top.py||tests/pytests/unit/matchers/test_confirm_top.py",
          "tests/pytests/unit/modules/dockermod/test_module.py||tests/pytests/unit/modules/dockermod/test_module.py",
          "tests/pytests/unit/modules/dockermod/test_trans_tar.py||tests/pytests/unit/modules/dockermod/test_trans_tar.py",
          "tests/pytests/unit/modules/file/test_file_basics.py||tests/pytests/unit/modules/file/test_file_basics.py",
          "tests/pytests/unit/modules/file/test_file_block_replace.py||tests/pytests/unit/modules/file/test_file_block_replace.py",
          "tests/pytests/unit/modules/file/test_file_chattr.py||tests/pytests/unit/modules/file/test_file_chattr.py",
          "tests/pytests/unit/modules/file/test_file_check.py||tests/pytests/unit/modules/file/test_file_check.py",
          "tests/pytests/unit/modules/file/test_file_comment_line.py||tests/pytests/unit/modules/file/test_file_comment_line.py",
          "tests/pytests/unit/modules/file/test_file_grep.py||tests/pytests/unit/modules/file/test_file_grep.py",
          "tests/pytests/unit/modules/file/test_file_line.py||tests/pytests/unit/modules/file/test_file_line.py",
          "tests/pytests/unit/modules/file/test_file_lsattr.py||tests/pytests/unit/modules/file/test_file_lsattr.py",
          "tests/pytests/unit/modules/file/test_file_module.py||tests/pytests/unit/modules/file/test_file_module.py",
          "tests/pytests/unit/modules/file/test_file_rmdir.py||tests/pytests/unit/modules/file/test_file_rmdir.py",
          "tests/pytests/unit/modules/file/test_file_selinux.py||tests/pytests/unit/modules/file/test_file_selinux.py",
          "tests/pytests/unit/modules/napalm/test_bgp.py||tests/pytests/unit/modules/napalm/test_bgp.py",
          "tests/pytests/unit/modules/napalm/test_formula.py||tests/pytests/unit/modules/napalm/test_formula.py",
          "tests/pytests/unit/modules/napalm/test_mod.py||tests/pytests/unit/modules/napalm/test_mod.py",
          "tests/pytests/unit/modules/napalm/test_netacl.py||tests/pytests/unit/modules/napalm/test_netacl.py",
          "tests/pytests/unit/modules/napalm/test_network.py||tests/pytests/unit/modules/napalm/test_network.py",
          "tests/pytests/unit/modules/napalm/test_ntp.py||tests/pytests/unit/modules/napalm/test_ntp.py",
          "tests/pytests/unit/modules/napalm/test_route.py||tests/pytests/unit/modules/napalm/test_route.py",
          "tests/pytests/unit/modules/napalm/test_snmp.py||tests/pytests/unit/modules/napalm/test_snmp.py",
          "tests/pytests/unit/modules/napalm/test_users.py||tests/pytests/unit/modules/napalm/test_users.py",
          "tests/pytests/unit/modules/state/test_initial_pillar.py||tests/pytests/unit/modules/state/test_initial_pillar.py",
          "tests/pytests/unit/modules/state/test_state.py||tests/pytests/unit/modules/state/test_state.py",
          "tests/pytests/unit/modules/state/test_top_file_merge.py||tests/pytests/unit/modules/state/test_top_file_merge.py",
          "tests/pytests/unit/modules/test_acme.py||tests/pytests/unit/modules/test_acme.py",
          "tests/pytests/unit/modules/test_aix_status.py||tests/pytests/unit/modules/test_aix_status.py",
          "tests/pytests/unit/modules/test_aixpkg.py||tests/pytests/unit/modules/test_aixpkg.py",
          "tests/pytests/unit/modules/test_aliases.py||tests/pytests/unit/modules/test_aliases.py",
          "tests/pytests/unit/modules/test_alternatives.py||tests/pytests/unit/modules/test_alternatives.py",
          "tests/pytests/unit/modules/test_ansiblegate.py||tests/pytests/unit/modules/test_ansiblegate.py",
          "tests/pytests/unit/modules/test_apache.py||tests/pytests/unit/modules/test_apache.py",
          "tests/pytests/unit/modules/test_aptpkg.py||tests/pytests/unit/modules/test_aptpkg.py",
          "tests/pytests/unit/modules/test_archive.py||tests/pytests/unit/modules/test_archive.py",
          "tests/pytests/unit/modules/test_artifactory.py||tests/pytests/unit/modules/test_artifactory.py",
          "tests/pytests/unit/modules/test_at.py||tests/pytests/unit/modules/test_at.py",
          "tests/pytests/unit/modules/test_augeas_cfg.py||tests/pytests/unit/modules/test_augeas_cfg.py",
          "tests/pytests/unit/modules/test_baredoc.py||tests/pytests/unit/modules/test_baredoc.py",
          "tests/pytests/unit/modules/test_beacons.py||tests/pytests/unit/modules/test_beacons.py",
          "tests/pytests/unit/modules/test_bigip.py||tests/pytests/unit/modules/test_bigip.py",
          "tests/pytests/unit/modules/test_bluez_bluetooth.py||tests/pytests/unit/modules/test_bluez_bluetooth.py",
          "tests/pytests/unit/modules/test_boto_dynamodb.py||tests/pytests/unit/modules/test_boto_dynamodb.py",
          "tests/pytests/unit/modules/test_boto_elbv2.py||tests/pytests/unit/modules/test_boto_elbv2.py",
          "tests/pytests/unit/modules/test_boto_ssm.py||tests/pytests/unit/modules/test_boto_ssm.py",
          "tests/pytests/unit/modules/test_bower.py||tests/pytests/unit/modules/test_bower.py",
          "tests/pytests/unit/modules/test_bridge.py||tests/pytests/unit/modules/test_bridge.py",
          "tests/pytests/unit/modules/test_btrfs.py||tests/pytests/unit/modules/test_btrfs.py",
          "tests/pytests/unit/modules/test_cassandra_cql.py||tests/pytests/unit/modules/test_cassandra_cql.py",
          "tests/pytests/unit/modules/test_cassandra_mod.py||tests/pytests/unit/modules/test_cassandra_mod.py",
          "tests/pytests/unit/modules/test_chocolatey.py||tests/pytests/unit/modules/test_chocolatey.py",
          "tests/pytests/unit/modules/test_chroot.py||tests/pytests/unit/modules/test_chroot.py",
          "tests/pytests/unit/modules/test_cmdmod.py||tests/pytests/unit/modules/test_cmdmod.py",
          "tests/pytests/unit/modules/test_composer.py||tests/pytests/unit/modules/test_composer.py",
          "tests/pytests/unit/modules/test_config.py||tests/pytests/unit/modules/test_config.py",
          "tests/pytests/unit/modules/test_consul.py||tests/pytests/unit/modules/test_consul.py",
          "tests/pytests/unit/modules/test_cp.py||tests/pytests/unit/modules/test_cp.py",
          "tests/pytests/unit/modules/test_cpan.py||tests/pytests/unit/modules/test_cpan.py",
          "tests/pytests/unit/modules/test_cryptdev.py||tests/pytests/unit/modules/test_cryptdev.py",
          "tests/pytests/unit/modules/test_daemontools.py||tests/pytests/unit/modules/test_daemontools.py",
          "tests/pytests/unit/modules/test_data.py||tests/pytests/unit/modules/test_data.py",
          "tests/pytests/unit/modules/test_ddns.py||tests/pytests/unit/modules/test_ddns.py",
          "tests/pytests/unit/modules/test_deb_apache.py||tests/pytests/unit/modules/test_deb_apache.py",
          "tests/pytests/unit/modules/test_deb_postgres.py||tests/pytests/unit/modules/test_deb_postgres.py",
          "tests/pytests/unit/modules/test_debconfmod.py||tests/pytests/unit/modules/test_debconfmod.py",
          "tests/pytests/unit/modules/test_debian_ip.py||tests/pytests/unit/modules/test_debian_ip.py",
          "tests/pytests/unit/modules/test_debian_service.py||tests/pytests/unit/modules/test_debian_service.py",
          "tests/pytests/unit/modules/test_defaults.py||tests/pytests/unit/modules/test_defaults.py",
          "tests/pytests/unit/modules/test_devinfo.py||tests/pytests/unit/modules/test_devinfo.py",
          "tests/pytests/unit/modules/test_devmap.py||tests/pytests/unit/modules/test_devmap.py",
          "tests/pytests/unit/modules/test_dig.py||tests/pytests/unit/modules/test_dig.py",
          "tests/pytests/unit/modules/test_disk.py||tests/pytests/unit/modules/test_disk.py",
          "tests/pytests/unit/modules/test_djangomod.py||tests/pytests/unit/modules/test_djangomod.py",
          "tests/pytests/unit/modules/test_dnsmasq.py||tests/pytests/unit/modules/test_dnsmasq.py",
          "tests/pytests/unit/modules/test_dnsutil.py||tests/pytests/unit/modules/test_dnsutil.py",
          "tests/pytests/unit/modules/test_dpkg_lowpkg.py||tests/pytests/unit/modules/test_dpkg_lowpkg.py",
          "tests/pytests/unit/modules/test_drac.py||tests/pytests/unit/modules/test_drac.py",
          "tests/pytests/unit/modules/test_drbd.py||tests/pytests/unit/modules/test_drbd.py",
          "tests/pytests/unit/modules/test_environ.py||tests/pytests/unit/modules/test_environ.py",
          "tests/pytests/unit/modules/test_esxcluster.py||tests/pytests/unit/modules/test_esxcluster.py",
          "tests/pytests/unit/modules/test_esxdatacenter.py||tests/pytests/unit/modules/test_esxdatacenter.py",
          "tests/pytests/unit/modules/test_etcd_mod.py||tests/pytests/unit/modules/test_etcd_mod.py",
          "tests/pytests/unit/modules/test_ethtool.py||tests/pytests/unit/modules/test_ethtool.py",
          "tests/pytests/unit/modules/test_event.py||tests/pytests/unit/modules/test_event.py",
          "tests/pytests/unit/modules/test_extfs.py||tests/pytests/unit/modules/test_extfs.py",
          "tests/pytests/unit/modules/test_firewalld.py||tests/pytests/unit/modules/test_firewalld.py",
          "tests/pytests/unit/modules/test_freebsd_sysctl.py||tests/pytests/unit/modules/test_freebsd_sysctl.py",
          "tests/pytests/unit/modules/test_freezer.py||tests/pytests/unit/modules/test_freezer.py",
          "tests/pytests/unit/modules/test_gem.py||tests/pytests/unit/modules/test_gem.py",
          "tests/pytests/unit/modules/test_genesis.py||tests/pytests/unit/modules/test_genesis.py",
          "tests/pytests/unit/modules/test_gentoo_service.py||tests/pytests/unit/modules/test_gentoo_service.py",
          "tests/pytests/unit/modules/test_git.py||tests/pytests/unit/modules/test_git.py",
          "tests/pytests/unit/modules/test_glassfish.py||tests/pytests/unit/modules/test_glassfish.py",
          "tests/pytests/unit/modules/test_glusterfs.py||tests/pytests/unit/modules/test_glusterfs.py",
          "tests/pytests/unit/modules/test_gnomedesktop.py||tests/pytests/unit/modules/test_gnomedesktop.py",
          "tests/pytests/unit/modules/test_google_chat.py||tests/pytests/unit/modules/test_google_chat.py",
          "tests/pytests/unit/modules/test_gpg.py||tests/pytests/unit/modules/test_gpg.py",
          "tests/pytests/unit/modules/test_grains.py||tests/pytests/unit/modules/test_grains.py",
          "tests/pytests/unit/modules/test_groupadd.py||tests/pytests/unit/modules/test_groupadd.py",
          "tests/pytests/unit/modules/test_grub_legacy.py||tests/pytests/unit/modules/test_grub_legacy.py",
          "tests/pytests/unit/modules/test_guestfs.py||tests/pytests/unit/modules/test_guestfs.py",
          "tests/pytests/unit/modules/test_hadoop.py||tests/pytests/unit/modules/test_hadoop.py",
          "tests/pytests/unit/modules/test_haproxyconn.py||tests/pytests/unit/modules/test_haproxyconn.py",
          "tests/pytests/unit/modules/test_hashutil.py||tests/pytests/unit/modules/test_hashutil.py",
          "tests/pytests/unit/modules/test_helm.py||tests/pytests/unit/modules/test_helm.py",
          "tests/pytests/unit/modules/test_hg.py||tests/pytests/unit/modules/test_hg.py",
          "tests/pytests/unit/modules/test_http.py||tests/pytests/unit/modules/test_http.py",
          "tests/pytests/unit/modules/test_ilo.py||tests/pytests/unit/modules/test_ilo.py",
          "tests/pytests/unit/modules/test_incron.py||tests/pytests/unit/modules/test_incron.py",
          "tests/pytests/unit/modules/test_ini_manage.py||tests/pytests/unit/modules/test_ini_manage.py",
          "tests/pytests/unit/modules/test_introspect.py||tests/pytests/unit/modules/test_introspect.py",
          "tests/pytests/unit/modules/test_iosconfig.py||tests/pytests/unit/modules/test_iosconfig.py",
          "tests/pytests/unit/modules/test_ipset.py||tests/pytests/unit/modules/test_ipset.py",
          "tests/pytests/unit/modules/test_iptables.py||tests/pytests/unit/modules/test_iptables.py",
          "tests/pytests/unit/modules/test_junos.py||tests/pytests/unit/modules/test_junos.py",
          "tests/pytests/unit/modules/test_key.py||tests/pytests/unit/modules/test_key.py",
          "tests/pytests/unit/modules/test_keyboard.py||tests/pytests/unit/modules/test_keyboard.py",
          "tests/pytests/unit/modules/test_keystone.py||tests/pytests/unit/modules/test_keystone.py",
          "tests/pytests/unit/modules/test_kmod.py||tests/pytests/unit/modules/test_kmod.py",
          "tests/pytests/unit/modules/test_kubeadm.py||tests/pytests/unit/modules/test_kubeadm.py",
          "tests/pytests/unit/modules/test_launchctl_service.py||tests/pytests/unit/modules/test_launchctl_service.py",
          "tests/pytests/unit/modules/test_ldapmod.py||tests/pytests/unit/modules/test_ldapmod.py",
          "tests/pytests/unit/modules/test_linux_lvm.py||tests/pytests/unit/modules/test_linux_lvm.py",
          "tests/pytests/unit/modules/test_linux_service.py||tests/pytests/unit/modules/test_linux_service.py",
          "tests/pytests/unit/modules/test_linux_shadow.py||tests/pytests/unit/modules/test_linux_shadow.py",
          "tests/pytests/unit/modules/test_linux_sysctl.py||tests/pytests/unit/modules/test_linux_sysctl.py",
          "tests/pytests/unit/modules/test_locate.py||tests/pytests/unit/modules/test_locate.py",
          "tests/pytests/unit/modules/test_logadm.py||tests/pytests/unit/modules/test_logadm.py",
          "tests/pytests/unit/modules/test_logrotate.py||tests/pytests/unit/modules/test_logrotate.py",
          "tests/pytests/unit/modules/test_lvs.py||tests/pytests/unit/modules/test_lvs.py",
          "tests/pytests/unit/modules/test_mac_assistive.py||tests/pytests/unit/modules/test_mac_assistive.py",
          "tests/pytests/unit/modules/test_mac_brew_pkg.py||tests/pytests/unit/modules/test_mac_brew_pkg.py",
          "tests/pytests/unit/modules/test_mac_desktop.py||tests/pytests/unit/modules/test_mac_desktop.py",
          "tests/pytests/unit/modules/test_mac_group.py||tests/pytests/unit/modules/test_mac_group.py",
          "tests/pytests/unit/modules/test_mac_keychain.py||tests/pytests/unit/modules/test_mac_keychain.py",
          "tests/pytests/unit/modules/test_mac_pkgutil.py||tests/pytests/unit/modules/test_mac_pkgutil.py",
          "tests/pytests/unit/modules/test_mac_power.py||tests/pytests/unit/modules/test_mac_power.py",
          "tests/pytests/unit/modules/test_mac_service.py||tests/pytests/unit/modules/test_mac_service.py",
          "tests/pytests/unit/modules/test_mac_softwareupdate.py||tests/pytests/unit/modules/test_mac_softwareupdate.py",
          "tests/pytests/unit/modules/test_mac_sysctl.py||tests/pytests/unit/modules/test_mac_sysctl.py",
          "tests/pytests/unit/modules/test_mac_user.py||tests/pytests/unit/modules/test_mac_user.py",
          "tests/pytests/unit/modules/test_mac_xattr.py||tests/pytests/unit/modules/test_mac_xattr.py",
          "tests/pytests/unit/modules/test_macdefaults.py||tests/pytests/unit/modules/test_macdefaults.py",
          "tests/pytests/unit/modules/test_macpackage.py||tests/pytests/unit/modules/test_macpackage.py",
          "tests/pytests/unit/modules/test_mandrill.py||tests/pytests/unit/modules/test_mandrill.py",
          "tests/pytests/unit/modules/test_match.py||tests/pytests/unit/modules/test_match.py",
          "tests/pytests/unit/modules/test_mdadm_raid.py||tests/pytests/unit/modules/test_mdadm_raid.py",
          "tests/pytests/unit/modules/test_mine.py||tests/pytests/unit/modules/test_mine.py",
          "tests/pytests/unit/modules/test_mod_random.py||tests/pytests/unit/modules/test_mod_random.py",
          "tests/pytests/unit/modules/test_modjk.py||tests/pytests/unit/modules/test_modjk.py",
          "tests/pytests/unit/modules/test_mongodb.py||tests/pytests/unit/modules/test_mongodb.py",
          "tests/pytests/unit/modules/test_monit.py||tests/pytests/unit/modules/test_monit.py",
          "tests/pytests/unit/modules/test_moosefs.py||tests/pytests/unit/modules/test_moosefs.py",
          "tests/pytests/unit/modules/test_mount.py||tests/pytests/unit/modules/test_mount.py",
          "tests/pytests/unit/modules/test_msteams.py||tests/pytests/unit/modules/test_msteams.py",
          "tests/pytests/unit/modules/test_munin.py||tests/pytests/unit/modules/test_munin.py",
          "tests/pytests/unit/modules/test_mysql.py||tests/pytests/unit/modules/test_mysql.py",
          "tests/pytests/unit/modules/test_nacl.py||tests/pytests/unit/modules/test_nacl.py",
          "tests/pytests/unit/modules/test_nagios.py||tests/pytests/unit/modules/test_nagios.py",
          "tests/pytests/unit/modules/test_network.py||tests/pytests/unit/modules/test_network.py",
          "tests/pytests/unit/modules/test_nexus.py||tests/pytests/unit/modules/test_nexus.py",
          "tests/pytests/unit/modules/test_nfs3.py||tests/pytests/unit/modules/test_nfs3.py",
          "tests/pytests/unit/modules/test_nftables.py||tests/pytests/unit/modules/test_nftables.py",
          "tests/pytests/unit/modules/test_nginx.py||tests/pytests/unit/modules/test_nginx.py",
          "tests/pytests/unit/modules/test_nilrt_ip.py||tests/pytests/unit/modules/test_nilrt_ip.py",
          "tests/pytests/unit/modules/test_npm.py||tests/pytests/unit/modules/test_npm.py",
          "tests/pytests/unit/modules/test_openbsd_sysctl.py||tests/pytests/unit/modules/test_openbsd_sysctl.py",
          "tests/pytests/unit/modules/test_openbsdpkg.py||tests/pytests/unit/modules/test_openbsdpkg.py",
          "tests/pytests/unit/modules/test_openbsdrcctl_service.py||tests/pytests/unit/modules/test_openbsdrcctl_service.py",
          "tests/pytests/unit/modules/test_openscap.py||tests/pytests/unit/modules/test_openscap.py",
          "tests/pytests/unit/modules/test_openvswitch.py||tests/pytests/unit/modules/test_openvswitch.py",
          "tests/pytests/unit/modules/test_opkg.py||tests/pytests/unit/modules/test_opkg.py",
          "tests/pytests/unit/modules/test_oracle.py||tests/pytests/unit/modules/test_oracle.py",
          "tests/pytests/unit/modules/test_osquery.py||tests/pytests/unit/modules/test_osquery.py",
          "tests/pytests/unit/modules/test_pacmanpkg.py||tests/pytests/unit/modules/test_pacmanpkg.py",
          "tests/pytests/unit/modules/test_pagerduty.py||tests/pytests/unit/modules/test_pagerduty.py",
          "tests/pytests/unit/modules/test_pam.py||tests/pytests/unit/modules/test_pam.py",
          "tests/pytests/unit/modules/test_parallels.py||tests/pytests/unit/modules/test_parallels.py",
          "tests/pytests/unit/modules/test_pcs.py||tests/pytests/unit/modules/test_pcs.py",
          "tests/pytests/unit/modules/test_pdbedit.py||tests/pytests/unit/modules/test_pdbedit.py",
          "tests/pytests/unit/modules/test_pecl.py||tests/pytests/unit/modules/test_pecl.py",
          "tests/pytests/unit/modules/test_pf.py||tests/pytests/unit/modules/test_pf.py",
          "tests/pytests/unit/modules/test_pillar.py||tests/pytests/unit/modules/test_pillar.py",
          "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py",
          "tests/pytests/unit/modules/test_pkg_resource.py||tests/pytests/unit/modules/test_pkg_resource.py",
          "tests/pytests/unit/modules/test_pkgin.py||tests/pytests/unit/modules/test_pkgin.py",
          "tests/pytests/unit/modules/test_pkgng.py||tests/pytests/unit/modules/test_pkgng.py",
          "tests/pytests/unit/modules/test_pkgutil.py||tests/pytests/unit/modules/test_pkgutil.py",
          "tests/pytests/unit/modules/test_portage_config.py||tests/pytests/unit/modules/test_portage_config.py",
          "tests/pytests/unit/modules/test_postfix.py||tests/pytests/unit/modules/test_postfix.py",
          "tests/pytests/unit/modules/test_postgres.py||tests/pytests/unit/modules/test_postgres.py",
          "tests/pytests/unit/modules/test_poudriere.py||tests/pytests/unit/modules/test_poudriere.py",
          "tests/pytests/unit/modules/test_powerpath.py||tests/pytests/unit/modules/test_powerpath.py",
          "tests/pytests/unit/modules/test_proxy.py||tests/pytests/unit/modules/test_proxy.py",
          "tests/pytests/unit/modules/test_ps.py||tests/pytests/unit/modules/test_ps.py",
          "tests/pytests/unit/modules/test_publish.py||tests/pytests/unit/modules/test_publish.py",
          "tests/pytests/unit/modules/test_puppet.py||tests/pytests/unit/modules/test_puppet.py",
          "tests/pytests/unit/modules/test_purefa.py||tests/pytests/unit/modules/test_purefa.py",
          "tests/pytests/unit/modules/test_purefb.py||tests/pytests/unit/modules/test_purefb.py",
          "tests/pytests/unit/modules/test_pw_group.py||tests/pytests/unit/modules/test_pw_group.py",
          "tests/pytests/unit/modules/test_pw_user.py||tests/pytests/unit/modules/test_pw_user.py",
          "tests/pytests/unit/modules/test_pyenv.py||tests/pytests/unit/modules/test_pyenv.py",
          "tests/pytests/unit/modules/test_qemu_img.py||tests/pytests/unit/modules/test_qemu_img.py",
          "tests/pytests/unit/modules/test_qemu_nbd.py||tests/pytests/unit/modules/test_qemu_nbd.py",
          "tests/pytests/unit/modules/test_rabbitmq.py||tests/pytests/unit/modules/test_rabbitmq.py",
          "tests/pytests/unit/modules/test_rbenv.py||tests/pytests/unit/modules/test_rbenv.py",
          "tests/pytests/unit/modules/test_rdp.py||tests/pytests/unit/modules/test_rdp.py",
          "tests/pytests/unit/modules/test_rebootmgr.py||tests/pytests/unit/modules/test_rebootmgr.py",
          "tests/pytests/unit/modules/test_redismod.py||tests/pytests/unit/modules/test_redismod.py",
          "tests/pytests/unit/modules/test_reg.py||tests/pytests/unit/modules/test_reg.py",
          "tests/pytests/unit/modules/test_restartcheck.py||tests/pytests/unit/modules/test_restartcheck.py",
          "tests/pytests/unit/modules/test_restconf.py||tests/pytests/unit/modules/test_restconf.py",
          "tests/pytests/unit/modules/test_ret.py||tests/pytests/unit/modules/test_ret.py",
          "tests/pytests/unit/modules/test_rh_service.py||tests/pytests/unit/modules/test_rh_service.py",
          "tests/pytests/unit/modules/test_riak.py||tests/pytests/unit/modules/test_riak.py",
          "tests/pytests/unit/modules/test_rpm_lowpkg.py||tests/pytests/unit/modules/test_rpm_lowpkg.py",
          "tests/pytests/unit/modules/test_rsync.py||tests/pytests/unit/modules/test_rsync.py",
          "tests/pytests/unit/modules/test_rvm.py||tests/pytests/unit/modules/test_rvm.py",
          "tests/pytests/unit/modules/test_s3.py||tests/pytests/unit/modules/test_s3.py",
          "tests/pytests/unit/modules/test_s6.py||tests/pytests/unit/modules/test_s6.py",
          "tests/pytests/unit/modules/test_salt_version.py||tests/pytests/unit/modules/test_salt_version.py",
          "tests/pytests/unit/modules/test_saltcheck.py||tests/pytests/unit/modules/test_saltcheck.py",
          "tests/pytests/unit/modules/test_saltcloudmod.py||tests/pytests/unit/modules/test_saltcloudmod.py",
          "tests/pytests/unit/modules/test_saltutil.py||tests/pytests/unit/modules/test_saltutil.py",
          "tests/pytests/unit/modules/test_schedule.py||tests/pytests/unit/modules/test_schedule.py",
          "tests/pytests/unit/modules/test_scsi.py||tests/pytests/unit/modules/test_scsi.py",
          "tests/pytests/unit/modules/test_sdb.py||tests/pytests/unit/modules/test_sdb.py",
          "tests/pytests/unit/modules/test_seed.py||tests/pytests/unit/modules/test_seed.py",
          "tests/pytests/unit/modules/test_selinux.py||tests/pytests/unit/modules/test_selinux.py",
          "tests/pytests/unit/modules/test_sensors.py||tests/pytests/unit/modules/test_sensors.py",
          "tests/pytests/unit/modules/test_serverdensity_device.py||tests/pytests/unit/modules/test_serverdensity_device.py",
          "tests/pytests/unit/modules/test_servicenow.py||tests/pytests/unit/modules/test_servicenow.py",
          "tests/pytests/unit/modules/test_slack.py||tests/pytests/unit/modules/test_slack.py",
          "tests/pytests/unit/modules/test_slackware_service.py||tests/pytests/unit/modules/test_slackware_service.py",
          "tests/pytests/unit/modules/test_slsutil.py||tests/pytests/unit/modules/test_slsutil.py",
          "tests/pytests/unit/modules/test_smartos_imgadm.py||tests/pytests/unit/modules/test_smartos_imgadm.py",
          "tests/pytests/unit/modules/test_smf_service.py||tests/pytests/unit/modules/test_smf_service.py",
          "tests/pytests/unit/modules/test_smtp.py||tests/pytests/unit/modules/test_smtp.py",
          "tests/pytests/unit/modules/test_solaris_shadow.py||tests/pytests/unit/modules/test_solaris_shadow.py",
          "tests/pytests/unit/modules/test_solarisipspkg.py||tests/pytests/unit/modules/test_solarisipspkg.py",
          "tests/pytests/unit/modules/test_solarispkg.py||tests/pytests/unit/modules/test_solarispkg.py",
          "tests/pytests/unit/modules/test_solr.py||tests/pytests/unit/modules/test_solr.py",
          "tests/pytests/unit/modules/test_state.py||tests/pytests/unit/modules/test_state.py",
          "tests/pytests/unit/modules/test_status.py||tests/pytests/unit/modules/test_status.py",
          "tests/pytests/unit/modules/test_suse_ip.py||tests/pytests/unit/modules/test_suse_ip.py",
          "tests/pytests/unit/modules/test_svn.py||tests/pytests/unit/modules/test_svn.py",
          "tests/pytests/unit/modules/test_swarm.py||tests/pytests/unit/modules/test_swarm.py",
          "tests/pytests/unit/modules/test_swift.py||tests/pytests/unit/modules/test_swift.py",
          "tests/pytests/unit/modules/test_sysbench.py||tests/pytests/unit/modules/test_sysbench.py",
          "tests/pytests/unit/modules/test_syslog_ng.py||tests/pytests/unit/modules/test_syslog_ng.py",
          "tests/pytests/unit/modules/test_system.py||tests/pytests/unit/modules/test_system.py",
          "tests/pytests/unit/modules/test_systemd_service.py||tests/pytests/unit/modules/test_systemd_service.py",
          "tests/pytests/unit/modules/test_telegram.py||tests/pytests/unit/modules/test_telegram.py",
          "tests/pytests/unit/modules/test_timezone.py||tests/pytests/unit/modules/test_timezone.py",
          "tests/pytests/unit/modules/test_tls.py||tests/pytests/unit/modules/test_tls.py",
          "tests/pytests/unit/modules/test_transactional_update.py||tests/pytests/unit/modules/test_transactional_update.py",
          "tests/pytests/unit/modules/test_tuned.py||tests/pytests/unit/modules/test_tuned.py",
          "tests/pytests/unit/modules/test_udev.py||tests/pytests/unit/modules/test_udev.py",
          "tests/pytests/unit/modules/test_uptime.py||tests/pytests/unit/modules/test_uptime.py",
          "tests/pytests/unit/modules/test_useradd.py||tests/pytests/unit/modules/test_useradd.py",
          "tests/pytests/unit/modules/test_uwsgi.py||tests/pytests/unit/modules/test_uwsgi.py",
          "tests/pytests/unit/modules/test_vagrant.py||tests/pytests/unit/modules/test_vagrant.py",
          "tests/pytests/unit/modules/test_varnish.py||tests/pytests/unit/modules/test_varnish.py",
          "tests/pytests/unit/modules/test_vault.py||tests/pytests/unit/modules/test_vault.py",
          "tests/pytests/unit/modules/test_vmctl.py||tests/pytests/unit/modules/test_vmctl.py",
          "tests/pytests/unit/modules/test_webutil.py||tests/pytests/unit/modules/test_webutil.py",
          "tests/pytests/unit/modules/test_win_appx.py||tests/pytests/unit/modules/test_win_appx.py",
          "tests/pytests/unit/modules/test_win_autoruns.py||tests/pytests/unit/modules/test_win_autoruns.py",
          "tests/pytests/unit/modules/test_win_certutil.py||tests/pytests/unit/modules/test_win_certutil.py",
          "tests/pytests/unit/modules/test_win_disk.py||tests/pytests/unit/modules/test_win_disk.py",
          "tests/pytests/unit/modules/test_win_dism.py||tests/pytests/unit/modules/test_win_dism.py",
          "tests/pytests/unit/modules/test_win_dns_client.py||tests/pytests/unit/modules/test_win_dns_client.py",
          "tests/pytests/unit/modules/test_win_event.py||tests/pytests/unit/modules/test_win_event.py",
          "tests/pytests/unit/modules/test_win_file.py||tests/pytests/unit/modules/test_win_file.py",
          "tests/pytests/unit/modules/test_win_iis.py||tests/pytests/unit/modules/test_win_iis.py",
          "tests/pytests/unit/modules/test_win_ip.py||tests/pytests/unit/modules/test_win_ip.py",
          "tests/pytests/unit/modules/test_win_lgpo_reg.py||tests/pytests/unit/modules/test_win_lgpo_reg.py",
          "tests/pytests/unit/modules/test_win_licence.py||tests/pytests/unit/modules/test_win_licence.py",
          "tests/pytests/unit/modules/test_win_network.py||tests/pytests/unit/modules/test_win_network.py",
          "tests/pytests/unit/modules/test_win_ntp.py||tests/pytests/unit/modules/test_win_ntp.py",
          "tests/pytests/unit/modules/test_win_path.py||tests/pytests/unit/modules/test_win_path.py",
          "tests/pytests/unit/modules/test_win_pkg.py||tests/pytests/unit/modules/test_win_pkg.py",
          "tests/pytests/unit/modules/test_win_pki.py||tests/pytests/unit/modules/test_win_pki.py",
          "tests/pytests/unit/modules/test_win_powercfg.py||tests/pytests/unit/modules/test_win_powercfg.py",
          "tests/pytests/unit/modules/test_win_psget.py||tests/pytests/unit/modules/test_win_psget.py",
          "tests/pytests/unit/modules/test_win_servermanager.py||tests/pytests/unit/modules/test_win_servermanager.py",
          "tests/pytests/unit/modules/test_win_service.py||tests/pytests/unit/modules/test_win_service.py",
          "tests/pytests/unit/modules/test_win_shadow.py||tests/pytests/unit/modules/test_win_shadow.py",
          "tests/pytests/unit/modules/test_win_snmp.py||tests/pytests/unit/modules/test_win_snmp.py",
          "tests/pytests/unit/modules/test_win_system.py||tests/pytests/unit/modules/test_win_system.py",
          "tests/pytests/unit/modules/test_win_task.py||tests/pytests/unit/modules/test_win_task.py",
          "tests/pytests/unit/modules/test_win_timezone.py||tests/pytests/unit/modules/test_win_timezone.py",
          "tests/pytests/unit/modules/test_win_wua.py||tests/pytests/unit/modules/test_win_wua.py",
          "tests/pytests/unit/modules/test_win_wusa.py||tests/pytests/unit/modules/test_win_wusa.py",
          "tests/pytests/unit/modules/test_xapi_virt.py||tests/pytests/unit/modules/test_xapi_virt.py",
          "tests/pytests/unit/modules/test_xfs.py||tests/pytests/unit/modules/test_xfs.py",
          "tests/pytests/unit/modules/test_xml.py||tests/pytests/unit/modules/test_xml.py",
          "tests/pytests/unit/modules/test_yumpkg.py||tests/pytests/unit/modules/test_yumpkg.py",
          "tests/pytests/unit/modules/test_zabbix.py||tests/pytests/unit/modules/test_zabbix.py",
          "tests/pytests/unit/modules/test_zenoss.py||tests/pytests/unit/modules/test_zenoss.py",
          "tests/pytests/unit/modules/test_zfs.py||tests/pytests/unit/modules/test_zfs.py",
          "tests/pytests/unit/modules/test_zfs_solaris10.py||tests/pytests/unit/modules/test_zfs_solaris10.py",
          "tests/pytests/unit/modules/test_zfs_solaris11.py||tests/pytests/unit/modules/test_zfs_solaris11.py",
          "tests/pytests/unit/modules/test_znc.py||tests/pytests/unit/modules/test_znc.py",
          "tests/pytests/unit/modules/test_zpool.py||tests/pytests/unit/modules/test_zpool.py",
          "tests/pytests/unit/modules/test_zypperpkg.py||tests/pytests/unit/modules/test_zypperpkg.py",
          "tests/pytests/unit/modules/virt/conftest.py||tests/pytests/unit/modules/virt/conftest.py",
          "tests/pytests/unit/modules/virt/test_domain.py||tests/pytests/unit/modules/virt/test_domain.py",
          "tests/pytests/unit/modules/virt/test_helpers.py||tests/pytests/unit/modules/virt/test_helpers.py",
          "tests/pytests/unit/modules/virt/test_host.py||tests/pytests/unit/modules/virt/test_host.py",
          "tests/pytests/unit/modules/virt/test_network.py||tests/pytests/unit/modules/virt/test_network.py",
          "tests/pytests/unit/modules/win_lgpo/test__policy_info.py||tests/pytests/unit/modules/win_lgpo/test__policy_info.py",
          "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py||tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "tests/pytests/unit/modules/win_lgpo/test_adv_audit.py||tests/pytests/unit/modules/win_lgpo/test_adv_audit.py",
          "tests/pytests/unit/modules/win_lgpo/test_defined_policies.py||tests/pytests/unit/modules/win_lgpo/test_defined_policies.py",
          "tests/pytests/unit/modules/win_lgpo/test_get_policy.py||tests/pytests/unit/modules/win_lgpo/test_get_policy.py",
          "tests/pytests/unit/modules/win_lgpo/test_mechanisms.py||tests/pytests/unit/modules/win_lgpo/test_mechanisms.py",
          "tests/pytests/unit/modules/win_lgpo/test_netsh.py||tests/pytests/unit/modules/win_lgpo/test_netsh.py",
          "tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py||tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py",
          "tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py||tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_info.py||tests/pytests/unit/modules/win_lgpo/test_policy_info.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py||tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py",
          "tests/pytests/unit/modules/win_lgpo/test_policy_resources.py||tests/pytests/unit/modules/win_lgpo/test_policy_resources.py",
          "tests/pytests/unit/modules/win_lgpo/test_reg_pol.py||tests/pytests/unit/modules/win_lgpo/test_reg_pol.py",
          "tests/pytests/unit/modules/win_lgpo/test_secedit.py||tests/pytests/unit/modules/win_lgpo/test_secedit.py",
          "tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py||tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py",
          "tests/pytests/unit/netapi/cherrypy/test_events.py||tests/pytests/unit/netapi/cherrypy/test_events.py",
          "tests/pytests/unit/netapi/cherrypy/test_login.py||tests/pytests/unit/netapi/cherrypy/test_login.py",
          "tests/pytests/unit/netapi/saltnado/test_base_handler.py||tests/pytests/unit/netapi/saltnado/test_base_handler.py",
          "tests/pytests/unit/output/test_highstate.py||tests/pytests/unit/output/test_highstate.py",
          "tests/pytests/unit/output/test_highstate_terse.py||tests/pytests/unit/output/test_highstate_terse.py",
          "tests/pytests/unit/output/test_json_out.py||tests/pytests/unit/output/test_json_out.py",
          "tests/pytests/unit/output/test_nested.py||tests/pytests/unit/output/test_nested.py",
          "tests/pytests/unit/output/test_table_out.py||tests/pytests/unit/output/test_table_out.py",
          "tests/pytests/unit/output/test_yaml_out.py||tests/pytests/unit/output/test_yaml_out.py",
          "tests/pytests/unit/pillar/test_consul_pillar.py||tests/pytests/unit/pillar/test_consul_pillar.py",
          "tests/pytests/unit/pillar/test_csvpillar.py||tests/pytests/unit/pillar/test_csvpillar.py",
          "tests/pytests/unit/pillar/test_etcd_pillar.py||tests/pytests/unit/pillar/test_etcd_pillar.py",
          "tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py||tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py",
          "tests/pytests/unit/pillar/test_file_tree.py||tests/pytests/unit/pillar/test_file_tree.py",
          "tests/pytests/unit/pillar/test_http_json_pillar.py||tests/pytests/unit/pillar/test_http_json_pillar.py",
          "tests/pytests/unit/pillar/test_http_yaml_pillar.py||tests/pytests/unit/pillar/test_http_yaml_pillar.py",
          "tests/pytests/unit/pillar/test_mongo.py||tests/pytests/unit/pillar/test_mongo.py",
          "tests/pytests/unit/pillar/test_mysql.py||tests/pytests/unit/pillar/test_mysql.py",
          "tests/pytests/unit/pillar/test_nacl.py||tests/pytests/unit/pillar/test_nacl.py",
          "tests/pytests/unit/pillar/test_netbox.py||tests/pytests/unit/pillar/test_netbox.py",
          "tests/pytests/unit/pillar/test_nodegroups.py||tests/pytests/unit/pillar/test_nodegroups.py",
          "tests/pytests/unit/pillar/test_pepa.py||tests/pytests/unit/pillar/test_pepa.py",
          "tests/pytests/unit/pillar/test_pillar.py||tests/pytests/unit/pillar/test_pillar.py",
          "tests/pytests/unit/pillar/test_pillar_ldap.py||tests/pytests/unit/pillar/test_pillar_ldap.py",
          "tests/pytests/unit/pillar/test_s3.py||tests/pytests/unit/pillar/test_s3.py",
          "tests/pytests/unit/pillar/test_saltclass.py||tests/pytests/unit/pillar/test_saltclass.py",
          "tests/pytests/unit/pillar/test_sql_base.py||tests/pytests/unit/pillar/test_sql_base.py",
          "tests/pytests/unit/pillar/test_sqlcipher.py||tests/pytests/unit/pillar/test_sqlcipher.py",
          "tests/pytests/unit/pillar/test_sqlite3.py||tests/pytests/unit/pillar/test_sqlite3.py",
          "tests/pytests/unit/pillar/test_stack.py||tests/pytests/unit/pillar/test_stack.py",
          "tests/pytests/unit/pillar/test_vault.py||tests/pytests/unit/pillar/test_vault.py",
          "tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py||tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py",
          "tests/pytests/unit/proxy/nxos/test_nxos_ssh.py||tests/pytests/unit/proxy/nxos/test_nxos_ssh.py",
          "tests/pytests/unit/proxy/test_cimc.py||tests/pytests/unit/proxy/test_cimc.py",
          "tests/pytests/unit/proxy/test_esxcluster.py||tests/pytests/unit/proxy/test_esxcluster.py",
          "tests/pytests/unit/proxy/test_esxdatacenter.py||tests/pytests/unit/proxy/test_esxdatacenter.py",
          "tests/pytests/unit/proxy/test_junos.py||tests/pytests/unit/proxy/test_junos.py",
          "tests/pytests/unit/proxy/test_napalm.py||tests/pytests/unit/proxy/test_napalm.py",
          "tests/pytests/unit/proxy/test_netmiko_px.py||tests/pytests/unit/proxy/test_netmiko_px.py",
          "tests/pytests/unit/proxy/test_panos.py||tests/pytests/unit/proxy/test_panos.py",
          "tests/pytests/unit/proxy/test_restconf.py||tests/pytests/unit/proxy/test_restconf.py",
          "tests/pytests/unit/proxy/test_ssh_sample.py||tests/pytests/unit/proxy/test_ssh_sample.py",
          "tests/pytests/unit/renderers/test_aws_kms.py||tests/pytests/unit/renderers/test_aws_kms.py",
          "tests/pytests/unit/renderers/test_gpg.py||tests/pytests/unit/renderers/test_gpg.py",
          "tests/pytests/unit/renderers/test_nacl.py||tests/pytests/unit/renderers/test_nacl.py",
          "tests/pytests/unit/renderers/test_pass.py||tests/pytests/unit/renderers/test_pass.py",
          "tests/pytests/unit/renderers/test_stateconf.py||tests/pytests/unit/renderers/test_stateconf.py",
          "tests/pytests/unit/renderers/test_toml.py||tests/pytests/unit/renderers/test_toml.py",
          "tests/pytests/unit/renderers/test_yaml.py||tests/pytests/unit/renderers/test_yaml.py",
          "tests/pytests/unit/renderers/test_yamlex.py||tests/pytests/unit/renderers/test_yamlex.py",
          "tests/pytests/unit/returners/local_cache/test_local_cache.py||tests/pytests/unit/returners/local_cache/test_local_cache.py",
          "tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py||tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py",
          "tests/pytests/unit/returners/test_elasticsearch_return.py||tests/pytests/unit/returners/test_elasticsearch_return.py",
          "tests/pytests/unit/returners/test_etcd_return.py||tests/pytests/unit/returners/test_etcd_return.py",
          "tests/pytests/unit/returners/test_highstate_return.py||tests/pytests/unit/returners/test_highstate_return.py",
          "tests/pytests/unit/returners/test_mongo_future_return.py||tests/pytests/unit/returners/test_mongo_future_return.py",
          "tests/pytests/unit/returners/test_mysql.py||tests/pytests/unit/returners/test_mysql.py",
          "tests/pytests/unit/returners/test_nagios_nrdp_return.py||tests/pytests/unit/returners/test_nagios_nrdp_return.py",
          "tests/pytests/unit/returners/test_pgjsonb.py||tests/pytests/unit/returners/test_pgjsonb.py",
          "tests/pytests/unit/returners/test_postgres.py||tests/pytests/unit/returners/test_postgres.py",
          "tests/pytests/unit/returners/test_postgres_local_cache.py||tests/pytests/unit/returners/test_postgres_local_cache.py",
          "tests/pytests/unit/returners/test_sentry_return.py||tests/pytests/unit/returners/test_sentry_return.py",
          "tests/pytests/unit/returners/test_slack_webhook_return.py||tests/pytests/unit/returners/test_slack_webhook_return.py",
          "tests/pytests/unit/returners/test_smtp_return.py||tests/pytests/unit/returners/test_smtp_return.py",
          "tests/pytests/unit/returners/test_splunk_return.py||tests/pytests/unit/returners/test_splunk_return.py",
          "tests/pytests/unit/returners/test_syslog_return.py||tests/pytests/unit/returners/test_syslog_return.py",
          "tests/pytests/unit/returners/test_telegram_return.py||tests/pytests/unit/returners/test_telegram_return.py",
          "tests/pytests/unit/roster/test_ansible.py||tests/pytests/unit/roster/test_ansible.py",
          "tests/pytests/unit/roster/test_clustershell.py||tests/pytests/unit/roster/test_clustershell.py",
          "tests/pytests/unit/roster/test_dir.py||tests/pytests/unit/roster/test_dir.py",
          "tests/pytests/unit/roster/test_scan.py||tests/pytests/unit/roster/test_scan.py",
          "tests/pytests/unit/roster/test_ssh_config.py||tests/pytests/unit/roster/test_ssh_config.py",
          "tests/pytests/unit/roster/test_sshknownhosts.py||tests/pytests/unit/roster/test_sshknownhosts.py",
          "tests/pytests/unit/roster/test_terraform.py||tests/pytests/unit/roster/test_terraform.py",
          "tests/pytests/unit/runners/test_asam.py||tests/pytests/unit/runners/test_asam.py",
          "tests/pytests/unit/runners/test_bgp.py||tests/pytests/unit/runners/test_bgp.py",
          "tests/pytests/unit/runners/test_cache.py||tests/pytests/unit/runners/test_cache.py",
          "tests/pytests/unit/runners/test_fileserver.py||tests/pytests/unit/runners/test_fileserver.py",
          "tests/pytests/unit/runners/test_git_pillar.py||tests/pytests/unit/runners/test_git_pillar.py",
          "tests/pytests/unit/runners/test_jobs.py||tests/pytests/unit/runners/test_jobs.py",
          "tests/pytests/unit/runners/test_manage.py||tests/pytests/unit/runners/test_manage.py",
          "tests/pytests/unit/runners/test_nacl.py||tests/pytests/unit/runners/test_nacl.py",
          "tests/pytests/unit/runners/test_net.py||tests/pytests/unit/runners/test_net.py",
          "tests/pytests/unit/runners/test_network.py||tests/pytests/unit/runners/test_network.py",
          "tests/pytests/unit/runners/test_pillar.py||tests/pytests/unit/runners/test_pillar.py",
          "tests/pytests/unit/runners/test_queue.py||tests/pytests/unit/runners/test_queue.py",
          "tests/pytests/unit/runners/test_reactor.py||tests/pytests/unit/runners/test_reactor.py",
          "tests/pytests/unit/runners/test_saltutil.py||tests/pytests/unit/runners/test_saltutil.py",
          "tests/pytests/unit/runners/test_spacewalk.py||tests/pytests/unit/runners/test_spacewalk.py",
          "tests/pytests/unit/runners/test_state.py||tests/pytests/unit/runners/test_state.py",
          "tests/pytests/unit/runners/test_winrepo.py||tests/pytests/unit/runners/test_winrepo.py",
          "tests/pytests/unit/runners/vault/test_token_auth_deprecated.py||tests/pytests/unit/runners/vault/test_token_auth_deprecated.py",
          "tests/pytests/unit/runners/vault/test_vault.py||tests/pytests/unit/runners/vault/test_vault.py",
          "tests/pytests/unit/sdb/test_etcd_db.py||tests/pytests/unit/sdtest_etcd_db.py",
          "tests/pytests/unit/sdb/test_vault.py||tests/pytests/unit/sdtest_vault.py",
          "tests/pytests/unit/sdb/test_yaml.py||tests/pytests/unit/sdtest_yaml.py",
          "tests/pytests/unit/serializers/test_serializers.py||tests/pytests/unit/serializers/test_serializers.py",
          "tests/pytests/unit/spm/test_pkgfiles.py||tests/pytests/unit/spm/test_pkgfiles.py",
          "tests/pytests/unit/spm/test_spm.py||tests/pytests/unit/spm/test_spm.py",
          "tests/pytests/unit/state/test_global_state_conditions.py||tests/pytests/unit/state/test_global_state_conditions.py",
          "tests/pytests/unit/state/test_multi_env_highstate.py||tests/pytests/unit/state/test_multi_env_highstate.py",
          "tests/pytests/unit/state/test_reactor_compiler.py||tests/pytests/unit/state/test_reactor_compiler.py",
          "tests/pytests/unit/state/test_state_basic.py||tests/pytests/unit/state/test_state_basic.py",
          "tests/pytests/unit/state/test_state_compiler.py||tests/pytests/unit/state/test_state_compiler.py",
          "tests/pytests/unit/state/test_state_format_slots.py||tests/pytests/unit/state/test_state_format_slots.py",
          "tests/pytests/unit/state/test_state_highstate.py||tests/pytests/unit/state/test_state_highstate.py",
          "tests/pytests/unit/state/test_state_options.py||tests/pytests/unit/state/test_state_options.py",
          "tests/pytests/unit/state/test_state_returns.py||tests/pytests/unit/state/test_state_returns.py",
          "tests/pytests/unit/state/test_sub_state_returns.py||tests/pytests/unit/state/test_sub_state_returns.py",
          "tests/pytests/unit/states/apache/test_apache.py||tests/pytests/unit/states/apache/test_apache.py",
          "tests/pytests/unit/states/apache/test_conf.py||tests/pytests/unit/states/apache/test_conf.py",
          "tests/pytests/unit/states/apache/test_module.py||tests/pytests/unit/states/apache/test_module.py",
          "tests/pytests/unit/states/apache/test_site.py||tests/pytests/unit/states/apache/test_site.py",
          "tests/pytests/unit/states/file/test__clean_dir.py||tests/pytests/unit/states/file/test__clean_dir.py",
          "tests/pytests/unit/states/file/test_absent.py||tests/pytests/unit/states/file/test_absent.py",
          "tests/pytests/unit/states/file/test_comment.py||tests/pytests/unit/states/file/test_comment.py",
          "tests/pytests/unit/states/file/test_copy.py||tests/pytests/unit/states/file/test_copy.py",
          "tests/pytests/unit/states/file/test_directory.py||tests/pytests/unit/states/file/test_directory.py",
          "tests/pytests/unit/states/file/test_filestate.py||tests/pytests/unit/states/file/test_filestate.py",
          "tests/pytests/unit/states/file/test_find_keep_files.py||tests/pytests/unit/states/file/test_find_keep_files.py",
          "tests/pytests/unit/states/file/test_hardlink.py||tests/pytests/unit/states/file/test_hardlink.py",
          "tests/pytests/unit/states/file/test_keyvalue.py||tests/pytests/unit/states/file/test_keyvalue.py",
          "tests/pytests/unit/states/file/test_managed.py||tests/pytests/unit/states/file/test_managed.py",
          "tests/pytests/unit/states/file/test_mod_beacon.py||tests/pytests/unit/states/file/test_mod_beacon.py",
          "tests/pytests/unit/states/file/test_prepend.py||tests/pytests/unit/states/file/test_prepend.py",
          "tests/pytests/unit/states/file/test_private_functions.py||tests/pytests/unit/states/file/test_private_functions.py",
          "tests/pytests/unit/states/file/test_pruned.py||tests/pytests/unit/states/file/test_pruned.py",
          "tests/pytests/unit/states/file/test_rename.py||tests/pytests/unit/states/file/test_rename.py",
          "tests/pytests/unit/states/file/test_retention_schedule.py||tests/pytests/unit/states/file/test_retention_schedule.py",
          "tests/pytests/unit/states/file/test_selinux.py||tests/pytests/unit/states/file/test_selinux.py",
          "tests/pytests/unit/states/file/test_symlink.py||tests/pytests/unit/states/file/test_symlink.py",
          "tests/pytests/unit/states/file/test_tidied.py||tests/pytests/unit/states/file/test_tidied.py",
          "tests/pytests/unit/states/mysql/test_database.py||tests/pytests/unit/states/mysql/test_database.py",
          "tests/pytests/unit/states/mysql/test_grants.py||tests/pytests/unit/states/mysql/test_grants.py",
          "tests/pytests/unit/states/mysql/test_query.py||tests/pytests/unit/states/mysql/test_query.py",
          "tests/pytests/unit/states/mysql/test_user.py||tests/pytests/unit/states/mysql/test_user.py",
          "tests/pytests/unit/states/postgresql/test_cluster.py||tests/pytests/unit/states/postgresql/test_cluster.py",
          "tests/pytests/unit/states/postgresql/test_database.py||tests/pytests/unit/states/postgresql/test_database.py",
          "tests/pytests/unit/states/postgresql/test_extension.py||tests/pytests/unit/states/postgresql/test_extension.py",
          "tests/pytests/unit/states/postgresql/test_group.py||tests/pytests/unit/states/postgresql/test_group.py",
          "tests/pytests/unit/states/postgresql/test_initdb.py||tests/pytests/unit/states/postgresql/test_initdb.py",
          "tests/pytests/unit/states/postgresql/test_language.py||tests/pytests/unit/states/postgresql/test_language.py",
          "tests/pytests/unit/states/postgresql/test_privileges.py||tests/pytests/unit/states/postgresql/test_privileges.py",
          "tests/pytests/unit/states/postgresql/test_schema.py||tests/pytests/unit/states/postgresql/test_schema.py",
          "tests/pytests/unit/states/postgresql/test_user.py||tests/pytests/unit/states/postgresql/test_user.py",
          "tests/pytests/unit/states/rabbitmq/test_cluster.py||tests/pytests/unit/states/rabbitmq/test_cluster.py",
          "tests/pytests/unit/states/rabbitmq/test_plugin.py||tests/pytests/unit/states/rabbitmq/test_plugin.py",
          "tests/pytests/unit/states/rabbitmq/test_policy.py||tests/pytests/unit/states/rabbitmq/test_policy.py",
          "tests/pytests/unit/states/rabbitmq/test_vhost.py||tests/pytests/unit/states/rabbitmq/test_vhost.py",
          "tests/pytests/unit/states/saltmod/test_function.py||tests/pytests/unit/states/saltmod/test_function.py",
          "tests/pytests/unit/states/saltmod/test_parallel_runners.py||tests/pytests/unit/states/saltmod/test_parallel_runners.py",
          "tests/pytests/unit/states/saltmod/test_runner.py||tests/pytests/unit/states/saltmod/test_runner.py",
          "tests/pytests/unit/states/saltmod/test_state.py||tests/pytests/unit/states/saltmod/test_state.py",
          "tests/pytests/unit/states/saltmod/test_wait_for_event.py||tests/pytests/unit/states/saltmod/test_wait_for_event.py",
          "tests/pytests/unit/states/saltmod/test_wheel.py||tests/pytests/unit/states/saltmod/test_wheel.py",
          "tests/pytests/unit/states/test_acme.py||tests/pytests/unit/states/test_acme.py",
          "tests/pytests/unit/states/test_alias.py||tests/pytests/unit/states/test_alias.py",
          "tests/pytests/unit/states/test_alternatives.py||tests/pytests/unit/states/test_alternatives.py",
          "tests/pytests/unit/states/test_ansiblegate.py||tests/pytests/unit/states/test_ansiblegate.py",
          "tests/pytests/unit/states/test_aptpkg.py||tests/pytests/unit/states/test_aptpkg.py",
          "tests/pytests/unit/states/test_archive.py||tests/pytests/unit/states/test_archive.py",
          "tests/pytests/unit/states/test_artifactory.py||tests/pytests/unit/states/test_artifactory.py",
          "tests/pytests/unit/states/test_at.py||tests/pytests/unit/states/test_at.py",
          "tests/pytests/unit/states/test_augeas.py||tests/pytests/unit/states/test_augeas.py",
          "tests/pytests/unit/states/test_aws_sqs.py||tests/pytests/unit/states/test_aws_sqs.py",
          "tests/pytests/unit/states/test_beacon.py||tests/pytests/unit/states/test_beacon.py",
          "tests/pytests/unit/states/test_blockdev.py||tests/pytests/unit/states/test_blockdev.py",
          "tests/pytests/unit/states/test_boto_asg.py||tests/pytests/unit/states/test_boto_asg.py",
          "tests/pytests/unit/states/test_boto_cloudfront.py||tests/pytests/unit/states/test_boto_cloudfront.py",
          "tests/pytests/unit/states/test_boto_cloudtrail.py||tests/pytests/unit/states/test_boto_cloudtrail.py",
          "tests/pytests/unit/states/test_boto_cloudwatch_alarm.py||tests/pytests/unit/states/test_boto_cloudwatch_alarm.py",
          "tests/pytests/unit/states/test_boto_cloudwatch_event.py||tests/pytests/unit/states/test_boto_cloudwatch_event.py",
          "tests/pytests/unit/states/test_boto_dynamodb.py||tests/pytests/unit/states/test_boto_dynamodb.py",
          "tests/pytests/unit/states/test_boto_ec2.py||tests/pytests/unit/states/test_boto_ec2.py",
          "tests/pytests/unit/states/test_boto_elasticache.py||tests/pytests/unit/states/test_boto_elasticache.py",
          "tests/pytests/unit/states/test_boto_elasticsearch_domain.py||tests/pytests/unit/states/test_boto_elasticsearch_domain.py",
          "tests/pytests/unit/states/test_boto_elb.py||tests/pytests/unit/states/test_boto_elb.py",
          "tests/pytests/unit/states/test_boto_iam_role.py||tests/pytests/unit/states/test_boto_iam_role.py",
          "tests/pytests/unit/states/test_boto_iot.py||tests/pytests/unit/states/test_boto_iot.py",
          "tests/pytests/unit/states/test_boto_kinesis.py||tests/pytests/unit/states/test_boto_kinesis.py",
          "tests/pytests/unit/states/test_boto_lambda.py||tests/pytests/unit/states/test_boto_lambda.py",
          "tests/pytests/unit/states/test_boto_lc.py||tests/pytests/unit/states/test_boto_lc.py",
          "tests/pytests/unit/states/test_boto_route53.py||tests/pytests/unit/states/test_boto_route53.py",
          "tests/pytests/unit/states/test_boto_s3_bucket.py||tests/pytests/unit/states/test_boto_s3_bucket.py",
          "tests/pytests/unit/states/test_boto_secgroup.py||tests/pytests/unit/states/test_boto_secgroup.py",
          "tests/pytests/unit/states/test_boto_sns.py||tests/pytests/unit/states/test_boto_sns.py",
          "tests/pytests/unit/states/test_boto_sqs.py||tests/pytests/unit/states/test_boto_sqs.py",
          "tests/pytests/unit/states/test_bower.py||tests/pytests/unit/states/test_bower.py",
          "tests/pytests/unit/states/test_btrfs.py||tests/pytests/unit/states/test_btrfs.py",
          "tests/pytests/unit/states/test_chef.py||tests/pytests/unit/states/test_chef.py",
          "tests/pytests/unit/states/test_chocolatey.py||tests/pytests/unit/states/test_chocolatey.py",
          "tests/pytests/unit/states/test_cloud.py||tests/pytests/unit/states/test_cloud.py",
          "tests/pytests/unit/states/test_cmd.py||tests/pytests/unit/states/test_cmd.py",
          "tests/pytests/unit/states/test_composer.py||tests/pytests/unit/states/test_composer.py",
          "tests/pytests/unit/states/test_consul.py||tests/pytests/unit/states/test_consul.py",
          "tests/pytests/unit/states/test_ddns.py||tests/pytests/unit/states/test_ddns.py",
          "tests/pytests/unit/states/test_debconfmod.py||tests/pytests/unit/states/test_debconfmod.py",
          "tests/pytests/unit/states/test_docker_image.py||tests/pytests/unit/states/test_docker_image.py",
          "tests/pytests/unit/states/test_docker_volume.py||tests/pytests/unit/states/test_docker_volume.py",
          "tests/pytests/unit/states/test_drac.py||tests/pytests/unit/states/test_drac.py",
          "tests/pytests/unit/states/test_elasticsearch.py||tests/pytests/unit/states/test_elasticsearch.py",
          "tests/pytests/unit/states/test_environ.py||tests/pytests/unit/states/test_environ.py",
          "tests/pytests/unit/states/test_eselect.py||tests/pytests/unit/states/test_eselect.py",
          "tests/pytests/unit/states/test_etcd_mod.py||tests/pytests/unit/states/test_etcd_mod.py",
          "tests/pytests/unit/states/test_ethtool.py||tests/pytests/unit/states/test_ethtool.py",
          "tests/pytests/unit/states/test_event.py||tests/pytests/unit/states/test_event.py",
          "tests/pytests/unit/states/test_file.py||tests/pytests/unit/states/test_file.py",
          "tests/pytests/unit/states/test_gem.py||tests/pytests/unit/states/test_gem.py",
          "tests/pytests/unit/states/test_git.py||tests/pytests/unit/states/test_git.py",
          "tests/pytests/unit/states/test_glusterfs.py||tests/pytests/unit/states/test_glusterfs.py",
          "tests/pytests/unit/states/test_gnomedesktop.py||tests/pytests/unit/states/test_gnomedesktop.py",
          "tests/pytests/unit/states/test_gpg.py||tests/pytests/unit/states/test_gpg.py",
          "tests/pytests/unit/states/test_grafana.py||tests/pytests/unit/states/test_grafana.py",
          "tests/pytests/unit/states/test_grafana_datasource.py||tests/pytests/unit/states/test_grafana_datasource.py",
          "tests/pytests/unit/states/test_group.py||tests/pytests/unit/states/test_group.py",
          "tests/pytests/unit/states/test_helm.py||tests/pytests/unit/states/test_helm.py",
          "tests/pytests/unit/states/test_hg.py||tests/pytests/unit/states/test_hg.py",
          "tests/pytests/unit/states/test_host.py||tests/pytests/unit/states/test_host.py",
          "tests/pytests/unit/states/test_http.py||tests/pytests/unit/states/test_http.py",
          "tests/pytests/unit/states/test_incron.py||tests/pytests/unit/states/test_incron.py",
          "tests/pytests/unit/states/test_influxdb08_database.py||tests/pytests/unit/states/test_influxdb08_database.py",
          "tests/pytests/unit/states/test_influxdb08_user.py||tests/pytests/unit/states/test_influxdb08_user.py",
          "tests/pytests/unit/states/test_influxdb_continuous_query.py||tests/pytests/unit/states/test_influxdb_continuous_query.py",
          "tests/pytests/unit/states/test_ini_manage.py||tests/pytests/unit/states/test_ini_manage.py",
          "tests/pytests/unit/states/test_ipmi.py||tests/pytests/unit/states/test_ipmi.py",
          "tests/pytests/unit/states/test_iptables.py||tests/pytests/unit/states/test_iptables.py",
          "tests/pytests/unit/states/test_jboss7.py||tests/pytests/unit/states/test_jboss7.py",
          "tests/pytests/unit/states/test_kapacitor.py||tests/pytests/unit/states/test_kapacitor.py",
          "tests/pytests/unit/states/test_kernelpkg.py||tests/pytests/unit/states/test_kernelpkg.py",
          "tests/pytests/unit/states/test_keyboard.py||tests/pytests/unit/states/test_keyboard.py",
          "tests/pytests/unit/states/test_keystone.py||tests/pytests/unit/states/test_keystone.py",
          "tests/pytests/unit/states/test_keystore.py||tests/pytests/unit/states/test_keystore.py",
          "tests/pytests/unit/states/test_kmod.py||tests/pytests/unit/states/test_kmod.py",
          "tests/pytests/unit/states/test_kubernetes.py||tests/pytests/unit/states/test_kubernetes.py",
          "tests/pytests/unit/states/test_layman.py||tests/pytests/unit/states/test_layman.py",
          "tests/pytests/unit/states/test_ldap.py||tests/pytests/unit/states/test_ldap.py",
          "tests/pytests/unit/states/test_libcloud_dns.py||tests/pytests/unit/states/test_libcloud_dns.py",
          "tests/pytests/unit/states/test_linux_acl.py||tests/pytests/unit/states/test_linux_acl.py",
          "tests/pytests/unit/states/test_locale.py||tests/pytests/unit/states/test_locale.py",
          "tests/pytests/unit/states/test_lvm.py||tests/pytests/unit/states/test_lvm.py",
          "tests/pytests/unit/states/test_lvs_server.py||tests/pytests/unit/states/test_lvs_server.py",
          "tests/pytests/unit/states/test_lvs_service.py||tests/pytests/unit/states/test_lvs_service.py",
          "tests/pytests/unit/states/test_lxc.py||tests/pytests/unit/states/test_lxc.py",
          "tests/pytests/unit/states/test_mac_assistive.py||tests/pytests/unit/states/test_mac_assistive.py",
          "tests/pytests/unit/states/test_mac_keychain.py||tests/pytests/unit/states/test_mac_keychain.py",
          "tests/pytests/unit/states/test_mac_xattr.py||tests/pytests/unit/states/test_mac_xattr.py",
          "tests/pytests/unit/states/test_macdefaults.py||tests/pytests/unit/states/test_macdefaults.py",
          "tests/pytests/unit/states/test_macpackage.py||tests/pytests/unit/states/test_macpackage.py",
          "tests/pytests/unit/states/test_makeconf.py||tests/pytests/unit/states/test_makeconf.py",
          "tests/pytests/unit/states/test_mdadm_raid.py||tests/pytests/unit/states/test_mdadm_raid.py",
          "tests/pytests/unit/states/test_memcached.py||tests/pytests/unit/states/test_memcached.py",
          "tests/pytests/unit/states/test_modjk.py||tests/pytests/unit/states/test_modjk.py",
          "tests/pytests/unit/states/test_modjk_worker.py||tests/pytests/unit/states/test_modjk_worker.py",
          "tests/pytests/unit/states/test_mongodb_database.py||tests/pytests/unit/states/test_mongodb_database.py",
          "tests/pytests/unit/states/test_mongodb_user.py||tests/pytests/unit/states/test_mongodb_user.py",
          "tests/pytests/unit/states/test_mount.py||tests/pytests/unit/states/test_mount.py",
          "tests/pytests/unit/states/test_net_napalm_yang.py||tests/pytests/unit/states/test_net_napalm_yang.py",
          "tests/pytests/unit/states/test_netconfig.py||tests/pytests/unit/states/test_netconfig.py",
          "tests/pytests/unit/states/test_network.py||tests/pytests/unit/states/test_network.py",
          "tests/pytests/unit/states/test_nexus.py||tests/pytests/unit/states/test_nexus.py",
          "tests/pytests/unit/states/test_nftables.py||tests/pytests/unit/states/test_nftables.py",
          "tests/pytests/unit/states/test_npm.py||tests/pytests/unit/states/test_npm.py",
          "tests/pytests/unit/states/test_ntp.py||tests/pytests/unit/states/test_ntp.py",
          "tests/pytests/unit/states/test_nxos.py||tests/pytests/unit/states/test_nxos.py",
          "tests/pytests/unit/states/test_openstack_config.py||tests/pytests/unit/states/test_openstack_config.py",
          "tests/pytests/unit/states/test_openvswitch_bridge.py||tests/pytests/unit/states/test_openvswitch_bridge.py",
          "tests/pytests/unit/states/test_openvswitch_db.py||tests/pytests/unit/states/test_openvswitch_db.py",
          "tests/pytests/unit/states/test_openvswitch_port.py||tests/pytests/unit/states/test_openvswitch_port.py",
          "tests/pytests/unit/states/test_pagerduty.py||tests/pytests/unit/states/test_pagerduty.py",
          "tests/pytests/unit/states/test_pdbedit.py||tests/pytests/unit/states/test_pdbedit.py",
          "tests/pytests/unit/states/test_pecl.py||tests/pytests/unit/states/test_pecl.py",
          "tests/pytests/unit/states/test_pip.py||tests/pytests/unit/states/test_pip.py",
          "tests/pytests/unit/states/test_pkg.py||tests/pytests/unit/states/test_pkg.py",
          "tests/pytests/unit/states/test_pkgng.py||tests/pytests/unit/states/test_pkgng.py",
          "tests/pytests/unit/states/test_pkgrepo.py||tests/pytests/unit/states/test_pkgrepo.py",
          "tests/pytests/unit/states/test_portage_config.py||tests/pytests/unit/states/test_portage_config.py",
          "tests/pytests/unit/states/test_ports.py||tests/pytests/unit/states/test_ports.py",
          "tests/pytests/unit/states/test_powerpath.py||tests/pytests/unit/states/test_powerpath.py",
          "tests/pytests/unit/states/test_process.py||tests/pytests/unit/states/test_process.py",
          "tests/pytests/unit/states/test_proxy.py||tests/pytests/unit/states/test_proxy.py",
          "tests/pytests/unit/states/test_pyenv.py||tests/pytests/unit/states/test_pyenv.py",
          "tests/pytests/unit/states/test_pyrax_queues.py||tests/pytests/unit/states/test_pyrax_queues.py",
          "tests/pytests/unit/states/test_quota.py||tests/pytests/unit/states/test_quota.py",
          "tests/pytests/unit/states/test_rbenv.py||tests/pytests/unit/states/test_rbenv.py",
          "tests/pytests/unit/states/test_rdp.py||tests/pytests/unit/states/test_rdp.py",
          "tests/pytests/unit/states/test_redismod.py||tests/pytests/unit/states/test_redismod.py",
          "tests/pytests/unit/states/test_restconf.py||tests/pytests/unit/states/test_restconf.py",
          "tests/pytests/unit/states/test_rsync.py||tests/pytests/unit/states/test_rsync.py",
          "tests/pytests/unit/states/test_rvm.py||tests/pytests/unit/states/test_rvm.py",
          "tests/pytests/unit/states/test_saltutil.py||tests/pytests/unit/states/test_saltutil.py",
          "tests/pytests/unit/states/test_schedule.py||tests/pytests/unit/states/test_schedule.py",
          "tests/pytests/unit/states/test_selinux.py||tests/pytests/unit/states/test_selinux.py",
          "tests/pytests/unit/states/test_serverdensity_device.py||tests/pytests/unit/states/test_serverdensity_device.py",
          "tests/pytests/unit/states/test_service.py||tests/pytests/unit/states/test_service.py",
          "tests/pytests/unit/states/test_slack.py||tests/pytests/unit/states/test_slack.py",
          "tests/pytests/unit/states/test_smartos.py||tests/pytests/unit/states/test_smartos.py",
          "tests/pytests/unit/states/test_smtp.py||tests/pytests/unit/states/test_smtp.py",
          "tests/pytests/unit/states/test_splunk_search.py||tests/pytests/unit/states/test_splunk_search.py",
          "tests/pytests/unit/states/test_ssh_auth.py||tests/pytests/unit/states/test_ssh_auth.py",
          "tests/pytests/unit/states/test_ssh_known_hosts.py||tests/pytests/unit/states/test_ssh_known_hosts.py",
          "tests/pytests/unit/states/test_status.py||tests/pytests/unit/states/test_status.py",
          "tests/pytests/unit/states/test_supervisord.py||tests/pytests/unit/states/test_supervisord.py",
          "tests/pytests/unit/states/test_svn.py||tests/pytests/unit/states/test_svn.py",
          "tests/pytests/unit/states/test_sysctl.py||tests/pytests/unit/states/test_sysctl.py",
          "tests/pytests/unit/states/test_sysfs.py||tests/pytests/unit/states/test_sysfs.py",
          "tests/pytests/unit/states/test_sysrc.py||tests/pytests/unit/states/test_sysrc.py",
          "tests/pytests/unit/states/test_test.py||tests/pytests/unit/states/test_test.py",
          "tests/pytests/unit/states/test_timezone.py||tests/pytests/unit/states/test_timezone.py",
          "tests/pytests/unit/states/test_tomcat.py||tests/pytests/unit/states/test_tomcat.py",
          "tests/pytests/unit/states/test_user.py||tests/pytests/unit/states/test_user.py",
          "tests/pytests/unit/states/test_vault.py||tests/pytests/unit/states/test_vault.py",
          "tests/pytests/unit/states/test_vbox_guest.py||tests/pytests/unit/states/test_vbox_guest.py",
          "tests/pytests/unit/states/test_virtualenv_mod.py||tests/pytests/unit/states/test_virtualenv_mod.py",
          "tests/pytests/unit/states/test_webutil.py||tests/pytests/unit/states/test_webutil.py",
          "tests/pytests/unit/states/test_win_appx.py||tests/pytests/unit/states/test_win_appx.py",
          "tests/pytests/unit/states/test_win_certutil.py||tests/pytests/unit/states/test_win_certutil.py",
          "tests/pytests/unit/states/test_win_dism.py||tests/pytests/unit/states/test_win_dism.py",
          "tests/pytests/unit/states/test_win_dns_client.py||tests/pytests/unit/states/test_win_dns_client.py",
          "tests/pytests/unit/states/test_win_iis.py||tests/pytests/unit/states/test_win_iis.py",
          "tests/pytests/unit/states/test_win_lgpo.py||tests/pytests/unit/states/test_win_lgpo.py",
          "tests/pytests/unit/states/test_win_lgpo_reg.py||tests/pytests/unit/states/test_win_lgpo_reg.py",
          "tests/pytests/unit/states/test_win_license.py||tests/pytests/unit/states/test_win_license.py",
          "tests/pytests/unit/states/test_win_network.py||tests/pytests/unit/states/test_win_network.py",
          "tests/pytests/unit/states/test_win_path.py||tests/pytests/unit/states/test_win_path.py",
          "tests/pytests/unit/states/test_win_pki.py||tests/pytests/unit/states/test_win_pki.py",
          "tests/pytests/unit/states/test_win_powercfg.py||tests/pytests/unit/states/test_win_powercfg.py",
          "tests/pytests/unit/states/test_win_servermanager.py||tests/pytests/unit/states/test_win_servermanager.py",
          "tests/pytests/unit/states/test_win_snmp.py||tests/pytests/unit/states/test_win_snmp.py",
          "tests/pytests/unit/states/test_win_system.py||tests/pytests/unit/states/test_win_system.py",
          "tests/pytests/unit/states/test_win_wua.py||tests/pytests/unit/states/test_win_wua.py",
          "tests/pytests/unit/states/test_win_wusa.py||tests/pytests/unit/states/test_win_wusa.py",
          "tests/pytests/unit/states/test_winrepo.py||tests/pytests/unit/states/test_winrepo.py",
          "tests/pytests/unit/states/test_xml.py||tests/pytests/unit/states/test_xml.py",
          "tests/pytests/unit/states/test_xmpp.py||tests/pytests/unit/states/test_xmpp.py",
          "tests/pytests/unit/states/test_zfs.py||tests/pytests/unit/states/test_zfs.py",
          "tests/pytests/unit/states/test_zk_concurrency.py||tests/pytests/unit/states/test_zk_concurrency.py",
          "tests/pytests/unit/states/test_zpool.py||tests/pytests/unit/states/test_zpool.py",
          "tests/pytests/unit/states/virt/conftest.py||tests/pytests/unit/states/virt/conftest.py",
          "tests/pytests/unit/states/virt/helpers.py||tests/pytests/unit/states/virt/helpers.py",
          "tests/pytests/unit/states/virt/test_domain.py||tests/pytests/unit/states/virt/test_domain.py",
          "tests/pytests/unit/states/virt/test_network.py||tests/pytests/unit/states/virt/test_network.py",
          "tests/pytests/unit/states/zabbix/test_action.py||tests/pytests/unit/states/zabbix/test_action.py",
          "tests/pytests/unit/states/zabbix/test_host.py||tests/pytests/unit/states/zabbix/test_host.py",
          "tests/pytests/unit/states/zabbix/test_template.py||tests/pytests/unit/states/zabbix/test_template.py",
          "tests/pytests/unit/states/zabbix/test_valuemap.py||tests/pytests/unit/states/zabbix/test_valuemap.py",
          "tests/pytests/unit/test_acl.py||tests/pytests/unit/test_acl.py",
          "tests/pytests/unit/test_auth.py||tests/pytests/unit/test_auth.py",
          "tests/pytests/unit/test_beacons.py||tests/pytests/unit/test_beacons.py",
          "tests/pytests/unit/test_client.py||tests/pytests/unit/test_client.py",
          "tests/pytests/unit/test_config.py||tests/pytests/unit/test_config.py",
          "tests/pytests/unit/test_crypt.py||tests/pytests/unit/test_crypt.py",
          "tests/pytests/unit/test_defaults.py||tests/pytests/unit/test_defaults.py",
          "tests/pytests/unit/test_log.py||tests/pytests/unit/test_log.py",
          "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
          "tests/pytests/unit/test_minion.py||tests/pytests/unit/test_minion.py",
          "tests/pytests/unit/test_payload.py||tests/pytests/unit/test_payload.py",
          "tests/pytests/unit/test_pytest_pass_fail.py||tests/pytests/unit/test_pytest_pass_fail.py",
          "tests/pytests/unit/test_scripts.py||tests/pytests/unit/test_scripts.py",
          "tests/pytests/unit/test_syspaths.py||tests/pytests/unit/test_syspaths.py",
          "tests/pytests/unit/test_template.py||tests/pytests/unit/test_template.py",
          "tests/pytests/unit/test_version.py||tests/pytests/unit/test_version.py",
          "tests/pytests/unit/tokens/test_localfs.py||tests/pytests/unit/tokens/test_localfs.py",
          "tests/pytests/unit/tops/test_ext_nodes.py||tests/pytests/unit/tops/test_ext_nodes.py",
          "tests/pytests/unit/transport/test_base.py||tests/pytests/unit/transport/test_base.py",
          "tests/pytests/unit/transport/test_ipc.py||tests/pytests/unit/transport/test_ipc.py",
          "tests/pytests/unit/transport/test_publish_client.py||tests/pytests/unit/transport/test_publish_client.py",
          "tests/pytests/unit/transport/test_tcp.py||tests/pytests/unit/transport/test_tcp.py",
          "tests/pytests/unit/transport/test_zeromq.py||tests/pytests/unit/transport/test_zeromq.py",
          "tests/pytests/unit/utils/event/test_event.py||tests/pytests/unit/utils/event/test_event.py",
          "tests/pytests/unit/utils/event/test_event_return.py||tests/pytests/unit/utils/event/test_event_return.py",
          "tests/pytests/unit/utils/jinjconftest.py||tests/pytests/unit/utils/jinja/conftest.py",
          "tests/pytests/unit/utils/jinjtest_custom_extensions.py||tests/pytests/unit/utils/jinja/test_custom_extensions.py",
          "tests/pytests/unit/utils/jinjtest_dot_notation_looup.py||tests/pytests/unit/utils/jinja/test_dot_notation_looup.py",
          "tests/pytests/unit/utils/jinjtest_get_template.py||tests/pytests/unit/utils/jinja/test_get_template.py",
          "tests/pytests/unit/utils/jinjtest_jinja.py||tests/pytests/unit/utils/jinja/test_jinja.py",
          "tests/pytests/unit/utils/jinjtest_jinja_default_options.py||tests/pytests/unit/utils/jinja/test_jinja_default_options.py",
          "tests/pytests/unit/utils/jinjtest_salt_cache_loader.py||tests/pytests/unit/utils/jinja/test_salt_cache_loader.py",
          "tests/pytests/unit/utils/parsers/test_daemon_mixin.py||tests/pytests/unit/utils/parsers/test_daemon_mixin.py",
          "tests/pytests/unit/utils/parsers/test_log_parsers.py||tests/pytests/unit/utils/parsers/test_log_parsers.py",
          "tests/pytests/unit/utils/parsers/test_saltfile_mixin.py||tests/pytests/unit/utils/parsers/test_saltfile_mixin.py",
          "tests/pytests/unit/utils/scheduler/conftest.py||tests/pytests/unit/utils/scheduler/conftest.py",
          "tests/pytests/unit/utils/scheduler/test_error.py||tests/pytests/unit/utils/scheduler/test_error.py",
          "tests/pytests/unit/utils/scheduler/test_eval.py||tests/pytests/unit/utils/scheduler/test_eval.py",
          "tests/pytests/unit/utils/scheduler/test_helpers.py||tests/pytests/unit/utils/scheduler/test_helpers.py",
          "tests/pytests/unit/utils/scheduler/test_maxrunning.py||tests/pytests/unit/utils/scheduler/test_maxrunning.py",
          "tests/pytests/unit/utils/scheduler/test_postpone.py||tests/pytests/unit/utils/scheduler/test_postpone.py",
          "tests/pytests/unit/utils/scheduler/test_run_job.py||tests/pytests/unit/utils/scheduler/test_run_job.py",
          "tests/pytests/unit/utils/scheduler/test_schedule.py||tests/pytests/unit/utils/scheduler/test_schedule.py",
          "tests/pytests/unit/utils/scheduler/test_skip.py||tests/pytests/unit/utils/scheduler/test_skip.py",
          "tests/pytests/unit/utils/templates/conftest.py||tests/pytests/unit/utils/templates/conftest.py",
          "tests/pytests/unit/utils/templates/test_cheetah.py||tests/pytests/unit/utils/templates/test_cheetah.py",
          "tests/pytests/unit/utils/templates/test_genshi.py||tests/pytests/unit/utils/templates/test_genshi.py",
          "tests/pytests/unit/utils/templates/test_jinja.py||tests/pytests/unit/utils/templates/test_jinja.py",
          "tests/pytests/unit/utils/templates/test_mako.py||tests/pytests/unit/utils/templates/test_mako.py",
          "tests/pytests/unit/utils/templates/test_wempy.py||tests/pytests/unit/utils/templates/test_wempy.py",
          "tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py||tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py",
          "tests/pytests/unit/utils/test_args.py||tests/pytests/unit/utils/test_args.py",
          "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py",
          "tests/pytests/unit/utils/test_beacons.py||tests/pytests/unit/utils/test_beacons.py",
          "tests/pytests/unit/utils/test_cache.py||tests/pytests/unit/utils/test_cache.py",
          "tests/pytests/unit/utils/test_cloud.py||tests/pytests/unit/utils/test_cloud.py",
          "tests/pytests/unit/utils/test_compat.py||tests/pytests/unit/utils/test_compat.py",
          "tests/pytests/unit/utils/test_crypt.py||tests/pytests/unit/utils/test_crypt.py",
          "tests/pytests/unit/utils/test_data.py||tests/pytests/unit/utils/test_data.py",
          "tests/pytests/unit/utils/test_dictdiffer.py||tests/pytests/unit/utils/test_dictdiffer.py",
          "tests/pytests/unit/utils/test_etcd_util.py||tests/pytests/unit/utils/test_etcd_util.py",
          "tests/pytests/unit/utils/test_files.py||tests/pytests/unit/utils/test_files.py",
          "tests/pytests/unit/utils/test_gitfs.py||tests/pytests/unit/utils/test_gitfs.py",
          "tests/pytests/unit/utils/test_http.py||tests/pytests/unit/utils/test_http.py",
          "tests/pytests/unit/utils/test_listdiffer.py||tests/pytests/unit/utils/test_listdiffer.py",
          "tests/pytests/unit/utils/test_mako.py||tests/pytests/unit/utils/test_mako.py",
          "tests/pytests/unit/utils/test_minions.py||tests/pytests/unit/utils/test_minions.py",
          "tests/pytests/unit/utils/test_msgpack.py||tests/pytests/unit/utils/test_msgpack.py",
          "tests/pytests/unit/utils/test_nacl.py||tests/pytests/unit/utils/test_nacl.py",
          "tests/pytests/unit/utils/test_network.py||tests/pytests/unit/utils/test_network.py",
          "tests/pytests/unit/utils/test_package.py||tests/pytests/unit/utils/test_package.py",
          "tests/pytests/unit/utils/test_pkg.py||tests/pytests/unit/utils/test_pkg.py",
          "tests/pytests/unit/utils/test_platform.py||tests/pytests/unit/utils/test_platform.py",
          "tests/pytests/unit/utils/test_pycrypto.py||tests/pytests/unit/utils/test_pycrypto.py",
          "tests/pytests/unit/utils/test_pyobjects.py||tests/pytests/unit/utils/test_pyobjects.py",
          "tests/pytests/unit/utils/test_reactor.py||tests/pytests/unit/utils/test_reactor.py",
          "tests/pytests/unit/utils/test_rsax931.py||tests/pytests/unit/utils/test_rsax931.py",
          "tests/pytests/unit/utils/test_schedule.py||tests/pytests/unit/utils/test_schedule.py",
          "tests/pytests/unit/utils/test_slack.py||tests/pytests/unit/utils/test_slack.py",
          "tests/pytests/unit/utils/test_stringutils.py||tests/pytests/unit/utils/test_stringutils.py",
          "tests/pytests/unit/utils/test_thin.py||tests/pytests/unit/utils/test_thin.py",
          "tests/pytests/unit/utils/test_user.py||tests/pytests/unit/utils/test_user.py",
          "tests/pytests/unit/utils/test_versions.py||tests/pytests/unit/utils/test_versions.py",
          "tests/pytests/unit/utils/test_vt.py||tests/pytests/unit/utils/test_vt.py",
          "tests/pytests/unit/utils/test_win_functions.py||tests/pytests/unit/utils/test_win_functions.py",
          "tests/pytests/unit/utils/test_win_lgpo_reg.py||tests/pytests/unit/utils/test_win_lgpo_reg.py",
          "tests/pytests/unit/utils/test_win_network.py||tests/pytests/unit/utils/test_win_network.py",
          "tests/pytests/unit/utils/test_win_pwsh.py||tests/pytests/unit/utils/test_win_pwsh.py",
          "tests/pytests/unit/utils/test_win_reg.py||tests/pytests/unit/utils/test_win_reg.py",
          "tests/pytests/unit/utils/test_win_runas.py||tests/pytests/unit/utils/test_win_runas.py",
          "tests/pytests/unit/utils/test_win_update.py||tests/pytests/unit/utils/test_win_update.py",
          "tests/pytests/unit/utils/test_x509.py||tests/pytests/unit/utils/test_x509.py",
          "tests/pytests/unit/utils/test_xmlutil.py||tests/pytests/unit/utils/test_xmlutil.py",
          "tests/pytests/unit/utils/vault/conftest.py||tests/pytests/unit/utils/vault/conftest.py",
          "tests/pytests/unit/utils/vault/test_api.py||tests/pytests/unit/utils/vault/test_api.py",
          "tests/pytests/unit/utils/vault/test_auth.py||tests/pytests/unit/utils/vault/test_auth.py",
          "tests/pytests/unit/utils/vault/test_cache.py||tests/pytests/unit/utils/vault/test_cache.py",
          "tests/pytests/unit/utils/vault/test_client.py||tests/pytests/unit/utils/vault/test_client.py",
          "tests/pytests/unit/utils/vault/test_factory.py||tests/pytests/unit/utils/vault/test_factory.py",
          "tests/pytests/unit/utils/vault/test_helpers.py||tests/pytests/unit/utils/vault/test_helpers.py",
          "tests/pytests/unit/utils/vault/test_kv.py||tests/pytests/unit/utils/vault/test_kv.py",
          "tests/pytests/unit/utils/vault/test_leases.py||tests/pytests/unit/utils/vault/test_leases.py",
          "tests/pytests/unit/utils/verify/test_clean_path.py||tests/pytests/unit/utils/verify/test_clean_path.py",
          "tests/pytests/unit/utils/verify/test_clean_path_link.py||tests/pytests/unit/utils/verify/test_clean_path_link.py",
          "tests/pytests/unit/utils/verify/test_verify.py||tests/pytests/unit/utils/verify/test_verify.py",
          "tests/pytests/unit/utils/verify/test_verify_logs.py||tests/pytests/unit/utils/verify/test_verify_logs.py",
          "tests/pytests/unit/utils/win_lgpo/test_auditpol.py||tests/pytests/unit/utils/win_lgpo/test_auditpol.py",
          "tests/pytests/unit/utils/win_lgpo/test_netsh.py||tests/pytests/unit/utils/win_lgpo/test_netsh.py",
          "tests/pytests/unit/wheel/test_file_roots.py||tests/pytests/unit/wheel/test_file_roots.py",
          "tests/runtests.py||tests/runtests.py",
          "tests/salt-tcpdump.py||tests/salt-tcpdump.py",
          "tests/saltsh.py||tests/saltsh.py",
          "tests/support/case.py||tests/support/case.py",
          "tests/support/cli_scripts.py||tests/support/cli_scripts.py",
          "tests/support/copyartifacts.py||tests/support/copyartifacts.py",
          "tests/support/events.py||tests/support/events.py",
          "tests/support/ext/console.py||tests/support/ext/console.py",
          "tests/support/generate-names-file-from-failed-test-reports.py||tests/support/generate-names-file-from-failed-test-reports.py",
          "tests/support/gitfs.py||tests/support/gitfs.py",
          "tests/support/helpers.py||tests/support/helpers.py",
          "tests/support/kernelpkg.py||tests/support/kernelpkg.py",
          "tests/support/mixins.py||tests/support/mixins.py",
          "tests/support/mock.py||tests/support/mock.py",
          "tests/support/napalm.py||tests/support/napalm.py",
          "tests/support/netapi.py||tests/support/netapi.py",
          "tests/support/paths.py||tests/support/paths.py",
          "tests/support/pkg.py||tests/support/pkg.py",
          "tests/support/pytest/etcd.py||tests/support/pytest/etcd.py",
          "tests/support/pytest/formulas.py||tests/support/pytest/formulas.py",
          "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py",
          "tests/support/pytest/loader.py||tests/support/pytest/loader.py",
          "tests/support/pytest/mysql.py||tests/support/pytest/mysql.py",
          "tests/support/pytest/transport.py||tests/support/pytest/transport.py",
          "tests/support/pytest/vault.py||tests/support/pytest/vault.py",
          "tests/support/runtests.py||tests/support/runtests.py",
          "tests/support/sminion.py||tests/support/sminion.py",
          "tests/support/unit.py||tests/support/unit.py",
          "tests/support/virt.py||tests/support/virt.py",
          "tests/support/win_installer.py||tests/support/win_installer.py",
          "tests/support/xmlunit.py||tests/support/xmlunit.py",
          "tests/support/zfs.py||tests/support/zfs.py",
          "tests/unit/conftest.py||tests/unit/conftest.py",
          "tests/unit/ext/test_ipaddress.py||tests/unit/ext/test_ipaddress.py",
          "tests/unit/modules/inspectlib/test_collector.py||tests/unit/modules/inspectlitest_collector.py",
          "tests/unit/modules/inspectlib/test_fsdb.py||tests/unit/modules/inspectlitest_fsdb.py",
          "tests/unit/modules/nxos/nxos_config.py||tests/unit/modules/nxos/nxos_config.py",
          "tests/unit/modules/nxos/nxos_grains.py||tests/unit/modules/nxos/nxos_grains.py",
          "tests/unit/modules/nxos/nxos_n36k.py||tests/unit/modules/nxos/nxos_n36k.py",
          "tests/unit/modules/nxos/nxos_n3k.py||tests/unit/modules/nxos/nxos_n3k.py",
          "tests/unit/modules/nxos/nxos_n5k.py||tests/unit/modules/nxos/nxos_n5k.py",
          "tests/unit/modules/nxos/nxos_n7k.py||tests/unit/modules/nxos/nxos_n7k.py",
          "tests/unit/modules/nxos/nxos_n93k.py||tests/unit/modules/nxos/nxos_n93k.py",
          "tests/unit/modules/nxos/nxos_n93klxc.py||tests/unit/modules/nxos/nxos_n93klxc.py",
          "tests/unit/modules/nxos/nxos_n95k.py||tests/unit/modules/nxos/nxos_n95k.py",
          "tests/unit/modules/nxos/nxos_platform.py||tests/unit/modules/nxos/nxos_platform.py",
          "tests/unit/modules/nxos/nxos_show_cmd_output.py||tests/unit/modules/nxos/nxos_show_cmd_output.py",
          "tests/unit/modules/nxos/nxos_show_run.py||tests/unit/modules/nxos/nxos_show_run.py",
          "tests/unit/modules/test_boto3_elasticsearch.py||tests/unit/modules/test_boto3_elasticsearch.py",
          "tests/unit/modules/test_boto3_route53.py||tests/unit/modules/test_boto3_route53.py",
          "tests/unit/modules/test_boto_apigateway.py||tests/unit/modules/test_boto_apigateway.py",
          "tests/unit/modules/test_boto_cloudtrail.py||tests/unit/modules/test_boto_cloudtrail.py",
          "tests/unit/modules/test_boto_cloudwatch_event.py||tests/unit/modules/test_boto_cloudwatch_event.py",
          "tests/unit/modules/test_boto_cognitoidentity.py||tests/unit/modules/test_boto_cognitoidentity.py",
          "tests/unit/modules/test_boto_elasticsearch_domain.py||tests/unit/modules/test_boto_elasticsearch_domain.py",
          "tests/unit/modules/test_boto_elb.py||tests/unit/modules/test_boto_elb.py",
          "tests/unit/modules/test_boto_iot.py||tests/unit/modules/test_boto_iot.py",
          "tests/unit/modules/test_boto_lambda.py||tests/unit/modules/test_boto_lambda.py",
          "tests/unit/modules/test_boto_route53.py||tests/unit/modules/test_boto_route53.py",
          "tests/unit/modules/test_boto_s3_bucket.py||tests/unit/modules/test_boto_s3_bucket.py",
          "tests/unit/modules/test_boto_secgroup.py||tests/unit/modules/test_boto_secgroup.py",
          "tests/unit/modules/test_boto_vpc.py||tests/unit/modules/test_boto_vpc.py",
          "tests/unit/modules/test_bsd_shadow.py||tests/unit/modules/test_bsd_shadow.py",
          "tests/unit/modules/test_cron.py||tests/unit/modules/test_cron.py",
          "tests/unit/modules/test_elasticsearch.py||tests/unit/modules/test_elasticsearch.py",
          "tests/unit/modules/test_freezer.py||tests/unit/modules/test_freezer.py",
          "tests/unit/modules/test_heat.py||tests/unit/modules/test_heat.py",
          "tests/unit/modules/test_hosts.py||tests/unit/modules/test_hosts.py",
          "tests/unit/modules/test_influxdb08mod.py||tests/unit/modules/test_influxdb08mod.py",
          "tests/unit/modules/test_ini_manage.py||tests/unit/modules/test_ini_manage.py",
          "tests/unit/modules/test_jboss7.py||tests/unit/modules/test_jboss7.py",
          "tests/unit/modules/test_jboss7_cli.py||tests/unit/modules/test_jboss7_cli.py",
          "tests/unit/modules/test_k8s.py||tests/unit/modules/test_k8s.py",
          "tests/unit/modules/test_kapacitor.py||tests/unit/modules/test_kapacitor.py",
          "tests/unit/modules/test_kernelpkg_linux_apt.py||tests/unit/modules/test_kernelpkg_linux_apt.py",
          "tests/unit/modules/test_kernelpkg_linux_yum.py||tests/unit/modules/test_kernelpkg_linux_yum.py",
          "tests/unit/modules/test_kubernetesmod.py||tests/unit/modules/test_kubernetesmod.py",
          "tests/unit/modules/test_libcloud_compute.py||tests/unit/modules/test_libcloud_compute.py",
          "tests/unit/modules/test_libcloud_dns.py||tests/unit/modules/test_libcloud_dns.py",
          "tests/unit/modules/test_libcloud_loadbalancer.py||tests/unit/modules/test_libcloud_loadbalancer.py",
          "tests/unit/modules/test_libcloud_storage.py||tests/unit/modules/test_libcloud_storage.py",
          "tests/unit/modules/test_linux_acl.py||tests/unit/modules/test_linux_acl.py",
          "tests/unit/modules/test_localemod.py||tests/unit/modules/test_localemod.py",
          "tests/unit/modules/test_memcached.py||tests/unit/modules/test_memcached.py",
          "tests/unit/modules/test_napalm_probes.py||tests/unit/modules/test_napalm_probes.py",
          "tests/unit/modules/test_napalm_yang_mod.py||tests/unit/modules/test_napalm_yang_mod.py",
          "tests/unit/modules/test_netbox.py||tests/unit/modules/test_netbox.py",
          "tests/unit/modules/test_netmiko_mod.py||tests/unit/modules/test_netmiko_mod.py",
          "tests/unit/modules/test_netscaler.py||tests/unit/modules/test_netscaler.py",
          "tests/unit/modules/test_network.py||tests/unit/modules/test_network.py",
          "tests/unit/modules/test_neutron.py||tests/unit/modules/test_neutron.py",
          "tests/unit/modules/test_nginx.py||tests/unit/modules/test_nginx.py",
          "tests/unit/modules/test_nilrt_ip.py||tests/unit/modules/test_nilrt_ip.py",
          "tests/unit/modules/test_nova.py||tests/unit/modules/test_nova.py",
          "tests/unit/modules/test_nxos.py||tests/unit/modules/test_nxos.py",
          "tests/unit/modules/test_nxos_upgrade.py||tests/unit/modules/test_nxos_upgrade.py",
          "tests/unit/modules/test_openstack_config.py||tests/unit/modules/test_openstack_config.py",
          "tests/unit/modules/test_opkg.py||tests/unit/modules/test_opkg.py",
          "tests/unit/modules/test_parted_partition.py||tests/unit/modules/test_parted_partition.py",
          "tests/unit/modules/test_pdbedit.py||tests/unit/modules/test_pdbedit.py",
          "tests/unit/modules/test_random_org.py||tests/unit/modules/test_random_org.py",
          "tests/unit/modules/test_rh_ip.py||tests/unit/modules/test_rh_ip.py",
          "tests/unit/modules/test_saltcheck.py||tests/unit/modules/test_saltcheck.py",
          "tests/unit/modules/test_snapper.py||tests/unit/modules/test_snapper.py",
          "tests/unit/modules/test_solarisipspkg.py||tests/unit/modules/test_solarisipspkg.py",
          "tests/unit/modules/test_sqlite3.py||tests/unit/modules/test_sqlite3.py",
          "tests/unit/modules/test_ssh.py||tests/unit/modules/test_ssh.py",
          "tests/unit/modules/test_supervisord.py||tests/unit/modules/test_supervisord.py",
          "tests/unit/modules/test_swarm.py||tests/unit/modules/test_swarm.py",
          "tests/unit/modules/test_sysmod.py||tests/unit/modules/test_sysmod.py",
          "tests/unit/modules/test_twilio_notify.py||tests/unit/modules/test_twilio_notify.py",
          "tests/unit/modules/test_useradd.py||tests/unit/modules/test_useradd.py",
          "tests/unit/modules/test_virt.py||tests/unit/modules/test_virt.py",
          "tests/unit/modules/test_virtualenv_mod.py||tests/unit/modules/test_virtualenv_mod.py",
          "tests/unit/modules/test_vsphere.py||tests/unit/modules/test_vsphere.py",
          "tests/unit/modules/test_win_groupadd.py||tests/unit/modules/test_win_groupadd.py",
          "tests/unit/modules/test_win_status.py||tests/unit/modules/test_win_status.py",
          "tests/unit/modules/test_win_system.py||tests/unit/modules/test_win_system.py",
          "tests/unit/modules/test_x509.py||tests/unit/modules/test_x509.py",
          "tests/unit/modules/test_zcbuildout.py||tests/unit/modules/test_zcbuildout.py",
          "tests/unit/modules/test_zypperpkg.py||tests/unit/modules/test_zypperpkg.py",
          "tests/unit/netapi/rest_tornado/test_saltnado.py||tests/unit/netapi/rest_tornado/test_saltnado.py",
          "tests/unit/states/test_boto_apigateway.py||tests/unit/states/test_boto_apigateway.py",
          "tests/unit/states/test_boto_cognitoidentity.py||tests/unit/states/test_boto_cognitoidentity.py",
          "tests/unit/states/test_boto_vpc.py||tests/unit/states/test_boto_vpc.py",
          "tests/unit/states/test_cron.py||tests/unit/states/test_cron.py",
          "tests/unit/states/test_disk.py||tests/unit/states/test_disk.py",
          "tests/unit/states/test_esxdatacenter.py||tests/unit/states/test_esxdatacenter.py",
          "tests/unit/states/test_esxi.py||tests/unit/states/test_esxi.py",
          "tests/unit/states/test_group.py||tests/unit/states/test_group.py",
          "tests/unit/states/test_heat.py||tests/unit/states/test_heat.py",
          "tests/unit/states/test_ipset.py||tests/unit/states/test_ipset.py",
          "tests/unit/states/test_loop.py||tests/unit/states/test_loop.py",
          "tests/unit/states/test_module.py||tests/unit/states/test_module.py",
          "tests/unit/states/test_pip_state.py||tests/unit/states/test_pip_state.py",
          "tests/unit/states/test_syslog_ng.py||tests/unit/states/test_syslog_ng.py",
          "tests/unit/states/test_virt.py||tests/unit/states/test_virt.py",
          "tests/unit/states/test_x509.py||tests/unit/states/test_x509.py",
          "tests/unit/states/test_zcbuildout.py||tests/unit/states/test_zcbuildout.py",
          "tests/unit/test_config.py||tests/unit/test_config.py",
          "tests/unit/test_engines.py||tests/unit/test_engines.py",
          "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py",
          "tests/unit/test_loader.py||tests/unit/test_loader.py",
          "tests/unit/test_mock.py||tests/unit/test_mock.py",
          "tests/unit/test_module_names.py||tests/unit/test_module_names.py",
          "tests/unit/test_pillar.py||tests/unit/test_pillar.py",
          "tests/unit/test_proxy_minion.py||tests/unit/test_proxy_minion.py",
          "tests/unit/test_virtualname.py||tests/unit/test_virtualname.py",
          "tests/unit/test_zypp_plugins.py||tests/unit/test_zypp_plugins.py",
          "tests/unit/transport/mixins.py||tests/unit/transport/mixins.py",
          "tests/unit/transport/test_ipc.py||tests/unit/transport/test_ipc.py",
          "tests/unit/transport/test_tcp.py||tests/unit/transport/test_tcp.py",
          "tests/unit/utils/test_aggregation.py||tests/unit/utils/test_aggregation.py",
          "tests/unit/utils/test_asynchronous.py||tests/unit/utils/test_asynchronous.py",
          "tests/unit/utils/test_boto3mod.py||tests/unit/utils/test_boto3mod.py",
          "tests/unit/utils/test_botomod.py||tests/unit/utils/test_botomod.py",
          "tests/unit/utils/test_color.py||tests/unit/utils/test_color.py",
          "tests/unit/utils/test_configcomparer.py||tests/unit/utils/test_configcomparer.py",
          "tests/unit/utils/test_configparser.py||tests/unit/utils/test_configparser.py",
          "tests/unit/utils/test_context.py||tests/unit/utils/test_context.py",
          "tests/unit/utils/test_dateutils.py||tests/unit/utils/test_dateutils.py",
          "tests/unit/utils/test_decorators.py||tests/unit/utils/test_decorators.py",
          "tests/unit/utils/test_dicttrim.py||tests/unit/utils/test_dicttrim.py",
          "tests/unit/utils/test_dictupdate.py||tests/unit/utils/test_dictupdate.py",
          "tests/unit/utils/test_dns.py||tests/unit/utils/test_dns.py",
          "tests/unit/utils/test_doc.py||tests/unit/utils/test_doc.py",
          "tests/unit/utils/test_dockermod.py||tests/unit/utils/test_dockermod.py",
          "tests/unit/utils/test_environment.py||tests/unit/utils/test_environment.py",
          "tests/unit/utils/test_extend.py||tests/unit/utils/test_extend.py",
          "tests/unit/utils/test_filebuffer.py||tests/unit/utils/test_filebuffer.py",
          "tests/unit/utils/test_find.py||tests/unit/utils/test_find.py",
          "tests/unit/utils/test_gitfs.py||tests/unit/utils/test_gitfs.py",
          "tests/unit/utils/test_hashutils.py||tests/unit/utils/test_hashutils.py",
          "tests/unit/utils/test_immutabletypes.py||tests/unit/utils/test_immutabletypes.py",
          "tests/unit/utils/test_jid.py||tests/unit/utils/test_jid.py",
          "tests/unit/utils/test_job.py||tests/unit/utils/test_job.py",
          "tests/unit/utils/test_json.py||tests/unit/utils/test_json.py",
          "tests/unit/utils/test_kickstart.py||tests/unit/utils/test_kickstart.py",
          "tests/unit/utils/test_locales.py||tests/unit/utils/test_locales.py",
          "tests/unit/utils/test_mac_utils.py||tests/unit/utils/test_mac_utils.py",
          "tests/unit/utils/test_master.py||tests/unit/utils/test_master.py",
          "tests/unit/utils/test_minion.py||tests/unit/utils/test_minion.py",
          "tests/unit/utils/test_minions.py||tests/unit/utils/test_minions.py",
          "tests/unit/utils/test_msgpack.py||tests/unit/utils/test_msgpack.py",
          "tests/unit/utils/test_path.py||tests/unit/utils/test_path.py",
          "tests/unit/utils/test_pbm.py||tests/unit/utils/test_pbm.py",
          "tests/unit/utils/test_pkg.py||tests/unit/utils/test_pkg.py",
          "tests/unit/utils/test_process.py||tests/unit/utils/test_process.py",
          "tests/unit/utils/test_proxy.py||tests/unit/utils/test_proxy.py",
          "tests/unit/utils/test_pydsl.py||tests/unit/utils/test_pydsl.py",
          "tests/unit/utils/test_pyobjects.py||tests/unit/utils/test_pyobjects.py",
          "tests/unit/utils/test_reactor.py||tests/unit/utils/test_reactor.py",
          "tests/unit/utils/test_roster_matcher.py||tests/unit/utils/test_roster_matcher.py",
          "tests/unit/utils/test_sanitizers.py||tests/unit/utils/test_sanitizers.py",
          "tests/unit/utils/test_schema.py||tests/unit/utils/test_schema.py",
          "tests/unit/utils/test_sdb.py||tests/unit/utils/test_sdb.py",
          "tests/unit/utils/test_ssdp.py||tests/unit/utils/test_ssdp.py",
          "tests/unit/utils/test_state.py||tests/unit/utils/test_state.py",
          "tests/unit/utils/test_systemd.py||tests/unit/utils/test_systemd.py",
          "tests/unit/utils/test_thin.py||tests/unit/utils/test_thin.py",
          "tests/unit/utils/test_timed_subprocess.py||tests/unit/utils/test_timed_subprocess.py",
          "tests/unit/utils/test_timeout.py||tests/unit/utils/test_timeout.py",
          "tests/unit/utils/test_url.py||tests/unit/utils/test_url.py",
          "tests/unit/utils/test_vmware.py||tests/unit/utils/test_vmware.py",
          "tests/unit/utils/test_vsan.py||tests/unit/utils/test_vsan.py",
          "tests/unit/utils/test_vt.py||tests/unit/utils/test_vt.py",
          "tests/unit/utils/test_win_chcp.py||tests/unit/utils/test_win_chcp.py",
          "tests/unit/utils/test_win_dotnet.py||tests/unit/utils/test_win_dotnet.py",
          "tests/unit/utils/test_win_functions.py||tests/unit/utils/test_win_functions.py",
          "tests/unit/utils/test_win_osinfo.py||tests/unit/utils/test_win_osinfo.py",
          "tests/unit/utils/test_win_pdh.py||tests/unit/utils/test_win_pdh.py",
          "tests/unit/utils/test_win_service.py||tests/unit/utils/test_win_service.py",
          "tests/unit/utils/test_win_system.py||tests/unit/utils/test_win_system.py",
          "tests/unit/utils/test_xmlutil.py||tests/unit/utils/test_xmlutil.py",
          "tests/unit/utils/test_yamldumper.py||tests/unit/utils/test_yamldumper.py",
          "tests/unit/utils/test_yamlencoding.py||tests/unit/utils/test_yamlencoding.py",
          "tests/unit/utils/test_yamlloader.py||tests/unit/utils/test_yamlloader.py",
          "tests/unit/utils/test_zeromq.py||tests/unit/utils/test_zeromq.py",
          "tests/unit/utils/test_zfs.py||tests/unit/utils/test_zfs.py",
          "tests/unit/utils/validate/test_net.py||tests/unit/utils/validate/test_net.py",
          "tests/wheeltest.py||tests/wheeltest.py",
          "tests/zypp_plugin.py||tests/zypp_plugin.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
            "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
            "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py"
          ],
          "candidate": [
            "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py",
            "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py",
            "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py"
          ]
        }
      },
      "candidate_diff": {
        "salt/auth/django.py||salt/auth/django.py": [
          "File: salt/auth/django.py -> salt/auth/django.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/auth/keystone.py||salt/auth/keystone.py": [
          "File: salt/auth/keystone.py -> salt/auth/keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/auth/ldap.py||salt/auth/ldap.py": [
          "File: salt/auth/ldap.py -> salt/auth/ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/auth/mysql.py||salt/auth/mysql.py": [
          "File: salt/auth/mysql.py -> salt/auth/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/auth/yubico.py||salt/auth/yubico.py": [
          "File: salt/auth/yubico.py -> salt/auth/yubico.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/adb.py||salt/beacons/adb.py": [
          "File: salt/beacons/adb.py -> salt/beacons/adb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/aix_account.py||salt/beacons/aix_account.py": [
          "File: salt/beacons/aix_account.py -> salt/beacons/aix_account.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/avahi_announce.py||salt/beacons/avahi_announce.py": [
          "File: salt/beacons/avahi_announce.py -> salt/beacons/avahi_announce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/bonjour_announce.py||salt/beacons/bonjour_announce.py": [
          "File: salt/beacons/bonjour_announce.py -> salt/beacons/bonjour_announce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/btmp.py||salt/beacons/btmp.py": [
          "File: salt/beacons/btmp.py -> salt/beacons/btmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/glxinfo.py||salt/beacons/glxinfo.py": [
          "File: salt/beacons/glxinfo.py -> salt/beacons/glxinfo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/haproxy.py||salt/beacons/haproxy.py": [
          "File: salt/beacons/haproxy.py -> salt/beacons/haproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/junos_rre_keys.py||salt/beacons/junos_rre_keys.py": [
          "File: salt/beacons/junos_rre_keys.py -> salt/beacons/junos_rre_keys.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/smartos_imgadm.py||salt/beacons/smartos_imgadm.py": [
          "File: salt/beacons/smartos_imgadm.py -> salt/beacons/smartos_imgadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/smartos_vmadm.py||salt/beacons/smartos_vmadm.py": [
          "File: salt/beacons/smartos_vmadm.py -> salt/beacons/smartos_vmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/telegram_bot_msg.py||salt/beacons/telegram_bot_msg.py": [
          "File: salt/beacons/telegram_bot_msg.py -> salt/beacons/telegram_bot_msg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/twilio_txt_msg.py||salt/beacons/twilio_txt_msg.py": [
          "File: salt/beacons/twilio_txt_msg.py -> salt/beacons/twilio_txt_msg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/beacons/wtmp.py||salt/beacons/wtmp.py": [
          "File: salt/beacons/wtmp.py -> salt/beacons/wtmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/aliyun.py||salt/cloud/clouds/aliyun.py": [
          "File: salt/cloud/clouds/aliyun.py -> salt/cloud/clouds/aliyun.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/clc.py||salt/cloud/clouds/clc.py": [
          "File: salt/cloud/clouds/clc.py -> salt/cloud/clouds/clc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/cloudstack.py||salt/cloud/clouds/cloudstack.py": [
          "File: salt/cloud/clouds/cloudstack.py -> salt/cloud/clouds/cloudstack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/digitalocean.py||salt/cloud/clouds/digitalocean.py": [
          "File: salt/cloud/clouds/digitalocean.py -> salt/cloud/clouds/digitalocean.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/dimensiondata.py||salt/cloud/clouds/dimensiondata.py": [
          "File: salt/cloud/clouds/dimensiondata.py -> salt/cloud/clouds/dimensiondata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/ec2.py||salt/cloud/clouds/ec2.py": [
          "File: salt/cloud/clouds/ec2.py -> salt/cloud/clouds/ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/gce.py||salt/cloud/clouds/gce.py": [
          "File: salt/cloud/clouds/gce.py -> salt/cloud/clouds/gce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/gogrid.py||salt/cloud/clouds/gogrid.py": [
          "File: salt/cloud/clouds/gogrid.py -> salt/cloud/clouds/gogrid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/hetzner.py||salt/cloud/clouds/hetzner.py": [
          "File: salt/cloud/clouds/hetzner.py -> salt/cloud/clouds/hetzner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/joyent.py||salt/cloud/clouds/joyent.py": [
          "File: salt/cloud/clouds/joyent.py -> salt/cloud/clouds/joyent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/libvirt.py||salt/cloud/clouds/libvirt.py": [
          "File: salt/cloud/clouds/libvirt.py -> salt/cloud/clouds/libvirt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/linode.py||salt/cloud/clouds/linode.py": [
          "File: salt/cloud/clouds/linode.py -> salt/cloud/clouds/linode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/lxc.py||salt/cloud/clouds/lxc.py": [
          "File: salt/cloud/clouds/lxc.py -> salt/cloud/clouds/lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/oneandone.py||salt/cloud/clouds/oneandone.py": [
          "File: salt/cloud/clouds/oneandone.py -> salt/cloud/clouds/oneandone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/opennebula.py||salt/cloud/clouds/opennebula.py": [
          "File: salt/cloud/clouds/opennebula.py -> salt/cloud/clouds/opennebula.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/openstack.py||salt/cloud/clouds/openstack.py": [
          "File: salt/cloud/clouds/openstack.py -> salt/cloud/clouds/openstack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/packet.py||salt/cloud/clouds/packet.py": [
          "File: salt/cloud/clouds/packet.py -> salt/cloud/clouds/packet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/parallels.py||salt/cloud/clouds/parallels.py": [
          "File: salt/cloud/clouds/parallels.py -> salt/cloud/clouds/parallels.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/profitbricks.py||salt/cloud/clouds/profitbricks.py": [
          "File: salt/cloud/clouds/profitbricks.py -> salt/cloud/clouds/profitbricks.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/proxmox.py||salt/cloud/clouds/proxmox.py": [
          "File: salt/cloud/clouds/proxmox.py -> salt/cloud/clouds/proxmox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/pyrax.py||salt/cloud/clouds/pyrax.py": [
          "File: salt/cloud/clouds/pyrax.py -> salt/cloud/clouds/pyrax.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/qingcloud.py||salt/cloud/clouds/qingcloud.py": [
          "File: salt/cloud/clouds/qingcloud.py -> salt/cloud/clouds/qingcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/scaleway.py||salt/cloud/clouds/scaleway.py": [
          "File: salt/cloud/clouds/scaleway.py -> salt/cloud/clouds/scaleway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/softlayer.py||salt/cloud/clouds/softlayer.py": [
          "File: salt/cloud/clouds/softlayer.py -> salt/cloud/clouds/softlayer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/softlayer_hw.py||salt/cloud/clouds/softlayer_hw.py": [
          "File: salt/cloud/clouds/softlayer_hw.py -> salt/cloud/clouds/softlayer_hw.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/tencentcloud.py||salt/cloud/clouds/tencentcloud.py": [
          "File: salt/cloud/clouds/tencentcloud.py -> salt/cloud/clouds/tencentcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/vagrant.py||salt/cloud/clouds/vagrant.py": [
          "File: salt/cloud/clouds/vagrant.py -> salt/cloud/clouds/vagrant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/virtualbox.py||salt/cloud/clouds/virtualbox.py": [
          "File: salt/cloud/clouds/virtualbox.py -> salt/cloud/clouds/virtualbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/vmware.py||salt/cloud/clouds/vmware.py": [
          "File: salt/cloud/clouds/vmware.py -> salt/cloud/clouds/vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/vultrpy.py||salt/cloud/clouds/vultrpy.py": [
          "File: salt/cloud/clouds/vultrpy.py -> salt/cloud/clouds/vultrpy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/cloud/clouds/xen.py||salt/cloud/clouds/xen.py": [
          "File: salt/cloud/clouds/xen.py -> salt/cloud/clouds/xen.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/docker_events.py||salt/engines/docker_events.py": [
          "File: salt/engines/docker_events.py -> salt/engines/docker_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/fluent.py||salt/engines/fluent.py": [
          "File: salt/engines/fluent.py -> salt/engines/fluent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/http_logstash.py||salt/engines/http_logstash.py": [
          "File: salt/engines/http_logstash.py -> salt/engines/http_logstash.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/ircbot.py||salt/engines/ircbot.py": [
          "File: salt/engines/ircbot.py -> salt/engines/ircbot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/junos_syslog.py||salt/engines/junos_syslog.py": [
          "File: salt/engines/junos_syslog.py -> salt/engines/junos_syslog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/libvirt_events.py||salt/engines/libvirt_events.py": [
          "File: salt/engines/libvirt_events.py -> salt/engines/libvirt_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/logentries.py||salt/engines/logentries.py": [
          "File: salt/engines/logentries.py -> salt/engines/logentries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/logstash_engine.py||salt/engines/logstash_engine.py": [
          "File: salt/engines/logstash_engine.py -> salt/engines/logstash_engine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/napalm_syslog.py||salt/engines/napalm_syslog.py": [
          "File: salt/engines/napalm_syslog.py -> salt/engines/napalm_syslog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/redis_sentinel.py||salt/engines/redis_sentinel.py": [
          "File: salt/engines/redis_sentinel.py -> salt/engines/redis_sentinel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/slack.py||salt/engines/slack.py": [
          "File: salt/engines/slack.py -> salt/engines/slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/slack_bolt_engine.py||salt/engines/slack_bolt_engine.py": [
          "File: salt/engines/slack_bolt_engine.py -> salt/engines/slack_bolt_engine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/sqs_events.py||salt/engines/sqs_events.py": [
          "File: salt/engines/sqs_events.py -> salt/engines/sqs_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/engines/stalekey.py||salt/engines/stalekey.py": [
          "File: salt/engines/stalekey.py -> salt/engines/stalekey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/executors/docker.py||salt/executors/docker.py": [
          "File: salt/executors/docker.py -> salt/executors/docker.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/executors/splay.py||salt/executors/splay.py": [
          "File: salt/executors/splay.py -> salt/executors/splay.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/fileserver/gitfs.py||salt/fileserver/gitfs.py": [
          "File: salt/fileserver/gitfs.py -> salt/fileserver/gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/chronos.py||salt/grains/chronos.py": [
          "File: salt/grains/chronos.py -> salt/grains/chronos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/cimc.py||salt/grains/cimc.py": [
          "File: salt/grains/cimc.py -> salt/grains/cimc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/esxi.py||salt/grains/esxi.py": [
          "File: salt/grains/esxi.py -> salt/grains/esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/fibre_channel.py||salt/grains/fibre_channel.py": [
          "File: salt/grains/fibre_channel.py -> salt/grains/fibre_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/fx2.py||salt/grains/fx2.py": [
          "File: salt/grains/fx2.py -> salt/grains/fx2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/iscsi.py||salt/grains/iscsi.py": [
          "File: salt/grains/iscsi.py -> salt/grains/iscsi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/junos.py||salt/grains/junos.py": [
          "File: salt/grains/junos.py -> salt/grains/junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/lvm.py||salt/grains/lvm.py": [
          "File: salt/grains/lvm.py -> salt/grains/lvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/marathon.py||salt/grains/marathon.py": [
          "File: salt/grains/marathon.py -> salt/grains/marathon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/mdadm.py||salt/grains/mdadm.py": [
          "File: salt/grains/mdadm.py -> salt/grains/mdadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/mdata.py||salt/grains/mdata.py": [
          "File: salt/grains/mdata.py -> salt/grains/mdata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/metadata.py||salt/grains/metadata.py": [
          "File: salt/grains/metadata.py -> salt/grains/metadata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/metadata_gce.py||salt/grains/metadata_gce.py": [
          "File: salt/grains/metadata_gce.py -> salt/grains/metadata_gce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/napalm.py||salt/grains/napalm.py": [
          "File: salt/grains/napalm.py -> salt/grains/napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/nvme.py||salt/grains/nvme.py": [
          "File: salt/grains/nvme.py -> salt/grains/nvme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/nxos.py||salt/grains/nxos.py": [
          "File: salt/grains/nxos.py -> salt/grains/nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/panos.py||salt/grains/panos.py": [
          "File: salt/grains/panos.py -> salt/grains/panos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/philips_hue.py||salt/grains/philips_hue.py": [
          "File: salt/grains/philips_hue.py -> salt/grains/philips_hue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/rest_sample.py||salt/grains/rest_sample.py": [
          "File: salt/grains/rest_sample.py -> salt/grains/rest_sample.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/smartos.py||salt/grains/smartos.py": [
          "File: salt/grains/smartos.py -> salt/grains/smartos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/ssh_sample.py||salt/grains/ssh_sample.py": [
          "File: salt/grains/ssh_sample.py -> salt/grains/ssh_sample.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/grains/zfs.py||salt/grains/zfs.py": [
          "File: salt/grains/zfs.py -> salt/grains/zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/log_handlers/fluent_mod.py||salt/log_handlers/fluent_mod.py": [
          "File: salt/log_handlers/fluent_mod.py -> salt/log_handlers/fluent_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/log_handlers/log4mongo_mod.py||salt/log_handlers/log4mongo_mod.py": [
          "File: salt/log_handlers/log4mongo_mod.py -> salt/log_handlers/log4mongo_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/log_handlers/logstash_mod.py||salt/log_handlers/logstash_mod.py": [
          "File: salt/log_handlers/logstash_mod.py -> salt/log_handlers/logstash_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/log_handlers/sentry_mod.py||salt/log_handlers/sentry_mod.py": [
          "File: salt/log_handlers/sentry_mod.py -> salt/log_handlers/sentry_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/compound_match.py||salt/matchers/compound_match.py": [
          "File: salt/matchers/compound_match.py -> salt/matchers/compound_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/compound_pillar_exact_match.py||salt/matchers/compound_pillar_exact_match.py": [
          "File: salt/matchers/compound_pillar_exact_match.py -> salt/matchers/compound_pillar_exact_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/confirm_top.py||salt/matchers/confirm_top.py": [
          "File: salt/matchers/confirm_top.py -> salt/matchers/confirm_top.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/data_match.py||salt/matchers/data_match.py": [
          "File: salt/matchers/data_match.py -> salt/matchers/data_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/glob_match.py||salt/matchers/glob_match.py": [
          "File: salt/matchers/glob_match.py -> salt/matchers/glob_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/grain_match.py||salt/matchers/grain_match.py": [
          "File: salt/matchers/grain_match.py -> salt/matchers/grain_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/grain_pcre_match.py||salt/matchers/grain_pcre_match.py": [
          "File: salt/matchers/grain_pcre_match.py -> salt/matchers/grain_pcre_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/ipcidr_match.py||salt/matchers/ipcidr_match.py": [
          "File: salt/matchers/ipcidr_match.py -> salt/matchers/ipcidr_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/list_match.py||salt/matchers/list_match.py": [
          "File: salt/matchers/list_match.py -> salt/matchers/list_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/nodegroup_match.py||salt/matchers/nodegroup_match.py": [
          "File: salt/matchers/nodegroup_match.py -> salt/matchers/nodegroup_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/pcre_match.py||salt/matchers/pcre_match.py": [
          "File: salt/matchers/pcre_match.py -> salt/matchers/pcre_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/pillar_exact_match.py||salt/matchers/pillar_exact_match.py": [
          "File: salt/matchers/pillar_exact_match.py -> salt/matchers/pillar_exact_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/pillar_match.py||salt/matchers/pillar_match.py": [
          "File: salt/matchers/pillar_match.py -> salt/matchers/pillar_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/pillar_pcre_match.py||salt/matchers/pillar_pcre_match.py": [
          "File: salt/matchers/pillar_pcre_match.py -> salt/matchers/pillar_pcre_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/matchers/range_match.py||salt/matchers/range_match.py": [
          "File: salt/matchers/range_match.py -> salt/matchers/range_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/acme.py||salt/modules/acme.py": [
          "File: salt/modules/acme.py -> salt/modules/acme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/aix_group.py||salt/modules/aix_group.py": [
          "File: salt/modules/aix_group.py -> salt/modules/aix_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/aix_shadow.py||salt/modules/aix_shadow.py": [
          "File: salt/modules/aix_shadow.py -> salt/modules/aix_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/aixpkg.py||salt/modules/aixpkg.py": [
          "File: salt/modules/aixpkg.py -> salt/modules/aixpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/aliases.py||salt/modules/aliases.py": [
          "File: salt/modules/aliases.py -> salt/modules/aliases.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/alternatives.py||salt/modules/alternatives.py": [
          "File: salt/modules/alternatives.py -> salt/modules/alternatives.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ansiblegate.py||salt/modules/ansiblegate.py": [
          "File: salt/modules/ansiblegate.py -> salt/modules/ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/apcups.py||salt/modules/apcups.py": [
          "File: salt/modules/apcups.py -> salt/modules/apcups.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/apkpkg.py||salt/modules/apkpkg.py": [
          "File: salt/modules/apkpkg.py -> salt/modules/apkpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/aptly.py||salt/modules/aptly.py": [
          "File: salt/modules/aptly.py -> salt/modules/aptly.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/arista_pyeapi.py||salt/modules/arista_pyeapi.py": [
          "File: salt/modules/arista_pyeapi.py -> salt/modules/arista_pyeapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/artifactory.py||salt/modules/artifactory.py": [
          "File: salt/modules/artifactory.py -> salt/modules/artifactory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/at_solaris.py||salt/modules/at_solaris.py": [
          "File: salt/modules/at_solaris.py -> salt/modules/at_solaris.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/augeas_cfg.py||salt/modules/augeas_cfg.py": [
          "File: salt/modules/augeas_cfg.py -> salt/modules/augeas_cfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bamboohr.py||salt/modules/bamboohr.py": [
          "File: salt/modules/bamboohr.py -> salt/modules/bamboohr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bcache.py||salt/modules/bcache.py": [
          "File: salt/modules/bcache.py -> salt/modules/bcache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bigip.py||salt/modules/bigip.py": [
          "File: salt/modules/bigip.py -> salt/modules/bigip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bluez_bluetooth.py||salt/modules/bluez_bluetooth.py": [
          "File: salt/modules/bluez_bluetooth.py -> salt/modules/bluez_bluetooth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto3_elasticache.py||salt/modules/boto3_elasticache.py": [
          "File: salt/modules/boto3_elasticache.py -> salt/modules/boto3_elasticache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto3_elasticsearch.py||salt/modules/boto3_elasticsearch.py": [
          "File: salt/modules/boto3_elasticsearch.py -> salt/modules/boto3_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto3_route53.py||salt/modules/boto3_route53.py": [
          "File: salt/modules/boto3_route53.py -> salt/modules/boto3_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto3_sns.py||salt/modules/boto3_sns.py": [
          "File: salt/modules/boto3_sns.py -> salt/modules/boto3_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_apigateway.py||salt/modules/boto_apigateway.py": [
          "File: salt/modules/boto_apigateway.py -> salt/modules/boto_apigateway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_asg.py||salt/modules/boto_asg.py": [
          "File: salt/modules/boto_asg.py -> salt/modules/boto_asg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cfn.py||salt/modules/boto_cfn.py": [
          "File: salt/modules/boto_cfn.py -> salt/modules/boto_cfn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cloudfront.py||salt/modules/boto_cloudfront.py": [
          "File: salt/modules/boto_cloudfront.py -> salt/modules/boto_cloudfront.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cloudtrail.py||salt/modules/boto_cloudtrail.py": [
          "File: salt/modules/boto_cloudtrail.py -> salt/modules/boto_cloudtrail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cloudwatch.py||salt/modules/boto_cloudwatch.py": [
          "File: salt/modules/boto_cloudwatch.py -> salt/modules/boto_cloudwatch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cloudwatch_event.py||salt/modules/boto_cloudwatch_event.py": [
          "File: salt/modules/boto_cloudwatch_event.py -> salt/modules/boto_cloudwatch_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_cognitoidentity.py||salt/modules/boto_cognitoidentity.py": [
          "File: salt/modules/boto_cognitoidentity.py -> salt/modules/boto_cognitoidentity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_datapipeline.py||salt/modules/boto_datapipeline.py": [
          "File: salt/modules/boto_datapipeline.py -> salt/modules/boto_datapipeline.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_dynamodb.py||salt/modules/boto_dynamodb.py": [
          "File: salt/modules/boto_dynamodb.py -> salt/modules/boto_dynamodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_ec2.py||salt/modules/boto_ec2.py": [
          "File: salt/modules/boto_ec2.py -> salt/modules/boto_ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_efs.py||salt/modules/boto_efs.py": [
          "File: salt/modules/boto_efs.py -> salt/modules/boto_efs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_elasticache.py||salt/modules/boto_elasticache.py": [
          "File: salt/modules/boto_elasticache.py -> salt/modules/boto_elasticache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_elasticsearch_domain.py||salt/modules/boto_elasticsearch_domain.py": [
          "File: salt/modules/boto_elasticsearch_domain.py -> salt/modules/boto_elasticsearch_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_elb.py||salt/modules/boto_elb.py": [
          "File: salt/modules/boto_elb.py -> salt/modules/boto_elb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_elbv2.py||salt/modules/boto_elbv2.py": [
          "File: salt/modules/boto_elbv2.py -> salt/modules/boto_elbv2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_iam.py||salt/modules/boto_iam.py": [
          "File: salt/modules/boto_iam.py -> salt/modules/boto_iam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_iot.py||salt/modules/boto_iot.py": [
          "File: salt/modules/boto_iot.py -> salt/modules/boto_iot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_kinesis.py||salt/modules/boto_kinesis.py": [
          "File: salt/modules/boto_kinesis.py -> salt/modules/boto_kinesis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_kms.py||salt/modules/boto_kms.py": [
          "File: salt/modules/boto_kms.py -> salt/modules/boto_kms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_lambda.py||salt/modules/boto_lambda.py": [
          "File: salt/modules/boto_lambda.py -> salt/modules/boto_lambda.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_rds.py||salt/modules/boto_rds.py": [
          "File: salt/modules/boto_rds.py -> salt/modules/boto_rds.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_route53.py||salt/modules/boto_route53.py": [
          "File: salt/modules/boto_route53.py -> salt/modules/boto_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_s3.py||salt/modules/boto_s3.py": [
          "File: salt/modules/boto_s3.py -> salt/modules/boto_s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_s3_bucket.py||salt/modules/boto_s3_bucket.py": [
          "File: salt/modules/boto_s3_bucket.py -> salt/modules/boto_s3_bucket.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_secgroup.py||salt/modules/boto_secgroup.py": [
          "File: salt/modules/boto_secgroup.py -> salt/modules/boto_secgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_sns.py||salt/modules/boto_sns.py": [
          "File: salt/modules/boto_sns.py -> salt/modules/boto_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_sqs.py||salt/modules/boto_sqs.py": [
          "File: salt/modules/boto_sqs.py -> salt/modules/boto_sqs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_ssm.py||salt/modules/boto_ssm.py": [
          "File: salt/modules/boto_ssm.py -> salt/modules/boto_ssm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/boto_vpc.py||salt/modules/boto_vpc.py": [
          "File: salt/modules/boto_vpc.py -> salt/modules/boto_vpc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bridge.py||salt/modules/bridge.py": [
          "File: salt/modules/bridge.py -> salt/modules/bridge.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/bsd_shadow.py||salt/modules/bsd_shadow.py": [
          "File: salt/modules/bsd_shadow.py -> salt/modules/bsd_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/btrfs.py||salt/modules/btrfs.py": [
          "File: salt/modules/btrfs.py -> salt/modules/btrfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cabal.py||salt/modules/cabal.py": [
          "File: salt/modules/cabal.py -> salt/modules/cabal.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/capirca_acl.py||salt/modules/capirca_acl.py": [
          "File: salt/modules/capirca_acl.py -> salt/modules/capirca_acl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cassandra_cql.py||salt/modules/cassandra_cql.py": [
          "File: salt/modules/cassandra_cql.py -> salt/modules/cassandra_cql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cassandra_mod.py||salt/modules/cassandra_mod.py": [
          "File: salt/modules/cassandra_mod.py -> salt/modules/cassandra_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/celery.py||salt/modules/celery.py": [
          "File: salt/modules/celery.py -> salt/modules/celery.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ceph.py||salt/modules/ceph.py": [
          "File: salt/modules/ceph.py -> salt/modules/ceph.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/chassis.py||salt/modules/chassis.py": [
          "File: salt/modules/chassis.py -> salt/modules/chassis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/chef.py||salt/modules/chef.py": [
          "File: salt/modules/chef.py -> salt/modules/chef.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/chocolatey.py||salt/modules/chocolatey.py": [
          "File: salt/modules/chocolatey.py -> salt/modules/chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/chronos.py||salt/modules/chronos.py": [
          "File: salt/modules/chronos.py -> salt/modules/chronos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cimc.py||salt/modules/cimc.py": [
          "File: salt/modules/cimc.py -> salt/modules/cimc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ciscoconfparse_mod.py||salt/modules/ciscoconfparse_mod.py": [
          "File: salt/modules/ciscoconfparse_mod.py -> salt/modules/ciscoconfparse_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cisconso.py||salt/modules/cisconso.py": [
          "File: salt/modules/cisconso.py -> salt/modules/cisconso.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/composer.py||salt/modules/composer.py": [
          "File: salt/modules/composer.py -> salt/modules/composer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/consul.py||salt/modules/consul.py": [
          "File: salt/modules/consul.py -> salt/modules/consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/container_resource.py||salt/modules/container_resource.py": [
          "File: salt/modules/container_resource.py -> salt/modules/container_resource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cpan.py||salt/modules/cpan.py": [
          "File: salt/modules/cpan.py -> salt/modules/cpan.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cryptdev.py||salt/modules/cryptdev.py": [
          "File: salt/modules/cryptdev.py -> salt/modules/cryptdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/csf.py||salt/modules/csf.py": [
          "File: salt/modules/csf.py -> salt/modules/csf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/cyg.py||salt/modules/cyg.py": [
          "File: salt/modules/cyg.py -> salt/modules/cyg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/daemontools.py||salt/modules/daemontools.py": [
          "File: salt/modules/daemontools.py -> salt/modules/daemontools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/datadog_api.py||salt/modules/datadog_api.py": [
          "File: salt/modules/datadog_api.py -> salt/modules/datadog_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ddns.py||salt/modules/ddns.py": [
          "File: salt/modules/ddns.py -> salt/modules/ddns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/deb_apache.py||salt/modules/deb_apache.py": [
          "File: salt/modules/deb_apache.py -> salt/modules/deb_apache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/deb_postgres.py||salt/modules/deb_postgres.py": [
          "File: salt/modules/deb_postgres.py -> salt/modules/deb_postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/debuild_pkgbuild.py||salt/modules/debuild_pkgbuild.py": [
          "File: salt/modules/debuild_pkgbuild.py -> salt/modules/debuild_pkgbuild.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/djangomod.py||salt/modules/djangomod.py": [
          "File: salt/modules/djangomod.py -> salt/modules/djangomod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dnsmasq.py||salt/modules/dnsmasq.py": [
          "File: salt/modules/dnsmasq.py -> salt/modules/dnsmasq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dockercompose.py||salt/modules/dockercompose.py": [
          "File: salt/modules/dockercompose.py -> salt/modules/dockercompose.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dockermod.py||salt/modules/dockermod.py": [
          "File: salt/modules/dockermod.py -> salt/modules/dockermod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/drac.py||salt/modules/drac.py": [
          "File: salt/modules/drac.py -> salt/modules/drac.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dracr.py||salt/modules/dracr.py": [
          "File: salt/modules/dracr.py -> salt/modules/dracr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/drbd.py||salt/modules/drbd.py": [
          "File: salt/modules/drbd.py -> salt/modules/drbd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dummyproxy_pkg.py||salt/modules/dummyproxy_pkg.py": [
          "File: salt/modules/dummyproxy_pkg.py -> salt/modules/dummyproxy_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/dummyproxy_service.py||salt/modules/dummyproxy_service.py": [
          "File: salt/modules/dummyproxy_service.py -> salt/modules/dummyproxy_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ebuildpkg.py||salt/modules/ebuildpkg.py": [
          "File: salt/modules/ebuildpkg.py -> salt/modules/ebuildpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/eix.py||salt/modules/eix.py": [
          "File: salt/modules/eix.py -> salt/modules/eix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/elasticsearch.py||salt/modules/elasticsearch.py": [
          "File: salt/modules/elasticsearch.py -> salt/modules/elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/eselect.py||salt/modules/eselect.py": [
          "File: salt/modules/eselect.py -> salt/modules/eselect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/esxcluster.py||salt/modules/esxcluster.py": [
          "File: salt/modules/esxcluster.py -> salt/modules/esxcluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/esxdatacenter.py||salt/modules/esxdatacenter.py": [
          "File: salt/modules/esxdatacenter.py -> salt/modules/esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/esxi.py||salt/modules/esxi.py": [
          "File: salt/modules/esxi.py -> salt/modules/esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/esxvm.py||salt/modules/esxvm.py": [
          "File: salt/modules/esxvm.py -> salt/modules/esxvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/etcd_mod.py||salt/modules/etcd_mod.py": [
          "File: salt/modules/etcd_mod.py -> salt/modules/etcd_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsd_sysctl.py||salt/modules/freebsd_sysctl.py": [
          "File: salt/modules/freebsd_sysctl.py -> salt/modules/freebsd_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsd_update.py||salt/modules/freebsd_update.py": [
          "File: salt/modules/freebsd_update.py -> salt/modules/freebsd_update.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsdjail.py||salt/modules/freebsdjail.py": [
          "File: salt/modules/freebsdjail.py -> salt/modules/freebsdjail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsdkmod.py||salt/modules/freebsdkmod.py": [
          "File: salt/modules/freebsdkmod.py -> salt/modules/freebsdkmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsdpkg.py||salt/modules/freebsdpkg.py": [
          "File: salt/modules/freebsdpkg.py -> salt/modules/freebsdpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsdports.py||salt/modules/freebsdports.py": [
          "File: salt/modules/freebsdports.py -> salt/modules/freebsdports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freebsdservice.py||salt/modules/freebsdservice.py": [
          "File: salt/modules/freebsdservice.py -> salt/modules/freebsdservice.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/freezer.py||salt/modules/freezer.py": [
          "File: salt/modules/freezer.py -> salt/modules/freezer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/gcp_addon.py||salt/modules/gcp_addon.py": [
          "File: salt/modules/gcp_addon.py -> salt/modules/gcp_addon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/gem.py||salt/modules/gem.py": [
          "File: salt/modules/gem.py -> salt/modules/gem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/genesis.py||salt/modules/genesis.py": [
          "File: salt/modules/genesis.py -> salt/modules/genesis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/gentoo_service.py||salt/modules/gentoo_service.py": [
          "File: salt/modules/gentoo_service.py -> salt/modules/gentoo_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/gentoolkitmod.py||salt/modules/gentoolkitmod.py": [
          "File: salt/modules/gentoolkitmod.py -> salt/modules/gentoolkitmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/github.py||salt/modules/github.py": [
          "File: salt/modules/github.py -> salt/modules/github.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/glanceng.py||salt/modules/glanceng.py": [
          "File: salt/modules/glanceng.py -> salt/modules/glanceng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/glassfish.py||salt/modules/glassfish.py": [
          "File: salt/modules/glassfish.py -> salt/modules/glassfish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/glusterfs.py||salt/modules/glusterfs.py": [
          "File: salt/modules/glusterfs.py -> salt/modules/glusterfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/gnomedesktop.py||salt/modules/gnomedesktop.py": [
          "File: salt/modules/gnomedesktop.py -> salt/modules/gnomedesktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/google_chat.py||salt/modules/google_chat.py": [
          "File: salt/modules/google_chat.py -> salt/modules/google_chat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/grafana4.py||salt/modules/grafana4.py": [
          "File: salt/modules/grafana4.py -> salt/modules/grafana4.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/grub_legacy.py||salt/modules/grub_legacy.py": [
          "File: salt/modules/grub_legacy.py -> salt/modules/grub_legacy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/hadoop.py||salt/modules/hadoop.py": [
          "File: salt/modules/hadoop.py -> salt/modules/hadoop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/haproxyconn.py||salt/modules/haproxyconn.py": [
          "File: salt/modules/haproxyconn.py -> salt/modules/haproxyconn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/heat.py||salt/modules/heat.py": [
          "File: salt/modules/heat.py -> salt/modules/heat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/helm.py||salt/modules/helm.py": [
          "File: salt/modules/helm.py -> salt/modules/helm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/hg.py||salt/modules/hg.py": [
          "File: salt/modules/hg.py -> salt/modules/hg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/icinga2.py||salt/modules/icinga2.py": [
          "File: salt/modules/icinga2.py -> salt/modules/icinga2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ifttt.py||salt/modules/ifttt.py": [
          "File: salt/modules/ifttt.py -> salt/modules/ifttt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ilo.py||salt/modules/ilo.py": [
          "File: salt/modules/ilo.py -> salt/modules/ilo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/incron.py||salt/modules/incron.py": [
          "File: salt/modules/incron.py -> salt/modules/incron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/influxdb08mod.py||salt/modules/influxdb08mod.py": [
          "File: salt/modules/influxdb08mod.py -> salt/modules/influxdb08mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/influxdbmod.py||salt/modules/influxdbmod.py": [
          "File: salt/modules/influxdbmod.py -> salt/modules/influxdbmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/infoblox.py||salt/modules/infoblox.py": [
          "File: salt/modules/infoblox.py -> salt/modules/infoblox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/inspector.py||salt/modules/inspector.py": [
          "File: salt/modules/inspector.py -> salt/modules/inspector.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/introspect.py||salt/modules/introspect.py": [
          "File: salt/modules/introspect.py -> salt/modules/introspect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/iosconfig.py||salt/modules/iosconfig.py": [
          "File: salt/modules/iosconfig.py -> salt/modules/iosconfig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/jboss7.py||salt/modules/jboss7.py": [
          "File: salt/modules/jboss7.py -> salt/modules/jboss7.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/jboss7_cli.py||salt/modules/jboss7_cli.py": [
          "File: salt/modules/jboss7_cli.py -> salt/modules/jboss7_cli.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/jenkinsmod.py||salt/modules/jenkinsmod.py": [
          "File: salt/modules/jenkinsmod.py -> salt/modules/jenkinsmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/jira_mod.py||salt/modules/jira_mod.py": [
          "File: salt/modules/jira_mod.py -> salt/modules/jira_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/junos.py||salt/modules/junos.py": [
          "File: salt/modules/junos.py -> salt/modules/junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/k8s.py||salt/modules/k8s.py": [
          "File: salt/modules/k8s.py -> salt/modules/k8s.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kapacitor.py||salt/modules/kapacitor.py": [
          "File: salt/modules/kapacitor.py -> salt/modules/kapacitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kerberos.py||salt/modules/kerberos.py": [
          "File: salt/modules/kerberos.py -> salt/modules/kerberos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kernelpkg_linux_apt.py||salt/modules/kernelpkg_linux_apt.py": [
          "File: salt/modules/kernelpkg_linux_apt.py -> salt/modules/kernelpkg_linux_apt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kernelpkg_linux_yum.py||salt/modules/kernelpkg_linux_yum.py": [
          "File: salt/modules/kernelpkg_linux_yum.py -> salt/modules/kernelpkg_linux_yum.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/keystone.py||salt/modules/keystone.py": [
          "File: salt/modules/keystone.py -> salt/modules/keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/keystoneng.py||salt/modules/keystoneng.py": [
          "File: salt/modules/keystoneng.py -> salt/modules/keystoneng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/keystore.py||salt/modules/keystore.py": [
          "File: salt/modules/keystore.py -> salt/modules/keystore.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kubeadm.py||salt/modules/kubeadm.py": [
          "File: salt/modules/kubeadm.py -> salt/modules/kubeadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/kubernetesmod.py||salt/modules/kubernetesmod.py": [
          "File: salt/modules/kubernetesmod.py -> salt/modules/kubernetesmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/launchctl_service.py||salt/modules/launchctl_service.py": [
          "File: salt/modules/launchctl_service.py -> salt/modules/launchctl_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/layman.py||salt/modules/layman.py": [
          "File: salt/modules/layman.py -> salt/modules/layman.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ldap3.py||salt/modules/ldap3.py": [
          "File: salt/modules/ldap3.py -> salt/modules/ldap3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/ldapmod.py||salt/modules/ldapmod.py": [
          "File: salt/modules/ldapmod.py -> salt/modules/ldapmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/libcloud_compute.py||salt/modules/libcloud_compute.py": [
          "File: salt/modules/libcloud_compute.py -> salt/modules/libcloud_compute.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/libcloud_dns.py||salt/modules/libcloud_dns.py": [
          "File: salt/modules/libcloud_dns.py -> salt/modules/libcloud_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/libcloud_loadbalancer.py||salt/modules/libcloud_loadbalancer.py": [
          "File: salt/modules/libcloud_loadbalancer.py -> salt/modules/libcloud_loadbalancer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/libcloud_storage.py||salt/modules/libcloud_storage.py": [
          "File: salt/modules/libcloud_storage.py -> salt/modules/libcloud_storage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/lvs.py||salt/modules/lvs.py": [
          "File: salt/modules/lvs.py -> salt/modules/lvs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/lxc.py||salt/modules/lxc.py": [
          "File: salt/modules/lxc.py -> salt/modules/lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/lxd.py||salt/modules/lxd.py": [
          "File: salt/modules/lxd.py -> salt/modules/lxd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_assistive.py||salt/modules/mac_assistive.py": [
          "File: salt/modules/mac_assistive.py -> salt/modules/mac_assistive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_brew_pkg.py||salt/modules/mac_brew_pkg.py": [
          "File: salt/modules/mac_brew_pkg.py -> salt/modules/mac_brew_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_desktop.py||salt/modules/mac_desktop.py": [
          "File: salt/modules/mac_desktop.py -> salt/modules/mac_desktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_group.py||salt/modules/mac_group.py": [
          "File: salt/modules/mac_group.py -> salt/modules/mac_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_keychain.py||salt/modules/mac_keychain.py": [
          "File: salt/modules/mac_keychain.py -> salt/modules/mac_keychain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_pkgutil.py||salt/modules/mac_pkgutil.py": [
          "File: salt/modules/mac_pkgutil.py -> salt/modules/mac_pkgutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_portspkg.py||salt/modules/mac_portspkg.py": [
          "File: salt/modules/mac_portspkg.py -> salt/modules/mac_portspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_power.py||salt/modules/mac_power.py": [
          "File: salt/modules/mac_power.py -> salt/modules/mac_power.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_service.py||salt/modules/mac_service.py": [
          "File: salt/modules/mac_service.py -> salt/modules/mac_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_shadow.py||salt/modules/mac_shadow.py": [
          "File: salt/modules/mac_shadow.py -> salt/modules/mac_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_softwareupdate.py||salt/modules/mac_softwareupdate.py": [
          "File: salt/modules/mac_softwareupdate.py -> salt/modules/mac_softwareupdate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_sysctl.py||salt/modules/mac_sysctl.py": [
          "File: salt/modules/mac_sysctl.py -> salt/modules/mac_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_system.py||salt/modules/mac_system.py": [
          "File: salt/modules/mac_system.py -> salt/modules/mac_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_timezone.py||salt/modules/mac_timezone.py": [
          "File: salt/modules/mac_timezone.py -> salt/modules/mac_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_user.py||salt/modules/mac_user.py": [
          "File: salt/modules/mac_user.py -> salt/modules/mac_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mac_xattr.py||salt/modules/mac_xattr.py": [
          "File: salt/modules/mac_xattr.py -> salt/modules/mac_xattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/macdefaults.py||salt/modules/macdefaults.py": [
          "File: salt/modules/macdefaults.py -> salt/modules/macdefaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/macpackage.py||salt/modules/macpackage.py": [
          "File: salt/modules/macpackage.py -> salt/modules/macpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mandrill.py||salt/modules/mandrill.py": [
          "File: salt/modules/mandrill.py -> salt/modules/mandrill.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/marathon.py||salt/modules/marathon.py": [
          "File: salt/modules/marathon.py -> salt/modules/marathon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mattermost.py||salt/modules/mattermost.py": [
          "File: salt/modules/mattermost.py -> salt/modules/mattermost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mdata.py||salt/modules/mdata.py": [
          "File: salt/modules/mdata.py -> salt/modules/mdata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/memcached.py||salt/modules/memcached.py": [
          "File: salt/modules/memcached.py -> salt/modules/memcached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/modjk.py||salt/modules/modjk.py": [
          "File: salt/modules/modjk.py -> salt/modules/modjk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mongodb.py||salt/modules/mongodb.py": [
          "File: salt/modules/mongodb.py -> salt/modules/mongodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/monit.py||salt/modules/monit.py": [
          "File: salt/modules/monit.py -> salt/modules/monit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/moosefs.py||salt/modules/moosefs.py": [
          "File: salt/modules/moosefs.py -> salt/modules/moosefs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mssql.py||salt/modules/mssql.py": [
          "File: salt/modules/mssql.py -> salt/modules/mssql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/msteams.py||salt/modules/msteams.py": [
          "File: salt/modules/msteams.py -> salt/modules/msteams.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/munin.py||salt/modules/munin.py": [
          "File: salt/modules/munin.py -> salt/modules/munin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/mysql.py||salt/modules/mysql.py": [
          "File: salt/modules/mysql.py -> salt/modules/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nagios.py||salt/modules/nagios.py": [
          "File: salt/modules/nagios.py -> salt/modules/nagios.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nagios_rpc.py||salt/modules/nagios_rpc.py": [
          "File: salt/modules/nagios_rpc.py -> salt/modules/nagios_rpc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/namecheap_domains.py||salt/modules/namecheap_domains.py": [
          "File: salt/modules/namecheap_domains.py -> salt/modules/namecheap_domains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/namecheap_domains_dns.py||salt/modules/namecheap_domains_dns.py": [
          "File: salt/modules/namecheap_domains_dns.py -> salt/modules/namecheap_domains_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/namecheap_domains_ns.py||salt/modules/namecheap_domains_ns.py": [
          "File: salt/modules/namecheap_domains_ns.py -> salt/modules/namecheap_domains_ns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/namecheap_ssl.py||salt/modules/namecheap_ssl.py": [
          "File: salt/modules/namecheap_ssl.py -> salt/modules/namecheap_ssl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/namecheap_users.py||salt/modules/namecheap_users.py": [
          "File: salt/modules/namecheap_users.py -> salt/modules/namecheap_users.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_bgp.py||salt/modules/napalm_bgp.py": [
          "File: salt/modules/napalm_bgp.py -> salt/modules/napalm_bgp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_formula.py||salt/modules/napalm_formula.py": [
          "File: salt/modules/napalm_formula.py -> salt/modules/napalm_formula.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_mod.py||salt/modules/napalm_mod.py": [
          "File: salt/modules/napalm_mod.py -> salt/modules/napalm_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_netacl.py||salt/modules/napalm_netacl.py": [
          "File: salt/modules/napalm_netacl.py -> salt/modules/napalm_netacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_network.py||salt/modules/napalm_network.py": [
          "File: salt/modules/napalm_network.py -> salt/modules/napalm_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_ntp.py||salt/modules/napalm_ntp.py": [
          "File: salt/modules/napalm_ntp.py -> salt/modules/napalm_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_probes.py||salt/modules/napalm_probes.py": [
          "File: salt/modules/napalm_probes.py -> salt/modules/napalm_probes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_route.py||salt/modules/napalm_route.py": [
          "File: salt/modules/napalm_route.py -> salt/modules/napalm_route.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_snmp.py||salt/modules/napalm_snmp.py": [
          "File: salt/modules/napalm_snmp.py -> salt/modules/napalm_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_users.py||salt/modules/napalm_users.py": [
          "File: salt/modules/napalm_users.py -> salt/modules/napalm_users.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/napalm_yang_mod.py||salt/modules/napalm_yang_mod.py": [
          "File: salt/modules/napalm_yang_mod.py -> salt/modules/napalm_yang_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/netbox.py||salt/modules/netbox.py": [
          "File: salt/modules/netbox.py -> salt/modules/netbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/netbsd_sysctl.py||salt/modules/netbsd_sysctl.py": [
          "File: salt/modules/netbsd_sysctl.py -> salt/modules/netbsd_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/netbsdservice.py||salt/modules/netbsdservice.py": [
          "File: salt/modules/netbsdservice.py -> salt/modules/netbsdservice.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/netmiko_mod.py||salt/modules/netmiko_mod.py": [
          "File: salt/modules/netmiko_mod.py -> salt/modules/netmiko_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/netscaler.py||salt/modules/netscaler.py": [
          "File: salt/modules/netscaler.py -> salt/modules/netscaler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/neutron.py||salt/modules/neutron.py": [
          "File: salt/modules/neutron.py -> salt/modules/neutron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/neutronng.py||salt/modules/neutronng.py": [
          "File: salt/modules/neutronng.py -> salt/modules/neutronng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nexus.py||salt/modules/nexus.py": [
          "File: salt/modules/nexus.py -> salt/modules/nexus.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nfs3.py||salt/modules/nfs3.py": [
          "File: salt/modules/nfs3.py -> salt/modules/nfs3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nginx.py||salt/modules/nginx.py": [
          "File: salt/modules/nginx.py -> salt/modules/nginx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nilrt_ip.py||salt/modules/nilrt_ip.py": [
          "File: salt/modules/nilrt_ip.py -> salt/modules/nilrt_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nix.py||salt/modules/nix.py": [
          "File: salt/modules/nix.py -> salt/modules/nix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nova.py||salt/modules/nova.py": [
          "File: salt/modules/nova.py -> salt/modules/nova.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/npm.py||salt/modules/npm.py": [
          "File: salt/modules/npm.py -> salt/modules/npm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nspawn.py||salt/modules/nspawn.py": [
          "File: salt/modules/nspawn.py -> salt/modules/nspawn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nxos.py||salt/modules/nxos.py": [
          "File: salt/modules/nxos.py -> salt/modules/nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nxos_api.py||salt/modules/nxos_api.py": [
          "File: salt/modules/nxos_api.py -> salt/modules/nxos_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/nxos_upgrade.py||salt/modules/nxos_upgrade.py": [
          "File: salt/modules/nxos_upgrade.py -> salt/modules/nxos_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/omapi.py||salt/modules/omapi.py": [
          "File: salt/modules/omapi.py -> salt/modules/omapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openbsd_sysctl.py||salt/modules/openbsd_sysctl.py": [
          "File: salt/modules/openbsd_sysctl.py -> salt/modules/openbsd_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openbsdpkg.py||salt/modules/openbsdpkg.py": [
          "File: salt/modules/openbsdpkg.py -> salt/modules/openbsdpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openbsdrcctl_service.py||salt/modules/openbsdrcctl_service.py": [
          "File: salt/modules/openbsdrcctl_service.py -> salt/modules/openbsdrcctl_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openbsdservice.py||salt/modules/openbsdservice.py": [
          "File: salt/modules/openbsdservice.py -> salt/modules/openbsdservice.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openscap.py||salt/modules/openscap.py": [
          "File: salt/modules/openscap.py -> salt/modules/openscap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openstack_config.py||salt/modules/openstack_config.py": [
          "File: salt/modules/openstack_config.py -> salt/modules/openstack_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openstack_mng.py||salt/modules/openstack_mng.py": [
          "File: salt/modules/openstack_mng.py -> salt/modules/openstack_mng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/openvswitch.py||salt/modules/openvswitch.py": [
          "File: salt/modules/openvswitch.py -> salt/modules/openvswitch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/opsgenie.py||salt/modules/opsgenie.py": [
          "File: salt/modules/opsgenie.py -> salt/modules/opsgenie.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/oracle.py||salt/modules/oracle.py": [
          "File: salt/modules/oracle.py -> salt/modules/oracle.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/osquery.py||salt/modules/osquery.py": [
          "File: salt/modules/osquery.py -> salt/modules/osquery.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pagerduty.py||salt/modules/pagerduty.py": [
          "File: salt/modules/pagerduty.py -> salt/modules/pagerduty.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pagerduty_util.py||salt/modules/pagerduty_util.py": [
          "File: salt/modules/pagerduty_util.py -> salt/modules/pagerduty_util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/panos.py||salt/modules/panos.py": [
          "File: salt/modules/panos.py -> salt/modules/panos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/parallels.py||salt/modules/parallels.py": [
          "File: salt/modules/parallels.py -> salt/modules/parallels.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pcs.py||salt/modules/pcs.py": [
          "File: salt/modules/pcs.py -> salt/modules/pcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pdbedit.py||salt/modules/pdbedit.py": [
          "File: salt/modules/pdbedit.py -> salt/modules/pdbedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pecl.py||salt/modules/pecl.py": [
          "File: salt/modules/pecl.py -> salt/modules/pecl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/peeringdb.py||salt/modules/peeringdb.py": [
          "File: salt/modules/peeringdb.py -> salt/modules/peeringdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pf.py||salt/modules/pf.py": [
          "File: salt/modules/pf.py -> salt/modules/pf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/philips_hue.py||salt/modules/philips_hue.py": [
          "File: salt/modules/philips_hue.py -> salt/modules/philips_hue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pkgin.py||salt/modules/pkgin.py": [
          "File: salt/modules/pkgin.py -> salt/modules/pkgin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pkgng.py||salt/modules/pkgng.py": [
          "File: salt/modules/pkgng.py -> salt/modules/pkgng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pkgutil.py||salt/modules/pkgutil.py": [
          "File: salt/modules/pkgutil.py -> salt/modules/pkgutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/portage_config.py||salt/modules/portage_config.py": [
          "File: salt/modules/portage_config.py -> salt/modules/portage_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/postfix.py||salt/modules/postfix.py": [
          "File: salt/modules/postfix.py -> salt/modules/postfix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/postgres.py||salt/modules/postgres.py": [
          "File: salt/modules/postgres.py -> salt/modules/postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/poudriere.py||salt/modules/poudriere.py": [
          "File: salt/modules/poudriere.py -> salt/modules/poudriere.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/powerpath.py||salt/modules/powerpath.py": [
          "File: salt/modules/powerpath.py -> salt/modules/powerpath.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/puppet.py||salt/modules/puppet.py": [
          "File: salt/modules/puppet.py -> salt/modules/puppet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/purefa.py||salt/modules/purefa.py": [
          "File: salt/modules/purefa.py -> salt/modules/purefa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/purefb.py||salt/modules/purefb.py": [
          "File: salt/modules/purefb.py -> salt/modules/purefb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pushbullet.py||salt/modules/pushbullet.py": [
          "File: salt/modules/pushbullet.py -> salt/modules/pushbullet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/pushover_notify.py||salt/modules/pushover_notify.py": [
          "File: salt/modules/pushover_notify.py -> salt/modules/pushover_notify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/qemu_img.py||salt/modules/qemu_img.py": [
          "File: salt/modules/qemu_img.py -> salt/modules/qemu_img.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rallydev.py||salt/modules/rallydev.py": [
          "File: salt/modules/rallydev.py -> salt/modules/rallydev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/random_org.py||salt/modules/random_org.py": [
          "File: salt/modules/random_org.py -> salt/modules/random_org.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rbac_solaris.py||salt/modules/rbac_solaris.py": [
          "File: salt/modules/rbac_solaris.py -> salt/modules/rbac_solaris.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rbenv.py||salt/modules/rbenv.py": [
          "File: salt/modules/rbenv.py -> salt/modules/rbenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rdp.py||salt/modules/rdp.py": [
          "File: salt/modules/rdp.py -> salt/modules/rdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rebootmgr.py||salt/modules/rebootmgr.py": [
          "File: salt/modules/rebootmgr.py -> salt/modules/rebootmgr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/redismod.py||salt/modules/redismod.py": [
          "File: salt/modules/redismod.py -> salt/modules/redismod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/reg.py||salt/modules/reg.py": [
          "File: salt/modules/reg.py -> salt/modules/reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/restconf.py||salt/modules/restconf.py": [
          "File: salt/modules/restconf.py -> salt/modules/restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rh_ip.py||salt/modules/rh_ip.py": [
          "File: salt/modules/rh_ip.py -> salt/modules/rh_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/riak.py||salt/modules/riak.py": [
          "File: salt/modules/riak.py -> salt/modules/riak.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/runit.py||salt/modules/runit.py": [
          "File: salt/modules/runit.py -> salt/modules/runit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/rvm.py||salt/modules/rvm.py": [
          "File: salt/modules/rvm.py -> salt/modules/rvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/s3.py||salt/modules/s3.py": [
          "File: salt/modules/s3.py -> salt/modules/s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/s6.py||salt/modules/s6.py": [
          "File: salt/modules/s6.py -> salt/modules/s6.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/scsi.py||salt/modules/scsi.py": [
          "File: salt/modules/scsi.py -> salt/modules/scsi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/sensehat.py||salt/modules/sensehat.py": [
          "File: salt/modules/sensehat.py -> salt/modules/sensehat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/sensors.py||salt/modules/sensors.py": [
          "File: salt/modules/sensors.py -> salt/modules/sensors.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/serverdensity_device.py||salt/modules/serverdensity_device.py": [
          "File: salt/modules/serverdensity_device.py -> salt/modules/serverdensity_device.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/servicenow.py||salt/modules/servicenow.py": [
          "File: salt/modules/servicenow.py -> salt/modules/servicenow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/slack_notify.py||salt/modules/slack_notify.py": [
          "File: salt/modules/slack_notify.py -> salt/modules/slack_notify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/slackware_service.py||salt/modules/slackware_service.py": [
          "File: salt/modules/slackware_service.py -> salt/modules/slackware_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/slsutil.py||salt/modules/slsutil.py": [
          "File: salt/modules/slsutil.py -> salt/modules/slsutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/smartos_imgadm.py||salt/modules/smartos_imgadm.py": [
          "File: salt/modules/smartos_imgadm.py -> salt/modules/smartos_imgadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/smartos_nictagadm.py||salt/modules/smartos_nictagadm.py": [
          "File: salt/modules/smartos_nictagadm.py -> salt/modules/smartos_nictagadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/smartos_virt.py||salt/modules/smartos_virt.py": [
          "File: salt/modules/smartos_virt.py -> salt/modules/smartos_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/smartos_vmadm.py||salt/modules/smartos_vmadm.py": [
          "File: salt/modules/smartos_vmadm.py -> salt/modules/smartos_vmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/smf_service.py||salt/modules/smf_service.py": [
          "File: salt/modules/smf_service.py -> salt/modules/smf_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solaris_fmadm.py||salt/modules/solaris_fmadm.py": [
          "File: salt/modules/solaris_fmadm.py -> salt/modules/solaris_fmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solaris_group.py||salt/modules/solaris_group.py": [
          "File: salt/modules/solaris_group.py -> salt/modules/solaris_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solaris_shadow.py||salt/modules/solaris_shadow.py": [
          "File: salt/modules/solaris_shadow.py -> salt/modules/solaris_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solaris_system.py||salt/modules/solaris_system.py": [
          "File: salt/modules/solaris_system.py -> salt/modules/solaris_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solaris_user.py||salt/modules/solaris_user.py": [
          "File: salt/modules/solaris_user.py -> salt/modules/solaris_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solarisipspkg.py||salt/modules/solarisipspkg.py": [
          "File: salt/modules/solarisipspkg.py -> salt/modules/solarisipspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solarispkg.py||salt/modules/solarispkg.py": [
          "File: salt/modules/solarispkg.py -> salt/modules/solarispkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solr.py||salt/modules/solr.py": [
          "File: salt/modules/solr.py -> salt/modules/solr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/solrcloud.py||salt/modules/solrcloud.py": [
          "File: salt/modules/solrcloud.py -> salt/modules/solrcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/splunk.py||salt/modules/splunk.py": [
          "File: salt/modules/splunk.py -> salt/modules/splunk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/splunk_search.py||salt/modules/splunk_search.py": [
          "File: salt/modules/splunk_search.py -> salt/modules/splunk_search.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/statuspage.py||salt/modules/statuspage.py": [
          "File: salt/modules/statuspage.py -> salt/modules/statuspage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/supervisord.py||salt/modules/supervisord.py": [
          "File: salt/modules/supervisord.py -> salt/modules/supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/suse_apache.py||salt/modules/suse_apache.py": [
          "File: salt/modules/suse_apache.py -> salt/modules/suse_apache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/suse_ip.py||salt/modules/suse_ip.py": [
          "File: salt/modules/suse_ip.py -> salt/modules/suse_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/svn.py||salt/modules/svn.py": [
          "File: salt/modules/svn.py -> salt/modules/svn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/swarm.py||salt/modules/swarm.py": [
          "File: salt/modules/swarm.py -> salt/modules/swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/swift.py||salt/modules/swift.py": [
          "File: salt/modules/swift.py -> salt/modules/swift.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/sysbench.py||salt/modules/sysbench.py": [
          "File: salt/modules/sysbench.py -> salt/modules/sysbench.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/sysrc.py||salt/modules/sysrc.py": [
          "File: salt/modules/sysrc.py -> salt/modules/sysrc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/system_profiler.py||salt/modules/system_profiler.py": [
          "File: salt/modules/system_profiler.py -> salt/modules/system_profiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/systemd_service.py||salt/modules/systemd_service.py": [
          "File: salt/modules/systemd_service.py -> salt/modules/systemd_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/telegram.py||salt/modules/telegram.py": [
          "File: salt/modules/telegram.py -> salt/modules/telegram.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/telemetry.py||salt/modules/telemetry.py": [
          "File: salt/modules/telemetry.py -> salt/modules/telemetry.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/testinframod.py||salt/modules/testinframod.py": [
          "File: salt/modules/testinframod.py -> salt/modules/testinframod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/tomcat.py||salt/modules/tomcat.py": [
          "File: salt/modules/tomcat.py -> salt/modules/tomcat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/trafficserver.py||salt/modules/trafficserver.py": [
          "File: salt/modules/trafficserver.py -> salt/modules/trafficserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/travisci.py||salt/modules/travisci.py": [
          "File: salt/modules/travisci.py -> salt/modules/travisci.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/tuned.py||salt/modules/tuned.py": [
          "File: salt/modules/tuned.py -> salt/modules/tuned.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/twilio_notify.py||salt/modules/twilio_notify.py": [
          "File: salt/modules/twilio_notify.py -> salt/modules/twilio_notify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/upstart_service.py||salt/modules/upstart_service.py": [
          "File: salt/modules/upstart_service.py -> salt/modules/upstart_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/uptime.py||salt/modules/uptime.py": [
          "File: salt/modules/uptime.py -> salt/modules/uptime.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/uwsgi.py||salt/modules/uwsgi.py": [
          "File: salt/modules/uwsgi.py -> salt/modules/uwsgi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vagrant.py||salt/modules/vagrant.py": [
          "File: salt/modules/vagrant.py -> salt/modules/vagrant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/varnish.py||salt/modules/varnish.py": [
          "File: salt/modules/varnish.py -> salt/modules/varnish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vault.py||salt/modules/vault.py": [
          "File: salt/modules/vault.py -> salt/modules/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vbox_guest.py||salt/modules/vbox_guest.py": [
          "File: salt/modules/vbox_guest.py -> salt/modules/vbox_guest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vboxmanage.py||salt/modules/vboxmanage.py": [
          "File: salt/modules/vboxmanage.py -> salt/modules/vboxmanage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vcenter.py||salt/modules/vcenter.py": [
          "File: salt/modules/vcenter.py -> salt/modules/vcenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/victorops.py||salt/modules/victorops.py": [
          "File: salt/modules/victorops.py -> salt/modules/victorops.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/virt.py||salt/modules/virt.py": [
          "File: salt/modules/virt.py -> salt/modules/virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vmctl.py||salt/modules/vmctl.py": [
          "File: salt/modules/vmctl.py -> salt/modules/vmctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/vsphere.py||salt/modules/vsphere.py": [
          "File: salt/modules/vsphere.py -> salt/modules/vsphere.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_appx.py||salt/modules/win_appx.py": [
          "File: salt/modules/win_appx.py -> salt/modules/win_appx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_auditpol.py||salt/modules/win_auditpol.py": [
          "File: salt/modules/win_auditpol.py -> salt/modules/win_auditpol.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_autoruns.py||salt/modules/win_autoruns.py": [
          "File: salt/modules/win_autoruns.py -> salt/modules/win_autoruns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_certutil.py||salt/modules/win_certutil.py": [
          "File: salt/modules/win_certutil.py -> salt/modules/win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_dacl.py||salt/modules/win_dacl.py": [
          "File: salt/modules/win_dacl.py -> salt/modules/win_dacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_disk.py||salt/modules/win_disk.py": [
          "File: salt/modules/win_disk.py -> salt/modules/win_disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_dism.py||salt/modules/win_dism.py": [
          "File: salt/modules/win_dism.py -> salt/modules/win_dism.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_dns_client.py||salt/modules/win_dns_client.py": [
          "File: salt/modules/win_dns_client.py -> salt/modules/win_dns_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_dsc.py||salt/modules/win_dsc.py": [
          "File: salt/modules/win_dsc.py -> salt/modules/win_dsc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_event.py||salt/modules/win_event.py": [
          "File: salt/modules/win_event.py -> salt/modules/win_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_file.py||salt/modules/win_file.py": [
          "File: salt/modules/win_file.py -> salt/modules/win_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_firewall.py||salt/modules/win_firewall.py": [
          "File: salt/modules/win_firewall.py -> salt/modules/win_firewall.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_groupadd.py||salt/modules/win_groupadd.py": [
          "File: salt/modules/win_groupadd.py -> salt/modules/win_groupadd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_iis.py||salt/modules/win_iis.py": [
          "File: salt/modules/win_iis.py -> salt/modules/win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_ip.py||salt/modules/win_ip.py": [
          "File: salt/modules/win_ip.py -> salt/modules/win_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_lgpo.py||salt/modules/win_lgpo.py": [
          "File: salt/modules/win_lgpo.py -> salt/modules/win_lgpo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_lgpo_reg.py||salt/modules/win_lgpo_reg.py": [
          "File: salt/modules/win_lgpo_reg.py -> salt/modules/win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_license.py||salt/modules/win_license.py": [
          "File: salt/modules/win_license.py -> salt/modules/win_license.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_network.py||salt/modules/win_network.py": [
          "File: salt/modules/win_network.py -> salt/modules/win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_ntp.py||salt/modules/win_ntp.py": [
          "File: salt/modules/win_ntp.py -> salt/modules/win_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_path.py||salt/modules/win_path.py": [
          "File: salt/modules/win_path.py -> salt/modules/win_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_pkg.py||salt/modules/win_pkg.py": [
          "File: salt/modules/win_pkg.py -> salt/modules/win_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_pki.py||salt/modules/win_pki.py": [
          "File: salt/modules/win_pki.py -> salt/modules/win_pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_powercfg.py||salt/modules/win_powercfg.py": [
          "File: salt/modules/win_powercfg.py -> salt/modules/win_powercfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_psget.py||salt/modules/win_psget.py": [
          "File: salt/modules/win_psget.py -> salt/modules/win_psget.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_servermanager.py||salt/modules/win_servermanager.py": [
          "File: salt/modules/win_servermanager.py -> salt/modules/win_servermanager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_service.py||salt/modules/win_service.py": [
          "File: salt/modules/win_service.py -> salt/modules/win_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_shadow.py||salt/modules/win_shadow.py": [
          "File: salt/modules/win_shadow.py -> salt/modules/win_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_shortcut.py||salt/modules/win_shortcut.py": [
          "File: salt/modules/win_shortcut.py -> salt/modules/win_shortcut.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_smtp_server.py||salt/modules/win_smtp_server.py": [
          "File: salt/modules/win_smtp_server.py -> salt/modules/win_smtp_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_snmp.py||salt/modules/win_snmp.py": [
          "File: salt/modules/win_snmp.py -> salt/modules/win_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_status.py||salt/modules/win_status.py": [
          "File: salt/modules/win_status.py -> salt/modules/win_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_system.py||salt/modules/win_system.py": [
          "File: salt/modules/win_system.py -> salt/modules/win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_task.py||salt/modules/win_task.py": [
          "File: salt/modules/win_task.py -> salt/modules/win_task.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_timezone.py||salt/modules/win_timezone.py": [
          "File: salt/modules/win_timezone.py -> salt/modules/win_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_useradd.py||salt/modules/win_useradd.py": [
          "File: salt/modules/win_useradd.py -> salt/modules/win_useradd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_wua.py||salt/modules/win_wua.py": [
          "File: salt/modules/win_wua.py -> salt/modules/win_wua.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/win_wusa.py||salt/modules/win_wusa.py": [
          "File: salt/modules/win_wusa.py -> salt/modules/win_wusa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/winrepo.py||salt/modules/winrepo.py": [
          "File: salt/modules/winrepo.py -> salt/modules/winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/wordpress.py||salt/modules/wordpress.py": [
          "File: salt/modules/wordpress.py -> salt/modules/wordpress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/xapi_virt.py||salt/modules/xapi_virt.py": [
          "File: salt/modules/xapi_virt.py -> salt/modules/xapi_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/xbpspkg.py||salt/modules/xbpspkg.py": [
          "File: salt/modules/xbpspkg.py -> salt/modules/xbpspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/xmpp.py||salt/modules/xmpp.py": [
          "File: salt/modules/xmpp.py -> salt/modules/xmpp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/yaml.py||salt/modules/yaml.py": [
          "File: salt/modules/yaml.py -> salt/modules/yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zabbix.py||salt/modules/zabbix.py": [
          "File: salt/modules/zabbix.py -> salt/modules/zabbix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zcbuildout.py||salt/modules/zcbuildout.py": [
          "File: salt/modules/zcbuildout.py -> salt/modules/zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zenoss.py||salt/modules/zenoss.py": [
          "File: salt/modules/zenoss.py -> salt/modules/zenoss.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zk_concurrency.py||salt/modules/zk_concurrency.py": [
          "File: salt/modules/zk_concurrency.py -> salt/modules/zk_concurrency.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/znc.py||salt/modules/znc.py": [
          "File: salt/modules/znc.py -> salt/modules/znc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zoneadm.py||salt/modules/zoneadm.py": [
          "File: salt/modules/zoneadm.py -> salt/modules/zoneadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zonecfg.py||salt/modules/zonecfg.py": [
          "File: salt/modules/zonecfg.py -> salt/modules/zonecfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zookeeper.py||salt/modules/zookeeper.py": [
          "File: salt/modules/zookeeper.py -> salt/modules/zookeeper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zpool.py||salt/modules/zpool.py": [
          "File: salt/modules/zpool.py -> salt/modules/zpool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/modules/zypperpkg.py||salt/modules/zypperpkg.py": [
          "File: salt/modules/zypperpkg.py -> salt/modules/zypperpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/dson.py||salt/output/dson.py": [
          "File: salt/output/dson.py -> salt/output/dson.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/highstate.py||salt/output/highstate.py": [
          "File: salt/output/highstate.py -> salt/output/highstate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/json_out.py||salt/output/json_out.py": [
          "File: salt/output/json_out.py -> salt/output/json_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/key.py||salt/output/key.py": [
          "File: salt/output/key.py -> salt/output/key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/nested.py||salt/output/nested.py": [
          "File: salt/output/nested.py -> salt/output/nested.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/newline_values_only.py||salt/output/newline_values_only.py": [
          "File: salt/output/newline_values_only.py -> salt/output/newline_values_only.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/no_out_quiet.py||salt/output/no_out_quiet.py": [
          "File: salt/output/no_out_quiet.py -> salt/output/no_out_quiet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/no_return.py||salt/output/no_return.py": [
          "File: salt/output/no_return.py -> salt/output/no_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/overstatestage.py||salt/output/overstatestage.py": [
          "File: salt/output/overstatestage.py -> salt/output/overstatestage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/pony.py||salt/output/pony.py": [
          "File: salt/output/pony.py -> salt/output/pony.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/pprint_out.py||salt/output/pprint_out.py": [
          "File: salt/output/pprint_out.py -> salt/output/pprint_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/profile.py||salt/output/profile.py": [
          "File: salt/output/profile.py -> salt/output/profile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/progress.py||salt/output/progress.py": [
          "File: salt/output/progress.py -> salt/output/progress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/raw.py||salt/output/raw.py": [
          "File: salt/output/raw.py -> salt/output/raw.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/table_out.py||salt/output/table_out.py": [
          "File: salt/output/table_out.py -> salt/output/table_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/txt.py||salt/output/txt.py": [
          "File: salt/output/txt.py -> salt/output/txt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/virt_query.py||salt/output/virt_query.py": [
          "File: salt/output/virt_query.py -> salt/output/virt_query.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/output/yaml_out.py||salt/output/yaml_out.py": [
          "File: salt/output/yaml_out.py -> salt/output/yaml_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/cmd_json.py||salt/pillar/cmd_json.py": [
          "File: salt/pillar/cmd_json.py -> salt/pillar/cmd_json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/cmd_yaml.py||salt/pillar/cmd_yaml.py": [
          "File: salt/pillar/cmd_yaml.py -> salt/pillar/cmd_yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/cmd_yamlex.py||salt/pillar/cmd_yamlex.py": [
          "File: salt/pillar/cmd_yamlex.py -> salt/pillar/cmd_yamlex.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/cobbler.py||salt/pillar/cobbler.py": [
          "File: salt/pillar/cobbler.py -> salt/pillar/cobbler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/confidant.py||salt/pillar/confidant.py": [
          "File: salt/pillar/confidant.py -> salt/pillar/confidant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/consul_pillar.py||salt/pillar/consul_pillar.py": [
          "File: salt/pillar/consul_pillar.py -> salt/pillar/consul_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/csvpillar.py||salt/pillar/csvpillar.py": [
          "File: salt/pillar/csvpillar.py -> salt/pillar/csvpillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/digicert.py||salt/pillar/digicert.py": [
          "File: salt/pillar/digicert.py -> salt/pillar/digicert.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/django_orm.py||salt/pillar/django_orm.py": [
          "File: salt/pillar/django_orm.py -> salt/pillar/django_orm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/ec2_pillar.py||salt/pillar/ec2_pillar.py": [
          "File: salt/pillar/ec2_pillar.py -> salt/pillar/ec2_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/etcd_pillar.py||salt/pillar/etcd_pillar.py": [
          "File: salt/pillar/etcd_pillar.py -> salt/pillar/etcd_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/extra_minion_data_in_pillar.py||salt/pillar/extra_minion_data_in_pillar.py": [
          "File: salt/pillar/extra_minion_data_in_pillar.py -> salt/pillar/extra_minion_data_in_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/file_tree.py||salt/pillar/file_tree.py": [
          "File: salt/pillar/file_tree.py -> salt/pillar/file_tree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/foreman.py||salt/pillar/foreman.py": [
          "File: salt/pillar/foreman.py -> salt/pillar/foreman.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/git_pillar.py||salt/pillar/git_pillar.py": [
          "File: salt/pillar/git_pillar.py -> salt/pillar/git_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/gpg.py||salt/pillar/gpg.py": [
          "File: salt/pillar/gpg.py -> salt/pillar/gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/hg_pillar.py||salt/pillar/hg_pillar.py": [
          "File: salt/pillar/hg_pillar.py -> salt/pillar/hg_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/hiera.py||salt/pillar/hiera.py": [
          "File: salt/pillar/hiera.py -> salt/pillar/hiera.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/http_json.py||salt/pillar/http_json.py": [
          "File: salt/pillar/http_json.py -> salt/pillar/http_json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/http_yaml.py||salt/pillar/http_yaml.py": [
          "File: salt/pillar/http_yaml.py -> salt/pillar/http_yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/libvirt.py||salt/pillar/libvirt.py": [
          "File: salt/pillar/libvirt.py -> salt/pillar/libvirt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/makostack.py||salt/pillar/makostack.py": [
          "File: salt/pillar/makostack.py -> salt/pillar/makostack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/mongo.py||salt/pillar/mongo.py": [
          "File: salt/pillar/mongo.py -> salt/pillar/mongo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/mysql.py||salt/pillar/mysql.py": [
          "File: salt/pillar/mysql.py -> salt/pillar/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/nacl.py||salt/pillar/nacl.py": [
          "File: salt/pillar/nacl.py -> salt/pillar/nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/netbox.py||salt/pillar/netbox.py": [
          "File: salt/pillar/netbox.py -> salt/pillar/netbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/neutron.py||salt/pillar/neutron.py": [
          "File: salt/pillar/neutron.py -> salt/pillar/neutron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/nodegroups.py||salt/pillar/nodegroups.py": [
          "File: salt/pillar/nodegroups.py -> salt/pillar/nodegroups.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/pepa.py||salt/pillar/pepa.py": [
          "File: salt/pillar/pepa.py -> salt/pillar/pepa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/pillar_ldap.py||salt/pillar/pillar_ldap.py": [
          "File: salt/pillar/pillar_ldap.py -> salt/pillar/pillar_ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/postgres.py||salt/pillar/postgres.py": [
          "File: salt/pillar/postgres.py -> salt/pillar/postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/puppet.py||salt/pillar/puppet.py": [
          "File: salt/pillar/puppet.py -> salt/pillar/puppet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/reclass_adapter.py||salt/pillar/reclass_adapter.py": [
          "File: salt/pillar/reclass_adapter.py -> salt/pillar/reclass_adapter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/redismod.py||salt/pillar/redismod.py": [
          "File: salt/pillar/redismod.py -> salt/pillar/redismod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/rethinkdb_pillar.py||salt/pillar/rethinkdb_pillar.py": [
          "File: salt/pillar/rethinkdb_pillar.py -> salt/pillar/rethinkdb_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/s3.py||salt/pillar/s3.py": [
          "File: salt/pillar/s3.py -> salt/pillar/s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/saltclass.py||salt/pillar/saltclass.py": [
          "File: salt/pillar/saltclass.py -> salt/pillar/saltclass.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/sql_base.py||salt/pillar/sql_base.py": [
          "File: salt/pillar/sql_base.py -> salt/pillar/sql_base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/sqlcipher.py||salt/pillar/sqlcipher.py": [
          "File: salt/pillar/sqlcipher.py -> salt/pillar/sqlcipher.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/sqlite3.py||salt/pillar/sqlite3.py": [
          "File: salt/pillar/sqlite3.py -> salt/pillar/sqlite3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/stack.py||salt/pillar/stack.py": [
          "File: salt/pillar/stack.py -> salt/pillar/stack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/svn_pillar.py||salt/pillar/svn_pillar.py": [
          "File: salt/pillar/svn_pillar.py -> salt/pillar/svn_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/varstack_pillar.py||salt/pillar/varstack_pillar.py": [
          "File: salt/pillar/varstack_pillar.py -> salt/pillar/varstack_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/vault.py||salt/pillar/vault.py": [
          "File: salt/pillar/vault.py -> salt/pillar/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/venafi.py||salt/pillar/venafi.py": [
          "File: salt/pillar/venafi.py -> salt/pillar/venafi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/virtkey.py||salt/pillar/virtkey.py": [
          "File: salt/pillar/virtkey.py -> salt/pillar/virtkey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/pillar/vmware_pillar.py||salt/pillar/vmware_pillar.py": [
          "File: salt/pillar/vmware_pillar.py -> salt/pillar/vmware_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/arista_pyeapi.py||salt/proxy/arista_pyeapi.py": [
          "File: salt/proxy/arista_pyeapi.py -> salt/proxy/arista_pyeapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/chronos.py||salt/proxy/chronos.py": [
          "File: salt/proxy/chronos.py -> salt/proxy/chronos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/cimc.py||salt/proxy/cimc.py": [
          "File: salt/proxy/cimc.py -> salt/proxy/cimc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/cisconso.py||salt/proxy/cisconso.py": [
          "File: salt/proxy/cisconso.py -> salt/proxy/cisconso.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/deltaproxy.py||salt/proxy/deltaproxy.py": [
          "File: salt/proxy/deltaproxy.py -> salt/proxy/deltaproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/docker.py||salt/proxy/docker.py": [
          "File: salt/proxy/docker.py -> salt/proxy/docker.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/dummy.py||salt/proxy/dummy.py": [
          "File: salt/proxy/dummy.py -> salt/proxy/dummy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/esxcluster.py||salt/proxy/esxcluster.py": [
          "File: salt/proxy/esxcluster.py -> salt/proxy/esxcluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/esxdatacenter.py||salt/proxy/esxdatacenter.py": [
          "File: salt/proxy/esxdatacenter.py -> salt/proxy/esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/esxi.py||salt/proxy/esxi.py": [
          "File: salt/proxy/esxi.py -> salt/proxy/esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/esxvm.py||salt/proxy/esxvm.py": [
          "File: salt/proxy/esxvm.py -> salt/proxy/esxvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/fx2.py||salt/proxy/fx2.py": [
          "File: salt/proxy/fx2.py -> salt/proxy/fx2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/junos.py||salt/proxy/junos.py": [
          "File: salt/proxy/junos.py -> salt/proxy/junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/marathon.py||salt/proxy/marathon.py": [
          "File: salt/proxy/marathon.py -> salt/proxy/marathon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/napalm.py||salt/proxy/napalm.py": [
          "File: salt/proxy/napalm.py -> salt/proxy/napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/netmiko_px.py||salt/proxy/netmiko_px.py": [
          "File: salt/proxy/netmiko_px.py -> salt/proxy/netmiko_px.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/nxos.py||salt/proxy/nxos.py": [
          "File: salt/proxy/nxos.py -> salt/proxy/nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/nxos_api.py||salt/proxy/nxos_api.py": [
          "File: salt/proxy/nxos_api.py -> salt/proxy/nxos_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/panos.py||salt/proxy/panos.py": [
          "File: salt/proxy/panos.py -> salt/proxy/panos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/philips_hue.py||salt/proxy/philips_hue.py": [
          "File: salt/proxy/philips_hue.py -> salt/proxy/philips_hue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/rest_sample.py||salt/proxy/rest_sample.py": [
          "File: salt/proxy/rest_sample.py -> salt/proxy/rest_sample.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/restconf.py||salt/proxy/restconf.py": [
          "File: salt/proxy/restconf.py -> salt/proxy/restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/ssh_sample.py||salt/proxy/ssh_sample.py": [
          "File: salt/proxy/ssh_sample.py -> salt/proxy/ssh_sample.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/proxy/vcenter.py||salt/proxy/vcenter.py": [
          "File: salt/proxy/vcenter.py -> salt/proxy/vcenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/queues/pgjsonb_queue.py||salt/queues/pgjsonb_queue.py": [
          "File: salt/queues/pgjsonb_queue.py -> salt/queues/pgjsonb_queue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/queues/sqlite_queue.py||salt/queues/sqlite_queue.py": [
          "File: salt/queues/sqlite_queue.py -> salt/queues/sqlite_queue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/aws_kms.py||salt/renderers/aws_kms.py": [
          "File: salt/renderers/aws_kms.py -> salt/renderers/aws_kms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/cheetah.py||salt/renderers/cheetah.py": [
          "File: salt/renderers/cheetah.py -> salt/renderers/cheetah.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/dson.py||salt/renderers/dson.py": [
          "File: salt/renderers/dson.py -> salt/renderers/dson.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/genshi.py||salt/renderers/genshi.py": [
          "File: salt/renderers/genshi.py -> salt/renderers/genshi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/gpg.py||salt/renderers/gpg.py": [
          "File: salt/renderers/gpg.py -> salt/renderers/gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/hjson.py||salt/renderers/hjson.py": [
          "File: salt/renderers/hjson.py -> salt/renderers/hjson.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/jinja.py||salt/renderers/jinja.py": [
          "File: salt/renderers/jinja.py -> salt/renderers/jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/json.py||salt/renderers/json.py": [
          "File: salt/renderers/json.py -> salt/renderers/json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/json5.py||salt/renderers/json5.py": [
          "File: salt/renderers/json5.py -> salt/renderers/json5.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/mako.py||salt/renderers/mako.py": [
          "File: salt/renderers/mako.py -> salt/renderers/mako.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/msgpack.py||salt/renderers/msgpack.py": [
          "File: salt/renderers/msgpack.py -> salt/renderers/msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/nacl.py||salt/renderers/nacl.py": [
          "File: salt/renderers/nacl.py -> salt/renderers/nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/pass.py||salt/renderers/pass.py": [
          "File: salt/renderers/pass.py -> salt/renderers/pass.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/py.py||salt/renderers/py.py": [
          "File: salt/renderers/py.py -> salt/renderers/py.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/pydsl.py||salt/renderers/pydsl.py": [
          "File: salt/renderers/pydsl.py -> salt/renderers/pydsl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/pyobjects.py||salt/renderers/pyobjects.py": [
          "File: salt/renderers/pyobjects.py -> salt/renderers/pyobjects.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/stateconf.py||salt/renderers/stateconf.py": [
          "File: salt/renderers/stateconf.py -> salt/renderers/stateconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/tomlmod.py||salt/renderers/tomlmod.py": [
          "File: salt/renderers/tomlmod.py -> salt/renderers/tomlmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/wempy.py||salt/renderers/wempy.py": [
          "File: salt/renderers/wempy.py -> salt/renderers/wempy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/yaml.py||salt/renderers/yaml.py": [
          "File: salt/renderers/yaml.py -> salt/renderers/yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/renderers/yamlex.py||salt/renderers/yamlex.py": [
          "File: salt/renderers/yamlex.py -> salt/renderers/yamlex.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/appoptics_return.py||salt/returners/appoptics_return.py": [
          "File: salt/returners/appoptics_return.py -> salt/returners/appoptics_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/carbon_return.py||salt/returners/carbon_return.py": [
          "File: salt/returners/carbon_return.py -> salt/returners/carbon_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/cassandra_cql_return.py||salt/returners/cassandra_cql_return.py": [
          "File: salt/returners/cassandra_cql_return.py -> salt/returners/cassandra_cql_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/cassandra_return.py||salt/returners/cassandra_return.py": [
          "File: salt/returners/cassandra_return.py -> salt/returners/cassandra_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/couchbase_return.py||salt/returners/couchbase_return.py": [
          "File: salt/returners/couchbase_return.py -> salt/returners/couchbase_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/couchdb_return.py||salt/returners/couchdb_return.py": [
          "File: salt/returners/couchdb_return.py -> salt/returners/couchdb_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/django_return.py||salt/returners/django_return.py": [
          "File: salt/returners/django_return.py -> salt/returners/django_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/elasticsearch_return.py||salt/returners/elasticsearch_return.py": [
          "File: salt/returners/elasticsearch_return.py -> salt/returners/elasticsearch_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/etcd_return.py||salt/returners/etcd_return.py": [
          "File: salt/returners/etcd_return.py -> salt/returners/etcd_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/highstate_return.py||salt/returners/highstate_return.py": [
          "File: salt/returners/highstate_return.py -> salt/returners/highstate_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/influxdb_return.py||salt/returners/influxdb_return.py": [
          "File: salt/returners/influxdb_return.py -> salt/returners/influxdb_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/kafka_return.py||salt/returners/kafka_return.py": [
          "File: salt/returners/kafka_return.py -> salt/returners/kafka_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/librato_return.py||salt/returners/librato_return.py": [
          "File: salt/returners/librato_return.py -> salt/returners/librato_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/local.py||salt/returners/local.py": [
          "File: salt/returners/local.py -> salt/returners/local.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/local_cache.py||salt/returners/local_cache.py": [
          "File: salt/returners/local_cache.py -> salt/returners/local_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/mattermost_returner.py||salt/returners/mattermost_returner.py": [
          "File: salt/returners/mattermost_returner.py -> salt/returners/mattermost_returner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/memcache_return.py||salt/returners/memcache_return.py": [
          "File: salt/returners/memcache_return.py -> salt/returners/memcache_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/mongo_future_return.py||salt/returners/mongo_future_return.py": [
          "File: salt/returners/mongo_future_return.py -> salt/returners/mongo_future_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/mongo_return.py||salt/returners/mongo_return.py": [
          "File: salt/returners/mongo_return.py -> salt/returners/mongo_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/multi_returner.py||salt/returners/multi_returner.py": [
          "File: salt/returners/multi_returner.py -> salt/returners/multi_returner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/mysql.py||salt/returners/mysql.py": [
          "File: salt/returners/mysql.py -> salt/returners/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/nagios_nrdp_return.py||salt/returners/nagios_nrdp_return.py": [
          "File: salt/returners/nagios_nrdp_return.py -> salt/returners/nagios_nrdp_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/odbc.py||salt/returners/odbc.py": [
          "File: salt/returners/odbc.py -> salt/returners/odbc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/pgjsonb.py||salt/returners/pgjsonb.py": [
          "File: salt/returners/pgjsonb.py -> salt/returners/pgjsonb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/postgres.py||salt/returners/postgres.py": [
          "File: salt/returners/postgres.py -> salt/returners/postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/postgres_local_cache.py||salt/returners/postgres_local_cache.py": [
          "File: salt/returners/postgres_local_cache.py -> salt/returners/postgres_local_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/pushover_returner.py||salt/returners/pushover_returner.py": [
          "File: salt/returners/pushover_returner.py -> salt/returners/pushover_returner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/rawfile_json.py||salt/returners/rawfile_json.py": [
          "File: salt/returners/rawfile_json.py -> salt/returners/rawfile_json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/redis_return.py||salt/returners/redis_return.py": [
          "File: salt/returners/redis_return.py -> salt/returners/redis_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/sentry_return.py||salt/returners/sentry_return.py": [
          "File: salt/returners/sentry_return.py -> salt/returners/sentry_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/slack_returner.py||salt/returners/slack_returner.py": [
          "File: salt/returners/slack_returner.py -> salt/returners/slack_returner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/slack_webhook_return.py||salt/returners/slack_webhook_return.py": [
          "File: salt/returners/slack_webhook_return.py -> salt/returners/slack_webhook_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/sms_return.py||salt/returners/sms_return.py": [
          "File: salt/returners/sms_return.py -> salt/returners/sms_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/smtp_return.py||salt/returners/smtp_return.py": [
          "File: salt/returners/smtp_return.py -> salt/returners/smtp_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/splunk.py||salt/returners/splunk.py": [
          "File: salt/returners/splunk.py -> salt/returners/splunk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/sqlite3_return.py||salt/returners/sqlite3_return.py": [
          "File: salt/returners/sqlite3_return.py -> salt/returners/sqlite3_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/syslog_return.py||salt/returners/syslog_return.py": [
          "File: salt/returners/syslog_return.py -> salt/returners/syslog_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/telegram_return.py||salt/returners/telegram_return.py": [
          "File: salt/returners/telegram_return.py -> salt/returners/telegram_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/xmpp_return.py||salt/returners/xmpp_return.py": [
          "File: salt/returners/xmpp_return.py -> salt/returners/xmpp_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/returners/zabbix_return.py||salt/returners/zabbix_return.py": [
          "File: salt/returners/zabbix_return.py -> salt/returners/zabbix_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/ansible.py||salt/roster/ansible.py": [
          "File: salt/roster/ansible.py -> salt/roster/ansible.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/cache.py||salt/roster/cache.py": [
          "File: salt/roster/cache.py -> salt/roster/cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/cloud.py||salt/roster/cloud.py": [
          "File: salt/roster/cloud.py -> salt/roster/cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/clustershell.py||salt/roster/clustershell.py": [
          "File: salt/roster/clustershell.py -> salt/roster/clustershell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/dir.py||salt/roster/dir.py": [
          "File: salt/roster/dir.py -> salt/roster/dir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/flat.py||salt/roster/flat.py": [
          "File: salt/roster/flat.py -> salt/roster/flat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/range.py||salt/roster/range.py": [
          "File: salt/roster/range.py -> salt/roster/range.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/scan.py||salt/roster/scan.py": [
          "File: salt/roster/scan.py -> salt/roster/scan.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/sshconfig.py||salt/roster/sshconfig.py": [
          "File: salt/roster/sshconfig.py -> salt/roster/sshconfig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/sshknownhosts.py||salt/roster/sshknownhosts.py": [
          "File: salt/roster/sshknownhosts.py -> salt/roster/sshknownhosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/roster/terraform.py||salt/roster/terraform.py": [
          "File: salt/roster/terraform.py -> salt/roster/terraform.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/asam.py||salt/runners/asam.py": [
          "File: salt/runners/asam.py -> salt/runners/asam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/auth.py||salt/runners/auth.py": [
          "File: salt/runners/auth.py -> salt/runners/auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/bgp.py||salt/runners/bgp.py": [
          "File: salt/runners/bgp.py -> salt/runners/bgp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/cache.py||salt/runners/cache.py": [
          "File: salt/runners/cache.py -> salt/runners/cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/cloud.py||salt/runners/cloud.py": [
          "File: salt/runners/cloud.py -> salt/runners/cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/config.py||salt/runners/config.py": [
          "File: salt/runners/config.py -> salt/runners/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/ddns.py||salt/runners/ddns.py": [
          "File: salt/runners/ddns.py -> salt/runners/ddns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/digicertapi.py||salt/runners/digicertapi.py": [
          "File: salt/runners/digicertapi.py -> salt/runners/digicertapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/doc.py||salt/runners/doc.py": [
          "File: salt/runners/doc.py -> salt/runners/doc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/drac.py||salt/runners/drac.py": [
          "File: salt/runners/drac.py -> salt/runners/drac.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/error.py||salt/runners/error.py": [
          "File: salt/runners/error.py -> salt/runners/error.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/event.py||salt/runners/event.py": [
          "File: salt/runners/event.py -> salt/runners/event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/f5.py||salt/runners/f5.py": [
          "File: salt/runners/f5.py -> salt/runners/f5.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/fileserver.py||salt/runners/fileserver.py": [
          "File: salt/runners/fileserver.py -> salt/runners/fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/git_pillar.py||salt/runners/git_pillar.py": [
          "File: salt/runners/git_pillar.py -> salt/runners/git_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/http.py||salt/runners/http.py": [
          "File: salt/runners/http.py -> salt/runners/http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/jobs.py||salt/runners/jobs.py": [
          "File: salt/runners/jobs.py -> salt/runners/jobs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/launchd.py||salt/runners/launchd.py": [
          "File: salt/runners/launchd.py -> salt/runners/launchd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/lxc.py||salt/runners/lxc.py": [
          "File: salt/runners/lxc.py -> salt/runners/lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/manage.py||salt/runners/manage.py": [
          "File: salt/runners/manage.py -> salt/runners/manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/match.py||salt/runners/match.py": [
          "File: salt/runners/match.py -> salt/runners/match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/mattermost.py||salt/runners/mattermost.py": [
          "File: salt/runners/mattermost.py -> salt/runners/mattermost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/mine.py||salt/runners/mine.py": [
          "File: salt/runners/mine.py -> salt/runners/mine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/nacl.py||salt/runners/nacl.py": [
          "File: salt/runners/nacl.py -> salt/runners/nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/net.py||salt/runners/net.py": [
          "File: salt/runners/net.py -> salt/runners/net.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/network.py||salt/runners/network.py": [
          "File: salt/runners/network.py -> salt/runners/network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/pagerduty.py||salt/runners/pagerduty.py": [
          "File: salt/runners/pagerduty.py -> salt/runners/pagerduty.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/pillar.py||salt/runners/pillar.py": [
          "File: salt/runners/pillar.py -> salt/runners/pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/pkg.py||salt/runners/pkg.py": [
          "File: salt/runners/pkg.py -> salt/runners/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/queue.py||salt/runners/queue.py": [
          "File: salt/runners/queue.py -> salt/runners/queue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/reactor.py||salt/runners/reactor.py": [
          "File: salt/runners/reactor.py -> salt/runners/reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/salt.py||salt/runners/salt.py": [
          "File: salt/runners/salt.py -> salt/runners/salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/saltutil.py||salt/runners/saltutil.py": [
          "File: salt/runners/saltutil.py -> salt/runners/saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/sdb.py||salt/runners/sdb.py": [
          "File: salt/runners/sdb.py -> salt/runners/sdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/smartos_vmadm.py||salt/runners/smartos_vmadm.py": [
          "File: salt/runners/smartos_vmadm.py -> salt/runners/smartos_vmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/spacewalk.py||salt/runners/spacewalk.py": [
          "File: salt/runners/spacewalk.py -> salt/runners/spacewalk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/ssh.py||salt/runners/ssh.py": [
          "File: salt/runners/ssh.py -> salt/runners/ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/state.py||salt/runners/state.py": [
          "File: salt/runners/state.py -> salt/runners/state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/survey.py||salt/runners/survey.py": [
          "File: salt/runners/survey.py -> salt/runners/survey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/test.py||salt/runners/test.py": [
          "File: salt/runners/test.py -> salt/runners/test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/thin.py||salt/runners/thin.py": [
          "File: salt/runners/thin.py -> salt/runners/thin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/vault.py||salt/runners/vault.py": [
          "File: salt/runners/vault.py -> salt/runners/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/venafiapi.py||salt/runners/venafiapi.py": [
          "File: salt/runners/venafiapi.py -> salt/runners/venafiapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/virt.py||salt/runners/virt.py": [
          "File: salt/runners/virt.py -> salt/runners/virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/vistara.py||salt/runners/vistara.py": [
          "File: salt/runners/vistara.py -> salt/runners/vistara.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/runners/winrepo.py||salt/runners/winrepo.py": [
          "File: salt/runners/winrepo.py -> salt/runners/winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/cache.py||salt/sdcache.py": [
          "File: salt/sdb/cache.py -> salt/sdcache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/confidant.py||salt/sdconfidant.py": [
          "File: salt/sdb/confidant.py -> salt/sdconfidant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/consul.py||salt/sdconsul.py": [
          "File: salt/sdb/consul.py -> salt/sdconsul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/couchdb.py||salt/sdcouchdb.py": [
          "File: salt/sdb/couchdb.py -> salt/sdcouchdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/env.py||salt/sdenv.py": [
          "File: salt/sdb/env.py -> salt/sdenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/etcd_db.py||salt/sdetcd_db.py": [
          "File: salt/sdb/etcd_db.py -> salt/sdetcd_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/keyring_db.py||salt/sdkeyring_db.py": [
          "File: salt/sdb/keyring_db.py -> salt/sdkeyring_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/memcached.py||salt/sdmemcached.py": [
          "File: salt/sdb/memcached.py -> salt/sdmemcached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/redis_sdb.py||salt/sdredis_sdb.py": [
          "File: salt/sdb/redis_sdb.py -> salt/sdredis_sdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/rest.py||salt/sdrest.py": [
          "File: salt/sdb/rest.py -> salt/sdrest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/sqlite3.py||salt/sdsqlite3.py": [
          "File: salt/sdb/sqlite3.py -> salt/sdsqlite3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/tism.py||salt/sdtism.py": [
          "File: salt/sdb/tism.py -> salt/sdtism.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/vault.py||salt/sdvault.py": [
          "File: salt/sdb/vault.py -> salt/sdvault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/sdb/yaml.py||salt/sdyaml.py": [
          "File: salt/sdb/yaml.py -> salt/sdyaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/configparser.py||salt/serializers/configparser.py": [
          "File: salt/serializers/configparser.py -> salt/serializers/configparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/json.py||salt/serializers/json.py": [
          "File: salt/serializers/json.py -> salt/serializers/json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/keyvalue.py||salt/serializers/keyvalue.py": [
          "File: salt/serializers/keyvalue.py -> salt/serializers/keyvalue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/msgpack.py||salt/serializers/msgpack.py": [
          "File: salt/serializers/msgpack.py -> salt/serializers/msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/plist.py||salt/serializers/plist.py": [
          "File: salt/serializers/plist.py -> salt/serializers/plist.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/python.py||salt/serializers/python.py": [
          "File: salt/serializers/python.py -> salt/serializers/python.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/tomlmod.py||salt/serializers/tomlmod.py": [
          "File: salt/serializers/tomlmod.py -> salt/serializers/tomlmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/yaml.py||salt/serializers/yaml.py": [
          "File: salt/serializers/yaml.py -> salt/serializers/yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/serializers/yamlex.py||salt/serializers/yamlex.py": [
          "File: salt/serializers/yamlex.py -> salt/serializers/yamlex.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/acme.py||salt/states/acme.py": [
          "File: salt/states/acme.py -> salt/states/acme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/alias.py||salt/states/alias.py": [
          "File: salt/states/alias.py -> salt/states/alias.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/alternatives.py||salt/states/alternatives.py": [
          "File: salt/states/alternatives.py -> salt/states/alternatives.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ansiblegate.py||salt/states/ansiblegate.py": [
          "File: salt/states/ansiblegate.py -> salt/states/ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/aptpkg.py||salt/states/aptpkg.py": [
          "File: salt/states/aptpkg.py -> salt/states/aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/artifactory.py||salt/states/artifactory.py": [
          "File: salt/states/artifactory.py -> salt/states/artifactory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/augeas.py||salt/states/augeas.py": [
          "File: salt/states/augeas.py -> salt/states/augeas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/bigip.py||salt/states/bigip.py": [
          "File: salt/states/bigip.py -> salt/states/bigip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/blockdev.py||salt/states/blockdev.py": [
          "File: salt/states/blockdev.py -> salt/states/blockdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto3_elasticache.py||salt/states/boto3_elasticache.py": [
          "File: salt/states/boto3_elasticache.py -> salt/states/boto3_elasticache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto3_elasticsearch.py||salt/states/boto3_elasticsearch.py": [
          "File: salt/states/boto3_elasticsearch.py -> salt/states/boto3_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto3_route53.py||salt/states/boto3_route53.py": [
          "File: salt/states/boto3_route53.py -> salt/states/boto3_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto3_sns.py||salt/states/boto3_sns.py": [
          "File: salt/states/boto3_sns.py -> salt/states/boto3_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_apigateway.py||salt/states/boto_apigateway.py": [
          "File: salt/states/boto_apigateway.py -> salt/states/boto_apigateway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_asg.py||salt/states/boto_asg.py": [
          "File: salt/states/boto_asg.py -> salt/states/boto_asg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cfn.py||salt/states/boto_cfn.py": [
          "File: salt/states/boto_cfn.py -> salt/states/boto_cfn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cloudfront.py||salt/states/boto_cloudfront.py": [
          "File: salt/states/boto_cloudfront.py -> salt/states/boto_cloudfront.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cloudtrail.py||salt/states/boto_cloudtrail.py": [
          "File: salt/states/boto_cloudtrail.py -> salt/states/boto_cloudtrail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cloudwatch_alarm.py||salt/states/boto_cloudwatch_alarm.py": [
          "File: salt/states/boto_cloudwatch_alarm.py -> salt/states/boto_cloudwatch_alarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cloudwatch_event.py||salt/states/boto_cloudwatch_event.py": [
          "File: salt/states/boto_cloudwatch_event.py -> salt/states/boto_cloudwatch_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_cognitoidentity.py||salt/states/boto_cognitoidentity.py": [
          "File: salt/states/boto_cognitoidentity.py -> salt/states/boto_cognitoidentity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_datapipeline.py||salt/states/boto_datapipeline.py": [
          "File: salt/states/boto_datapipeline.py -> salt/states/boto_datapipeline.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_dynamodb.py||salt/states/boto_dynamodb.py": [
          "File: salt/states/boto_dynamodb.py -> salt/states/boto_dynamodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_ec2.py||salt/states/boto_ec2.py": [
          "File: salt/states/boto_ec2.py -> salt/states/boto_ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_elasticache.py||salt/states/boto_elasticache.py": [
          "File: salt/states/boto_elasticache.py -> salt/states/boto_elasticache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_elasticsearch_domain.py||salt/states/boto_elasticsearch_domain.py": [
          "File: salt/states/boto_elasticsearch_domain.py -> salt/states/boto_elasticsearch_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_elb.py||salt/states/boto_elb.py": [
          "File: salt/states/boto_elb.py -> salt/states/boto_elb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_elbv2.py||salt/states/boto_elbv2.py": [
          "File: salt/states/boto_elbv2.py -> salt/states/boto_elbv2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_iam.py||salt/states/boto_iam.py": [
          "File: salt/states/boto_iam.py -> salt/states/boto_iam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_iam_role.py||salt/states/boto_iam_role.py": [
          "File: salt/states/boto_iam_role.py -> salt/states/boto_iam_role.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_iot.py||salt/states/boto_iot.py": [
          "File: salt/states/boto_iot.py -> salt/states/boto_iot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_kinesis.py||salt/states/boto_kinesis.py": [
          "File: salt/states/boto_kinesis.py -> salt/states/boto_kinesis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_kms.py||salt/states/boto_kms.py": [
          "File: salt/states/boto_kms.py -> salt/states/boto_kms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_lambda.py||salt/states/boto_lambda.py": [
          "File: salt/states/boto_lambda.py -> salt/states/boto_lambda.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_lc.py||salt/states/boto_lc.py": [
          "File: salt/states/boto_lc.py -> salt/states/boto_lc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_rds.py||salt/states/boto_rds.py": [
          "File: salt/states/boto_rds.py -> salt/states/boto_rds.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_route53.py||salt/states/boto_route53.py": [
          "File: salt/states/boto_route53.py -> salt/states/boto_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_s3.py||salt/states/boto_s3.py": [
          "File: salt/states/boto_s3.py -> salt/states/boto_s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_s3_bucket.py||salt/states/boto_s3_bucket.py": [
          "File: salt/states/boto_s3_bucket.py -> salt/states/boto_s3_bucket.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_secgroup.py||salt/states/boto_secgroup.py": [
          "File: salt/states/boto_secgroup.py -> salt/states/boto_secgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_sns.py||salt/states/boto_sns.py": [
          "File: salt/states/boto_sns.py -> salt/states/boto_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_sqs.py||salt/states/boto_sqs.py": [
          "File: salt/states/boto_sqs.py -> salt/states/boto_sqs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/boto_vpc.py||salt/states/boto_vpc.py": [
          "File: salt/states/boto_vpc.py -> salt/states/boto_vpc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/btrfs.py||salt/states/btrfs.py": [
          "File: salt/states/btrfs.py -> salt/states/btrfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/cabal.py||salt/states/cabal.py": [
          "File: salt/states/cabal.py -> salt/states/cabal.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ceph.py||salt/states/ceph.py": [
          "File: salt/states/ceph.py -> salt/states/ceph.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/chef.py||salt/states/chef.py": [
          "File: salt/states/chef.py -> salt/states/chef.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/chocolatey.py||salt/states/chocolatey.py": [
          "File: salt/states/chocolatey.py -> salt/states/chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/chronos_job.py||salt/states/chronos_job.py": [
          "File: salt/states/chronos_job.py -> salt/states/chronos_job.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/cimc.py||salt/states/cimc.py": [
          "File: salt/states/cimc.py -> salt/states/cimc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/cisconso.py||salt/states/cisconso.py": [
          "File: salt/states/cisconso.py -> salt/states/cisconso.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/composer.py||salt/states/composer.py": [
          "File: salt/states/composer.py -> salt/states/composer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/consul.py||salt/states/consul.py": [
          "File: salt/states/consul.py -> salt/states/consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/cryptdev.py||salt/states/cryptdev.py": [
          "File: salt/states/cryptdev.py -> salt/states/cryptdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/csf.py||salt/states/csf.py": [
          "File: salt/states/csf.py -> salt/states/csf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/cyg.py||salt/states/cyg.py": [
          "File: salt/states/cyg.py -> salt/states/cyg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ddns.py||salt/states/ddns.py": [
          "File: salt/states/ddns.py -> salt/states/ddns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/debconfmod.py||salt/states/debconfmod.py": [
          "File: salt/states/debconfmod.py -> salt/states/debconfmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/dellchassis.py||salt/states/dellchassis.py": [
          "File: salt/states/dellchassis.py -> salt/states/dellchassis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/docker_container.py||salt/states/docker_container.py": [
          "File: salt/states/docker_container.py -> salt/states/docker_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/docker_image.py||salt/states/docker_image.py": [
          "File: salt/states/docker_image.py -> salt/states/docker_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/docker_network.py||salt/states/docker_network.py": [
          "File: salt/states/docker_network.py -> salt/states/docker_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/docker_volume.py||salt/states/docker_volume.py": [
          "File: salt/states/docker_volume.py -> salt/states/docker_volume.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/drac.py||salt/states/drac.py": [
          "File: salt/states/drac.py -> salt/states/drac.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/dvs.py||salt/states/dvs.py": [
          "File: salt/states/dvs.py -> salt/states/dvs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/elasticsearch.py||salt/states/elasticsearch.py": [
          "File: salt/states/elasticsearch.py -> salt/states/elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/elasticsearch_index.py||salt/states/elasticsearch_index.py": [
          "File: salt/states/elasticsearch_index.py -> salt/states/elasticsearch_index.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/elasticsearch_index_template.py||salt/states/elasticsearch_index_template.py": [
          "File: salt/states/elasticsearch_index_template.py -> salt/states/elasticsearch_index_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/eselect.py||salt/states/eselect.py": [
          "File: salt/states/eselect.py -> salt/states/eselect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/esxcluster.py||salt/states/esxcluster.py": [
          "File: salt/states/esxcluster.py -> salt/states/esxcluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/esxdatacenter.py||salt/states/esxdatacenter.py": [
          "File: salt/states/esxdatacenter.py -> salt/states/esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/esxi.py||salt/states/esxi.py": [
          "File: salt/states/esxi.py -> salt/states/esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/esxvm.py||salt/states/esxvm.py": [
          "File: salt/states/esxvm.py -> salt/states/esxvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ethtool.py||salt/states/ethtool.py": [
          "File: salt/states/ethtool.py -> salt/states/ethtool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/gem.py||salt/states/gem.py": [
          "File: salt/states/gem.py -> salt/states/gem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/github.py||salt/states/github.py": [
          "File: salt/states/github.py -> salt/states/github.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/glance_image.py||salt/states/glance_image.py": [
          "File: salt/states/glance_image.py -> salt/states/glance_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/glassfish.py||salt/states/glassfish.py": [
          "File: salt/states/glassfish.py -> salt/states/glassfish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/glusterfs.py||salt/states/glusterfs.py": [
          "File: salt/states/glusterfs.py -> salt/states/glusterfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/gnomedesktop.py||salt/states/gnomedesktop.py": [
          "File: salt/states/gnomedesktop.py -> salt/states/gnomedesktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana.py||salt/states/grafana.py": [
          "File: salt/states/grafana.py -> salt/states/grafana.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana4_dashboard.py||salt/states/grafana4_dashboard.py": [
          "File: salt/states/grafana4_dashboard.py -> salt/states/grafana4_dashboard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana4_datasource.py||salt/states/grafana4_datasource.py": [
          "File: salt/states/grafana4_datasource.py -> salt/states/grafana4_datasource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana4_org.py||salt/states/grafana4_org.py": [
          "File: salt/states/grafana4_org.py -> salt/states/grafana4_org.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana4_user.py||salt/states/grafana4_user.py": [
          "File: salt/states/grafana4_user.py -> salt/states/grafana4_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana_dashboard.py||salt/states/grafana_dashboard.py": [
          "File: salt/states/grafana_dashboard.py -> salt/states/grafana_dashboard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/grafana_datasource.py||salt/states/grafana_datasource.py": [
          "File: salt/states/grafana_datasource.py -> salt/states/grafana_datasource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/heat.py||salt/states/heat.py": [
          "File: salt/states/heat.py -> salt/states/heat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/helm.py||salt/states/helm.py": [
          "File: salt/states/helm.py -> salt/states/helm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/hg.py||salt/states/hg.py": [
          "File: salt/states/hg.py -> salt/states/hg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/icinga2.py||salt/states/icinga2.py": [
          "File: salt/states/icinga2.py -> salt/states/icinga2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ifttt.py||salt/states/ifttt.py": [
          "File: salt/states/ifttt.py -> salt/states/ifttt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/incron.py||salt/states/incron.py": [
          "File: salt/states/incron.py -> salt/states/incron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb08_database.py||salt/states/influxdb08_database.py": [
          "File: salt/states/influxdb08_database.py -> salt/states/influxdb08_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb08_user.py||salt/states/influxdb08_user.py": [
          "File: salt/states/influxdb08_user.py -> salt/states/influxdb08_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb_continuous_query.py||salt/states/influxdb_continuous_query.py": [
          "File: salt/states/influxdb_continuous_query.py -> salt/states/influxdb_continuous_query.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb_database.py||salt/states/influxdb_database.py": [
          "File: salt/states/influxdb_database.py -> salt/states/influxdb_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb_retention_policy.py||salt/states/influxdb_retention_policy.py": [
          "File: salt/states/influxdb_retention_policy.py -> salt/states/influxdb_retention_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/influxdb_user.py||salt/states/influxdb_user.py": [
          "File: salt/states/influxdb_user.py -> salt/states/influxdb_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/infoblox_a.py||salt/states/infoblox_a.py": [
          "File: salt/states/infoblox_a.py -> salt/states/infoblox_a.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/infoblox_cname.py||salt/states/infoblox_cname.py": [
          "File: salt/states/infoblox_cname.py -> salt/states/infoblox_cname.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/infoblox_host_record.py||salt/states/infoblox_host_record.py": [
          "File: salt/states/infoblox_host_record.py -> salt/states/infoblox_host_record.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/infoblox_range.py||salt/states/infoblox_range.py": [
          "File: salt/states/infoblox_range.py -> salt/states/infoblox_range.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/jboss7.py||salt/states/jboss7.py": [
          "File: salt/states/jboss7.py -> salt/states/jboss7.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/jenkins.py||salt/states/jenkins.py": [
          "File: salt/states/jenkins.py -> salt/states/jenkins.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/junos.py||salt/states/junos.py": [
          "File: salt/states/junos.py -> salt/states/junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/kapacitor.py||salt/states/kapacitor.py": [
          "File: salt/states/kapacitor.py -> salt/states/kapacitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/kernelpkg.py||salt/states/kernelpkg.py": [
          "File: salt/states/kernelpkg.py -> salt/states/kernelpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone.py||salt/states/keystone.py": [
          "File: salt/states/keystone.py -> salt/states/keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_domain.py||salt/states/keystone_domain.py": [
          "File: salt/states/keystone_domain.py -> salt/states/keystone_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_endpoint.py||salt/states/keystone_endpoint.py": [
          "File: salt/states/keystone_endpoint.py -> salt/states/keystone_endpoint.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_group.py||salt/states/keystone_group.py": [
          "File: salt/states/keystone_group.py -> salt/states/keystone_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_project.py||salt/states/keystone_project.py": [
          "File: salt/states/keystone_project.py -> salt/states/keystone_project.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_role.py||salt/states/keystone_role.py": [
          "File: salt/states/keystone_role.py -> salt/states/keystone_role.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_role_grant.py||salt/states/keystone_role_grant.py": [
          "File: salt/states/keystone_role_grant.py -> salt/states/keystone_role_grant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_service.py||salt/states/keystone_service.py": [
          "File: salt/states/keystone_service.py -> salt/states/keystone_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystone_user.py||salt/states/keystone_user.py": [
          "File: salt/states/keystone_user.py -> salt/states/keystone_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/keystore.py||salt/states/keystore.py": [
          "File: salt/states/keystore.py -> salt/states/keystore.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/kmod.py||salt/states/kmod.py": [
          "File: salt/states/kmod.py -> salt/states/kmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/kubernetes.py||salt/states/kubernetes.py": [
          "File: salt/states/kubernetes.py -> salt/states/kubernetes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/layman.py||salt/states/layman.py": [
          "File: salt/states/layman.py -> salt/states/layman.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ldap.py||salt/states/ldap.py": [
          "File: salt/states/ldap.py -> salt/states/ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/libcloud_dns.py||salt/states/libcloud_dns.py": [
          "File: salt/states/libcloud_dns.py -> salt/states/libcloud_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/libcloud_loadbalancer.py||salt/states/libcloud_loadbalancer.py": [
          "File: salt/states/libcloud_loadbalancer.py -> salt/states/libcloud_loadbalancer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/libcloud_storage.py||salt/states/libcloud_storage.py": [
          "File: salt/states/libcloud_storage.py -> salt/states/libcloud_storage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/locale.py||salt/states/locale.py": [
          "File: salt/states/locale.py -> salt/states/locale.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/logadm.py||salt/states/logadm.py": [
          "File: salt/states/logadm.py -> salt/states/logadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lvs_server.py||salt/states/lvs_server.py": [
          "File: salt/states/lvs_server.py -> salt/states/lvs_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lvs_service.py||salt/states/lvs_service.py": [
          "File: salt/states/lvs_service.py -> salt/states/lvs_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lxc.py||salt/states/lxc.py": [
          "File: salt/states/lxc.py -> salt/states/lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lxd.py||salt/states/lxd.py": [
          "File: salt/states/lxd.py -> salt/states/lxd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lxd_container.py||salt/states/lxd_container.py": [
          "File: salt/states/lxd_container.py -> salt/states/lxd_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lxd_image.py||salt/states/lxd_image.py": [
          "File: salt/states/lxd_image.py -> salt/states/lxd_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/lxd_profile.py||salt/states/lxd_profile.py": [
          "File: salt/states/lxd_profile.py -> salt/states/lxd_profile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mac_assistive.py||salt/states/mac_assistive.py": [
          "File: salt/states/mac_assistive.py -> salt/states/mac_assistive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mac_keychain.py||salt/states/mac_keychain.py": [
          "File: salt/states/mac_keychain.py -> salt/states/mac_keychain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mac_xattr.py||salt/states/mac_xattr.py": [
          "File: salt/states/mac_xattr.py -> salt/states/mac_xattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/macdefaults.py||salt/states/macdefaults.py": [
          "File: salt/states/macdefaults.py -> salt/states/macdefaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/macpackage.py||salt/states/macpackage.py": [
          "File: salt/states/macpackage.py -> salt/states/macpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/marathon_app.py||salt/states/marathon_app.py": [
          "File: salt/states/marathon_app.py -> salt/states/marathon_app.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/memcached.py||salt/states/memcached.py": [
          "File: salt/states/memcached.py -> salt/states/memcached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/modjk.py||salt/states/modjk.py": [
          "File: salt/states/modjk.py -> salt/states/modjk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/modjk_worker.py||salt/states/modjk_worker.py": [
          "File: salt/states/modjk_worker.py -> salt/states/modjk_worker.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/module.py||salt/states/module.py": [
          "File: salt/states/module.py -> salt/states/module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mongodb_database.py||salt/states/mongodb_database.py": [
          "File: salt/states/mongodb_database.py -> salt/states/mongodb_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mongodb_user.py||salt/states/mongodb_user.py": [
          "File: salt/states/mongodb_user.py -> salt/states/mongodb_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/monit.py||salt/states/monit.py": [
          "File: salt/states/monit.py -> salt/states/monit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mssql_database.py||salt/states/mssql_database.py": [
          "File: salt/states/mssql_database.py -> salt/states/mssql_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mssql_login.py||salt/states/mssql_login.py": [
          "File: salt/states/mssql_login.py -> salt/states/mssql_login.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mssql_role.py||salt/states/mssql_role.py": [
          "File: salt/states/mssql_role.py -> salt/states/mssql_role.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mssql_user.py||salt/states/mssql_user.py": [
          "File: salt/states/mssql_user.py -> salt/states/mssql_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/msteams.py||salt/states/msteams.py": [
          "File: salt/states/msteams.py -> salt/states/msteams.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mysql_database.py||salt/states/mysql_database.py": [
          "File: salt/states/mysql_database.py -> salt/states/mysql_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mysql_grants.py||salt/states/mysql_grants.py": [
          "File: salt/states/mysql_grants.py -> salt/states/mysql_grants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mysql_query.py||salt/states/mysql_query.py": [
          "File: salt/states/mysql_query.py -> salt/states/mysql_query.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/mysql_user.py||salt/states/mysql_user.py": [
          "File: salt/states/mysql_user.py -> salt/states/mysql_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/net_napalm_yang.py||salt/states/net_napalm_yang.py": [
          "File: salt/states/net_napalm_yang.py -> salt/states/net_napalm_yang.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/neutron_network.py||salt/states/neutron_network.py": [
          "File: salt/states/neutron_network.py -> salt/states/neutron_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/neutron_secgroup.py||salt/states/neutron_secgroup.py": [
          "File: salt/states/neutron_secgroup.py -> salt/states/neutron_secgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/neutron_secgroup_rule.py||salt/states/neutron_secgroup_rule.py": [
          "File: salt/states/neutron_secgroup_rule.py -> salt/states/neutron_secgroup_rule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/neutron_subnet.py||salt/states/neutron_subnet.py": [
          "File: salt/states/neutron_subnet.py -> salt/states/neutron_subnet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/nexus.py||salt/states/nexus.py": [
          "File: salt/states/nexus.py -> salt/states/nexus.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/nfs_export.py||salt/states/nfs_export.py": [
          "File: salt/states/nfs_export.py -> salt/states/nfs_export.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/nftables.py||salt/states/nftables.py": [
          "File: salt/states/nftables.py -> salt/states/nftables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/nxos.py||salt/states/nxos.py": [
          "File: salt/states/nxos.py -> salt/states/nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/nxos_upgrade.py||salt/states/nxos_upgrade.py": [
          "File: salt/states/nxos_upgrade.py -> salt/states/nxos_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/openstack_config.py||salt/states/openstack_config.py": [
          "File: salt/states/openstack_config.py -> salt/states/openstack_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/openvswitch_bridge.py||salt/states/openvswitch_bridge.py": [
          "File: salt/states/openvswitch_bridge.py -> salt/states/openvswitch_bridge.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/openvswitch_db.py||salt/states/openvswitch_db.py": [
          "File: salt/states/openvswitch_db.py -> salt/states/openvswitch_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/openvswitch_port.py||salt/states/openvswitch_port.py": [
          "File: salt/states/openvswitch_port.py -> salt/states/openvswitch_port.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/opsgenie.py||salt/states/opsgenie.py": [
          "File: salt/states/opsgenie.py -> salt/states/opsgenie.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pagerduty.py||salt/states/pagerduty.py": [
          "File: salt/states/pagerduty.py -> salt/states/pagerduty.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pagerduty_escalation_policy.py||salt/states/pagerduty_escalation_policy.py": [
          "File: salt/states/pagerduty_escalation_policy.py -> salt/states/pagerduty_escalation_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pagerduty_schedule.py||salt/states/pagerduty_schedule.py": [
          "File: salt/states/pagerduty_schedule.py -> salt/states/pagerduty_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pagerduty_service.py||salt/states/pagerduty_service.py": [
          "File: salt/states/pagerduty_service.py -> salt/states/pagerduty_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pagerduty_user.py||salt/states/pagerduty_user.py": [
          "File: salt/states/pagerduty_user.py -> salt/states/pagerduty_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/panos.py||salt/states/panos.py": [
          "File: salt/states/panos.py -> salt/states/panos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pbm.py||salt/states/pbm.py": [
          "File: salt/states/pbm.py -> salt/states/pbm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pcs.py||salt/states/pcs.py": [
          "File: salt/states/pcs.py -> salt/states/pcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pdbedit.py||salt/states/pdbedit.py": [
          "File: salt/states/pdbedit.py -> salt/states/pdbedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pecl.py||salt/states/pecl.py": [
          "File: salt/states/pecl.py -> salt/states/pecl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pkgng.py||salt/states/pkgng.py": [
          "File: salt/states/pkgng.py -> salt/states/pkgng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pkgrepo.py||salt/states/pkgrepo.py": [
          "File: salt/states/pkgrepo.py -> salt/states/pkgrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/portage_config.py||salt/states/portage_config.py": [
          "File: salt/states/portage_config.py -> salt/states/portage_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/ports.py||salt/states/ports.py": [
          "File: salt/states/ports.py -> salt/states/ports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_cluster.py||salt/states/postgres_cluster.py": [
          "File: salt/states/postgres_cluster.py -> salt/states/postgres_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_database.py||salt/states/postgres_database.py": [
          "File: salt/states/postgres_database.py -> salt/states/postgres_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_extension.py||salt/states/postgres_extension.py": [
          "File: salt/states/postgres_extension.py -> salt/states/postgres_extension.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_group.py||salt/states/postgres_group.py": [
          "File: salt/states/postgres_group.py -> salt/states/postgres_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_initdb.py||salt/states/postgres_initdb.py": [
          "File: salt/states/postgres_initdb.py -> salt/states/postgres_initdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_language.py||salt/states/postgres_language.py": [
          "File: salt/states/postgres_language.py -> salt/states/postgres_language.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_privileges.py||salt/states/postgres_privileges.py": [
          "File: salt/states/postgres_privileges.py -> salt/states/postgres_privileges.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_schema.py||salt/states/postgres_schema.py": [
          "File: salt/states/postgres_schema.py -> salt/states/postgres_schema.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_tablespace.py||salt/states/postgres_tablespace.py": [
          "File: salt/states/postgres_tablespace.py -> salt/states/postgres_tablespace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/postgres_user.py||salt/states/postgres_user.py": [
          "File: salt/states/postgres_user.py -> salt/states/postgres_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/powerpath.py||salt/states/powerpath.py": [
          "File: salt/states/powerpath.py -> salt/states/powerpath.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/probes.py||salt/states/probes.py": [
          "File: salt/states/probes.py -> salt/states/probes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/process.py||salt/states/process.py": [
          "File: salt/states/process.py -> salt/states/process.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pushover.py||salt/states/pushover.py": [
          "File: salt/states/pushover.py -> salt/states/pushover.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/pyrax_queues.py||salt/states/pyrax_queues.py": [
          "File: salt/states/pyrax_queues.py -> salt/states/pyrax_queues.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_cluster.py||salt/states/rabbitmq_cluster.py": [
          "File: salt/states/rabbitmq_cluster.py -> salt/states/rabbitmq_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_plugin.py||salt/states/rabbitmq_plugin.py": [
          "File: salt/states/rabbitmq_plugin.py -> salt/states/rabbitmq_plugin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_policy.py||salt/states/rabbitmq_policy.py": [
          "File: salt/states/rabbitmq_policy.py -> salt/states/rabbitmq_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_upstream.py||salt/states/rabbitmq_upstream.py": [
          "File: salt/states/rabbitmq_upstream.py -> salt/states/rabbitmq_upstream.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_user.py||salt/states/rabbitmq_user.py": [
          "File: salt/states/rabbitmq_user.py -> salt/states/rabbitmq_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rabbitmq_vhost.py||salt/states/rabbitmq_vhost.py": [
          "File: salt/states/rabbitmq_vhost.py -> salt/states/rabbitmq_vhost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rbac_solaris.py||salt/states/rbac_solaris.py": [
          "File: salt/states/rbac_solaris.py -> salt/states/rbac_solaris.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rbenv.py||salt/states/rbenv.py": [
          "File: salt/states/rbenv.py -> salt/states/rbenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rdp.py||salt/states/rdp.py": [
          "File: salt/states/rdp.py -> salt/states/rdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/redismod.py||salt/states/redismod.py": [
          "File: salt/states/redismod.py -> salt/states/redismod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/reg.py||salt/states/reg.py": [
          "File: salt/states/reg.py -> salt/states/reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/restconf.py||salt/states/restconf.py": [
          "File: salt/states/restconf.py -> salt/states/restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rsync.py||salt/states/rsync.py": [
          "File: salt/states/rsync.py -> salt/states/rsync.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/rvm.py||salt/states/rvm.py": [
          "File: salt/states/rvm.py -> salt/states/rvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/serverdensity_device.py||salt/states/serverdensity_device.py": [
          "File: salt/states/serverdensity_device.py -> salt/states/serverdensity_device.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/slack.py||salt/states/slack.py": [
          "File: salt/states/slack.py -> salt/states/slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/smartos.py||salt/states/smartos.py": [
          "File: salt/states/smartos.py -> salt/states/smartos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/snapper.py||salt/states/snapper.py": [
          "File: salt/states/snapper.py -> salt/states/snapper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/solrcloud.py||salt/states/solrcloud.py": [
          "File: salt/states/solrcloud.py -> salt/states/solrcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/splunk.py||salt/states/splunk.py": [
          "File: salt/states/splunk.py -> salt/states/splunk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/splunk_search.py||salt/states/splunk_search.py": [
          "File: salt/states/splunk_search.py -> salt/states/splunk_search.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/sqlite3.py||salt/states/sqlite3.py": [
          "File: salt/states/sqlite3.py -> salt/states/sqlite3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/statuspage.py||salt/states/statuspage.py": [
          "File: salt/states/statuspage.py -> salt/states/statuspage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/supervisord.py||salt/states/supervisord.py": [
          "File: salt/states/supervisord.py -> salt/states/supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/svn.py||salt/states/svn.py": [
          "File: salt/states/svn.py -> salt/states/svn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/sysrc.py||salt/states/sysrc.py": [
          "File: salt/states/sysrc.py -> salt/states/sysrc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/telemetry_alert.py||salt/states/telemetry_alert.py": [
          "File: salt/states/telemetry_alert.py -> salt/states/telemetry_alert.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/testinframod.py||salt/states/testinframod.py": [
          "File: salt/states/testinframod.py -> salt/states/testinframod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/tomcat.py||salt/states/tomcat.py": [
          "File: salt/states/tomcat.py -> salt/states/tomcat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/trafficserver.py||salt/states/trafficserver.py": [
          "File: salt/states/trafficserver.py -> salt/states/trafficserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/vagrant.py||salt/states/vagrant.py": [
          "File: salt/states/vagrant.py -> salt/states/vagrant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/vault.py||salt/states/vault.py": [
          "File: salt/states/vault.py -> salt/states/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/vbox_guest.py||salt/states/vbox_guest.py": [
          "File: salt/states/vbox_guest.py -> salt/states/vbox_guest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/victorops.py||salt/states/victorops.py": [
          "File: salt/states/victorops.py -> salt/states/victorops.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/virt.py||salt/states/virt.py": [
          "File: salt/states/virt.py -> salt/states/virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/virtualenv_mod.py||salt/states/virtualenv_mod.py": [
          "File: salt/states/virtualenv_mod.py -> salt/states/virtualenv_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/webutil.py||salt/states/webutil.py": [
          "File: salt/states/webutil.py -> salt/states/webutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_appx.py||salt/states/win_appx.py": [
          "File: salt/states/win_appx.py -> salt/states/win_appx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_certutil.py||salt/states/win_certutil.py": [
          "File: salt/states/win_certutil.py -> salt/states/win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_dacl.py||salt/states/win_dacl.py": [
          "File: salt/states/win_dacl.py -> salt/states/win_dacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_dism.py||salt/states/win_dism.py": [
          "File: salt/states/win_dism.py -> salt/states/win_dism.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_dns_client.py||salt/states/win_dns_client.py": [
          "File: salt/states/win_dns_client.py -> salt/states/win_dns_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_firewall.py||salt/states/win_firewall.py": [
          "File: salt/states/win_firewall.py -> salt/states/win_firewall.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_iis.py||salt/states/win_iis.py": [
          "File: salt/states/win_iis.py -> salt/states/win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_lgpo.py||salt/states/win_lgpo.py": [
          "File: salt/states/win_lgpo.py -> salt/states/win_lgpo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_lgpo_reg.py||salt/states/win_lgpo_reg.py": [
          "File: salt/states/win_lgpo_reg.py -> salt/states/win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_license.py||salt/states/win_license.py": [
          "File: salt/states/win_license.py -> salt/states/win_license.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_network.py||salt/states/win_network.py": [
          "File: salt/states/win_network.py -> salt/states/win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_path.py||salt/states/win_path.py": [
          "File: salt/states/win_path.py -> salt/states/win_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_pki.py||salt/states/win_pki.py": [
          "File: salt/states/win_pki.py -> salt/states/win_pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_powercfg.py||salt/states/win_powercfg.py": [
          "File: salt/states/win_powercfg.py -> salt/states/win_powercfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_servermanager.py||salt/states/win_servermanager.py": [
          "File: salt/states/win_servermanager.py -> salt/states/win_servermanager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_shortcut.py||salt/states/win_shortcut.py": [
          "File: salt/states/win_shortcut.py -> salt/states/win_shortcut.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_smtp_server.py||salt/states/win_smtp_server.py": [
          "File: salt/states/win_smtp_server.py -> salt/states/win_smtp_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_snmp.py||salt/states/win_snmp.py": [
          "File: salt/states/win_snmp.py -> salt/states/win_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_system.py||salt/states/win_system.py": [
          "File: salt/states/win_system.py -> salt/states/win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_wua.py||salt/states/win_wua.py": [
          "File: salt/states/win_wua.py -> salt/states/win_wua.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/win_wusa.py||salt/states/win_wusa.py": [
          "File: salt/states/win_wusa.py -> salt/states/win_wusa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/winrepo.py||salt/states/winrepo.py": [
          "File: salt/states/winrepo.py -> salt/states/winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/wordpress.py||salt/states/wordpress.py": [
          "File: salt/states/wordpress.py -> salt/states/wordpress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/xml.py||salt/states/xml.py": [
          "File: salt/states/xml.py -> salt/states/xml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/xmpp.py||salt/states/xmpp.py": [
          "File: salt/states/xmpp.py -> salt/states/xmpp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_action.py||salt/states/zabbix_action.py": [
          "File: salt/states/zabbix_action.py -> salt/states/zabbix_action.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_host.py||salt/states/zabbix_host.py": [
          "File: salt/states/zabbix_host.py -> salt/states/zabbix_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_hostgroup.py||salt/states/zabbix_hostgroup.py": [
          "File: salt/states/zabbix_hostgroup.py -> salt/states/zabbix_hostgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_mediatype.py||salt/states/zabbix_mediatype.py": [
          "File: salt/states/zabbix_mediatype.py -> salt/states/zabbix_mediatype.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_template.py||salt/states/zabbix_template.py": [
          "File: salt/states/zabbix_template.py -> salt/states/zabbix_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_user.py||salt/states/zabbix_user.py": [
          "File: salt/states/zabbix_user.py -> salt/states/zabbix_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_usergroup.py||salt/states/zabbix_usergroup.py": [
          "File: salt/states/zabbix_usergroup.py -> salt/states/zabbix_usergroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_usermacro.py||salt/states/zabbix_usermacro.py": [
          "File: salt/states/zabbix_usermacro.py -> salt/states/zabbix_usermacro.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zabbix_valuemap.py||salt/states/zabbix_valuemap.py": [
          "File: salt/states/zabbix_valuemap.py -> salt/states/zabbix_valuemap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zcbuildout.py||salt/states/zcbuildout.py": [
          "File: salt/states/zcbuildout.py -> salt/states/zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zenoss.py||salt/states/zenoss.py": [
          "File: salt/states/zenoss.py -> salt/states/zenoss.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zfs.py||salt/states/zfs.py": [
          "File: salt/states/zfs.py -> salt/states/zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zk_concurrency.py||salt/states/zk_concurrency.py": [
          "File: salt/states/zk_concurrency.py -> salt/states/zk_concurrency.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zone.py||salt/states/zone.py": [
          "File: salt/states/zone.py -> salt/states/zone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zookeeper.py||salt/states/zookeeper.py": [
          "File: salt/states/zookeeper.py -> salt/states/zookeeper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "salt/states/zpool.py||salt/states/zpool.py": [
          "File: salt/states/zpool.py -> salt/states/zpool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/__init__.py||tests/__init__.py": [
          "File: tests/__init__.py -> tests/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/buildpackage.py||tests/buildpackage.py": [
          "File: tests/buildpackage.py -> tests/buildpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/committer_parser.py||tests/committer_parser.py": [
          "File: tests/committer_parser.py -> tests/committer_parser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/conftest.py||tests/conftest.py": [
          "File: tests/conftest.py -> tests/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/eventlisten.py||tests/eventlisten.py": [
          "File: tests/eventlisten.py -> tests/eventlisten.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cli/test_custom_module.py||tests/integration/cli/test_custom_module.py": [
          "File: tests/integration/cli/test_custom_module.py -> tests/integration/cli/test_custom_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/client/test_kwarg.py||tests/integration/client/test_kwarg.py": [
          "File: tests/integration/client/test_kwarg.py -> tests/integration/client/test_kwarg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/client/test_standard.py||tests/integration/client/test_standard.py": [
          "File: tests/integration/client/test_standard.py -> tests/integration/client/test_standard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/client/test_syndic.py||tests/integration/client/test_syndic.py": [
          "File: tests/integration/client/test_syndic.py -> tests/integration/client/test_syndic.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_digitalocean.py||tests/integration/cloud/clouds/test_digitalocean.py": [
          "File: tests/integration/cloud/clouds/test_digitalocean.py -> tests/integration/cloud/clouds/test_digitalocean.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_dimensiondata.py||tests/integration/cloud/clouds/test_dimensiondata.py": [
          "File: tests/integration/cloud/clouds/test_dimensiondata.py -> tests/integration/cloud/clouds/test_dimensiondata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_ec2.py||tests/integration/cloud/clouds/test_ec2.py": [
          "File: tests/integration/cloud/clouds/test_ec2.py -> tests/integration/cloud/clouds/test_ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_gce.py||tests/integration/cloud/clouds/test_gce.py": [
          "File: tests/integration/cloud/clouds/test_gce.py -> tests/integration/cloud/clouds/test_gce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_gogrid.py||tests/integration/cloud/clouds/test_gogrid.py": [
          "File: tests/integration/cloud/clouds/test_gogrid.py -> tests/integration/cloud/clouds/test_gogrid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_linode.py||tests/integration/cloud/clouds/test_linode.py": [
          "File: tests/integration/cloud/clouds/test_linode.py -> tests/integration/cloud/clouds/test_linode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_oneandone.py||tests/integration/cloud/clouds/test_oneandone.py": [
          "File: tests/integration/cloud/clouds/test_oneandone.py -> tests/integration/cloud/clouds/test_oneandone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_openstack.py||tests/integration/cloud/clouds/test_openstack.py": [
          "File: tests/integration/cloud/clouds/test_openstack.py -> tests/integration/cloud/clouds/test_openstack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_profitbricks.py||tests/integration/cloud/clouds/test_profitbricks.py": [
          "File: tests/integration/cloud/clouds/test_profitbricks.py -> tests/integration/cloud/clouds/test_profitbricks.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_tencentcloud.py||tests/integration/cloud/clouds/test_tencentcloud.py": [
          "File: tests/integration/cloud/clouds/test_tencentcloud.py -> tests/integration/cloud/clouds/test_tencentcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_virtualbox.py||tests/integration/cloud/clouds/test_virtualbox.py": [
          "File: tests/integration/cloud/clouds/test_virtualbox.py -> tests/integration/cloud/clouds/test_virtualbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_vmware.py||tests/integration/cloud/clouds/test_vmware.py": [
          "File: tests/integration/cloud/clouds/test_vmware.py -> tests/integration/cloud/clouds/test_vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/clouds/test_vultrpy.py||tests/integration/cloud/clouds/test_vultrpy.py": [
          "File: tests/integration/cloud/clouds/test_vultrpy.py -> tests/integration/cloud/clouds/test_vultrpy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/helpers/__init__.py||tests/integration/cloud/helpers/__init__.py": [
          "File: tests/integration/cloud/helpers/__init__.py -> tests/integration/cloud/helpers/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/helpers/cloud_test_base.py||tests/integration/cloud/helpers/cloud_test_base.py": [
          "File: tests/integration/cloud/helpers/cloud_test_base.py -> tests/integration/cloud/helpers/cloud_test_base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/helpers/virtualbox.py||tests/integration/cloud/helpers/virtualbox.py": [
          "File: tests/integration/cloud/helpers/virtualbox.py -> tests/integration/cloud/helpers/virtualbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/cloud/test_cloud.py||tests/integration/cloud/test_cloud.py": [
          "File: tests/integration/cloud/test_cloud.py -> tests/integration/cloud/test_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/conftest.py||tests/integration/conftest.py": [
          "File: tests/integration/conftest.py -> tests/integration/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/externalapi/test_venafiapi.py||tests/integration/externalapi/test_venafiapi.py": [
          "File: tests/integration/externalapi/test_venafiapi.py -> tests/integration/externalapi/test_venafiapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/extension_modules/pillar/ext_pillar_opts.py||tests/integration/files/extension_modules/pillar/ext_pillar_opts.py": [
          "File: tests/integration/files/extension_modules/pillar/ext_pillar_opts.py -> tests/integration/files/extension_modules/pillar/ext_pillar_opts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/extension_modules/tops/master_tops_test.py||tests/integration/files/extension_modules/tops/master_tops_test.py": [
          "File: tests/integration/files/extension_modules/tops/master_tops_test.py -> tests/integration/files/extension_modules/tops/master_tops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_executors/arg.py||tests/integration/files/file/base/_executors/arg.py": [
          "File: tests/integration/files/file/base/_executors/arg.py -> tests/integration/files/file/base/_executors/arg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_grains/custom_grain2.py||tests/integration/files/file/base/_grains/custom_grain2.py": [
          "File: tests/integration/files/file/base/_grains/custom_grain2.py -> tests/integration/files/file/base/_grains/custom_grain2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_grains/custom_grains.py||tests/integration/files/file/base/_grains/custom_grains.py": [
          "File: tests/integration/files/file/base/_grains/custom_grains.py -> tests/integration/files/file/base/_grains/custom_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_grains/matcher_grain.py||tests/integration/files/file/base/_grains/matcher_grain.py": [
          "File: tests/integration/files/file/base/_grains/matcher_grain.py -> tests/integration/files/file/base/_grains/matcher_grain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/depends_versioned.py||tests/integration/files/file/base/_modules/depends_versioned.py": [
          "File: tests/integration/files/file/base/_modules/depends_versioned.py -> tests/integration/files/file/base/_modules/depends_versioned.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/depends_versionless.py||tests/integration/files/file/base/_modules/depends_versionless.py": [
          "File: tests/integration/files/file/base/_modules/depends_versionless.py -> tests/integration/files/file/base/_modules/depends_versionless.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/override_test.py||tests/integration/files/file/base/_modules/override_test.py": [
          "File: tests/integration/files/file/base/_modules/override_test.py -> tests/integration/files/file/base/_modules/override_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/runtests_decorators.py||tests/integration/files/file/base/_modules/runtests_decorators.py": [
          "File: tests/integration/files/file/base/_modules/runtests_decorators.py -> tests/integration/files/file/base/_modules/runtests_decorators.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/runtests_helpers.py||tests/integration/files/file/base/_modules/runtests_helpers.py": [
          "File: tests/integration/files/file/base/_modules/runtests_helpers.py -> tests/integration/files/file/base/_modules/runtests_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_modules/salttest.py||tests/integration/files/file/base/_modules/salttest.py": [
          "File: tests/integration/files/file/base/_modules/salttest.py -> tests/integration/files/file/base/_modules/salttest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_runners/runtests_helpers.py||tests/integration/files/file/base/_runners/runtests_helpers.py": [
          "File: tests/integration/files/file/base/_runners/runtests_helpers.py -> tests/integration/files/file/base/_runners/runtests_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_states/salttest.py||tests/integration/files/file/base/_states/salttest.py": [
          "File: tests/integration/files/file/base/_states/salttest.py -> tests/integration/files/file/base/_states/salttest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/_wheel/runtests_helpers.py||tests/integration/files/file/base/_wheel/runtests_helpers.py": [
          "File: tests/integration/files/file/base/_wheel/runtests_helpers.py -> tests/integration/files/file/base/_wheel/runtests_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/buildout/var/tb/2/bootstrap.py||tests/integration/files/file/base/buildout/var/t2/bootstrap.py": [
          "File: tests/integration/files/file/base/buildout/var/tb/2/bootstrap.py -> tests/integration/files/file/base/buildout/var/t2/bootstrap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py||tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py": [
          "File: tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py -> tests/integration/files/file/base/buildout/var/ver/1/bootstrap/bootstrap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py||tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py": [
          "File: tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py -> tests/integration/files/file/base/buildout/var/ver/2/bootstrap/bootstrap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/file/base/script.py||tests/integration/files/file/base/script.py": [
          "File: tests/integration/files/file/base/script.py -> tests/integration/files/file/base/script.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/files/returners/noop_returner.py||tests/integration/files/returners/noop_returner.py": [
          "File: tests/integration/files/returners/noop_returner.py -> tests/integration/files/returners/noop_returner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/grains/test_core.py||tests/integration/grains/test_core.py": [
          "File: tests/integration/grains/test_core.py -> tests/integration/grains/test_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/grains/test_custom.py||tests/integration/grains/test_custom.py": [
          "File: tests/integration/grains/test_custom.py -> tests/integration/grains/test_custom.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/loader/test_ext_grains.py||tests/integration/loader/test_ext_grains.py": [
          "File: tests/integration/loader/test_ext_grains.py -> tests/integration/loader/test_ext_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/loader/test_ext_modules.py||tests/integration/loader/test_ext_modules.py": [
          "File: tests/integration/loader/test_ext_modules.py -> tests/integration/loader/test_ext_modules.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/master/test_event_return.py||tests/integration/master/test_event_return.py": [
          "File: tests/integration/master/test_event_return.py -> tests/integration/master/test_event_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/minion/test_executor.py||tests/integration/minion/test_executor.py": [
          "File: tests/integration/minion/test_executor.py -> tests/integration/minion/test_executor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/minion/test_minion_cache.py||tests/integration/minion/test_minion_cache.py": [
          "File: tests/integration/minion/test_minion_cache.py -> tests/integration/minion/test_minion_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/minion/test_timeout.py||tests/integration/minion/test_timeout.py": [
          "File: tests/integration/minion/test_timeout.py -> tests/integration/minion/test_timeout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_boto_iam.py||tests/integration/modules/test_boto_iam.py": [
          "File: tests/integration/modules/test_boto_iam.py -> tests/integration/modules/test_boto_iam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_boto_sns.py||tests/integration/modules/test_boto_sns.py": [
          "File: tests/integration/modules/test_boto_sns.py -> tests/integration/modules/test_boto_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_chocolatey.py||tests/integration/modules/test_chocolatey.py": [
          "File: tests/integration/modules/test_chocolatey.py -> tests/integration/modules/test_chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_cmdmod.py||tests/integration/modules/test_cmdmod.py": [
          "File: tests/integration/modules/test_cmdmod.py -> tests/integration/modules/test_cmdmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_config.py||tests/integration/modules/test_config.py": [
          "File: tests/integration/modules/test_config.py -> tests/integration/modules/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_cp.py||tests/integration/modules/test_cp.py": [
          "File: tests/integration/modules/test_cp.py -> tests/integration/modules/test_cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_decorators.py||tests/integration/modules/test_decorators.py": [
          "File: tests/integration/modules/test_decorators.py -> tests/integration/modules/test_decorators.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_disk.py||tests/integration/modules/test_disk.py": [
          "File: tests/integration/modules/test_disk.py -> tests/integration/modules/test_disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_file.py||tests/integration/modules/test_file.py": [
          "File: tests/integration/modules/test_file.py -> tests/integration/modules/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_gem.py||tests/integration/modules/test_gem.py": [
          "File: tests/integration/modules/test_gem.py -> tests/integration/modules/test_gem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_gentoolkitmod.py||tests/integration/modules/test_gentoolkitmod.py": [
          "File: tests/integration/modules/test_gentoolkitmod.py -> tests/integration/modules/test_gentoolkitmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_git.py||tests/integration/modules/test_git.py": [
          "File: tests/integration/modules/test_git.py -> tests/integration/modules/test_git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_groupadd.py||tests/integration/modules/test_groupadd.py": [
          "File: tests/integration/modules/test_groupadd.py -> tests/integration/modules/test_groupadd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_hosts.py||tests/integration/modules/test_hosts.py": [
          "File: tests/integration/modules/test_hosts.py -> tests/integration/modules/test_hosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_key.py||tests/integration/modules/test_key.py": [
          "File: tests/integration/modules/test_key.py -> tests/integration/modules/test_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_linux_acl.py||tests/integration/modules/test_linux_acl.py": [
          "File: tests/integration/modules/test_linux_acl.py -> tests/integration/modules/test_linux_acl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_linux_shadow.py||tests/integration/modules/test_linux_shadow.py": [
          "File: tests/integration/modules/test_linux_shadow.py -> tests/integration/modules/test_linux_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_localemod.py||tests/integration/modules/test_localemod.py": [
          "File: tests/integration/modules/test_localemod.py -> tests/integration/modules/test_localemod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_lxc.py||tests/integration/modules/test_lxc.py": [
          "File: tests/integration/modules/test_lxc.py -> tests/integration/modules/test_lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_macdefaults.py||tests/integration/modules/test_macdefaults.py": [
          "File: tests/integration/modules/test_macdefaults.py -> tests/integration/modules/test_macdefaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_mine.py||tests/integration/modules/test_mine.py": [
          "File: tests/integration/modules/test_mine.py -> tests/integration/modules/test_mine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_mysql.py||tests/integration/modules/test_mysql.py": [
          "File: tests/integration/modules/test_mysql.py -> tests/integration/modules/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_publish.py||tests/integration/modules/test_publish.py": [
          "File: tests/integration/modules/test_publish.py -> tests/integration/modules/test_publish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_pw_user.py||tests/integration/modules/test_pw_user.py": [
          "File: tests/integration/modules/test_pw_user.py -> tests/integration/modules/test_pw_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_rabbitmq.py||tests/integration/modules/test_rabbitmq.py": [
          "File: tests/integration/modules/test_rabbitmq.py -> tests/integration/modules/test_rabbitmq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_saltcheck.py||tests/integration/modules/test_saltcheck.py": [
          "File: tests/integration/modules/test_saltcheck.py -> tests/integration/modules/test_saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_ssh.py||tests/integration/modules/test_ssh.py": [
          "File: tests/integration/modules/test_ssh.py -> tests/integration/modules/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_status.py||tests/integration/modules/test_status.py": [
          "File: tests/integration/modules/test_status.py -> tests/integration/modules/test_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_supervisord.py||tests/integration/modules/test_supervisord.py": [
          "File: tests/integration/modules/test_supervisord.py -> tests/integration/modules/test_supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_sysctl.py||tests/integration/modules/test_sysctl.py": [
          "File: tests/integration/modules/test_sysctl.py -> tests/integration/modules/test_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_sysrc.py||tests/integration/modules/test_sysrc.py": [
          "File: tests/integration/modules/test_sysrc.py -> tests/integration/modules/test_sysrc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_test.py||tests/integration/modules/test_test.py": [
          "File: tests/integration/modules/test_test.py -> tests/integration/modules/test_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_timezone.py||tests/integration/modules/test_timezone.py": [
          "File: tests/integration/modules/test_timezone.py -> tests/integration/modules/test_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_tls.py||tests/integration/modules/test_tls.py": [
          "File: tests/integration/modules/test_tls.py -> tests/integration/modules/test_tls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_autoruns.py||tests/integration/modules/test_win_autoruns.py": [
          "File: tests/integration/modules/test_win_autoruns.py -> tests/integration/modules/test_win_autoruns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_dns_client.py||tests/integration/modules/test_win_dns_client.py": [
          "File: tests/integration/modules/test_win_dns_client.py -> tests/integration/modules/test_win_dns_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_firewall.py||tests/integration/modules/test_win_firewall.py": [
          "File: tests/integration/modules/test_win_firewall.py -> tests/integration/modules/test_win_firewall.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_ip.py||tests/integration/modules/test_win_ip.py": [
          "File: tests/integration/modules/test_win_ip.py -> tests/integration/modules/test_win_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_ntp.py||tests/integration/modules/test_win_ntp.py": [
          "File: tests/integration/modules/test_win_ntp.py -> tests/integration/modules/test_win_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_pkg.py||tests/integration/modules/test_win_pkg.py": [
          "File: tests/integration/modules/test_win_pkg.py -> tests/integration/modules/test_win_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_servermanager.py||tests/integration/modules/test_win_servermanager.py": [
          "File: tests/integration/modules/test_win_servermanager.py -> tests/integration/modules/test_win_servermanager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/modules/test_win_task.py||tests/integration/modules/test_win_task.py": [
          "File: tests/integration/modules/test_win_task.py -> tests/integration/modules/test_win_task.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/netapi/rest_tornado/test_app.py||tests/integration/netapi/rest_tornado/test_app.py": [
          "File: tests/integration/netapi/rest_tornado/test_app.py -> tests/integration/netapi/rest_tornado/test_app.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/output/test_output.py||tests/integration/output/test_output.py": [
          "File: tests/integration/output/test_output.py -> tests/integration/output/test_output.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/pillar/test_git_pillar.py||tests/integration/pillar/test_git_pillar.py": [
          "File: tests/integration/pillar/test_git_pillar.py -> tests/integration/pillar/test_git_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/renderers/test_pydsl.py||tests/integration/renderers/test_pydsl.py": [
          "File: tests/integration/renderers/test_pydsl.py -> tests/integration/renderers/test_pydsl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/returners/test_appoptics_return.py||tests/integration/returners/test_appoptics_return.py": [
          "File: tests/integration/returners/test_appoptics_return.py -> tests/integration/returners/test_appoptics_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/returners/test_librato_return.py||tests/integration/returners/test_librato_return.py": [
          "File: tests/integration/returners/test_librato_return.py -> tests/integration/returners/test_librato_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/runners/test_fileserver.py||tests/integration/runners/test_fileserver.py": [
          "File: tests/integration/runners/test_fileserver.py -> tests/integration/runners/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/runners/test_manage.py||tests/integration/runners/test_manage.py": [
          "File: tests/integration/runners/test_manage.py -> tests/integration/runners/test_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/runners/test_runner_returns.py||tests/integration/runners/test_runner_returns.py": [
          "File: tests/integration/runners/test_runner_returns.py -> tests/integration/runners/test_runner_returns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/runners/test_salt.py||tests/integration/runners/test_salt.py": [
          "File: tests/integration/runners/test_salt.py -> tests/integration/runners/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/sdb/test_env.py||tests/integration/sdtest_env.py": [
          "File: tests/integration/sdb/test_env.py -> tests/integration/sdtest_env.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/shell/test_arguments.py||tests/integration/shell/test_arguments.py": [
          "File: tests/integration/shell/test_arguments.py -> tests/integration/shell/test_arguments.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/shell/test_enabled.py||tests/integration/shell/test_enabled.py": [
          "File: tests/integration/shell/test_enabled.py -> tests/integration/shell/test_enabled.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/shell/test_master_tops.py||tests/integration/shell/test_master_tops.py": [
          "File: tests/integration/shell/test_master_tops.py -> tests/integration/shell/test_master_tops.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/shell/test_spm.py||tests/integration/shell/test_spm.py": [
          "File: tests/integration/shell/test_spm.py -> tests/integration/shell/test_spm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_build.py||tests/integration/spm/test_build.py": [
          "File: tests/integration/spm/test_build.py -> tests/integration/spm/test_build.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_files.py||tests/integration/spm/test_files.py": [
          "File: tests/integration/spm/test_files.py -> tests/integration/spm/test_files.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_info.py||tests/integration/spm/test_info.py": [
          "File: tests/integration/spm/test_info.py -> tests/integration/spm/test_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_install.py||tests/integration/spm/test_install.py": [
          "File: tests/integration/spm/test_install.py -> tests/integration/spm/test_install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_remove.py||tests/integration/spm/test_remove.py": [
          "File: tests/integration/spm/test_remove.py -> tests/integration/spm/test_remove.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/spm/test_repo.py||tests/integration/spm/test_repo.py": [
          "File: tests/integration/spm/test_repo.py -> tests/integration/spm/test_repo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/ssh/test_state.py||tests/integration/ssh/test_state.py": [
          "File: tests/integration/ssh/test_state.py -> tests/integration/ssh/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_alternatives.py||tests/integration/states/test_alternatives.py": [
          "File: tests/integration/states/test_alternatives.py -> tests/integration/states/test_alternatives.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_archive.py||tests/integration/states/test_archive.py": [
          "File: tests/integration/states/test_archive.py -> tests/integration/states/test_archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_boto_sns.py||tests/integration/states/test_boto_sns.py": [
          "File: tests/integration/states/test_boto_sns.py -> tests/integration/states/test_boto_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_bower.py||tests/integration/states/test_bower.py": [
          "File: tests/integration/states/test_bower.py -> tests/integration/states/test_bower.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_chocolatey.py||tests/integration/states/test_chocolatey.py": [
          "File: tests/integration/states/test_chocolatey.py -> tests/integration/states/test_chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_cmd.py||tests/integration/states/test_cmd.py": [
          "File: tests/integration/states/test_cmd.py -> tests/integration/states/test_cmd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_compiler.py||tests/integration/states/test_compiler.py": [
          "File: tests/integration/states/test_compiler.py -> tests/integration/states/test_compiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_git.py||tests/integration/states/test_git.py": [
          "File: tests/integration/states/test_git.py -> tests/integration/states/test_git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_handle_error.py||tests/integration/states/test_handle_error.py": [
          "File: tests/integration/states/test_handle_error.py -> tests/integration/states/test_handle_error.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_handle_iorder.py||tests/integration/states/test_handle_iorder.py": [
          "File: tests/integration/states/test_handle_iorder.py -> tests/integration/states/test_handle_iorder.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_host.py||tests/integration/states/test_host.py": [
          "File: tests/integration/states/test_host.py -> tests/integration/states/test_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_keystone.py||tests/integration/states/test_keystone.py": [
          "File: tests/integration/states/test_keystone.py -> tests/integration/states/test_keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_lxd.py||tests/integration/states/test_lxd.py": [
          "File: tests/integration/states/test_lxd.py -> tests/integration/states/test_lxd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_lxd_container.py||tests/integration/states/test_lxd_container.py": [
          "File: tests/integration/states/test_lxd_container.py -> tests/integration/states/test_lxd_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_lxd_image.py||tests/integration/states/test_lxd_image.py": [
          "File: tests/integration/states/test_lxd_image.py -> tests/integration/states/test_lxd_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_lxd_profile.py||tests/integration/states/test_lxd_profile.py": [
          "File: tests/integration/states/test_lxd_profile.py -> tests/integration/states/test_lxd_profile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_match.py||tests/integration/states/test_match.py": [
          "File: tests/integration/states/test_match.py -> tests/integration/states/test_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_mysql_database.py||tests/integration/states/test_mysql_database.py": [
          "File: tests/integration/states/test_mysql_database.py -> tests/integration/states/test_mysql_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_mysql_grants.py||tests/integration/states/test_mysql_grants.py": [
          "File: tests/integration/states/test_mysql_grants.py -> tests/integration/states/test_mysql_grants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_network.py||tests/integration/states/test_network.py": [
          "File: tests/integration/states/test_network.py -> tests/integration/states/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_rabbitmq_user.py||tests/integration/states/test_rabbitmq_user.py": [
          "File: tests/integration/states/test_rabbitmq_user.py -> tests/integration/states/test_rabbitmq_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_rabbitmq_vhost.py||tests/integration/states/test_rabbitmq_vhost.py": [
          "File: tests/integration/states/test_rabbitmq_vhost.py -> tests/integration/states/test_rabbitmq_vhost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_reg.py||tests/integration/states/test_reg.py": [
          "File: tests/integration/states/test_reg.py -> tests/integration/states/test_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_renderers.py||tests/integration/states/test_renderers.py": [
          "File: tests/integration/states/test_renderers.py -> tests/integration/states/test_renderers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_ssh_auth.py||tests/integration/states/test_ssh_auth.py": [
          "File: tests/integration/states/test_ssh_auth.py -> tests/integration/states/test_ssh_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_ssh_known_hosts.py||tests/integration/states/test_ssh_known_hosts.py": [
          "File: tests/integration/states/test_ssh_known_hosts.py -> tests/integration/states/test_ssh_known_hosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_supervisord.py||tests/integration/states/test_supervisord.py": [
          "File: tests/integration/states/test_supervisord.py -> tests/integration/states/test_supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/states/test_x509.py||tests/integration/states/test_x509.py": [
          "File: tests/integration/states/test_x509.py -> tests/integration/states/test_x509.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/utils/__init__.py||tests/integration/utils/__init__.py": [
          "File: tests/integration/utils/__init__.py -> tests/integration/utils/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/utils/test_idem.py||tests/integration/utils/test_idem.py": [
          "File: tests/integration/utils/test_idem.py -> tests/integration/utils/test_idem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/utils/test_smb.py||tests/integration/utils/test_smb.py": [
          "File: tests/integration/utils/test_smb.py -> tests/integration/utils/test_smb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/integration/utils/test_win_runas.py||tests/integration/utils/test_win_runas.py": [
          "File: tests/integration/utils/test_win_runas.py -> tests/integration/utils/test_win_runas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/kitchen/test_kitchen.py||tests/kitchen/test_kitchen.py": [
          "File: tests/kitchen/test_kitchen.py -> tests/kitchen/test_kitchen.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/kitchen/tests/wordpress/tests/conftest.py||tests/kitchen/tests/wordpress/tests/conftest.py": [
          "File: tests/kitchen/tests/wordpress/tests/conftest.py -> tests/kitchen/tests/wordpress/tests/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/kitchen/tests/wordpress/tests/salt/test_salt.py||tests/kitchen/tests/wordpress/tests/salt/test_salt.py": [
          "File: tests/kitchen/tests/wordpress/tests/salt/test_salt.py -> tests/kitchen/tests/wordpress/tests/salt/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py||tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py": [
          "File: tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py -> tests/kitchen/tests/wordpress/tests/salt/test_wordpress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/minionswarm.py||tests/minionswarm.py": [
          "File: tests/minionswarm.py -> tests/minionswarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/modparser.py||tests/modparser.py": [
          "File: tests/modparser.py -> tests/modparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/packdump.py||tests/packdump.py": [
          "File: tests/packdump.py -> tests/packdump.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/conftest.py||tests/pytests/conftest.py": [
          "File: tests/pytests/conftest.py -> tests/pytests/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/helpers.py||tests/pytests/functional/cache/helpers.py": [
          "File: tests/pytests/functional/cache/helpers.py -> tests/pytests/functional/cache/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_consul.py||tests/pytests/functional/cache/test_consul.py": [
          "File: tests/pytests/functional/cache/test_consul.py -> tests/pytests/functional/cache/test_consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_etcd.py||tests/pytests/functional/cache/test_etcd.py": [
          "File: tests/pytests/functional/cache/test_etcd.py -> tests/pytests/functional/cache/test_etcd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_localfs.py||tests/pytests/functional/cache/test_localfs.py": [
          "File: tests/pytests/functional/cache/test_localfs.py -> tests/pytests/functional/cache/test_localfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_memcache.py||tests/pytests/functional/cache/test_memcache.py": [
          "File: tests/pytests/functional/cache/test_memcache.py -> tests/pytests/functional/cache/test_memcache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_mysql.py||tests/pytests/functional/cache/test_mysql.py": [
          "File: tests/pytests/functional/cache/test_mysql.py -> tests/pytests/functional/cache/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cache/test_redis.py||tests/pytests/functional/cache/test_redis.py": [
          "File: tests/pytests/functional/cache/test_redis.py -> tests/pytests/functional/cache/test_redis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/channel/conftest.py||tests/pytests/functional/channel/conftest.py": [
          "File: tests/pytests/functional/channel/conftest.py -> tests/pytests/functional/channel/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/channel/test_client.py||tests/pytests/functional/channel/test_client.py": [
          "File: tests/pytests/functional/channel/test_client.py -> tests/pytests/functional/channel/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/channel/test_server.py||tests/pytests/functional/channel/test_server.py": [
          "File: tests/pytests/functional/channel/test_server.py -> tests/pytests/functional/channel/test_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/conftest.py||tests/pytests/functional/cli/conftest.py": [
          "File: tests/pytests/functional/cli/conftest.py -> tests/pytests/functional/cli/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_api.py||tests/pytests/functional/cli/test_api.py": [
          "File: tests/pytests/functional/cli/test_api.py -> tests/pytests/functional/cli/test_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_batch.py||tests/pytests/functional/cli/test_batch.py": [
          "File: tests/pytests/functional/cli/test_batch.py -> tests/pytests/functional/cli/test_batch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt.py||tests/pytests/functional/cli/test_salt.py": [
          "File: tests/pytests/functional/cli/test_salt.py -> tests/pytests/functional/cli/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_cloud.py||tests/pytests/functional/cli/test_salt_cloud.py": [
          "File: tests/pytests/functional/cli/test_salt_cloud.py -> tests/pytests/functional/cli/test_salt_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_deltaproxy.py||tests/pytests/functional/cli/test_salt_deltaproxy.py": [
          "File: tests/pytests/functional/cli/test_salt_deltaproxy.py -> tests/pytests/functional/cli/test_salt_deltaproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_master.py||tests/pytests/functional/cli/test_salt_master.py": [
          "File: tests/pytests/functional/cli/test_salt_master.py -> tests/pytests/functional/cli/test_salt_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_pip.py||tests/pytests/functional/cli/test_salt_pip.py": [
          "File: tests/pytests/functional/cli/test_salt_pip.py -> tests/pytests/functional/cli/test_salt_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_run_.py||tests/pytests/functional/cli/test_salt_run_.py": [
          "File: tests/pytests/functional/cli/test_salt_run_.py -> tests/pytests/functional/cli/test_salt_run_.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/cli/test_salt_run_show_jid.py||tests/pytests/functional/cli/test_salt_run_show_jid.py": [
          "File: tests/pytests/functional/cli/test_salt_run_show_jid.py -> tests/pytests/functional/cli/test_salt_run_show_jid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/conftest.py||tests/pytests/functional/conftest.py": [
          "File: tests/pytests/functional/conftest.py -> tests/pytests/functional/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/fileserver/hgfs/test_hgfs.py||tests/pytests/functional/fileserver/hgfs/test_hgfs.py": [
          "File: tests/pytests/functional/fileserver/hgfs/test_hgfs.py -> tests/pytests/functional/fileserver/hgfs/test_hgfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/fileserver/test_roots.py||tests/pytests/functional/fileserver/test_roots.py": [
          "File: tests/pytests/functional/fileserver/test_roots.py -> tests/pytests/functional/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/conftest.py||tests/pytests/functional/formulas/conftest.py": [
          "File: tests/pytests/functional/formulas/conftest.py -> tests/pytests/functional/formulas/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_docker.py||tests/pytests/functional/formulas/test_docker.py": [
          "File: tests/pytests/functional/formulas/test_docker.py -> tests/pytests/functional/formulas/test_docker.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_nginx.py||tests/pytests/functional/formulas/test_nginx.py": [
          "File: tests/pytests/functional/formulas/test_nginx.py -> tests/pytests/functional/formulas/test_nginx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_salt.py||tests/pytests/functional/formulas/test_salt.py": [
          "File: tests/pytests/functional/formulas/test_salt.py -> tests/pytests/functional/formulas/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_sudoers.py||tests/pytests/functional/formulas/test_sudoers.py": [
          "File: tests/pytests/functional/formulas/test_sudoers.py -> tests/pytests/functional/formulas/test_sudoers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_users.py||tests/pytests/functional/formulas/test_users.py": [
          "File: tests/pytests/functional/formulas/test_users.py -> tests/pytests/functional/formulas/test_users.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/formulas/test_vim.py||tests/pytests/functional/formulas/test_vim.py": [
          "File: tests/pytests/functional/formulas/test_vim.py -> tests/pytests/functional/formulas/test_vim.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/grains/test_grains.py||tests/pytests/functional/grains/test_grains.py": [
          "File: tests/pytests/functional/grains/test_grains.py -> tests/pytests/functional/grains/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/loader/test_loaded_base_name.py||tests/pytests/functional/loader/test_loaded_base_name.py": [
          "File: tests/pytests/functional/loader/test_loaded_base_name.py -> tests/pytests/functional/loader/test_loaded_base_name.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/loader/test_loader.py||tests/pytests/functional/loader/test_loader.py": [
          "File: tests/pytests/functional/loader/test_loader.py -> tests/pytests/functional/loader/test_loader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/log_handlers/test_logstash_mod.py||tests/pytests/functional/log_handlers/test_logstash_mod.py": [
          "File: tests/pytests/functional/log_handlers/test_logstash_mod.py -> tests/pytests/functional/log_handlers/test_logstash_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/masterminion/test_masterminion_conf.py||tests/pytests/functional/masterminion/test_masterminion_conf.py": [
          "File: tests/pytests/functional/masterminion/test_masterminion_conf.py -> tests/pytests/functional/masterminion/test_masterminion_conf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/cmd/test_powershell.py||tests/pytests/functional/modules/cmd/test_powershell.py": [
          "File: tests/pytests/functional/modules/cmd/test_powershell.py -> tests/pytests/functional/modules/cmd/test_powershell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/cmd/test_runas.py||tests/pytests/functional/modules/cmd/test_runas.py": [
          "File: tests/pytests/functional/modules/cmd/test_runas.py -> tests/pytests/functional/modules/cmd/test_runas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/conftest.py||tests/pytests/functional/modules/conftest.py": [
          "File: tests/pytests/functional/modules/conftest.py -> tests/pytests/functional/modules/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/file/test_readlink.py||tests/pytests/functional/modules/file/test_readlink.py": [
          "File: tests/pytests/functional/modules/file/test_readlink.py -> tests/pytests/functional/modules/file/test_readlink.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/file/test_replace.py||tests/pytests/functional/modules/file/test_replace.py": [
          "File: tests/pytests/functional/modules/file/test_replace.py -> tests/pytests/functional/modules/file/test_replace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/file/test_rmdir.py||tests/pytests/functional/modules/file/test_rmdir.py": [
          "File: tests/pytests/functional/modules/file/test_rmdir.py -> tests/pytests/functional/modules/file/test_rmdir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/file/test_symlink.py||tests/pytests/functional/modules/file/test_symlink.py": [
          "File: tests/pytests/functional/modules/file/test_symlink.py -> tests/pytests/functional/modules/file/test_symlink.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/file/test_touch.py||tests/pytests/functional/modules/file/test_touch.py": [
          "File: tests/pytests/functional/modules/file/test_touch.py -> tests/pytests/functional/modules/file/test_touch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/pillar/test_config.py||tests/pytests/functional/modules/pillar/test_config.py": [
          "File: tests/pytests/functional/modules/pillar/test_config.py -> tests/pytests/functional/modules/pillar/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/pillar/test_default.py||tests/pytests/functional/modules/pillar/test_default.py": [
          "File: tests/pytests/functional/modules/pillar/test_default.py -> tests/pytests/functional/modules/pillar/test_default.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/conftest.py||tests/pytests/functional/modules/state/conftest.py": [
          "File: tests/pytests/functional/modules/state/conftest.py -> tests/pytests/functional/modules/state/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/__init__.py||tests/pytests/functional/modules/state/requisites/__init__.py": [
          "File: tests/pytests/functional/modules/state/requisites/__init__.py -> tests/pytests/functional/modules/state/requisites/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_listen.py||tests/pytests/functional/modules/state/requisites/test_listen.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_listen.py -> tests/pytests/functional/modules/state/requisites/test_listen.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_mixed.py||tests/pytests/functional/modules/state/requisites/test_mixed.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_mixed.py -> tests/pytests/functional/modules/state/requisites/test_mixed.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_onchanges.py||tests/pytests/functional/modules/state/requisites/test_onchanges.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_onchanges.py -> tests/pytests/functional/modules/state/requisites/test_onchanges.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_onfail.py||tests/pytests/functional/modules/state/requisites/test_onfail.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_onfail.py -> tests/pytests/functional/modules/state/requisites/test_onfail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_onlyif.py||tests/pytests/functional/modules/state/requisites/test_onlyif.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_onlyif.py -> tests/pytests/functional/modules/state/requisites/test_onlyif.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_prereq.py||tests/pytests/functional/modules/state/requisites/test_prereq.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_prereq.py -> tests/pytests/functional/modules/state/requisites/test_prereq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_require.py||tests/pytests/functional/modules/state/requisites/test_require.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_require.py -> tests/pytests/functional/modules/state/requisites/test_require.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_unless.py||tests/pytests/functional/modules/state/requisites/test_unless.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_unless.py -> tests/pytests/functional/modules/state/requisites/test_unless.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_use.py||tests/pytests/functional/modules/state/requisites/test_use.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_use.py -> tests/pytests/functional/modules/state/requisites/test_use.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/requisites/test_watch.py||tests/pytests/functional/modules/state/requisites/test_watch.py": [
          "File: tests/pytests/functional/modules/state/requisites/test_watch.py -> tests/pytests/functional/modules/state/requisites/test_watch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/test_jinja_filters.py||tests/pytests/functional/modules/state/test_jinja_filters.py": [
          "File: tests/pytests/functional/modules/state/test_jinja_filters.py -> tests/pytests/functional/modules/state/test_jinja_filters.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/test_jinja_renderer.py||tests/pytests/functional/modules/state/test_jinja_renderer.py": [
          "File: tests/pytests/functional/modules/state/test_jinja_renderer.py -> tests/pytests/functional/modules/state/test_jinja_renderer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/test_mako_renderer.py||tests/pytests/functional/modules/state/test_mako_renderer.py": [
          "File: tests/pytests/functional/modules/state/test_mako_renderer.py -> tests/pytests/functional/modules/state/test_mako_renderer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/test_pyobjects_renderer.py||tests/pytests/functional/modules/state/test_pyobjects_renderer.py": [
          "File: tests/pytests/functional/modules/state/test_pyobjects_renderer.py -> tests/pytests/functional/modules/state/test_pyobjects_renderer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/state/test_state.py||tests/pytests/functional/modules/state/test_state.py": [
          "File: tests/pytests/functional/modules/state/test_state.py -> tests/pytests/functional/modules/state/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_aliases.py||tests/pytests/functional/modules/test_aliases.py": [
          "File: tests/pytests/functional/modules/test_aliases.py -> tests/pytests/functional/modules/test_aliases.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_ansiblegate.py||tests/pytests/functional/modules/test_ansiblegate.py": [
          "File: tests/pytests/functional/modules/test_ansiblegate.py -> tests/pytests/functional/modules/test_ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_aptpkg.py||tests/pytests/functional/modules/test_aptpkg.py": [
          "File: tests/pytests/functional/modules/test_aptpkg.py -> tests/pytests/functional/modules/test_aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_archive.py||tests/pytests/functional/modules/test_archive.py": [
          "File: tests/pytests/functional/modules/test_archive.py -> tests/pytests/functional/modules/test_archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_data.py||tests/pytests/functional/modules/test_data.py": [
          "File: tests/pytests/functional/modules/test_data.py -> tests/pytests/functional/modules/test_data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_defaults.py||tests/pytests/functional/modules/test_defaults.py": [
          "File: tests/pytests/functional/modules/test_defaults.py -> tests/pytests/functional/modules/test_defaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_dockermod.py||tests/pytests/functional/modules/test_dockermod.py": [
          "File: tests/pytests/functional/modules/test_dockermod.py -> tests/pytests/functional/modules/test_dockermod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_etcd_mod.py||tests/pytests/functional/modules/test_etcd_mod.py": [
          "File: tests/pytests/functional/modules/test_etcd_mod.py -> tests/pytests/functional/modules/test_etcd_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_freezer.py||tests/pytests/functional/modules/test_freezer.py": [
          "File: tests/pytests/functional/modules/test_freezer.py -> tests/pytests/functional/modules/test_freezer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_gpg.py||tests/pytests/functional/modules/test_gpg.py": [
          "File: tests/pytests/functional/modules/test_gpg.py -> tests/pytests/functional/modules/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_grains.py||tests/pytests/functional/modules/test_grains.py": [
          "File: tests/pytests/functional/modules/test_grains.py -> tests/pytests/functional/modules/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_http.py||tests/pytests/functional/modules/test_http.py": [
          "File: tests/pytests/functional/modules/test_http.py -> tests/pytests/functional/modules/test_http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_ipset.py||tests/pytests/functional/modules/test_ipset.py": [
          "File: tests/pytests/functional/modules/test_ipset.py -> tests/pytests/functional/modules/test_ipset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_assistive.py||tests/pytests/functional/modules/test_mac_assistive.py": [
          "File: tests/pytests/functional/modules/test_mac_assistive.py -> tests/pytests/functional/modules/test_mac_assistive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_brew_pkg.py||tests/pytests/functional/modules/test_mac_brew_pkg.py": [
          "File: tests/pytests/functional/modules/test_mac_brew_pkg.py -> tests/pytests/functional/modules/test_mac_brew_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_desktop.py||tests/pytests/functional/modules/test_mac_desktop.py": [
          "File: tests/pytests/functional/modules/test_mac_desktop.py -> tests/pytests/functional/modules/test_mac_desktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_group.py||tests/pytests/functional/modules/test_mac_group.py": [
          "File: tests/pytests/functional/modules/test_mac_group.py -> tests/pytests/functional/modules/test_mac_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_keychain.py||tests/pytests/functional/modules/test_mac_keychain.py": [
          "File: tests/pytests/functional/modules/test_mac_keychain.py -> tests/pytests/functional/modules/test_mac_keychain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_pkgutil.py||tests/pytests/functional/modules/test_mac_pkgutil.py": [
          "File: tests/pytests/functional/modules/test_mac_pkgutil.py -> tests/pytests/functional/modules/test_mac_pkgutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_portspkg.py||tests/pytests/functional/modules/test_mac_portspkg.py": [
          "File: tests/pytests/functional/modules/test_mac_portspkg.py -> tests/pytests/functional/modules/test_mac_portspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_power.py||tests/pytests/functional/modules/test_mac_power.py": [
          "File: tests/pytests/functional/modules/test_mac_power.py -> tests/pytests/functional/modules/test_mac_power.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_service.py||tests/pytests/functional/modules/test_mac_service.py": [
          "File: tests/pytests/functional/modules/test_mac_service.py -> tests/pytests/functional/modules/test_mac_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_shadow.py||tests/pytests/functional/modules/test_mac_shadow.py": [
          "File: tests/pytests/functional/modules/test_mac_shadow.py -> tests/pytests/functional/modules/test_mac_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_softwareupdate.py||tests/pytests/functional/modules/test_mac_softwareupdate.py": [
          "File: tests/pytests/functional/modules/test_mac_softwareupdate.py -> tests/pytests/functional/modules/test_mac_softwareupdate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_system.py||tests/pytests/functional/modules/test_mac_system.py": [
          "File: tests/pytests/functional/modules/test_mac_system.py -> tests/pytests/functional/modules/test_mac_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_timezone.py||tests/pytests/functional/modules/test_mac_timezone.py": [
          "File: tests/pytests/functional/modules/test_mac_timezone.py -> tests/pytests/functional/modules/test_mac_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_user.py||tests/pytests/functional/modules/test_mac_user.py": [
          "File: tests/pytests/functional/modules/test_mac_user.py -> tests/pytests/functional/modules/test_mac_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mac_xattr.py||tests/pytests/functional/modules/test_mac_xattr.py": [
          "File: tests/pytests/functional/modules/test_mac_xattr.py -> tests/pytests/functional/modules/test_mac_xattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_mysql.py||tests/pytests/functional/modules/test_mysql.py": [
          "File: tests/pytests/functional/modules/test_mysql.py -> tests/pytests/functional/modules/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_network.py||tests/pytests/functional/modules/test_network.py": [
          "File: tests/pytests/functional/modules/test_network.py -> tests/pytests/functional/modules/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_nilrt_ip.py||tests/pytests/functional/modules/test_nilrt_ip.py": [
          "File: tests/pytests/functional/modules/test_nilrt_ip.py -> tests/pytests/functional/modules/test_nilrt_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_opkg.py||tests/pytests/functional/modules/test_opkg.py": [
          "File: tests/pytests/functional/modules/test_opkg.py -> tests/pytests/functional/modules/test_opkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_pip.py||tests/pytests/functional/modules/test_pip.py": [
          "File: tests/pytests/functional/modules/test_pip.py -> tests/pytests/functional/modules/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_pkg.py||tests/pytests/functional/modules/test_pkg.py": [
          "File: tests/pytests/functional/modules/test_pkg.py -> tests/pytests/functional/modules/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_runit.py||tests/pytests/functional/modules/test_runit.py": [
          "File: tests/pytests/functional/modules/test_runit.py -> tests/pytests/functional/modules/test_runit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_saltcheck.py||tests/pytests/functional/modules/test_saltcheck.py": [
          "File: tests/pytests/functional/modules/test_saltcheck.py -> tests/pytests/functional/modules/test_saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_saltutil.py||tests/pytests/functional/modules/test_saltutil.py": [
          "File: tests/pytests/functional/modules/test_saltutil.py -> tests/pytests/functional/modules/test_saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_sdb.py||tests/pytests/functional/modules/test_sdb.py": [
          "File: tests/pytests/functional/modules/test_sdb.py -> tests/pytests/functional/modules/test_sdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_service.py||tests/pytests/functional/modules/test_service.py": [
          "File: tests/pytests/functional/modules/test_service.py -> tests/pytests/functional/modules/test_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_swarm.py||tests/pytests/functional/modules/test_swarm.py": [
          "File: tests/pytests/functional/modules/test_swarm.py -> tests/pytests/functional/modules/test_swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_system.py||tests/pytests/functional/modules/test_system.py": [
          "File: tests/pytests/functional/modules/test_system.py -> tests/pytests/functional/modules/test_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_test.py||tests/pytests/functional/modules/test_test.py": [
          "File: tests/pytests/functional/modules/test_test.py -> tests/pytests/functional/modules/test_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_user.py||tests/pytests/functional/modules/test_user.py": [
          "File: tests/pytests/functional/modules/test_user.py -> tests/pytests/functional/modules/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_vault.py||tests/pytests/functional/modules/test_vault.py": [
          "File: tests/pytests/functional/modules/test_vault.py -> tests/pytests/functional/modules/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_virtualenv_mod.py||tests/pytests/functional/modules/test_virtualenv_mod.py": [
          "File: tests/pytests/functional/modules/test_virtualenv_mod.py -> tests/pytests/functional/modules/test_virtualenv_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_win_certutil.py||tests/pytests/functional/modules/test_win_certutil.py": [
          "File: tests/pytests/functional/modules/test_win_certutil.py -> tests/pytests/functional/modules/test_win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_win_dsc.py||tests/pytests/functional/modules/test_win_dsc.py": [
          "File: tests/pytests/functional/modules/test_win_dsc.py -> tests/pytests/functional/modules/test_win_dsc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_win_shortcut.py||tests/pytests/functional/modules/test_win_shortcut.py": [
          "File: tests/pytests/functional/modules/test_win_shortcut.py -> tests/pytests/functional/modules/test_win_shortcut.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_x509_v2.py||tests/pytests/functional/modules/test_x509_v2.py": [
          "File: tests/pytests/functional/modules/test_x509_v2.py -> tests/pytests/functional/modules/test_x509_v2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_yaml.py||tests/pytests/functional/modules/test_yaml.py": [
          "File: tests/pytests/functional/modules/test_yaml.py -> tests/pytests/functional/modules/test_yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/test_yumpkg.py||tests/pytests/functional/modules/test_yumpkg.py": [
          "File: tests/pytests/functional/modules/test_yumpkg.py -> tests/pytests/functional/modules/test_yumpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_file/test_check_perms.py||tests/pytests/functional/modules/win_file/test_check_perms.py": [
          "File: tests/pytests/functional/modules/win_file/test_check_perms.py -> tests/pytests/functional/modules/win_file/test_check_perms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_file/test_remove.py||tests/pytests/functional/modules/win_file/test_remove.py": [
          "File: tests/pytests/functional/modules/win_file/test_remove.py -> tests/pytests/functional/modules/win_file/test_remove.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_file/test_stat.py||tests/pytests/functional/modules/win_file/test_stat.py": [
          "File: tests/pytests/functional/modules/win_file/test_stat.py -> tests/pytests/functional/modules/win_file/test_stat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py||tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py": [
          "File: tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py -> tests/pytests/functional/modules/win_lgpo/test_audit_settings_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_lgpo/test_get_policy.py||tests/pytests/functional/modules/win_lgpo/test_get_policy.py": [
          "File: tests/pytests/functional/modules/win_lgpo/test_get_policy.py -> tests/pytests/functional/modules/win_lgpo/test_get_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py||tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py": [
          "File: tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py -> tests/pytests/functional/modules/win_lgpo/test_get_policy_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/modules/win_lgpo/test_registry_policy.py||tests/pytests/functional/modules/win_lgpo/test_registry_policy.py": [
          "File: tests/pytests/functional/modules/win_lgpo/test_registry_policy.py -> tests/pytests/functional/modules/win_lgpo/test_registry_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/conftest.py||tests/pytests/functional/netapi/conftest.py": [
          "File: tests/pytests/functional/netapi/conftest.py -> tests/pytests/functional/netapi/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/conftest.py||tests/pytests/functional/netapi/rest_cherrypy/conftest.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/conftest.py -> tests/pytests/functional/netapi/rest_cherrypy/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_auth.py||tests/pytests/functional/netapi/rest_cherrypy/test_auth.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_auth.py -> tests/pytests/functional/netapi/rest_cherrypy/test_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py||tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py -> tests/pytests/functional/netapi/rest_cherrypy/test_auth_pam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_cors.py||tests/pytests/functional/netapi/rest_cherrypy/test_cors.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_cors.py -> tests/pytests/functional/netapi/rest_cherrypy/test_cors.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py||tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py -> tests/pytests/functional/netapi/rest_cherrypy/test_external_auth_syntax.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py||tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py -> tests/pytests/functional/netapi/rest_cherrypy/test_in_formats.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py||tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py": [
          "File: tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py -> tests/pytests/functional/netapi/rest_cherrypy/test_out_formats.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/conftest.py||tests/pytests/functional/netapi/rest_tornado/conftest.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/conftest.py -> tests/pytests/functional/netapi/rest_tornado/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py||tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py -> tests/pytests/functional/netapi/rest_tornado/test_auth_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py||tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py -> tests/pytests/functional/netapi/rest_tornado/test_auth_handler_pam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py||tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py -> tests/pytests/functional/netapi/rest_tornado/test_base_api_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_event_listener.py||tests/pytests/functional/netapi/rest_tornado/test_event_listener.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_event_listener.py -> tests/pytests/functional/netapi/rest_tornado/test_event_listener.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py||tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py -> tests/pytests/functional/netapi/rest_tornado/test_external_auth_syntax.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_run_handler.py||tests/pytests/functional/netapi/rest_tornado/test_run_handler.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_run_handler.py -> tests/pytests/functional/netapi/rest_tornado/test_run_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_utils.py||tests/pytests/functional/netapi/rest_tornado/test_utils.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_utils.py -> tests/pytests/functional/netapi/rest_tornado/test_utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py||tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py -> tests/pytests/functional/netapi/rest_tornado/test_webhooks_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py||tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py": [
          "File: tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py -> tests/pytests/functional/netapi/rest_tornado/test_websockets_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/conftest.py||tests/pytests/functional/pillar/conftest.py": [
          "File: tests/pytests/functional/pillar/conftest.py -> tests/pytests/functional/pillar/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py||tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py": [
          "File: tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py -> tests/pytests/functional/pillar/hg_pillar/test_hg_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/test_etcd_pillar.py||tests/pytests/functional/pillar/test_etcd_pillar.py": [
          "File: tests/pytests/functional/pillar/test_etcd_pillar.py -> tests/pytests/functional/pillar/test_etcd_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/test_git_pillar.py||tests/pytests/functional/pillar/test_git_pillar.py": [
          "File: tests/pytests/functional/pillar/test_git_pillar.py -> tests/pytests/functional/pillar/test_git_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/test_gpg.py||tests/pytests/functional/pillar/test_gpg.py": [
          "File: tests/pytests/functional/pillar/test_gpg.py -> tests/pytests/functional/pillar/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/pillar/test_top.py||tests/pytests/functional/pillar/test_top.py": [
          "File: tests/pytests/functional/pillar/test_top.py -> tests/pytests/functional/pillar/test_top.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/returners/test_etcd_return.py||tests/pytests/functional/returners/test_etcd_return.py": [
          "File: tests/pytests/functional/returners/test_etcd_return.py -> tests/pytests/functional/returners/test_etcd_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/runners/test_winrepo.py||tests/pytests/functional/runners/test_winrepo.py": [
          "File: tests/pytests/functional/runners/test_winrepo.py -> tests/pytests/functional/runners/test_winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/sdb/test_etcd_db.py||tests/pytests/functional/sdtest_etcd_db.py": [
          "File: tests/pytests/functional/sdb/test_etcd_db.py -> tests/pytests/functional/sdtest_etcd_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/state/test_masterless_tops.py||tests/pytests/functional/state/test_masterless_tops.py": [
          "File: tests/pytests/functional/state/test_masterless_tops.py -> tests/pytests/functional/state/test_masterless_tops.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/cmd/conftest.py||tests/pytests/functional/states/cmd/conftest.py": [
          "File: tests/pytests/functional/states/cmd/conftest.py -> tests/pytests/functional/states/cmd/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/cmd/test_runas.py||tests/pytests/functional/states/cmd/test_runas.py": [
          "File: tests/pytests/functional/states/cmd/test_runas.py -> tests/pytests/functional/states/cmd/test_runas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/conftest.py||tests/pytests/functional/states/conftest.py": [
          "File: tests/pytests/functional/states/conftest.py -> tests/pytests/functional/states/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/conftest.py||tests/pytests/functional/states/file/conftest.py": [
          "File: tests/pytests/functional/states/file/conftest.py -> tests/pytests/functional/states/file/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test__check_directory_win.py||tests/pytests/functional/states/file/test__check_directory_win.py": [
          "File: tests/pytests/functional/states/file/test__check_directory_win.py -> tests/pytests/functional/states/file/test__check_directory_win.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_absent.py||tests/pytests/functional/states/file/test_absent.py": [
          "File: tests/pytests/functional/states/file/test_absent.py -> tests/pytests/functional/states/file/test_absent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_accumulated.py||tests/pytests/functional/states/file/test_accumulated.py": [
          "File: tests/pytests/functional/states/file/test_accumulated.py -> tests/pytests/functional/states/file/test_accumulated.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_append.py||tests/pytests/functional/states/file/test_append.py": [
          "File: tests/pytests/functional/states/file/test_append.py -> tests/pytests/functional/states/file/test_append.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_blockreplace.py||tests/pytests/functional/states/file/test_blockreplace.py": [
          "File: tests/pytests/functional/states/file/test_blockreplace.py -> tests/pytests/functional/states/file/test_blockreplace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_cached.py||tests/pytests/functional/states/file/test_cached.py": [
          "File: tests/pytests/functional/states/file/test_cached.py -> tests/pytests/functional/states/file/test_cached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_comment.py||tests/pytests/functional/states/file/test_comment.py": [
          "File: tests/pytests/functional/states/file/test_comment.py -> tests/pytests/functional/states/file/test_comment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_copy.py||tests/pytests/functional/states/file/test_copy.py": [
          "File: tests/pytests/functional/states/file/test_copy.py -> tests/pytests/functional/states/file/test_copy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_directory.py||tests/pytests/functional/states/file/test_directory.py": [
          "File: tests/pytests/functional/states/file/test_directory.py -> tests/pytests/functional/states/file/test_directory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_directory_win.py||tests/pytests/functional/states/file/test_directory_win.py": [
          "File: tests/pytests/functional/states/file/test_directory_win.py -> tests/pytests/functional/states/file/test_directory_win.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_keyvalue.py||tests/pytests/functional/states/file/test_keyvalue.py": [
          "File: tests/pytests/functional/states/file/test_keyvalue.py -> tests/pytests/functional/states/file/test_keyvalue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_line.py||tests/pytests/functional/states/file/test_line.py": [
          "File: tests/pytests/functional/states/file/test_line.py -> tests/pytests/functional/states/file/test_line.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_managed.py||tests/pytests/functional/states/file/test_managed.py": [
          "File: tests/pytests/functional/states/file/test_managed.py -> tests/pytests/functional/states/file/test_managed.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_patch.py||tests/pytests/functional/states/file/test_patch.py": [
          "File: tests/pytests/functional/states/file/test_patch.py -> tests/pytests/functional/states/file/test_patch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_prepend.py||tests/pytests/functional/states/file/test_prepend.py": [
          "File: tests/pytests/functional/states/file/test_prepend.py -> tests/pytests/functional/states/file/test_prepend.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_pruned.py||tests/pytests/functional/states/file/test_pruned.py": [
          "File: tests/pytests/functional/states/file/test_pruned.py -> tests/pytests/functional/states/file/test_pruned.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_recurse.py||tests/pytests/functional/states/file/test_recurse.py": [
          "File: tests/pytests/functional/states/file/test_recurse.py -> tests/pytests/functional/states/file/test_recurse.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_rename.py||tests/pytests/functional/states/file/test_rename.py": [
          "File: tests/pytests/functional/states/file/test_rename.py -> tests/pytests/functional/states/file/test_rename.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_replace.py||tests/pytests/functional/states/file/test_replace.py": [
          "File: tests/pytests/functional/states/file/test_replace.py -> tests/pytests/functional/states/file/test_replace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_serialize.py||tests/pytests/functional/states/file/test_serialize.py": [
          "File: tests/pytests/functional/states/file/test_serialize.py -> tests/pytests/functional/states/file/test_serialize.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_symlink.py||tests/pytests/functional/states/file/test_symlink.py": [
          "File: tests/pytests/functional/states/file/test_symlink.py -> tests/pytests/functional/states/file/test_symlink.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_touch.py||tests/pytests/functional/states/file/test_touch.py": [
          "File: tests/pytests/functional/states/file/test_touch.py -> tests/pytests/functional/states/file/test_touch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/file/test_uncomment.py||tests/pytests/functional/states/file/test_uncomment.py": [
          "File: tests/pytests/functional/states/file/test_uncomment.py -> tests/pytests/functional/states/file/test_uncomment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/pkgrepo/test_centos.py||tests/pytests/functional/states/pkgrepo/test_centos.py": [
          "File: tests/pytests/functional/states/pkgrepo/test_centos.py -> tests/pytests/functional/states/pkgrepo/test_centos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/pkgrepo/test_debian.py||tests/pytests/functional/states/pkgrepo/test_debian.py": [
          "File: tests/pytests/functional/states/pkgrepo/test_debian.py -> tests/pytests/functional/states/pkgrepo/test_debian.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/conftest.py||tests/pytests/functional/states/rabbitmq/conftest.py": [
          "File: tests/pytests/functional/states/rabbitmq/conftest.py -> tests/pytests/functional/states/rabbitmq/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_cluster.py||tests/pytests/functional/states/rabbitmq/test_cluster.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_cluster.py -> tests/pytests/functional/states/rabbitmq/test_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_plugin.py||tests/pytests/functional/states/rabbitmq/test_plugin.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_plugin.py -> tests/pytests/functional/states/rabbitmq/test_plugin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_policy.py||tests/pytests/functional/states/rabbitmq/test_policy.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_policy.py -> tests/pytests/functional/states/rabbitmq/test_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_upstream.py||tests/pytests/functional/states/rabbitmq/test_upstream.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_upstream.py -> tests/pytests/functional/states/rabbitmq/test_upstream.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_user.py||tests/pytests/functional/states/rabbitmq/test_user.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_user.py -> tests/pytests/functional/states/rabbitmq/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/rabbitmq/test_vhost.py||tests/pytests/functional/states/rabbitmq/test_vhost.py": [
          "File: tests/pytests/functional/states/rabbitmq/test_vhost.py -> tests/pytests/functional/states/rabbitmq/test_vhost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_archive.py||tests/pytests/functional/states/test_archive.py": [
          "File: tests/pytests/functional/states/test_archive.py -> tests/pytests/functional/states/test_archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_chocolatey_1_2_1.py||tests/pytests/functional/states/test_chocolatey_1_2_1.py": [
          "File: tests/pytests/functional/states/test_chocolatey_1_2_1.py -> tests/pytests/functional/states/test_chocolatey_1_2_1.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_chocolatey_latest.py||tests/pytests/functional/states/test_chocolatey_latest.py": [
          "File: tests/pytests/functional/states/test_chocolatey_latest.py -> tests/pytests/functional/states/test_chocolatey_latest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_docker_container.py||tests/pytests/functional/states/test_docker_container.py": [
          "File: tests/pytests/functional/states/test_docker_container.py -> tests/pytests/functional/states/test_docker_container.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_docker_network.py||tests/pytests/functional/states/test_docker_network.py": [
          "File: tests/pytests/functional/states/test_docker_network.py -> tests/pytests/functional/states/test_docker_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_etcd_mod.py||tests/pytests/functional/states/test_etcd_mod.py": [
          "File: tests/pytests/functional/states/test_etcd_mod.py -> tests/pytests/functional/states/test_etcd_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_file.py||tests/pytests/functional/states/test_file.py": [
          "File: tests/pytests/functional/states/test_file.py -> tests/pytests/functional/states/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_gpg.py||tests/pytests/functional/states/test_gpg.py": [
          "File: tests/pytests/functional/states/test_gpg.py -> tests/pytests/functional/states/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_ipset.py||tests/pytests/functional/states/test_ipset.py": [
          "File: tests/pytests/functional/states/test_ipset.py -> tests/pytests/functional/states/test_ipset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_module.py||tests/pytests/functional/states/test_module.py": [
          "File: tests/pytests/functional/states/test_module.py -> tests/pytests/functional/states/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_mysql.py||tests/pytests/functional/states/test_mysql.py": [
          "File: tests/pytests/functional/states/test_mysql.py -> tests/pytests/functional/states/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_npm.py||tests/pytests/functional/states/test_npm.py": [
          "File: tests/pytests/functional/states/test_npm.py -> tests/pytests/functional/states/test_npm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_pip_state.py||tests/pytests/functional/states/test_pip_state.py": [
          "File: tests/pytests/functional/states/test_pip_state.py -> tests/pytests/functional/states/test_pip_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_pkg.py||tests/pytests/functional/states/test_pkg.py": [
          "File: tests/pytests/functional/states/test_pkg.py -> tests/pytests/functional/states/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_pkgrepo.py||tests/pytests/functional/states/test_pkgrepo.py": [
          "File: tests/pytests/functional/states/test_pkgrepo.py -> tests/pytests/functional/states/test_pkgrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_reg.py||tests/pytests/functional/states/test_reg.py": [
          "File: tests/pytests/functional/states/test_reg.py -> tests/pytests/functional/states/test_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_service.py||tests/pytests/functional/states/test_service.py": [
          "File: tests/pytests/functional/states/test_service.py -> tests/pytests/functional/states/test_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_ssh_auth.py||tests/pytests/functional/states/test_ssh_auth.py": [
          "File: tests/pytests/functional/states/test_ssh_auth.py -> tests/pytests/functional/states/test_ssh_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_svn.py||tests/pytests/functional/states/test_svn.py": [
          "File: tests/pytests/functional/states/test_svn.py -> tests/pytests/functional/states/test_svn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_user.py||tests/pytests/functional/states/test_user.py": [
          "File: tests/pytests/functional/states/test_user.py -> tests/pytests/functional/states/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_virtualenv_mod.py||tests/pytests/functional/states/test_virtualenv_mod.py": [
          "File: tests/pytests/functional/states/test_virtualenv_mod.py -> tests/pytests/functional/states/test_virtualenv_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_win_certutil.py||tests/pytests/functional/states/test_win_certutil.py": [
          "File: tests/pytests/functional/states/test_win_certutil.py -> tests/pytests/functional/states/test_win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_win_shortcut.py||tests/pytests/functional/states/test_win_shortcut.py": [
          "File: tests/pytests/functional/states/test_win_shortcut.py -> tests/pytests/functional/states/test_win_shortcut.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_x509_v2.py||tests/pytests/functional/states/test_x509_v2.py": [
          "File: tests/pytests/functional/states/test_x509_v2.py -> tests/pytests/functional/states/test_x509_v2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/test_zookeeper.py||tests/pytests/functional/states/test_zookeeper.py": [
          "File: tests/pytests/functional/states/test_zookeeper.py -> tests/pytests/functional/states/test_zookeeper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/win_lgpo/test_admx_policy.py||tests/pytests/functional/states/win_lgpo/test_admx_policy.py": [
          "File: tests/pytests/functional/states/win_lgpo/test_admx_policy.py -> tests/pytests/functional/states/win_lgpo/test_admx_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py||tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py": [
          "File: tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py -> tests/pytests/functional/states/win_lgpo/test_adv_audit_settings_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py||tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py": [
          "File: tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py -> tests/pytests/functional/states/win_lgpo/test_audit_settings_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/states/win_lgpo/test_rights_assignment.py||tests/pytests/functional/states/win_lgpo/test_rights_assignment.py": [
          "File: tests/pytests/functional/states/win_lgpo/test_rights_assignment.py -> tests/pytests/functional/states/win_lgpo/test_rights_assignment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/test_config.py||tests/pytests/functional/test_config.py": [
          "File: tests/pytests/functional/test_config.py -> tests/pytests/functional/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/test_payload.py||tests/pytests/functional/test_payload.py": [
          "File: tests/pytests/functional/test_payload.py -> tests/pytests/functional/test_payload.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/test_version.py||tests/pytests/functional/test_version.py": [
          "File: tests/pytests/functional/test_version.py -> tests/pytests/functional/test_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/conftest.py||tests/pytests/functional/transport/conftest.py": [
          "File: tests/pytests/functional/transport/conftest.py -> tests/pytests/functional/transport/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/ipc/test_client.py||tests/pytests/functional/transport/ipc/test_client.py": [
          "File: tests/pytests/functional/transport/ipc/test_client.py -> tests/pytests/functional/transport/ipc/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/ipc/test_pub_server_channel.py||tests/pytests/functional/transport/ipc/test_pub_server_channel.py": [
          "File: tests/pytests/functional/transport/ipc/test_pub_server_channel.py -> tests/pytests/functional/transport/ipc/test_pub_server_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/ipc/test_subscriber.py||tests/pytests/functional/transport/ipc/test_subscriber.py": [
          "File: tests/pytests/functional/transport/ipc/test_subscriber.py -> tests/pytests/functional/transport/ipc/test_subscriber.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/server/conftest.py||tests/pytests/functional/transport/server/conftest.py": [
          "File: tests/pytests/functional/transport/server/conftest.py -> tests/pytests/functional/transport/server/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/server/test_req_channel.py||tests/pytests/functional/transport/server/test_req_channel.py": [
          "File: tests/pytests/functional/transport/server/test_req_channel.py -> tests/pytests/functional/transport/server/test_req_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/tcp/test_load_balanced_server.py||tests/pytests/functional/transport/tcp/test_load_balanced_server.py": [
          "File: tests/pytests/functional/transport/tcp/test_load_balanced_server.py -> tests/pytests/functional/transport/tcp/test_load_balanced_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/tcp/test_message_client.py||tests/pytests/functional/transport/tcp/test_message_client.py": [
          "File: tests/pytests/functional/transport/tcp/test_message_client.py -> tests/pytests/functional/transport/tcp/test_message_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/tcp/test_pub_server.py||tests/pytests/functional/transport/tcp/test_pub_server.py": [
          "File: tests/pytests/functional/transport/tcp/test_pub_server.py -> tests/pytests/functional/transport/tcp/test_pub_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/zeromq/conftest.py||tests/pytests/functional/transport/zeromq/conftest.py": [
          "File: tests/pytests/functional/transport/zeromq/conftest.py -> tests/pytests/functional/transport/zeromq/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/zeromq/test_pub_server_channel.py||tests/pytests/functional/transport/zeromq/test_pub_server_channel.py": [
          "File: tests/pytests/functional/transport/zeromq/test_pub_server_channel.py -> tests/pytests/functional/transport/zeromq/test_pub_server_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/transport/zeromq/test_request_client.py||tests/pytests/functional/transport/zeromq/test_request_client.py": [
          "File: tests/pytests/functional/transport/zeromq/test_request_client.py -> tests/pytests/functional/transport/zeromq/test_request_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/functools/test_namespaced_function.py||tests/pytests/functional/utils/functools/test_namespaced_function.py": [
          "File: tests/pytests/functional/utils/functools/test_namespaced_function.py -> tests/pytests/functional/utils/functools/test_namespaced_function.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_cache.py||tests/pytests/functional/utils/test_cache.py": [
          "File: tests/pytests/functional/utils/test_cache.py -> tests/pytests/functional/utils/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_etcd_util.py||tests/pytests/functional/utils/test_etcd_util.py": [
          "File: tests/pytests/functional/utils/test_etcd_util.py -> tests/pytests/functional/utils/test_etcd_util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_extension_deprecation.py||tests/pytests/functional/utils/test_extension_deprecation.py": [
          "File: tests/pytests/functional/utils/test_extension_deprecation.py -> tests/pytests/functional/utils/test_extension_deprecation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_gitfs.py||tests/pytests/functional/utils/test_gitfs.py": [
          "File: tests/pytests/functional/utils/test_gitfs.py -> tests/pytests/functional/utils/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_http.py||tests/pytests/functional/utils/test_http.py": [
          "File: tests/pytests/functional/utils/test_http.py -> tests/pytests/functional/utils/test_http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_jinja.py||tests/pytests/functional/utils/test_jinja.py": [
          "File: tests/pytests/functional/utils/test_jinja.py -> tests/pytests/functional/utils/test_jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_job.py||tests/pytests/functional/utils/test_job.py": [
          "File: tests/pytests/functional/utils/test_job.py -> tests/pytests/functional/utils/test_job.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_pillar.py||tests/pytests/functional/utils/test_pillar.py": [
          "File: tests/pytests/functional/utils/test_pillar.py -> tests/pytests/functional/utils/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_process.py||tests/pytests/functional/utils/test_process.py": [
          "File: tests/pytests/functional/utils/test_process.py -> tests/pytests/functional/utils/test_process.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_vault.py||tests/pytests/functional/utils/test_vault.py": [
          "File: tests/pytests/functional/utils/test_vault.py -> tests/pytests/functional/utils/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/test_winrepo.py||tests/pytests/functional/utils/test_winrepo.py": [
          "File: tests/pytests/functional/utils/test_winrepo.py -> tests/pytests/functional/utils/test_winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/user/test__getgrall.py||tests/pytests/functional/utils/user/test__getgrall.py": [
          "File: tests/pytests/functional/utils/user/test__getgrall.py -> tests/pytests/functional/utils/user/test__getgrall.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/user/test_chugid_and_umask.py||tests/pytests/functional/utils/user/test_chugid_and_umask.py": [
          "File: tests/pytests/functional/utils/user/test_chugid_and_umask.py -> tests/pytests/functional/utils/user/test_chugid_and_umask.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/user/test_get_group_dict.py||tests/pytests/functional/utils/user/test_get_group_dict.py": [
          "File: tests/pytests/functional/utils/user/test_get_group_dict.py -> tests/pytests/functional/utils/user/test_get_group_dict.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/user/test_get_group_list.py||tests/pytests/functional/utils/user/test_get_group_list.py": [
          "File: tests/pytests/functional/utils/user/test_get_group_list.py -> tests/pytests/functional/utils/user/test_get_group_list.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/win_dacl/test_file.py||tests/pytests/functional/utils/win_dacl/test_file.py": [
          "File: tests/pytests/functional/utils/win_dacl/test_file.py -> tests/pytests/functional/utils/win_dacl/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/win_dacl/test_get_name.py||tests/pytests/functional/utils/win_dacl/test_get_name.py": [
          "File: tests/pytests/functional/utils/win_dacl/test_get_name.py -> tests/pytests/functional/utils/win_dacl/test_get_name.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/win_dacl/test_get_sid.py||tests/pytests/functional/utils/win_dacl/test_get_sid.py": [
          "File: tests/pytests/functional/utils/win_dacl/test_get_sid.py -> tests/pytests/functional/utils/win_dacl/test_get_sid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/win_dacl/test_get_sid_string.py||tests/pytests/functional/utils/win_dacl/test_get_sid_string.py": [
          "File: tests/pytests/functional/utils/win_dacl/test_get_sid_string.py -> tests/pytests/functional/utils/win_dacl/test_get_sid_string.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/win_dacl/test_reg.py||tests/pytests/functional/utils/win_dacl/test_reg.py": [
          "File: tests/pytests/functional/utils/win_dacl/test_reg.py -> tests/pytests/functional/utils/win_dacl/test_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/functional/utils/yamllint/test_yamllint.py||tests/pytests/functional/utils/yamllint/test_yamllint.py": [
          "File: tests/pytests/functional/utils/yamllint/test_yamllint.py -> tests/pytests/functional/utils/yamllint/test_yamllint.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/_logging/test_jid_logging.py||tests/pytests/integration/_logging/test_jid_logging.py": [
          "File: tests/pytests/integration/_logging/test_jid_logging.py -> tests/pytests/integration/_logging/test_jid_logging.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/_logging/test_logging.py||tests/pytests/integration/_logging/test_logging.py": [
          "File: tests/pytests/integration/_logging/test_logging.py -> tests/pytests/integration/_logging/test_logging.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/_logging/test_multiple_processes_logging.py||tests/pytests/integration/_logging/test_multiple_processes_logging.py": [
          "File: tests/pytests/integration/_logging/test_multiple_processes_logging.py -> tests/pytests/integration/_logging/test_multiple_processes_logging.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/conftest.py||tests/pytests/integration/cli/conftest.py": [
          "File: tests/pytests/integration/cli/conftest.py -> tests/pytests/integration/cli/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_batch.py||tests/pytests/integration/cli/test_batch.py": [
          "File: tests/pytests/integration/cli/test_batch.py -> tests/pytests/integration/cli/test_batch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_matcher.py||tests/pytests/integration/cli/test_matcher.py": [
          "File: tests/pytests/integration/cli/test_matcher.py -> tests/pytests/integration/cli/test_matcher.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt.py||tests/pytests/integration/cli/test_salt.py": [
          "File: tests/pytests/integration/cli/test_salt.py -> tests/pytests/integration/cli/test_salt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_auth.py||tests/pytests/integration/cli/test_salt_auth.py": [
          "File: tests/pytests/integration/cli/test_salt_auth.py -> tests/pytests/integration/cli/test_salt_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_call.py||tests/pytests/integration/cli/test_salt_call.py": [
          "File: tests/pytests/integration/cli/test_salt_call.py -> tests/pytests/integration/cli/test_salt_call.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_cp.py||tests/pytests/integration/cli/test_salt_cp.py": [
          "File: tests/pytests/integration/cli/test_salt_cp.py -> tests/pytests/integration/cli/test_salt_cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_deltaproxy.py||tests/pytests/integration/cli/test_salt_deltaproxy.py": [
          "File: tests/pytests/integration/cli/test_salt_deltaproxy.py -> tests/pytests/integration/cli/test_salt_deltaproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_key.py||tests/pytests/integration/cli/test_salt_key.py": [
          "File: tests/pytests/integration/cli/test_salt_key.py -> tests/pytests/integration/cli/test_salt_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_master.py||tests/pytests/integration/cli/test_salt_master.py": [
          "File: tests/pytests/integration/cli/test_salt_master.py -> tests/pytests/integration/cli/test_salt_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_minion.py||tests/pytests/integration/cli/test_salt_minion.py": [
          "File: tests/pytests/integration/cli/test_salt_minion.py -> tests/pytests/integration/cli/test_salt_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_proxy.py||tests/pytests/integration/cli/test_salt_proxy.py": [
          "File: tests/pytests/integration/cli/test_salt_proxy.py -> tests/pytests/integration/cli/test_salt_proxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_run.py||tests/pytests/integration/cli/test_salt_run.py": [
          "File: tests/pytests/integration/cli/test_salt_run.py -> tests/pytests/integration/cli/test_salt_run.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_salt_syndic.py||tests/pytests/integration/cli/test_salt_syndic.py": [
          "File: tests/pytests/integration/cli/test_salt_syndic.py -> tests/pytests/integration/cli/test_salt_syndic.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cli/test_syndic_eauth.py||tests/pytests/integration/cli/test_syndic_eauth.py": [
          "File: tests/pytests/integration/cli/test_syndic_eauth.py -> tests/pytests/integration/cli/test_syndic_eauth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/client/conftest.py||tests/pytests/integration/client/conftest.py": [
          "File: tests/pytests/integration/client/conftest.py -> tests/pytests/integration/client/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/client/test_runner.py||tests/pytests/integration/client/test_runner.py": [
          "File: tests/pytests/integration/client/test_runner.py -> tests/pytests/integration/client/test_runner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cluster/conftest.py||tests/pytests/integration/cluster/conftest.py": [
          "File: tests/pytests/integration/cluster/conftest.py -> tests/pytests/integration/cluster/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/cluster/test_basic_cluster.py||tests/pytests/integration/cluster/test_basic_cluster.py": [
          "File: tests/pytests/integration/cluster/test_basic_cluster.py -> tests/pytests/integration/cluster/test_basic_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/conftest.py||tests/pytests/integration/conftest.py": [
          "File: tests/pytests/integration/conftest.py -> tests/pytests/integration/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/daemons/test_masterapi.py||tests/pytests/integration/daemons/test_masterapi.py": [
          "File: tests/pytests/integration/daemons/test_masterapi.py -> tests/pytests/integration/daemons/test_masterapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/daemons/test_memory_leak.py||tests/pytests/integration/daemons/test_memory_leak.py": [
          "File: tests/pytests/integration/daemons/test_memory_leak.py -> tests/pytests/integration/daemons/test_memory_leak.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/grains/test_grains.py||tests/pytests/integration/grains/test_grains.py": [
          "File: tests/pytests/integration/grains/test_grains.py -> tests/pytests/integration/grains/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/master/test_clear_funcs.py||tests/pytests/integration/master/test_clear_funcs.py": [
          "File: tests/pytests/integration/master/test_clear_funcs.py -> tests/pytests/integration/master/test_clear_funcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/master/test_payload.py||tests/pytests/integration/master/test_payload.py": [
          "File: tests/pytests/integration/master/test_payload.py -> tests/pytests/integration/master/test_payload.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/master/test_peer.py||tests/pytests/integration/master/test_peer.py": [
          "File: tests/pytests/integration/master/test_peer.py -> tests/pytests/integration/master/test_peer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/minion/test_job_return.py||tests/pytests/integration/minion/test_job_return.py": [
          "File: tests/pytests/integration/minion/test_job_return.py -> tests/pytests/integration/minion/test_job_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/minion/test_reauth.py||tests/pytests/integration/minion/test_reauth.py": [
          "File: tests/pytests/integration/minion/test_reauth.py -> tests/pytests/integration/minion/test_reauth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/minion/test_return_retries.py||tests/pytests/integration/minion/test_return_retries.py": [
          "File: tests/pytests/integration/minion/test_return_retries.py -> tests/pytests/integration/minion/test_return_retries.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/grains/conftest.py||tests/pytests/integration/modules/grains/conftest.py": [
          "File: tests/pytests/integration/modules/grains/conftest.py -> tests/pytests/integration/modules/grains/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/grains/test_append.py||tests/pytests/integration/modules/grains/test_append.py": [
          "File: tests/pytests/integration/modules/grains/test_append.py -> tests/pytests/integration/modules/grains/test_append.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/grains/test_module.py||tests/pytests/integration/modules/grains/test_module.py": [
          "File: tests/pytests/integration/modules/grains/test_module.py -> tests/pytests/integration/modules/grains/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/saltutil/test_grains.py||tests/pytests/integration/modules/saltutil/test_grains.py": [
          "File: tests/pytests/integration/modules/saltutil/test_grains.py -> tests/pytests/integration/modules/saltutil/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/saltutil/test_modules.py||tests/pytests/integration/modules/saltutil/test_modules.py": [
          "File: tests/pytests/integration/modules/saltutil/test_modules.py -> tests/pytests/integration/modules/saltutil/test_modules.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/saltutil/test_pillar.py||tests/pytests/integration/modules/saltutil/test_pillar.py": [
          "File: tests/pytests/integration/modules/saltutil/test_pillar.py -> tests/pytests/integration/modules/saltutil/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/saltutil/test_wheel.py||tests/pytests/integration/modules/saltutil/test_wheel.py": [
          "File: tests/pytests/integration/modules/saltutil/test_wheel.py -> tests/pytests/integration/modules/saltutil/test_wheel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/state/test_state.py||tests/pytests/integration/modules/state/test_state.py": [
          "File: tests/pytests/integration/modules/state/test_state.py -> tests/pytests/integration/modules/state/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/state/test_state_pillar_errors.py||tests/pytests/integration/modules/state/test_state_pillar_errors.py": [
          "File: tests/pytests/integration/modules/state/test_state_pillar_errors.py -> tests/pytests/integration/modules/state/test_state_pillar_errors.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/state/test_state_state_events.py||tests/pytests/integration/modules/state/test_state_state_events.py": [
          "File: tests/pytests/integration/modules/state/test_state_state_events.py -> tests/pytests/integration/modules/state/test_state_state_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/state/test_state_test.py||tests/pytests/integration/modules/state/test_state_test.py": [
          "File: tests/pytests/integration/modules/state/test_state_test.py -> tests/pytests/integration/modules/state/test_state_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_beacons.py||tests/pytests/integration/modules/test_beacons.py": [
          "File: tests/pytests/integration/modules/test_beacons.py -> tests/pytests/integration/modules/test_beacons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_cmdmod.py||tests/pytests/integration/modules/test_cmdmod.py": [
          "File: tests/pytests/integration/modules/test_cmdmod.py -> tests/pytests/integration/modules/test_cmdmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_event.py||tests/pytests/integration/modules/test_event.py": [
          "File: tests/pytests/integration/modules/test_event.py -> tests/pytests/integration/modules/test_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_file.py||tests/pytests/integration/modules/test_file.py": [
          "File: tests/pytests/integration/modules/test_file.py -> tests/pytests/integration/modules/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_idem.py||tests/pytests/integration/modules/test_idem.py": [
          "File: tests/pytests/integration/modules/test_idem.py -> tests/pytests/integration/modules/test_idem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_jinja.py||tests/pytests/integration/modules/test_jinja.py": [
          "File: tests/pytests/integration/modules/test_jinja.py -> tests/pytests/integration/modules/test_jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_mac_sysctl.py||tests/pytests/integration/modules/test_mac_sysctl.py": [
          "File: tests/pytests/integration/modules/test_mac_sysctl.py -> tests/pytests/integration/modules/test_mac_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_pillar.py||tests/pytests/integration/modules/test_pillar.py": [
          "File: tests/pytests/integration/modules/test_pillar.py -> tests/pytests/integration/modules/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_pip.py||tests/pytests/integration/modules/test_pip.py": [
          "File: tests/pytests/integration/modules/test_pip.py -> tests/pytests/integration/modules/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py||tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py": [
          "File: tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py -> tests/pytests/integration/modules/test_rpmbuild_pkgbuild.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_state.py||tests/pytests/integration/modules/test_state.py": [
          "File: tests/pytests/integration/modules/test_state.py -> tests/pytests/integration/modules/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_test.py||tests/pytests/integration/modules/test_test.py": [
          "File: tests/pytests/integration/modules/test_test.py -> tests/pytests/integration/modules/test_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_useradd.py||tests/pytests/integration/modules/test_useradd.py": [
          "File: tests/pytests/integration/modules/test_useradd.py -> tests/pytests/integration/modules/test_useradd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_vault.py||tests/pytests/integration/modules/test_vault.py": [
          "File: tests/pytests/integration/modules/test_vault.py -> tests/pytests/integration/modules/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_virt.py||tests/pytests/integration/modules/test_virt.py": [
          "File: tests/pytests/integration/modules/test_virt.py -> tests/pytests/integration/modules/test_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/modules/test_x509_v2.py||tests/pytests/integration/modules/test_x509_v2.py": [
          "File: tests/pytests/integration/modules/test_x509_v2.py -> tests/pytests/integration/modules/test_x509_v2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/conftest.py||tests/pytests/integration/netapi/conftest.py": [
          "File: tests/pytests/integration/netapi/conftest.py -> tests/pytests/integration/netapi/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/conftest.py||tests/pytests/integration/netapi/rest_cherrypy/conftest.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/conftest.py -> tests/pytests/integration/netapi/rest_cherrypy/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py||tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py -> tests/pytests/integration/netapi/rest_cherrypy/test_arg_kwarg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/test_auth.py||tests/pytests/integration/netapi/rest_cherrypy/test_auth.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/test_auth.py -> tests/pytests/integration/netapi/rest_cherrypy/test_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py||tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py -> tests/pytests/integration/netapi/rest_cherrypy/test_jobs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/test_run.py||tests/pytests/integration/netapi/rest_cherrypy/test_run.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/test_run.py -> tests/pytests/integration/netapi/rest_cherrypy/test_run.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py||tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py": [
          "File: tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py -> tests/pytests/integration/netapi/rest_cherrypy/test_webhook_disable_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/conftest.py||tests/pytests/integration/netapi/rest_tornado/conftest.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/conftest.py -> tests/pytests/integration/netapi/rest_tornado/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py -> tests/pytests/integration/netapi/rest_tornado/test_events_api_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py -> tests/pytests/integration/netapi/rest_tornado/test_jobs_api_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py -> tests/pytests/integration/netapi/rest_tornado/test_minions_api_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/test_root_handler.py||tests/pytests/integration/netapi/rest_tornado/test_root_handler.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/test_root_handler.py -> tests/pytests/integration/netapi/rest_tornado/test_root_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py||tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py": [
          "File: tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py -> tests/pytests/integration/netapi/rest_tornado/test_run_api_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/test_client.py||tests/pytests/integration/netapi/test_client.py": [
          "File: tests/pytests/integration/netapi/test_client.py -> tests/pytests/integration/netapi/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/netapi/test_ssh_client.py||tests/pytests/integration/netapi/test_ssh_client.py": [
          "File: tests/pytests/integration/netapi/test_ssh_client.py -> tests/pytests/integration/netapi/test_ssh_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/pillar/cache/conftest.py||tests/pytests/integration/pillar/cache/conftest.py": [
          "File: tests/pytests/integration/pillar/cache/conftest.py -> tests/pytests/integration/pillar/cache/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/pillar/cache/test_pillar_cache.py||tests/pytests/integration/pillar/cache/test_pillar_cache.py": [
          "File: tests/pytests/integration/pillar/cache/test_pillar_cache.py -> tests/pytests/integration/pillar/cache/test_pillar_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/pillar/test_pillar_include.py||tests/pytests/integration/pillar/test_pillar_include.py": [
          "File: tests/pytests/integration/pillar/test_pillar_include.py -> tests/pytests/integration/pillar/test_pillar_include.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/proxy/conftest.py||tests/pytests/integration/proxy/conftest.py": [
          "File: tests/pytests/integration/proxy/conftest.py -> tests/pytests/integration/proxy/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/proxy/test_deltaproxy.py||tests/pytests/integration/proxy/test_deltaproxy.py": [
          "File: tests/pytests/integration/proxy/test_deltaproxy.py -> tests/pytests/integration/proxy/test_deltaproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/proxy/test_shell.py||tests/pytests/integration/proxy/test_shell.py": [
          "File: tests/pytests/integration/proxy/test_shell.py -> tests/pytests/integration/proxy/test_shell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/proxy/test_simple.py||tests/pytests/integration/proxy/test_simple.py": [
          "File: tests/pytests/integration/proxy/test_simple.py -> tests/pytests/integration/proxy/test_simple.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/reactor/test_reactor.py||tests/pytests/integration/reactor/test_reactor.py": [
          "File: tests/pytests/integration/reactor/test_reactor.py -> tests/pytests/integration/reactor/test_reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/renderers/test_jinja.py||tests/pytests/integration/renderers/test_jinja.py": [
          "File: tests/pytests/integration/renderers/test_jinja.py -> tests/pytests/integration/renderers/test_jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/renderers/test_toml.py||tests/pytests/integration/renderers/test_toml.py": [
          "File: tests/pytests/integration/renderers/test_toml.py -> tests/pytests/integration/renderers/test_toml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/returners/test_noop_return.py||tests/pytests/integration/returners/test_noop_return.py": [
          "File: tests/pytests/integration/returners/test_noop_return.py -> tests/pytests/integration/returners/test_noop_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/state/orchestrate/test_events.py||tests/pytests/integration/runners/state/orchestrate/test_events.py": [
          "File: tests/pytests/integration/runners/state/orchestrate/test_events.py -> tests/pytests/integration/runners/state/orchestrate/test_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py||tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py": [
          "File: tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py -> tests/pytests/integration/runners/state/orchestrate/test_orchestrate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_cache.py||tests/pytests/integration/runners/test_cache.py": [
          "File: tests/pytests/integration/runners/test_cache.py -> tests/pytests/integration/runners/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_jobs.py||tests/pytests/integration/runners/test_jobs.py": [
          "File: tests/pytests/integration/runners/test_jobs.py -> tests/pytests/integration/runners/test_jobs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_manage.py||tests/pytests/integration/runners/test_manage.py": [
          "File: tests/pytests/integration/runners/test_manage.py -> tests/pytests/integration/runners/test_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_match.py||tests/pytests/integration/runners/test_match.py": [
          "File: tests/pytests/integration/runners/test_match.py -> tests/pytests/integration/runners/test_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_nacl.py||tests/pytests/integration/runners/test_nacl.py": [
          "File: tests/pytests/integration/runners/test_nacl.py -> tests/pytests/integration/runners/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_saltutil.py||tests/pytests/integration/runners/test_saltutil.py": [
          "File: tests/pytests/integration/runners/test_saltutil.py -> tests/pytests/integration/runners/test_saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/runners/test_vault.py||tests/pytests/integration/runners/test_vault.py": [
          "File: tests/pytests/integration/runners/test_vault.py -> tests/pytests/integration/runners/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/sdb/conftest.py||tests/pytests/integration/sdconftest.py": [
          "File: tests/pytests/integration/sdb/conftest.py -> tests/pytests/integration/sdconftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/sdb/test_etcd_db.py||tests/pytests/integration/sdtest_etcd_db.py": [
          "File: tests/pytests/integration/sdb/test_etcd_db.py -> tests/pytests/integration/sdtest_etcd_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/sdb/test_vault.py||tests/pytests/integration/sdtest_vault.py": [
          "File: tests/pytests/integration/sdb/test_vault.py -> tests/pytests/integration/sdtest_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/conftest.py||tests/pytests/integration/ssh/state/conftest.py": [
          "File: tests/pytests/integration/ssh/state/conftest.py -> tests/pytests/integration/ssh/state/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_pillar_override.py||tests/pytests/integration/ssh/state/test_pillar_override.py": [
          "File: tests/pytests/integration/ssh/state/test_pillar_override.py -> tests/pytests/integration/ssh/state/test_pillar_override.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_pillar_override_template.py||tests/pytests/integration/ssh/state/test_pillar_override_template.py": [
          "File: tests/pytests/integration/ssh/state/test_pillar_override_template.py -> tests/pytests/integration/ssh/state/test_pillar_override_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py||tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py": [
          "File: tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py -> tests/pytests/integration/ssh/state/test_retcode_highstate_verification_requisite_fail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py||tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py": [
          "File: tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py -> tests/pytests/integration/ssh/state/test_retcode_highstate_verification_structure_fail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py||tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py": [
          "File: tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py -> tests/pytests/integration/ssh/state/test_retcode_pillar_render_exception.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_retcode_render_exception.py||tests/pytests/integration/ssh/state/test_retcode_render_exception.py": [
          "File: tests/pytests/integration/ssh/state/test_retcode_render_exception.py -> tests/pytests/integration/ssh/state/test_retcode_render_exception.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_retcode_run_fail.py||tests/pytests/integration/ssh/state/test_retcode_run_fail.py": [
          "File: tests/pytests/integration/ssh/state/test_retcode_run_fail.py -> tests/pytests/integration/ssh/state/test_retcode_run_fail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/state/test_state.py||tests/pytests/integration/ssh/state/test_state.py": [
          "File: tests/pytests/integration/ssh/state/test_state.py -> tests/pytests/integration/ssh/state/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_deploy.py||tests/pytests/integration/ssh/test_deploy.py": [
          "File: tests/pytests/integration/ssh/test_deploy.py -> tests/pytests/integration/ssh/test_deploy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_grains.py||tests/pytests/integration/ssh/test_grains.py": [
          "File: tests/pytests/integration/ssh/test_grains.py -> tests/pytests/integration/ssh/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_jinja_filters.py||tests/pytests/integration/ssh/test_jinja_filters.py": [
          "File: tests/pytests/integration/ssh/test_jinja_filters.py -> tests/pytests/integration/ssh/test_jinja_filters.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_jinja_mods.py||tests/pytests/integration/ssh/test_jinja_mods.py": [
          "File: tests/pytests/integration/ssh/test_jinja_mods.py -> tests/pytests/integration/ssh/test_jinja_mods.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_log.py||tests/pytests/integration/ssh/test_log.py": [
          "File: tests/pytests/integration/ssh/test_log.py -> tests/pytests/integration/ssh/test_log.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_master.py||tests/pytests/integration/ssh/test_master.py": [
          "File: tests/pytests/integration/ssh/test_master.py -> tests/pytests/integration/ssh/test_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_mine.py||tests/pytests/integration/ssh/test_mine.py": [
          "File: tests/pytests/integration/ssh/test_mine.py -> tests/pytests/integration/ssh/test_mine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_pillar.py||tests/pytests/integration/ssh/test_pillar.py": [
          "File: tests/pytests/integration/ssh/test_pillar.py -> tests/pytests/integration/ssh/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_pillar_compilation.py||tests/pytests/integration/ssh/test_pillar_compilation.py": [
          "File: tests/pytests/integration/ssh/test_pillar_compilation.py -> tests/pytests/integration/ssh/test_pillar_compilation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_pre_flight.py||tests/pytests/integration/ssh/test_pre_flight.py": [
          "File: tests/pytests/integration/ssh/test_pre_flight.py -> tests/pytests/integration/ssh/test_pre_flight.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_publish.py||tests/pytests/integration/ssh/test_publish.py": [
          "File: tests/pytests/integration/ssh/test_publish.py -> tests/pytests/integration/ssh/test_publish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_py_versions.py||tests/pytests/integration/ssh/test_py_versions.py": [
          "File: tests/pytests/integration/ssh/test_py_versions.py -> tests/pytests/integration/ssh/test_py_versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_raw.py||tests/pytests/integration/ssh/test_raw.py": [
          "File: tests/pytests/integration/ssh/test_raw.py -> tests/pytests/integration/ssh/test_raw.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_saltcheck.py||tests/pytests/integration/ssh/test_saltcheck.py": [
          "File: tests/pytests/integration/ssh/test_saltcheck.py -> tests/pytests/integration/ssh/test_saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_ssh_setup.py||tests/pytests/integration/ssh/test_ssh_setup.py": [
          "File: tests/pytests/integration/ssh/test_ssh_setup.py -> tests/pytests/integration/ssh/test_ssh_setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/ssh/test_terraform.py||tests/pytests/integration/ssh/test_terraform.py": [
          "File: tests/pytests/integration/ssh/test_terraform.py -> tests/pytests/integration/ssh/test_terraform.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_ansiblegate.py||tests/pytests/integration/states/test_ansiblegate.py": [
          "File: tests/pytests/integration/states/test_ansiblegate.py -> tests/pytests/integration/states/test_ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_beacon.py||tests/pytests/integration/states/test_beacon.py": [
          "File: tests/pytests/integration/states/test_beacon.py -> tests/pytests/integration/states/test_beacon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_cron.py||tests/pytests/integration/states/test_cron.py": [
          "File: tests/pytests/integration/states/test_cron.py -> tests/pytests/integration/states/test_cron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_file.py||tests/pytests/integration/states/test_file.py": [
          "File: tests/pytests/integration/states/test_file.py -> tests/pytests/integration/states/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_idem.py||tests/pytests/integration/states/test_idem.py": [
          "File: tests/pytests/integration/states/test_idem.py -> tests/pytests/integration/states/test_idem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_include.py||tests/pytests/integration/states/test_include.py": [
          "File: tests/pytests/integration/states/test_include.py -> tests/pytests/integration/states/test_include.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_ini_manage.py||tests/pytests/integration/states/test_ini_manage.py": [
          "File: tests/pytests/integration/states/test_ini_manage.py -> tests/pytests/integration/states/test_ini_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_state_test.py||tests/pytests/integration/states/test_state_test.py": [
          "File: tests/pytests/integration/states/test_state_test.py -> tests/pytests/integration/states/test_state_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/states/test_x509_v2.py||tests/pytests/integration/states/test_x509_v2.py": [
          "File: tests/pytests/integration/states/test_x509_v2.py -> tests/pytests/integration/states/test_x509_v2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/utils/test_templates.py||tests/pytests/integration/utils/test_templates.py": [
          "File: tests/pytests/integration/utils/test_templates.py -> tests/pytests/integration/utils/test_templates.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/wheel/conftest.py||tests/pytests/integration/wheel/conftest.py": [
          "File: tests/pytests/integration/wheel/conftest.py -> tests/pytests/integration/wheel/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/wheel/test_client.py||tests/pytests/integration/wheel/test_client.py": [
          "File: tests/pytests/integration/wheel/test_client.py -> tests/pytests/integration/wheel/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/wheel/test_key.py||tests/pytests/integration/wheel/test_key.py": [
          "File: tests/pytests/integration/wheel/test_key.py -> tests/pytests/integration/wheel/test_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/integration/wheel/test_pillar_roots.py||tests/pytests/integration/wheel/test_pillar_roots.py": [
          "File: tests/pytests/integration/wheel/test_pillar_roots.py -> tests/pytests/integration/wheel/test_pillar_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/conftest.py||tests/pytests/pkg/conftest.py": [
          "File: tests/pytests/pkg/conftest.py -> tests/pytests/pkg/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/downgrade/test_salt_downgrade.py||tests/pytests/pkg/downgrade/test_salt_downgrade.py": [
          "File: tests/pytests/pkg/downgrade/test_salt_downgrade.py -> tests/pytests/pkg/downgrade/test_salt_downgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/download/test_pkg_download.py||tests/pytests/pkg/download/test_pkg_download.py": [
          "File: tests/pytests/pkg/download/test_pkg_download.py -> tests/pytests/pkg/download/test_pkg_download.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_check_imports.py||tests/pytests/pkg/integration/test_check_imports.py": [
          "File: tests/pytests/pkg/integration/test_check_imports.py -> tests/pytests/pkg/integration/test_check_imports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_clean_zmq_teardown.py||tests/pytests/pkg/integration/test_clean_zmq_teardown.py": [
          "File: tests/pytests/pkg/integration/test_clean_zmq_teardown.py -> tests/pytests/pkg/integration/test_clean_zmq_teardown.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_enabled_disabled.py||tests/pytests/pkg/integration/test_enabled_disabled.py": [
          "File: tests/pytests/pkg/integration/test_enabled_disabled.py -> tests/pytests/pkg/integration/test_enabled_disabled.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_help.py||tests/pytests/pkg/integration/test_help.py": [
          "File: tests/pytests/pkg/integration/test_help.py -> tests/pytests/pkg/integration/test_help.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_logrotate_config.py||tests/pytests/pkg/integration/test_logrotate_config.py": [
          "File: tests/pytests/pkg/integration/test_logrotate_config.py -> tests/pytests/pkg/integration/test_logrotate_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_multi_minion.py||tests/pytests/pkg/integration/test_multi_minion.py": [
          "File: tests/pytests/pkg/integration/test_multi_minion.py -> tests/pytests/pkg/integration/test_multi_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_pip.py||tests/pytests/pkg/integration/test_pip.py": [
          "File: tests/pytests/pkg/integration/test_pip.py -> tests/pytests/pkg/integration/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_pip_upgrade.py||tests/pytests/pkg/integration/test_pip_upgrade.py": [
          "File: tests/pytests/pkg/integration/test_pip_upgrade.py -> tests/pytests/pkg/integration/test_pip_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_pkg.py||tests/pytests/pkg/integration/test_pkg.py": [
          "File: tests/pytests/pkg/integration/test_pkg.py -> tests/pytests/pkg/integration/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_python.py||tests/pytests/pkg/integration/test_python.py": [
          "File: tests/pytests/pkg/integration/test_python.py -> tests/pytests/pkg/integration/test_python.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_api.py||tests/pytests/pkg/integration/test_salt_api.py": [
          "File: tests/pytests/pkg/integration/test_salt_api.py -> tests/pytests/pkg/integration/test_salt_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_call.py||tests/pytests/pkg/integration/test_salt_call.py": [
          "File: tests/pytests/pkg/integration/test_salt_call.py -> tests/pytests/pkg/integration/test_salt_call.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_exec.py||tests/pytests/pkg/integration/test_salt_exec.py": [
          "File: tests/pytests/pkg/integration/test_salt_exec.py -> tests/pytests/pkg/integration/test_salt_exec.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_grains.py||tests/pytests/pkg/integration/test_salt_grains.py": [
          "File: tests/pytests/pkg/integration/test_salt_grains.py -> tests/pytests/pkg/integration/test_salt_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_key.py||tests/pytests/pkg/integration/test_salt_key.py": [
          "File: tests/pytests/pkg/integration/test_salt_key.py -> tests/pytests/pkg/integration/test_salt_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_minion.py||tests/pytests/pkg/integration/test_salt_minion.py": [
          "File: tests/pytests/pkg/integration/test_salt_minion.py -> tests/pytests/pkg/integration/test_salt_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_output.py||tests/pytests/pkg/integration/test_salt_output.py": [
          "File: tests/pytests/pkg/integration/test_salt_output.py -> tests/pytests/pkg/integration/test_salt_output.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_pillar.py||tests/pytests/pkg/integration/test_salt_pillar.py": [
          "File: tests/pytests/pkg/integration/test_salt_pillar.py -> tests/pytests/pkg/integration/test_salt_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_state_file.py||tests/pytests/pkg/integration/test_salt_state_file.py": [
          "File: tests/pytests/pkg/integration/test_salt_state_file.py -> tests/pytests/pkg/integration/test_salt_state_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_ufw.py||tests/pytests/pkg/integration/test_salt_ufw.py": [
          "File: tests/pytests/pkg/integration/test_salt_ufw.py -> tests/pytests/pkg/integration/test_salt_ufw.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_salt_user.py||tests/pytests/pkg/integration/test_salt_user.py": [
          "File: tests/pytests/pkg/integration/test_salt_user.py -> tests/pytests/pkg/integration/test_salt_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_ssm.py||tests/pytests/pkg/integration/test_ssm.py": [
          "File: tests/pytests/pkg/integration/test_ssm.py -> tests/pytests/pkg/integration/test_ssm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_systemd_config.py||tests/pytests/pkg/integration/test_systemd_config.py": [
          "File: tests/pytests/pkg/integration/test_systemd_config.py -> tests/pytests/pkg/integration/test_systemd_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/integration/test_version.py||tests/pytests/pkg/integration/test_version.py": [
          "File: tests/pytests/pkg/integration/test_version.py -> tests/pytests/pkg/integration/test_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/pkg/upgrade/test_salt_upgrade.py||tests/pytests/pkg/upgrade/test_salt_upgrade.py": [
          "File: tests/pytests/pkg/upgrade/test_salt_upgrade.py -> tests/pytests/pkg/upgrade/test_salt_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/blackout/conftest.py||tests/pytests/scenarios/blackout/conftest.py": [
          "File: tests/pytests/scenarios/blackout/conftest.py -> tests/pytests/scenarios/blackout/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/blackout/test_minion_blackout.py||tests/pytests/scenarios/blackout/test_minion_blackout.py": [
          "File: tests/pytests/scenarios/blackout/test_minion_blackout.py -> tests/pytests/scenarios/blackout/test_minion_blackout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/cluster/conftest.py||tests/pytests/scenarios/cluster/conftest.py": [
          "File: tests/pytests/scenarios/cluster/conftest.py -> tests/pytests/scenarios/cluster/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/cluster/test_cluster.py||tests/pytests/scenarios/cluster/test_cluster.py": [
          "File: tests/pytests/scenarios/cluster/test_cluster.py -> tests/pytests/scenarios/cluster/test_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/compat/conftest.py||tests/pytests/scenarios/compat/conftest.py": [
          "File: tests/pytests/scenarios/compat/conftest.py -> tests/pytests/scenarios/compat/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/compat/test_with_versions.py||tests/pytests/scenarios/compat/test_with_versions.py": [
          "File: tests/pytests/scenarios/compat/test_with_versions.py -> tests/pytests/scenarios/compat/test_with_versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/daemons/conftest.py||tests/pytests/scenarios/daemons/conftest.py": [
          "File: tests/pytests/scenarios/daemons/conftest.py -> tests/pytests/scenarios/daemons/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/daemons/test_salt_as_daemons.py||tests/pytests/scenarios/daemons/test_salt_as_daemons.py": [
          "File: tests/pytests/scenarios/daemons/test_salt_as_daemons.py -> tests/pytests/scenarios/daemons/test_salt_as_daemons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/failover/multimaster/conftest.py||tests/pytests/scenarios/failover/multimaster/conftest.py": [
          "File: tests/pytests/scenarios/failover/multimaster/conftest.py -> tests/pytests/scenarios/failover/multimaster/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/failover/multimaster/test_failover_master.py||tests/pytests/scenarios/failover/multimaster/test_failover_master.py": [
          "File: tests/pytests/scenarios/failover/multimaster/test_failover_master.py -> tests/pytests/scenarios/failover/multimaster/test_failover_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/multimaster/beacons/test_inotify.py||tests/pytests/scenarios/multimaster/beacons/test_inotify.py": [
          "File: tests/pytests/scenarios/multimaster/beacons/test_inotify.py -> tests/pytests/scenarios/multimaster/beacons/test_inotify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/multimaster/conftest.py||tests/pytests/scenarios/multimaster/conftest.py": [
          "File: tests/pytests/scenarios/multimaster/conftest.py -> tests/pytests/scenarios/multimaster/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/multimaster/modules/test_test.py||tests/pytests/scenarios/multimaster/modules/test_test.py": [
          "File: tests/pytests/scenarios/multimaster/modules/test_test.py -> tests/pytests/scenarios/multimaster/modules/test_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/multimaster/test_multimaster.py||tests/pytests/scenarios/multimaster/test_multimaster.py": [
          "File: tests/pytests/scenarios/multimaster/test_multimaster.py -> tests/pytests/scenarios/multimaster/test_multimaster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/multimaster/test_offline_master.py||tests/pytests/scenarios/multimaster/test_offline_master.py": [
          "File: tests/pytests/scenarios/multimaster/test_offline_master.py -> tests/pytests/scenarios/multimaster/test_offline_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/performance/conftest.py||tests/pytests/scenarios/performance/conftest.py": [
          "File: tests/pytests/scenarios/performance/conftest.py -> tests/pytests/scenarios/performance/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/performance/test_performance.py||tests/pytests/scenarios/performance/test_performance.py": [
          "File: tests/pytests/scenarios/performance/test_performance.py -> tests/pytests/scenarios/performance/test_performance.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/reauth/conftest.py||tests/pytests/scenarios/reauth/conftest.py": [
          "File: tests/pytests/scenarios/reauth/conftest.py -> tests/pytests/scenarios/reauth/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/reauth/test_reauth.py||tests/pytests/scenarios/reauth/test_reauth.py": [
          "File: tests/pytests/scenarios/reauth/test_reauth.py -> tests/pytests/scenarios/reauth/test_reauth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/setup/conftest.py||tests/pytests/scenarios/setup/conftest.py": [
          "File: tests/pytests/scenarios/setup/conftest.py -> tests/pytests/scenarios/setup/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/setup/test_install.py||tests/pytests/scenarios/setup/test_install.py": [
          "File: tests/pytests/scenarios/setup/test_install.py -> tests/pytests/scenarios/setup/test_install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/setup/test_man.py||tests/pytests/scenarios/setup/test_man.py": [
          "File: tests/pytests/scenarios/setup/test_man.py -> tests/pytests/scenarios/setup/test_man.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/swarm/conftest.py||tests/pytests/scenarios/swarm/conftest.py": [
          "File: tests/pytests/scenarios/swarm/conftest.py -> tests/pytests/scenarios/swarm/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/scenarios/swarm/test_minion_swarm.py||tests/pytests/scenarios/swarm/test_minion_swarm.py": [
          "File: tests/pytests/scenarios/swarm/test_minion_swarm.py -> tests/pytests/scenarios/swarm/test_minion_swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py||tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py": [
          "File: tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py -> tests/pytests/unit/_logging/handlers/test_deferred_stream_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/auth/test_auth.py||tests/pytests/unit/auth/test_auth.py": [
          "File: tests/pytests/unit/auth/test_auth.py -> tests/pytests/unit/auth/test_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/auth/test_ldap.py||tests/pytests/unit/auth/test_ldap.py": [
          "File: tests/pytests/unit/auth/test_ldap.py -> tests/pytests/unit/auth/test_ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/auth/test_pam.py||tests/pytests/unit/auth/test_pam.py": [
          "File: tests/pytests/unit/auth/test_pam.py -> tests/pytests/unit/auth/test_pam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/auth/test_rest.py||tests/pytests/unit/auth/test_rest.py": [
          "File: tests/pytests/unit/auth/test_rest.py -> tests/pytests/unit/auth/test_rest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_adb.py||tests/pytests/unit/beacons/test_adb.py": [
          "File: tests/pytests/unit/beacons/test_adb.py -> tests/pytests/unit/beacons/test_adb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_avahi_announce.py||tests/pytests/unit/beacons/test_avahi_announce.py": [
          "File: tests/pytests/unit/beacons/test_avahi_announce.py -> tests/pytests/unit/beacons/test_avahi_announce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_bonjour_announce.py||tests/pytests/unit/beacons/test_bonjour_announce.py": [
          "File: tests/pytests/unit/beacons/test_bonjour_announce.py -> tests/pytests/unit/beacons/test_bonjour_announce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_btmp.py||tests/pytests/unit/beacons/test_btmp.py": [
          "File: tests/pytests/unit/beacons/test_btmp.py -> tests/pytests/unit/beacons/test_btmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_cert_info.py||tests/pytests/unit/beacons/test_cert_info.py": [
          "File: tests/pytests/unit/beacons/test_cert_info.py -> tests/pytests/unit/beacons/test_cert_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_diskusage.py||tests/pytests/unit/beacons/test_diskusage.py": [
          "File: tests/pytests/unit/beacons/test_diskusage.py -> tests/pytests/unit/beacons/test_diskusage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_glxinfo.py||tests/pytests/unit/beacons/test_glxinfo.py": [
          "File: tests/pytests/unit/beacons/test_glxinfo.py -> tests/pytests/unit/beacons/test_glxinfo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_haproxy.py||tests/pytests/unit/beacons/test_haproxy.py": [
          "File: tests/pytests/unit/beacons/test_haproxy.py -> tests/pytests/unit/beacons/test_haproxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_inotify.py||tests/pytests/unit/beacons/test_inotify.py": [
          "File: tests/pytests/unit/beacons/test_inotify.py -> tests/pytests/unit/beacons/test_inotify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_journald.py||tests/pytests/unit/beacons/test_journald.py": [
          "File: tests/pytests/unit/beacons/test_journald.py -> tests/pytests/unit/beacons/test_journald.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_load.py||tests/pytests/unit/beacons/test_load.py": [
          "File: tests/pytests/unit/beacons/test_load.py -> tests/pytests/unit/beacons/test_load.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_log_beacon.py||tests/pytests/unit/beacons/test_log_beacon.py": [
          "File: tests/pytests/unit/beacons/test_log_beacon.py -> tests/pytests/unit/beacons/test_log_beacon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_memusage.py||tests/pytests/unit/beacons/test_memusage.py": [
          "File: tests/pytests/unit/beacons/test_memusage.py -> tests/pytests/unit/beacons/test_memusage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_network_info.py||tests/pytests/unit/beacons/test_network_info.py": [
          "File: tests/pytests/unit/beacons/test_network_info.py -> tests/pytests/unit/beacons/test_network_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_network_settings.py||tests/pytests/unit/beacons/test_network_settings.py": [
          "File: tests/pytests/unit/beacons/test_network_settings.py -> tests/pytests/unit/beacons/test_network_settings.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_ps.py||tests/pytests/unit/beacons/test_ps.py": [
          "File: tests/pytests/unit/beacons/test_ps.py -> tests/pytests/unit/beacons/test_ps.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_salt_monitor.py||tests/pytests/unit/beacons/test_salt_monitor.py": [
          "File: tests/pytests/unit/beacons/test_salt_monitor.py -> tests/pytests/unit/beacons/test_salt_monitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_salt_proxy.py||tests/pytests/unit/beacons/test_salt_proxy.py": [
          "File: tests/pytests/unit/beacons/test_salt_proxy.py -> tests/pytests/unit/beacons/test_salt_proxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_sensehat.py||tests/pytests/unit/beacons/test_sensehat.py": [
          "File: tests/pytests/unit/beacons/test_sensehat.py -> tests/pytests/unit/beacons/test_sensehat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_service.py||tests/pytests/unit/beacons/test_service.py": [
          "File: tests/pytests/unit/beacons/test_service.py -> tests/pytests/unit/beacons/test_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_smartos_imgadm.py||tests/pytests/unit/beacons/test_smartos_imgadm.py": [
          "File: tests/pytests/unit/beacons/test_smartos_imgadm.py -> tests/pytests/unit/beacons/test_smartos_imgadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_smartos_vmadm.py||tests/pytests/unit/beacons/test_smartos_vmadm.py": [
          "File: tests/pytests/unit/beacons/test_smartos_vmadm.py -> tests/pytests/unit/beacons/test_smartos_vmadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_status.py||tests/pytests/unit/beacons/test_status.py": [
          "File: tests/pytests/unit/beacons/test_status.py -> tests/pytests/unit/beacons/test_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_swapusage.py||tests/pytests/unit/beacons/test_swapusage.py": [
          "File: tests/pytests/unit/beacons/test_swapusage.py -> tests/pytests/unit/beacons/test_swapusage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_telegram_bot_msg.py||tests/pytests/unit/beacons/test_telegram_bot_msg.py": [
          "File: tests/pytests/unit/beacons/test_telegram_bot_msg.py -> tests/pytests/unit/beacons/test_telegram_bot_msg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_twilio_txt_msg.py||tests/pytests/unit/beacons/test_twilio_txt_msg.py": [
          "File: tests/pytests/unit/beacons/test_twilio_txt_msg.py -> tests/pytests/unit/beacons/test_twilio_txt_msg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_watchdog.py||tests/pytests/unit/beacons/test_watchdog.py": [
          "File: tests/pytests/unit/beacons/test_watchdog.py -> tests/pytests/unit/beacons/test_watchdog.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/beacons/test_wtmp.py||tests/pytests/unit/beacons/test_wtmp.py": [
          "File: tests/pytests/unit/beacons/test_wtmp.py -> tests/pytests/unit/beacons/test_wtmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cache/test_cache.py||tests/pytests/unit/cache/test_cache.py": [
          "File: tests/pytests/unit/cache/test_cache.py -> tests/pytests/unit/cache/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cache/test_localfs.py||tests/pytests/unit/cache/test_localfs.py": [
          "File: tests/pytests/unit/cache/test_localfs.py -> tests/pytests/unit/cache/test_localfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cache/test_memcache.py||tests/pytests/unit/cache/test_memcache.py": [
          "File: tests/pytests/unit/cache/test_memcache.py -> tests/pytests/unit/cache/test_memcache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cache/test_mysql_cache.py||tests/pytests/unit/cache/test_mysql_cache.py": [
          "File: tests/pytests/unit/cache/test_mysql_cache.py -> tests/pytests/unit/cache/test_mysql_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/channel/test_request_channel.py||tests/pytests/unit/channel/test_request_channel.py": [
          "File: tests/pytests/unit/channel/test_request_channel.py -> tests/pytests/unit/channel/test_request_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cli/test_batch.py||tests/pytests/unit/cli/test_batch.py": [
          "File: tests/pytests/unit/cli/test_batch.py -> tests/pytests/unit/cli/test_batch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cli/test_daemons.py||tests/pytests/unit/cli/test_daemons.py": [
          "File: tests/pytests/unit/cli/test_daemons.py -> tests/pytests/unit/cli/test_daemons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cli/test_ssh.py||tests/pytests/unit/cli/test_ssh.py": [
          "File: tests/pytests/unit/cli/test_ssh.py -> tests/pytests/unit/cli/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_password.py||tests/pytests/unit/client/ssh/test_password.py": [
          "File: tests/pytests/unit/client/ssh/test_password.py -> tests/pytests/unit/client/ssh/test_password.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_return_events.py||tests/pytests/unit/client/ssh/test_return_events.py": [
          "File: tests/pytests/unit/client/ssh/test_return_events.py -> tests/pytests/unit/client/ssh/test_return_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_roster_defaults.py||tests/pytests/unit/client/ssh/test_roster_defaults.py": [
          "File: tests/pytests/unit/client/ssh/test_roster_defaults.py -> tests/pytests/unit/client/ssh/test_roster_defaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_shell.py||tests/pytests/unit/client/ssh/test_shell.py": [
          "File: tests/pytests/unit/client/ssh/test_shell.py -> tests/pytests/unit/client/ssh/test_shell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_single.py||tests/pytests/unit/client/ssh/test_single.py": [
          "File: tests/pytests/unit/client/ssh/test_single.py -> tests/pytests/unit/client/ssh/test_single.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_ssh.py||tests/pytests/unit/client/ssh/test_ssh.py": [
          "File: tests/pytests/unit/client/ssh/test_ssh.py -> tests/pytests/unit/client/ssh/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/test_ssh_classes.py||tests/pytests/unit/client/ssh/test_ssh_classes.py": [
          "File: tests/pytests/unit/client/ssh/test_ssh_classes.py -> tests/pytests/unit/client/ssh/test_ssh_classes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/ssh/wrapper/test_state.py||tests/pytests/unit/client/ssh/wrapper/test_state.py": [
          "File: tests/pytests/unit/client/ssh/wrapper/test_state.py -> tests/pytests/unit/client/ssh/wrapper/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/test_init.py||tests/pytests/unit/client/test_init.py": [
          "File: tests/pytests/unit/client/test_init.py -> tests/pytests/unit/client/test_init.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/client/test_netapi.py||tests/pytests/unit/client/test_netapi.py": [
          "File: tests/pytests/unit/client/test_netapi.py -> tests/pytests/unit/client/test_netapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_digitalocean.py||tests/pytests/unit/cloud/clouds/test_digitalocean.py": [
          "File: tests/pytests/unit/cloud/clouds/test_digitalocean.py -> tests/pytests/unit/cloud/clouds/test_digitalocean.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_dimensiondata.py||tests/pytests/unit/cloud/clouds/test_dimensiondata.py": [
          "File: tests/pytests/unit/cloud/clouds/test_dimensiondata.py -> tests/pytests/unit/cloud/clouds/test_dimensiondata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_ec2.py||tests/pytests/unit/cloud/clouds/test_ec2.py": [
          "File: tests/pytests/unit/cloud/clouds/test_ec2.py -> tests/pytests/unit/cloud/clouds/test_ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_gce.py||tests/pytests/unit/cloud/clouds/test_gce.py": [
          "File: tests/pytests/unit/cloud/clouds/test_gce.py -> tests/pytests/unit/cloud/clouds/test_gce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_hetzner.py||tests/pytests/unit/cloud/clouds/test_hetzner.py": [
          "File: tests/pytests/unit/cloud/clouds/test_hetzner.py -> tests/pytests/unit/cloud/clouds/test_hetzner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_joyent.py||tests/pytests/unit/cloud/clouds/test_joyent.py": [
          "File: tests/pytests/unit/cloud/clouds/test_joyent.py -> tests/pytests/unit/cloud/clouds/test_joyent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_linode.py||tests/pytests/unit/cloud/clouds/test_linode.py": [
          "File: tests/pytests/unit/cloud/clouds/test_linode.py -> tests/pytests/unit/cloud/clouds/test_linode.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_opennebula.py||tests/pytests/unit/cloud/clouds/test_opennebula.py": [
          "File: tests/pytests/unit/cloud/clouds/test_opennebula.py -> tests/pytests/unit/cloud/clouds/test_opennebula.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_openstack.py||tests/pytests/unit/cloud/clouds/test_openstack.py": [
          "File: tests/pytests/unit/cloud/clouds/test_openstack.py -> tests/pytests/unit/cloud/clouds/test_openstack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_proxmox.py||tests/pytests/unit/cloud/clouds/test_proxmox.py": [
          "File: tests/pytests/unit/cloud/clouds/test_proxmox.py -> tests/pytests/unit/cloud/clouds/test_proxmox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_qingcloud.py||tests/pytests/unit/cloud/clouds/test_qingcloud.py": [
          "File: tests/pytests/unit/cloud/clouds/test_qingcloud.py -> tests/pytests/unit/cloud/clouds/test_qingcloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_saltify.py||tests/pytests/unit/cloud/clouds/test_saltify.py": [
          "File: tests/pytests/unit/cloud/clouds/test_saltify.py -> tests/pytests/unit/cloud/clouds/test_saltify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_scaleway.py||tests/pytests/unit/cloud/clouds/test_scaleway.py": [
          "File: tests/pytests/unit/cloud/clouds/test_scaleway.py -> tests/pytests/unit/cloud/clouds/test_scaleway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_vultrpy.py||tests/pytests/unit/cloud/clouds/test_vultrpy.py": [
          "File: tests/pytests/unit/cloud/clouds/test_vultrpy.py -> tests/pytests/unit/cloud/clouds/test_vultrpy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/test_xen.py||tests/pytests/unit/cloud/clouds/test_xen.py": [
          "File: tests/pytests/unit/cloud/clouds/test_xen.py -> tests/pytests/unit/cloud/clouds/test_xen.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py||tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py": [
          "File: tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py -> tests/pytests/unit/cloud/clouds/vmware/test_clone_from_snapshot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/clouds/vmware/test_vmware.py||tests/pytests/unit/cloud/clouds/vmware/test_vmware.py": [
          "File: tests/pytests/unit/cloud/clouds/vmware/test_vmware.py -> tests/pytests/unit/cloud/clouds/vmware/test_vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/test_cloud.py||tests/pytests/unit/cloud/test_cloud.py": [
          "File: tests/pytests/unit/cloud/test_cloud.py -> tests/pytests/unit/cloud/test_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/cloud/test_map.py||tests/pytests/unit/cloud/test_map.py": [
          "File: tests/pytests/unit/cloud/test_map.py -> tests/pytests/unit/cloud/test_map.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/config/schemas/test_ssh.py||tests/pytests/unit/config/schemas/test_ssh.py": [
          "File: tests/pytests/unit/config/schemas/test_ssh.py -> tests/pytests/unit/config/schemas/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/config/test__validate_opts.py||tests/pytests/unit/config/test__validate_opts.py": [
          "File: tests/pytests/unit/config/test__validate_opts.py -> tests/pytests/unit/config/test__validate_opts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/config/test_master_config.py||tests/pytests/unit/config/test_master_config.py": [
          "File: tests/pytests/unit/config/test_master_config.py -> tests/pytests/unit/config/test_master_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/conftest.py||tests/pytests/unit/conftest.py": [
          "File: tests/pytests/unit/conftest.py -> tests/pytests/unit/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/daemons/masterapi/test_auto_key.py||tests/pytests/unit/daemons/masterapi/test_auto_key.py": [
          "File: tests/pytests/unit/daemons/masterapi/test_auto_key.py -> tests/pytests/unit/daemons/masterapi/test_auto_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/daemons/masterapi/test_local_funcs.py||tests/pytests/unit/daemons/masterapi/test_local_funcs.py": [
          "File: tests/pytests/unit/daemons/masterapi/test_local_funcs.py -> tests/pytests/unit/daemons/masterapi/test_local_funcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/daemons/masterapi/test_remote_funcs.py||tests/pytests/unit/daemons/masterapi/test_remote_funcs.py": [
          "File: tests/pytests/unit/daemons/masterapi/test_remote_funcs.py -> tests/pytests/unit/daemons/masterapi/test_remote_funcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/__init__.py||tests/pytests/unit/engines/__init__.py": [
          "File: tests/pytests/unit/engines/__init__.py -> tests/pytests/unit/engines/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_engines.py||tests/pytests/unit/engines/test_engines.py": [
          "File: tests/pytests/unit/engines/test_engines.py -> tests/pytests/unit/engines/test_engines.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_libvirt_events.py||tests/pytests/unit/engines/test_libvirt_events.py": [
          "File: tests/pytests/unit/engines/test_libvirt_events.py -> tests/pytests/unit/engines/test_libvirt_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_script.py||tests/pytests/unit/engines/test_script.py": [
          "File: tests/pytests/unit/engines/test_script.py -> tests/pytests/unit/engines/test_script.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_slack.py||tests/pytests/unit/engines/test_slack.py": [
          "File: tests/pytests/unit/engines/test_slack.py -> tests/pytests/unit/engines/test_slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_slack_bolt_engine.py||tests/pytests/unit/engines/test_slack_bolt_engine.py": [
          "File: tests/pytests/unit/engines/test_slack_bolt_engine.py -> tests/pytests/unit/engines/test_slack_bolt_engine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_sqs_events.py||tests/pytests/unit/engines/test_sqs_events.py": [
          "File: tests/pytests/unit/engines/test_sqs_events.py -> tests/pytests/unit/engines/test_sqs_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/engines/test_stalekey.py||tests/pytests/unit/engines/test_stalekey.py": [
          "File: tests/pytests/unit/engines/test_stalekey.py -> tests/pytests/unit/engines/test_stalekey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/executors/test_splay.py||tests/pytests/unit/executors/test_splay.py": [
          "File: tests/pytests/unit/executors/test_splay.py -> tests/pytests/unit/executors/test_splay.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileclient/test_fileclient.py||tests/pytests/unit/fileclient/test_fileclient.py": [
          "File: tests/pytests/unit/fileclient/test_fileclient.py -> tests/pytests/unit/fileclient/test_fileclient.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileclient/test_fileclient_cache.py||tests/pytests/unit/fileclient/test_fileclient_cache.py": [
          "File: tests/pytests/unit/fileclient/test_fileclient_cache.py -> tests/pytests/unit/fileclient/test_fileclient_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/gitfs/test_gitfs.py||tests/pytests/unit/fileserver/gitfs/test_gitfs.py": [
          "File: tests/pytests/unit/fileserver/gitfs/test_gitfs.py -> tests/pytests/unit/fileserver/gitfs/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py||tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py": [
          "File: tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py -> tests/pytests/unit/fileserver/gitfs/test_gitfs_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_roots.py||tests/pytests/unit/fileserver/test_roots.py": [
          "File: tests/pytests/unit/fileserver/test_roots.py -> tests/pytests/unit/fileserver/test_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_s3fs.py||tests/pytests/unit/fileserver/test_s3fs.py": [
          "File: tests/pytests/unit/fileserver/test_s3fs.py -> tests/pytests/unit/fileserver/test_s3fs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/fileserver/test_svnfs.py||tests/pytests/unit/fileserver/test_svnfs.py": [
          "File: tests/pytests/unit/fileserver/test_svnfs.py -> tests/pytests/unit/fileserver/test_svnfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_core.py||tests/pytests/unit/grains/test_core.py": [
          "File: tests/pytests/unit/grains/test_core.py -> tests/pytests/unit/grains/test_core.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_disks.py||tests/pytests/unit/grains/test_disks.py": [
          "File: tests/pytests/unit/grains/test_disks.py -> tests/pytests/unit/grains/test_disks.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_esxi.py||tests/pytests/unit/grains/test_esxi.py": [
          "File: tests/pytests/unit/grains/test_esxi.py -> tests/pytests/unit/grains/test_esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_fibre_channel.py||tests/pytests/unit/grains/test_fibre_channel.py": [
          "File: tests/pytests/unit/grains/test_fibre_channel.py -> tests/pytests/unit/grains/test_fibre_channel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_iscsi.py||tests/pytests/unit/grains/test_iscsi.py": [
          "File: tests/pytests/unit/grains/test_iscsi.py -> tests/pytests/unit/grains/test_iscsi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_lvm.py||tests/pytests/unit/grains/test_lvm.py": [
          "File: tests/pytests/unit/grains/test_lvm.py -> tests/pytests/unit/grains/test_lvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_mdata.py||tests/pytests/unit/grains/test_mdata.py": [
          "File: tests/pytests/unit/grains/test_mdata.py -> tests/pytests/unit/grains/test_mdata.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_metadata_gce.py||tests/pytests/unit/grains/test_metadata_gce.py": [
          "File: tests/pytests/unit/grains/test_metadata_gce.py -> tests/pytests/unit/grains/test_metadata_gce.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_napalm.py||tests/pytests/unit/grains/test_napalm.py": [
          "File: tests/pytests/unit/grains/test_napalm.py -> tests/pytests/unit/grains/test_napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_nvme.py||tests/pytests/unit/grains/test_nvme.py": [
          "File: tests/pytests/unit/grains/test_nvme.py -> tests/pytests/unit/grains/test_nvme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_package.py||tests/pytests/unit/grains/test_package.py": [
          "File: tests/pytests/unit/grains/test_package.py -> tests/pytests/unit/grains/test_package.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_pending_reboot.py||tests/pytests/unit/grains/test_pending_reboot.py": [
          "File: tests/pytests/unit/grains/test_pending_reboot.py -> tests/pytests/unit/grains/test_pending_reboot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/grains/test_smartos.py||tests/pytests/unit/grains/test_smartos.py": [
          "File: tests/pytests/unit/grains/test_smartos.py -> tests/pytests/unit/grains/test_smartos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/loader/test_context.py||tests/pytests/unit/loader/test_context.py": [
          "File: tests/pytests/unit/loader/test_context.py -> tests/pytests/unit/loader/test_context.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/loader/test_lazy.py||tests/pytests/unit/loader/test_lazy.py": [
          "File: tests/pytests/unit/loader/test_lazy.py -> tests/pytests/unit/loader/test_lazy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/loader/test_loader.py||tests/pytests/unit/loader/test_loader.py": [
          "File: tests/pytests/unit/loader/test_loader.py -> tests/pytests/unit/loader/test_loader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/log_handlers/test_sentry_mod.py||tests/pytests/unit/log_handlers/test_sentry_mod.py": [
          "File: tests/pytests/unit/log_handlers/test_sentry_mod.py -> tests/pytests/unit/log_handlers/test_sentry_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/matchers/test_confirm_top.py||tests/pytests/unit/matchers/test_confirm_top.py": [
          "File: tests/pytests/unit/matchers/test_confirm_top.py -> tests/pytests/unit/matchers/test_confirm_top.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/dockermod/test_module.py||tests/pytests/unit/modules/dockermod/test_module.py": [
          "File: tests/pytests/unit/modules/dockermod/test_module.py -> tests/pytests/unit/modules/dockermod/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/dockermod/test_trans_tar.py||tests/pytests/unit/modules/dockermod/test_trans_tar.py": [
          "File: tests/pytests/unit/modules/dockermod/test_trans_tar.py -> tests/pytests/unit/modules/dockermod/test_trans_tar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_basics.py||tests/pytests/unit/modules/file/test_file_basics.py": [
          "File: tests/pytests/unit/modules/file/test_file_basics.py -> tests/pytests/unit/modules/file/test_file_basics.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_block_replace.py||tests/pytests/unit/modules/file/test_file_block_replace.py": [
          "File: tests/pytests/unit/modules/file/test_file_block_replace.py -> tests/pytests/unit/modules/file/test_file_block_replace.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_chattr.py||tests/pytests/unit/modules/file/test_file_chattr.py": [
          "File: tests/pytests/unit/modules/file/test_file_chattr.py -> tests/pytests/unit/modules/file/test_file_chattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_check.py||tests/pytests/unit/modules/file/test_file_check.py": [
          "File: tests/pytests/unit/modules/file/test_file_check.py -> tests/pytests/unit/modules/file/test_file_check.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_comment_line.py||tests/pytests/unit/modules/file/test_file_comment_line.py": [
          "File: tests/pytests/unit/modules/file/test_file_comment_line.py -> tests/pytests/unit/modules/file/test_file_comment_line.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_grep.py||tests/pytests/unit/modules/file/test_file_grep.py": [
          "File: tests/pytests/unit/modules/file/test_file_grep.py -> tests/pytests/unit/modules/file/test_file_grep.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_line.py||tests/pytests/unit/modules/file/test_file_line.py": [
          "File: tests/pytests/unit/modules/file/test_file_line.py -> tests/pytests/unit/modules/file/test_file_line.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_lsattr.py||tests/pytests/unit/modules/file/test_file_lsattr.py": [
          "File: tests/pytests/unit/modules/file/test_file_lsattr.py -> tests/pytests/unit/modules/file/test_file_lsattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_module.py||tests/pytests/unit/modules/file/test_file_module.py": [
          "File: tests/pytests/unit/modules/file/test_file_module.py -> tests/pytests/unit/modules/file/test_file_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_rmdir.py||tests/pytests/unit/modules/file/test_file_rmdir.py": [
          "File: tests/pytests/unit/modules/file/test_file_rmdir.py -> tests/pytests/unit/modules/file/test_file_rmdir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/file/test_file_selinux.py||tests/pytests/unit/modules/file/test_file_selinux.py": [
          "File: tests/pytests/unit/modules/file/test_file_selinux.py -> tests/pytests/unit/modules/file/test_file_selinux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_bgp.py||tests/pytests/unit/modules/napalm/test_bgp.py": [
          "File: tests/pytests/unit/modules/napalm/test_bgp.py -> tests/pytests/unit/modules/napalm/test_bgp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_formula.py||tests/pytests/unit/modules/napalm/test_formula.py": [
          "File: tests/pytests/unit/modules/napalm/test_formula.py -> tests/pytests/unit/modules/napalm/test_formula.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_mod.py||tests/pytests/unit/modules/napalm/test_mod.py": [
          "File: tests/pytests/unit/modules/napalm/test_mod.py -> tests/pytests/unit/modules/napalm/test_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_netacl.py||tests/pytests/unit/modules/napalm/test_netacl.py": [
          "File: tests/pytests/unit/modules/napalm/test_netacl.py -> tests/pytests/unit/modules/napalm/test_netacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_network.py||tests/pytests/unit/modules/napalm/test_network.py": [
          "File: tests/pytests/unit/modules/napalm/test_network.py -> tests/pytests/unit/modules/napalm/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_ntp.py||tests/pytests/unit/modules/napalm/test_ntp.py": [
          "File: tests/pytests/unit/modules/napalm/test_ntp.py -> tests/pytests/unit/modules/napalm/test_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_route.py||tests/pytests/unit/modules/napalm/test_route.py": [
          "File: tests/pytests/unit/modules/napalm/test_route.py -> tests/pytests/unit/modules/napalm/test_route.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_snmp.py||tests/pytests/unit/modules/napalm/test_snmp.py": [
          "File: tests/pytests/unit/modules/napalm/test_snmp.py -> tests/pytests/unit/modules/napalm/test_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/napalm/test_users.py||tests/pytests/unit/modules/napalm/test_users.py": [
          "File: tests/pytests/unit/modules/napalm/test_users.py -> tests/pytests/unit/modules/napalm/test_users.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/state/test_initial_pillar.py||tests/pytests/unit/modules/state/test_initial_pillar.py": [
          "File: tests/pytests/unit/modules/state/test_initial_pillar.py -> tests/pytests/unit/modules/state/test_initial_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/state/test_state.py||tests/pytests/unit/modules/state/test_state.py": [
          "File: tests/pytests/unit/modules/state/test_state.py -> tests/pytests/unit/modules/state/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/state/test_top_file_merge.py||tests/pytests/unit/modules/state/test_top_file_merge.py": [
          "File: tests/pytests/unit/modules/state/test_top_file_merge.py -> tests/pytests/unit/modules/state/test_top_file_merge.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_acme.py||tests/pytests/unit/modules/test_acme.py": [
          "File: tests/pytests/unit/modules/test_acme.py -> tests/pytests/unit/modules/test_acme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_aix_status.py||tests/pytests/unit/modules/test_aix_status.py": [
          "File: tests/pytests/unit/modules/test_aix_status.py -> tests/pytests/unit/modules/test_aix_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_aixpkg.py||tests/pytests/unit/modules/test_aixpkg.py": [
          "File: tests/pytests/unit/modules/test_aixpkg.py -> tests/pytests/unit/modules/test_aixpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_aliases.py||tests/pytests/unit/modules/test_aliases.py": [
          "File: tests/pytests/unit/modules/test_aliases.py -> tests/pytests/unit/modules/test_aliases.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_alternatives.py||tests/pytests/unit/modules/test_alternatives.py": [
          "File: tests/pytests/unit/modules/test_alternatives.py -> tests/pytests/unit/modules/test_alternatives.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ansiblegate.py||tests/pytests/unit/modules/test_ansiblegate.py": [
          "File: tests/pytests/unit/modules/test_ansiblegate.py -> tests/pytests/unit/modules/test_ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_apache.py||tests/pytests/unit/modules/test_apache.py": [
          "File: tests/pytests/unit/modules/test_apache.py -> tests/pytests/unit/modules/test_apache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_aptpkg.py||tests/pytests/unit/modules/test_aptpkg.py": [
          "File: tests/pytests/unit/modules/test_aptpkg.py -> tests/pytests/unit/modules/test_aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_archive.py||tests/pytests/unit/modules/test_archive.py": [
          "File: tests/pytests/unit/modules/test_archive.py -> tests/pytests/unit/modules/test_archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_artifactory.py||tests/pytests/unit/modules/test_artifactory.py": [
          "File: tests/pytests/unit/modules/test_artifactory.py -> tests/pytests/unit/modules/test_artifactory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_at.py||tests/pytests/unit/modules/test_at.py": [
          "File: tests/pytests/unit/modules/test_at.py -> tests/pytests/unit/modules/test_at.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_augeas_cfg.py||tests/pytests/unit/modules/test_augeas_cfg.py": [
          "File: tests/pytests/unit/modules/test_augeas_cfg.py -> tests/pytests/unit/modules/test_augeas_cfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_baredoc.py||tests/pytests/unit/modules/test_baredoc.py": [
          "File: tests/pytests/unit/modules/test_baredoc.py -> tests/pytests/unit/modules/test_baredoc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_beacons.py||tests/pytests/unit/modules/test_beacons.py": [
          "File: tests/pytests/unit/modules/test_beacons.py -> tests/pytests/unit/modules/test_beacons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_bigip.py||tests/pytests/unit/modules/test_bigip.py": [
          "File: tests/pytests/unit/modules/test_bigip.py -> tests/pytests/unit/modules/test_bigip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_bluez_bluetooth.py||tests/pytests/unit/modules/test_bluez_bluetooth.py": [
          "File: tests/pytests/unit/modules/test_bluez_bluetooth.py -> tests/pytests/unit/modules/test_bluez_bluetooth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_boto_dynamodb.py||tests/pytests/unit/modules/test_boto_dynamodb.py": [
          "File: tests/pytests/unit/modules/test_boto_dynamodb.py -> tests/pytests/unit/modules/test_boto_dynamodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_boto_elbv2.py||tests/pytests/unit/modules/test_boto_elbv2.py": [
          "File: tests/pytests/unit/modules/test_boto_elbv2.py -> tests/pytests/unit/modules/test_boto_elbv2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_boto_ssm.py||tests/pytests/unit/modules/test_boto_ssm.py": [
          "File: tests/pytests/unit/modules/test_boto_ssm.py -> tests/pytests/unit/modules/test_boto_ssm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_bower.py||tests/pytests/unit/modules/test_bower.py": [
          "File: tests/pytests/unit/modules/test_bower.py -> tests/pytests/unit/modules/test_bower.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_bridge.py||tests/pytests/unit/modules/test_bridge.py": [
          "File: tests/pytests/unit/modules/test_bridge.py -> tests/pytests/unit/modules/test_bridge.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_btrfs.py||tests/pytests/unit/modules/test_btrfs.py": [
          "File: tests/pytests/unit/modules/test_btrfs.py -> tests/pytests/unit/modules/test_btrfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cassandra_cql.py||tests/pytests/unit/modules/test_cassandra_cql.py": [
          "File: tests/pytests/unit/modules/test_cassandra_cql.py -> tests/pytests/unit/modules/test_cassandra_cql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cassandra_mod.py||tests/pytests/unit/modules/test_cassandra_mod.py": [
          "File: tests/pytests/unit/modules/test_cassandra_mod.py -> tests/pytests/unit/modules/test_cassandra_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_chocolatey.py||tests/pytests/unit/modules/test_chocolatey.py": [
          "File: tests/pytests/unit/modules/test_chocolatey.py -> tests/pytests/unit/modules/test_chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_chroot.py||tests/pytests/unit/modules/test_chroot.py": [
          "File: tests/pytests/unit/modules/test_chroot.py -> tests/pytests/unit/modules/test_chroot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cmdmod.py||tests/pytests/unit/modules/test_cmdmod.py": [
          "File: tests/pytests/unit/modules/test_cmdmod.py -> tests/pytests/unit/modules/test_cmdmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_composer.py||tests/pytests/unit/modules/test_composer.py": [
          "File: tests/pytests/unit/modules/test_composer.py -> tests/pytests/unit/modules/test_composer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_config.py||tests/pytests/unit/modules/test_config.py": [
          "File: tests/pytests/unit/modules/test_config.py -> tests/pytests/unit/modules/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_consul.py||tests/pytests/unit/modules/test_consul.py": [
          "File: tests/pytests/unit/modules/test_consul.py -> tests/pytests/unit/modules/test_consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cp.py||tests/pytests/unit/modules/test_cp.py": [
          "File: tests/pytests/unit/modules/test_cp.py -> tests/pytests/unit/modules/test_cp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cpan.py||tests/pytests/unit/modules/test_cpan.py": [
          "File: tests/pytests/unit/modules/test_cpan.py -> tests/pytests/unit/modules/test_cpan.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_cryptdev.py||tests/pytests/unit/modules/test_cryptdev.py": [
          "File: tests/pytests/unit/modules/test_cryptdev.py -> tests/pytests/unit/modules/test_cryptdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_daemontools.py||tests/pytests/unit/modules/test_daemontools.py": [
          "File: tests/pytests/unit/modules/test_daemontools.py -> tests/pytests/unit/modules/test_daemontools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_data.py||tests/pytests/unit/modules/test_data.py": [
          "File: tests/pytests/unit/modules/test_data.py -> tests/pytests/unit/modules/test_data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ddns.py||tests/pytests/unit/modules/test_ddns.py": [
          "File: tests/pytests/unit/modules/test_ddns.py -> tests/pytests/unit/modules/test_ddns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_deb_apache.py||tests/pytests/unit/modules/test_deb_apache.py": [
          "File: tests/pytests/unit/modules/test_deb_apache.py -> tests/pytests/unit/modules/test_deb_apache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_deb_postgres.py||tests/pytests/unit/modules/test_deb_postgres.py": [
          "File: tests/pytests/unit/modules/test_deb_postgres.py -> tests/pytests/unit/modules/test_deb_postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_debconfmod.py||tests/pytests/unit/modules/test_debconfmod.py": [
          "File: tests/pytests/unit/modules/test_debconfmod.py -> tests/pytests/unit/modules/test_debconfmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_debian_ip.py||tests/pytests/unit/modules/test_debian_ip.py": [
          "File: tests/pytests/unit/modules/test_debian_ip.py -> tests/pytests/unit/modules/test_debian_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_debian_service.py||tests/pytests/unit/modules/test_debian_service.py": [
          "File: tests/pytests/unit/modules/test_debian_service.py -> tests/pytests/unit/modules/test_debian_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_defaults.py||tests/pytests/unit/modules/test_defaults.py": [
          "File: tests/pytests/unit/modules/test_defaults.py -> tests/pytests/unit/modules/test_defaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_devinfo.py||tests/pytests/unit/modules/test_devinfo.py": [
          "File: tests/pytests/unit/modules/test_devinfo.py -> tests/pytests/unit/modules/test_devinfo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_devmap.py||tests/pytests/unit/modules/test_devmap.py": [
          "File: tests/pytests/unit/modules/test_devmap.py -> tests/pytests/unit/modules/test_devmap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_dig.py||tests/pytests/unit/modules/test_dig.py": [
          "File: tests/pytests/unit/modules/test_dig.py -> tests/pytests/unit/modules/test_dig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_disk.py||tests/pytests/unit/modules/test_disk.py": [
          "File: tests/pytests/unit/modules/test_disk.py -> tests/pytests/unit/modules/test_disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_djangomod.py||tests/pytests/unit/modules/test_djangomod.py": [
          "File: tests/pytests/unit/modules/test_djangomod.py -> tests/pytests/unit/modules/test_djangomod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_dnsmasq.py||tests/pytests/unit/modules/test_dnsmasq.py": [
          "File: tests/pytests/unit/modules/test_dnsmasq.py -> tests/pytests/unit/modules/test_dnsmasq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_dnsutil.py||tests/pytests/unit/modules/test_dnsutil.py": [
          "File: tests/pytests/unit/modules/test_dnsutil.py -> tests/pytests/unit/modules/test_dnsutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_dpkg_lowpkg.py||tests/pytests/unit/modules/test_dpkg_lowpkg.py": [
          "File: tests/pytests/unit/modules/test_dpkg_lowpkg.py -> tests/pytests/unit/modules/test_dpkg_lowpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_drac.py||tests/pytests/unit/modules/test_drac.py": [
          "File: tests/pytests/unit/modules/test_drac.py -> tests/pytests/unit/modules/test_drac.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_drbd.py||tests/pytests/unit/modules/test_drbd.py": [
          "File: tests/pytests/unit/modules/test_drbd.py -> tests/pytests/unit/modules/test_drbd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_environ.py||tests/pytests/unit/modules/test_environ.py": [
          "File: tests/pytests/unit/modules/test_environ.py -> tests/pytests/unit/modules/test_environ.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_esxcluster.py||tests/pytests/unit/modules/test_esxcluster.py": [
          "File: tests/pytests/unit/modules/test_esxcluster.py -> tests/pytests/unit/modules/test_esxcluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_esxdatacenter.py||tests/pytests/unit/modules/test_esxdatacenter.py": [
          "File: tests/pytests/unit/modules/test_esxdatacenter.py -> tests/pytests/unit/modules/test_esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_etcd_mod.py||tests/pytests/unit/modules/test_etcd_mod.py": [
          "File: tests/pytests/unit/modules/test_etcd_mod.py -> tests/pytests/unit/modules/test_etcd_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ethtool.py||tests/pytests/unit/modules/test_ethtool.py": [
          "File: tests/pytests/unit/modules/test_ethtool.py -> tests/pytests/unit/modules/test_ethtool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_event.py||tests/pytests/unit/modules/test_event.py": [
          "File: tests/pytests/unit/modules/test_event.py -> tests/pytests/unit/modules/test_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_extfs.py||tests/pytests/unit/modules/test_extfs.py": [
          "File: tests/pytests/unit/modules/test_extfs.py -> tests/pytests/unit/modules/test_extfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_firewalld.py||tests/pytests/unit/modules/test_firewalld.py": [
          "File: tests/pytests/unit/modules/test_firewalld.py -> tests/pytests/unit/modules/test_firewalld.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_freebsd_sysctl.py||tests/pytests/unit/modules/test_freebsd_sysctl.py": [
          "File: tests/pytests/unit/modules/test_freebsd_sysctl.py -> tests/pytests/unit/modules/test_freebsd_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_freezer.py||tests/pytests/unit/modules/test_freezer.py": [
          "File: tests/pytests/unit/modules/test_freezer.py -> tests/pytests/unit/modules/test_freezer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_gem.py||tests/pytests/unit/modules/test_gem.py": [
          "File: tests/pytests/unit/modules/test_gem.py -> tests/pytests/unit/modules/test_gem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_genesis.py||tests/pytests/unit/modules/test_genesis.py": [
          "File: tests/pytests/unit/modules/test_genesis.py -> tests/pytests/unit/modules/test_genesis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_gentoo_service.py||tests/pytests/unit/modules/test_gentoo_service.py": [
          "File: tests/pytests/unit/modules/test_gentoo_service.py -> tests/pytests/unit/modules/test_gentoo_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_git.py||tests/pytests/unit/modules/test_git.py": [
          "File: tests/pytests/unit/modules/test_git.py -> tests/pytests/unit/modules/test_git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_glassfish.py||tests/pytests/unit/modules/test_glassfish.py": [
          "File: tests/pytests/unit/modules/test_glassfish.py -> tests/pytests/unit/modules/test_glassfish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_glusterfs.py||tests/pytests/unit/modules/test_glusterfs.py": [
          "File: tests/pytests/unit/modules/test_glusterfs.py -> tests/pytests/unit/modules/test_glusterfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_gnomedesktop.py||tests/pytests/unit/modules/test_gnomedesktop.py": [
          "File: tests/pytests/unit/modules/test_gnomedesktop.py -> tests/pytests/unit/modules/test_gnomedesktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_google_chat.py||tests/pytests/unit/modules/test_google_chat.py": [
          "File: tests/pytests/unit/modules/test_google_chat.py -> tests/pytests/unit/modules/test_google_chat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_gpg.py||tests/pytests/unit/modules/test_gpg.py": [
          "File: tests/pytests/unit/modules/test_gpg.py -> tests/pytests/unit/modules/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_grains.py||tests/pytests/unit/modules/test_grains.py": [
          "File: tests/pytests/unit/modules/test_grains.py -> tests/pytests/unit/modules/test_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_groupadd.py||tests/pytests/unit/modules/test_groupadd.py": [
          "File: tests/pytests/unit/modules/test_groupadd.py -> tests/pytests/unit/modules/test_groupadd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_grub_legacy.py||tests/pytests/unit/modules/test_grub_legacy.py": [
          "File: tests/pytests/unit/modules/test_grub_legacy.py -> tests/pytests/unit/modules/test_grub_legacy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_guestfs.py||tests/pytests/unit/modules/test_guestfs.py": [
          "File: tests/pytests/unit/modules/test_guestfs.py -> tests/pytests/unit/modules/test_guestfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_hadoop.py||tests/pytests/unit/modules/test_hadoop.py": [
          "File: tests/pytests/unit/modules/test_hadoop.py -> tests/pytests/unit/modules/test_hadoop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_haproxyconn.py||tests/pytests/unit/modules/test_haproxyconn.py": [
          "File: tests/pytests/unit/modules/test_haproxyconn.py -> tests/pytests/unit/modules/test_haproxyconn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_hashutil.py||tests/pytests/unit/modules/test_hashutil.py": [
          "File: tests/pytests/unit/modules/test_hashutil.py -> tests/pytests/unit/modules/test_hashutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_helm.py||tests/pytests/unit/modules/test_helm.py": [
          "File: tests/pytests/unit/modules/test_helm.py -> tests/pytests/unit/modules/test_helm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_hg.py||tests/pytests/unit/modules/test_hg.py": [
          "File: tests/pytests/unit/modules/test_hg.py -> tests/pytests/unit/modules/test_hg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_http.py||tests/pytests/unit/modules/test_http.py": [
          "File: tests/pytests/unit/modules/test_http.py -> tests/pytests/unit/modules/test_http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ilo.py||tests/pytests/unit/modules/test_ilo.py": [
          "File: tests/pytests/unit/modules/test_ilo.py -> tests/pytests/unit/modules/test_ilo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_incron.py||tests/pytests/unit/modules/test_incron.py": [
          "File: tests/pytests/unit/modules/test_incron.py -> tests/pytests/unit/modules/test_incron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ini_manage.py||tests/pytests/unit/modules/test_ini_manage.py": [
          "File: tests/pytests/unit/modules/test_ini_manage.py -> tests/pytests/unit/modules/test_ini_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_introspect.py||tests/pytests/unit/modules/test_introspect.py": [
          "File: tests/pytests/unit/modules/test_introspect.py -> tests/pytests/unit/modules/test_introspect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_iosconfig.py||tests/pytests/unit/modules/test_iosconfig.py": [
          "File: tests/pytests/unit/modules/test_iosconfig.py -> tests/pytests/unit/modules/test_iosconfig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ipset.py||tests/pytests/unit/modules/test_ipset.py": [
          "File: tests/pytests/unit/modules/test_ipset.py -> tests/pytests/unit/modules/test_ipset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_iptables.py||tests/pytests/unit/modules/test_iptables.py": [
          "File: tests/pytests/unit/modules/test_iptables.py -> tests/pytests/unit/modules/test_iptables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_junos.py||tests/pytests/unit/modules/test_junos.py": [
          "File: tests/pytests/unit/modules/test_junos.py -> tests/pytests/unit/modules/test_junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_key.py||tests/pytests/unit/modules/test_key.py": [
          "File: tests/pytests/unit/modules/test_key.py -> tests/pytests/unit/modules/test_key.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_keyboard.py||tests/pytests/unit/modules/test_keyboard.py": [
          "File: tests/pytests/unit/modules/test_keyboard.py -> tests/pytests/unit/modules/test_keyboard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_keystone.py||tests/pytests/unit/modules/test_keystone.py": [
          "File: tests/pytests/unit/modules/test_keystone.py -> tests/pytests/unit/modules/test_keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_kmod.py||tests/pytests/unit/modules/test_kmod.py": [
          "File: tests/pytests/unit/modules/test_kmod.py -> tests/pytests/unit/modules/test_kmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_kubeadm.py||tests/pytests/unit/modules/test_kubeadm.py": [
          "File: tests/pytests/unit/modules/test_kubeadm.py -> tests/pytests/unit/modules/test_kubeadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_launchctl_service.py||tests/pytests/unit/modules/test_launchctl_service.py": [
          "File: tests/pytests/unit/modules/test_launchctl_service.py -> tests/pytests/unit/modules/test_launchctl_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ldapmod.py||tests/pytests/unit/modules/test_ldapmod.py": [
          "File: tests/pytests/unit/modules/test_ldapmod.py -> tests/pytests/unit/modules/test_ldapmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_linux_lvm.py||tests/pytests/unit/modules/test_linux_lvm.py": [
          "File: tests/pytests/unit/modules/test_linux_lvm.py -> tests/pytests/unit/modules/test_linux_lvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_linux_service.py||tests/pytests/unit/modules/test_linux_service.py": [
          "File: tests/pytests/unit/modules/test_linux_service.py -> tests/pytests/unit/modules/test_linux_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_linux_shadow.py||tests/pytests/unit/modules/test_linux_shadow.py": [
          "File: tests/pytests/unit/modules/test_linux_shadow.py -> tests/pytests/unit/modules/test_linux_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_linux_sysctl.py||tests/pytests/unit/modules/test_linux_sysctl.py": [
          "File: tests/pytests/unit/modules/test_linux_sysctl.py -> tests/pytests/unit/modules/test_linux_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_locate.py||tests/pytests/unit/modules/test_locate.py": [
          "File: tests/pytests/unit/modules/test_locate.py -> tests/pytests/unit/modules/test_locate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_logadm.py||tests/pytests/unit/modules/test_logadm.py": [
          "File: tests/pytests/unit/modules/test_logadm.py -> tests/pytests/unit/modules/test_logadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_logrotate.py||tests/pytests/unit/modules/test_logrotate.py": [
          "File: tests/pytests/unit/modules/test_logrotate.py -> tests/pytests/unit/modules/test_logrotate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_lvs.py||tests/pytests/unit/modules/test_lvs.py": [
          "File: tests/pytests/unit/modules/test_lvs.py -> tests/pytests/unit/modules/test_lvs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_assistive.py||tests/pytests/unit/modules/test_mac_assistive.py": [
          "File: tests/pytests/unit/modules/test_mac_assistive.py -> tests/pytests/unit/modules/test_mac_assistive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_brew_pkg.py||tests/pytests/unit/modules/test_mac_brew_pkg.py": [
          "File: tests/pytests/unit/modules/test_mac_brew_pkg.py -> tests/pytests/unit/modules/test_mac_brew_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_desktop.py||tests/pytests/unit/modules/test_mac_desktop.py": [
          "File: tests/pytests/unit/modules/test_mac_desktop.py -> tests/pytests/unit/modules/test_mac_desktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_group.py||tests/pytests/unit/modules/test_mac_group.py": [
          "File: tests/pytests/unit/modules/test_mac_group.py -> tests/pytests/unit/modules/test_mac_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_keychain.py||tests/pytests/unit/modules/test_mac_keychain.py": [
          "File: tests/pytests/unit/modules/test_mac_keychain.py -> tests/pytests/unit/modules/test_mac_keychain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_pkgutil.py||tests/pytests/unit/modules/test_mac_pkgutil.py": [
          "File: tests/pytests/unit/modules/test_mac_pkgutil.py -> tests/pytests/unit/modules/test_mac_pkgutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_power.py||tests/pytests/unit/modules/test_mac_power.py": [
          "File: tests/pytests/unit/modules/test_mac_power.py -> tests/pytests/unit/modules/test_mac_power.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_service.py||tests/pytests/unit/modules/test_mac_service.py": [
          "File: tests/pytests/unit/modules/test_mac_service.py -> tests/pytests/unit/modules/test_mac_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_softwareupdate.py||tests/pytests/unit/modules/test_mac_softwareupdate.py": [
          "File: tests/pytests/unit/modules/test_mac_softwareupdate.py -> tests/pytests/unit/modules/test_mac_softwareupdate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_sysctl.py||tests/pytests/unit/modules/test_mac_sysctl.py": [
          "File: tests/pytests/unit/modules/test_mac_sysctl.py -> tests/pytests/unit/modules/test_mac_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_user.py||tests/pytests/unit/modules/test_mac_user.py": [
          "File: tests/pytests/unit/modules/test_mac_user.py -> tests/pytests/unit/modules/test_mac_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mac_xattr.py||tests/pytests/unit/modules/test_mac_xattr.py": [
          "File: tests/pytests/unit/modules/test_mac_xattr.py -> tests/pytests/unit/modules/test_mac_xattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_macdefaults.py||tests/pytests/unit/modules/test_macdefaults.py": [
          "File: tests/pytests/unit/modules/test_macdefaults.py -> tests/pytests/unit/modules/test_macdefaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_macpackage.py||tests/pytests/unit/modules/test_macpackage.py": [
          "File: tests/pytests/unit/modules/test_macpackage.py -> tests/pytests/unit/modules/test_macpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mandrill.py||tests/pytests/unit/modules/test_mandrill.py": [
          "File: tests/pytests/unit/modules/test_mandrill.py -> tests/pytests/unit/modules/test_mandrill.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_match.py||tests/pytests/unit/modules/test_match.py": [
          "File: tests/pytests/unit/modules/test_match.py -> tests/pytests/unit/modules/test_match.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mdadm_raid.py||tests/pytests/unit/modules/test_mdadm_raid.py": [
          "File: tests/pytests/unit/modules/test_mdadm_raid.py -> tests/pytests/unit/modules/test_mdadm_raid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mine.py||tests/pytests/unit/modules/test_mine.py": [
          "File: tests/pytests/unit/modules/test_mine.py -> tests/pytests/unit/modules/test_mine.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mod_random.py||tests/pytests/unit/modules/test_mod_random.py": [
          "File: tests/pytests/unit/modules/test_mod_random.py -> tests/pytests/unit/modules/test_mod_random.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_modjk.py||tests/pytests/unit/modules/test_modjk.py": [
          "File: tests/pytests/unit/modules/test_modjk.py -> tests/pytests/unit/modules/test_modjk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mongodb.py||tests/pytests/unit/modules/test_mongodb.py": [
          "File: tests/pytests/unit/modules/test_mongodb.py -> tests/pytests/unit/modules/test_mongodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_monit.py||tests/pytests/unit/modules/test_monit.py": [
          "File: tests/pytests/unit/modules/test_monit.py -> tests/pytests/unit/modules/test_monit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_moosefs.py||tests/pytests/unit/modules/test_moosefs.py": [
          "File: tests/pytests/unit/modules/test_moosefs.py -> tests/pytests/unit/modules/test_moosefs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mount.py||tests/pytests/unit/modules/test_mount.py": [
          "File: tests/pytests/unit/modules/test_mount.py -> tests/pytests/unit/modules/test_mount.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_msteams.py||tests/pytests/unit/modules/test_msteams.py": [
          "File: tests/pytests/unit/modules/test_msteams.py -> tests/pytests/unit/modules/test_msteams.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_munin.py||tests/pytests/unit/modules/test_munin.py": [
          "File: tests/pytests/unit/modules/test_munin.py -> tests/pytests/unit/modules/test_munin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_mysql.py||tests/pytests/unit/modules/test_mysql.py": [
          "File: tests/pytests/unit/modules/test_mysql.py -> tests/pytests/unit/modules/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nacl.py||tests/pytests/unit/modules/test_nacl.py": [
          "File: tests/pytests/unit/modules/test_nacl.py -> tests/pytests/unit/modules/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nagios.py||tests/pytests/unit/modules/test_nagios.py": [
          "File: tests/pytests/unit/modules/test_nagios.py -> tests/pytests/unit/modules/test_nagios.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_network.py||tests/pytests/unit/modules/test_network.py": [
          "File: tests/pytests/unit/modules/test_network.py -> tests/pytests/unit/modules/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nexus.py||tests/pytests/unit/modules/test_nexus.py": [
          "File: tests/pytests/unit/modules/test_nexus.py -> tests/pytests/unit/modules/test_nexus.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nfs3.py||tests/pytests/unit/modules/test_nfs3.py": [
          "File: tests/pytests/unit/modules/test_nfs3.py -> tests/pytests/unit/modules/test_nfs3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nftables.py||tests/pytests/unit/modules/test_nftables.py": [
          "File: tests/pytests/unit/modules/test_nftables.py -> tests/pytests/unit/modules/test_nftables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nginx.py||tests/pytests/unit/modules/test_nginx.py": [
          "File: tests/pytests/unit/modules/test_nginx.py -> tests/pytests/unit/modules/test_nginx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_nilrt_ip.py||tests/pytests/unit/modules/test_nilrt_ip.py": [
          "File: tests/pytests/unit/modules/test_nilrt_ip.py -> tests/pytests/unit/modules/test_nilrt_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_npm.py||tests/pytests/unit/modules/test_npm.py": [
          "File: tests/pytests/unit/modules/test_npm.py -> tests/pytests/unit/modules/test_npm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_openbsd_sysctl.py||tests/pytests/unit/modules/test_openbsd_sysctl.py": [
          "File: tests/pytests/unit/modules/test_openbsd_sysctl.py -> tests/pytests/unit/modules/test_openbsd_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_openbsdpkg.py||tests/pytests/unit/modules/test_openbsdpkg.py": [
          "File: tests/pytests/unit/modules/test_openbsdpkg.py -> tests/pytests/unit/modules/test_openbsdpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_openbsdrcctl_service.py||tests/pytests/unit/modules/test_openbsdrcctl_service.py": [
          "File: tests/pytests/unit/modules/test_openbsdrcctl_service.py -> tests/pytests/unit/modules/test_openbsdrcctl_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_openscap.py||tests/pytests/unit/modules/test_openscap.py": [
          "File: tests/pytests/unit/modules/test_openscap.py -> tests/pytests/unit/modules/test_openscap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_openvswitch.py||tests/pytests/unit/modules/test_openvswitch.py": [
          "File: tests/pytests/unit/modules/test_openvswitch.py -> tests/pytests/unit/modules/test_openvswitch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_opkg.py||tests/pytests/unit/modules/test_opkg.py": [
          "File: tests/pytests/unit/modules/test_opkg.py -> tests/pytests/unit/modules/test_opkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_oracle.py||tests/pytests/unit/modules/test_oracle.py": [
          "File: tests/pytests/unit/modules/test_oracle.py -> tests/pytests/unit/modules/test_oracle.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_osquery.py||tests/pytests/unit/modules/test_osquery.py": [
          "File: tests/pytests/unit/modules/test_osquery.py -> tests/pytests/unit/modules/test_osquery.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pacmanpkg.py||tests/pytests/unit/modules/test_pacmanpkg.py": [
          "File: tests/pytests/unit/modules/test_pacmanpkg.py -> tests/pytests/unit/modules/test_pacmanpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pagerduty.py||tests/pytests/unit/modules/test_pagerduty.py": [
          "File: tests/pytests/unit/modules/test_pagerduty.py -> tests/pytests/unit/modules/test_pagerduty.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pam.py||tests/pytests/unit/modules/test_pam.py": [
          "File: tests/pytests/unit/modules/test_pam.py -> tests/pytests/unit/modules/test_pam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_parallels.py||tests/pytests/unit/modules/test_parallels.py": [
          "File: tests/pytests/unit/modules/test_parallels.py -> tests/pytests/unit/modules/test_parallels.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pcs.py||tests/pytests/unit/modules/test_pcs.py": [
          "File: tests/pytests/unit/modules/test_pcs.py -> tests/pytests/unit/modules/test_pcs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pdbedit.py||tests/pytests/unit/modules/test_pdbedit.py": [
          "File: tests/pytests/unit/modules/test_pdbedit.py -> tests/pytests/unit/modules/test_pdbedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pecl.py||tests/pytests/unit/modules/test_pecl.py": [
          "File: tests/pytests/unit/modules/test_pecl.py -> tests/pytests/unit/modules/test_pecl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pf.py||tests/pytests/unit/modules/test_pf.py": [
          "File: tests/pytests/unit/modules/test_pf.py -> tests/pytests/unit/modules/test_pf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pillar.py||tests/pytests/unit/modules/test_pillar.py": [
          "File: tests/pytests/unit/modules/test_pillar.py -> tests/pytests/unit/modules/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pip.py||tests/pytests/unit/modules/test_pip.py": [
          "File: tests/pytests/unit/modules/test_pip.py -> tests/pytests/unit/modules/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pkg_resource.py||tests/pytests/unit/modules/test_pkg_resource.py": [
          "File: tests/pytests/unit/modules/test_pkg_resource.py -> tests/pytests/unit/modules/test_pkg_resource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pkgin.py||tests/pytests/unit/modules/test_pkgin.py": [
          "File: tests/pytests/unit/modules/test_pkgin.py -> tests/pytests/unit/modules/test_pkgin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pkgng.py||tests/pytests/unit/modules/test_pkgng.py": [
          "File: tests/pytests/unit/modules/test_pkgng.py -> tests/pytests/unit/modules/test_pkgng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pkgutil.py||tests/pytests/unit/modules/test_pkgutil.py": [
          "File: tests/pytests/unit/modules/test_pkgutil.py -> tests/pytests/unit/modules/test_pkgutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_portage_config.py||tests/pytests/unit/modules/test_portage_config.py": [
          "File: tests/pytests/unit/modules/test_portage_config.py -> tests/pytests/unit/modules/test_portage_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_postfix.py||tests/pytests/unit/modules/test_postfix.py": [
          "File: tests/pytests/unit/modules/test_postfix.py -> tests/pytests/unit/modules/test_postfix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_postgres.py||tests/pytests/unit/modules/test_postgres.py": [
          "File: tests/pytests/unit/modules/test_postgres.py -> tests/pytests/unit/modules/test_postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_poudriere.py||tests/pytests/unit/modules/test_poudriere.py": [
          "File: tests/pytests/unit/modules/test_poudriere.py -> tests/pytests/unit/modules/test_poudriere.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_powerpath.py||tests/pytests/unit/modules/test_powerpath.py": [
          "File: tests/pytests/unit/modules/test_powerpath.py -> tests/pytests/unit/modules/test_powerpath.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_proxy.py||tests/pytests/unit/modules/test_proxy.py": [
          "File: tests/pytests/unit/modules/test_proxy.py -> tests/pytests/unit/modules/test_proxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ps.py||tests/pytests/unit/modules/test_ps.py": [
          "File: tests/pytests/unit/modules/test_ps.py -> tests/pytests/unit/modules/test_ps.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_publish.py||tests/pytests/unit/modules/test_publish.py": [
          "File: tests/pytests/unit/modules/test_publish.py -> tests/pytests/unit/modules/test_publish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_puppet.py||tests/pytests/unit/modules/test_puppet.py": [
          "File: tests/pytests/unit/modules/test_puppet.py -> tests/pytests/unit/modules/test_puppet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_purefa.py||tests/pytests/unit/modules/test_purefa.py": [
          "File: tests/pytests/unit/modules/test_purefa.py -> tests/pytests/unit/modules/test_purefa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_purefb.py||tests/pytests/unit/modules/test_purefb.py": [
          "File: tests/pytests/unit/modules/test_purefb.py -> tests/pytests/unit/modules/test_purefb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pw_group.py||tests/pytests/unit/modules/test_pw_group.py": [
          "File: tests/pytests/unit/modules/test_pw_group.py -> tests/pytests/unit/modules/test_pw_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pw_user.py||tests/pytests/unit/modules/test_pw_user.py": [
          "File: tests/pytests/unit/modules/test_pw_user.py -> tests/pytests/unit/modules/test_pw_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_pyenv.py||tests/pytests/unit/modules/test_pyenv.py": [
          "File: tests/pytests/unit/modules/test_pyenv.py -> tests/pytests/unit/modules/test_pyenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_qemu_img.py||tests/pytests/unit/modules/test_qemu_img.py": [
          "File: tests/pytests/unit/modules/test_qemu_img.py -> tests/pytests/unit/modules/test_qemu_img.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_qemu_nbd.py||tests/pytests/unit/modules/test_qemu_nbd.py": [
          "File: tests/pytests/unit/modules/test_qemu_nbd.py -> tests/pytests/unit/modules/test_qemu_nbd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rabbitmq.py||tests/pytests/unit/modules/test_rabbitmq.py": [
          "File: tests/pytests/unit/modules/test_rabbitmq.py -> tests/pytests/unit/modules/test_rabbitmq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rbenv.py||tests/pytests/unit/modules/test_rbenv.py": [
          "File: tests/pytests/unit/modules/test_rbenv.py -> tests/pytests/unit/modules/test_rbenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rdp.py||tests/pytests/unit/modules/test_rdp.py": [
          "File: tests/pytests/unit/modules/test_rdp.py -> tests/pytests/unit/modules/test_rdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rebootmgr.py||tests/pytests/unit/modules/test_rebootmgr.py": [
          "File: tests/pytests/unit/modules/test_rebootmgr.py -> tests/pytests/unit/modules/test_rebootmgr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_redismod.py||tests/pytests/unit/modules/test_redismod.py": [
          "File: tests/pytests/unit/modules/test_redismod.py -> tests/pytests/unit/modules/test_redismod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_reg.py||tests/pytests/unit/modules/test_reg.py": [
          "File: tests/pytests/unit/modules/test_reg.py -> tests/pytests/unit/modules/test_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_restartcheck.py||tests/pytests/unit/modules/test_restartcheck.py": [
          "File: tests/pytests/unit/modules/test_restartcheck.py -> tests/pytests/unit/modules/test_restartcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_restconf.py||tests/pytests/unit/modules/test_restconf.py": [
          "File: tests/pytests/unit/modules/test_restconf.py -> tests/pytests/unit/modules/test_restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_ret.py||tests/pytests/unit/modules/test_ret.py": [
          "File: tests/pytests/unit/modules/test_ret.py -> tests/pytests/unit/modules/test_ret.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rh_service.py||tests/pytests/unit/modules/test_rh_service.py": [
          "File: tests/pytests/unit/modules/test_rh_service.py -> tests/pytests/unit/modules/test_rh_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_riak.py||tests/pytests/unit/modules/test_riak.py": [
          "File: tests/pytests/unit/modules/test_riak.py -> tests/pytests/unit/modules/test_riak.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rpm_lowpkg.py||tests/pytests/unit/modules/test_rpm_lowpkg.py": [
          "File: tests/pytests/unit/modules/test_rpm_lowpkg.py -> tests/pytests/unit/modules/test_rpm_lowpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rsync.py||tests/pytests/unit/modules/test_rsync.py": [
          "File: tests/pytests/unit/modules/test_rsync.py -> tests/pytests/unit/modules/test_rsync.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_rvm.py||tests/pytests/unit/modules/test_rvm.py": [
          "File: tests/pytests/unit/modules/test_rvm.py -> tests/pytests/unit/modules/test_rvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_s3.py||tests/pytests/unit/modules/test_s3.py": [
          "File: tests/pytests/unit/modules/test_s3.py -> tests/pytests/unit/modules/test_s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_s6.py||tests/pytests/unit/modules/test_s6.py": [
          "File: tests/pytests/unit/modules/test_s6.py -> tests/pytests/unit/modules/test_s6.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_salt_version.py||tests/pytests/unit/modules/test_salt_version.py": [
          "File: tests/pytests/unit/modules/test_salt_version.py -> tests/pytests/unit/modules/test_salt_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_saltcheck.py||tests/pytests/unit/modules/test_saltcheck.py": [
          "File: tests/pytests/unit/modules/test_saltcheck.py -> tests/pytests/unit/modules/test_saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_saltcloudmod.py||tests/pytests/unit/modules/test_saltcloudmod.py": [
          "File: tests/pytests/unit/modules/test_saltcloudmod.py -> tests/pytests/unit/modules/test_saltcloudmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_saltutil.py||tests/pytests/unit/modules/test_saltutil.py": [
          "File: tests/pytests/unit/modules/test_saltutil.py -> tests/pytests/unit/modules/test_saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_schedule.py||tests/pytests/unit/modules/test_schedule.py": [
          "File: tests/pytests/unit/modules/test_schedule.py -> tests/pytests/unit/modules/test_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_scsi.py||tests/pytests/unit/modules/test_scsi.py": [
          "File: tests/pytests/unit/modules/test_scsi.py -> tests/pytests/unit/modules/test_scsi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_sdb.py||tests/pytests/unit/modules/test_sdb.py": [
          "File: tests/pytests/unit/modules/test_sdb.py -> tests/pytests/unit/modules/test_sdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_seed.py||tests/pytests/unit/modules/test_seed.py": [
          "File: tests/pytests/unit/modules/test_seed.py -> tests/pytests/unit/modules/test_seed.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_selinux.py||tests/pytests/unit/modules/test_selinux.py": [
          "File: tests/pytests/unit/modules/test_selinux.py -> tests/pytests/unit/modules/test_selinux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_sensors.py||tests/pytests/unit/modules/test_sensors.py": [
          "File: tests/pytests/unit/modules/test_sensors.py -> tests/pytests/unit/modules/test_sensors.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_serverdensity_device.py||tests/pytests/unit/modules/test_serverdensity_device.py": [
          "File: tests/pytests/unit/modules/test_serverdensity_device.py -> tests/pytests/unit/modules/test_serverdensity_device.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_servicenow.py||tests/pytests/unit/modules/test_servicenow.py": [
          "File: tests/pytests/unit/modules/test_servicenow.py -> tests/pytests/unit/modules/test_servicenow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_slack.py||tests/pytests/unit/modules/test_slack.py": [
          "File: tests/pytests/unit/modules/test_slack.py -> tests/pytests/unit/modules/test_slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_slackware_service.py||tests/pytests/unit/modules/test_slackware_service.py": [
          "File: tests/pytests/unit/modules/test_slackware_service.py -> tests/pytests/unit/modules/test_slackware_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_slsutil.py||tests/pytests/unit/modules/test_slsutil.py": [
          "File: tests/pytests/unit/modules/test_slsutil.py -> tests/pytests/unit/modules/test_slsutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_smartos_imgadm.py||tests/pytests/unit/modules/test_smartos_imgadm.py": [
          "File: tests/pytests/unit/modules/test_smartos_imgadm.py -> tests/pytests/unit/modules/test_smartos_imgadm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_smf_service.py||tests/pytests/unit/modules/test_smf_service.py": [
          "File: tests/pytests/unit/modules/test_smf_service.py -> tests/pytests/unit/modules/test_smf_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_smtp.py||tests/pytests/unit/modules/test_smtp.py": [
          "File: tests/pytests/unit/modules/test_smtp.py -> tests/pytests/unit/modules/test_smtp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_solaris_shadow.py||tests/pytests/unit/modules/test_solaris_shadow.py": [
          "File: tests/pytests/unit/modules/test_solaris_shadow.py -> tests/pytests/unit/modules/test_solaris_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_solarisipspkg.py||tests/pytests/unit/modules/test_solarisipspkg.py": [
          "File: tests/pytests/unit/modules/test_solarisipspkg.py -> tests/pytests/unit/modules/test_solarisipspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_solarispkg.py||tests/pytests/unit/modules/test_solarispkg.py": [
          "File: tests/pytests/unit/modules/test_solarispkg.py -> tests/pytests/unit/modules/test_solarispkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_solr.py||tests/pytests/unit/modules/test_solr.py": [
          "File: tests/pytests/unit/modules/test_solr.py -> tests/pytests/unit/modules/test_solr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_state.py||tests/pytests/unit/modules/test_state.py": [
          "File: tests/pytests/unit/modules/test_state.py -> tests/pytests/unit/modules/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_status.py||tests/pytests/unit/modules/test_status.py": [
          "File: tests/pytests/unit/modules/test_status.py -> tests/pytests/unit/modules/test_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_suse_ip.py||tests/pytests/unit/modules/test_suse_ip.py": [
          "File: tests/pytests/unit/modules/test_suse_ip.py -> tests/pytests/unit/modules/test_suse_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_svn.py||tests/pytests/unit/modules/test_svn.py": [
          "File: tests/pytests/unit/modules/test_svn.py -> tests/pytests/unit/modules/test_svn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_swarm.py||tests/pytests/unit/modules/test_swarm.py": [
          "File: tests/pytests/unit/modules/test_swarm.py -> tests/pytests/unit/modules/test_swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_swift.py||tests/pytests/unit/modules/test_swift.py": [
          "File: tests/pytests/unit/modules/test_swift.py -> tests/pytests/unit/modules/test_swift.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_sysbench.py||tests/pytests/unit/modules/test_sysbench.py": [
          "File: tests/pytests/unit/modules/test_sysbench.py -> tests/pytests/unit/modules/test_sysbench.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_syslog_ng.py||tests/pytests/unit/modules/test_syslog_ng.py": [
          "File: tests/pytests/unit/modules/test_syslog_ng.py -> tests/pytests/unit/modules/test_syslog_ng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_system.py||tests/pytests/unit/modules/test_system.py": [
          "File: tests/pytests/unit/modules/test_system.py -> tests/pytests/unit/modules/test_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_systemd_service.py||tests/pytests/unit/modules/test_systemd_service.py": [
          "File: tests/pytests/unit/modules/test_systemd_service.py -> tests/pytests/unit/modules/test_systemd_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_telegram.py||tests/pytests/unit/modules/test_telegram.py": [
          "File: tests/pytests/unit/modules/test_telegram.py -> tests/pytests/unit/modules/test_telegram.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_timezone.py||tests/pytests/unit/modules/test_timezone.py": [
          "File: tests/pytests/unit/modules/test_timezone.py -> tests/pytests/unit/modules/test_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_tls.py||tests/pytests/unit/modules/test_tls.py": [
          "File: tests/pytests/unit/modules/test_tls.py -> tests/pytests/unit/modules/test_tls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_transactional_update.py||tests/pytests/unit/modules/test_transactional_update.py": [
          "File: tests/pytests/unit/modules/test_transactional_update.py -> tests/pytests/unit/modules/test_transactional_update.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_tuned.py||tests/pytests/unit/modules/test_tuned.py": [
          "File: tests/pytests/unit/modules/test_tuned.py -> tests/pytests/unit/modules/test_tuned.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_udev.py||tests/pytests/unit/modules/test_udev.py": [
          "File: tests/pytests/unit/modules/test_udev.py -> tests/pytests/unit/modules/test_udev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_uptime.py||tests/pytests/unit/modules/test_uptime.py": [
          "File: tests/pytests/unit/modules/test_uptime.py -> tests/pytests/unit/modules/test_uptime.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_useradd.py||tests/pytests/unit/modules/test_useradd.py": [
          "File: tests/pytests/unit/modules/test_useradd.py -> tests/pytests/unit/modules/test_useradd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_uwsgi.py||tests/pytests/unit/modules/test_uwsgi.py": [
          "File: tests/pytests/unit/modules/test_uwsgi.py -> tests/pytests/unit/modules/test_uwsgi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_vagrant.py||tests/pytests/unit/modules/test_vagrant.py": [
          "File: tests/pytests/unit/modules/test_vagrant.py -> tests/pytests/unit/modules/test_vagrant.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_varnish.py||tests/pytests/unit/modules/test_varnish.py": [
          "File: tests/pytests/unit/modules/test_varnish.py -> tests/pytests/unit/modules/test_varnish.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_vault.py||tests/pytests/unit/modules/test_vault.py": [
          "File: tests/pytests/unit/modules/test_vault.py -> tests/pytests/unit/modules/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_vmctl.py||tests/pytests/unit/modules/test_vmctl.py": [
          "File: tests/pytests/unit/modules/test_vmctl.py -> tests/pytests/unit/modules/test_vmctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_webutil.py||tests/pytests/unit/modules/test_webutil.py": [
          "File: tests/pytests/unit/modules/test_webutil.py -> tests/pytests/unit/modules/test_webutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_appx.py||tests/pytests/unit/modules/test_win_appx.py": [
          "File: tests/pytests/unit/modules/test_win_appx.py -> tests/pytests/unit/modules/test_win_appx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_autoruns.py||tests/pytests/unit/modules/test_win_autoruns.py": [
          "File: tests/pytests/unit/modules/test_win_autoruns.py -> tests/pytests/unit/modules/test_win_autoruns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_certutil.py||tests/pytests/unit/modules/test_win_certutil.py": [
          "File: tests/pytests/unit/modules/test_win_certutil.py -> tests/pytests/unit/modules/test_win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_disk.py||tests/pytests/unit/modules/test_win_disk.py": [
          "File: tests/pytests/unit/modules/test_win_disk.py -> tests/pytests/unit/modules/test_win_disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_dism.py||tests/pytests/unit/modules/test_win_dism.py": [
          "File: tests/pytests/unit/modules/test_win_dism.py -> tests/pytests/unit/modules/test_win_dism.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_dns_client.py||tests/pytests/unit/modules/test_win_dns_client.py": [
          "File: tests/pytests/unit/modules/test_win_dns_client.py -> tests/pytests/unit/modules/test_win_dns_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_event.py||tests/pytests/unit/modules/test_win_event.py": [
          "File: tests/pytests/unit/modules/test_win_event.py -> tests/pytests/unit/modules/test_win_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_file.py||tests/pytests/unit/modules/test_win_file.py": [
          "File: tests/pytests/unit/modules/test_win_file.py -> tests/pytests/unit/modules/test_win_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_iis.py||tests/pytests/unit/modules/test_win_iis.py": [
          "File: tests/pytests/unit/modules/test_win_iis.py -> tests/pytests/unit/modules/test_win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_ip.py||tests/pytests/unit/modules/test_win_ip.py": [
          "File: tests/pytests/unit/modules/test_win_ip.py -> tests/pytests/unit/modules/test_win_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_lgpo_reg.py||tests/pytests/unit/modules/test_win_lgpo_reg.py": [
          "File: tests/pytests/unit/modules/test_win_lgpo_reg.py -> tests/pytests/unit/modules/test_win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_licence.py||tests/pytests/unit/modules/test_win_licence.py": [
          "File: tests/pytests/unit/modules/test_win_licence.py -> tests/pytests/unit/modules/test_win_licence.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_network.py||tests/pytests/unit/modules/test_win_network.py": [
          "File: tests/pytests/unit/modules/test_win_network.py -> tests/pytests/unit/modules/test_win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_ntp.py||tests/pytests/unit/modules/test_win_ntp.py": [
          "File: tests/pytests/unit/modules/test_win_ntp.py -> tests/pytests/unit/modules/test_win_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_path.py||tests/pytests/unit/modules/test_win_path.py": [
          "File: tests/pytests/unit/modules/test_win_path.py -> tests/pytests/unit/modules/test_win_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_pkg.py||tests/pytests/unit/modules/test_win_pkg.py": [
          "File: tests/pytests/unit/modules/test_win_pkg.py -> tests/pytests/unit/modules/test_win_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_pki.py||tests/pytests/unit/modules/test_win_pki.py": [
          "File: tests/pytests/unit/modules/test_win_pki.py -> tests/pytests/unit/modules/test_win_pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_powercfg.py||tests/pytests/unit/modules/test_win_powercfg.py": [
          "File: tests/pytests/unit/modules/test_win_powercfg.py -> tests/pytests/unit/modules/test_win_powercfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_psget.py||tests/pytests/unit/modules/test_win_psget.py": [
          "File: tests/pytests/unit/modules/test_win_psget.py -> tests/pytests/unit/modules/test_win_psget.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_servermanager.py||tests/pytests/unit/modules/test_win_servermanager.py": [
          "File: tests/pytests/unit/modules/test_win_servermanager.py -> tests/pytests/unit/modules/test_win_servermanager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_service.py||tests/pytests/unit/modules/test_win_service.py": [
          "File: tests/pytests/unit/modules/test_win_service.py -> tests/pytests/unit/modules/test_win_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_shadow.py||tests/pytests/unit/modules/test_win_shadow.py": [
          "File: tests/pytests/unit/modules/test_win_shadow.py -> tests/pytests/unit/modules/test_win_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_snmp.py||tests/pytests/unit/modules/test_win_snmp.py": [
          "File: tests/pytests/unit/modules/test_win_snmp.py -> tests/pytests/unit/modules/test_win_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_system.py||tests/pytests/unit/modules/test_win_system.py": [
          "File: tests/pytests/unit/modules/test_win_system.py -> tests/pytests/unit/modules/test_win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_task.py||tests/pytests/unit/modules/test_win_task.py": [
          "File: tests/pytests/unit/modules/test_win_task.py -> tests/pytests/unit/modules/test_win_task.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_timezone.py||tests/pytests/unit/modules/test_win_timezone.py": [
          "File: tests/pytests/unit/modules/test_win_timezone.py -> tests/pytests/unit/modules/test_win_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_wua.py||tests/pytests/unit/modules/test_win_wua.py": [
          "File: tests/pytests/unit/modules/test_win_wua.py -> tests/pytests/unit/modules/test_win_wua.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_win_wusa.py||tests/pytests/unit/modules/test_win_wusa.py": [
          "File: tests/pytests/unit/modules/test_win_wusa.py -> tests/pytests/unit/modules/test_win_wusa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_xapi_virt.py||tests/pytests/unit/modules/test_xapi_virt.py": [
          "File: tests/pytests/unit/modules/test_xapi_virt.py -> tests/pytests/unit/modules/test_xapi_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_xfs.py||tests/pytests/unit/modules/test_xfs.py": [
          "File: tests/pytests/unit/modules/test_xfs.py -> tests/pytests/unit/modules/test_xfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_xml.py||tests/pytests/unit/modules/test_xml.py": [
          "File: tests/pytests/unit/modules/test_xml.py -> tests/pytests/unit/modules/test_xml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_yumpkg.py||tests/pytests/unit/modules/test_yumpkg.py": [
          "File: tests/pytests/unit/modules/test_yumpkg.py -> tests/pytests/unit/modules/test_yumpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zabbix.py||tests/pytests/unit/modules/test_zabbix.py": [
          "File: tests/pytests/unit/modules/test_zabbix.py -> tests/pytests/unit/modules/test_zabbix.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zenoss.py||tests/pytests/unit/modules/test_zenoss.py": [
          "File: tests/pytests/unit/modules/test_zenoss.py -> tests/pytests/unit/modules/test_zenoss.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zfs.py||tests/pytests/unit/modules/test_zfs.py": [
          "File: tests/pytests/unit/modules/test_zfs.py -> tests/pytests/unit/modules/test_zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zfs_solaris10.py||tests/pytests/unit/modules/test_zfs_solaris10.py": [
          "File: tests/pytests/unit/modules/test_zfs_solaris10.py -> tests/pytests/unit/modules/test_zfs_solaris10.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zfs_solaris11.py||tests/pytests/unit/modules/test_zfs_solaris11.py": [
          "File: tests/pytests/unit/modules/test_zfs_solaris11.py -> tests/pytests/unit/modules/test_zfs_solaris11.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_znc.py||tests/pytests/unit/modules/test_znc.py": [
          "File: tests/pytests/unit/modules/test_znc.py -> tests/pytests/unit/modules/test_znc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zpool.py||tests/pytests/unit/modules/test_zpool.py": [
          "File: tests/pytests/unit/modules/test_zpool.py -> tests/pytests/unit/modules/test_zpool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/test_zypperpkg.py||tests/pytests/unit/modules/test_zypperpkg.py": [
          "File: tests/pytests/unit/modules/test_zypperpkg.py -> tests/pytests/unit/modules/test_zypperpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/conftest.py||tests/pytests/unit/modules/virt/conftest.py": [
          "File: tests/pytests/unit/modules/virt/conftest.py -> tests/pytests/unit/modules/virt/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/test_domain.py||tests/pytests/unit/modules/virt/test_domain.py": [
          "File: tests/pytests/unit/modules/virt/test_domain.py -> tests/pytests/unit/modules/virt/test_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/test_helpers.py||tests/pytests/unit/modules/virt/test_helpers.py": [
          "File: tests/pytests/unit/modules/virt/test_helpers.py -> tests/pytests/unit/modules/virt/test_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/test_host.py||tests/pytests/unit/modules/virt/test_host.py": [
          "File: tests/pytests/unit/modules/virt/test_host.py -> tests/pytests/unit/modules/virt/test_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/virt/test_network.py||tests/pytests/unit/modules/virt/test_network.py": [
          "File: tests/pytests/unit/modules/virt/test_network.py -> tests/pytests/unit/modules/virt/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test__policy_info.py||tests/pytests/unit/modules/win_lgpo/test__policy_info.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test__policy_info.py -> tests/pytests/unit/modules/win_lgpo/test__policy_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_admx_policies.py||tests/pytests/unit/modules/win_lgpo/test_admx_policies.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_admx_policies.py -> tests/pytests/unit/modules/win_lgpo/test_admx_policies.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_adv_audit.py||tests/pytests/unit/modules/win_lgpo/test_adv_audit.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_adv_audit.py -> tests/pytests/unit/modules/win_lgpo/test_adv_audit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_defined_policies.py||tests/pytests/unit/modules/win_lgpo/test_defined_policies.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_defined_policies.py -> tests/pytests/unit/modules/win_lgpo/test_defined_policies.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_get_policy.py||tests/pytests/unit/modules/win_lgpo/test_get_policy.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_get_policy.py -> tests/pytests/unit/modules/win_lgpo/test_get_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_mechanisms.py||tests/pytests/unit/modules/win_lgpo/test_mechanisms.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_mechanisms.py -> tests/pytests/unit/modules/win_lgpo/test_mechanisms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_netsh.py||tests/pytests/unit/modules/win_lgpo/test_netsh.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_netsh.py -> tests/pytests/unit/modules/win_lgpo/test_netsh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py||tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py -> tests/pytests/unit/modules/win_lgpo/test_point_print_enabled.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py||tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py -> tests/pytests/unit/modules/win_lgpo/test_point_print_nc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_policy_info.py||tests/pytests/unit/modules/win_lgpo/test_policy_info.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_policy_info.py -> tests/pytests/unit/modules/win_lgpo/test_policy_info.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py||tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py -> tests/pytests/unit/modules/win_lgpo/test_policy_info_functions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_policy_resources.py||tests/pytests/unit/modules/win_lgpo/test_policy_resources.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_policy_resources.py -> tests/pytests/unit/modules/win_lgpo/test_policy_resources.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_reg_pol.py||tests/pytests/unit/modules/win_lgpo/test_reg_pol.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_reg_pol.py -> tests/pytests/unit/modules/win_lgpo/test_reg_pol.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_secedit.py||tests/pytests/unit/modules/win_lgpo/test_secedit.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_secedit.py -> tests/pytests/unit/modules/win_lgpo/test_secedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py||tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py": [
          "File: tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py -> tests/pytests/unit/modules/win_lgpo/test_secedit_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/netapi/cherrypy/test_events.py||tests/pytests/unit/netapi/cherrypy/test_events.py": [
          "File: tests/pytests/unit/netapi/cherrypy/test_events.py -> tests/pytests/unit/netapi/cherrypy/test_events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/netapi/cherrypy/test_login.py||tests/pytests/unit/netapi/cherrypy/test_login.py": [
          "File: tests/pytests/unit/netapi/cherrypy/test_login.py -> tests/pytests/unit/netapi/cherrypy/test_login.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/netapi/saltnado/test_base_handler.py||tests/pytests/unit/netapi/saltnado/test_base_handler.py": [
          "File: tests/pytests/unit/netapi/saltnado/test_base_handler.py -> tests/pytests/unit/netapi/saltnado/test_base_handler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_highstate.py||tests/pytests/unit/output/test_highstate.py": [
          "File: tests/pytests/unit/output/test_highstate.py -> tests/pytests/unit/output/test_highstate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_highstate_terse.py||tests/pytests/unit/output/test_highstate_terse.py": [
          "File: tests/pytests/unit/output/test_highstate_terse.py -> tests/pytests/unit/output/test_highstate_terse.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_json_out.py||tests/pytests/unit/output/test_json_out.py": [
          "File: tests/pytests/unit/output/test_json_out.py -> tests/pytests/unit/output/test_json_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_nested.py||tests/pytests/unit/output/test_nested.py": [
          "File: tests/pytests/unit/output/test_nested.py -> tests/pytests/unit/output/test_nested.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_table_out.py||tests/pytests/unit/output/test_table_out.py": [
          "File: tests/pytests/unit/output/test_table_out.py -> tests/pytests/unit/output/test_table_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/output/test_yaml_out.py||tests/pytests/unit/output/test_yaml_out.py": [
          "File: tests/pytests/unit/output/test_yaml_out.py -> tests/pytests/unit/output/test_yaml_out.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_consul_pillar.py||tests/pytests/unit/pillar/test_consul_pillar.py": [
          "File: tests/pytests/unit/pillar/test_consul_pillar.py -> tests/pytests/unit/pillar/test_consul_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_csvpillar.py||tests/pytests/unit/pillar/test_csvpillar.py": [
          "File: tests/pytests/unit/pillar/test_csvpillar.py -> tests/pytests/unit/pillar/test_csvpillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_etcd_pillar.py||tests/pytests/unit/pillar/test_etcd_pillar.py": [
          "File: tests/pytests/unit/pillar/test_etcd_pillar.py -> tests/pytests/unit/pillar/test_etcd_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py||tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py": [
          "File: tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py -> tests/pytests/unit/pillar/test_extra_minion_data_in_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_file_tree.py||tests/pytests/unit/pillar/test_file_tree.py": [
          "File: tests/pytests/unit/pillar/test_file_tree.py -> tests/pytests/unit/pillar/test_file_tree.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_http_json_pillar.py||tests/pytests/unit/pillar/test_http_json_pillar.py": [
          "File: tests/pytests/unit/pillar/test_http_json_pillar.py -> tests/pytests/unit/pillar/test_http_json_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_http_yaml_pillar.py||tests/pytests/unit/pillar/test_http_yaml_pillar.py": [
          "File: tests/pytests/unit/pillar/test_http_yaml_pillar.py -> tests/pytests/unit/pillar/test_http_yaml_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_mongo.py||tests/pytests/unit/pillar/test_mongo.py": [
          "File: tests/pytests/unit/pillar/test_mongo.py -> tests/pytests/unit/pillar/test_mongo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_mysql.py||tests/pytests/unit/pillar/test_mysql.py": [
          "File: tests/pytests/unit/pillar/test_mysql.py -> tests/pytests/unit/pillar/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_nacl.py||tests/pytests/unit/pillar/test_nacl.py": [
          "File: tests/pytests/unit/pillar/test_nacl.py -> tests/pytests/unit/pillar/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_netbox.py||tests/pytests/unit/pillar/test_netbox.py": [
          "File: tests/pytests/unit/pillar/test_netbox.py -> tests/pytests/unit/pillar/test_netbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_nodegroups.py||tests/pytests/unit/pillar/test_nodegroups.py": [
          "File: tests/pytests/unit/pillar/test_nodegroups.py -> tests/pytests/unit/pillar/test_nodegroups.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_pepa.py||tests/pytests/unit/pillar/test_pepa.py": [
          "File: tests/pytests/unit/pillar/test_pepa.py -> tests/pytests/unit/pillar/test_pepa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_pillar.py||tests/pytests/unit/pillar/test_pillar.py": [
          "File: tests/pytests/unit/pillar/test_pillar.py -> tests/pytests/unit/pillar/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_pillar_ldap.py||tests/pytests/unit/pillar/test_pillar_ldap.py": [
          "File: tests/pytests/unit/pillar/test_pillar_ldap.py -> tests/pytests/unit/pillar/test_pillar_ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_s3.py||tests/pytests/unit/pillar/test_s3.py": [
          "File: tests/pytests/unit/pillar/test_s3.py -> tests/pytests/unit/pillar/test_s3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_saltclass.py||tests/pytests/unit/pillar/test_saltclass.py": [
          "File: tests/pytests/unit/pillar/test_saltclass.py -> tests/pytests/unit/pillar/test_saltclass.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_sql_base.py||tests/pytests/unit/pillar/test_sql_base.py": [
          "File: tests/pytests/unit/pillar/test_sql_base.py -> tests/pytests/unit/pillar/test_sql_base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_sqlcipher.py||tests/pytests/unit/pillar/test_sqlcipher.py": [
          "File: tests/pytests/unit/pillar/test_sqlcipher.py -> tests/pytests/unit/pillar/test_sqlcipher.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_sqlite3.py||tests/pytests/unit/pillar/test_sqlite3.py": [
          "File: tests/pytests/unit/pillar/test_sqlite3.py -> tests/pytests/unit/pillar/test_sqlite3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_stack.py||tests/pytests/unit/pillar/test_stack.py": [
          "File: tests/pytests/unit/pillar/test_stack.py -> tests/pytests/unit/pillar/test_stack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/pillar/test_vault.py||tests/pytests/unit/pillar/test_vault.py": [
          "File: tests/pytests/unit/pillar/test_vault.py -> tests/pytests/unit/pillar/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py||tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py": [
          "File: tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py -> tests/pytests/unit/proxy/nxos/test_nxos_nxapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/nxos/test_nxos_ssh.py||tests/pytests/unit/proxy/nxos/test_nxos_ssh.py": [
          "File: tests/pytests/unit/proxy/nxos/test_nxos_ssh.py -> tests/pytests/unit/proxy/nxos/test_nxos_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_cimc.py||tests/pytests/unit/proxy/test_cimc.py": [
          "File: tests/pytests/unit/proxy/test_cimc.py -> tests/pytests/unit/proxy/test_cimc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_esxcluster.py||tests/pytests/unit/proxy/test_esxcluster.py": [
          "File: tests/pytests/unit/proxy/test_esxcluster.py -> tests/pytests/unit/proxy/test_esxcluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_esxdatacenter.py||tests/pytests/unit/proxy/test_esxdatacenter.py": [
          "File: tests/pytests/unit/proxy/test_esxdatacenter.py -> tests/pytests/unit/proxy/test_esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_junos.py||tests/pytests/unit/proxy/test_junos.py": [
          "File: tests/pytests/unit/proxy/test_junos.py -> tests/pytests/unit/proxy/test_junos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_napalm.py||tests/pytests/unit/proxy/test_napalm.py": [
          "File: tests/pytests/unit/proxy/test_napalm.py -> tests/pytests/unit/proxy/test_napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_netmiko_px.py||tests/pytests/unit/proxy/test_netmiko_px.py": [
          "File: tests/pytests/unit/proxy/test_netmiko_px.py -> tests/pytests/unit/proxy/test_netmiko_px.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_panos.py||tests/pytests/unit/proxy/test_panos.py": [
          "File: tests/pytests/unit/proxy/test_panos.py -> tests/pytests/unit/proxy/test_panos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_restconf.py||tests/pytests/unit/proxy/test_restconf.py": [
          "File: tests/pytests/unit/proxy/test_restconf.py -> tests/pytests/unit/proxy/test_restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/proxy/test_ssh_sample.py||tests/pytests/unit/proxy/test_ssh_sample.py": [
          "File: tests/pytests/unit/proxy/test_ssh_sample.py -> tests/pytests/unit/proxy/test_ssh_sample.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_aws_kms.py||tests/pytests/unit/renderers/test_aws_kms.py": [
          "File: tests/pytests/unit/renderers/test_aws_kms.py -> tests/pytests/unit/renderers/test_aws_kms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_gpg.py||tests/pytests/unit/renderers/test_gpg.py": [
          "File: tests/pytests/unit/renderers/test_gpg.py -> tests/pytests/unit/renderers/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_nacl.py||tests/pytests/unit/renderers/test_nacl.py": [
          "File: tests/pytests/unit/renderers/test_nacl.py -> tests/pytests/unit/renderers/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_pass.py||tests/pytests/unit/renderers/test_pass.py": [
          "File: tests/pytests/unit/renderers/test_pass.py -> tests/pytests/unit/renderers/test_pass.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_stateconf.py||tests/pytests/unit/renderers/test_stateconf.py": [
          "File: tests/pytests/unit/renderers/test_stateconf.py -> tests/pytests/unit/renderers/test_stateconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_toml.py||tests/pytests/unit/renderers/test_toml.py": [
          "File: tests/pytests/unit/renderers/test_toml.py -> tests/pytests/unit/renderers/test_toml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_yaml.py||tests/pytests/unit/renderers/test_yaml.py": [
          "File: tests/pytests/unit/renderers/test_yaml.py -> tests/pytests/unit/renderers/test_yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/renderers/test_yamlex.py||tests/pytests/unit/renderers/test_yamlex.py": [
          "File: tests/pytests/unit/renderers/test_yamlex.py -> tests/pytests/unit/renderers/test_yamlex.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/local_cache/test_local_cache.py||tests/pytests/unit/returners/local_cache/test_local_cache.py": [
          "File: tests/pytests/unit/returners/local_cache/test_local_cache.py -> tests/pytests/unit/returners/local_cache/test_local_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py||tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py": [
          "File: tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py -> tests/pytests/unit/returners/local_cache/test_local_cache_clean_old_jobs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_elasticsearch_return.py||tests/pytests/unit/returners/test_elasticsearch_return.py": [
          "File: tests/pytests/unit/returners/test_elasticsearch_return.py -> tests/pytests/unit/returners/test_elasticsearch_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_etcd_return.py||tests/pytests/unit/returners/test_etcd_return.py": [
          "File: tests/pytests/unit/returners/test_etcd_return.py -> tests/pytests/unit/returners/test_etcd_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_highstate_return.py||tests/pytests/unit/returners/test_highstate_return.py": [
          "File: tests/pytests/unit/returners/test_highstate_return.py -> tests/pytests/unit/returners/test_highstate_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_mongo_future_return.py||tests/pytests/unit/returners/test_mongo_future_return.py": [
          "File: tests/pytests/unit/returners/test_mongo_future_return.py -> tests/pytests/unit/returners/test_mongo_future_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_mysql.py||tests/pytests/unit/returners/test_mysql.py": [
          "File: tests/pytests/unit/returners/test_mysql.py -> tests/pytests/unit/returners/test_mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_nagios_nrdp_return.py||tests/pytests/unit/returners/test_nagios_nrdp_return.py": [
          "File: tests/pytests/unit/returners/test_nagios_nrdp_return.py -> tests/pytests/unit/returners/test_nagios_nrdp_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_pgjsonb.py||tests/pytests/unit/returners/test_pgjsonb.py": [
          "File: tests/pytests/unit/returners/test_pgjsonb.py -> tests/pytests/unit/returners/test_pgjsonb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_postgres.py||tests/pytests/unit/returners/test_postgres.py": [
          "File: tests/pytests/unit/returners/test_postgres.py -> tests/pytests/unit/returners/test_postgres.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_postgres_local_cache.py||tests/pytests/unit/returners/test_postgres_local_cache.py": [
          "File: tests/pytests/unit/returners/test_postgres_local_cache.py -> tests/pytests/unit/returners/test_postgres_local_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_sentry_return.py||tests/pytests/unit/returners/test_sentry_return.py": [
          "File: tests/pytests/unit/returners/test_sentry_return.py -> tests/pytests/unit/returners/test_sentry_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_slack_webhook_return.py||tests/pytests/unit/returners/test_slack_webhook_return.py": [
          "File: tests/pytests/unit/returners/test_slack_webhook_return.py -> tests/pytests/unit/returners/test_slack_webhook_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_smtp_return.py||tests/pytests/unit/returners/test_smtp_return.py": [
          "File: tests/pytests/unit/returners/test_smtp_return.py -> tests/pytests/unit/returners/test_smtp_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_splunk_return.py||tests/pytests/unit/returners/test_splunk_return.py": [
          "File: tests/pytests/unit/returners/test_splunk_return.py -> tests/pytests/unit/returners/test_splunk_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_syslog_return.py||tests/pytests/unit/returners/test_syslog_return.py": [
          "File: tests/pytests/unit/returners/test_syslog_return.py -> tests/pytests/unit/returners/test_syslog_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/returners/test_telegram_return.py||tests/pytests/unit/returners/test_telegram_return.py": [
          "File: tests/pytests/unit/returners/test_telegram_return.py -> tests/pytests/unit/returners/test_telegram_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_ansible.py||tests/pytests/unit/roster/test_ansible.py": [
          "File: tests/pytests/unit/roster/test_ansible.py -> tests/pytests/unit/roster/test_ansible.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_clustershell.py||tests/pytests/unit/roster/test_clustershell.py": [
          "File: tests/pytests/unit/roster/test_clustershell.py -> tests/pytests/unit/roster/test_clustershell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_dir.py||tests/pytests/unit/roster/test_dir.py": [
          "File: tests/pytests/unit/roster/test_dir.py -> tests/pytests/unit/roster/test_dir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_scan.py||tests/pytests/unit/roster/test_scan.py": [
          "File: tests/pytests/unit/roster/test_scan.py -> tests/pytests/unit/roster/test_scan.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_ssh_config.py||tests/pytests/unit/roster/test_ssh_config.py": [
          "File: tests/pytests/unit/roster/test_ssh_config.py -> tests/pytests/unit/roster/test_ssh_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_sshknownhosts.py||tests/pytests/unit/roster/test_sshknownhosts.py": [
          "File: tests/pytests/unit/roster/test_sshknownhosts.py -> tests/pytests/unit/roster/test_sshknownhosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/roster/test_terraform.py||tests/pytests/unit/roster/test_terraform.py": [
          "File: tests/pytests/unit/roster/test_terraform.py -> tests/pytests/unit/roster/test_terraform.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_asam.py||tests/pytests/unit/runners/test_asam.py": [
          "File: tests/pytests/unit/runners/test_asam.py -> tests/pytests/unit/runners/test_asam.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_bgp.py||tests/pytests/unit/runners/test_bgp.py": [
          "File: tests/pytests/unit/runners/test_bgp.py -> tests/pytests/unit/runners/test_bgp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_cache.py||tests/pytests/unit/runners/test_cache.py": [
          "File: tests/pytests/unit/runners/test_cache.py -> tests/pytests/unit/runners/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_fileserver.py||tests/pytests/unit/runners/test_fileserver.py": [
          "File: tests/pytests/unit/runners/test_fileserver.py -> tests/pytests/unit/runners/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_git_pillar.py||tests/pytests/unit/runners/test_git_pillar.py": [
          "File: tests/pytests/unit/runners/test_git_pillar.py -> tests/pytests/unit/runners/test_git_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_jobs.py||tests/pytests/unit/runners/test_jobs.py": [
          "File: tests/pytests/unit/runners/test_jobs.py -> tests/pytests/unit/runners/test_jobs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_manage.py||tests/pytests/unit/runners/test_manage.py": [
          "File: tests/pytests/unit/runners/test_manage.py -> tests/pytests/unit/runners/test_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_nacl.py||tests/pytests/unit/runners/test_nacl.py": [
          "File: tests/pytests/unit/runners/test_nacl.py -> tests/pytests/unit/runners/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_net.py||tests/pytests/unit/runners/test_net.py": [
          "File: tests/pytests/unit/runners/test_net.py -> tests/pytests/unit/runners/test_net.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_network.py||tests/pytests/unit/runners/test_network.py": [
          "File: tests/pytests/unit/runners/test_network.py -> tests/pytests/unit/runners/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_pillar.py||tests/pytests/unit/runners/test_pillar.py": [
          "File: tests/pytests/unit/runners/test_pillar.py -> tests/pytests/unit/runners/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_queue.py||tests/pytests/unit/runners/test_queue.py": [
          "File: tests/pytests/unit/runners/test_queue.py -> tests/pytests/unit/runners/test_queue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_reactor.py||tests/pytests/unit/runners/test_reactor.py": [
          "File: tests/pytests/unit/runners/test_reactor.py -> tests/pytests/unit/runners/test_reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_saltutil.py||tests/pytests/unit/runners/test_saltutil.py": [
          "File: tests/pytests/unit/runners/test_saltutil.py -> tests/pytests/unit/runners/test_saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_spacewalk.py||tests/pytests/unit/runners/test_spacewalk.py": [
          "File: tests/pytests/unit/runners/test_spacewalk.py -> tests/pytests/unit/runners/test_spacewalk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_state.py||tests/pytests/unit/runners/test_state.py": [
          "File: tests/pytests/unit/runners/test_state.py -> tests/pytests/unit/runners/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/test_winrepo.py||tests/pytests/unit/runners/test_winrepo.py": [
          "File: tests/pytests/unit/runners/test_winrepo.py -> tests/pytests/unit/runners/test_winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/vault/test_token_auth_deprecated.py||tests/pytests/unit/runners/vault/test_token_auth_deprecated.py": [
          "File: tests/pytests/unit/runners/vault/test_token_auth_deprecated.py -> tests/pytests/unit/runners/vault/test_token_auth_deprecated.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/runners/vault/test_vault.py||tests/pytests/unit/runners/vault/test_vault.py": [
          "File: tests/pytests/unit/runners/vault/test_vault.py -> tests/pytests/unit/runners/vault/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/sdb/test_etcd_db.py||tests/pytests/unit/sdtest_etcd_db.py": [
          "File: tests/pytests/unit/sdb/test_etcd_db.py -> tests/pytests/unit/sdtest_etcd_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/sdb/test_vault.py||tests/pytests/unit/sdtest_vault.py": [
          "File: tests/pytests/unit/sdb/test_vault.py -> tests/pytests/unit/sdtest_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/sdb/test_yaml.py||tests/pytests/unit/sdtest_yaml.py": [
          "File: tests/pytests/unit/sdb/test_yaml.py -> tests/pytests/unit/sdtest_yaml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/serializers/test_serializers.py||tests/pytests/unit/serializers/test_serializers.py": [
          "File: tests/pytests/unit/serializers/test_serializers.py -> tests/pytests/unit/serializers/test_serializers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/spm/test_pkgfiles.py||tests/pytests/unit/spm/test_pkgfiles.py": [
          "File: tests/pytests/unit/spm/test_pkgfiles.py -> tests/pytests/unit/spm/test_pkgfiles.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/spm/test_spm.py||tests/pytests/unit/spm/test_spm.py": [
          "File: tests/pytests/unit/spm/test_spm.py -> tests/pytests/unit/spm/test_spm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_global_state_conditions.py||tests/pytests/unit/state/test_global_state_conditions.py": [
          "File: tests/pytests/unit/state/test_global_state_conditions.py -> tests/pytests/unit/state/test_global_state_conditions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_multi_env_highstate.py||tests/pytests/unit/state/test_multi_env_highstate.py": [
          "File: tests/pytests/unit/state/test_multi_env_highstate.py -> tests/pytests/unit/state/test_multi_env_highstate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_reactor_compiler.py||tests/pytests/unit/state/test_reactor_compiler.py": [
          "File: tests/pytests/unit/state/test_reactor_compiler.py -> tests/pytests/unit/state/test_reactor_compiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_basic.py||tests/pytests/unit/state/test_state_basic.py": [
          "File: tests/pytests/unit/state/test_state_basic.py -> tests/pytests/unit/state/test_state_basic.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_compiler.py||tests/pytests/unit/state/test_state_compiler.py": [
          "File: tests/pytests/unit/state/test_state_compiler.py -> tests/pytests/unit/state/test_state_compiler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_format_slots.py||tests/pytests/unit/state/test_state_format_slots.py": [
          "File: tests/pytests/unit/state/test_state_format_slots.py -> tests/pytests/unit/state/test_state_format_slots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_highstate.py||tests/pytests/unit/state/test_state_highstate.py": [
          "File: tests/pytests/unit/state/test_state_highstate.py -> tests/pytests/unit/state/test_state_highstate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_options.py||tests/pytests/unit/state/test_state_options.py": [
          "File: tests/pytests/unit/state/test_state_options.py -> tests/pytests/unit/state/test_state_options.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_state_returns.py||tests/pytests/unit/state/test_state_returns.py": [
          "File: tests/pytests/unit/state/test_state_returns.py -> tests/pytests/unit/state/test_state_returns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/state/test_sub_state_returns.py||tests/pytests/unit/state/test_sub_state_returns.py": [
          "File: tests/pytests/unit/state/test_sub_state_returns.py -> tests/pytests/unit/state/test_sub_state_returns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/apache/test_apache.py||tests/pytests/unit/states/apache/test_apache.py": [
          "File: tests/pytests/unit/states/apache/test_apache.py -> tests/pytests/unit/states/apache/test_apache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/apache/test_conf.py||tests/pytests/unit/states/apache/test_conf.py": [
          "File: tests/pytests/unit/states/apache/test_conf.py -> tests/pytests/unit/states/apache/test_conf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/apache/test_module.py||tests/pytests/unit/states/apache/test_module.py": [
          "File: tests/pytests/unit/states/apache/test_module.py -> tests/pytests/unit/states/apache/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/apache/test_site.py||tests/pytests/unit/states/apache/test_site.py": [
          "File: tests/pytests/unit/states/apache/test_site.py -> tests/pytests/unit/states/apache/test_site.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test__clean_dir.py||tests/pytests/unit/states/file/test__clean_dir.py": [
          "File: tests/pytests/unit/states/file/test__clean_dir.py -> tests/pytests/unit/states/file/test__clean_dir.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_absent.py||tests/pytests/unit/states/file/test_absent.py": [
          "File: tests/pytests/unit/states/file/test_absent.py -> tests/pytests/unit/states/file/test_absent.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_comment.py||tests/pytests/unit/states/file/test_comment.py": [
          "File: tests/pytests/unit/states/file/test_comment.py -> tests/pytests/unit/states/file/test_comment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_copy.py||tests/pytests/unit/states/file/test_copy.py": [
          "File: tests/pytests/unit/states/file/test_copy.py -> tests/pytests/unit/states/file/test_copy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_directory.py||tests/pytests/unit/states/file/test_directory.py": [
          "File: tests/pytests/unit/states/file/test_directory.py -> tests/pytests/unit/states/file/test_directory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_filestate.py||tests/pytests/unit/states/file/test_filestate.py": [
          "File: tests/pytests/unit/states/file/test_filestate.py -> tests/pytests/unit/states/file/test_filestate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_find_keep_files.py||tests/pytests/unit/states/file/test_find_keep_files.py": [
          "File: tests/pytests/unit/states/file/test_find_keep_files.py -> tests/pytests/unit/states/file/test_find_keep_files.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_hardlink.py||tests/pytests/unit/states/file/test_hardlink.py": [
          "File: tests/pytests/unit/states/file/test_hardlink.py -> tests/pytests/unit/states/file/test_hardlink.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_keyvalue.py||tests/pytests/unit/states/file/test_keyvalue.py": [
          "File: tests/pytests/unit/states/file/test_keyvalue.py -> tests/pytests/unit/states/file/test_keyvalue.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_managed.py||tests/pytests/unit/states/file/test_managed.py": [
          "File: tests/pytests/unit/states/file/test_managed.py -> tests/pytests/unit/states/file/test_managed.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_mod_beacon.py||tests/pytests/unit/states/file/test_mod_beacon.py": [
          "File: tests/pytests/unit/states/file/test_mod_beacon.py -> tests/pytests/unit/states/file/test_mod_beacon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_prepend.py||tests/pytests/unit/states/file/test_prepend.py": [
          "File: tests/pytests/unit/states/file/test_prepend.py -> tests/pytests/unit/states/file/test_prepend.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_private_functions.py||tests/pytests/unit/states/file/test_private_functions.py": [
          "File: tests/pytests/unit/states/file/test_private_functions.py -> tests/pytests/unit/states/file/test_private_functions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_pruned.py||tests/pytests/unit/states/file/test_pruned.py": [
          "File: tests/pytests/unit/states/file/test_pruned.py -> tests/pytests/unit/states/file/test_pruned.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_rename.py||tests/pytests/unit/states/file/test_rename.py": [
          "File: tests/pytests/unit/states/file/test_rename.py -> tests/pytests/unit/states/file/test_rename.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_retention_schedule.py||tests/pytests/unit/states/file/test_retention_schedule.py": [
          "File: tests/pytests/unit/states/file/test_retention_schedule.py -> tests/pytests/unit/states/file/test_retention_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_selinux.py||tests/pytests/unit/states/file/test_selinux.py": [
          "File: tests/pytests/unit/states/file/test_selinux.py -> tests/pytests/unit/states/file/test_selinux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_symlink.py||tests/pytests/unit/states/file/test_symlink.py": [
          "File: tests/pytests/unit/states/file/test_symlink.py -> tests/pytests/unit/states/file/test_symlink.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/file/test_tidied.py||tests/pytests/unit/states/file/test_tidied.py": [
          "File: tests/pytests/unit/states/file/test_tidied.py -> tests/pytests/unit/states/file/test_tidied.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/mysql/test_database.py||tests/pytests/unit/states/mysql/test_database.py": [
          "File: tests/pytests/unit/states/mysql/test_database.py -> tests/pytests/unit/states/mysql/test_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/mysql/test_grants.py||tests/pytests/unit/states/mysql/test_grants.py": [
          "File: tests/pytests/unit/states/mysql/test_grants.py -> tests/pytests/unit/states/mysql/test_grants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/mysql/test_query.py||tests/pytests/unit/states/mysql/test_query.py": [
          "File: tests/pytests/unit/states/mysql/test_query.py -> tests/pytests/unit/states/mysql/test_query.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/mysql/test_user.py||tests/pytests/unit/states/mysql/test_user.py": [
          "File: tests/pytests/unit/states/mysql/test_user.py -> tests/pytests/unit/states/mysql/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_cluster.py||tests/pytests/unit/states/postgresql/test_cluster.py": [
          "File: tests/pytests/unit/states/postgresql/test_cluster.py -> tests/pytests/unit/states/postgresql/test_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_database.py||tests/pytests/unit/states/postgresql/test_database.py": [
          "File: tests/pytests/unit/states/postgresql/test_database.py -> tests/pytests/unit/states/postgresql/test_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_extension.py||tests/pytests/unit/states/postgresql/test_extension.py": [
          "File: tests/pytests/unit/states/postgresql/test_extension.py -> tests/pytests/unit/states/postgresql/test_extension.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_group.py||tests/pytests/unit/states/postgresql/test_group.py": [
          "File: tests/pytests/unit/states/postgresql/test_group.py -> tests/pytests/unit/states/postgresql/test_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_initdb.py||tests/pytests/unit/states/postgresql/test_initdb.py": [
          "File: tests/pytests/unit/states/postgresql/test_initdb.py -> tests/pytests/unit/states/postgresql/test_initdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_language.py||tests/pytests/unit/states/postgresql/test_language.py": [
          "File: tests/pytests/unit/states/postgresql/test_language.py -> tests/pytests/unit/states/postgresql/test_language.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_privileges.py||tests/pytests/unit/states/postgresql/test_privileges.py": [
          "File: tests/pytests/unit/states/postgresql/test_privileges.py -> tests/pytests/unit/states/postgresql/test_privileges.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_schema.py||tests/pytests/unit/states/postgresql/test_schema.py": [
          "File: tests/pytests/unit/states/postgresql/test_schema.py -> tests/pytests/unit/states/postgresql/test_schema.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/postgresql/test_user.py||tests/pytests/unit/states/postgresql/test_user.py": [
          "File: tests/pytests/unit/states/postgresql/test_user.py -> tests/pytests/unit/states/postgresql/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/rabbitmq/test_cluster.py||tests/pytests/unit/states/rabbitmq/test_cluster.py": [
          "File: tests/pytests/unit/states/rabbitmq/test_cluster.py -> tests/pytests/unit/states/rabbitmq/test_cluster.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/rabbitmq/test_plugin.py||tests/pytests/unit/states/rabbitmq/test_plugin.py": [
          "File: tests/pytests/unit/states/rabbitmq/test_plugin.py -> tests/pytests/unit/states/rabbitmq/test_plugin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/rabbitmq/test_policy.py||tests/pytests/unit/states/rabbitmq/test_policy.py": [
          "File: tests/pytests/unit/states/rabbitmq/test_policy.py -> tests/pytests/unit/states/rabbitmq/test_policy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/rabbitmq/test_vhost.py||tests/pytests/unit/states/rabbitmq/test_vhost.py": [
          "File: tests/pytests/unit/states/rabbitmq/test_vhost.py -> tests/pytests/unit/states/rabbitmq/test_vhost.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_function.py||tests/pytests/unit/states/saltmod/test_function.py": [
          "File: tests/pytests/unit/states/saltmod/test_function.py -> tests/pytests/unit/states/saltmod/test_function.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_parallel_runners.py||tests/pytests/unit/states/saltmod/test_parallel_runners.py": [
          "File: tests/pytests/unit/states/saltmod/test_parallel_runners.py -> tests/pytests/unit/states/saltmod/test_parallel_runners.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_runner.py||tests/pytests/unit/states/saltmod/test_runner.py": [
          "File: tests/pytests/unit/states/saltmod/test_runner.py -> tests/pytests/unit/states/saltmod/test_runner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_state.py||tests/pytests/unit/states/saltmod/test_state.py": [
          "File: tests/pytests/unit/states/saltmod/test_state.py -> tests/pytests/unit/states/saltmod/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_wait_for_event.py||tests/pytests/unit/states/saltmod/test_wait_for_event.py": [
          "File: tests/pytests/unit/states/saltmod/test_wait_for_event.py -> tests/pytests/unit/states/saltmod/test_wait_for_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/saltmod/test_wheel.py||tests/pytests/unit/states/saltmod/test_wheel.py": [
          "File: tests/pytests/unit/states/saltmod/test_wheel.py -> tests/pytests/unit/states/saltmod/test_wheel.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_acme.py||tests/pytests/unit/states/test_acme.py": [
          "File: tests/pytests/unit/states/test_acme.py -> tests/pytests/unit/states/test_acme.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_alias.py||tests/pytests/unit/states/test_alias.py": [
          "File: tests/pytests/unit/states/test_alias.py -> tests/pytests/unit/states/test_alias.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_alternatives.py||tests/pytests/unit/states/test_alternatives.py": [
          "File: tests/pytests/unit/states/test_alternatives.py -> tests/pytests/unit/states/test_alternatives.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ansiblegate.py||tests/pytests/unit/states/test_ansiblegate.py": [
          "File: tests/pytests/unit/states/test_ansiblegate.py -> tests/pytests/unit/states/test_ansiblegate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_aptpkg.py||tests/pytests/unit/states/test_aptpkg.py": [
          "File: tests/pytests/unit/states/test_aptpkg.py -> tests/pytests/unit/states/test_aptpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_archive.py||tests/pytests/unit/states/test_archive.py": [
          "File: tests/pytests/unit/states/test_archive.py -> tests/pytests/unit/states/test_archive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_artifactory.py||tests/pytests/unit/states/test_artifactory.py": [
          "File: tests/pytests/unit/states/test_artifactory.py -> tests/pytests/unit/states/test_artifactory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_at.py||tests/pytests/unit/states/test_at.py": [
          "File: tests/pytests/unit/states/test_at.py -> tests/pytests/unit/states/test_at.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_augeas.py||tests/pytests/unit/states/test_augeas.py": [
          "File: tests/pytests/unit/states/test_augeas.py -> tests/pytests/unit/states/test_augeas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_aws_sqs.py||tests/pytests/unit/states/test_aws_sqs.py": [
          "File: tests/pytests/unit/states/test_aws_sqs.py -> tests/pytests/unit/states/test_aws_sqs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_beacon.py||tests/pytests/unit/states/test_beacon.py": [
          "File: tests/pytests/unit/states/test_beacon.py -> tests/pytests/unit/states/test_beacon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_blockdev.py||tests/pytests/unit/states/test_blockdev.py": [
          "File: tests/pytests/unit/states/test_blockdev.py -> tests/pytests/unit/states/test_blockdev.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_asg.py||tests/pytests/unit/states/test_boto_asg.py": [
          "File: tests/pytests/unit/states/test_boto_asg.py -> tests/pytests/unit/states/test_boto_asg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_cloudfront.py||tests/pytests/unit/states/test_boto_cloudfront.py": [
          "File: tests/pytests/unit/states/test_boto_cloudfront.py -> tests/pytests/unit/states/test_boto_cloudfront.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_cloudtrail.py||tests/pytests/unit/states/test_boto_cloudtrail.py": [
          "File: tests/pytests/unit/states/test_boto_cloudtrail.py -> tests/pytests/unit/states/test_boto_cloudtrail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_cloudwatch_alarm.py||tests/pytests/unit/states/test_boto_cloudwatch_alarm.py": [
          "File: tests/pytests/unit/states/test_boto_cloudwatch_alarm.py -> tests/pytests/unit/states/test_boto_cloudwatch_alarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_cloudwatch_event.py||tests/pytests/unit/states/test_boto_cloudwatch_event.py": [
          "File: tests/pytests/unit/states/test_boto_cloudwatch_event.py -> tests/pytests/unit/states/test_boto_cloudwatch_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_dynamodb.py||tests/pytests/unit/states/test_boto_dynamodb.py": [
          "File: tests/pytests/unit/states/test_boto_dynamodb.py -> tests/pytests/unit/states/test_boto_dynamodb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_ec2.py||tests/pytests/unit/states/test_boto_ec2.py": [
          "File: tests/pytests/unit/states/test_boto_ec2.py -> tests/pytests/unit/states/test_boto_ec2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_elasticache.py||tests/pytests/unit/states/test_boto_elasticache.py": [
          "File: tests/pytests/unit/states/test_boto_elasticache.py -> tests/pytests/unit/states/test_boto_elasticache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_elasticsearch_domain.py||tests/pytests/unit/states/test_boto_elasticsearch_domain.py": [
          "File: tests/pytests/unit/states/test_boto_elasticsearch_domain.py -> tests/pytests/unit/states/test_boto_elasticsearch_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_elb.py||tests/pytests/unit/states/test_boto_elb.py": [
          "File: tests/pytests/unit/states/test_boto_elb.py -> tests/pytests/unit/states/test_boto_elb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_iam_role.py||tests/pytests/unit/states/test_boto_iam_role.py": [
          "File: tests/pytests/unit/states/test_boto_iam_role.py -> tests/pytests/unit/states/test_boto_iam_role.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_iot.py||tests/pytests/unit/states/test_boto_iot.py": [
          "File: tests/pytests/unit/states/test_boto_iot.py -> tests/pytests/unit/states/test_boto_iot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_kinesis.py||tests/pytests/unit/states/test_boto_kinesis.py": [
          "File: tests/pytests/unit/states/test_boto_kinesis.py -> tests/pytests/unit/states/test_boto_kinesis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_lambda.py||tests/pytests/unit/states/test_boto_lambda.py": [
          "File: tests/pytests/unit/states/test_boto_lambda.py -> tests/pytests/unit/states/test_boto_lambda.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_lc.py||tests/pytests/unit/states/test_boto_lc.py": [
          "File: tests/pytests/unit/states/test_boto_lc.py -> tests/pytests/unit/states/test_boto_lc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_route53.py||tests/pytests/unit/states/test_boto_route53.py": [
          "File: tests/pytests/unit/states/test_boto_route53.py -> tests/pytests/unit/states/test_boto_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_s3_bucket.py||tests/pytests/unit/states/test_boto_s3_bucket.py": [
          "File: tests/pytests/unit/states/test_boto_s3_bucket.py -> tests/pytests/unit/states/test_boto_s3_bucket.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_secgroup.py||tests/pytests/unit/states/test_boto_secgroup.py": [
          "File: tests/pytests/unit/states/test_boto_secgroup.py -> tests/pytests/unit/states/test_boto_secgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_sns.py||tests/pytests/unit/states/test_boto_sns.py": [
          "File: tests/pytests/unit/states/test_boto_sns.py -> tests/pytests/unit/states/test_boto_sns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_boto_sqs.py||tests/pytests/unit/states/test_boto_sqs.py": [
          "File: tests/pytests/unit/states/test_boto_sqs.py -> tests/pytests/unit/states/test_boto_sqs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_bower.py||tests/pytests/unit/states/test_bower.py": [
          "File: tests/pytests/unit/states/test_bower.py -> tests/pytests/unit/states/test_bower.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_btrfs.py||tests/pytests/unit/states/test_btrfs.py": [
          "File: tests/pytests/unit/states/test_btrfs.py -> tests/pytests/unit/states/test_btrfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_chef.py||tests/pytests/unit/states/test_chef.py": [
          "File: tests/pytests/unit/states/test_chef.py -> tests/pytests/unit/states/test_chef.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_chocolatey.py||tests/pytests/unit/states/test_chocolatey.py": [
          "File: tests/pytests/unit/states/test_chocolatey.py -> tests/pytests/unit/states/test_chocolatey.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_cloud.py||tests/pytests/unit/states/test_cloud.py": [
          "File: tests/pytests/unit/states/test_cloud.py -> tests/pytests/unit/states/test_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_cmd.py||tests/pytests/unit/states/test_cmd.py": [
          "File: tests/pytests/unit/states/test_cmd.py -> tests/pytests/unit/states/test_cmd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_composer.py||tests/pytests/unit/states/test_composer.py": [
          "File: tests/pytests/unit/states/test_composer.py -> tests/pytests/unit/states/test_composer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_consul.py||tests/pytests/unit/states/test_consul.py": [
          "File: tests/pytests/unit/states/test_consul.py -> tests/pytests/unit/states/test_consul.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ddns.py||tests/pytests/unit/states/test_ddns.py": [
          "File: tests/pytests/unit/states/test_ddns.py -> tests/pytests/unit/states/test_ddns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_debconfmod.py||tests/pytests/unit/states/test_debconfmod.py": [
          "File: tests/pytests/unit/states/test_debconfmod.py -> tests/pytests/unit/states/test_debconfmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_docker_image.py||tests/pytests/unit/states/test_docker_image.py": [
          "File: tests/pytests/unit/states/test_docker_image.py -> tests/pytests/unit/states/test_docker_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_docker_volume.py||tests/pytests/unit/states/test_docker_volume.py": [
          "File: tests/pytests/unit/states/test_docker_volume.py -> tests/pytests/unit/states/test_docker_volume.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_drac.py||tests/pytests/unit/states/test_drac.py": [
          "File: tests/pytests/unit/states/test_drac.py -> tests/pytests/unit/states/test_drac.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_elasticsearch.py||tests/pytests/unit/states/test_elasticsearch.py": [
          "File: tests/pytests/unit/states/test_elasticsearch.py -> tests/pytests/unit/states/test_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_environ.py||tests/pytests/unit/states/test_environ.py": [
          "File: tests/pytests/unit/states/test_environ.py -> tests/pytests/unit/states/test_environ.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_eselect.py||tests/pytests/unit/states/test_eselect.py": [
          "File: tests/pytests/unit/states/test_eselect.py -> tests/pytests/unit/states/test_eselect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_etcd_mod.py||tests/pytests/unit/states/test_etcd_mod.py": [
          "File: tests/pytests/unit/states/test_etcd_mod.py -> tests/pytests/unit/states/test_etcd_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ethtool.py||tests/pytests/unit/states/test_ethtool.py": [
          "File: tests/pytests/unit/states/test_ethtool.py -> tests/pytests/unit/states/test_ethtool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_event.py||tests/pytests/unit/states/test_event.py": [
          "File: tests/pytests/unit/states/test_event.py -> tests/pytests/unit/states/test_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_file.py||tests/pytests/unit/states/test_file.py": [
          "File: tests/pytests/unit/states/test_file.py -> tests/pytests/unit/states/test_file.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_gem.py||tests/pytests/unit/states/test_gem.py": [
          "File: tests/pytests/unit/states/test_gem.py -> tests/pytests/unit/states/test_gem.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_git.py||tests/pytests/unit/states/test_git.py": [
          "File: tests/pytests/unit/states/test_git.py -> tests/pytests/unit/states/test_git.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_glusterfs.py||tests/pytests/unit/states/test_glusterfs.py": [
          "File: tests/pytests/unit/states/test_glusterfs.py -> tests/pytests/unit/states/test_glusterfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_gnomedesktop.py||tests/pytests/unit/states/test_gnomedesktop.py": [
          "File: tests/pytests/unit/states/test_gnomedesktop.py -> tests/pytests/unit/states/test_gnomedesktop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_gpg.py||tests/pytests/unit/states/test_gpg.py": [
          "File: tests/pytests/unit/states/test_gpg.py -> tests/pytests/unit/states/test_gpg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_grafana.py||tests/pytests/unit/states/test_grafana.py": [
          "File: tests/pytests/unit/states/test_grafana.py -> tests/pytests/unit/states/test_grafana.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_grafana_datasource.py||tests/pytests/unit/states/test_grafana_datasource.py": [
          "File: tests/pytests/unit/states/test_grafana_datasource.py -> tests/pytests/unit/states/test_grafana_datasource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_group.py||tests/pytests/unit/states/test_group.py": [
          "File: tests/pytests/unit/states/test_group.py -> tests/pytests/unit/states/test_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_helm.py||tests/pytests/unit/states/test_helm.py": [
          "File: tests/pytests/unit/states/test_helm.py -> tests/pytests/unit/states/test_helm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_hg.py||tests/pytests/unit/states/test_hg.py": [
          "File: tests/pytests/unit/states/test_hg.py -> tests/pytests/unit/states/test_hg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_host.py||tests/pytests/unit/states/test_host.py": [
          "File: tests/pytests/unit/states/test_host.py -> tests/pytests/unit/states/test_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_http.py||tests/pytests/unit/states/test_http.py": [
          "File: tests/pytests/unit/states/test_http.py -> tests/pytests/unit/states/test_http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_incron.py||tests/pytests/unit/states/test_incron.py": [
          "File: tests/pytests/unit/states/test_incron.py -> tests/pytests/unit/states/test_incron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_influxdb08_database.py||tests/pytests/unit/states/test_influxdb08_database.py": [
          "File: tests/pytests/unit/states/test_influxdb08_database.py -> tests/pytests/unit/states/test_influxdb08_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_influxdb08_user.py||tests/pytests/unit/states/test_influxdb08_user.py": [
          "File: tests/pytests/unit/states/test_influxdb08_user.py -> tests/pytests/unit/states/test_influxdb08_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_influxdb_continuous_query.py||tests/pytests/unit/states/test_influxdb_continuous_query.py": [
          "File: tests/pytests/unit/states/test_influxdb_continuous_query.py -> tests/pytests/unit/states/test_influxdb_continuous_query.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ini_manage.py||tests/pytests/unit/states/test_ini_manage.py": [
          "File: tests/pytests/unit/states/test_ini_manage.py -> tests/pytests/unit/states/test_ini_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ipmi.py||tests/pytests/unit/states/test_ipmi.py": [
          "File: tests/pytests/unit/states/test_ipmi.py -> tests/pytests/unit/states/test_ipmi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_iptables.py||tests/pytests/unit/states/test_iptables.py": [
          "File: tests/pytests/unit/states/test_iptables.py -> tests/pytests/unit/states/test_iptables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_jboss7.py||tests/pytests/unit/states/test_jboss7.py": [
          "File: tests/pytests/unit/states/test_jboss7.py -> tests/pytests/unit/states/test_jboss7.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_kapacitor.py||tests/pytests/unit/states/test_kapacitor.py": [
          "File: tests/pytests/unit/states/test_kapacitor.py -> tests/pytests/unit/states/test_kapacitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_kernelpkg.py||tests/pytests/unit/states/test_kernelpkg.py": [
          "File: tests/pytests/unit/states/test_kernelpkg.py -> tests/pytests/unit/states/test_kernelpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_keyboard.py||tests/pytests/unit/states/test_keyboard.py": [
          "File: tests/pytests/unit/states/test_keyboard.py -> tests/pytests/unit/states/test_keyboard.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_keystone.py||tests/pytests/unit/states/test_keystone.py": [
          "File: tests/pytests/unit/states/test_keystone.py -> tests/pytests/unit/states/test_keystone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_keystore.py||tests/pytests/unit/states/test_keystore.py": [
          "File: tests/pytests/unit/states/test_keystore.py -> tests/pytests/unit/states/test_keystore.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_kmod.py||tests/pytests/unit/states/test_kmod.py": [
          "File: tests/pytests/unit/states/test_kmod.py -> tests/pytests/unit/states/test_kmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_kubernetes.py||tests/pytests/unit/states/test_kubernetes.py": [
          "File: tests/pytests/unit/states/test_kubernetes.py -> tests/pytests/unit/states/test_kubernetes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_layman.py||tests/pytests/unit/states/test_layman.py": [
          "File: tests/pytests/unit/states/test_layman.py -> tests/pytests/unit/states/test_layman.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ldap.py||tests/pytests/unit/states/test_ldap.py": [
          "File: tests/pytests/unit/states/test_ldap.py -> tests/pytests/unit/states/test_ldap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_libcloud_dns.py||tests/pytests/unit/states/test_libcloud_dns.py": [
          "File: tests/pytests/unit/states/test_libcloud_dns.py -> tests/pytests/unit/states/test_libcloud_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_linux_acl.py||tests/pytests/unit/states/test_linux_acl.py": [
          "File: tests/pytests/unit/states/test_linux_acl.py -> tests/pytests/unit/states/test_linux_acl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_locale.py||tests/pytests/unit/states/test_locale.py": [
          "File: tests/pytests/unit/states/test_locale.py -> tests/pytests/unit/states/test_locale.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_lvm.py||tests/pytests/unit/states/test_lvm.py": [
          "File: tests/pytests/unit/states/test_lvm.py -> tests/pytests/unit/states/test_lvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_lvs_server.py||tests/pytests/unit/states/test_lvs_server.py": [
          "File: tests/pytests/unit/states/test_lvs_server.py -> tests/pytests/unit/states/test_lvs_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_lvs_service.py||tests/pytests/unit/states/test_lvs_service.py": [
          "File: tests/pytests/unit/states/test_lvs_service.py -> tests/pytests/unit/states/test_lvs_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_lxc.py||tests/pytests/unit/states/test_lxc.py": [
          "File: tests/pytests/unit/states/test_lxc.py -> tests/pytests/unit/states/test_lxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mac_assistive.py||tests/pytests/unit/states/test_mac_assistive.py": [
          "File: tests/pytests/unit/states/test_mac_assistive.py -> tests/pytests/unit/states/test_mac_assistive.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mac_keychain.py||tests/pytests/unit/states/test_mac_keychain.py": [
          "File: tests/pytests/unit/states/test_mac_keychain.py -> tests/pytests/unit/states/test_mac_keychain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mac_xattr.py||tests/pytests/unit/states/test_mac_xattr.py": [
          "File: tests/pytests/unit/states/test_mac_xattr.py -> tests/pytests/unit/states/test_mac_xattr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_macdefaults.py||tests/pytests/unit/states/test_macdefaults.py": [
          "File: tests/pytests/unit/states/test_macdefaults.py -> tests/pytests/unit/states/test_macdefaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_macpackage.py||tests/pytests/unit/states/test_macpackage.py": [
          "File: tests/pytests/unit/states/test_macpackage.py -> tests/pytests/unit/states/test_macpackage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_makeconf.py||tests/pytests/unit/states/test_makeconf.py": [
          "File: tests/pytests/unit/states/test_makeconf.py -> tests/pytests/unit/states/test_makeconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mdadm_raid.py||tests/pytests/unit/states/test_mdadm_raid.py": [
          "File: tests/pytests/unit/states/test_mdadm_raid.py -> tests/pytests/unit/states/test_mdadm_raid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_memcached.py||tests/pytests/unit/states/test_memcached.py": [
          "File: tests/pytests/unit/states/test_memcached.py -> tests/pytests/unit/states/test_memcached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_modjk.py||tests/pytests/unit/states/test_modjk.py": [
          "File: tests/pytests/unit/states/test_modjk.py -> tests/pytests/unit/states/test_modjk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_modjk_worker.py||tests/pytests/unit/states/test_modjk_worker.py": [
          "File: tests/pytests/unit/states/test_modjk_worker.py -> tests/pytests/unit/states/test_modjk_worker.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mongodb_database.py||tests/pytests/unit/states/test_mongodb_database.py": [
          "File: tests/pytests/unit/states/test_mongodb_database.py -> tests/pytests/unit/states/test_mongodb_database.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mongodb_user.py||tests/pytests/unit/states/test_mongodb_user.py": [
          "File: tests/pytests/unit/states/test_mongodb_user.py -> tests/pytests/unit/states/test_mongodb_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_mount.py||tests/pytests/unit/states/test_mount.py": [
          "File: tests/pytests/unit/states/test_mount.py -> tests/pytests/unit/states/test_mount.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_net_napalm_yang.py||tests/pytests/unit/states/test_net_napalm_yang.py": [
          "File: tests/pytests/unit/states/test_net_napalm_yang.py -> tests/pytests/unit/states/test_net_napalm_yang.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_netconfig.py||tests/pytests/unit/states/test_netconfig.py": [
          "File: tests/pytests/unit/states/test_netconfig.py -> tests/pytests/unit/states/test_netconfig.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_network.py||tests/pytests/unit/states/test_network.py": [
          "File: tests/pytests/unit/states/test_network.py -> tests/pytests/unit/states/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_nexus.py||tests/pytests/unit/states/test_nexus.py": [
          "File: tests/pytests/unit/states/test_nexus.py -> tests/pytests/unit/states/test_nexus.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_nftables.py||tests/pytests/unit/states/test_nftables.py": [
          "File: tests/pytests/unit/states/test_nftables.py -> tests/pytests/unit/states/test_nftables.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_npm.py||tests/pytests/unit/states/test_npm.py": [
          "File: tests/pytests/unit/states/test_npm.py -> tests/pytests/unit/states/test_npm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ntp.py||tests/pytests/unit/states/test_ntp.py": [
          "File: tests/pytests/unit/states/test_ntp.py -> tests/pytests/unit/states/test_ntp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_nxos.py||tests/pytests/unit/states/test_nxos.py": [
          "File: tests/pytests/unit/states/test_nxos.py -> tests/pytests/unit/states/test_nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_openstack_config.py||tests/pytests/unit/states/test_openstack_config.py": [
          "File: tests/pytests/unit/states/test_openstack_config.py -> tests/pytests/unit/states/test_openstack_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_openvswitch_bridge.py||tests/pytests/unit/states/test_openvswitch_bridge.py": [
          "File: tests/pytests/unit/states/test_openvswitch_bridge.py -> tests/pytests/unit/states/test_openvswitch_bridge.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_openvswitch_db.py||tests/pytests/unit/states/test_openvswitch_db.py": [
          "File: tests/pytests/unit/states/test_openvswitch_db.py -> tests/pytests/unit/states/test_openvswitch_db.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_openvswitch_port.py||tests/pytests/unit/states/test_openvswitch_port.py": [
          "File: tests/pytests/unit/states/test_openvswitch_port.py -> tests/pytests/unit/states/test_openvswitch_port.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pagerduty.py||tests/pytests/unit/states/test_pagerduty.py": [
          "File: tests/pytests/unit/states/test_pagerduty.py -> tests/pytests/unit/states/test_pagerduty.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pdbedit.py||tests/pytests/unit/states/test_pdbedit.py": [
          "File: tests/pytests/unit/states/test_pdbedit.py -> tests/pytests/unit/states/test_pdbedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pecl.py||tests/pytests/unit/states/test_pecl.py": [
          "File: tests/pytests/unit/states/test_pecl.py -> tests/pytests/unit/states/test_pecl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pip.py||tests/pytests/unit/states/test_pip.py": [
          "File: tests/pytests/unit/states/test_pip.py -> tests/pytests/unit/states/test_pip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pkg.py||tests/pytests/unit/states/test_pkg.py": [
          "File: tests/pytests/unit/states/test_pkg.py -> tests/pytests/unit/states/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pkgng.py||tests/pytests/unit/states/test_pkgng.py": [
          "File: tests/pytests/unit/states/test_pkgng.py -> tests/pytests/unit/states/test_pkgng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pkgrepo.py||tests/pytests/unit/states/test_pkgrepo.py": [
          "File: tests/pytests/unit/states/test_pkgrepo.py -> tests/pytests/unit/states/test_pkgrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_portage_config.py||tests/pytests/unit/states/test_portage_config.py": [
          "File: tests/pytests/unit/states/test_portage_config.py -> tests/pytests/unit/states/test_portage_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ports.py||tests/pytests/unit/states/test_ports.py": [
          "File: tests/pytests/unit/states/test_ports.py -> tests/pytests/unit/states/test_ports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_powerpath.py||tests/pytests/unit/states/test_powerpath.py": [
          "File: tests/pytests/unit/states/test_powerpath.py -> tests/pytests/unit/states/test_powerpath.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_process.py||tests/pytests/unit/states/test_process.py": [
          "File: tests/pytests/unit/states/test_process.py -> tests/pytests/unit/states/test_process.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_proxy.py||tests/pytests/unit/states/test_proxy.py": [
          "File: tests/pytests/unit/states/test_proxy.py -> tests/pytests/unit/states/test_proxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pyenv.py||tests/pytests/unit/states/test_pyenv.py": [
          "File: tests/pytests/unit/states/test_pyenv.py -> tests/pytests/unit/states/test_pyenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_pyrax_queues.py||tests/pytests/unit/states/test_pyrax_queues.py": [
          "File: tests/pytests/unit/states/test_pyrax_queues.py -> tests/pytests/unit/states/test_pyrax_queues.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_quota.py||tests/pytests/unit/states/test_quota.py": [
          "File: tests/pytests/unit/states/test_quota.py -> tests/pytests/unit/states/test_quota.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_rbenv.py||tests/pytests/unit/states/test_rbenv.py": [
          "File: tests/pytests/unit/states/test_rbenv.py -> tests/pytests/unit/states/test_rbenv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_rdp.py||tests/pytests/unit/states/test_rdp.py": [
          "File: tests/pytests/unit/states/test_rdp.py -> tests/pytests/unit/states/test_rdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_redismod.py||tests/pytests/unit/states/test_redismod.py": [
          "File: tests/pytests/unit/states/test_redismod.py -> tests/pytests/unit/states/test_redismod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_restconf.py||tests/pytests/unit/states/test_restconf.py": [
          "File: tests/pytests/unit/states/test_restconf.py -> tests/pytests/unit/states/test_restconf.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_rsync.py||tests/pytests/unit/states/test_rsync.py": [
          "File: tests/pytests/unit/states/test_rsync.py -> tests/pytests/unit/states/test_rsync.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_rvm.py||tests/pytests/unit/states/test_rvm.py": [
          "File: tests/pytests/unit/states/test_rvm.py -> tests/pytests/unit/states/test_rvm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_saltutil.py||tests/pytests/unit/states/test_saltutil.py": [
          "File: tests/pytests/unit/states/test_saltutil.py -> tests/pytests/unit/states/test_saltutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_schedule.py||tests/pytests/unit/states/test_schedule.py": [
          "File: tests/pytests/unit/states/test_schedule.py -> tests/pytests/unit/states/test_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_selinux.py||tests/pytests/unit/states/test_selinux.py": [
          "File: tests/pytests/unit/states/test_selinux.py -> tests/pytests/unit/states/test_selinux.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_serverdensity_device.py||tests/pytests/unit/states/test_serverdensity_device.py": [
          "File: tests/pytests/unit/states/test_serverdensity_device.py -> tests/pytests/unit/states/test_serverdensity_device.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_service.py||tests/pytests/unit/states/test_service.py": [
          "File: tests/pytests/unit/states/test_service.py -> tests/pytests/unit/states/test_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_slack.py||tests/pytests/unit/states/test_slack.py": [
          "File: tests/pytests/unit/states/test_slack.py -> tests/pytests/unit/states/test_slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_smartos.py||tests/pytests/unit/states/test_smartos.py": [
          "File: tests/pytests/unit/states/test_smartos.py -> tests/pytests/unit/states/test_smartos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_smtp.py||tests/pytests/unit/states/test_smtp.py": [
          "File: tests/pytests/unit/states/test_smtp.py -> tests/pytests/unit/states/test_smtp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_splunk_search.py||tests/pytests/unit/states/test_splunk_search.py": [
          "File: tests/pytests/unit/states/test_splunk_search.py -> tests/pytests/unit/states/test_splunk_search.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ssh_auth.py||tests/pytests/unit/states/test_ssh_auth.py": [
          "File: tests/pytests/unit/states/test_ssh_auth.py -> tests/pytests/unit/states/test_ssh_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_ssh_known_hosts.py||tests/pytests/unit/states/test_ssh_known_hosts.py": [
          "File: tests/pytests/unit/states/test_ssh_known_hosts.py -> tests/pytests/unit/states/test_ssh_known_hosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_status.py||tests/pytests/unit/states/test_status.py": [
          "File: tests/pytests/unit/states/test_status.py -> tests/pytests/unit/states/test_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_supervisord.py||tests/pytests/unit/states/test_supervisord.py": [
          "File: tests/pytests/unit/states/test_supervisord.py -> tests/pytests/unit/states/test_supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_svn.py||tests/pytests/unit/states/test_svn.py": [
          "File: tests/pytests/unit/states/test_svn.py -> tests/pytests/unit/states/test_svn.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_sysctl.py||tests/pytests/unit/states/test_sysctl.py": [
          "File: tests/pytests/unit/states/test_sysctl.py -> tests/pytests/unit/states/test_sysctl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_sysfs.py||tests/pytests/unit/states/test_sysfs.py": [
          "File: tests/pytests/unit/states/test_sysfs.py -> tests/pytests/unit/states/test_sysfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_sysrc.py||tests/pytests/unit/states/test_sysrc.py": [
          "File: tests/pytests/unit/states/test_sysrc.py -> tests/pytests/unit/states/test_sysrc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_test.py||tests/pytests/unit/states/test_test.py": [
          "File: tests/pytests/unit/states/test_test.py -> tests/pytests/unit/states/test_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_timezone.py||tests/pytests/unit/states/test_timezone.py": [
          "File: tests/pytests/unit/states/test_timezone.py -> tests/pytests/unit/states/test_timezone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_tomcat.py||tests/pytests/unit/states/test_tomcat.py": [
          "File: tests/pytests/unit/states/test_tomcat.py -> tests/pytests/unit/states/test_tomcat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_user.py||tests/pytests/unit/states/test_user.py": [
          "File: tests/pytests/unit/states/test_user.py -> tests/pytests/unit/states/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_vault.py||tests/pytests/unit/states/test_vault.py": [
          "File: tests/pytests/unit/states/test_vault.py -> tests/pytests/unit/states/test_vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_vbox_guest.py||tests/pytests/unit/states/test_vbox_guest.py": [
          "File: tests/pytests/unit/states/test_vbox_guest.py -> tests/pytests/unit/states/test_vbox_guest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_virtualenv_mod.py||tests/pytests/unit/states/test_virtualenv_mod.py": [
          "File: tests/pytests/unit/states/test_virtualenv_mod.py -> tests/pytests/unit/states/test_virtualenv_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_webutil.py||tests/pytests/unit/states/test_webutil.py": [
          "File: tests/pytests/unit/states/test_webutil.py -> tests/pytests/unit/states/test_webutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_appx.py||tests/pytests/unit/states/test_win_appx.py": [
          "File: tests/pytests/unit/states/test_win_appx.py -> tests/pytests/unit/states/test_win_appx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_certutil.py||tests/pytests/unit/states/test_win_certutil.py": [
          "File: tests/pytests/unit/states/test_win_certutil.py -> tests/pytests/unit/states/test_win_certutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_dism.py||tests/pytests/unit/states/test_win_dism.py": [
          "File: tests/pytests/unit/states/test_win_dism.py -> tests/pytests/unit/states/test_win_dism.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_dns_client.py||tests/pytests/unit/states/test_win_dns_client.py": [
          "File: tests/pytests/unit/states/test_win_dns_client.py -> tests/pytests/unit/states/test_win_dns_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_iis.py||tests/pytests/unit/states/test_win_iis.py": [
          "File: tests/pytests/unit/states/test_win_iis.py -> tests/pytests/unit/states/test_win_iis.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_lgpo.py||tests/pytests/unit/states/test_win_lgpo.py": [
          "File: tests/pytests/unit/states/test_win_lgpo.py -> tests/pytests/unit/states/test_win_lgpo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_lgpo_reg.py||tests/pytests/unit/states/test_win_lgpo_reg.py": [
          "File: tests/pytests/unit/states/test_win_lgpo_reg.py -> tests/pytests/unit/states/test_win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_license.py||tests/pytests/unit/states/test_win_license.py": [
          "File: tests/pytests/unit/states/test_win_license.py -> tests/pytests/unit/states/test_win_license.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_network.py||tests/pytests/unit/states/test_win_network.py": [
          "File: tests/pytests/unit/states/test_win_network.py -> tests/pytests/unit/states/test_win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_path.py||tests/pytests/unit/states/test_win_path.py": [
          "File: tests/pytests/unit/states/test_win_path.py -> tests/pytests/unit/states/test_win_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_pki.py||tests/pytests/unit/states/test_win_pki.py": [
          "File: tests/pytests/unit/states/test_win_pki.py -> tests/pytests/unit/states/test_win_pki.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_powercfg.py||tests/pytests/unit/states/test_win_powercfg.py": [
          "File: tests/pytests/unit/states/test_win_powercfg.py -> tests/pytests/unit/states/test_win_powercfg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_servermanager.py||tests/pytests/unit/states/test_win_servermanager.py": [
          "File: tests/pytests/unit/states/test_win_servermanager.py -> tests/pytests/unit/states/test_win_servermanager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_snmp.py||tests/pytests/unit/states/test_win_snmp.py": [
          "File: tests/pytests/unit/states/test_win_snmp.py -> tests/pytests/unit/states/test_win_snmp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_system.py||tests/pytests/unit/states/test_win_system.py": [
          "File: tests/pytests/unit/states/test_win_system.py -> tests/pytests/unit/states/test_win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_wua.py||tests/pytests/unit/states/test_win_wua.py": [
          "File: tests/pytests/unit/states/test_win_wua.py -> tests/pytests/unit/states/test_win_wua.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_win_wusa.py||tests/pytests/unit/states/test_win_wusa.py": [
          "File: tests/pytests/unit/states/test_win_wusa.py -> tests/pytests/unit/states/test_win_wusa.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_winrepo.py||tests/pytests/unit/states/test_winrepo.py": [
          "File: tests/pytests/unit/states/test_winrepo.py -> tests/pytests/unit/states/test_winrepo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_xml.py||tests/pytests/unit/states/test_xml.py": [
          "File: tests/pytests/unit/states/test_xml.py -> tests/pytests/unit/states/test_xml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_xmpp.py||tests/pytests/unit/states/test_xmpp.py": [
          "File: tests/pytests/unit/states/test_xmpp.py -> tests/pytests/unit/states/test_xmpp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_zfs.py||tests/pytests/unit/states/test_zfs.py": [
          "File: tests/pytests/unit/states/test_zfs.py -> tests/pytests/unit/states/test_zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_zk_concurrency.py||tests/pytests/unit/states/test_zk_concurrency.py": [
          "File: tests/pytests/unit/states/test_zk_concurrency.py -> tests/pytests/unit/states/test_zk_concurrency.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/test_zpool.py||tests/pytests/unit/states/test_zpool.py": [
          "File: tests/pytests/unit/states/test_zpool.py -> tests/pytests/unit/states/test_zpool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/virt/conftest.py||tests/pytests/unit/states/virt/conftest.py": [
          "File: tests/pytests/unit/states/virt/conftest.py -> tests/pytests/unit/states/virt/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/virt/helpers.py||tests/pytests/unit/states/virt/helpers.py": [
          "File: tests/pytests/unit/states/virt/helpers.py -> tests/pytests/unit/states/virt/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/virt/test_domain.py||tests/pytests/unit/states/virt/test_domain.py": [
          "File: tests/pytests/unit/states/virt/test_domain.py -> tests/pytests/unit/states/virt/test_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/virt/test_network.py||tests/pytests/unit/states/virt/test_network.py": [
          "File: tests/pytests/unit/states/virt/test_network.py -> tests/pytests/unit/states/virt/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/zabbix/test_action.py||tests/pytests/unit/states/zabbix/test_action.py": [
          "File: tests/pytests/unit/states/zabbix/test_action.py -> tests/pytests/unit/states/zabbix/test_action.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/zabbix/test_host.py||tests/pytests/unit/states/zabbix/test_host.py": [
          "File: tests/pytests/unit/states/zabbix/test_host.py -> tests/pytests/unit/states/zabbix/test_host.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/zabbix/test_template.py||tests/pytests/unit/states/zabbix/test_template.py": [
          "File: tests/pytests/unit/states/zabbix/test_template.py -> tests/pytests/unit/states/zabbix/test_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/states/zabbix/test_valuemap.py||tests/pytests/unit/states/zabbix/test_valuemap.py": [
          "File: tests/pytests/unit/states/zabbix/test_valuemap.py -> tests/pytests/unit/states/zabbix/test_valuemap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_acl.py||tests/pytests/unit/test_acl.py": [
          "File: tests/pytests/unit/test_acl.py -> tests/pytests/unit/test_acl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_auth.py||tests/pytests/unit/test_auth.py": [
          "File: tests/pytests/unit/test_auth.py -> tests/pytests/unit/test_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_beacons.py||tests/pytests/unit/test_beacons.py": [
          "File: tests/pytests/unit/test_beacons.py -> tests/pytests/unit/test_beacons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_client.py||tests/pytests/unit/test_client.py": [
          "File: tests/pytests/unit/test_client.py -> tests/pytests/unit/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_config.py||tests/pytests/unit/test_config.py": [
          "File: tests/pytests/unit/test_config.py -> tests/pytests/unit/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_crypt.py||tests/pytests/unit/test_crypt.py": [
          "File: tests/pytests/unit/test_crypt.py -> tests/pytests/unit/test_crypt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_defaults.py||tests/pytests/unit/test_defaults.py": [
          "File: tests/pytests/unit/test_defaults.py -> tests/pytests/unit/test_defaults.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_log.py||tests/pytests/unit/test_log.py": [
          "File: tests/pytests/unit/test_log.py -> tests/pytests/unit/test_log.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_master.py||tests/pytests/unit/test_master.py": [
          "File: tests/pytests/unit/test_master.py -> tests/pytests/unit/test_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_minion.py||tests/pytests/unit/test_minion.py": [
          "File: tests/pytests/unit/test_minion.py -> tests/pytests/unit/test_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_payload.py||tests/pytests/unit/test_payload.py": [
          "File: tests/pytests/unit/test_payload.py -> tests/pytests/unit/test_payload.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_pytest_pass_fail.py||tests/pytests/unit/test_pytest_pass_fail.py": [
          "File: tests/pytests/unit/test_pytest_pass_fail.py -> tests/pytests/unit/test_pytest_pass_fail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_scripts.py||tests/pytests/unit/test_scripts.py": [
          "File: tests/pytests/unit/test_scripts.py -> tests/pytests/unit/test_scripts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_syspaths.py||tests/pytests/unit/test_syspaths.py": [
          "File: tests/pytests/unit/test_syspaths.py -> tests/pytests/unit/test_syspaths.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_template.py||tests/pytests/unit/test_template.py": [
          "File: tests/pytests/unit/test_template.py -> tests/pytests/unit/test_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/test_version.py||tests/pytests/unit/test_version.py": [
          "File: tests/pytests/unit/test_version.py -> tests/pytests/unit/test_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/tokens/test_localfs.py||tests/pytests/unit/tokens/test_localfs.py": [
          "File: tests/pytests/unit/tokens/test_localfs.py -> tests/pytests/unit/tokens/test_localfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/tops/test_ext_nodes.py||tests/pytests/unit/tops/test_ext_nodes.py": [
          "File: tests/pytests/unit/tops/test_ext_nodes.py -> tests/pytests/unit/tops/test_ext_nodes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_base.py||tests/pytests/unit/transport/test_base.py": [
          "File: tests/pytests/unit/transport/test_base.py -> tests/pytests/unit/transport/test_base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_ipc.py||tests/pytests/unit/transport/test_ipc.py": [
          "File: tests/pytests/unit/transport/test_ipc.py -> tests/pytests/unit/transport/test_ipc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_publish_client.py||tests/pytests/unit/transport/test_publish_client.py": [
          "File: tests/pytests/unit/transport/test_publish_client.py -> tests/pytests/unit/transport/test_publish_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_tcp.py||tests/pytests/unit/transport/test_tcp.py": [
          "File: tests/pytests/unit/transport/test_tcp.py -> tests/pytests/unit/transport/test_tcp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/transport/test_zeromq.py||tests/pytests/unit/transport/test_zeromq.py": [
          "File: tests/pytests/unit/transport/test_zeromq.py -> tests/pytests/unit/transport/test_zeromq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/event/test_event.py||tests/pytests/unit/utils/event/test_event.py": [
          "File: tests/pytests/unit/utils/event/test_event.py -> tests/pytests/unit/utils/event/test_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/event/test_event_return.py||tests/pytests/unit/utils/event/test_event_return.py": [
          "File: tests/pytests/unit/utils/event/test_event_return.py -> tests/pytests/unit/utils/event/test_event_return.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjconftest.py||tests/pytests/unit/utils/jinja/conftest.py": [
          "File: tests/pytests/unit/utils/jinjconftest.py -> tests/pytests/unit/utils/jinja/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_custom_extensions.py||tests/pytests/unit/utils/jinja/test_custom_extensions.py": [
          "File: tests/pytests/unit/utils/jinjtest_custom_extensions.py -> tests/pytests/unit/utils/jinja/test_custom_extensions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_dot_notation_looup.py||tests/pytests/unit/utils/jinja/test_dot_notation_looup.py": [
          "File: tests/pytests/unit/utils/jinjtest_dot_notation_looup.py -> tests/pytests/unit/utils/jinja/test_dot_notation_looup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_get_template.py||tests/pytests/unit/utils/jinja/test_get_template.py": [
          "File: tests/pytests/unit/utils/jinjtest_get_template.py -> tests/pytests/unit/utils/jinja/test_get_template.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_jinja.py||tests/pytests/unit/utils/jinja/test_jinja.py": [
          "File: tests/pytests/unit/utils/jinjtest_jinja.py -> tests/pytests/unit/utils/jinja/test_jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_jinja_default_options.py||tests/pytests/unit/utils/jinja/test_jinja_default_options.py": [
          "File: tests/pytests/unit/utils/jinjtest_jinja_default_options.py -> tests/pytests/unit/utils/jinja/test_jinja_default_options.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/jinjtest_salt_cache_loader.py||tests/pytests/unit/utils/jinja/test_salt_cache_loader.py": [
          "File: tests/pytests/unit/utils/jinjtest_salt_cache_loader.py -> tests/pytests/unit/utils/jinja/test_salt_cache_loader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/parsers/test_daemon_mixin.py||tests/pytests/unit/utils/parsers/test_daemon_mixin.py": [
          "File: tests/pytests/unit/utils/parsers/test_daemon_mixin.py -> tests/pytests/unit/utils/parsers/test_daemon_mixin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/parsers/test_log_parsers.py||tests/pytests/unit/utils/parsers/test_log_parsers.py": [
          "File: tests/pytests/unit/utils/parsers/test_log_parsers.py -> tests/pytests/unit/utils/parsers/test_log_parsers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/parsers/test_saltfile_mixin.py||tests/pytests/unit/utils/parsers/test_saltfile_mixin.py": [
          "File: tests/pytests/unit/utils/parsers/test_saltfile_mixin.py -> tests/pytests/unit/utils/parsers/test_saltfile_mixin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/conftest.py||tests/pytests/unit/utils/scheduler/conftest.py": [
          "File: tests/pytests/unit/utils/scheduler/conftest.py -> tests/pytests/unit/utils/scheduler/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_error.py||tests/pytests/unit/utils/scheduler/test_error.py": [
          "File: tests/pytests/unit/utils/scheduler/test_error.py -> tests/pytests/unit/utils/scheduler/test_error.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_eval.py||tests/pytests/unit/utils/scheduler/test_eval.py": [
          "File: tests/pytests/unit/utils/scheduler/test_eval.py -> tests/pytests/unit/utils/scheduler/test_eval.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_helpers.py||tests/pytests/unit/utils/scheduler/test_helpers.py": [
          "File: tests/pytests/unit/utils/scheduler/test_helpers.py -> tests/pytests/unit/utils/scheduler/test_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_maxrunning.py||tests/pytests/unit/utils/scheduler/test_maxrunning.py": [
          "File: tests/pytests/unit/utils/scheduler/test_maxrunning.py -> tests/pytests/unit/utils/scheduler/test_maxrunning.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_postpone.py||tests/pytests/unit/utils/scheduler/test_postpone.py": [
          "File: tests/pytests/unit/utils/scheduler/test_postpone.py -> tests/pytests/unit/utils/scheduler/test_postpone.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_run_job.py||tests/pytests/unit/utils/scheduler/test_run_job.py": [
          "File: tests/pytests/unit/utils/scheduler/test_run_job.py -> tests/pytests/unit/utils/scheduler/test_run_job.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_schedule.py||tests/pytests/unit/utils/scheduler/test_schedule.py": [
          "File: tests/pytests/unit/utils/scheduler/test_schedule.py -> tests/pytests/unit/utils/scheduler/test_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/scheduler/test_skip.py||tests/pytests/unit/utils/scheduler/test_skip.py": [
          "File: tests/pytests/unit/utils/scheduler/test_skip.py -> tests/pytests/unit/utils/scheduler/test_skip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/conftest.py||tests/pytests/unit/utils/templates/conftest.py": [
          "File: tests/pytests/unit/utils/templates/conftest.py -> tests/pytests/unit/utils/templates/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_cheetah.py||tests/pytests/unit/utils/templates/test_cheetah.py": [
          "File: tests/pytests/unit/utils/templates/test_cheetah.py -> tests/pytests/unit/utils/templates/test_cheetah.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_genshi.py||tests/pytests/unit/utils/templates/test_genshi.py": [
          "File: tests/pytests/unit/utils/templates/test_genshi.py -> tests/pytests/unit/utils/templates/test_genshi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_jinja.py||tests/pytests/unit/utils/templates/test_jinja.py": [
          "File: tests/pytests/unit/utils/templates/test_jinja.py -> tests/pytests/unit/utils/templates/test_jinja.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_mako.py||tests/pytests/unit/utils/templates/test_mako.py": [
          "File: tests/pytests/unit/utils/templates/test_mako.py -> tests/pytests/unit/utils/templates/test_mako.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_wempy.py||tests/pytests/unit/utils/templates/test_wempy.py": [
          "File: tests/pytests/unit/utils/templates/test_wempy.py -> tests/pytests/unit/utils/templates/test_wempy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py||tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py": [
          "File: tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py -> tests/pytests/unit/utils/templates/test_wrap_tmpl_func.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_args.py||tests/pytests/unit/utils/test_args.py": [
          "File: tests/pytests/unit/utils/test_args.py -> tests/pytests/unit/utils/test_args.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_aws.py||tests/pytests/unit/utils/test_aws.py": [
          "File: tests/pytests/unit/utils/test_aws.py -> tests/pytests/unit/utils/test_aws.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_beacons.py||tests/pytests/unit/utils/test_beacons.py": [
          "File: tests/pytests/unit/utils/test_beacons.py -> tests/pytests/unit/utils/test_beacons.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_cache.py||tests/pytests/unit/utils/test_cache.py": [
          "File: tests/pytests/unit/utils/test_cache.py -> tests/pytests/unit/utils/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_cloud.py||tests/pytests/unit/utils/test_cloud.py": [
          "File: tests/pytests/unit/utils/test_cloud.py -> tests/pytests/unit/utils/test_cloud.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_compat.py||tests/pytests/unit/utils/test_compat.py": [
          "File: tests/pytests/unit/utils/test_compat.py -> tests/pytests/unit/utils/test_compat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_crypt.py||tests/pytests/unit/utils/test_crypt.py": [
          "File: tests/pytests/unit/utils/test_crypt.py -> tests/pytests/unit/utils/test_crypt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_data.py||tests/pytests/unit/utils/test_data.py": [
          "File: tests/pytests/unit/utils/test_data.py -> tests/pytests/unit/utils/test_data.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_dictdiffer.py||tests/pytests/unit/utils/test_dictdiffer.py": [
          "File: tests/pytests/unit/utils/test_dictdiffer.py -> tests/pytests/unit/utils/test_dictdiffer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_etcd_util.py||tests/pytests/unit/utils/test_etcd_util.py": [
          "File: tests/pytests/unit/utils/test_etcd_util.py -> tests/pytests/unit/utils/test_etcd_util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_files.py||tests/pytests/unit/utils/test_files.py": [
          "File: tests/pytests/unit/utils/test_files.py -> tests/pytests/unit/utils/test_files.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_gitfs.py||tests/pytests/unit/utils/test_gitfs.py": [
          "File: tests/pytests/unit/utils/test_gitfs.py -> tests/pytests/unit/utils/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_http.py||tests/pytests/unit/utils/test_http.py": [
          "File: tests/pytests/unit/utils/test_http.py -> tests/pytests/unit/utils/test_http.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_listdiffer.py||tests/pytests/unit/utils/test_listdiffer.py": [
          "File: tests/pytests/unit/utils/test_listdiffer.py -> tests/pytests/unit/utils/test_listdiffer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_mako.py||tests/pytests/unit/utils/test_mako.py": [
          "File: tests/pytests/unit/utils/test_mako.py -> tests/pytests/unit/utils/test_mako.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_minions.py||tests/pytests/unit/utils/test_minions.py": [
          "File: tests/pytests/unit/utils/test_minions.py -> tests/pytests/unit/utils/test_minions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_msgpack.py||tests/pytests/unit/utils/test_msgpack.py": [
          "File: tests/pytests/unit/utils/test_msgpack.py -> tests/pytests/unit/utils/test_msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_nacl.py||tests/pytests/unit/utils/test_nacl.py": [
          "File: tests/pytests/unit/utils/test_nacl.py -> tests/pytests/unit/utils/test_nacl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_network.py||tests/pytests/unit/utils/test_network.py": [
          "File: tests/pytests/unit/utils/test_network.py -> tests/pytests/unit/utils/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_package.py||tests/pytests/unit/utils/test_package.py": [
          "File: tests/pytests/unit/utils/test_package.py -> tests/pytests/unit/utils/test_package.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_pkg.py||tests/pytests/unit/utils/test_pkg.py": [
          "File: tests/pytests/unit/utils/test_pkg.py -> tests/pytests/unit/utils/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_platform.py||tests/pytests/unit/utils/test_platform.py": [
          "File: tests/pytests/unit/utils/test_platform.py -> tests/pytests/unit/utils/test_platform.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_pycrypto.py||tests/pytests/unit/utils/test_pycrypto.py": [
          "File: tests/pytests/unit/utils/test_pycrypto.py -> tests/pytests/unit/utils/test_pycrypto.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_pyobjects.py||tests/pytests/unit/utils/test_pyobjects.py": [
          "File: tests/pytests/unit/utils/test_pyobjects.py -> tests/pytests/unit/utils/test_pyobjects.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_reactor.py||tests/pytests/unit/utils/test_reactor.py": [
          "File: tests/pytests/unit/utils/test_reactor.py -> tests/pytests/unit/utils/test_reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_rsax931.py||tests/pytests/unit/utils/test_rsax931.py": [
          "File: tests/pytests/unit/utils/test_rsax931.py -> tests/pytests/unit/utils/test_rsax931.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_schedule.py||tests/pytests/unit/utils/test_schedule.py": [
          "File: tests/pytests/unit/utils/test_schedule.py -> tests/pytests/unit/utils/test_schedule.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_slack.py||tests/pytests/unit/utils/test_slack.py": [
          "File: tests/pytests/unit/utils/test_slack.py -> tests/pytests/unit/utils/test_slack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_stringutils.py||tests/pytests/unit/utils/test_stringutils.py": [
          "File: tests/pytests/unit/utils/test_stringutils.py -> tests/pytests/unit/utils/test_stringutils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_thin.py||tests/pytests/unit/utils/test_thin.py": [
          "File: tests/pytests/unit/utils/test_thin.py -> tests/pytests/unit/utils/test_thin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_user.py||tests/pytests/unit/utils/test_user.py": [
          "File: tests/pytests/unit/utils/test_user.py -> tests/pytests/unit/utils/test_user.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_versions.py||tests/pytests/unit/utils/test_versions.py": [
          "File: tests/pytests/unit/utils/test_versions.py -> tests/pytests/unit/utils/test_versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_vt.py||tests/pytests/unit/utils/test_vt.py": [
          "File: tests/pytests/unit/utils/test_vt.py -> tests/pytests/unit/utils/test_vt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_functions.py||tests/pytests/unit/utils/test_win_functions.py": [
          "File: tests/pytests/unit/utils/test_win_functions.py -> tests/pytests/unit/utils/test_win_functions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_lgpo_reg.py||tests/pytests/unit/utils/test_win_lgpo_reg.py": [
          "File: tests/pytests/unit/utils/test_win_lgpo_reg.py -> tests/pytests/unit/utils/test_win_lgpo_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_network.py||tests/pytests/unit/utils/test_win_network.py": [
          "File: tests/pytests/unit/utils/test_win_network.py -> tests/pytests/unit/utils/test_win_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_pwsh.py||tests/pytests/unit/utils/test_win_pwsh.py": [
          "File: tests/pytests/unit/utils/test_win_pwsh.py -> tests/pytests/unit/utils/test_win_pwsh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_reg.py||tests/pytests/unit/utils/test_win_reg.py": [
          "File: tests/pytests/unit/utils/test_win_reg.py -> tests/pytests/unit/utils/test_win_reg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_runas.py||tests/pytests/unit/utils/test_win_runas.py": [
          "File: tests/pytests/unit/utils/test_win_runas.py -> tests/pytests/unit/utils/test_win_runas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_win_update.py||tests/pytests/unit/utils/test_win_update.py": [
          "File: tests/pytests/unit/utils/test_win_update.py -> tests/pytests/unit/utils/test_win_update.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_x509.py||tests/pytests/unit/utils/test_x509.py": [
          "File: tests/pytests/unit/utils/test_x509.py -> tests/pytests/unit/utils/test_x509.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/test_xmlutil.py||tests/pytests/unit/utils/test_xmlutil.py": [
          "File: tests/pytests/unit/utils/test_xmlutil.py -> tests/pytests/unit/utils/test_xmlutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/conftest.py||tests/pytests/unit/utils/vault/conftest.py": [
          "File: tests/pytests/unit/utils/vault/conftest.py -> tests/pytests/unit/utils/vault/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_api.py||tests/pytests/unit/utils/vault/test_api.py": [
          "File: tests/pytests/unit/utils/vault/test_api.py -> tests/pytests/unit/utils/vault/test_api.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_auth.py||tests/pytests/unit/utils/vault/test_auth.py": [
          "File: tests/pytests/unit/utils/vault/test_auth.py -> tests/pytests/unit/utils/vault/test_auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_cache.py||tests/pytests/unit/utils/vault/test_cache.py": [
          "File: tests/pytests/unit/utils/vault/test_cache.py -> tests/pytests/unit/utils/vault/test_cache.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_client.py||tests/pytests/unit/utils/vault/test_client.py": [
          "File: tests/pytests/unit/utils/vault/test_client.py -> tests/pytests/unit/utils/vault/test_client.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_factory.py||tests/pytests/unit/utils/vault/test_factory.py": [
          "File: tests/pytests/unit/utils/vault/test_factory.py -> tests/pytests/unit/utils/vault/test_factory.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_helpers.py||tests/pytests/unit/utils/vault/test_helpers.py": [
          "File: tests/pytests/unit/utils/vault/test_helpers.py -> tests/pytests/unit/utils/vault/test_helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_kv.py||tests/pytests/unit/utils/vault/test_kv.py": [
          "File: tests/pytests/unit/utils/vault/test_kv.py -> tests/pytests/unit/utils/vault/test_kv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/vault/test_leases.py||tests/pytests/unit/utils/vault/test_leases.py": [
          "File: tests/pytests/unit/utils/vault/test_leases.py -> tests/pytests/unit/utils/vault/test_leases.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/verify/test_clean_path.py||tests/pytests/unit/utils/verify/test_clean_path.py": [
          "File: tests/pytests/unit/utils/verify/test_clean_path.py -> tests/pytests/unit/utils/verify/test_clean_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/verify/test_clean_path_link.py||tests/pytests/unit/utils/verify/test_clean_path_link.py": [
          "File: tests/pytests/unit/utils/verify/test_clean_path_link.py -> tests/pytests/unit/utils/verify/test_clean_path_link.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/verify/test_verify.py||tests/pytests/unit/utils/verify/test_verify.py": [
          "File: tests/pytests/unit/utils/verify/test_verify.py -> tests/pytests/unit/utils/verify/test_verify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/verify/test_verify_logs.py||tests/pytests/unit/utils/verify/test_verify_logs.py": [
          "File: tests/pytests/unit/utils/verify/test_verify_logs.py -> tests/pytests/unit/utils/verify/test_verify_logs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/win_lgpo/test_auditpol.py||tests/pytests/unit/utils/win_lgpo/test_auditpol.py": [
          "File: tests/pytests/unit/utils/win_lgpo/test_auditpol.py -> tests/pytests/unit/utils/win_lgpo/test_auditpol.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/utils/win_lgpo/test_netsh.py||tests/pytests/unit/utils/win_lgpo/test_netsh.py": [
          "File: tests/pytests/unit/utils/win_lgpo/test_netsh.py -> tests/pytests/unit/utils/win_lgpo/test_netsh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/pytests/unit/wheel/test_file_roots.py||tests/pytests/unit/wheel/test_file_roots.py": [
          "File: tests/pytests/unit/wheel/test_file_roots.py -> tests/pytests/unit/wheel/test_file_roots.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/runtests.py||tests/runtests.py": [
          "File: tests/runtests.py -> tests/runtests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/salt-tcpdump.py||tests/salt-tcpdump.py": [
          "File: tests/salt-tcpdump.py -> tests/salt-tcpdump.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/saltsh.py||tests/saltsh.py": [
          "File: tests/saltsh.py -> tests/saltsh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/case.py||tests/support/case.py": [
          "File: tests/support/case.py -> tests/support/case.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/cli_scripts.py||tests/support/cli_scripts.py": [
          "File: tests/support/cli_scripts.py -> tests/support/cli_scripts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/copyartifacts.py||tests/support/copyartifacts.py": [
          "File: tests/support/copyartifacts.py -> tests/support/copyartifacts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/events.py||tests/support/events.py": [
          "File: tests/support/events.py -> tests/support/events.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/ext/console.py||tests/support/ext/console.py": [
          "File: tests/support/ext/console.py -> tests/support/ext/console.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/generate-names-file-from-failed-test-reports.py||tests/support/generate-names-file-from-failed-test-reports.py": [
          "File: tests/support/generate-names-file-from-failed-test-reports.py -> tests/support/generate-names-file-from-failed-test-reports.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/gitfs.py||tests/support/gitfs.py": [
          "File: tests/support/gitfs.py -> tests/support/gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/helpers.py||tests/support/helpers.py": [
          "File: tests/support/helpers.py -> tests/support/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/kernelpkg.py||tests/support/kernelpkg.py": [
          "File: tests/support/kernelpkg.py -> tests/support/kernelpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/mixins.py||tests/support/mixins.py": [
          "File: tests/support/mixins.py -> tests/support/mixins.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/mock.py||tests/support/mock.py": [
          "File: tests/support/mock.py -> tests/support/mock.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/napalm.py||tests/support/napalm.py": [
          "File: tests/support/napalm.py -> tests/support/napalm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/netapi.py||tests/support/netapi.py": [
          "File: tests/support/netapi.py -> tests/support/netapi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/paths.py||tests/support/paths.py": [
          "File: tests/support/paths.py -> tests/support/paths.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pkg.py||tests/support/pkg.py": [
          "File: tests/support/pkg.py -> tests/support/pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/etcd.py||tests/support/pytest/etcd.py": [
          "File: tests/support/pytest/etcd.py -> tests/support/pytest/etcd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/formulas.py||tests/support/pytest/formulas.py": [
          "File: tests/support/pytest/formulas.py -> tests/support/pytest/formulas.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/helpers.py||tests/support/pytest/helpers.py": [
          "File: tests/support/pytest/helpers.py -> tests/support/pytest/helpers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/loader.py||tests/support/pytest/loader.py": [
          "File: tests/support/pytest/loader.py -> tests/support/pytest/loader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/mysql.py||tests/support/pytest/mysql.py": [
          "File: tests/support/pytest/mysql.py -> tests/support/pytest/mysql.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/transport.py||tests/support/pytest/transport.py": [
          "File: tests/support/pytest/transport.py -> tests/support/pytest/transport.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/pytest/vault.py||tests/support/pytest/vault.py": [
          "File: tests/support/pytest/vault.py -> tests/support/pytest/vault.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/runtests.py||tests/support/runtests.py": [
          "File: tests/support/runtests.py -> tests/support/runtests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/sminion.py||tests/support/sminion.py": [
          "File: tests/support/sminion.py -> tests/support/sminion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/unit.py||tests/support/unit.py": [
          "File: tests/support/unit.py -> tests/support/unit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/virt.py||tests/support/virt.py": [
          "File: tests/support/virt.py -> tests/support/virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/win_installer.py||tests/support/win_installer.py": [
          "File: tests/support/win_installer.py -> tests/support/win_installer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/xmlunit.py||tests/support/xmlunit.py": [
          "File: tests/support/xmlunit.py -> tests/support/xmlunit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/support/zfs.py||tests/support/zfs.py": [
          "File: tests/support/zfs.py -> tests/support/zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/conftest.py||tests/unit/conftest.py": [
          "File: tests/unit/conftest.py -> tests/unit/conftest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/ext/test_ipaddress.py||tests/unit/ext/test_ipaddress.py": [
          "File: tests/unit/ext/test_ipaddress.py -> tests/unit/ext/test_ipaddress.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/inspectlib/test_collector.py||tests/unit/modules/inspectlitest_collector.py": [
          "File: tests/unit/modules/inspectlib/test_collector.py -> tests/unit/modules/inspectlitest_collector.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/inspectlib/test_fsdb.py||tests/unit/modules/inspectlitest_fsdb.py": [
          "File: tests/unit/modules/inspectlib/test_fsdb.py -> tests/unit/modules/inspectlitest_fsdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_config.py||tests/unit/modules/nxos/nxos_config.py": [
          "File: tests/unit/modules/nxos/nxos_config.py -> tests/unit/modules/nxos/nxos_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_grains.py||tests/unit/modules/nxos/nxos_grains.py": [
          "File: tests/unit/modules/nxos/nxos_grains.py -> tests/unit/modules/nxos/nxos_grains.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n36k.py||tests/unit/modules/nxos/nxos_n36k.py": [
          "File: tests/unit/modules/nxos/nxos_n36k.py -> tests/unit/modules/nxos/nxos_n36k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n3k.py||tests/unit/modules/nxos/nxos_n3k.py": [
          "File: tests/unit/modules/nxos/nxos_n3k.py -> tests/unit/modules/nxos/nxos_n3k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n5k.py||tests/unit/modules/nxos/nxos_n5k.py": [
          "File: tests/unit/modules/nxos/nxos_n5k.py -> tests/unit/modules/nxos/nxos_n5k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n7k.py||tests/unit/modules/nxos/nxos_n7k.py": [
          "File: tests/unit/modules/nxos/nxos_n7k.py -> tests/unit/modules/nxos/nxos_n7k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n93k.py||tests/unit/modules/nxos/nxos_n93k.py": [
          "File: tests/unit/modules/nxos/nxos_n93k.py -> tests/unit/modules/nxos/nxos_n93k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n93klxc.py||tests/unit/modules/nxos/nxos_n93klxc.py": [
          "File: tests/unit/modules/nxos/nxos_n93klxc.py -> tests/unit/modules/nxos/nxos_n93klxc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_n95k.py||tests/unit/modules/nxos/nxos_n95k.py": [
          "File: tests/unit/modules/nxos/nxos_n95k.py -> tests/unit/modules/nxos/nxos_n95k.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_platform.py||tests/unit/modules/nxos/nxos_platform.py": [
          "File: tests/unit/modules/nxos/nxos_platform.py -> tests/unit/modules/nxos/nxos_platform.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_show_cmd_output.py||tests/unit/modules/nxos/nxos_show_cmd_output.py": [
          "File: tests/unit/modules/nxos/nxos_show_cmd_output.py -> tests/unit/modules/nxos/nxos_show_cmd_output.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/nxos/nxos_show_run.py||tests/unit/modules/nxos/nxos_show_run.py": [
          "File: tests/unit/modules/nxos/nxos_show_run.py -> tests/unit/modules/nxos/nxos_show_run.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto3_elasticsearch.py||tests/unit/modules/test_boto3_elasticsearch.py": [
          "File: tests/unit/modules/test_boto3_elasticsearch.py -> tests/unit/modules/test_boto3_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto3_route53.py||tests/unit/modules/test_boto3_route53.py": [
          "File: tests/unit/modules/test_boto3_route53.py -> tests/unit/modules/test_boto3_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_apigateway.py||tests/unit/modules/test_boto_apigateway.py": [
          "File: tests/unit/modules/test_boto_apigateway.py -> tests/unit/modules/test_boto_apigateway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_cloudtrail.py||tests/unit/modules/test_boto_cloudtrail.py": [
          "File: tests/unit/modules/test_boto_cloudtrail.py -> tests/unit/modules/test_boto_cloudtrail.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_cloudwatch_event.py||tests/unit/modules/test_boto_cloudwatch_event.py": [
          "File: tests/unit/modules/test_boto_cloudwatch_event.py -> tests/unit/modules/test_boto_cloudwatch_event.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_cognitoidentity.py||tests/unit/modules/test_boto_cognitoidentity.py": [
          "File: tests/unit/modules/test_boto_cognitoidentity.py -> tests/unit/modules/test_boto_cognitoidentity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_elasticsearch_domain.py||tests/unit/modules/test_boto_elasticsearch_domain.py": [
          "File: tests/unit/modules/test_boto_elasticsearch_domain.py -> tests/unit/modules/test_boto_elasticsearch_domain.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_elb.py||tests/unit/modules/test_boto_elb.py": [
          "File: tests/unit/modules/test_boto_elb.py -> tests/unit/modules/test_boto_elb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_iot.py||tests/unit/modules/test_boto_iot.py": [
          "File: tests/unit/modules/test_boto_iot.py -> tests/unit/modules/test_boto_iot.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_lambda.py||tests/unit/modules/test_boto_lambda.py": [
          "File: tests/unit/modules/test_boto_lambda.py -> tests/unit/modules/test_boto_lambda.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_route53.py||tests/unit/modules/test_boto_route53.py": [
          "File: tests/unit/modules/test_boto_route53.py -> tests/unit/modules/test_boto_route53.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_s3_bucket.py||tests/unit/modules/test_boto_s3_bucket.py": [
          "File: tests/unit/modules/test_boto_s3_bucket.py -> tests/unit/modules/test_boto_s3_bucket.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_secgroup.py||tests/unit/modules/test_boto_secgroup.py": [
          "File: tests/unit/modules/test_boto_secgroup.py -> tests/unit/modules/test_boto_secgroup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_boto_vpc.py||tests/unit/modules/test_boto_vpc.py": [
          "File: tests/unit/modules/test_boto_vpc.py -> tests/unit/modules/test_boto_vpc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_bsd_shadow.py||tests/unit/modules/test_bsd_shadow.py": [
          "File: tests/unit/modules/test_bsd_shadow.py -> tests/unit/modules/test_bsd_shadow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_cron.py||tests/unit/modules/test_cron.py": [
          "File: tests/unit/modules/test_cron.py -> tests/unit/modules/test_cron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_elasticsearch.py||tests/unit/modules/test_elasticsearch.py": [
          "File: tests/unit/modules/test_elasticsearch.py -> tests/unit/modules/test_elasticsearch.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_freezer.py||tests/unit/modules/test_freezer.py": [
          "File: tests/unit/modules/test_freezer.py -> tests/unit/modules/test_freezer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_heat.py||tests/unit/modules/test_heat.py": [
          "File: tests/unit/modules/test_heat.py -> tests/unit/modules/test_heat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_hosts.py||tests/unit/modules/test_hosts.py": [
          "File: tests/unit/modules/test_hosts.py -> tests/unit/modules/test_hosts.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_influxdb08mod.py||tests/unit/modules/test_influxdb08mod.py": [
          "File: tests/unit/modules/test_influxdb08mod.py -> tests/unit/modules/test_influxdb08mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_ini_manage.py||tests/unit/modules/test_ini_manage.py": [
          "File: tests/unit/modules/test_ini_manage.py -> tests/unit/modules/test_ini_manage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_jboss7.py||tests/unit/modules/test_jboss7.py": [
          "File: tests/unit/modules/test_jboss7.py -> tests/unit/modules/test_jboss7.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_jboss7_cli.py||tests/unit/modules/test_jboss7_cli.py": [
          "File: tests/unit/modules/test_jboss7_cli.py -> tests/unit/modules/test_jboss7_cli.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_k8s.py||tests/unit/modules/test_k8s.py": [
          "File: tests/unit/modules/test_k8s.py -> tests/unit/modules/test_k8s.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_kapacitor.py||tests/unit/modules/test_kapacitor.py": [
          "File: tests/unit/modules/test_kapacitor.py -> tests/unit/modules/test_kapacitor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_kernelpkg_linux_apt.py||tests/unit/modules/test_kernelpkg_linux_apt.py": [
          "File: tests/unit/modules/test_kernelpkg_linux_apt.py -> tests/unit/modules/test_kernelpkg_linux_apt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_kernelpkg_linux_yum.py||tests/unit/modules/test_kernelpkg_linux_yum.py": [
          "File: tests/unit/modules/test_kernelpkg_linux_yum.py -> tests/unit/modules/test_kernelpkg_linux_yum.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_kubernetesmod.py||tests/unit/modules/test_kubernetesmod.py": [
          "File: tests/unit/modules/test_kubernetesmod.py -> tests/unit/modules/test_kubernetesmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_libcloud_compute.py||tests/unit/modules/test_libcloud_compute.py": [
          "File: tests/unit/modules/test_libcloud_compute.py -> tests/unit/modules/test_libcloud_compute.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_libcloud_dns.py||tests/unit/modules/test_libcloud_dns.py": [
          "File: tests/unit/modules/test_libcloud_dns.py -> tests/unit/modules/test_libcloud_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_libcloud_loadbalancer.py||tests/unit/modules/test_libcloud_loadbalancer.py": [
          "File: tests/unit/modules/test_libcloud_loadbalancer.py -> tests/unit/modules/test_libcloud_loadbalancer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_libcloud_storage.py||tests/unit/modules/test_libcloud_storage.py": [
          "File: tests/unit/modules/test_libcloud_storage.py -> tests/unit/modules/test_libcloud_storage.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_linux_acl.py||tests/unit/modules/test_linux_acl.py": [
          "File: tests/unit/modules/test_linux_acl.py -> tests/unit/modules/test_linux_acl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_localemod.py||tests/unit/modules/test_localemod.py": [
          "File: tests/unit/modules/test_localemod.py -> tests/unit/modules/test_localemod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_memcached.py||tests/unit/modules/test_memcached.py": [
          "File: tests/unit/modules/test_memcached.py -> tests/unit/modules/test_memcached.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_napalm_probes.py||tests/unit/modules/test_napalm_probes.py": [
          "File: tests/unit/modules/test_napalm_probes.py -> tests/unit/modules/test_napalm_probes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_napalm_yang_mod.py||tests/unit/modules/test_napalm_yang_mod.py": [
          "File: tests/unit/modules/test_napalm_yang_mod.py -> tests/unit/modules/test_napalm_yang_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_netbox.py||tests/unit/modules/test_netbox.py": [
          "File: tests/unit/modules/test_netbox.py -> tests/unit/modules/test_netbox.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_netmiko_mod.py||tests/unit/modules/test_netmiko_mod.py": [
          "File: tests/unit/modules/test_netmiko_mod.py -> tests/unit/modules/test_netmiko_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_netscaler.py||tests/unit/modules/test_netscaler.py": [
          "File: tests/unit/modules/test_netscaler.py -> tests/unit/modules/test_netscaler.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_network.py||tests/unit/modules/test_network.py": [
          "File: tests/unit/modules/test_network.py -> tests/unit/modules/test_network.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_neutron.py||tests/unit/modules/test_neutron.py": [
          "File: tests/unit/modules/test_neutron.py -> tests/unit/modules/test_neutron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_nginx.py||tests/unit/modules/test_nginx.py": [
          "File: tests/unit/modules/test_nginx.py -> tests/unit/modules/test_nginx.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_nilrt_ip.py||tests/unit/modules/test_nilrt_ip.py": [
          "File: tests/unit/modules/test_nilrt_ip.py -> tests/unit/modules/test_nilrt_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_nova.py||tests/unit/modules/test_nova.py": [
          "File: tests/unit/modules/test_nova.py -> tests/unit/modules/test_nova.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_nxos.py||tests/unit/modules/test_nxos.py": [
          "File: tests/unit/modules/test_nxos.py -> tests/unit/modules/test_nxos.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_nxos_upgrade.py||tests/unit/modules/test_nxos_upgrade.py": [
          "File: tests/unit/modules/test_nxos_upgrade.py -> tests/unit/modules/test_nxos_upgrade.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_openstack_config.py||tests/unit/modules/test_openstack_config.py": [
          "File: tests/unit/modules/test_openstack_config.py -> tests/unit/modules/test_openstack_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_opkg.py||tests/unit/modules/test_opkg.py": [
          "File: tests/unit/modules/test_opkg.py -> tests/unit/modules/test_opkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_parted_partition.py||tests/unit/modules/test_parted_partition.py": [
          "File: tests/unit/modules/test_parted_partition.py -> tests/unit/modules/test_parted_partition.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_pdbedit.py||tests/unit/modules/test_pdbedit.py": [
          "File: tests/unit/modules/test_pdbedit.py -> tests/unit/modules/test_pdbedit.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_random_org.py||tests/unit/modules/test_random_org.py": [
          "File: tests/unit/modules/test_random_org.py -> tests/unit/modules/test_random_org.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_rh_ip.py||tests/unit/modules/test_rh_ip.py": [
          "File: tests/unit/modules/test_rh_ip.py -> tests/unit/modules/test_rh_ip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_saltcheck.py||tests/unit/modules/test_saltcheck.py": [
          "File: tests/unit/modules/test_saltcheck.py -> tests/unit/modules/test_saltcheck.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_snapper.py||tests/unit/modules/test_snapper.py": [
          "File: tests/unit/modules/test_snapper.py -> tests/unit/modules/test_snapper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_solarisipspkg.py||tests/unit/modules/test_solarisipspkg.py": [
          "File: tests/unit/modules/test_solarisipspkg.py -> tests/unit/modules/test_solarisipspkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_sqlite3.py||tests/unit/modules/test_sqlite3.py": [
          "File: tests/unit/modules/test_sqlite3.py -> tests/unit/modules/test_sqlite3.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_ssh.py||tests/unit/modules/test_ssh.py": [
          "File: tests/unit/modules/test_ssh.py -> tests/unit/modules/test_ssh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_supervisord.py||tests/unit/modules/test_supervisord.py": [
          "File: tests/unit/modules/test_supervisord.py -> tests/unit/modules/test_supervisord.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_swarm.py||tests/unit/modules/test_swarm.py": [
          "File: tests/unit/modules/test_swarm.py -> tests/unit/modules/test_swarm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_sysmod.py||tests/unit/modules/test_sysmod.py": [
          "File: tests/unit/modules/test_sysmod.py -> tests/unit/modules/test_sysmod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_twilio_notify.py||tests/unit/modules/test_twilio_notify.py": [
          "File: tests/unit/modules/test_twilio_notify.py -> tests/unit/modules/test_twilio_notify.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_useradd.py||tests/unit/modules/test_useradd.py": [
          "File: tests/unit/modules/test_useradd.py -> tests/unit/modules/test_useradd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_virt.py||tests/unit/modules/test_virt.py": [
          "File: tests/unit/modules/test_virt.py -> tests/unit/modules/test_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_virtualenv_mod.py||tests/unit/modules/test_virtualenv_mod.py": [
          "File: tests/unit/modules/test_virtualenv_mod.py -> tests/unit/modules/test_virtualenv_mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_vsphere.py||tests/unit/modules/test_vsphere.py": [
          "File: tests/unit/modules/test_vsphere.py -> tests/unit/modules/test_vsphere.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_win_groupadd.py||tests/unit/modules/test_win_groupadd.py": [
          "File: tests/unit/modules/test_win_groupadd.py -> tests/unit/modules/test_win_groupadd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_win_status.py||tests/unit/modules/test_win_status.py": [
          "File: tests/unit/modules/test_win_status.py -> tests/unit/modules/test_win_status.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_win_system.py||tests/unit/modules/test_win_system.py": [
          "File: tests/unit/modules/test_win_system.py -> tests/unit/modules/test_win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_x509.py||tests/unit/modules/test_x509.py": [
          "File: tests/unit/modules/test_x509.py -> tests/unit/modules/test_x509.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_zcbuildout.py||tests/unit/modules/test_zcbuildout.py": [
          "File: tests/unit/modules/test_zcbuildout.py -> tests/unit/modules/test_zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/modules/test_zypperpkg.py||tests/unit/modules/test_zypperpkg.py": [
          "File: tests/unit/modules/test_zypperpkg.py -> tests/unit/modules/test_zypperpkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/netapi/rest_tornado/test_saltnado.py||tests/unit/netapi/rest_tornado/test_saltnado.py": [
          "File: tests/unit/netapi/rest_tornado/test_saltnado.py -> tests/unit/netapi/rest_tornado/test_saltnado.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_boto_apigateway.py||tests/unit/states/test_boto_apigateway.py": [
          "File: tests/unit/states/test_boto_apigateway.py -> tests/unit/states/test_boto_apigateway.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_boto_cognitoidentity.py||tests/unit/states/test_boto_cognitoidentity.py": [
          "File: tests/unit/states/test_boto_cognitoidentity.py -> tests/unit/states/test_boto_cognitoidentity.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_boto_vpc.py||tests/unit/states/test_boto_vpc.py": [
          "File: tests/unit/states/test_boto_vpc.py -> tests/unit/states/test_boto_vpc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_cron.py||tests/unit/states/test_cron.py": [
          "File: tests/unit/states/test_cron.py -> tests/unit/states/test_cron.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_disk.py||tests/unit/states/test_disk.py": [
          "File: tests/unit/states/test_disk.py -> tests/unit/states/test_disk.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_esxdatacenter.py||tests/unit/states/test_esxdatacenter.py": [
          "File: tests/unit/states/test_esxdatacenter.py -> tests/unit/states/test_esxdatacenter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_esxi.py||tests/unit/states/test_esxi.py": [
          "File: tests/unit/states/test_esxi.py -> tests/unit/states/test_esxi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_group.py||tests/unit/states/test_group.py": [
          "File: tests/unit/states/test_group.py -> tests/unit/states/test_group.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_heat.py||tests/unit/states/test_heat.py": [
          "File: tests/unit/states/test_heat.py -> tests/unit/states/test_heat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_ipset.py||tests/unit/states/test_ipset.py": [
          "File: tests/unit/states/test_ipset.py -> tests/unit/states/test_ipset.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_loop.py||tests/unit/states/test_loop.py": [
          "File: tests/unit/states/test_loop.py -> tests/unit/states/test_loop.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_module.py||tests/unit/states/test_module.py": [
          "File: tests/unit/states/test_module.py -> tests/unit/states/test_module.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_pip_state.py||tests/unit/states/test_pip_state.py": [
          "File: tests/unit/states/test_pip_state.py -> tests/unit/states/test_pip_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_syslog_ng.py||tests/unit/states/test_syslog_ng.py": [
          "File: tests/unit/states/test_syslog_ng.py -> tests/unit/states/test_syslog_ng.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_virt.py||tests/unit/states/test_virt.py": [
          "File: tests/unit/states/test_virt.py -> tests/unit/states/test_virt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_x509.py||tests/unit/states/test_x509.py": [
          "File: tests/unit/states/test_x509.py -> tests/unit/states/test_x509.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/states/test_zcbuildout.py||tests/unit/states/test_zcbuildout.py": [
          "File: tests/unit/states/test_zcbuildout.py -> tests/unit/states/test_zcbuildout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_config.py||tests/unit/test_config.py": [
          "File: tests/unit/test_config.py -> tests/unit/test_config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_engines.py||tests/unit/test_engines.py": [
          "File: tests/unit/test_engines.py -> tests/unit/test_engines.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_fileserver.py||tests/unit/test_fileserver.py": [
          "File: tests/unit/test_fileserver.py -> tests/unit/test_fileserver.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_loader.py||tests/unit/test_loader.py": [
          "File: tests/unit/test_loader.py -> tests/unit/test_loader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_mock.py||tests/unit/test_mock.py": [
          "File: tests/unit/test_mock.py -> tests/unit/test_mock.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_module_names.py||tests/unit/test_module_names.py": [
          "File: tests/unit/test_module_names.py -> tests/unit/test_module_names.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_pillar.py||tests/unit/test_pillar.py": [
          "File: tests/unit/test_pillar.py -> tests/unit/test_pillar.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_proxy_minion.py||tests/unit/test_proxy_minion.py": [
          "File: tests/unit/test_proxy_minion.py -> tests/unit/test_proxy_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_virtualname.py||tests/unit/test_virtualname.py": [
          "File: tests/unit/test_virtualname.py -> tests/unit/test_virtualname.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/test_zypp_plugins.py||tests/unit/test_zypp_plugins.py": [
          "File: tests/unit/test_zypp_plugins.py -> tests/unit/test_zypp_plugins.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/transport/mixins.py||tests/unit/transport/mixins.py": [
          "File: tests/unit/transport/mixins.py -> tests/unit/transport/mixins.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/transport/test_ipc.py||tests/unit/transport/test_ipc.py": [
          "File: tests/unit/transport/test_ipc.py -> tests/unit/transport/test_ipc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/transport/test_tcp.py||tests/unit/transport/test_tcp.py": [
          "File: tests/unit/transport/test_tcp.py -> tests/unit/transport/test_tcp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_aggregation.py||tests/unit/utils/test_aggregation.py": [
          "File: tests/unit/utils/test_aggregation.py -> tests/unit/utils/test_aggregation.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_asynchronous.py||tests/unit/utils/test_asynchronous.py": [
          "File: tests/unit/utils/test_asynchronous.py -> tests/unit/utils/test_asynchronous.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_boto3mod.py||tests/unit/utils/test_boto3mod.py": [
          "File: tests/unit/utils/test_boto3mod.py -> tests/unit/utils/test_boto3mod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_botomod.py||tests/unit/utils/test_botomod.py": [
          "File: tests/unit/utils/test_botomod.py -> tests/unit/utils/test_botomod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_color.py||tests/unit/utils/test_color.py": [
          "File: tests/unit/utils/test_color.py -> tests/unit/utils/test_color.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_configcomparer.py||tests/unit/utils/test_configcomparer.py": [
          "File: tests/unit/utils/test_configcomparer.py -> tests/unit/utils/test_configcomparer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_configparser.py||tests/unit/utils/test_configparser.py": [
          "File: tests/unit/utils/test_configparser.py -> tests/unit/utils/test_configparser.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_context.py||tests/unit/utils/test_context.py": [
          "File: tests/unit/utils/test_context.py -> tests/unit/utils/test_context.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dateutils.py||tests/unit/utils/test_dateutils.py": [
          "File: tests/unit/utils/test_dateutils.py -> tests/unit/utils/test_dateutils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_decorators.py||tests/unit/utils/test_decorators.py": [
          "File: tests/unit/utils/test_decorators.py -> tests/unit/utils/test_decorators.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dicttrim.py||tests/unit/utils/test_dicttrim.py": [
          "File: tests/unit/utils/test_dicttrim.py -> tests/unit/utils/test_dicttrim.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dictupdate.py||tests/unit/utils/test_dictupdate.py": [
          "File: tests/unit/utils/test_dictupdate.py -> tests/unit/utils/test_dictupdate.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dns.py||tests/unit/utils/test_dns.py": [
          "File: tests/unit/utils/test_dns.py -> tests/unit/utils/test_dns.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_doc.py||tests/unit/utils/test_doc.py": [
          "File: tests/unit/utils/test_doc.py -> tests/unit/utils/test_doc.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_dockermod.py||tests/unit/utils/test_dockermod.py": [
          "File: tests/unit/utils/test_dockermod.py -> tests/unit/utils/test_dockermod.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_environment.py||tests/unit/utils/test_environment.py": [
          "File: tests/unit/utils/test_environment.py -> tests/unit/utils/test_environment.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_extend.py||tests/unit/utils/test_extend.py": [
          "File: tests/unit/utils/test_extend.py -> tests/unit/utils/test_extend.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_filebuffer.py||tests/unit/utils/test_filebuffer.py": [
          "File: tests/unit/utils/test_filebuffer.py -> tests/unit/utils/test_filebuffer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_find.py||tests/unit/utils/test_find.py": [
          "File: tests/unit/utils/test_find.py -> tests/unit/utils/test_find.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_gitfs.py||tests/unit/utils/test_gitfs.py": [
          "File: tests/unit/utils/test_gitfs.py -> tests/unit/utils/test_gitfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_hashutils.py||tests/unit/utils/test_hashutils.py": [
          "File: tests/unit/utils/test_hashutils.py -> tests/unit/utils/test_hashutils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_immutabletypes.py||tests/unit/utils/test_immutabletypes.py": [
          "File: tests/unit/utils/test_immutabletypes.py -> tests/unit/utils/test_immutabletypes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_jid.py||tests/unit/utils/test_jid.py": [
          "File: tests/unit/utils/test_jid.py -> tests/unit/utils/test_jid.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_job.py||tests/unit/utils/test_job.py": [
          "File: tests/unit/utils/test_job.py -> tests/unit/utils/test_job.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_json.py||tests/unit/utils/test_json.py": [
          "File: tests/unit/utils/test_json.py -> tests/unit/utils/test_json.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_kickstart.py||tests/unit/utils/test_kickstart.py": [
          "File: tests/unit/utils/test_kickstart.py -> tests/unit/utils/test_kickstart.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_locales.py||tests/unit/utils/test_locales.py": [
          "File: tests/unit/utils/test_locales.py -> tests/unit/utils/test_locales.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_mac_utils.py||tests/unit/utils/test_mac_utils.py": [
          "File: tests/unit/utils/test_mac_utils.py -> tests/unit/utils/test_mac_utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_master.py||tests/unit/utils/test_master.py": [
          "File: tests/unit/utils/test_master.py -> tests/unit/utils/test_master.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_minion.py||tests/unit/utils/test_minion.py": [
          "File: tests/unit/utils/test_minion.py -> tests/unit/utils/test_minion.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_minions.py||tests/unit/utils/test_minions.py": [
          "File: tests/unit/utils/test_minions.py -> tests/unit/utils/test_minions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_msgpack.py||tests/unit/utils/test_msgpack.py": [
          "File: tests/unit/utils/test_msgpack.py -> tests/unit/utils/test_msgpack.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_path.py||tests/unit/utils/test_path.py": [
          "File: tests/unit/utils/test_path.py -> tests/unit/utils/test_path.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_pbm.py||tests/unit/utils/test_pbm.py": [
          "File: tests/unit/utils/test_pbm.py -> tests/unit/utils/test_pbm.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_pkg.py||tests/unit/utils/test_pkg.py": [
          "File: tests/unit/utils/test_pkg.py -> tests/unit/utils/test_pkg.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_process.py||tests/unit/utils/test_process.py": [
          "File: tests/unit/utils/test_process.py -> tests/unit/utils/test_process.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_proxy.py||tests/unit/utils/test_proxy.py": [
          "File: tests/unit/utils/test_proxy.py -> tests/unit/utils/test_proxy.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_pydsl.py||tests/unit/utils/test_pydsl.py": [
          "File: tests/unit/utils/test_pydsl.py -> tests/unit/utils/test_pydsl.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_pyobjects.py||tests/unit/utils/test_pyobjects.py": [
          "File: tests/unit/utils/test_pyobjects.py -> tests/unit/utils/test_pyobjects.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_reactor.py||tests/unit/utils/test_reactor.py": [
          "File: tests/unit/utils/test_reactor.py -> tests/unit/utils/test_reactor.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_roster_matcher.py||tests/unit/utils/test_roster_matcher.py": [
          "File: tests/unit/utils/test_roster_matcher.py -> tests/unit/utils/test_roster_matcher.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_sanitizers.py||tests/unit/utils/test_sanitizers.py": [
          "File: tests/unit/utils/test_sanitizers.py -> tests/unit/utils/test_sanitizers.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_schema.py||tests/unit/utils/test_schema.py": [
          "File: tests/unit/utils/test_schema.py -> tests/unit/utils/test_schema.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_sdb.py||tests/unit/utils/test_sdb.py": [
          "File: tests/unit/utils/test_sdb.py -> tests/unit/utils/test_sdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_ssdp.py||tests/unit/utils/test_ssdp.py": [
          "File: tests/unit/utils/test_ssdp.py -> tests/unit/utils/test_ssdp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_state.py||tests/unit/utils/test_state.py": [
          "File: tests/unit/utils/test_state.py -> tests/unit/utils/test_state.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_systemd.py||tests/unit/utils/test_systemd.py": [
          "File: tests/unit/utils/test_systemd.py -> tests/unit/utils/test_systemd.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_thin.py||tests/unit/utils/test_thin.py": [
          "File: tests/unit/utils/test_thin.py -> tests/unit/utils/test_thin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_timed_subprocess.py||tests/unit/utils/test_timed_subprocess.py": [
          "File: tests/unit/utils/test_timed_subprocess.py -> tests/unit/utils/test_timed_subprocess.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_timeout.py||tests/unit/utils/test_timeout.py": [
          "File: tests/unit/utils/test_timeout.py -> tests/unit/utils/test_timeout.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_url.py||tests/unit/utils/test_url.py": [
          "File: tests/unit/utils/test_url.py -> tests/unit/utils/test_url.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_vmware.py||tests/unit/utils/test_vmware.py": [
          "File: tests/unit/utils/test_vmware.py -> tests/unit/utils/test_vmware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_vsan.py||tests/unit/utils/test_vsan.py": [
          "File: tests/unit/utils/test_vsan.py -> tests/unit/utils/test_vsan.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_vt.py||tests/unit/utils/test_vt.py": [
          "File: tests/unit/utils/test_vt.py -> tests/unit/utils/test_vt.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_chcp.py||tests/unit/utils/test_win_chcp.py": [
          "File: tests/unit/utils/test_win_chcp.py -> tests/unit/utils/test_win_chcp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_dotnet.py||tests/unit/utils/test_win_dotnet.py": [
          "File: tests/unit/utils/test_win_dotnet.py -> tests/unit/utils/test_win_dotnet.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_functions.py||tests/unit/utils/test_win_functions.py": [
          "File: tests/unit/utils/test_win_functions.py -> tests/unit/utils/test_win_functions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_osinfo.py||tests/unit/utils/test_win_osinfo.py": [
          "File: tests/unit/utils/test_win_osinfo.py -> tests/unit/utils/test_win_osinfo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_pdh.py||tests/unit/utils/test_win_pdh.py": [
          "File: tests/unit/utils/test_win_pdh.py -> tests/unit/utils/test_win_pdh.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_service.py||tests/unit/utils/test_win_service.py": [
          "File: tests/unit/utils/test_win_service.py -> tests/unit/utils/test_win_service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_win_system.py||tests/unit/utils/test_win_system.py": [
          "File: tests/unit/utils/test_win_system.py -> tests/unit/utils/test_win_system.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_xmlutil.py||tests/unit/utils/test_xmlutil.py": [
          "File: tests/unit/utils/test_xmlutil.py -> tests/unit/utils/test_xmlutil.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_yamldumper.py||tests/unit/utils/test_yamldumper.py": [
          "File: tests/unit/utils/test_yamldumper.py -> tests/unit/utils/test_yamldumper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_yamlencoding.py||tests/unit/utils/test_yamlencoding.py": [
          "File: tests/unit/utils/test_yamlencoding.py -> tests/unit/utils/test_yamlencoding.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_yamlloader.py||tests/unit/utils/test_yamlloader.py": [
          "File: tests/unit/utils/test_yamlloader.py -> tests/unit/utils/test_yamlloader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_zeromq.py||tests/unit/utils/test_zeromq.py": [
          "File: tests/unit/utils/test_zeromq.py -> tests/unit/utils/test_zeromq.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/test_zfs.py||tests/unit/utils/test_zfs.py": [
          "File: tests/unit/utils/test_zfs.py -> tests/unit/utils/test_zfs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/unit/utils/validate/test_net.py||tests/unit/utils/validate/test_net.py": [
          "File: tests/unit/utils/validate/test_net.py -> tests/unit/utils/validate/test_net.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/wheeltest.py||tests/wheeltest.py": [
          "File: tests/wheeltest.py -> tests/wheeltest.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/zypp_plugin.py||tests/zypp_plugin.py": [
          "File: tests/zypp_plugin.py -> tests/zypp_plugin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}