{
  "cve_id": "CVE-2024-7042",
  "cve_desc": "A vulnerability in the GraphCypherQAChain class of langchain-ai/langchainjs versions 0.2.5 and all versions with this class allows for prompt injection, leading to SQL injection. This vulnerability permits unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.",
  "repo": "langchain-ai/langchainjs",
  "patch_hash": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
  "patch_info": {
    "commit_hash": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
    "repo": "langchain-ai/langchainjs",
    "commit_url": "https://github.com/langchain-ai/langchainjs/commit/615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
    "files": [
      "examples/package.json",
      "examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "libs/langchain-community/package.json",
      "libs/langchain-community/src/vectorstores/lancedb.ts",
      "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "yarn.lock"
    ],
    "message": "feat(community): Remove required param from LanceDB integration (#6706)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
    "before_after_code_files": [
      "examples/src/indexes/vector_stores/lancedb/fromDocs.ts||examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "examples/src/indexes/vector_stores/lancedb/fromTexts.ts||examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "libs/langchain-community/src/vectorstores/lancedb.ts||libs/langchain-community/src/vectorstores/lancedb.ts",
      "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts||libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "examples/src/indexes/vector_stores/lancedb/fromDocs.ts||examples/src/indexes/vector_stores/lancedb/fromDocs.ts": [
      "File: examples/src/indexes/vector_stores/lancedb/fromDocs.ts -> examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: import fs from \"node:fs/promises\";",
      "5: import path from \"node:path\";",
      "6: import os from \"node:os\";",
      "10: const loader = new TextLoader(\"src/document_loaders/example_data/example.txt\");",
      "11: const docs = await loader.load();",
      "13: export const run = async () => {",
      "14:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "26:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "27:   console.log(resultOne);",
      "",
      "[Removed Lines]",
      "7: import { connect } from \"vectordb\";",
      "15:   const db = await connect(dir);",
      "16:   const table = await db.createTable(\"vectors\", [",
      "17:     { vector: Array(1536), text: \"sample\", source: \"a\" },",
      "18:   ]);",
      "20:   const vectorStore = await LanceDB.fromDocuments(",
      "21:     docs,",
      "22:     new OpenAIEmbeddings(),",
      "23:     { table }",
      "24:   );",
      "",
      "[Added Lines]",
      "13:   const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());",
      "15:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "16:   console.log(resultOne);",
      "24: };",
      "26: export const run_with_existing_table = async () => {",
      "29:   const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());",
      "",
      "---------------"
    ],
    "examples/src/indexes/vector_stores/lancedb/fromTexts.ts||examples/src/indexes/vector_stores/lancedb/fromTexts.ts": [
      "File: examples/src/indexes/vector_stores/lancedb/fromTexts.ts -> examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import { LanceDB } from \"@langchain/community/vectorstores/lancedb\";",
      "2: import { OpenAIEmbeddings } from \"@langchain/openai\";",
      "4: import * as fs from \"node:fs/promises\";",
      "5: import * as path from \"node:path\";",
      "6: import os from \"node:os\";",
      "8: export const run = async () => {",
      "15:   const vectorStore = await LanceDB.fromTexts(",
      "16:     [\"Hello world\", \"Bye bye\", \"hello nice world\"],",
      "17:     [{ id: 2 }, { id: 1 }, { id: 3 }],",
      "20:   );",
      "22:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "",
      "[Removed Lines]",
      "3: import { connect } from \"vectordb\";",
      "9:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "10:   const db = await connect(dir);",
      "11:   const table = await db.createTable(\"vectors\", [",
      "12:     { vector: Array(1536), text: \"sample\", id: 1 },",
      "13:   ]);",
      "18:     new OpenAIEmbeddings(),",
      "19:     { table }",
      "",
      "[Added Lines]",
      "8:   const vectorStore = await LanceDB.fromTexts(",
      "9:     [\"Hello world\", \"Bye bye\", \"hello nice world\"],",
      "10:     [{ id: 2 }, { id: 1 }, { id: 3 }],",
      "11:     new OpenAIEmbeddings()",
      "12:   );",
      "14:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "15:   console.log(resultOne);",
      "17: };",
      "19: export const run_with_existing_table = async () => {",
      "20:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "24:     new OpenAIEmbeddings()",
      "",
      "---------------"
    ],
    "libs/langchain-community/src/vectorstores/lancedb.ts||libs/langchain-community/src/vectorstores/lancedb.ts": [
      "File: libs/langchain-community/src/vectorstores/lancedb.ts -> libs/langchain-community/src/vectorstores/lancedb.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: import type { EmbeddingsInterface } from \"@langchain/core/embeddings\";",
      "3: import { VectorStore } from \"@langchain/core/vectorstores\";",
      "4: import { Document } from \"@langchain/core/documents\";",
      "",
      "[Removed Lines]",
      "1: import { Table } from \"vectordb\";",
      "",
      "[Added Lines]",
      "1: import { connect, Table, Connection, WriteMode } from \"vectordb\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10: export type LanceDBArgs = {",
      "12:   textKey?: string;",
      "13: };",
      "",
      "[Removed Lines]",
      "11:   table: Table;",
      "",
      "[Added Lines]",
      "11:   table?: Table;",
      "13:   uri?: string;",
      "14:   tableName?: string;",
      "15:   mode?: WriteMode;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "20: export class LanceDB extends VectorStore {",
      "23:   private textKey: string;",
      "28:     this.embeddings = embeddings;",
      "30:   }",
      "",
      "[Removed Lines]",
      "21:   private table: Table;",
      "25:   constructor(embeddings: EmbeddingsInterface, args: LanceDBArgs) {",
      "26:     super(embeddings, args);",
      "27:     this.table = args.table;",
      "29:     this.textKey = args.textKey || \"text\";",
      "",
      "[Added Lines]",
      "24:   private table?: Table;",
      "28:   private uri: string;",
      "30:   private tableName: string;",
      "32:   private mode?: WriteMode;",
      "34:   constructor(embeddings: EmbeddingsInterface, args?: LanceDBArgs) {",
      "35:     super(embeddings, args || {});",
      "36:     this.table = args?.table;",
      "38:     this.textKey = args?.textKey || \"text\";",
      "39:     this.uri = args?.uri || \"~/lancedb\";",
      "40:     this.tableName = args?.tableName || \"langchain\";",
      "41:     this.mode = args?.mode || WriteMode.Overwrite;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "71:       });",
      "72:       data.push(record);",
      "73:     }",
      "74:     await this.table.add(data);",
      "75:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "86:     if (!this.table) {",
      "87:       const db: Connection = await connect(this.uri);",
      "88:       this.table = await db.createTable(this.tableName, data, {",
      "89:         writeMode: this.mode,",
      "90:       });",
      "92:       return;",
      "93:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "85:     query: number[],",
      "86:     k: number",
      "87:   ): Promise<[Document, number][]> {",
      "88:     const results = await this.table.search(query).limit(k).execute();",
      "90:     const docsAndScore: [Document, number][] = [];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:     if (!this.table) {",
      "109:       throw new Error(",
      "110:         \"Table not found. Please add vectors to the table first.\"",
      "111:       );",
      "112:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "119:     texts: string[],",
      "120:     metadatas: object[] | object,",
      "121:     embeddings: EmbeddingsInterface,",
      "123:   ): Promise<LanceDB> {",
      "124:     const docs: Document[] = [];",
      "125:     for (let i = 0; i < texts.length; i += 1) {",
      "",
      "[Removed Lines]",
      "122:     dbConfig: LanceDBArgs",
      "",
      "[Added Lines]",
      "147:     dbConfig?: LanceDBArgs",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "143:   static async fromDocuments(",
      "144:     docs: Document[],",
      "145:     embeddings: EmbeddingsInterface,",
      "147:   ): Promise<LanceDB> {",
      "148:     const instance = new this(embeddings, dbConfig);",
      "149:     await instance.addDocuments(docs);",
      "",
      "[Removed Lines]",
      "146:     dbConfig: LanceDBArgs",
      "",
      "[Added Lines]",
      "171:     dbConfig?: LanceDBArgs",
      "",
      "---------------"
    ],
    "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts||libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts": [
      "File: libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts -> libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:     expect(resultsTwo.length).toBe(5);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49: describe(\"LanceDB empty schema\", () => {",
      "50:   test(\"Test fromTexts + addDocuments\", async () => {",
      "51:     const embeddings = new OpenAIEmbeddings();",
      "52:     const vectorStore = await LanceDB.fromTexts(",
      "53:       [\"hello bye\", \"hello world\", \"bye bye\"],",
      "54:       [{ id: 1 }, { id: 2 }, { id: 3 }],",
      "55:       embeddings",
      "56:     );",
      "58:     const results = await vectorStore.similaritySearch(\"hello bye\", 10);",
      "59:     expect(results.length).toBe(3);",
      "61:     await vectorStore.addDocuments([",
      "62:       new Document({",
      "63:         pageContent: \"a new world\",",
      "64:         metadata: { id: 4 },",
      "65:       }),",
      "66:     ]);",
      "68:     const resultsTwo = await vectorStore.similaritySearch(\"hello bye\", 10);",
      "69:     expect(resultsTwo.length).toBe(4);",
      "70:   });",
      "71: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "251:   languageName: node",
      "252:   linkType: hard",
      "272: \"@apify/consts@npm:^2.13.0, @apify/consts@npm:^2.9.0\":",
      "273:   version: 2.13.0",
      "274:   resolution: \"@apify/consts@npm:2.13.0\"",
      "",
      "[Removed Lines]",
      "254: \"@apache-arrow/ts@npm:^12.0.0\":",
      "255:   version: 12.0.0",
      "256:   resolution: \"@apache-arrow/ts@npm:12.0.0\"",
      "257:   dependencies:",
      "258:     \"@types/command-line-args\": 5.2.0",
      "259:     \"@types/command-line-usage\": 5.0.2",
      "260:     \"@types/node\": 18.14.5",
      "261:     \"@types/pad-left\": 2.1.1",
      "262:     command-line-args: 5.2.1",
      "263:     command-line-usage: 6.1.3",
      "264:     flatbuffers: 23.3.3",
      "265:     json-bignum: ^0.0.3",
      "266:     pad-left: ^2.1.0",
      "267:     tslib: ^2.5.0",
      "268:   checksum: 67b2791e14d5377b1d160a0d8390decc386e013c517713f8b9c100737a0e478a394086d91a8c846848d4e30289070a119d8e65191998f4c2555b18a29564df50",
      "269:   languageName: node",
      "270:   linkType: hard",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11112:   languageName: node",
      "11113:   linkType: hard",
      "11115: \"@langchain/anthropic@*, @langchain/anthropic@workspace:*, @langchain/anthropic@workspace:libs/langchain-anthropic\":",
      "11116:   version: 0.0.0-use.local",
      "11117:   resolution: \"@langchain/anthropic@workspace:libs/langchain-anthropic\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11097: \"@lancedb/vectordb-darwin-arm64@npm:0.4.20\":",
      "11098:   version: 0.4.20",
      "11099:   resolution: \"@lancedb/vectordb-darwin-arm64@npm:0.4.20\"",
      "11100:   conditions: os=darwin & cpu=arm64",
      "11101:   languageName: node",
      "11102:   linkType: hard",
      "11104: \"@lancedb/vectordb-darwin-x64@npm:0.4.20\":",
      "11105:   version: 0.4.20",
      "11106:   resolution: \"@lancedb/vectordb-darwin-x64@npm:0.4.20\"",
      "11107:   conditions: os=darwin & cpu=x64",
      "11108:   languageName: node",
      "11109:   linkType: hard",
      "11111: \"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\":",
      "11112:   version: 0.4.20",
      "11113:   resolution: \"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\"",
      "11114:   conditions: os=linux & cpu=arm64",
      "11115:   languageName: node",
      "11116:   linkType: hard",
      "11118: \"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\":",
      "11119:   version: 0.4.20",
      "11120:   resolution: \"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\"",
      "11121:   conditions: os=linux & cpu=x64",
      "11122:   languageName: node",
      "11123:   linkType: hard",
      "11125: \"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\":",
      "11126:   version: 0.4.20",
      "11127:   resolution: \"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\"",
      "11128:   conditions: os=win32 & cpu=x64",
      "11129:   languageName: node",
      "11130:   linkType: hard",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "11577:     typesense: ^1.5.3",
      "11578:     usearch: ^1.1.1",
      "11579:     uuid: ^10.0.0",
      "11581:     voy-search: 0.6.2",
      "11582:     weaviate-ts-client: ^1.4.0",
      "11583:     web-auth-library: ^1.0.3",
      "",
      "[Removed Lines]",
      "11580:     vectordb: ^0.1.4",
      "",
      "[Added Lines]",
      "11597:     vectordb: ^0.9.0",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "13039:   languageName: node",
      "13040:   linkType: hard",
      "13042: \"@neondatabase/serverless@npm:0.6.0\":",
      "13043:   version: 0.6.0",
      "13044:   resolution: \"@neondatabase/serverless@npm:0.6.0\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13059: \"@neon-rs/load@npm:^0.0.74\":",
      "13060:   version: 0.0.74",
      "13061:   resolution: \"@neon-rs/load@npm:0.0.74\"",
      "13062:   checksum: d26ec9b08cdf1a7c5aeefe98f77112d205d11b4005a7934b21fe8fd27528847e08e4749e7e6c3fc05ae9f701175a58c11a095ae6af449634df3991a2c82e1dfa",
      "13063:   languageName: node",
      "13064:   linkType: hard",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "20774:   languageName: node",
      "20775:   linkType: hard",
      "20797: \"apache-arrow@npm:^12.0.1\":",
      "20798:   version: 12.0.1",
      "20799:   resolution: \"apache-arrow@npm:12.0.1\"",
      "",
      "[Removed Lines]",
      "20777: \"apache-arrow@npm:^12.0.0\":",
      "20778:   version: 12.0.0",
      "20779:   resolution: \"apache-arrow@npm:12.0.0\"",
      "20780:   dependencies:",
      "20781:     \"@types/command-line-args\": 5.2.0",
      "20782:     \"@types/command-line-usage\": 5.0.2",
      "20783:     \"@types/node\": 18.14.5",
      "20784:     \"@types/pad-left\": 2.1.1",
      "20785:     command-line-args: 5.2.1",
      "20786:     command-line-usage: 6.1.3",
      "20787:     flatbuffers: 23.3.3",
      "20788:     json-bignum: ^0.0.3",
      "20789:     pad-left: ^2.1.0",
      "20790:     tslib: ^2.5.0",
      "20791:   bin:",
      "20792:     arrow2csv: bin/arrow2csv.js",
      "20793:   checksum: 3285189517c2b298cda42852321ce127754918513116eade6e4914c57983f68b6ba96605cfaa2202796d3d6e14755d3b3758f76c1374492affa3d95714eaca40",
      "20794:   languageName: node",
      "20795:   linkType: hard",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "27133:     typescript: ~5.1.6",
      "27134:     typesense: ^1.5.3",
      "27135:     uuid: ^10.0.0",
      "27137:     voy-search: 0.6.2",
      "27138:     weaviate-ts-client: ^2.0.0",
      "27139:     zod: ^3.22.4",
      "",
      "[Removed Lines]",
      "27136:     vectordb: ^0.1.4",
      "",
      "[Added Lines]",
      "27140:     vectordb: ^0.9.0",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "42444:   languageName: node",
      "42445:   linkType: hard",
      "42454:   languageName: node",
      "42455:   linkType: hard",
      "",
      "[Removed Lines]",
      "42447: \"vectordb@npm:^0.1.4\":",
      "42448:   version: 0.1.4",
      "42449:   resolution: \"vectordb@npm:0.1.4\"",
      "42450:   dependencies:",
      "42451:     \"@apache-arrow/ts\": ^12.0.0",
      "42452:     apache-arrow: ^12.0.0",
      "42453:   checksum: 8a40abf4466479b0b9e61687416b5ab232458401917bf9a1d5f3d8ea8c8320ecc5691174f4d4c0cfef0bb6c16328a9088419fd90ac85fd7267dbccdd1f9e55d7",
      "",
      "[Added Lines]",
      "42451: \"vectordb@npm:^0.9.0\":",
      "42452:   version: 0.9.0",
      "42453:   resolution: \"vectordb@npm:0.9.0\"",
      "42454:   dependencies:",
      "42455:     \"@lancedb/vectordb-darwin-arm64\": 0.4.20",
      "42456:     \"@lancedb/vectordb-darwin-x64\": 0.4.20",
      "42457:     \"@lancedb/vectordb-linux-arm64-gnu\": 0.4.20",
      "42458:     \"@lancedb/vectordb-linux-x64-gnu\": 0.4.20",
      "42459:     \"@lancedb/vectordb-win32-x64-msvc\": 0.4.20",
      "42460:     \"@neon-rs/load\": ^0.0.74",
      "42461:     axios: ^1.4.0",
      "42462:   peerDependencies:",
      "42463:     \"@apache-arrow/ts\": ^14.0.2",
      "42464:     apache-arrow: ^14.0.2",
      "42465:   dependenciesMeta:",
      "42466:     \"@lancedb/vectordb-darwin-arm64\":",
      "42467:       optional: true",
      "42468:     \"@lancedb/vectordb-darwin-x64\":",
      "42469:       optional: true",
      "42470:     \"@lancedb/vectordb-linux-arm64-gnu\":",
      "42471:       optional: true",
      "42472:     \"@lancedb/vectordb-linux-x64-gnu\":",
      "42473:       optional: true",
      "42474:     \"@lancedb/vectordb-win32-x64-msvc\":",
      "42475:       optional: true",
      "42476:   conditions: (os=darwin | os=linux | os=win32) & (cpu=x64 | cpu=arm64)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e13925fea6677ed503d9bbc08184d4fa42807279",
      "candidate_info": {
        "commit_hash": "e13925fea6677ed503d9bbc08184d4fa42807279",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/e13925fea6677ed503d9bbc08184d4fa42807279",
        "files": [
          "yarn.lock"
        ],
        "message": "fix: Update yarn.lock (#7153)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "12143:   languageName: unknown",
          "12144:   linkType: soft",
          "12159:   version: 0.0.0-use.local",
          "12160:   resolution: \"@langchain/google-genai@workspace:libs/langchain-google-genai\"",
          "12161:   dependencies:",
          "",
          "[Removed Lines]",
          "12146: \"@langchain/google-genai@npm:*\":",
          "12147:   version: 0.1.2",
          "12148:   resolution: \"@langchain/google-genai@npm:0.1.2\"",
          "12149:   dependencies:",
          "12150:     \"@google/generative-ai\": ^0.7.0",
          "12151:     zod-to-json-schema: ^3.22.4",
          "12152:   peerDependencies:",
          "12153:     \"@langchain/core\": \">=0.2.21 <0.4.0\"",
          "12154:   checksum: 69113d66898e7e7fe2c852a844edbd440f72caf7445b555ce4dc1bdd6cd530b404dc3631662d70458604bf9ee395bba8c2c1d4c5a024b29498d7bd977573051a",
          "12155:   languageName: node",
          "12156:   linkType: hard",
          "12158: \"@langchain/google-genai@workspace:*, @langchain/google-genai@workspace:libs/langchain-google-genai\":",
          "",
          "[Added Lines]",
          "12146: \"@langchain/google-genai@*, @langchain/google-genai@workspace:*, @langchain/google-genai@workspace:libs/langchain-google-genai\":",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e192776e1190ce56fd5b70cd7698ffea088fd2c",
      "candidate_info": {
        "commit_hash": "2e192776e1190ce56fd5b70cd7698ffea088fd2c",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/2e192776e1190ce56fd5b70cd7698ffea088fd2c",
        "files": [
          "libs/langchain-google-genai/package.json",
          "yarn.lock"
        ],
        "message": "feat(google-genai): Release 0.1.3-rc.0 (#7140)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "12143:   languageName: unknown",
          "12144:   linkType: soft",
          "12147:   version: 0.0.0-use.local",
          "12148:   resolution: \"@langchain/google-genai@workspace:libs/langchain-google-genai\"",
          "12149:   dependencies:",
          "",
          "[Removed Lines]",
          "12146: \"@langchain/google-genai@*, @langchain/google-genai@workspace:*, @langchain/google-genai@workspace:libs/langchain-google-genai\":",
          "",
          "[Added Lines]",
          "12146: \"@langchain/google-genai@npm:*\":",
          "12147:   version: 0.1.2",
          "12148:   resolution: \"@langchain/google-genai@npm:0.1.2\"",
          "12149:   dependencies:",
          "12150:     \"@google/generative-ai\": ^0.7.0",
          "12151:     zod-to-json-schema: ^3.22.4",
          "12152:   peerDependencies:",
          "12153:     \"@langchain/core\": \">=0.2.21 <0.4.0\"",
          "12154:   checksum: 69113d66898e7e7fe2c852a844edbd440f72caf7445b555ce4dc1bdd6cd530b404dc3631662d70458604bf9ee395bba8c2c1d4c5a024b29498d7bd977573051a",
          "12155:   languageName: node",
          "12156:   linkType: hard",
          "12158: \"@langchain/google-genai@workspace:*, @langchain/google-genai@workspace:libs/langchain-google-genai\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12176:     zod: ^3.22.4",
          "12177:     zod-to-json-schema: ^3.22.4",
          "12178:   peerDependencies:",
          "12180:   languageName: unknown",
          "12181:   linkType: soft",
          "",
          "[Removed Lines]",
          "12179:     \"@langchain/core\": \">=0.2.21 <0.4.0\"",
          "",
          "[Added Lines]",
          "12191:     \"@langchain/core\": \">=0.3.17 <0.4.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "762ed4609b4f241d9caeec61eb1bafb5e39e2af6",
      "candidate_info": {
        "commit_hash": "762ed4609b4f241d9caeec61eb1bafb5e39e2af6",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/762ed4609b4f241d9caeec61eb1bafb5e39e2af6",
        "files": [
          "docs/core_docs/docs/integrations/text_embedding/pinecone.ipynb",
          "examples/src/embeddings/pinecone.ts",
          "examples/src/indexes/vector_stores/pinecone/delete_docs.ts",
          "examples/src/indexes/vector_stores/pinecone/index_docs.ts",
          "examples/src/indexes/vector_stores/pinecone/mmr.ts",
          "examples/src/indexes/vector_stores/pinecone/query_docs.ts",
          "examples/src/retrievers/pinecone_self_query.ts",
          "libs/langchain-community/package.json",
          "libs/langchain-pinecone/jest.config.cjs",
          "libs/langchain-pinecone/package.json",
          "libs/langchain-pinecone/src/client.ts",
          "libs/langchain-pinecone/src/embeddings.ts",
          "libs/langchain-pinecone/src/index.ts",
          "libs/langchain-pinecone/src/tests/client.int.test.ts",
          "libs/langchain-pinecone/src/tests/client.test.ts",
          "libs/langchain-pinecone/src/tests/embeddings.int.test.ts",
          "libs/langchain-pinecone/src/tests/embeddings.test.ts",
          "libs/langchain-pinecone/src/tests/translator.int.test.ts",
          "libs/langchain-pinecone/src/vectorstores.ts",
          "yarn.lock"
        ],
        "message": "feat(pinecone): Add support for Pinecone `/embed` endpoint (#7203)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
        "before_after_code_files": [
          "examples/src/embeddings/pinecone.ts||examples/src/embeddings/pinecone.ts",
          "examples/src/indexes/vector_stores/pinecone/delete_docs.ts||examples/src/indexes/vector_stores/pinecone/delete_docs.ts",
          "examples/src/indexes/vector_stores/pinecone/index_docs.ts||examples/src/indexes/vector_stores/pinecone/index_docs.ts",
          "examples/src/indexes/vector_stores/pinecone/mmr.ts||examples/src/indexes/vector_stores/pinecone/mmr.ts",
          "examples/src/indexes/vector_stores/pinecone/query_docs.ts||examples/src/indexes/vector_stores/pinecone/query_docs.ts",
          "examples/src/retrievers/pinecone_self_query.ts||examples/src/retrievers/pinecone_self_query.ts",
          "libs/langchain-pinecone/jest.config.cjs||libs/langchain-pinecone/jest.config.cjs",
          "libs/langchain-pinecone/src/client.ts||libs/langchain-pinecone/src/client.ts",
          "libs/langchain-pinecone/src/embeddings.ts||libs/langchain-pinecone/src/embeddings.ts",
          "libs/langchain-pinecone/src/index.ts||libs/langchain-pinecone/src/index.ts",
          "libs/langchain-pinecone/src/tests/client.int.test.ts||libs/langchain-pinecone/src/tests/client.int.test.ts",
          "libs/langchain-pinecone/src/tests/client.test.ts||libs/langchain-pinecone/src/tests/client.test.ts",
          "libs/langchain-pinecone/src/tests/embeddings.int.test.ts||libs/langchain-pinecone/src/tests/embeddings.int.test.ts",
          "libs/langchain-pinecone/src/tests/embeddings.test.ts||libs/langchain-pinecone/src/tests/embeddings.test.ts",
          "libs/langchain-pinecone/src/tests/translator.int.test.ts||libs/langchain-pinecone/src/tests/translator.int.test.ts",
          "libs/langchain-pinecone/src/vectorstores.ts||libs/langchain-pinecone/src/vectorstores.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/src/embeddings/pinecone.ts||examples/src/embeddings/pinecone.ts": [
          "File: examples/src/embeddings/pinecone.ts -> examples/src/embeddings/pinecone.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { PineconeEmbeddings } from \"@langchain/pinecone\";",
          "3: export const run = async () => {",
          "4:   const model = new PineconeEmbeddings();",
          "5:   console.log({ model }); // Prints out model metadata",
          "6:   const res = await model.embedQuery(",
          "7:     \"What would be a good company name a company that makes colorful socks?\"",
          "8:   );",
          "9:   console.log({ res });",
          "10: };",
          "12: await run();",
          "",
          "---------------"
        ],
        "examples/src/indexes/vector_stores/pinecone/delete_docs.ts||examples/src/indexes/vector_stores/pinecone/delete_docs.ts": [
          "File: examples/src/indexes/vector_stores/pinecone/delete_docs.ts -> examples/src/indexes/vector_stores/pinecone/delete_docs.ts"
        ],
        "examples/src/indexes/vector_stores/pinecone/index_docs.ts||examples/src/indexes/vector_stores/pinecone/index_docs.ts": [
          "File: examples/src/indexes/vector_stores/pinecone/index_docs.ts -> examples/src/indexes/vector_stores/pinecone/index_docs.ts"
        ],
        "examples/src/indexes/vector_stores/pinecone/mmr.ts||examples/src/indexes/vector_stores/pinecone/mmr.ts": [
          "File: examples/src/indexes/vector_stores/pinecone/mmr.ts -> examples/src/indexes/vector_stores/pinecone/mmr.ts"
        ],
        "examples/src/indexes/vector_stores/pinecone/query_docs.ts||examples/src/indexes/vector_stores/pinecone/query_docs.ts": [
          "File: examples/src/indexes/vector_stores/pinecone/query_docs.ts -> examples/src/indexes/vector_stores/pinecone/query_docs.ts"
        ],
        "examples/src/retrievers/pinecone_self_query.ts||examples/src/retrievers/pinecone_self_query.ts": [
          "File: examples/src/retrievers/pinecone_self_query.ts -> examples/src/retrievers/pinecone_self_query.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: }",
          "96: const pinecone = new Pinecone();",
          "",
          "[Removed Lines]",
          "86: if (",
          "87:   !process.env.PINECONE_API_KEY ||",
          "88:   !process.env.PINECONE_ENVIRONMENT ||",
          "89:   !process.env.PINECONE_INDEX",
          "90: ) {",
          "91:   throw new Error(",
          "92:     \"PINECONE_ENVIRONMENT and PINECONE_API_KEY and PINECONE_INDEX must be set\"",
          "93:   );",
          "",
          "[Added Lines]",
          "86: if (!process.env.PINECONE_API_KEY || !process.env.PINECONE_INDEX) {",
          "87:   throw new Error(\"PINECONE_API_KEY and PINECONE_INDEX must be set\");",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/jest.config.cjs||libs/langchain-pinecone/jest.config.cjs": [
          "File: libs/langchain-pinecone/jest.config.cjs -> libs/langchain-pinecone/jest.config.cjs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:   setupFiles: [\"dotenv/config\"],",
          "18:   testTimeout: 20_000,",
          "19:   passWithNoTests: true,",
          "",
          "[Removed Lines]",
          "20:   collectCoverageFrom: [\"src/**/*.ts\"]",
          "21: };",
          "",
          "[Added Lines]",
          "20:   collectCoverageFrom: [\"src/**/*.ts\"],",
          "21:   };",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/client.ts||libs/langchain-pinecone/src/client.ts": [
          "File: libs/langchain-pinecone/src/client.ts -> libs/langchain-pinecone/src/client.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Pinecone, PineconeConfiguration } from \"@pinecone-database/pinecone\";",
          "2: import { getEnvironmentVariable } from \"@langchain/core/utils/env\";",
          "4: export function getPineconeClient(config?: PineconeConfiguration): Pinecone {",
          "5:   if (",
          "6:     getEnvironmentVariable(\"PINECONE_API_KEY\") === undefined ||",
          "7:     getEnvironmentVariable(\"PINECONE_API_KEY\") === \"\"",
          "8:   ) {",
          "9:     throw new Error(\"PINECONE_API_KEY must be set in environment\");",
          "10:   }",
          "11:   if (!config) {",
          "12:     return new Pinecone();",
          "13:   } else {",
          "14:     return new Pinecone(config);",
          "15:   }",
          "16: }",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/embeddings.ts||libs/langchain-pinecone/src/embeddings.ts": [
          "File: libs/langchain-pinecone/src/embeddings.ts -> libs/langchain-pinecone/src/embeddings.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import { Embeddings, type EmbeddingsParams } from \"@langchain/core/embeddings\";",
          "4: import {",
          "5:   EmbeddingsList,",
          "6:   Pinecone,",
          "7:   PineconeConfiguration,",
          "8: } from \"@pinecone-database/pinecone\";",
          "9: import { getPineconeClient } from \"./client.js\";",
          "17: export interface PineconeEmbeddingsParams extends EmbeddingsParams {",
          "18:   model?: string; // Model to use to generate embeddings",
          "19:   params?: Record<string, string>; // Additional parameters to pass to the embedding model",
          "20: }",
          "23: export class PineconeEmbeddings",
          "24:   extends Embeddings",
          "25:   implements PineconeEmbeddingsParams",
          "26: {",
          "27:   client: Pinecone;",
          "29:   model: string;",
          "31:   params: Record<string, string>;",
          "33:   constructor(",
          "34:     fields?: Partial<PineconeEmbeddingsParams> & Partial<PineconeConfiguration>",
          "35:   ) {",
          "36:     const defaultFields = { maxRetries: 3, ...fields };",
          "37:     super(defaultFields);",
          "39:     if (defaultFields.apiKey) {",
          "40:       const config = {",
          "41:         apiKey: defaultFields.apiKey,",
          "42:         controllerHostUrl: defaultFields.controllerHostUrl,",
          "43:         fetchApi: defaultFields.fetchApi,",
          "44:         additionalHeaders: defaultFields.additionalHeaders,",
          "45:         sourceTag: defaultFields.sourceTag,",
          "46:       } as PineconeConfiguration;",
          "47:       this.client = getPineconeClient(config);",
          "48:     } else {",
          "49:       this.client = getPineconeClient();",
          "50:     }",
          "52:     if (!defaultFields.model) {",
          "53:       this.model = \"multilingual-e5-large\";",
          "54:     } else {",
          "55:       this.model = defaultFields.model;",
          "56:     }",
          "58:     const defaultParams = { inputType: \"passage\" };",
          "60:     if (defaultFields.params) {",
          "61:       this.params = { ...defaultFields.params, ...defaultParams };",
          "62:     } else {",
          "63:       this.params = defaultParams;",
          "64:     }",
          "65:   }",
          "71:   async embedDocuments(texts: string[]): Promise<number[][]> {",
          "72:     if (texts.length === 0) {",
          "73:       throw new Error(",
          "74:         \"At least one document is required to generate embeddings\"",
          "75:       );",
          "76:     }",
          "78:     let embeddings;",
          "79:     if (this.params) {",
          "80:       embeddings = await this.caller.call(async () => {",
          "81:         const result: EmbeddingsList = await this.client.inference.embed(",
          "82:           this.model,",
          "83:           texts,",
          "84:           this.params",
          "85:         );",
          "86:         return result;",
          "87:       });",
          "88:     } else {",
          "89:       embeddings = await this.caller.call(async () => {",
          "90:         const result: EmbeddingsList = await this.client.inference.embed(",
          "91:           this.model,",
          "92:           texts,",
          "93:           {}",
          "94:         );",
          "95:         return result;",
          "96:       });",
          "97:     }",
          "99:     const embeddingsList: number[][] = [];",
          "101:     for (let i = 0; i < embeddings.length; i += 1) {",
          "102:       if (embeddings[i].values) {",
          "103:         embeddingsList.push(embeddings[i].values as number[]);",
          "104:       }",
          "105:     }",
          "106:     return embeddingsList;",
          "107:   }",
          "112:   async embedQuery(text: string): Promise<number[]> {",
          "114:     this.params.inputType = \"query\";",
          "116:     if (!text) {",
          "117:       throw new Error(\"No query passed for which to generate embeddings\");",
          "118:     }",
          "119:     let embeddings: EmbeddingsList;",
          "120:     if (this.params) {",
          "121:       embeddings = await this.caller.call(async () => {",
          "122:         return await this.client.inference.embed(",
          "123:           this.model,",
          "124:           [text],",
          "125:           this.params",
          "126:         );",
          "127:       });",
          "128:     } else {",
          "129:       embeddings = await this.caller.call(async () => {",
          "130:         return await this.client.inference.embed(this.model, [text], {});",
          "131:       });",
          "132:     }",
          "133:     if (embeddings[0].values) {",
          "134:       return embeddings[0].values as number[];",
          "135:     } else {",
          "136:       return [];",
          "137:     }",
          "138:   }",
          "139: }",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/index.ts||libs/langchain-pinecone/src/index.ts": [
          "File: libs/langchain-pinecone/src/index.ts -> libs/langchain-pinecone/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: export * from \"./vectorstores.js\";",
          "2: export * from \"./translator.js\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: export * from \"./embeddings.js\";",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/tests/client.int.test.ts||libs/langchain-pinecone/src/tests/client.int.test.ts": [
          "File: libs/langchain-pinecone/src/tests/client.int.test.ts -> libs/langchain-pinecone/src/tests/client.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Pinecone } from \"@pinecone-database/pinecone\";",
          "2: import { getPineconeClient } from \"../client.js\";",
          "4: describe(\"Tests for getPineconeClient\", () => {",
          "5:   test(\"Happy path for getPineconeClient with and without `config` obj passed\", async () => {",
          "6:     const client = getPineconeClient();",
          "7:     expect(client).toBeInstanceOf(Pinecone);",
          "8:     expect(client).toHaveProperty(\"config\"); // Config is always set to *at least* the user's api key",
          "10:     const clientWithConfig = getPineconeClient({",
          "12:       apiKey: process.env.PINECONE_API_KEY!,",
          "13:       additionalHeaders: { header: \"value\" },",
          "14:     });",
          "15:     expect(clientWithConfig).toBeInstanceOf(Pinecone);",
          "16:     expect(client).toHaveProperty(\"config\"); // Unfortunately cannot assert on contents of config b/c it's a private",
          "18:   });",
          "20:   test(\"Unhappy path: expect getPineconeClient to throw error if reset PINECONE_API_KEY to empty string\", async () => {",
          "22:     const originalApiKey = process.env.PINECONE_API_KEY;",
          "23:     try {",
          "25:       process.env.PINECONE_API_KEY = \"\";",
          "26:       const errorThrown = async () => {",
          "27:         getPineconeClient();",
          "28:       };",
          "29:       await expect(errorThrown).rejects.toThrow(Error);",
          "30:       await expect(errorThrown).rejects.toThrow(",
          "31:         \"PINECONE_API_KEY must be set in environment\"",
          "32:       );",
          "33:     } finally {",
          "36:       process.env.PINECONE_API_KEY = originalApiKey;",
          "37:     }",
          "38:   });",
          "39: });",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/tests/client.test.ts||libs/langchain-pinecone/src/tests/client.test.ts": [
          "File: libs/langchain-pinecone/src/tests/client.test.ts -> libs/langchain-pinecone/src/tests/client.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { getPineconeClient } from \"../client.js\";",
          "3: describe(\"Tests for getPineconeClient\", () => {",
          "4:   test(\"Confirm getPineconeClient throws error when PINECONE_API_KEY is not set\", async () => {",
          "6:     process.env.PINECONE_API_KEY = \"\";",
          "7:     const errorThrown = async () => {",
          "8:       getPineconeClient();",
          "9:     };",
          "10:     await expect(errorThrown).rejects.toThrow(Error);",
          "11:     await expect(errorThrown).rejects.toThrow(",
          "12:       \"PINECONE_API_KEY must be set in environment\"",
          "13:     );",
          "14:   });",
          "15: });",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/tests/embeddings.int.test.ts||libs/langchain-pinecone/src/tests/embeddings.int.test.ts": [
          "File: libs/langchain-pinecone/src/tests/embeddings.int.test.ts -> libs/langchain-pinecone/src/tests/embeddings.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { PineconeEmbeddings } from \"../embeddings.js\";",
          "3: describe(\"Integration tests for Pinecone embeddings\", () => {",
          "4:   test(\"Happy path: defaults for both embedDocuments and embedQuery\", async () => {",
          "5:     const model = new PineconeEmbeddings();",
          "6:     expect(model.model).toBe(\"multilingual-e5-large\");",
          "7:     expect(model.params).toEqual({ inputType: \"passage\" });",
          "9:     const docs = [\"hello\", \"world\"];",
          "10:     const embeddings = await model.embedDocuments(docs);",
          "11:     expect(embeddings.length).toBe(docs.length);",
          "13:     const query = \"hello\";",
          "14:     const queryEmbedding = await model.embedQuery(query);",
          "15:     expect(queryEmbedding.length).toBeGreaterThan(0);",
          "16:   });",
          "18:   test(\"Happy path: custom `params` obj passed to embedDocuments and embedQuery\", async () => {",
          "19:     const model = new PineconeEmbeddings({",
          "20:       params: { customParam: \"value\" },",
          "21:     });",
          "22:     expect(model.model).toBe(\"multilingual-e5-large\");",
          "23:     expect(model.params).toEqual({",
          "24:       inputType: \"passage\",",
          "25:       customParam: \"value\",",
          "26:     });",
          "28:     const docs = [\"hello\", \"world\"];",
          "29:     const embeddings = await model.embedDocuments(docs);",
          "30:     expect(embeddings.length).toBe(docs.length);",
          "31:     expect(embeddings[0].length).toBe(1024); // Assert correct dims on random doc",
          "32:     expect(model.model).toBe(\"multilingual-e5-large\");",
          "33:     expect(model.params).toEqual({",
          "34:       inputType: \"passage\", // Maintain default inputType for docs",
          "35:       customParam: \"value\",",
          "36:     });",
          "38:     const query = \"hello\";",
          "39:     const queryEmbedding = await model.embedQuery(query);",
          "40:     expect(model.model).toBe(\"multilingual-e5-large\");",
          "41:     expect(queryEmbedding.length).toBe(1024);",
          "42:     expect(model.params).toEqual({",
          "43:       inputType: \"query\", // Change inputType for query",
          "44:       customParam: \"value\",",
          "45:     });",
          "46:   });",
          "48:   test(\"Unhappy path: embedDocuments and embedQuery throw when empty objs are passed\", async () => {",
          "49:     const model = new PineconeEmbeddings();",
          "50:     await expect(model.embedDocuments([])).rejects.toThrow();",
          "51:     await expect(model.embedQuery(\"\")).rejects.toThrow();",
          "52:   });",
          "54:   test(\"Unhappy path: PineconeEmbeddings throws when invalid model is passed\", async () => {",
          "55:     const model = new PineconeEmbeddings({ model: \"invalid-model\" });",
          "56:     await expect(model.embedDocuments([])).rejects.toThrow();",
          "57:     await expect(model.embedQuery(\"\")).rejects.toThrow();",
          "58:   });",
          "59: });",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/tests/embeddings.test.ts||libs/langchain-pinecone/src/tests/embeddings.test.ts": [
          "File: libs/langchain-pinecone/src/tests/embeddings.test.ts -> libs/langchain-pinecone/src/tests/embeddings.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { PineconeEmbeddings } from \"../embeddings.js\";",
          "3: beforeAll(() => {",
          "5:   process.env.PINECONE_API_KEY = \"test-api-key\";",
          "6: });",
          "8: describe(\"Tests for the PineconeEmbeddings class\", () => {",
          "9:   test(\"Confirm embedDocuments method throws error when an empty array is passed\", async () => {",
          "10:     const model = new PineconeEmbeddings();",
          "11:     const errorThrown = async () => {",
          "12:       await model.embedDocuments([]);",
          "13:     };",
          "14:     await expect(errorThrown).rejects.toThrow(Error);",
          "15:     await expect(errorThrown).rejects.toThrowError(",
          "16:       \"At least one document is required to generate embeddings\"",
          "17:     );",
          "18:   });",
          "20:   test(\"Confirm embedQuery method throws error when an empty string is passed\", async () => {",
          "21:     const model = new PineconeEmbeddings();",
          "22:     const errorThrown = async () => {",
          "23:       await model.embedQuery(\"\");",
          "24:     };",
          "25:     await expect(errorThrown).rejects.toThrow(Error);",
          "26:     await expect(errorThrown).rejects.toThrowError(",
          "27:       \"No query passed for which to generate embeddings\"",
          "28:     );",
          "29:   });",
          "31:   test(\"Confirm instance defaults are set when no args are passed\", async () => {",
          "32:     const model = new PineconeEmbeddings();",
          "33:     expect(model.model).toBe(\"multilingual-e5-large\");",
          "34:     expect(model.params).toEqual({ inputType: \"passage\" });",
          "35:   });",
          "37:   test(\"Confirm instance sets custom model and params when provided\", () => {",
          "38:     const customModel = new PineconeEmbeddings({",
          "39:       model: \"custom-model\",",
          "40:       params: { customParam: \"value\" },",
          "41:     });",
          "42:     expect(customModel.model).toBe(\"custom-model\");",
          "43:     expect(customModel.params).toEqual({",
          "44:       inputType: \"passage\",",
          "45:       customParam: \"value\",",
          "46:     });",
          "47:   });",
          "48: });",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/tests/translator.int.test.ts||libs/langchain-pinecone/src/tests/translator.int.test.ts": [
          "File: libs/langchain-pinecone/src/tests/translator.int.test.ts -> libs/langchain-pinecone/src/tests/translator.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:       },",
          "110:     ];",
          "120:     }",
          "122:     const embeddings = new OpenAIEmbeddings();",
          "",
          "[Removed Lines]",
          "112:     if (",
          "113:       !process.env.PINECONE_API_KEY ||",
          "114:       !process.env.PINECONE_ENVIRONMENT ||",
          "115:       !testIndexName",
          "116:     ) {",
          "117:       throw new Error(",
          "118:         \"PINECONE_ENVIRONMENT and PINECONE_API_KEY and PINECONE_INDEX must be set\"",
          "119:       );",
          "",
          "[Added Lines]",
          "112:     if (!process.env.PINECONE_API_KEY || !testIndexName) {",
          "113:       throw new Error(\"PINECONE_API_KEY and PINECONE_INDEX must be set\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:       },",
          "269:     ];",
          "279:     }",
          "281:     const embeddings = new OpenAIEmbeddings();",
          "",
          "[Removed Lines]",
          "271:     if (",
          "272:       !process.env.PINECONE_API_KEY ||",
          "273:       !process.env.PINECONE_ENVIRONMENT ||",
          "274:       !testIndexName",
          "275:     ) {",
          "276:       throw new Error(",
          "277:         \"PINECONE_ENVIRONMENT and PINECONE_API_KEY and PINECONE_INDEX must be set\"",
          "278:       );",
          "",
          "[Added Lines]",
          "265:     if (!process.env.PINECONE_API_KEY || !testIndexName) {",
          "266:       throw new Error(\"PINECONE_API_KEY and PINECONE_INDEX must be set\");",
          "",
          "---------------"
        ],
        "libs/langchain-pinecone/src/vectorstores.ts||libs/langchain-pinecone/src/vectorstores.ts": [
          "File: libs/langchain-pinecone/src/vectorstores.ts -> libs/langchain-pinecone/src/vectorstores.ts"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "9377:   languageName: node",
          "9378:   linkType: hard",
          "9396: \"@elastic/elasticsearch@npm:^8.4.0\":",
          "9397:   version: 8.8.1",
          "9398:   resolution: \"@elastic/elasticsearch@npm:8.8.1\"",
          "",
          "[Removed Lines]",
          "9380: \"@edge-runtime/primitives@npm:4.0.2\":",
          "9381:   version: 4.0.2",
          "9382:   resolution: \"@edge-runtime/primitives@npm:4.0.2\"",
          "9383:   checksum: 66ccdadb8bcb02bf7d75d75bc6a611c2d515b09818b8cc4f524944aba58b735aff8a76ba52981a04f89fe616f801d1d947a9b1637a201a3b32f6eca74a6f7001",
          "9384:   languageName: node",
          "9385:   linkType: hard",
          "9387: \"@edge-runtime/types@npm:^2.2.3\":",
          "9388:   version: 2.2.4",
          "9389:   resolution: \"@edge-runtime/types@npm:2.2.4\"",
          "9390:   dependencies:",
          "9391:     \"@edge-runtime/primitives\": 4.0.2",
          "9392:   checksum: 51b5b1cf8f462dd77038357e1b72737e0e8f37c6e7aa47e0b9cd3aebc81004ad5e41c697d14a66171e5acfddf8bf5a5fc6e76c01dde60daccb5703310a4c4446",
          "9393:   languageName: node",
          "9394:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11530:     \"@neondatabase/serverless\": ^0.9.1",
          "11531:     \"@notionhq/client\": ^2.2.10",
          "11532:     \"@opensearch-project/opensearch\": ^2.2.0",
          "11534:     \"@planetscale/database\": ^1.8.0",
          "11535:     \"@premai/prem-sdk\": ^0.3.25",
          "11536:     \"@qdrant/js-client-rest\": ^1.8.2",
          "",
          "[Removed Lines]",
          "11533:     \"@pinecone-database/pinecone\": ^1.1.0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12608:     \"@langchain/core\": \"workspace:*\"",
          "12609:     \"@langchain/openai\": \"workspace:*\"",
          "12610:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12612:     \"@swc/core\": ^1.3.90",
          "12613:     \"@swc/jest\": ^0.2.29",
          "12614:     \"@tsconfig/recommended\": ^1.0.3",
          "",
          "[Removed Lines]",
          "12611:     \"@pinecone-database/pinecone\": ^3.0.0 || ^4.0.0",
          "",
          "[Added Lines]",
          "12594:     \"@pinecone-database/pinecone\": ^4.0.0",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "14130:   languageName: node",
          "14131:   linkType: hard",
          "14149:   version: 4.0.0",
          "14150:   resolution: \"@pinecone-database/pinecone@npm:4.0.0\"",
          "14151:   dependencies:",
          "",
          "[Removed Lines]",
          "14133: \"@pinecone-database/pinecone@npm:^1.1.0\":",
          "14134:   version: 1.1.0",
          "14135:   resolution: \"@pinecone-database/pinecone@npm:1.1.0\"",
          "14136:   dependencies:",
          "14137:     \"@edge-runtime/types\": ^2.2.3",
          "14138:     \"@sinclair/typebox\": ^0.29.0",
          "14139:     \"@types/node\": ^18.11.17",
          "14140:     ajv: ^8.12.0",
          "14141:     cross-fetch: ^3.1.5",
          "14142:     encoding: ^0.1.13",
          "14143:     typescript: ^4.9.4",
          "14144:   checksum: 5ff066c23006c6ad8eb3ae5add5aa2633adacf48c539a498f6d97798fb9640254a2ede99f7e47aaff3d885e3df5168ed193990d846acd9bebded7140f18c8eb1",
          "14145:   languageName: node",
          "14146:   linkType: hard",
          "14148: \"@pinecone-database/pinecone@npm:^3.0.0 || ^4.0.0, @pinecone-database/pinecone@npm:^4.0.0\":",
          "",
          "[Added Lines]",
          "14116: \"@pinecone-database/pinecone@npm:^4.0.0\":",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "14822:   languageName: node",
          "14823:   linkType: hard",
          "14832: \"@sindresorhus/is@npm:^0.14.0\":",
          "14833:   version: 0.14.0",
          "14834:   resolution: \"@sindresorhus/is@npm:0.14.0\"",
          "",
          "[Removed Lines]",
          "14825: \"@sinclair/typebox@npm:^0.29.0\":",
          "14826:   version: 0.29.6",
          "14827:   resolution: \"@sinclair/typebox@npm:0.29.6\"",
          "14828:   checksum: 02c2ee9e8bcb4e03a2497fc208a5a2ae4f4991347e6f2b2a217027b33eb8ca2bc74e80bfb2654da537453e9e5c25d59dbad2d32d4fe47ffec357330bf343bf7a",
          "14829:   languageName: node",
          "14830:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "19363:   languageName: node",
          "19364:   linkType: hard",
          "19373: \"@types/node@npm:^18.11.18\":",
          "19374:   version: 18.16.19",
          "19375:   resolution: \"@types/node@npm:18.16.19\"",
          "",
          "[Removed Lines]",
          "19366: \"@types/node@npm:^18.11.17\":",
          "19367:   version: 18.18.4",
          "19368:   resolution: \"@types/node@npm:18.18.4\"",
          "19369:   checksum: 4901e91c4cc479bb58acbcd79236a97a0ad6db4a53cb1f4ba4cf32af15324c61b16faa6e31c1b09bf538a20feb5f5274239157ce5237f5741db0b9ab71e69c52",
          "19370:   languageName: node",
          "19371:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "20958:   languageName: node",
          "20959:   linkType: hard",
          "20962:   version: 8.12.0",
          "20963:   resolution: \"ajv@npm:8.12.0\"",
          "20964:   dependencies:",
          "",
          "[Removed Lines]",
          "20961: \"ajv@npm:^8.0.0, ajv@npm:^8.12.0, ajv@npm:^8.6.3, ajv@npm:^8.9.0\":",
          "",
          "[Added Lines]",
          "20915: \"ajv@npm:^8.0.0, ajv@npm:^8.6.3, ajv@npm:^8.9.0\":",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "475288c9ecfb40b281fe5d439a540a99543c07cb",
      "candidate_info": {
        "commit_hash": "475288c9ecfb40b281fe5d439a540a99543c07cb",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/475288c9ecfb40b281fe5d439a540a99543c07cb",
        "files": [
          "libs/langchain-google-common/package.json",
          "libs/langchain-google-gauth/package.json",
          "libs/langchain-google-vertexai-web/package.json",
          "libs/langchain-google-vertexai/package.json",
          "libs/langchain-google-webauth/package.json",
          "yarn.lock"
        ],
        "message": "release(google): 0.1.4 (#7362)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "12398:   languageName: unknown",
          "12399:   linkType: soft",
          "12402:   version: 0.0.0-use.local",
          "12403:   resolution: \"@langchain/google-common@workspace:libs/langchain-google-common\"",
          "12404:   dependencies:",
          "",
          "[Removed Lines]",
          "12401: \"@langchain/google-common@^0.1.0, @langchain/google-common@workspace:*, @langchain/google-common@workspace:libs/langchain-google-common, @langchain/google-common@~0.1.3\":",
          "",
          "[Added Lines]",
          "12401: \"@langchain/google-common@^0.1.0, @langchain/google-common@workspace:*, @langchain/google-common@workspace:libs/langchain-google-common, @langchain/google-common@~0.1.4\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12433:   languageName: unknown",
          "12434:   linkType: soft",
          "12437:   version: 0.0.0-use.local",
          "12438:   resolution: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth\"",
          "12439:   dependencies:",
          "12440:     \"@jest/globals\": ^29.5.0",
          "12441:     \"@langchain/core\": \"workspace:*\"",
          "12443:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12444:     \"@swc/core\": ^1.3.90",
          "12445:     \"@swc/jest\": ^0.2.29",
          "",
          "[Removed Lines]",
          "12436: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth, @langchain/google-gauth@~0.1.3\":",
          "12442:     \"@langchain/google-common\": ~0.1.3",
          "",
          "[Added Lines]",
          "12436: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth, @langchain/google-gauth@~0.1.4\":",
          "12442:     \"@langchain/google-common\": ~0.1.4",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12512:     \"@jest/globals\": ^29.5.0",
          "12513:     \"@langchain/core\": \"workspace:*\"",
          "12514:     \"@langchain/google-common\": ^0.1.0",
          "12516:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12517:     \"@langchain/standard-tests\": 0.0.0",
          "12518:     \"@swc/core\": ^1.3.90",
          "",
          "[Removed Lines]",
          "12515:     \"@langchain/google-webauth\": ~0.1.3",
          "",
          "[Added Lines]",
          "12515:     \"@langchain/google-webauth\": ~0.1.4",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12548:     \"@jest/globals\": ^29.5.0",
          "12549:     \"@langchain/core\": \"workspace:*\"",
          "12550:     \"@langchain/google-common\": ^0.1.0",
          "12552:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12553:     \"@langchain/standard-tests\": 0.0.0",
          "12554:     \"@swc/core\": ^1.3.90",
          "",
          "[Removed Lines]",
          "12551:     \"@langchain/google-gauth\": ~0.1.3",
          "",
          "[Added Lines]",
          "12551:     \"@langchain/google-gauth\": ~0.1.4",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12577:   languageName: unknown",
          "12578:   linkType: soft",
          "12581:   version: 0.0.0-use.local",
          "12582:   resolution: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth\"",
          "12583:   dependencies:",
          "12584:     \"@jest/globals\": ^29.5.0",
          "12585:     \"@langchain/core\": \"workspace:*\"",
          "12587:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12588:     \"@swc/core\": ^1.3.90",
          "12589:     \"@swc/jest\": ^0.2.29",
          "",
          "[Removed Lines]",
          "12580: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth, @langchain/google-webauth@~0.1.3\":",
          "12586:     \"@langchain/google-common\": ~0.1.3",
          "",
          "[Added Lines]",
          "12580: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth, @langchain/google-webauth@~0.1.4\":",
          "12586:     \"@langchain/google-common\": ~0.1.4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7e7df50bbf6dbf27bcf9bfb926052a7aa6ecfe54",
      "candidate_info": {
        "commit_hash": "7e7df50bbf6dbf27bcf9bfb926052a7aa6ecfe54",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/7e7df50bbf6dbf27bcf9bfb926052a7aa6ecfe54",
        "files": [
          "docs/api_refs/blacklisted-entrypoints.json",
          "docs/core_docs/docs/integrations/text_embedding/transformers.mdx",
          "environment_tests/test-exports-cjs/src/import.js",
          "environment_tests/test-exports-cjs/src/index.mjs",
          "environment_tests/test-exports-cjs/src/index.ts",
          "environment_tests/test-exports-cjs/src/require.js",
          "environment_tests/test-exports-esm/src/import.cjs",
          "environment_tests/test-exports-esm/src/index.js",
          "environment_tests/test-exports-esm/src/index.ts",
          "environment_tests/test-exports-esm/src/require.cjs",
          "examples/src/models/embeddings/hf_transformers.ts",
          "examples/src/use_cases/local_retrieval_qa/chain.ts",
          "examples/src/use_cases/local_retrieval_qa/load_documents.ts",
          "examples/src/use_cases/local_retrieval_qa/qa_chain.ts",
          "libs/langchain-community/.gitignore",
          "libs/langchain-community/langchain.config.js",
          "libs/langchain-community/package.json",
          "libs/langchain-community/src/embeddings/hf_transformers.ts",
          "libs/langchain-community/src/embeddings/huggingface_transformers.ts",
          "libs/langchain-community/src/embeddings/tests/huggingface_transformers.int.test.ts",
          "libs/langchain-community/src/load/import_constants.ts",
          "yarn.lock"
        ],
        "message": "fix(community): Migrate xenova transformers lib to huggingface (#7431)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
        "before_after_code_files": [
          "environment_tests/test-exports-cjs/src/import.js||environment_tests/test-exports-cjs/src/import.js",
          "environment_tests/test-exports-cjs/src/index.mjs||environment_tests/test-exports-cjs/src/index.mjs",
          "environment_tests/test-exports-cjs/src/index.ts||environment_tests/test-exports-cjs/src/index.ts",
          "environment_tests/test-exports-cjs/src/require.js||environment_tests/test-exports-cjs/src/require.js",
          "environment_tests/test-exports-esm/src/import.cjs||environment_tests/test-exports-esm/src/import.cjs",
          "environment_tests/test-exports-esm/src/index.js||environment_tests/test-exports-esm/src/index.js",
          "environment_tests/test-exports-esm/src/index.ts||environment_tests/test-exports-esm/src/index.ts",
          "environment_tests/test-exports-esm/src/require.cjs||environment_tests/test-exports-esm/src/require.cjs",
          "examples/src/models/embeddings/hf_transformers.ts||examples/src/models/embeddings/hf_transformers.ts",
          "examples/src/use_cases/local_retrieval_qa/chain.ts||examples/src/use_cases/local_retrieval_qa/chain.ts",
          "examples/src/use_cases/local_retrieval_qa/load_documents.ts||examples/src/use_cases/local_retrieval_qa/load_documents.ts",
          "examples/src/use_cases/local_retrieval_qa/qa_chain.ts||examples/src/use_cases/local_retrieval_qa/qa_chain.ts",
          "libs/langchain-community/langchain.config.js||libs/langchain-community/langchain.config.js",
          "libs/langchain-community/src/embeddings/hf_transformers.ts||libs/langchain-community/src/embeddings/hf_transformers.ts",
          "libs/langchain-community/src/embeddings/huggingface_transformers.ts||libs/langchain-community/src/embeddings/huggingface_transformers.ts",
          "libs/langchain-community/src/embeddings/tests/hf_transformers.int.test.ts||libs/langchain-community/src/embeddings/tests/huggingface_transformers.int.test.ts",
          "libs/langchain-community/src/load/import_constants.ts||libs/langchain-community/src/load/import_constants.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "environment_tests/test-exports-cjs/src/import.js||environment_tests/test-exports-cjs/src/import.js": [
          "File: environment_tests/test-exports-cjs/src/import.js -> environment_tests/test-exports-cjs/src/import.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   const { OpenAI } = await import(\"@langchain/openai\");",
          "4:   const { LLMChain } = await import(\"langchain/chains\");",
          "5:   const { ChatPromptTemplate } = await import(\"@langchain/core/prompts\");",
          "7:   const { Document } = await import(\"@langchain/core/documents\");",
          "8:   const { MemoryVectorStore } = await import(\"langchain/vectorstores/memory\");",
          "",
          "[Removed Lines]",
          "6:   const { HuggingFaceTransformersEmbeddings } = await import(\"@langchain/community/embeddings/hf_transformers\");",
          "",
          "[Added Lines]",
          "6:   const { HuggingFaceTransformersEmbeddings } = await import(\"@langchain/community/embeddings/huggingface_transformers\");",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-cjs/src/index.mjs||environment_tests/test-exports-cjs/src/index.mjs": [
          "File: environment_tests/test-exports-cjs/src/index.mjs -> environment_tests/test-exports-cjs/src/index.mjs",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { LLMChain } from \"langchain/chains\";",
          "4: import { MemoryVectorStore } from \"langchain/vectorstores/memory\";",
          "5: import { ChatPromptTemplate } from \"@langchain/core/prompts\";",
          "7: import { Document } from \"@langchain/core/documents\";",
          "",
          "[Removed Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-cjs/src/index.ts||environment_tests/test-exports-cjs/src/index.ts": [
          "File: environment_tests/test-exports-cjs/src/index.ts -> environment_tests/test-exports-cjs/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { LLMChain } from \"langchain/chains\";",
          "4: import { ChatPromptTemplate } from \"@langchain/core/prompts\";",
          "5: import { MemoryVectorStore } from \"langchain/vectorstores/memory\";",
          "7: import { Document } from \"@langchain/core/documents\";",
          "9: async function test(useAzure: boolean = false) {",
          "",
          "[Removed Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         openAIApiKey: \"sk-XXXX\",",
          "26:       };",
          "30:   await vs.addVectors(",
          "31:     [",
          "",
          "[Removed Lines]",
          "28:   const vs = new MemoryVectorStore(new HuggingFaceTransformersEmbeddings({ model: \"Xenova/all-MiniLM-L6-v2\" }));",
          "",
          "[Added Lines]",
          "28:   const vs = new MemoryVectorStore(",
          "29:     new HuggingFaceTransformersEmbeddings({ model: \"Xenova/all-MiniLM-L6-v2\" })",
          "30:   );",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-cjs/src/require.js||environment_tests/test-exports-cjs/src/require.js": [
          "File: environment_tests/test-exports-cjs/src/require.js -> environment_tests/test-exports-cjs/src/require.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: const { LLMChain } = require(\"langchain/chains\");",
          "4: const { ChatPromptTemplate } = require(\"@langchain/core/prompts\");",
          "5: const { MemoryVectorStore } = require(\"langchain/vectorstores/memory\");",
          "7: const { Document } = require(\"@langchain/core/documents\");",
          "9: async function test() {",
          "",
          "[Removed Lines]",
          "6: const { HuggingFaceTransformersEmbeddings } = require(\"@langchain/community/embeddings/hf_transformers\");",
          "",
          "[Added Lines]",
          "6: const { HuggingFaceTransformersEmbeddings } = require(\"@langchain/community/embeddings/huggingface_transformers\");",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-esm/src/import.cjs||environment_tests/test-exports-esm/src/import.cjs": [
          "File: environment_tests/test-exports-esm/src/import.cjs -> environment_tests/test-exports-esm/src/import.cjs",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:   const { LLMChain } = await import(\"langchain/chains\");",
          "5:   const { ChatPromptTemplate } = await import(\"@langchain/core/prompts\");",
          "6:   const { MemoryVectorStore } = await import(\"langchain/vectorstores/memory\");",
          "8:   const { Document } = await import(\"@langchain/core/documents\");",
          "",
          "[Removed Lines]",
          "7:   const { HuggingFaceTransformersEmbeddings } = await import(\"@langchain/community/embeddings/hf_transformers\");",
          "",
          "[Added Lines]",
          "7:   const { HuggingFaceTransformersEmbeddings } = await import(\"@langchain/community/embeddings/huggingface_transformers\");",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-esm/src/index.js||environment_tests/test-exports-esm/src/index.js": [
          "File: environment_tests/test-exports-esm/src/index.js -> environment_tests/test-exports-esm/src/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { LLMChain } from \"langchain/chains\";",
          "4: import { ChatPromptTemplate } from \"@langchain/core/prompts\";",
          "5: import { MemoryVectorStore } from \"langchain/vectorstores/memory\";",
          "7: import { Document } from \"@langchain/core/documents\";",
          "8: import { CallbackManager } from \"@langchain/core/callbacks/manager\";",
          "",
          "[Removed Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-esm/src/index.ts||environment_tests/test-exports-esm/src/index.ts": [
          "File: environment_tests/test-exports-esm/src/index.ts -> environment_tests/test-exports-esm/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { LLMChain } from \"langchain/chains\";",
          "4: import { ChatPromptTemplate } from \"@langchain/core/prompts\";",
          "5: import { MemoryVectorStore } from \"langchain/vectorstores/memory\";",
          "7: import { Document } from \"@langchain/core/documents\";",
          "9: async function test(useAzure: boolean = false) {",
          "",
          "[Removed Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:         openAIApiKey: \"sk-XXXX\",",
          "25:       };",
          "29:   await vs.addVectors(",
          "30:     [",
          "",
          "[Removed Lines]",
          "27:   const vs = new MemoryVectorStore(new HuggingFaceTransformersEmbeddings({ model: \"Xenova/all-MiniLM-L6-v2\", }));",
          "",
          "[Added Lines]",
          "27:   const vs = new MemoryVectorStore(",
          "28:     new HuggingFaceTransformersEmbeddings({ model: \"Xenova/all-MiniLM-L6-v2\" })",
          "29:   );",
          "",
          "---------------"
        ],
        "environment_tests/test-exports-esm/src/require.cjs||environment_tests/test-exports-esm/src/require.cjs": [
          "File: environment_tests/test-exports-esm/src/require.cjs -> environment_tests/test-exports-esm/src/require.cjs",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: const { LLMChain } = require(\"langchain/chains\");",
          "4: const { ChatPromptTemplate } = require(\"@langchain/core/prompts\");",
          "5: const { MemoryVectorStore } = require(\"langchain/vectorstores/memory\");",
          "7: const { Document } = require(\"@langchain/core/documents\");",
          "9: async function test() {",
          "",
          "[Removed Lines]",
          "6: const { HuggingFaceTransformersEmbeddings } = require(\"@langchain/community/embeddings/hf_transformers\");",
          "",
          "[Added Lines]",
          "6: const { HuggingFaceTransformersEmbeddings } = require(\"@langchain/community/embeddings/huggingface_transformers\");",
          "",
          "---------------"
        ],
        "examples/src/models/embeddings/hf_transformers.ts||examples/src/models/embeddings/hf_transformers.ts": [
          "File: examples/src/models/embeddings/hf_transformers.ts -> examples/src/models/embeddings/hf_transformers.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: const model = new HuggingFaceTransformersEmbeddings({",
          "4:   model: \"Xenova/all-MiniLM-L6-v2\",",
          "",
          "[Removed Lines]",
          "1: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "1: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "examples/src/use_cases/local_retrieval_qa/chain.ts||examples/src/use_cases/local_retrieval_qa/chain.ts": [
          "File: examples/src/use_cases/local_retrieval_qa/chain.ts -> examples/src/use_cases/local_retrieval_qa/chain.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { RecursiveCharacterTextSplitter } from \"@langchain/textsplitters\";",
          "3: import { HNSWLib } from \"@langchain/community/vectorstores/hnswlib\";",
          "4: import { Ollama } from \"@langchain/community/llms/ollama\";",
          "6: import { formatDocumentsAsString } from \"langchain/util/document\";",
          "7: import { PromptTemplate } from \"@langchain/core/prompts\";",
          "8: import {",
          "",
          "[Removed Lines]",
          "5: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "5: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "examples/src/use_cases/local_retrieval_qa/load_documents.ts||examples/src/use_cases/local_retrieval_qa/load_documents.ts": [
          "File: examples/src/use_cases/local_retrieval_qa/load_documents.ts -> examples/src/use_cases/local_retrieval_qa/load_documents.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { CheerioWebBaseLoader } from \"@langchain/community/document_loaders/web/cheerio\";",
          "2: import { RecursiveCharacterTextSplitter } from \"@langchain/textsplitters\";",
          "3: import { HNSWLib } from \"@langchain/community/vectorstores/hnswlib\";",
          "6: const loader = new CheerioWebBaseLoader(",
          "7:   \"https://lilianweng.github.io/posts/2023-06-23-agent/\"",
          "",
          "[Removed Lines]",
          "4: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "4: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "examples/src/use_cases/local_retrieval_qa/qa_chain.ts||examples/src/use_cases/local_retrieval_qa/qa_chain.ts": [
          "File: examples/src/use_cases/local_retrieval_qa/qa_chain.ts -> examples/src/use_cases/local_retrieval_qa/qa_chain.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { RecursiveCharacterTextSplitter } from \"@langchain/textsplitters\";",
          "4: import { HNSWLib } from \"@langchain/community/vectorstores/hnswlib\";",
          "5: import { Ollama } from \"@langchain/community/llms/ollama\";",
          "7: import { PromptTemplate } from \"@langchain/core/prompts\";",
          "9: const loader = new CheerioWebBaseLoader(",
          "",
          "[Removed Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";",
          "",
          "[Added Lines]",
          "6: import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/huggingface_transformers\";",
          "",
          "---------------"
        ],
        "libs/langchain-community/langchain.config.js||libs/langchain-community/langchain.config.js": [
          "File: libs/langchain-community/langchain.config.js -> libs/langchain-community/langchain.config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     \"embeddings/gradient_ai\": \"embeddings/gradient_ai\",",
          "80:     \"embeddings/hf\": \"embeddings/hf\",",
          "81:     \"embeddings/hf_transformers\": \"embeddings/hf_transformers\",",
          "82:     \"embeddings/ibm\": \"embeddings/ibm\",",
          "83:     \"embeddings/jina\": \"embeddings/jina\",",
          "84:     \"embeddings/llama_cpp\": \"embeddings/llama_cpp\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     \"embeddings/huggingface_transformers\": \"embeddings/huggingface_transformers\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355:     \"embeddings/tensorflow\",",
          "356:     \"embeddings/hf\",",
          "357:     \"embeddings/hf_transformers\",",
          "358:     \"embeddings/ibm\",",
          "359:     \"embeddings/jina\",",
          "360:     \"embeddings/llama_cpp\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:     \"embeddings/huggingface_transformers\",",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/embeddings/hf_transformers.ts||libs/langchain-community/src/embeddings/hf_transformers.ts": [
          "File: libs/langchain-community/src/embeddings/hf_transformers.ts -> libs/langchain-community/src/embeddings/hf_transformers.ts"
        ],
        "libs/langchain-community/src/embeddings/huggingface_transformers.ts||libs/langchain-community/src/embeddings/huggingface_transformers.ts": [
          "File: libs/langchain-community/src/embeddings/huggingface_transformers.ts -> libs/langchain-community/src/embeddings/huggingface_transformers.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import type {",
          "2:   PretrainedOptions,",
          "3:   FeatureExtractionPipelineOptions,",
          "4:   FeatureExtractionPipeline,",
          "5: } from \"@huggingface/transformers\";",
          "6: import { Embeddings, type EmbeddingsParams } from \"@langchain/core/embeddings\";",
          "7: import { chunkArray } from \"@langchain/core/utils/chunk_array\";",
          "9: export interface HuggingFaceTransformersEmbeddingsParams",
          "10:   extends EmbeddingsParams {",
          "12:   model: string;",
          "17:   timeout?: number;",
          "22:   batchSize?: number;",
          "28:   stripNewLines?: boolean;",
          "33:   pretrainedOptions?: PretrainedOptions;",
          "38:   pipelineOptions?: FeatureExtractionPipelineOptions;",
          "39: }",
          "59: export class HuggingFaceTransformersEmbeddings",
          "60:   extends Embeddings",
          "61:   implements HuggingFaceTransformersEmbeddingsParams",
          "62: {",
          "63:   model = \"Xenova/all-MiniLM-L6-v2\";",
          "65:   batchSize = 512;",
          "67:   stripNewLines = true;",
          "69:   timeout?: number;",
          "71:   pretrainedOptions?: PretrainedOptions;",
          "73:   pipelineOptions?: FeatureExtractionPipelineOptions;",
          "75:   private pipelinePromise: Promise<FeatureExtractionPipeline>;",
          "77:   constructor(fields?: Partial<HuggingFaceTransformersEmbeddingsParams>) {",
          "78:     super(fields ?? {});",
          "80:     this.model = fields?.model ?? this.model;",
          "81:     this.stripNewLines = fields?.stripNewLines ?? this.stripNewLines;",
          "82:     this.timeout = fields?.timeout;",
          "83:     this.pretrainedOptions = fields?.pretrainedOptions ?? {};",
          "84:     this.pipelineOptions = {",
          "85:       pooling: \"mean\",",
          "86:       normalize: true,",
          "87:       ...fields?.pipelineOptions,",
          "88:     };",
          "89:   }",
          "91:   async embedDocuments(texts: string[]): Promise<number[][]> {",
          "92:     const batches = chunkArray(",
          "93:       this.stripNewLines ? texts.map((t) => t.replace(/\\n/g, \" \")) : texts,",
          "94:       this.batchSize",
          "95:     );",
          "97:     const batchRequests = batches.map((batch) => this.runEmbedding(batch));",
          "98:     const batchResponses = await Promise.all(batchRequests);",
          "99:     const embeddings: number[][] = [];",
          "101:     for (let i = 0; i < batchResponses.length; i += 1) {",
          "102:       const batchResponse = batchResponses[i];",
          "103:       for (let j = 0; j < batchResponse.length; j += 1) {",
          "104:         embeddings.push(batchResponse[j]);",
          "105:       }",
          "106:     }",
          "108:     return embeddings;",
          "109:   }",
          "111:   async embedQuery(text: string): Promise<number[]> {",
          "112:     const data = await this.runEmbedding([",
          "113:       this.stripNewLines ? text.replace(/\\n/g, \" \") : text,",
          "114:     ]);",
          "115:     return data[0];",
          "116:   }",
          "118:   private async runEmbedding(texts: string[]) {",
          "119:     const pipe = await (this.pipelinePromise ??= (",
          "120:       await import(\"@huggingface/transformers\")",
          "121:     ).pipeline(\"feature-extraction\", this.model, this.pretrainedOptions));",
          "123:     return this.caller.call(async () => {",
          "124:       const output = await pipe(texts, this.pipelineOptions);",
          "125:       return output.tolist();",
          "126:     });",
          "127:   }",
          "128: }",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/embeddings/tests/hf_transformers.int.test.ts||libs/langchain-community/src/embeddings/tests/huggingface_transformers.int.test.ts": [
          "File: libs/langchain-community/src/embeddings/tests/hf_transformers.int.test.ts -> libs/langchain-community/src/embeddings/tests/huggingface_transformers.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { test, expect } from \"@jest/globals\";",
          "3: import { HNSWLib } from \"../../vectorstores/hnswlib.js\";",
          "5: test(\"HuggingFaceTransformersEmbeddings\", async () => {",
          "",
          "[Removed Lines]",
          "2: import { HuggingFaceTransformersEmbeddings } from \"../hf_transformers.js\";",
          "",
          "[Added Lines]",
          "2: import { HuggingFaceTransformersEmbeddings } from \"../huggingface_transformers.js\";",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/load/import_constants.ts||libs/langchain-community/src/load/import_constants.ts": [
          "File: libs/langchain-community/src/load/import_constants.ts -> libs/langchain-community/src/load/import_constants.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   \"langchain_community/embeddings/gradient_ai\",",
          "16:   \"langchain_community/embeddings/hf\",",
          "17:   \"langchain_community/embeddings/hf_transformers\",",
          "18:   \"langchain_community/embeddings/ibm\",",
          "19:   \"langchain_community/embeddings/jina\",",
          "20:   \"langchain_community/embeddings/llama_cpp\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:   \"langchain_community/embeddings/huggingface_transformers\",",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "10560:   languageName: node",
          "10561:   linkType: hard",
          "10570: \"@huggingface/jinja@npm:^0.3.1\":",
          "10571:   version: 0.3.1",
          "10572:   resolution: \"@huggingface/jinja@npm:0.3.1\"",
          "",
          "[Removed Lines]",
          "10563: \"@huggingface/jinja@npm:^0.2.2\":",
          "10564:   version: 0.2.2",
          "10565:   resolution: \"@huggingface/jinja@npm:0.2.2\"",
          "10566:   checksum: 8a6e3e287863d437920990afa2ca25d83c51997bd5ba0325ea90633e52469c2d901178cbd758cc362b45ad1c9521fccf372884fd59e58d2916d6b2e5bb15f776",
          "10567:   languageName: node",
          "10568:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10574:   languageName: node",
          "10575:   linkType: hard",
          "10577: \"@humanwhocodes/config-array@npm:^0.11.11\":",
          "10578:   version: 0.11.11",
          "10579:   resolution: \"@humanwhocodes/config-array@npm:0.11.11\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10570: \"@huggingface/jinja@npm:^0.3.2\":",
          "10571:   version: 0.3.2",
          "10572:   resolution: \"@huggingface/jinja@npm:0.3.2\"",
          "10573:   checksum: 4bc7d00b6f8655a0032c2d89e38a095d0a87ef81a1c12fb6fd0404e1319e1ef6eef87734502689c1df39db4e77a7bb5996e7b6c1b4d6a768ecfa5a48f2a939a7",
          "10574:   languageName: node",
          "10575:   linkType: hard",
          "10577: \"@huggingface/transformers@npm:^3.2.3\":",
          "10578:   version: 3.2.4",
          "10579:   resolution: \"@huggingface/transformers@npm:3.2.4\"",
          "10580:   dependencies:",
          "10581:     \"@huggingface/jinja\": ^0.3.2",
          "10582:     onnxruntime-node: 1.20.1",
          "10583:     onnxruntime-web: 1.21.0-dev.20241205-d27fecd3d3",
          "10584:     sharp: ^0.33.5",
          "10585:   checksum: fdff5cec1336fdb4ad923592d77348730f58263928a8c90d0f79aed7863e74a5521b9e99903c906a6e1c056fe0f81f811e4d403b62d3edb66da9389cff025acf",
          "10586:   languageName: node",
          "10587:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10849:   languageName: node",
          "10850:   linkType: hard",
          "10852: \"@istanbuljs/load-nyc-config@npm:^1.0.0\":",
          "10853:   version: 1.1.0",
          "10854:   resolution: \"@istanbuljs/load-nyc-config@npm:1.1.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10864: \"@isaacs/fs-minipass@npm:^4.0.0\":",
          "10865:   version: 4.0.1",
          "10866:   resolution: \"@isaacs/fs-minipass@npm:4.0.1\"",
          "10867:   dependencies:",
          "10868:     minipass: ^7.0.4",
          "10869:   checksum: 5d36d289960e886484362d9eb6a51d1ea28baed5f5d0140bbe62b99bac52eaf06cc01c2bc0d3575977962f84f6b2c4387b043ee632216643d4787b0999465bf2",
          "10870:   languageName: node",
          "10871:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "11817:     \"@google-cloud/storage\": ^7.7.0",
          "11818:     \"@gradientai/nodejs-sdk\": ^1.2.0",
          "11819:     \"@huggingface/inference\": ^2.6.4",
          "11820:     \"@ibm-cloud/watsonx-ai\": ^1.3.0",
          "11821:     \"@jest/globals\": ^29.5.0",
          "11822:     \"@lancedb/lancedb\": ^0.13.0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11841:     \"@huggingface/transformers\": ^3.2.3",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11874:     \"@vercel/postgres\": ^0.5.0",
          "11875:     \"@writerai/writer-sdk\": ^0.40.2",
          "11876:     \"@xata.io/client\": ^0.28.0",
          "11878:     \"@zilliz/milvus2-sdk-node\": \">=2.3.5\"",
          "11879:     apify-client: ^2.7.1",
          "11880:     assemblyai: ^4.6.0",
          "",
          "[Removed Lines]",
          "11877:     \"@xenova/transformers\": ^2.17.2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11997:     \"@google-cloud/storage\": ^6.10.1 || ^7.7.0",
          "11998:     \"@gradientai/nodejs-sdk\": ^1.2.0",
          "11999:     \"@huggingface/inference\": ^2.6.4",
          "12000:     \"@ibm-cloud/watsonx-ai\": \"*\"",
          "12001:     \"@lancedb/lancedb\": ^0.12.0",
          "12002:     \"@langchain/core\": \">=0.2.21 <0.4.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12021:     \"@huggingface/transformers\": ^3.2.3",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "12030:     \"@vercel/postgres\": ^0.5.0",
          "12031:     \"@writerai/writer-sdk\": ^0.40.2",
          "12032:     \"@xata.io/client\": ^0.28.0",
          "12034:     \"@zilliz/milvus2-sdk-node\": \">=2.3.5\"",
          "12035:     apify-client: ^2.7.1",
          "12036:     assemblyai: ^4.6.0",
          "",
          "[Removed Lines]",
          "12033:     \"@xenova/transformers\": ^2.17.2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "12150:       optional: true",
          "12151:     \"@huggingface/inference\":",
          "12152:       optional: true",
          "12153:     \"@lancedb/lancedb\":",
          "12154:       optional: true",
          "12155:     \"@layerup/layerup-security\":",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12174:     \"@huggingface/transformers\":",
          "12175:       optional: true",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "12212:       optional: true",
          "12213:     \"@xata.io/client\":",
          "12214:       optional: true",
          "12217:     \"@zilliz/milvus2-sdk-node\":",
          "12218:       optional: true",
          "12219:     apify-client:",
          "",
          "[Removed Lines]",
          "12215:     \"@xenova/transformers\":",
          "12216:       optional: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "20994:   languageName: node",
          "20995:   linkType: hard",
          "21012: \"@xmldom/xmldom@npm:^0.8.10, @xmldom/xmldom@npm:^0.8.6\":",
          "21013:   version: 0.8.10",
          "21014:   resolution: \"@xmldom/xmldom@npm:0.8.10\"",
          "",
          "[Removed Lines]",
          "20997: \"@xenova/transformers@npm:^2.17.2\":",
          "20998:   version: 2.17.2",
          "20999:   resolution: \"@xenova/transformers@npm:2.17.2\"",
          "21000:   dependencies:",
          "21001:     \"@huggingface/jinja\": ^0.2.2",
          "21002:     onnxruntime-node: 1.14.0",
          "21003:     onnxruntime-web: 1.14.0",
          "21004:     sharp: ^0.32.0",
          "21005:   dependenciesMeta:",
          "21006:     onnxruntime-node:",
          "21007:       optional: true",
          "21008:   checksum: 5d49219995f401eedab6e0dcde6ad15ce5df0466388448703ca191e083bb0dc95692c1b539827d47399410d089cb078c47c862b0c550e34b54670fc435e83941",
          "21009:   languageName: node",
          "21010:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "23189:   languageName: node",
          "23190:   linkType: hard",
          "23192: \"chromadb@npm:^1.5.3\":",
          "23193:   version: 1.5.3",
          "23194:   resolution: \"chromadb@npm:1.5.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23198: \"chownr@npm:^3.0.0\":",
          "23199:   version: 3.0.0",
          "23200:   resolution: \"chownr@npm:3.0.0\"",
          "23201:   checksum: fd73a4bab48b79e66903fe1cafbdc208956f41ea4f856df883d0c7277b7ab29fd33ee65f93b2ec9192fc0169238f2f8307b7735d27c155821d886b84aa97aa8d",
          "23202:   languageName: node",
          "23203:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "25600:   languageName: node",
          "25601:   linkType: hard",
          "25604:   version: 2.0.2",
          "25605:   resolution: \"detect-libc@npm:2.0.2\"",
          "25606:   checksum: 2b2cd3649b83d576f4be7cc37eb3b1815c79969c8b1a03a40a4d55d83bc74d010753485753448eacb98784abf22f7dbd3911fd3b60e29fda28fed2d1a997944d",
          "",
          "[Removed Lines]",
          "25603: \"detect-libc@npm:2.0.2, detect-libc@npm:^2.0.2\":",
          "",
          "[Added Lines]",
          "25616: \"detect-libc@npm:2.0.2\":",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "29440:   languageName: node",
          "29441:   linkType: hard",
          "29443: \"glob@npm:^7.0.0, glob@npm:^7.1.3, glob@npm:^7.1.4, glob@npm:^7.1.6\":",
          "29444:   version: 7.2.3",
          "29445:   resolution: \"glob@npm:7.2.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29456: \"glob@npm:^10.3.7\":",
          "29457:   version: 10.4.5",
          "29458:   resolution: \"glob@npm:10.4.5\"",
          "29459:   dependencies:",
          "29460:     foreground-child: ^3.1.0",
          "29461:     jackspeak: ^3.1.2",
          "29462:     minimatch: ^9.0.4",
          "29463:     minipass: ^7.1.2",
          "29464:     package-json-from-dist: ^1.0.0",
          "29465:     path-scurry: ^1.11.1",
          "29466:   bin:",
          "29467:     glob: dist/esm/bin.mjs",
          "29468:   checksum: 0bc725de5e4862f9f387fd0f2b274baf16850dcd2714502ccf471ee401803997983e2c05590cb65f9675a3c6f2a58e7a53f9e365704108c6ad3cbf1d60934c4a",
          "29469:   languageName: node",
          "29470:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "32047:   languageName: node",
          "32048:   linkType: hard",
          "32050: \"javascript-stringify@npm:^2.0.1\":",
          "32051:   version: 2.1.0",
          "32052:   resolution: \"javascript-stringify@npm:2.1.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32079: \"jackspeak@npm:^3.1.2\":",
          "32080:   version: 3.4.3",
          "32081:   resolution: \"jackspeak@npm:3.4.3\"",
          "32082:   dependencies:",
          "32083:     \"@isaacs/cliui\": ^8.0.2",
          "32084:     \"@pkgjs/parseargs\": ^0.11.0",
          "32085:   dependenciesMeta:",
          "32086:     \"@pkgjs/parseargs\":",
          "32087:       optional: true",
          "32088:   checksum: be31027fc72e7cc726206b9f560395604b82e0fddb46c4cbf9f97d049bcef607491a5afc0699612eaa4213ca5be8fd3e1e7cd187b3040988b65c9489838a7c00",
          "32089:   languageName: node",
          "32090:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "34025:   languageName: node",
          "34026:   linkType: hard",
          "34029:   version: 5.2.3",
          "34030:   resolution: \"long@npm:5.2.3\"",
          "34031:   checksum: 885ede7c3de4facccbd2cacc6168bae3a02c3e836159ea4252c87b6e34d40af819824b2d4edce330bfb5c4d6e8ce3ec5864bdcf9473fa1f53a4f8225860e5897",
          "",
          "[Removed Lines]",
          "34028: \"long@npm:*, long@npm:^5.2.1, long@npm:~5.2.3\":",
          "",
          "[Added Lines]",
          "34070: \"long@npm:*, long@npm:^5.2.1, long@npm:^5.2.3, long@npm:~5.2.3\":",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "34845:   languageName: node",
          "34846:   linkType: hard",
          "34848: \"minizlib@npm:^2.0.0, minizlib@npm:^2.1.1, minizlib@npm:^2.1.2\":",
          "34849:   version: 2.1.2",
          "34850:   resolution: \"minizlib@npm:2.1.2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34890: \"minipass@npm:^7.1.2\":",
          "34891:   version: 7.1.2",
          "34892:   resolution: \"minipass@npm:7.1.2\"",
          "34893:   checksum: 2bfd325b95c555f2b4d2814d49325691c7bee937d753814861b0b49d5edcda55cbbf22b6b6a60bb91eddac8668771f03c5ff647dcd9d0f798e9548b9cdc46ee3",
          "34894:   languageName: node",
          "34895:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "34855:   languageName: node",
          "34856:   linkType: hard",
          "34858: \"mitt@npm:3.0.1\":",
          "34859:   version: 3.0.1",
          "34860:   resolution: \"mitt@npm:3.0.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34907: \"minizlib@npm:^3.0.1\":",
          "34908:   version: 3.0.1",
          "34909:   resolution: \"minizlib@npm:3.0.1\"",
          "34910:   dependencies:",
          "34911:     minipass: ^7.0.4",
          "34912:     rimraf: ^5.0.5",
          "34913:   checksum: da0a53899252380475240c587e52c824f8998d9720982ba5c4693c68e89230718884a209858c156c6e08d51aad35700a3589987e540593c36f6713fe30cd7338",
          "34914:   languageName: node",
          "34915:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "35376:   languageName: node",
          "35377:   linkType: hard",
          "35388: \"node-addon-api@npm:^7.0.0\":",
          "35389:   version: 7.0.0",
          "35390:   resolution: \"node-addon-api@npm:7.0.0\"",
          "",
          "[Removed Lines]",
          "35379: \"node-addon-api@npm:^6.1.0\":",
          "35380:   version: 6.1.0",
          "35381:   resolution: \"node-addon-api@npm:6.1.0\"",
          "35382:   dependencies:",
          "35383:     node-gyp: latest",
          "35384:   checksum: 3a539510e677cfa3a833aca5397300e36141aca064cdc487554f2017110709a03a95da937e98c2a14ec3c626af7b2d1b6dabe629a481f9883143d0d5bff07bf2",
          "35385:   languageName: node",
          "35386:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "36099:   languageName: node",
          "36100:   linkType: hard",
          "36108:   languageName: node",
          "36109:   linkType: hard",
          "36115:   languageName: node",
          "36116:   linkType: hard",
          "36121:   dependencies:",
          "36123:   conditions: (os=win32 | os=darwin | os=linux)",
          "36124:   languageName: node",
          "36125:   linkType: hard",
          "36130:   dependencies:",
          "36131:     flatbuffers: ^1.12.0",
          "36132:     guid-typescript: ^1.0.9",
          "36136:     platform: ^1.3.6",
          "36138:   languageName: node",
          "36139:   linkType: hard",
          "",
          "[Removed Lines]",
          "36102: \"onnx-proto@npm:^4.0.4\":",
          "36103:   version: 4.0.4",
          "36104:   resolution: \"onnx-proto@npm:4.0.4\"",
          "36105:   dependencies:",
          "36106:     protobufjs: ^6.8.8",
          "36107:   checksum: 4122ea200bb4a7c93a464c5a49351025537f5b2c9a5848a9b090700437e6c458a44491096502324a3d7e6fb388be4967a824d12ac18d7be6721d0d5779400fd5",
          "36111: \"onnxruntime-common@npm:~1.14.0\":",
          "36112:   version: 1.14.0",
          "36113:   resolution: \"onnxruntime-common@npm:1.14.0\"",
          "36114:   checksum: 6f0dda57440e94ad8c3df80c9812b38651daa4482af4159bada6cf19f8e09a5258994e57038acdfd54ecab7b9779e0e8ce37b3315ee6c48dd6c1c943fd15fa13",
          "36118: \"onnxruntime-node@npm:1.14.0\":",
          "36119:   version: 1.14.0",
          "36120:   resolution: \"onnxruntime-node@npm:1.14.0\"",
          "36122:     onnxruntime-common: ~1.14.0",
          "36127: \"onnxruntime-web@npm:1.14.0\":",
          "36128:   version: 1.14.0",
          "36129:   resolution: \"onnxruntime-web@npm:1.14.0\"",
          "36133:     long: ^4.0.0",
          "36134:     onnx-proto: ^4.0.4",
          "36135:     onnxruntime-common: ~1.14.0",
          "36137:   checksum: 6faa8886683c301e267dad336a8f819a33253f3b3e93c0fe7af7df2aa45e61f6737b43119d68a448d17d08cbcd83e17607f9242e2222d5b4f9552351ddaa3289",
          "",
          "[Added Lines]",
          "36152: \"onnxruntime-common@npm:1.20.1\":",
          "36153:   version: 1.20.1",
          "36154:   resolution: \"onnxruntime-common@npm:1.20.1\"",
          "36155:   checksum: 5cde8fae546c9a4a2d8f13e18cc4c346d77e733d08d1f6b95f4958fb09618592113d232db64049fafadbd18913ec8564e6c06c47dadc4c2aac8df4ed18b2956c",
          "36159: \"onnxruntime-common@npm:1.21.0-dev.20241205-6ed77cc374\":",
          "36160:   version: 1.21.0-dev.20241205-6ed77cc374",
          "36161:   resolution: \"onnxruntime-common@npm:1.21.0-dev.20241205-6ed77cc374\"",
          "36162:   checksum: f490d6b1a8c059ce5665a468ac1c38de4c3729ead0bae173a0c9334c32a67fb2899972b6e185cc6c42f05e61f2c3da2738a814dbc89b5577206a7b17e29f4190",
          "36166: \"onnxruntime-node@npm:1.20.1\":",
          "36167:   version: 1.20.1",
          "36168:   resolution: \"onnxruntime-node@npm:1.20.1\"",
          "36170:     onnxruntime-common: 1.20.1",
          "36171:     tar: ^7.0.1",
          "36172:   checksum: 6b5467eb1d08e1f5931ed1bff77e180f8600be917b690bad5edcfad61fcb797d29f74c5cff5eeb1f8bc95a36d261647d68ca88e149b0aa88412d8dea90901042",
          "36177: \"onnxruntime-web@npm:1.21.0-dev.20241205-d27fecd3d3\":",
          "36178:   version: 1.21.0-dev.20241205-d27fecd3d3",
          "36179:   resolution: \"onnxruntime-web@npm:1.21.0-dev.20241205-d27fecd3d3\"",
          "36183:     long: ^5.2.3",
          "36184:     onnxruntime-common: 1.21.0-dev.20241205-6ed77cc374",
          "36186:     protobufjs: ^7.2.4",
          "36187:   checksum: f668b638440dc8122209ce04c9e06b449bd2d7d0ce05be0d0618468d98746310e4a4d1a15afea30c86e98cea0053496d1c0fef5e6785153f16be8530f24018b8",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "36603:   languageName: node",
          "36604:   linkType: hard",
          "36606: \"package-json@npm:^10.0.0\":",
          "36607:   version: 10.0.1",
          "36608:   resolution: \"package-json@npm:10.0.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36656: \"package-json-from-dist@npm:^1.0.0\":",
          "36657:   version: 1.0.1",
          "36658:   resolution: \"package-json-from-dist@npm:1.0.1\"",
          "36659:   checksum: 58ee9538f2f762988433da00e26acc788036914d57c71c246bf0be1b60cdbd77dd60b6a3e1a30465f0b248aeb80079e0b34cb6050b1dfa18c06953bb1cbc7602",
          "36660:   languageName: node",
          "36661:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "36898:   languageName: node",
          "36899:   linkType: hard",
          "36901: \"path-scurry@npm:^1.7.0\":",
          "36902:   version: 1.9.2",
          "36903:   resolution: \"path-scurry@npm:1.9.2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36958: \"path-scurry@npm:^1.11.1\":",
          "36959:   version: 1.11.1",
          "36960:   resolution: \"path-scurry@npm:1.11.1\"",
          "36961:   dependencies:",
          "36962:     lru-cache: ^10.2.0",
          "36963:     minipass: ^5.0.0 || ^6.0.2 || ^7.0.0",
          "36964:   checksum: 890d5abcd593a7912dcce7cf7c6bf7a0b5648e3dee6caf0712c126ca0a65c7f3d7b9d769072a4d1baf370f61ce493ab5b038d59988688e0c5f3f646ee3c69023",
          "36965:   languageName: node",
          "36966:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "39617:   languageName: node",
          "39618:   linkType: hard",
          "39620: \"robust-predicates@npm:^3.0.2\":",
          "39621:   version: 3.0.2",
          "39622:   resolution: \"robust-predicates@npm:3.0.2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39687: \"rimraf@npm:^5.0.5\":",
          "39688:   version: 5.0.10",
          "39689:   resolution: \"rimraf@npm:5.0.10\"",
          "39690:   dependencies:",
          "39691:     glob: ^10.3.7",
          "39692:   bin:",
          "39693:     rimraf: dist/esm/bin.mjs",
          "39694:   checksum: 50e27388dd2b3fa6677385fc1e2966e9157c89c86853b96d02e6915663a96b7ff4d590e14f6f70e90f9b554093aa5dbc05ac3012876be558c06a65437337bc05",
          "39695:   languageName: node",
          "39696:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "40285:   languageName: node",
          "40286:   linkType: hard",
          "40305: \"sharp@npm:^0.33.5\":",
          "40306:   version: 0.33.5",
          "40307:   resolution: \"sharp@npm:0.33.5\"",
          "",
          "[Removed Lines]",
          "40288: \"sharp@npm:^0.32.0\":",
          "40289:   version: 0.32.4",
          "40290:   resolution: \"sharp@npm:0.32.4\"",
          "40291:   dependencies:",
          "40292:     color: ^4.2.3",
          "40293:     detect-libc: ^2.0.2",
          "40294:     node-addon-api: ^6.1.0",
          "40295:     node-gyp: latest",
          "40296:     prebuild-install: ^7.1.1",
          "40297:     semver: ^7.5.4",
          "40298:     simple-get: ^4.0.1",
          "40299:     tar-fs: ^3.0.4",
          "40300:     tunnel-agent: ^0.6.0",
          "40301:   checksum: 52e3cfe8fbba2623a9b935be8a3d00d6993a2c56c775ac5cc89b273826db95f029f68a0029a37f96dcb6790aa2e3c05a02599035535b319f50ab31f5d86a13f0",
          "40302:   languageName: node",
          "40303:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "40479:   languageName: node",
          "40480:   linkType: hard",
          "40483:   version: 4.0.1",
          "40484:   resolution: \"simple-get@npm:4.0.1\"",
          "40485:   dependencies:",
          "",
          "[Removed Lines]",
          "40482: \"simple-get@npm:^4.0.0, simple-get@npm:^4.0.1\":",
          "",
          "[Added Lines]",
          "40543: \"simple-get@npm:^4.0.0\":",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "41555:   languageName: node",
          "41556:   linkType: hard",
          "41569: \"tar-fs@npm:^3.0.6\":",
          "41570:   version: 3.0.6",
          "41571:   resolution: \"tar-fs@npm:3.0.6\"",
          "",
          "[Removed Lines]",
          "41558: \"tar-fs@npm:^3.0.4\":",
          "41559:   version: 3.0.4",
          "41560:   resolution: \"tar-fs@npm:3.0.4\"",
          "41561:   dependencies:",
          "41562:     mkdirp-classic: ^0.5.2",
          "41563:     pump: ^3.0.0",
          "41564:     tar-stream: ^3.1.5",
          "41565:   checksum: dcf4054f9e92ca0efe61c2b3f612914fb259a47900aa908a63106513a6d006c899b426ada53eb88d9dbbf089b5724c8e90b96a2c4ca6171845fa14203d734e30",
          "41566:   languageName: node",
          "41567:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "41664:   languageName: node",
          "41665:   linkType: hard",
          "41667: \"teeny-request@npm:^9.0.0\":",
          "41668:   version: 9.0.0",
          "41669:   resolution: \"teeny-request@npm:9.0.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41717: \"tar@npm:^7.0.1\":",
          "41718:   version: 7.4.3",
          "41719:   resolution: \"tar@npm:7.4.3\"",
          "41720:   dependencies:",
          "41721:     \"@isaacs/fs-minipass\": ^4.0.0",
          "41722:     chownr: ^3.0.0",
          "41723:     minipass: ^7.1.2",
          "41724:     minizlib: ^3.0.1",
          "41725:     mkdirp: ^3.0.1",
          "41726:     yallist: ^5.0.0",
          "41727:   checksum: 8485350c0688331c94493031f417df069b778aadb25598abdad51862e007c39d1dd5310702c7be4a6784731a174799d8885d2fde0484269aea205b724d7b2ffa",
          "41728:   languageName: node",
          "41729:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "44537:   languageName: node",
          "44538:   linkType: hard",
          "44540: \"yaml-loader@npm:^0.8.0\":",
          "44541:   version: 0.8.0",
          "44542:   resolution: \"yaml-loader@npm:0.8.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44604: \"yallist@npm:^5.0.0\":",
          "44605:   version: 5.0.0",
          "44606:   resolution: \"yallist@npm:5.0.0\"",
          "44607:   checksum: eba51182400b9f35b017daa7f419f434424410691bbc5de4f4240cc830fdef906b504424992700dc047f16b4d99100a6f8b8b11175c193f38008e9c96322b6a5",
          "44608:   languageName: node",
          "44609:   linkType: hard",
          "",
          "---------------"
        ]
      }
    }
  ]
}