{
  "cve_id": "CVE-2023-51763",
  "cve_desc": "csv_builder.rb in ActiveAdmin (aka Active Admin) before 3.2.0 allows CSV injection.",
  "repo": "activeadmin/activeadmin",
  "patch_hash": "7af735cf657c73734fca1900cd6a5adac4ee706e",
  "patch_info": {
    "commit_hash": "7af735cf657c73734fca1900cd6a5adac4ee706e",
    "repo": "activeadmin/activeadmin",
    "commit_url": "https://github.com/activeadmin/activeadmin/commit/7af735cf657c73734fca1900cd6a5adac4ee706e",
    "files": [
      "lib/active_admin/csv_builder.rb",
      "spec/unit/csv_builder_spec.rb"
    ],
    "message": "Backport to 3-0 stable branch protect against CSV Injection (#8161) (#8167)\n\nprotect against CSV Injection\n\nRead more here https://owasp.org/www-community/attacks/CSV_Injection",
    "before_after_code_files": [
      "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb",
      "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb"
    ]
  },
  "patch_diff": {
    "lib/active_admin/csv_builder.rb||lib/active_admin/csv_builder.rb": [
      "File: lib/active_admin/csv_builder.rb -> lib/active_admin/csv_builder.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:       csv << bom if bom",
      "53:       if column_names",
      "55:       end",
      "57:       controller.send(:in_paginated_batches) do |resource|",
      "",
      "[Removed Lines]",
      "54:         csv << CSV.generate_line(columns.map { |c| encode c.name, options }, **csv_options)",
      "",
      "[Added Lines]",
      "54:         csv << CSV.generate_line(columns.map { |c| sanitize(encode(c.name, options)) }, **csv_options)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71:     def build_row(resource, columns, options)",
      "72:       columns.map do |column|",
      "74:       end",
      "75:     end",
      "",
      "[Removed Lines]",
      "73:         encode call_method_or_proc_on(resource, column.data), options",
      "",
      "[Added Lines]",
      "73:         sanitize(encode(call_method_or_proc_on(resource, column.data), options))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "86:       end",
      "87:     end",
      "89:     def method_missing(method, *args, &block)",
      "90:       if @view_context.respond_to? method",
      "91:         @view_context.public_send method, *args, &block",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "89:     def sanitize(content)",
      "90:       Sanitizer.sanitize(content)",
      "91:     end",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "120:       @column_transitive_options ||= @options.slice(*COLUMN_TRANSITIVE_OPTIONS)",
      "121:     end",
      "122:   end",
      "123: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "128:   # Prevents CSV Injection according to https://owasp.org/www-community/attacks/CSV_Injection",
      "129:   module Sanitizer",
      "130:     extend self",
      "132:     ATTACK_CHARACTERS = [\"=\", \"+\", \"-\", \"@\", \"\\t\", \"\\r\"].freeze",
      "134:     def sanitize(value)",
      "135:       return \"'#{value}\" if require_sanitization?(value)",
      "137:       value",
      "138:     end",
      "140:     def require_sanitization?(value)",
      "141:       value.is_a?(String) && value.starts_with?(*ATTACK_CHARACTERS)",
      "142:     end",
      "143:   end",
      "",
      "---------------"
    ],
    "spec/unit/csv_builder_spec.rb||spec/unit/csv_builder_spec.rb": [
      "File: spec/unit/csv_builder_spec.rb -> spec/unit/csv_builder_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "277:       end",
      "278:     end",
      "279:   end",
      "280: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "281:   context \"csv injection\" do",
      "282:     let(:dummy_controller) do",
      "283:       class DummyController",
      "284:         def in_paginated_batches(&block)",
      "285:           Post.all.each(&block)",
      "286:         end",
      "288:         def view_context",
      "289:           MethodOrProcHelper",
      "290:         end",
      "291:       end",
      "292:       DummyController.new",
      "293:     end",
      "295:     let(:builder) do",
      "296:       ActiveAdmin::CSVBuilder.new do",
      "297:         column(:id)",
      "298:         column(:title)",
      "299:       end",
      "300:     end",
      "302:     [\"=\", \"+\", \"-\", \"@\", \"\\t\", \"\\r\"].each do |char|",
      "303:       it \"prepends a single quote when column starts with a #{char} character\" do",
      "304:         attack = \"#{char}1+2\"",
      "306:         escaped_attack = \"'#{attack}\"",
      "307:         escaped_attack = \"\\\"#{escaped_attack}\\\"\" if char == \"\\r\"",
      "309:         post = Post.create!(title: attack)",
      "310:         receiver = []",
      "311:         builder.build dummy_controller, receiver",
      "312:         line = receiver.last",
      "313:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
      "314:       end",
      "316:       it \"accounts for the field separator when character #{char} is used to inject a formula\" do",
      "317:         attack = \"#{char}1+2'\\\" ;,#{char}1+2\"",
      "318:         escaped_attack = \"\\\"'#{attack.gsub('\"', '\"\"')}\\\"\"",
      "320:         post = Post.create!(title: attack)",
      "321:         receiver = []",
      "322:         builder.build dummy_controller, receiver",
      "323:         line = receiver.last",
      "324:         expect(line).to eq \"#{post.id},#{escaped_attack}\\n\"",
      "325:       end",
      "326:     end",
      "327:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "726e7e9c95ebfaf888f29678698140d424d743d4",
      "candidate_info": {
        "commit_hash": "726e7e9c95ebfaf888f29678698140d424d743d4",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/726e7e9c95ebfaf888f29678698140d424d743d4",
        "files": [
          "lib/active_admin/views/components/active_admin_form.rb",
          "spec/unit/form_builder_spec.rb"
        ],
        "message": "Restore inner span tag to form inputs legend (#8467)",
        "before_after_code_files": [
          "lib/active_admin/views/components/active_admin_form.rb||lib/active_admin/views/components/active_admin_form.rb",
          "spec/unit/form_builder_spec.rb||spec/unit/form_builder_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/active_admin/views/components/active_admin_form.rb||lib/active_admin/views/components/active_admin_form.rb": [
          "File: lib/active_admin/views/components/active_admin_form.rb -> lib/active_admin/views/components/active_admin_form.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:         html_options[:class] ||= \"inputs\"",
          "128:         legend = args.shift if args.first.is_a?(::String)",
          "129:         legend = html_options.delete(:name) if html_options.key?(:name)",
          "131:         fieldset_attrs = tag_attributes html_options",
          "132:         @opening_tag = \"<fieldset #{fieldset_attrs}>#{legend_tag}<ol>\"",
          "133:         @closing_tag = \"</ol></fieldset>\"",
          "",
          "[Removed Lines]",
          "130:         legend_tag = legend ? helpers.tag.legend(legend, class: \"fieldset-title\") : \"\"",
          "",
          "[Added Lines]",
          "130:         legend_tag = legend ? helpers.tag.legend(helpers.tag.span(legend), class: \"fieldset-title\") : \"\"",
          "",
          "---------------"
        ],
        "spec/unit/form_builder_spec.rb||spec/unit/form_builder_spec.rb": [
          "File: spec/unit/form_builder_spec.rb -> spec/unit/form_builder_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:       it \"should use the rails helper for rendering attributes\" do",
          "85:         expect(body).to have_css(\"fieldset[data-test='custom']\")",
          "86:       end",
          "87:     end",
          "89:     context \"with XSS payload as name\" do",
          "90:       let :body do",
          "91:         build_form do |f|",
          "93:             f.input :title",
          "94:             f.input :body",
          "95:           end",
          "",
          "[Removed Lines]",
          "92:           f.inputs name: '<script>alert(document.domain)</script>' do",
          "",
          "[Added Lines]",
          "88:       it \"should generate a legend with an inner span containing the name\" do",
          "89:         expect(body).to have_selector(\"fieldset legend span\", text: \"custom_name\")",
          "90:       end",
          "96:           f.inputs name: \"<script>alert(document.domain)</script>\" do",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cce08cb60c5641fc7d63ef3cbb21d30933e463e8",
      "candidate_info": {
        "commit_hash": "cce08cb60c5641fc7d63ef3cbb21d30933e463e8",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/cce08cb60c5641fc7d63ef3cbb21d30933e463e8",
        "files": [
          "CHANGELOG.md",
          "package.json",
          "vendor/assets/javascripts/jquery-ui/data.js",
          "vendor/assets/javascripts/jquery-ui/disable-selection.js",
          "vendor/assets/javascripts/jquery-ui/escape-selector.js",
          "vendor/assets/javascripts/jquery-ui/focusable.js",
          "vendor/assets/javascripts/jquery-ui/form-reset-mixin.js",
          "vendor/assets/javascripts/jquery-ui/form.js",
          "vendor/assets/javascripts/jquery-ui/ie.js",
          "vendor/assets/javascripts/jquery-ui/keycode.js",
          "vendor/assets/javascripts/jquery-ui/labels.js",
          "vendor/assets/javascripts/jquery-ui/plugin.js",
          "vendor/assets/javascripts/jquery-ui/position.js",
          "vendor/assets/javascripts/jquery-ui/safe-active-element.js",
          "vendor/assets/javascripts/jquery-ui/safe-blur.js",
          "vendor/assets/javascripts/jquery-ui/scroll-parent.js",
          "vendor/assets/javascripts/jquery-ui/tabbable.js",
          "vendor/assets/javascripts/jquery-ui/unique-id.js",
          "vendor/assets/javascripts/jquery-ui/version.js",
          "vendor/assets/javascripts/jquery-ui/widget.js",
          "vendor/assets/javascripts/jquery-ui/widgets/button.js",
          "vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js",
          "vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js",
          "vendor/assets/javascripts/jquery-ui/widgets/datepicker.js",
          "vendor/assets/javascripts/jquery-ui/widgets/dialog.js",
          "vendor/assets/javascripts/jquery-ui/widgets/draggable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/mouse.js",
          "vendor/assets/javascripts/jquery-ui/widgets/resizable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/sortable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/tabs.js",
          "yarn.lock"
        ],
        "message": "Update vendored jquery-ui from 1.12.1 to 1.13.3 (#8329)\n\nUpdate vendored jquery-ui\n\nJavaScript files have been manually updated because:\n- `jquery-ui-rails` is unmaintained and it is bundling 1.13.0\n- An active fork of `jquery-ui-rails` is bundling 1.13.2, but there is\n  a more recent version (1.13.3)\n \n`escape-selector` has been removed because jQuery UI is using\njQuery's built-in escape selector. This selector is available from\nversion 3.0, which is required by Active Admin, so it should not be\na problem\n\nRef #8327\n\nRef:\n- https://bugs.jqueryui.com/ticket/14991/\n- jquery/jquery-ui#1957",
        "before_after_code_files": [
          "vendor/assets/javascripts/jquery-ui/data.js||vendor/assets/javascripts/jquery-ui/data.js",
          "vendor/assets/javascripts/jquery-ui/disable-selection.js||vendor/assets/javascripts/jquery-ui/disable-selection.js",
          "vendor/assets/javascripts/jquery-ui/escape-selector.js||vendor/assets/javascripts/jquery-ui/escape-selector.js",
          "vendor/assets/javascripts/jquery-ui/focusable.js||vendor/assets/javascripts/jquery-ui/focusable.js",
          "vendor/assets/javascripts/jquery-ui/form-reset-mixin.js||vendor/assets/javascripts/jquery-ui/form-reset-mixin.js",
          "vendor/assets/javascripts/jquery-ui/form.js||vendor/assets/javascripts/jquery-ui/form.js",
          "vendor/assets/javascripts/jquery-ui/ie.js||vendor/assets/javascripts/jquery-ui/ie.js",
          "vendor/assets/javascripts/jquery-ui/keycode.js||vendor/assets/javascripts/jquery-ui/keycode.js",
          "vendor/assets/javascripts/jquery-ui/labels.js||vendor/assets/javascripts/jquery-ui/labels.js",
          "vendor/assets/javascripts/jquery-ui/plugin.js||vendor/assets/javascripts/jquery-ui/plugin.js",
          "vendor/assets/javascripts/jquery-ui/position.js||vendor/assets/javascripts/jquery-ui/position.js",
          "vendor/assets/javascripts/jquery-ui/safe-active-element.js||vendor/assets/javascripts/jquery-ui/safe-active-element.js",
          "vendor/assets/javascripts/jquery-ui/safe-blur.js||vendor/assets/javascripts/jquery-ui/safe-blur.js",
          "vendor/assets/javascripts/jquery-ui/scroll-parent.js||vendor/assets/javascripts/jquery-ui/scroll-parent.js",
          "vendor/assets/javascripts/jquery-ui/tabbable.js||vendor/assets/javascripts/jquery-ui/tabbable.js",
          "vendor/assets/javascripts/jquery-ui/unique-id.js||vendor/assets/javascripts/jquery-ui/unique-id.js",
          "vendor/assets/javascripts/jquery-ui/version.js||vendor/assets/javascripts/jquery-ui/version.js",
          "vendor/assets/javascripts/jquery-ui/widget.js||vendor/assets/javascripts/jquery-ui/widget.js",
          "vendor/assets/javascripts/jquery-ui/widgets/button.js||vendor/assets/javascripts/jquery-ui/widgets/button.js",
          "vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js||vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js",
          "vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js||vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js",
          "vendor/assets/javascripts/jquery-ui/widgets/datepicker.js||vendor/assets/javascripts/jquery-ui/widgets/datepicker.js",
          "vendor/assets/javascripts/jquery-ui/widgets/dialog.js||vendor/assets/javascripts/jquery-ui/widgets/dialog.js",
          "vendor/assets/javascripts/jquery-ui/widgets/draggable.js||vendor/assets/javascripts/jquery-ui/widgets/draggable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/mouse.js||vendor/assets/javascripts/jquery-ui/widgets/mouse.js",
          "vendor/assets/javascripts/jquery-ui/widgets/resizable.js||vendor/assets/javascripts/jquery-ui/widgets/resizable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/sortable.js||vendor/assets/javascripts/jquery-ui/widgets/sortable.js",
          "vendor/assets/javascripts/jquery-ui/widgets/tabs.js||vendor/assets/javascripts/jquery-ui/widgets/tabs.js",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "vendor/assets/javascripts/jquery-ui/data.js||vendor/assets/javascripts/jquery-ui/data.js": [
          "File: vendor/assets/javascripts/jquery-ui/data.js -> vendor/assets/javascripts/jquery-ui/data.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ( function( factory ) {",
          "18:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   factory( jQuery );",
          "26:  }",
          "29:  data: $.expr.createPseudo ?",
          "30:   $.expr.createPseudo( function( dataName ) {",
          "31:    return function( elem ) {",
          "",
          "[Removed Lines]",
          "27: } ( function( $ ) {",
          "28: return $.extend( $.expr[ \":\" ], {",
          "",
          "[Added Lines]",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "32: return $.extend( $.expr.pseudos, {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:    return !!$.data( elem, match[ 3 ] );",
          "39:   }",
          "40: } );",
          "",
          "[Removed Lines]",
          "41: } ) );",
          "",
          "[Added Lines]",
          "45: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/disable-selection.js||vendor/assets/javascripts/jquery-ui/disable-selection.js": [
          "File: vendor/assets/javascripts/jquery-ui/disable-selection.js -> vendor/assets/javascripts/jquery-ui/disable-selection.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ( function( factory ) {",
          "19:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   factory( jQuery );",
          "27:  }",
          "30: return $.fn.extend( {",
          "31:  disableSelection: ( function() {",
          "",
          "[Removed Lines]",
          "28: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "30: } )( function( $ ) {",
          "31: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:  }",
          "46: } );",
          "",
          "[Removed Lines]",
          "48: } ) );",
          "",
          "[Added Lines]",
          "51: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/escape-selector.js||vendor/assets/javascripts/jquery-ui/escape-selector.js": [
          "File: vendor/assets/javascripts/jquery-ui/escape-selector.js -> vendor/assets/javascripts/jquery-ui/escape-selector.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/focusable.js||vendor/assets/javascripts/jquery-ui/focusable.js": [
          "File: vendor/assets/javascripts/jquery-ui/focusable.js -> vendor/assets/javascripts/jquery-ui/focusable.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ( function( factory ) {",
          "18:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   factory( jQuery );",
          "26:  }",
          "30: $.ui.focusable = function( element, hasTabindex ) {",
          "",
          "[Removed Lines]",
          "27: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:   element = element.parent();",
          "73:   visibility = element.css( \"visibility\" );",
          "74:  }",
          "76: }",
          "79:  focusable: function( element ) {",
          "80:   return $.ui.focusable( element, $.attr( element, \"tabindex\" ) != null );",
          "81:  }",
          "",
          "[Removed Lines]",
          "75:  return visibility !== \"hidden\";",
          "78: $.extend( $.expr[ \":\" ], {",
          "",
          "[Added Lines]",
          "78:  return visibility === \"visible\";",
          "81: $.extend( $.expr.pseudos, {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84: return $.ui.focusable;",
          "",
          "[Removed Lines]",
          "86: } ) );",
          "",
          "[Added Lines]",
          "89: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/form-reset-mixin.js||vendor/assets/javascripts/jquery-ui/form-reset-mixin.js": [
          "File: vendor/assets/javascripts/jquery-ui/form-reset-mixin.js -> vendor/assets/javascripts/jquery-ui/form-reset-mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ( function( factory ) {",
          "",
          "[Removed Lines]",
          "19:   if ( typeof define === \"function\" && define.amd ) {",
          "22:     define( [",
          "23:       \"jquery\",",
          "24:       \"./form\",",
          "25:       \"./version\"",
          "26:     ], factory );",
          "27:   } else {",
          "30:     factory( jQuery );",
          "31:   }",
          "32: }( function( $ ) {",
          "34:   return $.ui.formResetMixin = {",
          "35:     _formResetHandler: function() {",
          "36:       var form = $( this );",
          "39:       setTimeout( function() {",
          "40:         var instances = form.data( \"ui-form-reset-instances\" );",
          "41:         $.each( instances, function() {",
          "42:           this.refresh();",
          "43:         } );",
          "44:       } );",
          "45:     },",
          "47:     _bindFormResetHandler: function() {",
          "48:       this.form = this.element.form();",
          "49:       if ( !this.form.length ) {",
          "50:         return;",
          "51:       }",
          "53:       var instances = this.form.data( \"ui-form-reset-instances\" ) || [];",
          "54:       if ( !instances.length ) {",
          "57:         this.form.on( \"reset.ui-form-reset\", this._formResetHandler );",
          "58:       }",
          "59:       instances.push( this );",
          "60:       this.form.data( \"ui-form-reset-instances\", instances );",
          "61:     },",
          "63:     _unbindFormResetHandler: function() {",
          "64:       if ( !this.form.length ) {",
          "65:         return;",
          "66:       }",
          "68:       var instances = this.form.data( \"ui-form-reset-instances\" );",
          "69:       instances.splice( $.inArray( this, instances ), 1 );",
          "70:       if ( instances.length ) {",
          "71:         this.form.data( \"ui-form-reset-instances\", instances );",
          "72:       } else {",
          "73:         this.form",
          "74:             .removeData( \"ui-form-reset-instances\" )",
          "75:             .off( \"reset.ui-form-reset\" );",
          "76:       }",
          "77:     }",
          "78:   };",
          "80: } ) );",
          "",
          "[Added Lines]",
          "19:  \"use strict\";",
          "21:  if ( typeof define === \"function\" && define.amd ) {",
          "24:   define( [",
          "25:    \"jquery\",",
          "26:    \"./form\",",
          "27:    \"./version\"",
          "28:   ], factory );",
          "29:  } else {",
          "32:   factory( jQuery );",
          "33:  }",
          "34: } )( function( $ ) {",
          "35: \"use strict\";",
          "37: return $.ui.formResetMixin = {",
          "38:  _formResetHandler: function() {",
          "39:   var form = $( this );",
          "42:   setTimeout( function() {",
          "43:    var instances = form.data( \"ui-form-reset-instances\" );",
          "44:    $.each( instances, function() {",
          "45:     this.refresh();",
          "46:    } );",
          "47:   } );",
          "48:  },",
          "50:  _bindFormResetHandler: function() {",
          "51:   this.form = this.element._form();",
          "52:   if ( !this.form.length ) {",
          "53:    return;",
          "54:   }",
          "56:   var instances = this.form.data( \"ui-form-reset-instances\" ) || [];",
          "57:   if ( !instances.length ) {",
          "60:    this.form.on( \"reset.ui-form-reset\", this._formResetHandler );",
          "61:   }",
          "62:   instances.push( this );",
          "63:   this.form.data( \"ui-form-reset-instances\", instances );",
          "64:  },",
          "66:  _unbindFormResetHandler: function() {",
          "67:   if ( !this.form.length ) {",
          "68:    return;",
          "69:   }",
          "71:   var instances = this.form.data( \"ui-form-reset-instances\" );",
          "72:   instances.splice( $.inArray( this, instances ), 1 );",
          "73:   if ( instances.length ) {",
          "74:    this.form.data( \"ui-form-reset-instances\", instances );",
          "75:   } else {",
          "76:    this.form",
          "77:     .removeData( \"ui-form-reset-instances\" )",
          "78:     .off( \"reset.ui-form-reset\" );",
          "79:   }",
          "80:  }",
          "81: };",
          "83: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/form.js||vendor/assets/javascripts/jquery-ui/form.js": [
          "File: vendor/assets/javascripts/jquery-ui/form.js -> vendor/assets/javascripts/jquery-ui/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: ( function( factory ) {",
          "",
          "[Removed Lines]",
          "4:   if ( typeof define === \"function\" && define.amd ) {",
          "7:     define( [ \"jquery\", \"./version\" ], factory );",
          "8:   } else {",
          "11:     factory( jQuery );",
          "12:   }",
          "13: } ( function( $ ) {",
          "18:   return $.fn.form = function() {",
          "19:     return typeof this[ 0 ].form === \"string\" ? this.closest( \"form\" ) : $( this[ 0 ].form );",
          "20:   };",
          "22: } ) );",
          "",
          "[Added Lines]",
          "4:  \"use strict\";",
          "6:  if ( typeof define === \"function\" && define.amd ) {",
          "9:   define( [ \"jquery\", \"./version\" ], factory );",
          "10:  } else {",
          "13:   factory( jQuery );",
          "14:  }",
          "15: } )( function( $ ) {",
          "16: \"use strict\";",
          "21: return $.fn._form = function() {",
          "22:  return typeof this[ 0 ].form === \"string\" ? this.closest( \"form\" ) : $( this[ 0 ].form );",
          "23: };",
          "25: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/ie.js||vendor/assets/javascripts/jquery-ui/ie.js": [
          "File: vendor/assets/javascripts/jquery-ui/ie.js -> vendor/assets/javascripts/jquery-ui/ie.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: ( function( factory ) {",
          "4:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:   factory( jQuery );",
          "12:  }",
          "16: return $.ui.ie = !!/msie [\\w.]+/.exec( navigator.userAgent.toLowerCase() );",
          "",
          "[Removed Lines]",
          "13: } ( function( $ ) {",
          "17: } ) );",
          "",
          "[Added Lines]",
          "15: } )( function( $ ) {",
          "16: \"use strict\";",
          "20: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/keycode.js||vendor/assets/javascripts/jquery-ui/keycode.js": [
          "File: vendor/assets/javascripts/jquery-ui/keycode.js -> vendor/assets/javascripts/jquery-ui/keycode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ( function( factory ) {",
          "18:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   factory( jQuery );",
          "26:  }",
          "28: return $.ui.keyCode = {",
          "29:  BACKSPACE: 8,",
          "30:  COMMA: 188,",
          "",
          "[Removed Lines]",
          "27: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:  UP: 38",
          "45: };",
          "",
          "[Removed Lines]",
          "47: } ) );",
          "",
          "[Added Lines]",
          "51: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/labels.js||vendor/assets/javascripts/jquery-ui/labels.js": [
          "File: vendor/assets/javascripts/jquery-ui/labels.js -> vendor/assets/javascripts/jquery-ui/labels.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ( function( factory ) {",
          "",
          "[Removed Lines]",
          "19:   if ( typeof define === \"function\" && define.amd ) {",
          "22:     define( [ \"jquery\", \"./version\", \"./escape-selector\" ], factory );",
          "23:   } else {",
          "26:     factory( jQuery );",
          "27:   }",
          "28: } ( function( $ ) {",
          "30:   return $.fn.labels = function() {",
          "31:     var ancestor, selector, id, labels, ancestors;",
          "34:     if ( this[ 0 ].labels && this[ 0 ].labels.length ) {",
          "35:       return this.pushStack( this[ 0 ].labels );",
          "36:     }",
          "41:     labels = this.eq( 0 ).parents( \"label\" );",
          "44:     id = this.attr( \"id\" );",
          "45:     if ( id ) {",
          "49:       ancestor = this.eq( 0 ).parents().last();",
          "52:       ancestors = ancestor.add( ancestor.length ? ancestor.siblings() : this.siblings() );",
          "55:       selector = \"label[for='\" + $.ui.escapeSelector( id ) + \"']\";",
          "57:       labels = labels.add( ancestors.find( selector ).addBack( selector ) );",
          "59:     }",
          "62:     return this.pushStack( labels );",
          "63:   };",
          "65: } ) );",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "20:  if ( typeof define === \"function\" && define.amd ) {",
          "23:   define( [ \"jquery\", \"./version\" ], factory );",
          "24:  } else {",
          "27:   factory( jQuery );",
          "28:  }",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "32: return $.fn.labels = function() {",
          "33:  var ancestor, selector, id, labels, ancestors;",
          "35:  if ( !this.length ) {",
          "36:   return this.pushStack( [] );",
          "37:  }",
          "40:  if ( this[ 0 ].labels && this[ 0 ].labels.length ) {",
          "41:   return this.pushStack( this[ 0 ].labels );",
          "42:  }",
          "47:  labels = this.eq( 0 ).parents( \"label\" );",
          "50:  id = this.attr( \"id\" );",
          "51:  if ( id ) {",
          "55:   ancestor = this.eq( 0 ).parents().last();",
          "58:   ancestors = ancestor.add( ancestor.length ? ancestor.siblings() : this.siblings() );",
          "61:   selector = \"label[for='\" + $.escapeSelector( id ) + \"']\";",
          "63:   labels = labels.add( ancestors.find( selector ).addBack( selector ) );",
          "65:  }",
          "68:  return this.pushStack( labels );",
          "69: };",
          "71: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/plugin.js||vendor/assets/javascripts/jquery-ui/plugin.js": [
          "File: vendor/assets/javascripts/jquery-ui/plugin.js -> vendor/assets/javascripts/jquery-ui/plugin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: ( function( factory ) {",
          "4:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:   factory( jQuery );",
          "12:  }",
          "16: return $.ui.plugin = {",
          "",
          "[Removed Lines]",
          "13: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "15: } )( function( $ ) {",
          "16: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:  }",
          "44: };",
          "",
          "[Removed Lines]",
          "46: } ) );",
          "",
          "[Added Lines]",
          "49: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/position.js||vendor/assets/javascripts/jquery-ui/position.js": [
          "File: vendor/assets/javascripts/jquery-ui/position.js -> vendor/assets/javascripts/jquery-ui/position.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: ( function( factory ) {",
          "21:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:   factory( jQuery );",
          "29:  }",
          "31: ( function() {",
          "32: var cachedScrollbarWidth,",
          "33:  max = Math.max,",
          "",
          "[Removed Lines]",
          "30: }( function( $ ) {",
          "",
          "[Added Lines]",
          "32: } )( function( $ ) {",
          "33: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:  return parseInt( $.css( element, property ), 10 ) || 0;",
          "51: }",
          "53: function getDimensions( elem ) {",
          "54:  var raw = elem[ 0 ];",
          "55:  if ( raw.nodeType === 9 ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: function isWindow( obj ) {",
          "58:  return obj != null && obj === obj.window;",
          "59: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "59:    offset: { top: 0, left: 0 }",
          "60:   };",
          "61:  }",
          "63:   return {",
          "64:    width: elem.width(),",
          "65:    height: elem.height(),",
          "",
          "[Removed Lines]",
          "62:  if ( $.isWindow( raw ) ) {",
          "",
          "[Added Lines]",
          "70:  if ( isWindow( raw ) ) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "86:    return cachedScrollbarWidth;",
          "87:   }",
          "88:   var w1, w2,",
          "92:    innerDiv = div.children()[ 0 ];",
          "94:   $( \"body\" ).append( div );",
          "",
          "[Removed Lines]",
          "89:    div = $( \"<div \" +",
          "90:     \"style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'>\" +",
          "91:     \"<div style='height:100px;width:auto;'></div></div>\" ),",
          "",
          "[Added Lines]",
          "97:    div = $( \"<div style=\" +",
          "98:     \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +",
          "99:     \"<div style='height:300px;width:auto;'></div></div>\" ),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "121:  },",
          "122:  getWithinInfo: function( element ) {",
          "123:   var withinElement = $( element || window ),",
          "125:    isDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9,",
          "127:   return {",
          "128:    element: withinElement,",
          "130:    isDocument: isDocument,",
          "131:    offset: hasOffset ? $( element ).offset() : { left: 0, top: 0 },",
          "132:    scrollLeft: withinElement.scrollLeft(),",
          "",
          "[Removed Lines]",
          "124:    isWindow = $.isWindow( withinElement[ 0 ] ),",
          "126:    hasOffset = !isWindow && !isDocument;",
          "129:    isWindow: isWindow,",
          "",
          "[Added Lines]",
          "132:    isElemWindow = isWindow( withinElement[ 0 ] ),",
          "134:    hasOffset = !isElemWindow && !isDocument;",
          "137:    isWindow: isElemWindow,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "146:  options = $.extend( {}, options );",
          "148:  var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,",
          "150:   within = $.position.getWithinInfo( options.within ),",
          "151:   scrollInfo = $.position.getScrollInfo( within ),",
          "152:   collision = ( options.collision || \"flip\" ).split( \" \" ),",
          "",
          "[Removed Lines]",
          "149:   target = $( options.of ),",
          "",
          "[Added Lines]",
          "159:   target = typeof options.of === \"string\" ?",
          "160:    $( document ).find( options.of ) :",
          "161:    $( options.of ),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "498: return $.ui.position;",
          "",
          "[Removed Lines]",
          "500: } ) );",
          "",
          "[Added Lines]",
          "513: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/safe-active-element.js||vendor/assets/javascripts/jquery-ui/safe-active-element.js": [
          "File: vendor/assets/javascripts/jquery-ui/safe-active-element.js -> vendor/assets/javascripts/jquery-ui/safe-active-element.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: ( function( factory ) {",
          "4:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:   factory( jQuery );",
          "12:  }",
          "14: return $.ui.safeActiveElement = function( document ) {",
          "15:  var activeElement;",
          "",
          "[Removed Lines]",
          "13: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "15: } )( function( $ ) {",
          "16: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:  return activeElement;",
          "40: };",
          "",
          "[Removed Lines]",
          "42: } ) );",
          "",
          "[Added Lines]",
          "46: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/safe-blur.js||vendor/assets/javascripts/jquery-ui/safe-blur.js": [
          "File: vendor/assets/javascripts/jquery-ui/safe-blur.js -> vendor/assets/javascripts/jquery-ui/safe-blur.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: ( function( factory ) {",
          "4:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:   factory( jQuery );",
          "12:  }",
          "14: return $.ui.safeBlur = function( element ) {",
          "",
          "[Removed Lines]",
          "13: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "15: } )( function( $ ) {",
          "16: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "20:  }",
          "21: };",
          "",
          "[Removed Lines]",
          "23: } ) );",
          "",
          "[Added Lines]",
          "27: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/scroll-parent.js||vendor/assets/javascripts/jquery-ui/scroll-parent.js": [
          "File: vendor/assets/javascripts/jquery-ui/scroll-parent.js -> vendor/assets/javascripts/jquery-ui/scroll-parent.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ( function( factory ) {",
          "18:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   factory( jQuery );",
          "26:  }",
          "29: return $.fn.scrollParent = function( includeHidden ) {",
          "30:  var position = this.css( \"position\" ),",
          "",
          "[Removed Lines]",
          "27: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   scrollParent;",
          "45: };",
          "",
          "[Removed Lines]",
          "47: } ) );",
          "",
          "[Added Lines]",
          "50: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/tabbable.js||vendor/assets/javascripts/jquery-ui/tabbable.js": [
          "File: vendor/assets/javascripts/jquery-ui/tabbable.js -> vendor/assets/javascripts/jquery-ui/tabbable.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ( function( factory ) {",
          "19:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   factory( jQuery );",
          "27:  }",
          "31:  tabbable: function( element ) {",
          "32:   var tabIndex = $.attr( element, \"tabindex\" ),",
          "33:    hasTabindex = tabIndex != null;",
          "",
          "[Removed Lines]",
          "28: } ( function( $ ) {",
          "30: return $.extend( $.expr[ \":\" ], {",
          "",
          "[Added Lines]",
          "30: } )( function( $ ) {",
          "31: \"use strict\";",
          "33: return $.extend( $.expr.pseudos, {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:  }",
          "36: } );",
          "",
          "[Removed Lines]",
          "38: } ) );",
          "",
          "[Added Lines]",
          "41: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/unique-id.js||vendor/assets/javascripts/jquery-ui/unique-id.js": [
          "File: vendor/assets/javascripts/jquery-ui/unique-id.js -> vendor/assets/javascripts/jquery-ui/unique-id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ( function( factory ) {",
          "18:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:   factory( jQuery );",
          "26:  }",
          "29: return $.fn.extend( {",
          "30:  uniqueId: ( function() {",
          "",
          "[Removed Lines]",
          "27: } ( function( $ ) {",
          "",
          "[Added Lines]",
          "29: } )( function( $ ) {",
          "30: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48:  }",
          "49: } );",
          "",
          "[Removed Lines]",
          "51: } ) );",
          "",
          "[Added Lines]",
          "54: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/version.js||vendor/assets/javascripts/jquery-ui/version.js": [
          "File: vendor/assets/javascripts/jquery-ui/version.js -> vendor/assets/javascripts/jquery-ui/version.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: ( function( factory ) {",
          "2:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9:   factory( jQuery );",
          "10:  }",
          "13: $.ui = $.ui || {};",
          "",
          "[Removed Lines]",
          "11: } ( function( $ ) {",
          "15: return $.ui.version = \"1.12.1\";",
          "17: } ) );",
          "",
          "[Added Lines]",
          "13: } )( function( $ ) {",
          "14: \"use strict\";",
          "18: return $.ui.version = \"1.13.3\";",
          "20: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widget.js||vendor/assets/javascripts/jquery-ui/widget.js": [
          "File: vendor/assets/javascripts/jquery-ui/widget.js -> vendor/assets/javascripts/jquery-ui/widget.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: ( function( factory ) {",
          "19:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   factory( jQuery );",
          "27:  }",
          "30: var widgetUuid = 0;",
          "31: var widgetSlice = Array.prototype.slice;",
          "33: $.cleanData = ( function( orig ) {",
          "34:  return function( elems ) {",
          "35:   var events, elem, i;",
          "36:   for ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {",
          "47:   }",
          "48:   orig( elems );",
          "49:  };",
          "",
          "[Removed Lines]",
          "28: }( function( $ ) {",
          "37:    try {",
          "40:     events = $._data( elem, \"events\" );",
          "41:     if ( events && events.remove ) {",
          "42:      $( elem ).triggerHandler( \"remove\" );",
          "43:     }",
          "46:    } catch ( e ) {}",
          "",
          "[Added Lines]",
          "30: } )( function( $ ) {",
          "31: \"use strict\";",
          "34: var widgetHasOwnProperty = Array.prototype.hasOwnProperty;",
          "43:    events = $._data( elem, \"events\" );",
          "44:    if ( events && events.remove ) {",
          "45:     $( elem ).triggerHandler( \"remove\" );",
          "46:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:   base = $.Widget;",
          "66:  }",
          "69:   prototype = $.extend.apply( null, [ {} ].concat( prototype ) );",
          "70:  }",
          "74:   return !!$.data( elem, fullName );",
          "75:  };",
          "",
          "[Removed Lines]",
          "68:  if ( $.isArray( prototype ) ) {",
          "73:  $.expr[ \":\" ][ fullName.toLowerCase() ] = function( elem ) {",
          "",
          "[Added Lines]",
          "68:  if ( Array.isArray( prototype ) ) {",
          "73:  $.expr.pseudos[ fullName.toLowerCase() ] = function( elem ) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:  constructor = $[ namespace ][ name ] = function( options, element ) {",
          "83:    return new constructor( options, element );",
          "84:   }",
          "",
          "[Removed Lines]",
          "82:   if ( !this._createWidget ) {",
          "",
          "[Added Lines]",
          "82:   if ( !this || !this._createWidget ) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "111:  basePrototype.options = $.widget.extend( {}, basePrototype.options );",
          "112:  $.each( prototype, function( prop, value ) {",
          "114:    proxiedPrototype[ prop ] = value;",
          "115:    return;",
          "116:   }",
          "",
          "[Removed Lines]",
          "113:   if ( !$.isFunction( value ) ) {",
          "",
          "[Added Lines]",
          "113:   if ( typeof value !== \"function\" ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "189:  for ( ; inputIndex < inputLength; inputIndex++ ) {",
          "190:   for ( key in input[ inputIndex ] ) {",
          "191:    value = input[ inputIndex ][ key ];",
          "195:     if ( $.isPlainObject( value ) ) {",
          "",
          "[Removed Lines]",
          "192:    if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {",
          "",
          "[Added Lines]",
          "192:    if ( widgetHasOwnProperty.call( input[ inputIndex ], key ) && value !== undefined ) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "238:        \"attempted to call method '\" + options + \"'\" );",
          "239:      }",
          "242:       return $.error( \"no such method '\" + options + \"' for \" + name +",
          "243:        \" widget instance\" );",
          "244:      }",
          "",
          "[Removed Lines]",
          "241:      if ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {",
          "",
          "[Added Lines]",
          "241:      if ( typeof instance[ options ] !== \"function\" ||",
          "242:       options.charAt( 0 ) === \"_\" ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "499:    classes: this.options.classes || {}",
          "500:   }, options );",
          "502:   function processClassString( classes, checkOption ) {",
          "503:    var current, i;",
          "504:    for ( i = 0; i < classes.length; i++ ) {",
          "505:     current = that.classesElementLookup[ classes[ i ] ] || $();",
          "506:     if ( options.add ) {",
          "508:     } else {",
          "509:      current = $( current.not( options.element ).get() );",
          "510:     }",
          "",
          "[Removed Lines]",
          "507:      current = $( $.unique( current.get().concat( options.element.get() ) ) );",
          "",
          "[Added Lines]",
          "503:   function bindRemoveEvent() {",
          "504:    var nodesToBind = [];",
          "506:    options.element.each( function( _, element ) {",
          "507:     var isTracked = $.map( that.classesElementLookup, function( elements ) {",
          "508:      return elements;",
          "509:     } )",
          "510:      .some( function( elements ) {",
          "511:       return elements.is( element );",
          "512:      } );",
          "514:     if ( !isTracked ) {",
          "515:      nodesToBind.push( element );",
          "516:     }",
          "517:    } );",
          "519:    that._on( $( nodesToBind ), {",
          "520:     remove: \"_untrackClassesElement\"",
          "521:    } );",
          "522:   }",
          "529:      bindRemoveEvent();",
          "530:      current = $( $.uniqueSort( current.get().concat( options.element.get() ) ) );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "516:    }",
          "517:   }",
          "523:   if ( options.keys ) {",
          "524:    processClassString( options.keys.match( /\\S+/g ) || [], true );",
          "525:   }",
          "",
          "[Removed Lines]",
          "519:   this._on( options.element, {",
          "520:    \"remove\": \"_untrackClassesElement\"",
          "521:   } );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "537:     that.classesElementLookup[ key ] = $( value.not( event.target ).get() );",
          "538:    }",
          "539:   } );",
          "540:  },",
          "542:  _removeClass: function( element, keys, extra ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "560:   this._off( $( event.target ) );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "617:  _off: function( element, eventName ) {",
          "618:   eventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +",
          "619:    this.eventNamespace;",
          "623:   this.bindings = $( this.bindings.not( element ).get() );",
          "",
          "[Removed Lines]",
          "620:   element.off( eventName ).off( eventName );",
          "",
          "[Added Lines]",
          "641:   element.off( eventName );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "683:   }",
          "685:   this.element.trigger( event, data );",
          "687:    callback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||",
          "688:    event.isDefaultPrevented() );",
          "689:  }",
          "",
          "[Removed Lines]",
          "686:   return !( $.isFunction( callback ) &&",
          "",
          "[Added Lines]",
          "707:   return !( typeof callback === \"function\" &&",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "705:   options = options || {};",
          "706:   if ( typeof options === \"number\" ) {",
          "707:    options = { duration: options };",
          "708:   }",
          "710:   hasOptions = !$.isEmptyObject( options );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "729:   } else if ( options === true ) {",
          "730:    options = {};",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "733: return $.widget;",
          "",
          "[Removed Lines]",
          "735: } ) );",
          "",
          "[Added Lines]",
          "758: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/button.js||vendor/assets/javascripts/jquery-ui/widgets/button.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/button.js -> vendor/assets/javascripts/jquery-ui/widgets/button.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: ( function( factory ) {",
          "25:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:   factory( jQuery );",
          "43:  }",
          "46: $.widget( \"ui.button\", {",
          "48:  defaultElement: \"<button>\",",
          "49:  options: {",
          "50:   classes: {",
          "",
          "[Removed Lines]",
          "44: }( function( $ ) {",
          "47:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "46: } )( function( $ ) {",
          "47: \"use strict\";",
          "50:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "268:    this._toggleClass( null, \"ui-state-disabled\", value );",
          "269:    this.element[ 0 ].disabled = value;",
          "270:    if ( value ) {",
          "272:    }",
          "273:   }",
          "274:  },",
          "",
          "[Removed Lines]",
          "271:     this.element.blur();",
          "",
          "[Added Lines]",
          "274:     this.element.trigger( \"blur\" );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "347:  } );",
          "349:  $.fn.button = ( function( orig ) {",
          "363:     } );",
          "364:    }",
          "366:   };",
          "367:  } )( $.fn.button );",
          "",
          "[Removed Lines]",
          "350:   return function() {",
          "351:    if ( !this.length || ( this.length && this[ 0 ].tagName !== \"INPUT\" ) ||",
          "352:      ( this.length && this[ 0 ].tagName === \"INPUT\" && (",
          "353:       this.attr( \"type\" ) !== \"checkbox\" && this.attr( \"type\" ) !== \"radio\"",
          "354:      ) ) ) {",
          "355:     return orig.apply( this, arguments );",
          "356:    }",
          "357:    if ( !$.ui.checkboxradio ) {",
          "358:     $.error( \"Checkboxradio widget missing\" );",
          "359:    }",
          "360:    if ( arguments.length === 0 ) {",
          "361:     return this.checkboxradio( {",
          "362:      \"icon\": false",
          "365:    return this.checkboxradio.apply( this, arguments );",
          "",
          "[Added Lines]",
          "353:   return function( options ) {",
          "354:    var isMethodCall = typeof options === \"string\";",
          "355:    var args = Array.prototype.slice.call( arguments, 1 );",
          "356:    var returnValue = this;",
          "358:    if ( isMethodCall ) {",
          "362:     if ( !this.length && options === \"instance\" ) {",
          "363:      returnValue = undefined;",
          "364:     } else {",
          "365:      this.each( function() {",
          "366:       var methodValue;",
          "367:       var type = $( this ).attr( \"type\" );",
          "368:       var name = type !== \"checkbox\" && type !== \"radio\" ?",
          "369:        \"button\" :",
          "370:        \"checkboxradio\";",
          "371:       var instance = $.data( this, \"ui-\" + name );",
          "373:       if ( options === \"instance\" ) {",
          "374:        returnValue = instance;",
          "375:        return false;",
          "376:       }",
          "378:       if ( !instance ) {",
          "379:        return $.error( \"cannot call methods on button\" +",
          "380:         \" prior to initialization; \" +",
          "381:         \"attempted to call method '\" + options + \"'\" );",
          "382:       }",
          "384:       if ( typeof instance[ options ] !== \"function\" ||",
          "385:        options.charAt( 0 ) === \"_\" ) {",
          "386:        return $.error( \"no such method '\" + options + \"' for button\" +",
          "387:         \" widget instance\" );",
          "388:       }",
          "390:       methodValue = instance[ options ].apply( instance, args );",
          "392:       if ( methodValue !== instance && methodValue !== undefined ) {",
          "393:        returnValue = methodValue && methodValue.jquery ?",
          "394:         returnValue.pushStack( methodValue.get() ) :",
          "395:         methodValue;",
          "396:        return false;",
          "397:       }",
          "398:      } );",
          "399:     }",
          "400:    } else {",
          "403:     if ( args.length ) {",
          "404:      options = $.widget.extend.apply( null, [ options ].concat( args ) );",
          "405:     }",
          "407:     this.each( function() {",
          "408:      var type = $( this ).attr( \"type\" );",
          "409:      var name = type !== \"checkbox\" && type !== \"radio\" ? \"button\" : \"checkboxradio\";",
          "410:      var instance = $.data( this, \"ui-\" + name );",
          "412:      if ( instance ) {",
          "413:       instance.option( options || {} );",
          "414:       if ( instance._init ) {",
          "415:        instance._init();",
          "416:       }",
          "417:      } else {",
          "418:       if ( name === \"button\" ) {",
          "419:        orig.call( $( this ), options );",
          "420:        return;",
          "421:       }",
          "423:       $( this ).checkboxradio( $.extend( { icon: false }, options ) );",
          "424:      }",
          "428:    return returnValue;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "389: return $.ui.button;",
          "",
          "[Removed Lines]",
          "391: } ) );",
          "",
          "[Added Lines]",
          "454: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js||vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js -> vendor/assets/javascripts/jquery-ui/widgets/checkboxradio.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: ( function( factory ) {",
          "",
          "[Removed Lines]",
          "26:   if ( typeof define === \"function\" && define.amd ) {",
          "29:     define( [",
          "30:       \"jquery\",",
          "31:       \"../escape-selector\",",
          "32:       \"../form-reset-mixin\",",
          "33:       \"../labels\",",
          "34:       \"../widget\"",
          "35:     ], factory );",
          "36:   } else {",
          "39:     factory( jQuery );",
          "40:   }",
          "41: }( function( $ ) {",
          "43:   $.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {",
          "44:     version: \"1.12.1\",",
          "45:     options: {",
          "46:       disabled: null,",
          "47:       label: null,",
          "48:       icon: true,",
          "49:       classes: {",
          "50:         \"ui-checkboxradio-label\": \"ui-corner-all\",",
          "51:         \"ui-checkboxradio-icon\": \"ui-corner-all\"",
          "52:       }",
          "53:     },",
          "55:     _getCreateOptions: function() {",
          "56:       var disabled, labels;",
          "57:       var that = this;",
          "58:       var options = this._super() || {};",
          "63:       this._readType();",
          "65:       labels = this.element.labels();",
          "68:       this.label = $( labels[ labels.length - 1 ] );",
          "69:       if ( !this.label.length ) {",
          "70:         $.error( \"No label found for checkboxradio widget\" );",
          "71:       }",
          "73:       this.originalLabel = \"\";",
          "77:       this.label.contents().not( this.element[ 0 ] ).each( function() {",
          "81:         that.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;",
          "82:       } );",
          "85:       if ( this.originalLabel ) {",
          "86:         options.label = this.originalLabel;",
          "87:       }",
          "89:       disabled = this.element[ 0 ].disabled;",
          "90:       if ( disabled != null ) {",
          "91:         options.disabled = disabled;",
          "92:       }",
          "93:       return options;",
          "94:     },",
          "96:     _create: function() {",
          "97:       var checked = this.element[ 0 ].checked;",
          "99:       this._bindFormResetHandler();",
          "101:       if ( this.options.disabled == null ) {",
          "102:         this.options.disabled = this.element[ 0 ].disabled;",
          "103:       }",
          "105:       this._setOption( \"disabled\", this.options.disabled );",
          "106:       this._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );",
          "107:       this._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );",
          "109:       if ( this.type === \"radio\" ) {",
          "110:         this._addClass( this.label, \"ui-checkboxradio-radio-label\" );",
          "111:       }",
          "113:       if ( this.options.label && this.options.label !== this.originalLabel ) {",
          "114:         this._updateLabel();",
          "115:       } else if ( this.originalLabel ) {",
          "116:         this.options.label = this.originalLabel;",
          "117:       }",
          "119:       this._enhance();",
          "121:       if ( checked ) {",
          "122:         this._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );",
          "123:         if ( this.icon ) {",
          "124:           this._addClass( this.icon, null, \"ui-state-hover\" );",
          "125:         }",
          "126:       }",
          "128:       this._on( {",
          "129:         change: \"_toggleClasses\",",
          "130:         focus: function() {",
          "131:           this._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );",
          "132:         },",
          "133:         blur: function() {",
          "134:           this._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );",
          "135:         }",
          "136:       } );",
          "137:     },",
          "139:     _readType: function() {",
          "140:       var nodeName = this.element[ 0 ].nodeName.toLowerCase();",
          "141:       this.type = this.element[ 0 ].type;",
          "142:       if ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {",
          "143:         $.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +",
          "144:             \" and element.type=\" + this.type );",
          "145:       }",
          "146:     },",
          "149:     _enhance: function() {",
          "150:       this._updateIcon( this.element[ 0 ].checked );",
          "151:     },",
          "153:     widget: function() {",
          "154:       return this.label;",
          "155:     },",
          "157:     _getRadioGroup: function() {",
          "158:       var group;",
          "159:       var name = this.element[ 0 ].name;",
          "160:       var nameSelector = \"input[name='\" + $.ui.escapeSelector( name ) + \"']\";",
          "162:       if ( !name ) {",
          "163:         return $( [] );",
          "164:       }",
          "166:       if ( this.form.length ) {",
          "167:         group = $( this.form[ 0 ].elements ).filter( nameSelector );",
          "168:       } else {",
          "171:         group = $( nameSelector ).filter( function() {",
          "172:           return $( this ).form().length === 0;",
          "173:         } );",
          "174:       }",
          "176:       return group.not( this.element );",
          "177:     },",
          "179:     _toggleClasses: function() {",
          "180:       var checked = this.element[ 0 ].checked;",
          "181:       this._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );",
          "183:       if ( this.options.icon && this.type === \"checkbox\" ) {",
          "184:         this._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )",
          "185:             ._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );",
          "186:       }",
          "188:       if ( this.type === \"radio\" ) {",
          "189:         this._getRadioGroup()",
          "190:             .each( function() {",
          "191:               var instance = $( this ).checkboxradio( \"instance\" );",
          "193:               if ( instance ) {",
          "194:                 instance._removeClass( instance.label,",
          "195:                     \"ui-checkboxradio-checked\", \"ui-state-active\" );",
          "196:               }",
          "197:             } );",
          "198:       }",
          "199:     },",
          "201:     _destroy: function() {",
          "202:       this._unbindFormResetHandler();",
          "204:       if ( this.icon ) {",
          "205:         this.icon.remove();",
          "206:         this.iconSpace.remove();",
          "207:       }",
          "208:     },",
          "210:     _setOption: function( key, value ) {",
          "213:       if ( key === \"label\" && !value ) {",
          "214:         return;",
          "215:       }",
          "217:       this._super( key, value );",
          "219:       if ( key === \"disabled\" ) {",
          "220:         this._toggleClass( this.label, null, \"ui-state-disabled\", value );",
          "221:         this.element[ 0 ].disabled = value;",
          "224:         return;",
          "225:       }",
          "226:       this.refresh();",
          "227:     },",
          "229:     _updateIcon: function( checked ) {",
          "230:       var toAdd = \"ui-icon ui-icon-background \";",
          "232:       if ( this.options.icon ) {",
          "233:         if ( !this.icon ) {",
          "234:           this.icon = $( \"<span>\" );",
          "235:           this.iconSpace = $( \"<span> </span>\" );",
          "236:           this._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );",
          "237:         }",
          "239:         if ( this.type === \"checkbox\" ) {",
          "240:           toAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";",
          "241:           this._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );",
          "242:         } else {",
          "243:           toAdd += \"ui-icon-blank\";",
          "244:         }",
          "245:         this._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );",
          "246:         if ( !checked ) {",
          "247:           this._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );",
          "248:         }",
          "249:         this.icon.prependTo( this.label ).after( this.iconSpace );",
          "250:       } else if ( this.icon !== undefined ) {",
          "251:         this.icon.remove();",
          "252:         this.iconSpace.remove();",
          "253:         delete this.icon;",
          "254:       }",
          "255:     },",
          "257:     _updateLabel: function() {",
          "260:       var contents = this.label.contents().not( this.element[ 0 ] );",
          "261:       if ( this.icon ) {",
          "262:         contents = contents.not( this.icon[ 0 ] );",
          "263:       }",
          "264:       if ( this.iconSpace ) {",
          "265:         contents = contents.not( this.iconSpace[ 0 ] );",
          "266:       }",
          "267:       contents.remove();",
          "269:       this.label.append( this.options.label );",
          "270:     },",
          "272:     refresh: function() {",
          "273:       var checked = this.element[ 0 ].checked,",
          "274:           isDisabled = this.element[ 0 ].disabled;",
          "276:       this._updateIcon( checked );",
          "277:       this._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );",
          "278:       if ( this.options.label !== null ) {",
          "279:         this._updateLabel();",
          "280:       }",
          "282:       if ( isDisabled !== this.options.disabled ) {",
          "283:         this._setOptions( { \"disabled\": isDisabled } );",
          "284:       }",
          "285:     }",
          "287:   } ] );",
          "289:   return $.ui.checkboxradio;",
          "291: } ) );",
          "",
          "[Added Lines]",
          "25:  \"use strict\";",
          "27:  if ( typeof define === \"function\" && define.amd ) {",
          "30:   define( [",
          "31:    \"jquery\",",
          "32:    \"../form-reset-mixin\",",
          "33:    \"../labels\",",
          "34:    \"../widget\"",
          "35:   ], factory );",
          "36:  } else {",
          "39:   factory( jQuery );",
          "40:  }",
          "41: } )( function( $ ) {",
          "42: \"use strict\";",
          "44: $.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {",
          "45:  version: \"1.13.3\",",
          "46:  options: {",
          "47:   disabled: null,",
          "48:   label: null,",
          "49:   icon: true,",
          "50:   classes: {",
          "51:    \"ui-checkboxradio-label\": \"ui-corner-all\",",
          "52:    \"ui-checkboxradio-icon\": \"ui-corner-all\"",
          "53:   }",
          "54:  },",
          "56:  _getCreateOptions: function() {",
          "57:   var disabled, labels, labelContents;",
          "58:   var options = this._super() || {};",
          "63:   this._readType();",
          "65:   labels = this.element.labels();",
          "68:   this.label = $( labels[ labels.length - 1 ] );",
          "69:   if ( !this.label.length ) {",
          "70:    $.error( \"No label found for checkboxradio widget\" );",
          "71:   }",
          "73:   this.originalLabel = \"\";",
          "80:   labelContents = this.label.contents().not( this.element[ 0 ] );",
          "82:   if ( labelContents.length ) {",
          "83:    this.originalLabel += labelContents",
          "84:     .clone()",
          "85:     .wrapAll( \"<div></div>\" )",
          "86:     .parent()",
          "87:     .html();",
          "88:   }",
          "91:   if ( this.originalLabel ) {",
          "92:    options.label = this.originalLabel;",
          "93:   }",
          "95:   disabled = this.element[ 0 ].disabled;",
          "96:   if ( disabled != null ) {",
          "97:    options.disabled = disabled;",
          "98:   }",
          "99:   return options;",
          "100:  },",
          "102:  _create: function() {",
          "103:   var checked = this.element[ 0 ].checked;",
          "105:   this._bindFormResetHandler();",
          "107:   if ( this.options.disabled == null ) {",
          "108:    this.options.disabled = this.element[ 0 ].disabled;",
          "109:   }",
          "111:   this._setOption( \"disabled\", this.options.disabled );",
          "112:   this._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );",
          "113:   this._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );",
          "115:   if ( this.type === \"radio\" ) {",
          "116:    this._addClass( this.label, \"ui-checkboxradio-radio-label\" );",
          "117:   }",
          "119:   if ( this.options.label && this.options.label !== this.originalLabel ) {",
          "120:    this._updateLabel();",
          "121:   } else if ( this.originalLabel ) {",
          "122:    this.options.label = this.originalLabel;",
          "123:   }",
          "125:   this._enhance();",
          "127:   if ( checked ) {",
          "128:    this._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );",
          "129:   }",
          "131:   this._on( {",
          "132:    change: \"_toggleClasses\",",
          "133:    focus: function() {",
          "134:     this._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );",
          "135:    },",
          "136:    blur: function() {",
          "137:     this._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );",
          "138:    }",
          "139:   } );",
          "140:  },",
          "142:  _readType: function() {",
          "143:   var nodeName = this.element[ 0 ].nodeName.toLowerCase();",
          "144:   this.type = this.element[ 0 ].type;",
          "145:   if ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {",
          "146:    $.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +",
          "147:     \" and element.type=\" + this.type );",
          "148:   }",
          "149:  },",
          "152:  _enhance: function() {",
          "153:   this._updateIcon( this.element[ 0 ].checked );",
          "154:  },",
          "156:  widget: function() {",
          "157:   return this.label;",
          "158:  },",
          "160:  _getRadioGroup: function() {",
          "161:   var group;",
          "162:   var name = this.element[ 0 ].name;",
          "163:   var nameSelector = \"input[name='\" + $.escapeSelector( name ) + \"']\";",
          "165:   if ( !name ) {",
          "166:    return $( [] );",
          "167:   }",
          "169:   if ( this.form.length ) {",
          "170:    group = $( this.form[ 0 ].elements ).filter( nameSelector );",
          "171:   } else {",
          "174:    group = $( nameSelector ).filter( function() {",
          "175:     return $( this )._form().length === 0;",
          "176:    } );",
          "177:   }",
          "179:   return group.not( this.element );",
          "180:  },",
          "182:  _toggleClasses: function() {",
          "183:   var checked = this.element[ 0 ].checked;",
          "184:   this._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );",
          "186:   if ( this.options.icon && this.type === \"checkbox\" ) {",
          "187:    this._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )",
          "188:     ._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );",
          "189:   }",
          "191:   if ( this.type === \"radio\" ) {",
          "192:    this._getRadioGroup()",
          "193:     .each( function() {",
          "194:      var instance = $( this ).checkboxradio( \"instance\" );",
          "196:      if ( instance ) {",
          "197:       instance._removeClass( instance.label,",
          "198:        \"ui-checkboxradio-checked\", \"ui-state-active\" );",
          "199:      }",
          "200:     } );",
          "201:   }",
          "202:  },",
          "204:  _destroy: function() {",
          "205:   this._unbindFormResetHandler();",
          "207:   if ( this.icon ) {",
          "208:    this.icon.remove();",
          "209:    this.iconSpace.remove();",
          "210:   }",
          "211:  },",
          "213:  _setOption: function( key, value ) {",
          "216:   if ( key === \"label\" && !value ) {",
          "217:    return;",
          "218:   }",
          "220:   this._super( key, value );",
          "222:   if ( key === \"disabled\" ) {",
          "223:    this._toggleClass( this.label, null, \"ui-state-disabled\", value );",
          "224:    this.element[ 0 ].disabled = value;",
          "227:    return;",
          "228:   }",
          "229:   this.refresh();",
          "230:  },",
          "232:  _updateIcon: function( checked ) {",
          "233:   var toAdd = \"ui-icon ui-icon-background \";",
          "235:   if ( this.options.icon ) {",
          "236:    if ( !this.icon ) {",
          "237:     this.icon = $( \"<span>\" );",
          "238:     this.iconSpace = $( \"<span> </span>\" );",
          "239:     this._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );",
          "240:    }",
          "242:    if ( this.type === \"checkbox\" ) {",
          "243:     toAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";",
          "244:     this._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );",
          "245:    } else {",
          "246:     toAdd += \"ui-icon-blank\";",
          "247:    }",
          "248:    this._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );",
          "249:    if ( !checked ) {",
          "250:     this._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );",
          "251:    }",
          "252:    this.icon.prependTo( this.label ).after( this.iconSpace );",
          "253:   } else if ( this.icon !== undefined ) {",
          "254:    this.icon.remove();",
          "255:    this.iconSpace.remove();",
          "256:    delete this.icon;",
          "257:   }",
          "258:  },",
          "260:  _updateLabel: function() {",
          "263:   var contents = this.label.contents().not( this.element[ 0 ] );",
          "264:   if ( this.icon ) {",
          "265:    contents = contents.not( this.icon[ 0 ] );",
          "266:   }",
          "267:   if ( this.iconSpace ) {",
          "268:    contents = contents.not( this.iconSpace[ 0 ] );",
          "269:   }",
          "270:   contents.remove();",
          "272:   this.label.append( this.options.label );",
          "273:  },",
          "275:  refresh: function() {",
          "276:   var checked = this.element[ 0 ].checked,",
          "277:    isDisabled = this.element[ 0 ].disabled;",
          "279:   this._updateIcon( checked );",
          "280:   this._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );",
          "281:   if ( this.options.label !== null ) {",
          "282:    this._updateLabel();",
          "283:   }",
          "285:   if ( isDisabled !== this.options.disabled ) {",
          "286:    this._setOptions( { \"disabled\": isDisabled } );",
          "287:   }",
          "288:  }",
          "290: } ] );",
          "292: return $.ui.checkboxradio;",
          "294: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js||vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js -> vendor/assets/javascripts/jquery-ui/widgets/controlgroup.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: ( function( factory ) {",
          "22:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:   factory( jQuery );",
          "33:  }",
          "35: var controlgroupCornerRegex = /ui-corner-([a-z]){2,6}/g;",
          "37: return $.widget( \"ui.controlgroup\", {",
          "39:  defaultElement: \"<div>\",",
          "40:  options: {",
          "41:   direction: \"horizontal\",",
          "",
          "[Removed Lines]",
          "34: }( function( $ ) {",
          "38:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "36: } )( function( $ ) {",
          "37: \"use strict\";",
          "42:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     } );",
          "153:   } );",
          "156:   this._addClass( this.childWidgets, \"ui-controlgroup-item\" );",
          "157:  },",
          "",
          "[Removed Lines]",
          "155:   this.childWidgets = $( $.unique( childWidgets ) );",
          "",
          "[Added Lines]",
          "159:   this.childWidgets = $( $.uniqueSort( childWidgets ) );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:   var result = {};",
          "237:   $.each( classes, function( key ) {",
          "238:    var current = instance.options.classes[ key ] || \"\";",
          "240:    result[ key ] = ( current + \" \" + classes[ key ] ).replace( /\\s+/g, \" \" );",
          "241:   } );",
          "242:   return result;",
          "",
          "[Removed Lines]",
          "239:    current = $.trim( current.replace( controlgroupCornerRegex, \"\" ) );",
          "",
          "[Added Lines]",
          "243:    current = String.prototype.trim.call( current.replace( controlgroupCornerRegex, \"\" ) );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "297:   }",
          "298:  }",
          "299: } );",
          "",
          "[Removed Lines]",
          "300: } ) );",
          "",
          "[Added Lines]",
          "304: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/datepicker.js||vendor/assets/javascripts/jquery-ui/widgets/datepicker.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/datepicker.js -> vendor/assets/javascripts/jquery-ui/widgets/datepicker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: ( function( factory ) {",
          "25:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   factory( jQuery );",
          "37:  }",
          "42: var datepicker_instActive;",
          "",
          "[Removed Lines]",
          "38: }( function( $ ) {",
          "40: $.extend( $.ui, { datepicker: { version: \"1.12.1\" } } );",
          "",
          "[Added Lines]",
          "39: } )( function( $ ) {",
          "40: \"use strict\";",
          "42: $.extend( $.ui, { datepicker: { version: \"1.13.3\" } } );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:   prevText: \"Prev\", // Display text for previous month link",
          "92:   nextText: \"Next\", // Display text for next month link",
          "93:   currentText: \"Today\", // Display text for current month link",
          "96:   monthNamesShort: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ], // For formatting",
          "97:   dayNames: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], // For formatting",
          "98:   dayNamesShort: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], // For formatting",
          "100:   weekHeader: \"Wk\", // Column header for week of the year",
          "101:   dateFormat: \"mm/dd/yy\", // See format options on parseDate",
          "102:   firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...",
          "103:   isRTL: false, // True if right-to-left language, false if left-to-right",
          "104:   showMonthAfterYear: false, // True if the year select precedes month, false for month then year",
          "106:  };",
          "107:  this._defaults = { // Global defaults for all the date picker instances",
          "108:   showOn: \"focus\", // \"focus\" for popup on focus,",
          "",
          "[Removed Lines]",
          "94:   monthNames: [ \"January\",\"February\",\"March\",\"April\",\"May\",\"June\",",
          "95:    \"July\",\"August\",\"September\",\"October\",\"November\",\"December\" ], // Names of months for drop-down and formatting",
          "99:   dayNamesMin: [ \"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\" ], // Column headings for days starting at Sunday",
          "105:   yearSuffix: \"\" // Additional text to append to the year in the month headers",
          "",
          "[Added Lines]",
          "97:   monthNames: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",",
          "98:    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], // Names of months for drop-down and formatting",
          "102:   dayNamesMin: [ \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\" ], // Column headings for days starting at Sunday",
          "108:   yearSuffix: \"\", // Additional text to append to the year in the month headers,",
          "109:   selectMonthLabel: \"Select month\", // Invisible label for month selector",
          "110:   selectYearLabel: \"Select year\" // Invisible label for year selector",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "143:   onSelect: null, // Define a callback function when a date is selected",
          "144:   onChangeMonthYear: null, // Define a callback function when the month or year is changed",
          "145:   onClose: null, // Define a callback function when the datepicker is closed",
          "146:   numberOfMonths: 1, // Number of months to show at a time",
          "147:   showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)",
          "148:   stepMonths: 1, // Number of months to step back/forward",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:   onUpdateDatepicker: null, // Define a callback function when the datepicker is updated",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "243:    inst.append.remove();",
          "244:   }",
          "245:   if ( appendText ) {",
          "247:    input[ isRTL ? \"before\" : \"after\" ]( inst.append );",
          "248:   }",
          "",
          "[Removed Lines]",
          "246:    inst.append = $( \"<span class='\" + this._appendClass + \"'>\" + appendText + \"</span>\" );",
          "",
          "[Added Lines]",
          "253:    inst.append = $( \"<span>\" )",
          "254:     .addClass( this._appendClass )",
          "255:     .text( appendText );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "260:   if ( showOn === \"button\" || showOn === \"both\" ) { // pop-up date picker when button clicked",
          "261:    buttonText = this._get( inst, \"buttonText\" );",
          "262:    buttonImage = this._get( inst, \"buttonImage\" );",
          "269:    input[ isRTL ? \"before\" : \"after\" ]( inst.trigger );",
          "270:    inst.trigger.on( \"click\", function() {",
          "271:     if ( $.datepicker._datepickerShowing && $.datepicker._lastInput === input[ 0 ] ) {",
          "",
          "[Removed Lines]",
          "263:    inst.trigger = $( this._get( inst, \"buttonImageOnly\" ) ?",
          "264:     $( \"<img/>\" ).addClass( this._triggerClass ).",
          "265:      attr( { src: buttonImage, alt: buttonText, title: buttonText } ) :",
          "266:     $( \"<button type='button'></button>\" ).addClass( this._triggerClass ).",
          "267:      html( !buttonImage ? buttonText : $( \"<img/>\" ).attr(",
          "268:      { src:buttonImage, alt:buttonText, title:buttonText } ) ) );",
          "",
          "[Added Lines]",
          "273:    if ( this._get( inst, \"buttonImageOnly\" ) ) {",
          "274:     inst.trigger = $( \"<img>\" )",
          "275:      .addClass( this._triggerClass )",
          "276:      .attr( {",
          "277:       src: buttonImage,",
          "278:       alt: buttonText,",
          "279:       title: buttonText",
          "280:      } );",
          "281:    } else {",
          "282:     inst.trigger = $( \"<button type='button'>\" )",
          "283:      .addClass( this._triggerClass );",
          "284:     if ( buttonImage ) {",
          "285:      inst.trigger.html(",
          "286:       $( \"<img>\" )",
          "287:        .attr( {",
          "288:         src: buttonImage,",
          "289:         alt: buttonText,",
          "290:         title: buttonText",
          "291:        } )",
          "292:      );",
          "293:     } else {",
          "294:      inst.trigger.text( buttonText );",
          "295:     }",
          "296:    }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "412:   if ( datepicker_instActive === inst ) {",
          "413:    datepicker_instActive = null;",
          "414:   }",
          "415:  },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:    this._curInst = null;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "430:   if ( nodeName === \"input\" ) {",
          "431:    target.disabled = false;",
          "432:    inst.trigger.filter( \"button\" ).",
          "434:     filter( \"img\" ).css( { opacity: \"1.0\", cursor: \"\" } );",
          "435:   } else if ( nodeName === \"div\" || nodeName === \"span\" ) {",
          "436:    inline = $target.children( \".\" + this._inlineClass );",
          "",
          "[Removed Lines]",
          "433:     each( function() { this.disabled = false; } ).end().",
          "",
          "[Added Lines]",
          "463:     each( function() {",
          "464:      this.disabled = false;",
          "465:     } ).end().",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "439:     prop( \"disabled\", false );",
          "440:   }",
          "441:   this._disabledInputs = $.map( this._disabledInputs,",
          "443:  },",
          "",
          "[Removed Lines]",
          "442:    function( value ) { return ( value === target ? null : value ); } ); // delete entry",
          "",
          "[Added Lines]",
          "476:    function( value ) {",
          "477:     return ( value === target ? null : value );",
          "478:    } );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "458:   if ( nodeName === \"input\" ) {",
          "459:    target.disabled = true;",
          "460:    inst.trigger.filter( \"button\" ).",
          "462:     filter( \"img\" ).css( { opacity: \"0.5\", cursor: \"default\" } );",
          "463:   } else if ( nodeName === \"div\" || nodeName === \"span\" ) {",
          "464:    inline = $target.children( \".\" + this._inlineClass );",
          "",
          "[Removed Lines]",
          "461:     each( function() { this.disabled = true; } ).end().",
          "",
          "[Added Lines]",
          "497:     each( function() {",
          "498:      this.disabled = true;",
          "499:     } ).end().",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "467:     prop( \"disabled\", true );",
          "468:   }",
          "469:   this._disabledInputs = $.map( this._disabledInputs,",
          "471:   this._disabledInputs[ this._disabledInputs.length ] = target;",
          "472:  },",
          "",
          "[Removed Lines]",
          "470:    function( value ) { return ( value === target ? null : value ); } ); // delete entry",
          "",
          "[Added Lines]",
          "510:    function( value ) {",
          "511:     return ( value === target ? null : value );",
          "512:    } );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "495:  _getInst: function( target ) {",
          "496:   try {",
          "497:    return $.data( target, \"datepicker\" );",
          "500:    throw \"Missing instance data for this datepicker\";",
          "501:   }",
          "502:  },",
          "",
          "[Removed Lines]",
          "498:   }",
          "499:   catch ( err ) {",
          "",
          "[Added Lines]",
          "540:   } catch ( err ) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "729:      $.datepicker._updateAlternate( inst );",
          "730:      $.datepicker._updateDatepicker( inst );",
          "731:     }",
          "734:    }",
          "735:   }",
          "736:   return true;",
          "",
          "[Removed Lines]",
          "732:    }",
          "733:    catch ( err ) {",
          "",
          "[Added Lines]",
          "773:    } catch ( err ) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "835:    numMonths = this._getNumberOfMonths( inst ),",
          "836:    cols = numMonths[ 1 ],",
          "837:    width = 17,",
          "840:   if ( activeCell.length > 0 ) {",
          "841:    datepicker_handleMouseover.apply( activeCell.get( 0 ) );",
          "",
          "[Removed Lines]",
          "838:    activeCell = inst.dpDiv.find( \".\" + this._dayOverClass + \" a\" );",
          "",
          "[Added Lines]",
          "878:    activeCell = inst.dpDiv.find( \".\" + this._dayOverClass + \" a\" ),",
          "879:    onUpdateDatepicker = $.datepicker._get( inst, \"onUpdateDatepicker\" );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "863:     if ( origyearshtml === inst.yearshtml && inst.yearshtml ) {",
          "865:     }",
          "866:     origyearshtml = inst.yearshtml = null;",
          "867:    }, 0 );",
          "868:   }",
          "869:  },",
          "",
          "[Removed Lines]",
          "864:      inst.dpDiv.find( \"select.ui-datepicker-year:first\" ).replaceWith( inst.yearshtml );",
          "",
          "[Added Lines]",
          "905:      inst.dpDiv.find( \"select.ui-datepicker-year\" ).first().replaceWith( inst.yearshtml );",
          "911:   if ( onUpdateDatepicker ) {",
          "912:    onUpdateDatepicker.apply( ( inst.input ? inst.input[ 0 ] : null ), [ inst ] );",
          "913:   }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "903:    inst = this._getInst( obj ),",
          "904:    isRTL = this._get( inst, \"isRTL\" );",
          "907:    obj = obj[ isRTL ? \"previousSibling\" : \"nextSibling\" ];",
          "908:   }",
          "",
          "[Removed Lines]",
          "906:   while ( obj && ( obj.type === \"hidden\" || obj.nodeType !== 1 || $.expr.filters.hidden( obj ) ) ) {",
          "",
          "[Added Lines]",
          "951:   while ( obj && ( obj.type === \"hidden\" || obj.nodeType !== 1 || $.expr.pseudos.hidden( obj ) ) ) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "991:   if ( this._isDisabledDatepicker( target[ 0 ] ) ) {",
          "992:    return;",
          "993:   }",
          "997:   this._updateDatepicker( inst );",
          "998:  },",
          "",
          "[Removed Lines]",
          "994:   this._adjustInstDate( inst, offset +",
          "995:    ( period === \"M\" ? this._get( inst, \"showCurrentAtPos\" ) : 0 ), // undo positioning",
          "996:    period );",
          "",
          "[Added Lines]",
          "1039:   this._adjustInstDate( inst, offset, period );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1040:   }",
          "1042:   inst = this._getInst( target[ 0 ] );",
          "1044:   inst.selectedMonth = inst.currentMonth = month;",
          "1045:   inst.selectedYear = inst.currentYear = year;",
          "1046:   this._selectDate( id, this._formatDate( inst,",
          "",
          "[Removed Lines]",
          "1043:   inst.selectedDay = inst.currentDay = $( \"a\", td ).html();",
          "",
          "[Added Lines]",
          "1086:   inst.selectedDay = inst.currentDay = parseInt( $( \"a\", td ).attr( \"data-date\" ) );",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1093:    altFormat = this._get( inst, \"altFormat\" ) || this._get( inst, \"dateFormat\" );",
          "1094:    date = this._getDate( inst );",
          "1095:    dateStr = this.formatDate( altFormat, date, this._getFormatConfig( inst ) );",
          "1097:   }",
          "1098:  },",
          "",
          "[Removed Lines]",
          "1096:    $( altField ).val( dateStr );",
          "",
          "[Added Lines]",
          "1139:    $( document ).find( altField ).val( dateStr );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1532:     try {",
          "1533:      return $.datepicker.parseDate( $.datepicker._get( inst, \"dateFormat\" ),",
          "1534:       offset, $.datepicker._getFormatConfig( inst ) );",
          "1539:     }",
          "",
          "[Removed Lines]",
          "1535:     }",
          "1536:     catch ( e ) {",
          "",
          "[Added Lines]",
          "1578:     } catch ( e ) {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1707:    this._daylightSavingAdjust( new Date( drawYear, drawMonth - stepMonths, 1 ) ),",
          "1708:    this._getFormatConfig( inst ) ) );",
          "1715:   nextText = this._get( inst, \"nextText\" );",
          "1716:   nextText = ( !navigationAsDateFormat ? nextText : this.formatDate( nextText,",
          "1717:    this._daylightSavingAdjust( new Date( drawYear, drawMonth + stepMonths, 1 ) ),",
          "1718:    this._getFormatConfig( inst ) ) );",
          "1725:   currentText = this._get( inst, \"currentText\" );",
          "1726:   gotoDate = ( this._get( inst, \"gotoCurrent\" ) && inst.currentDay ? currentDate : today );",
          "1727:   currentText = ( !navigationAsDateFormat ? currentText :",
          "1728:    this.formatDate( currentText, gotoDate, this._getFormatConfig( inst ) ) );",
          "1737:   firstDay = parseInt( this._get( inst, \"firstDay\" ), 10 );",
          "1738:   firstDay = ( isNaN( firstDay ) ? 0 : firstDay );",
          "",
          "[Removed Lines]",
          "1710:   prev = ( this._canAdjustMonth( inst, -1, drawYear, drawMonth ) ?",
          "1711:    \"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'\" +",
          "1712:    \" title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\" ) + \"'>\" + prevText + \"</span></a>\" :",
          "1713:    ( hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\" + prevText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"e\" : \"w\" ) + \"'>\" + prevText + \"</span></a>\" ) );",
          "1720:   next = ( this._canAdjustMonth( inst, +1, drawYear, drawMonth ) ?",
          "1721:    \"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'\" +",
          "1722:    \" title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\" ) + \"'>\" + nextText + \"</span></a>\" :",
          "1723:    ( hideIfNoPrevNext ? \"\" : \"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\" + nextText + \"'><span class='ui-icon ui-icon-circle-triangle-\" + ( isRTL ? \"w\" : \"e\" ) + \"'>\" + nextText + \"</span></a>\" ) );",
          "1730:   controls = ( !inst.inline ? \"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\" +",
          "1731:    this._get( inst, \"closeText\" ) + \"</button>\" : \"\" );",
          "1733:   buttonPanel = ( showButtonPanel ) ? \"<div class='ui-datepicker-buttonpane ui-widget-content'>\" + ( isRTL ? controls : \"\" ) +",
          "1734:    ( this._isInRange( inst, gotoDate ) ? \"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'\" +",
          "1735:    \">\" + currentText + \"</button>\" : \"\" ) + ( isRTL ? \"\" : controls ) + \"</div>\" : \"\";",
          "",
          "[Added Lines]",
          "1752:   if ( this._canAdjustMonth( inst, -1, drawYear, drawMonth ) ) {",
          "1753:    prev = $( \"<a>\" )",
          "1754:     .attr( {",
          "1755:      \"class\": \"ui-datepicker-prev ui-corner-all\",",
          "1756:      \"data-handler\": \"prev\",",
          "1757:      \"data-event\": \"click\",",
          "1758:      title: prevText",
          "1759:     } )",
          "1760:     .append(",
          "1761:      $( \"<span>\" )",
          "1762:       .addClass( \"ui-icon ui-icon-circle-triangle-\" +",
          "1763:        ( isRTL ? \"e\" : \"w\" ) )",
          "1764:       .text( prevText )",
          "1765:     )[ 0 ].outerHTML;",
          "1766:   } else if ( hideIfNoPrevNext ) {",
          "1767:    prev = \"\";",
          "1768:   } else {",
          "1769:    prev = $( \"<a>\" )",
          "1770:     .attr( {",
          "1771:      \"class\": \"ui-datepicker-prev ui-corner-all ui-state-disabled\",",
          "1772:      title: prevText",
          "1773:     } )",
          "1774:     .append(",
          "1775:      $( \"<span>\" )",
          "1776:       .addClass( \"ui-icon ui-icon-circle-triangle-\" +",
          "1777:        ( isRTL ? \"e\" : \"w\" ) )",
          "1778:       .text( prevText )",
          "1779:     )[ 0 ].outerHTML;",
          "1780:   }",
          "1787:   if ( this._canAdjustMonth( inst, +1, drawYear, drawMonth ) ) {",
          "1788:    next = $( \"<a>\" )",
          "1789:     .attr( {",
          "1790:      \"class\": \"ui-datepicker-next ui-corner-all\",",
          "1791:      \"data-handler\": \"next\",",
          "1792:      \"data-event\": \"click\",",
          "1793:      title: nextText",
          "1794:     } )",
          "1795:     .append(",
          "1796:      $( \"<span>\" )",
          "1797:       .addClass( \"ui-icon ui-icon-circle-triangle-\" +",
          "1798:        ( isRTL ? \"w\" : \"e\" ) )",
          "1799:       .text( nextText )",
          "1800:     )[ 0 ].outerHTML;",
          "1801:   } else if ( hideIfNoPrevNext ) {",
          "1802:    next = \"\";",
          "1803:   } else {",
          "1804:    next = $( \"<a>\" )",
          "1805:     .attr( {",
          "1806:      \"class\": \"ui-datepicker-next ui-corner-all ui-state-disabled\",",
          "1807:      title: nextText",
          "1808:     } )",
          "1809:     .append(",
          "1810:      $( \"<span>\" )",
          "1811:       .attr( \"class\", \"ui-icon ui-icon-circle-triangle-\" +",
          "1812:        ( isRTL ? \"w\" : \"e\" ) )",
          "1813:       .text( nextText )",
          "1814:     )[ 0 ].outerHTML;",
          "1815:   }",
          "1822:   controls = \"\";",
          "1823:   if ( !inst.inline ) {",
          "1824:    controls = $( \"<button>\" )",
          "1825:     .attr( {",
          "1826:      type: \"button\",",
          "1827:      \"class\": \"ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all\",",
          "1828:      \"data-handler\": \"hide\",",
          "1829:      \"data-event\": \"click\"",
          "1830:     } )",
          "1831:     .text( this._get( inst, \"closeText\" ) )[ 0 ].outerHTML;",
          "1832:   }",
          "1834:   buttonPanel = \"\";",
          "1835:   if ( showButtonPanel ) {",
          "1836:    buttonPanel = $( \"<div class='ui-datepicker-buttonpane ui-widget-content'>\" )",
          "1837:     .append( isRTL ? controls : \"\" )",
          "1838:     .append( this._isInRange( inst, gotoDate ) ?",
          "1839:      $( \"<button>\" )",
          "1840:       .attr( {",
          "1841:        type: \"button\",",
          "1842:        \"class\": \"ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all\",",
          "1843:        \"data-handler\": \"today\",",
          "1844:        \"data-event\": \"click\"",
          "1845:       } )",
          "1846:       .text( currentText ) :",
          "1847:      \"\" )",
          "1848:     .append( isRTL ? \"\" : controls )[ 0 ].outerHTML;",
          "1849:   }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1820:        ( printDate.getTime() === today.getTime() ? \" ui-state-highlight\" : \"\" ) +",
          "1821:        ( printDate.getTime() === currentDate.getTime() ? \" ui-state-active\" : \"\" ) + // highlight selected day",
          "1822:        ( otherMonth ? \" ui-priority-secondary\" : \"\" ) + // distinguish dates from other months",
          "1824:       printDate.setDate( printDate.getDate() + 1 );",
          "1825:       printDate = this._daylightSavingAdjust( printDate );",
          "1826:      }",
          "",
          "[Removed Lines]",
          "1823:        \"' href='#'>\" + printDate.getDate() + \"</a>\" ) ) + \"</td>\"; // display selectable date",
          "",
          "[Added Lines]",
          "1937:        \"' href='#' aria-current='\" + ( printDate.getTime() === currentDate.getTime() ? \"true\" : \"false\" ) + // mark date as selected for screen reader",
          "1938:        \"' data-date='\" + printDate.getDate() + // store date as data",
          "1939:        \"'>\" + printDate.getDate() + \"</a>\" ) ) + \"</td>\"; // display selectable date",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1850:    changeMonth = this._get( inst, \"changeMonth\" ),",
          "1851:    changeYear = this._get( inst, \"changeYear\" ),",
          "1852:    showMonthAfterYear = this._get( inst, \"showMonthAfterYear\" ),",
          "1853:    html = \"<div class='ui-datepicker-title'>\",",
          "1854:    monthHtml = \"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1969:    selectMonthLabel = this._get( inst, \"selectMonthLabel\" ),",
          "1970:    selectYearLabel = this._get( inst, \"selectYearLabel\" ),",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1859:   } else {",
          "1860:    inMinYear = ( minDate && minDate.getFullYear() === drawYear );",
          "1861:    inMaxYear = ( maxDate && maxDate.getFullYear() === drawYear );",
          "1863:    for ( month = 0; month < 12; month++ ) {",
          "1864:     if ( ( !inMinYear || month >= minDate.getMonth() ) && ( !inMaxYear || month <= maxDate.getMonth() ) ) {",
          "1865:      monthHtml += \"<option value='\" + month + \"'\" +",
          "",
          "[Removed Lines]",
          "1862:    monthHtml += \"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\";",
          "",
          "[Added Lines]",
          "1980:    monthHtml += \"<select class='ui-datepicker-month' aria-label='\" + selectMonthLabel + \"' data-handler='selectMonth' data-event='change'>\";",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1894:     endYear = Math.max( year, determineYear( years[ 1 ] || \"\" ) );",
          "1895:     year = ( minDate ? Math.max( year, minDate.getFullYear() ) : year );",
          "1896:     endYear = ( maxDate ? Math.min( endYear, maxDate.getFullYear() ) : endYear );",
          "1898:     for ( ; year <= endYear; year++ ) {",
          "1899:      inst.yearshtml += \"<option value='\" + year + \"'\" +",
          "1900:       ( year === drawYear ? \" selected='selected'\" : \"\" ) +",
          "",
          "[Removed Lines]",
          "1897:     inst.yearshtml += \"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";",
          "",
          "[Added Lines]",
          "2015:     inst.yearshtml += \"<select class='ui-datepicker-year' aria-label='\" + selectYearLabel + \"' data-handler='selectYear' data-event='change'>\";",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2106:    apply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );",
          "2107:  }",
          "2108:  return this.each( function() {",
          "2112:    $.datepicker._attachDatepicker( this, options );",
          "2113:  } );",
          "2114: };",
          "2116: $.datepicker = new Datepicker(); // singleton instance",
          "2117: $.datepicker.initialized = false;",
          "2118: $.datepicker.uuid = new Date().getTime();",
          "2121: return $.datepicker;",
          "",
          "[Removed Lines]",
          "2109:   typeof options === \"string\" ?",
          "2110:    $.datepicker[ \"_\" + options + \"Datepicker\" ].",
          "2111:     apply( $.datepicker, [ this ].concat( otherArgs ) ) :",
          "2119: $.datepicker.version = \"1.12.1\";",
          "2123: } ) );",
          "",
          "[Added Lines]",
          "2227:   if ( typeof options === \"string\" ) {",
          "2228:    $.datepicker[ \"_\" + options + \"Datepicker\" ]",
          "2229:     .apply( $.datepicker, [ this ].concat( otherArgs ) );",
          "2230:   } else {",
          "2232:   }",
          "2239: $.datepicker.version = \"1.13.3\";",
          "2243: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/dialog.js||vendor/assets/javascripts/jquery-ui/widgets/dialog.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/dialog.js -> vendor/assets/javascripts/jquery-ui/widgets/dialog.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: ( function( factory ) {",
          "34:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:   factory( jQuery );",
          "57:  }",
          "60: $.widget( \"ui.dialog\", {",
          "62:  options: {",
          "63:   appendTo: \"body\",",
          "64:   autoOpen: true,",
          "",
          "[Removed Lines]",
          "58: }( function( $ ) {",
          "61:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "60: } )( function( $ ) {",
          "61: \"use strict\";",
          "64:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "339:   hasFocus.eq( 0 ).trigger( \"focus\" );",
          "340:  },",
          "350:   }",
          "351:   event.preventDefault();",
          "358:  },",
          "360:  _createWrapper: function() {",
          "",
          "[Removed Lines]",
          "342:  _keepFocus: function( event ) {",
          "343:   function checkFocus() {",
          "344:    var activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),",
          "345:     isActive = this.uiDialog[ 0 ] === activeElement ||",
          "346:      $.contains( this.uiDialog[ 0 ], activeElement );",
          "347:    if ( !isActive ) {",
          "348:     this._focusTabbable();",
          "349:    }",
          "352:   checkFocus.call( this );",
          "357:   this._delay( checkFocus );",
          "",
          "[Added Lines]",
          "345:  _restoreTabbableFocus: function() {",
          "346:   var activeElement = $.ui.safeActiveElement( this.document[ 0 ] ),",
          "347:    isActive = this.uiDialog[ 0 ] === activeElement ||",
          "348:     $.contains( this.uiDialog[ 0 ], activeElement );",
          "349:   if ( !isActive ) {",
          "350:    this._focusTabbable();",
          "352:  },",
          "354:  _keepFocus: function( event ) {",
          "356:   this._restoreTabbableFocus();",
          "361:   this._delay( this._restoreTabbableFocus );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "383:      return;",
          "384:     }",
          "385:     var tabbables = this.uiDialog.find( \":tabbable\" ),",
          "389:     if ( ( event.target === last[ 0 ] || event.target === this.uiDialog[ 0 ] ) &&",
          "390:       !event.shiftKey ) {",
          "",
          "[Removed Lines]",
          "386:      first = tabbables.filter( \":first\" ),",
          "387:      last = tabbables.filter( \":last\" );",
          "",
          "[Added Lines]",
          "390:      first = tabbables.first(),",
          "391:      last = tabbables.last();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "495:   this.uiDialogButtonPane.remove();",
          "496:   this.uiButtonSet.empty();",
          "499:    this._removeClass( this.uiDialog, \"ui-dialog-buttons\" );",
          "500:    return;",
          "501:   }",
          "503:   $.each( buttons, function( name, props ) {",
          "504:    var click, buttonOptions;",
          "506:     { click: props, text: name } :",
          "507:     props;",
          "",
          "[Removed Lines]",
          "498:   if ( $.isEmptyObject( buttons ) || ( $.isArray( buttons ) && !buttons.length ) ) {",
          "505:    props = $.isFunction( props ) ?",
          "",
          "[Added Lines]",
          "502:   if ( $.isEmptyObject( buttons ) || ( Array.isArray( buttons ) && !buttons.length ) ) {",
          "509:    props = typeof props === \"function\" ?",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "867:    return;",
          "868:   }",
          "872:   var isOpening = true;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "874:   var jqMinor = $.fn.jquery.substring( 0, 4 );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "877:   if ( !this.document.data( \"ui-dialog-overlays\" ) ) {",
          "891:      }",
          "892:     }",
          "894:   }",
          "896:   this.overlay = $( \"<div>\" )",
          "",
          "[Removed Lines]",
          "882:    this._on( this.document, {",
          "883:     focusin: function( event ) {",
          "884:      if ( isOpening ) {",
          "885:       return;",
          "886:      }",
          "888:      if ( !this._allowInteraction( event ) ) {",
          "889:       event.preventDefault();",
          "890:       this._trackingInstances()[ 0 ]._focusTabbable();",
          "893:    } );",
          "",
          "[Added Lines]",
          "888:    this.document.on( \"focusin.ui-dialog\", function( event ) {",
          "889:     if ( isOpening ) {",
          "890:      return;",
          "891:     }",
          "893:     var instance = this._trackingInstances()[ 0 ];",
          "894:     if ( !instance._allowInteraction( event ) ) {",
          "895:      event.preventDefault();",
          "896:      instance._focusTabbable();",
          "906:      if ( jqMinor === \"3.4.\" || jqMinor === \"3.5.\" || jqMinor === \"3.6.\" ) {",
          "907:       instance._delay( instance._restoreTabbableFocus );",
          "910:    }.bind( this ) );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "913:    var overlays = this.document.data( \"ui-dialog-overlays\" ) - 1;",
          "915:    if ( !overlays ) {",
          "917:     this.document.removeData( \"ui-dialog-overlays\" );",
          "918:    } else {",
          "919:     this.document.data( \"ui-dialog-overlays\", overlays );",
          "",
          "[Removed Lines]",
          "916:     this._off( this.document, \"focusin\" );",
          "",
          "[Added Lines]",
          "933:     this.document.off( \"focusin.ui-dialog\" );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "952: return $.ui.dialog;",
          "",
          "[Removed Lines]",
          "954: } ) );",
          "",
          "[Added Lines]",
          "971: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/draggable.js||vendor/assets/javascripts/jquery-ui/widgets/draggable.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/draggable.js -> vendor/assets/javascripts/jquery-ui/widgets/draggable.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: ( function( factory ) {",
          "27:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:   factory( jQuery );",
          "45:  }",
          "48: $.widget( \"ui.draggable\", $.ui.mouse, {",
          "50:  widgetEventPrefix: \"drag\",",
          "51:  options: {",
          "52:   addClasses: true,",
          "",
          "[Removed Lines]",
          "46: }( function( $ ) {",
          "49:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "48: } )( function( $ ) {",
          "49: \"use strict\";",
          "52:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:   this.originalPageY = event.pageY;",
          "216:   this._setContainment();",
          "",
          "[Removed Lines]",
          "213:   ( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );",
          "",
          "[Added Lines]",
          "216:   if ( o.cursorAt ) {",
          "217:    this._adjustOffsetFromHelper( o.cursorAt );",
          "218:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "306:   if ( ( this.options.revert === \"invalid\" && !dropped ) ||",
          "307:     ( this.options.revert === \"valid\" && dropped ) ||",
          "309:     this.options.revert.call( this.element, dropped ) )",
          "310:   ) {",
          "311:    $( this.helper ).animate(",
          "",
          "[Removed Lines]",
          "308:     this.options.revert === true || ( $.isFunction( this.options.revert ) &&",
          "",
          "[Added Lines]",
          "313:     this.options.revert === true || ( typeof this.options.revert === \"function\" &&",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "377:  _createHelper: function( event ) {",
          "379:   var o = this.options,",
          "381:    helper = helperIsFunction ?",
          "382:     $( o.helper.apply( this.element[ 0 ], [ event ] ) ) :",
          "383:     ( o.helper === \"clone\" ?",
          "",
          "[Removed Lines]",
          "380:    helperIsFunction = $.isFunction( o.helper ),",
          "",
          "[Added Lines]",
          "385:    helperIsFunction = typeof o.helper === \"function\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "416:   if ( typeof obj === \"string\" ) {",
          "417:    obj = obj.split( \" \" );",
          "418:   }",
          "420:    obj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };",
          "421:   }",
          "422:   if ( \"left\" in obj ) {",
          "",
          "[Removed Lines]",
          "419:   if ( $.isArray( obj ) ) {",
          "",
          "[Added Lines]",
          "424:   if ( Array.isArray( obj ) ) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1125:      !$.contains( inst.snapElements[ i ].item.ownerDocument,",
          "1126:      inst.snapElements[ i ].item ) ) {",
          "1127:     if ( inst.snapElements[ i ].snapping ) {",
          "1129:       inst.options.snap.release.call(",
          "1130:        inst.element,",
          "1131:        event,",
          "1132:        $.extend( inst._uiHash(), { snapItem: inst.snapElements[ i ].item } )",
          "1134:     }",
          "1135:     inst.snapElements[ i ].snapping = false;",
          "1136:     continue;",
          "",
          "[Removed Lines]",
          "1128:      ( inst.options.snap.release &&",
          "1133:       ) );",
          "",
          "[Added Lines]",
          "1133:      if ( inst.options.snap.release ) {",
          "1138:       );",
          "1139:      }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1201:    }",
          "1203:    if ( !inst.snapElements[ i ].snapping && ( ts || bs || ls || rs || first ) ) {",
          "1205:      inst.options.snap.snap.call(",
          "1206:       inst.element,",
          "1207:       event,",
          "1208:       $.extend( inst._uiHash(), {",
          "1209:        snapItem: inst.snapElements[ i ].item",
          "1211:    }",
          "1212:    inst.snapElements[ i ].snapping = ( ts || bs || ls || rs || first );",
          "",
          "[Removed Lines]",
          "1204:     ( inst.options.snap.snap &&",
          "1210:       } ) ) );",
          "",
          "[Added Lines]",
          "1210:     if ( inst.options.snap.snap ) {",
          "1216:       } ) );",
          "1217:     }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1225:      ( parseInt( $( b ).css( \"zIndex\" ), 10 ) || 0 );",
          "1226:    } );",
          "1230:   min = parseInt( $( group[ 0 ] ).css( \"zIndex\" ), 10 ) || 0;",
          "1231:   $( group ).each( function( i ) {",
          "",
          "[Removed Lines]",
          "1228:   if ( !group.length ) { return; }",
          "",
          "[Added Lines]",
          "1235:   if ( !group.length ) {",
          "1236:    return;",
          "1237:   }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1257: return $.ui.draggable;",
          "",
          "[Removed Lines]",
          "1259: } ) );",
          "",
          "[Added Lines]",
          "1268: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/mouse.js||vendor/assets/javascripts/jquery-ui/widgets/mouse.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/mouse.js -> vendor/assets/javascripts/jquery-ui/widgets/mouse.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: ( function( factory ) {",
          "20:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:   factory( jQuery );",
          "33:  }",
          "36: var mouseHandled = false;",
          "37: $( document ).on( \"mouseup\", function() {",
          "",
          "[Removed Lines]",
          "34: }( function( $ ) {",
          "",
          "[Added Lines]",
          "36: } )( function( $ ) {",
          "37: \"use strict\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39: } );",
          "41: return $.widget( \"ui.mouse\", {",
          "43:  options: {",
          "44:   cancel: \"input, textarea, button, select, option\",",
          "45:   distance: 1,",
          "",
          "[Removed Lines]",
          "42:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "45:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:   this._mouseMoved = false;",
          "89:   this._mouseDownEvent = event;",
          "",
          "[Removed Lines]",
          "87:   ( this._mouseStarted && this._mouseUp( event ) );",
          "",
          "[Added Lines]",
          "90:   if ( this._mouseStarted ) {",
          "91:    this._mouseUp( event );",
          "92:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "177:   if ( this._mouseDistanceMet( event ) && this._mouseDelayMet( event ) ) {",
          "178:    this._mouseStarted =",
          "179:     ( this._mouseStart( this._mouseDownEvent, event ) !== false );",
          "181:   }",
          "183:   return !this._mouseStarted;",
          "",
          "[Removed Lines]",
          "180:    ( this._mouseStarted ? this._mouseDrag( event ) : this._mouseUp( event ) );",
          "",
          "[Added Lines]",
          "185:    if ( this._mouseStarted ) {",
          "186:     this._mouseDrag( event );",
          "187:    } else {",
          "188:     this._mouseUp( event );",
          "189:    }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "224:  _mouseStart: function( /* event */ ) {},",
          "225:  _mouseDrag: function( /* event */ ) {},",
          "226:  _mouseStop: function( /* event */ ) {},",
          "228: } );",
          "",
          "[Removed Lines]",
          "227:  _mouseCapture: function( /* event */ ) { return true; }",
          "230: } ) );",
          "",
          "[Added Lines]",
          "236:  _mouseCapture: function( /* event */ ) {",
          "237:   return true;",
          "238:  }",
          "241: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/resizable.js||vendor/assets/javascripts/jquery-ui/widgets/resizable.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/resizable.js -> vendor/assets/javascripts/jquery-ui/widgets/resizable.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: ( function( factory ) {",
          "26:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   factory( jQuery );",
          "41:  }",
          "44: $.widget( \"ui.resizable\", $.ui.mouse, {",
          "46:  widgetEventPrefix: \"resize\",",
          "47:  options: {",
          "48:   alsoResize: false,",
          "",
          "[Removed Lines]",
          "42: }( function( $ ) {",
          "45:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "44: } )( function( $ ) {",
          "45: \"use strict\";",
          "48:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "103:   return has;",
          "104:  },",
          "",
          "[Removed Lines]",
          "100:   el[ scroll ] = 1;",
          "101:   has = ( el[ scroll ] > 0 );",
          "102:   el[ scroll ] = 0;",
          "",
          "[Added Lines]",
          "103:   try {",
          "104:    el[ scroll ] = 1;",
          "105:    has = ( el[ scroll ] > 0 );",
          "106:    el[ scroll ] = 0;",
          "107:   } catch ( e ) {",
          "111:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122:   if ( this.element[ 0 ].nodeName.match( /^(canvas|textarea|input|select|button|img)$/i ) ) {",
          "124:    this.element.wrap(",
          "126:      position: this.element.css( \"position\" ),",
          "127:      width: this.element.outerWidth(),",
          "128:      height: this.element.outerHeight(),",
          "",
          "[Removed Lines]",
          "125:     $( \"<div class='ui-wrapper' style='overflow: hidden;'></div>\" ).css( {",
          "",
          "[Added Lines]",
          "134:     $( \"<div class='ui-wrapper'></div>\" ).css( {",
          "135:      overflow: \"hidden\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "193:  _destroy: function() {",
          "195:   this._mouseDestroy();",
          "197:   var wrapper,",
          "198:    _destroy = function( exp ) {",
          "199:     $( exp )",
          "200:      .removeData( \"resizable\" )",
          "201:      .removeData( \"ui-resizable\" )",
          "205:    };",
          "",
          "[Removed Lines]",
          "202:      .off( \".resizable\" )",
          "203:      .find( \".ui-resizable-handle\" )",
          "204:       .remove();",
          "",
          "[Added Lines]",
          "206:   this._addedHandles.remove();",
          "213:      .off( \".resizable\" );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "232:    this._removeHandles();",
          "233:    this._setupHandles();",
          "234:    break;",
          "235:   default:",
          "236:    break;",
          "237:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:   case \"aspectRatio\":",
          "245:    this._aspectRatio = !!value;",
          "246:    break;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "253:     } );",
          "255:   this._handles = $();",
          "256:   if ( this.handles.constructor === String ) {",
          "258:    if ( this.handles === \"all\" ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268:   this._addedHandles = $();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "265:    for ( i = 0; i < n.length; i++ ) {",
          "268:     hname = \"ui-resizable-\" + handle;",
          "269:     axis = $( \"<div>\" );",
          "270:     this._addClass( axis, \"ui-resizable-handle \" + hname );",
          "",
          "[Removed Lines]",
          "267:     handle = $.trim( n[ i ] );",
          "",
          "[Added Lines]",
          "280:     handle = String.prototype.trim.call( n[ i ] );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "272:     axis.css( { zIndex: o.zIndex } );",
          "274:     this.handles[ handle ] = \".ui-resizable-\" + handle;",
          "276:    }",
          "278:   }",
          "",
          "[Removed Lines]",
          "275:     this.element.append( axis );",
          "",
          "[Added Lines]",
          "288:     if ( !this.element.children( this.handles[ handle ] ).length ) {",
          "289:      this.element.append( axis );",
          "290:      this._addedHandles = this._addedHandles.add( axis );",
          "291:     }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "338:  },",
          "340:  _removeHandles: function() {",
          "342:  },",
          "344:  _mouseCapture: function( event ) {",
          "",
          "[Removed Lines]",
          "341:   this._handles.remove();",
          "",
          "[Added Lines]",
          "357:   this._addedHandles.remove();",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "523:   if ( this.position.left !== this.prevPosition.left ) {",
          "524:    props.left = this.position.left + \"px\";",
          "525:   }",
          "526:   if ( this.size.width !== this.prevSize.width ) {",
          "527:    props.width = this.size.width + \"px\";",
          "528:   }",
          "529:   if ( this.size.height !== this.prevSize.height ) {",
          "530:    props.height = this.size.height + \"px\";",
          "531:   }",
          "535:   return props;",
          "536:  },",
          "",
          "[Removed Lines]",
          "533:   this.helper.css( props );",
          "",
          "[Added Lines]",
          "543:   this.helper.css( props );",
          "547:    this.helper.width( props.width );",
          "551:    this.helper.height( props.height );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "719:   if ( this._helper ) {",
          "723:    this._addClass( this.helper, this._helper );",
          "724:    this.helper.css( {",
          "",
          "[Removed Lines]",
          "721:    this.helper = this.helper || $( \"<div style='overflow:hidden;'></div>\" );",
          "",
          "[Added Lines]",
          "740:    this.helper = this.helper || $( \"<div></div>\" ).css( { overflow: \"hidden\" } );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "776:  _propagate: function( n, event ) {",
          "777:   $.ui.plugin.call( this, n, [ event, this.ui() ] );",
          "779:  },",
          "781:  plugins: {},",
          "",
          "[Removed Lines]",
          "778:   ( n !== \"resize\" && this._trigger( n, event, this.ui() ) );",
          "",
          "[Added Lines]",
          "797:   if ( n !== \"resize\" ) {",
          "798:    this._trigger( n, event, this.ui() );",
          "799:   }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "896:    co = that.containerOffset;",
          "897:    ch = that.containerSize.height;",
          "898:    cw = that.containerSize.width;",
          "902:    that.parentData = {",
          "903:     element: ce,",
          "",
          "[Removed Lines]",
          "899:    width = ( that._hasScroll ( ce, \"left\" ) ? ce.scrollWidth : cw );",
          "900:    height = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;",
          "",
          "[Added Lines]",
          "920:    width = ( that._hasScroll( ce, \"left\" ) ? ce.scrollWidth : cw );",
          "921:    height = ( that._hasScroll( ce ) ? ce.scrollHeight : ch );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1036:   $( o.alsoResize ).each( function() {",
          "1037:    var el = $( this );",
          "1038:    el.data( \"ui-resizable-alsoresize\", {",
          "1040:     left: parseFloat( el.css( \"left\" ) ), top: parseFloat( el.css( \"top\" ) )",
          "1041:    } );",
          "1042:   } );",
          "",
          "[Removed Lines]",
          "1039:     width: parseFloat( el.width() ), height: parseFloat( el.height() ),",
          "",
          "[Added Lines]",
          "1060:     width: parseFloat( el.css( \"width\" ) ), height: parseFloat( el.css( \"height\" ) ),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1205: return $.ui.resizable;",
          "",
          "[Removed Lines]",
          "1207: } ) );",
          "",
          "[Added Lines]",
          "1228: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/sortable.js||vendor/assets/javascripts/jquery-ui/widgets/sortable.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/sortable.js -> vendor/assets/javascripts/jquery-ui/widgets/sortable.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: ( function( factory ) {",
          "25:  if ( typeof define === \"function\" && define.amd ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   factory( jQuery );",
          "41:  }",
          "44: return $.widget( \"ui.sortable\", $.ui.mouse, {",
          "46:  widgetEventPrefix: \"sort\",",
          "47:  ready: false,",
          "48:  options: {",
          "",
          "[Removed Lines]",
          "42: }( function( $ ) {",
          "45:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "44: } )( function( $ ) {",
          "45: \"use strict\";",
          "48:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203:   this.refreshPositions();",
          "206:   this.helper = this._createHelper( event );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:   this.appendTo = $( o.appendTo !== \"parent\" ?",
          "210:     o.appendTo :",
          "211:     this.currentItem.parent() );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "217:   this._cacheMargins();",
          "223:   this.offset = this.currentItem.offset();",
          "224:   this.offset = {",
          "",
          "[Removed Lines]",
          "220:   this.scrollParent = this.helper.scrollParent();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "231:     left: event.pageX - this.offset.left,",
          "232:     top: event.pageY - this.offset.top",
          "233:    },",
          "238:    relative: this._getRelativeOffset()",
          "239:   } );",
          "243:   this.helper.css( \"position\", \"absolute\" );",
          "244:   this.cssPosition = this.helper.css( \"position\" );",
          "255:   this.domPosition = {",
          "",
          "[Removed Lines]",
          "234:    parent: this._getParentOffset(),",
          "247:   this.originalPosition = this._generatePosition( event );",
          "248:   this.originalPageX = event.pageX;",
          "249:   this.originalPageY = event.pageY;",
          "252:   ( o.cursorAt && this._adjustOffsetFromHelper( o.cursorAt ) );",
          "",
          "[Added Lines]",
          "252:   if ( o.cursorAt ) {",
          "253:    this._adjustOffsetFromHelper( o.cursorAt );",
          "254:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "267:   this._createPlaceholder();",
          "270:   if ( o.containment ) {",
          "271:    this._setContainment();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:   this.scrollParent = this.placeholder.scrollParent();",
          "274:   $.extend( this.offset, {",
          "275:    parent: this._getParentOffset()",
          "276:   } );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "282:     $( \"<style>*{ cursor: \" + o.cursor + \" !important; }</style>\" ).appendTo( body );",
          "283:   }",
          "292:   if ( o.zIndex ) { // zIndex option",
          "293:    if ( this.helper.css( \"zIndex\" ) ) {",
          "294:     this._storedZIndex = this.helper.css( \"zIndex\" );",
          "",
          "[Removed Lines]",
          "285:   if ( o.opacity ) { // opacity option",
          "286:    if ( this.helper.css( \"opacity\" ) ) {",
          "287:     this._storedOpacity = this.helper.css( \"opacity\" );",
          "288:    }",
          "289:    this.helper.css( \"opacity\", o.opacity );",
          "290:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "296:    this.helper.css( \"zIndex\", o.zIndex );",
          "297:   }",
          "300:   if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&",
          "301:     this.scrollParent[ 0 ].tagName !== \"HTML\" ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "304:   if ( o.opacity ) { // opacity option",
          "305:    if ( this.helper.css( \"opacity\" ) ) {",
          "306:     this._storedOpacity = this.helper.css( \"opacity\" );",
          "307:    }",
          "308:    this.helper.css( \"opacity\", o.opacity );",
          "309:   }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "331:   this._addClass( this.helper, \"ui-sortable-helper\" );",
          "396:    }",
          "400:    }",
          "401:   }",
          "404:   this.positionAbs = this._convertPositionTo( \"absolute\" );",
          "",
          "[Removed Lines]",
          "335:   this._mouseDrag( event );",
          "336:   return true;",
          "338:  },",
          "340:  _mouseDrag: function( event ) {",
          "341:   var i, item, itemElement, intersection,",
          "342:    o = this.options,",
          "343:    scrolled = false;",
          "346:   this.position = this._generatePosition( event );",
          "347:   this.positionAbs = this._convertPositionTo( \"absolute\" );",
          "349:   if ( !this.lastPositionAbs ) {",
          "350:    this.lastPositionAbs = this.positionAbs;",
          "351:   }",
          "354:   if ( this.options.scroll ) {",
          "355:    if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&",
          "356:      this.scrollParent[ 0 ].tagName !== \"HTML\" ) {",
          "358:     if ( ( this.overflowOffset.top + this.scrollParent[ 0 ].offsetHeight ) -",
          "359:       event.pageY < o.scrollSensitivity ) {",
          "360:      this.scrollParent[ 0 ].scrollTop =",
          "361:       scrolled = this.scrollParent[ 0 ].scrollTop + o.scrollSpeed;",
          "362:     } else if ( event.pageY - this.overflowOffset.top < o.scrollSensitivity ) {",
          "363:      this.scrollParent[ 0 ].scrollTop =",
          "364:       scrolled = this.scrollParent[ 0 ].scrollTop - o.scrollSpeed;",
          "365:     }",
          "367:     if ( ( this.overflowOffset.left + this.scrollParent[ 0 ].offsetWidth ) -",
          "368:       event.pageX < o.scrollSensitivity ) {",
          "369:      this.scrollParent[ 0 ].scrollLeft = scrolled =",
          "370:       this.scrollParent[ 0 ].scrollLeft + o.scrollSpeed;",
          "371:     } else if ( event.pageX - this.overflowOffset.left < o.scrollSensitivity ) {",
          "372:      this.scrollParent[ 0 ].scrollLeft = scrolled =",
          "373:       this.scrollParent[ 0 ].scrollLeft - o.scrollSpeed;",
          "374:     }",
          "376:    } else {",
          "378:     if ( event.pageY - this.document.scrollTop() < o.scrollSensitivity ) {",
          "379:      scrolled = this.document.scrollTop( this.document.scrollTop() - o.scrollSpeed );",
          "380:     } else if ( this.window.height() - ( event.pageY - this.document.scrollTop() ) <",
          "381:       o.scrollSensitivity ) {",
          "382:      scrolled = this.document.scrollTop( this.document.scrollTop() + o.scrollSpeed );",
          "383:     }",
          "385:     if ( event.pageX - this.document.scrollLeft() < o.scrollSensitivity ) {",
          "386:      scrolled = this.document.scrollLeft(",
          "387:       this.document.scrollLeft() - o.scrollSpeed",
          "388:      );",
          "389:     } else if ( this.window.width() - ( event.pageX - this.document.scrollLeft() ) <",
          "390:       o.scrollSensitivity ) {",
          "391:      scrolled = this.document.scrollLeft(",
          "392:       this.document.scrollLeft() + o.scrollSpeed",
          "393:      );",
          "394:     }",
          "398:    if ( scrolled !== false && $.ui.ddmanager && !o.dropBehaviour ) {",
          "399:     $.ui.ddmanager.prepareOffsets( this, event );",
          "",
          "[Added Lines]",
          "346:   if ( !this.helper.parent().is( this.appendTo ) ) {",
          "347:    this.helper.detach().appendTo( this.appendTo );",
          "350:    this.offset.parent = this._getParentOffset();",
          "351:   }",
          "354:   this.position = this.originalPosition = this._generatePosition( event );",
          "355:   this.originalPageX = event.pageX;",
          "356:   this.originalPageY = event.pageY;",
          "357:   this.lastPositionAbs = this.positionAbs = this._convertPositionTo( \"absolute\" );",
          "359:   this._mouseDrag( event );",
          "361:   return true;",
          "363:  },",
          "365:  _scroll: function( event ) {",
          "366:   var o = this.options,",
          "367:    scrolled = false;",
          "369:   if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&",
          "370:     this.scrollParent[ 0 ].tagName !== \"HTML\" ) {",
          "372:    if ( ( this.overflowOffset.top + this.scrollParent[ 0 ].offsetHeight ) -",
          "373:      event.pageY < o.scrollSensitivity ) {",
          "374:     this.scrollParent[ 0 ].scrollTop =",
          "375:      scrolled = this.scrollParent[ 0 ].scrollTop + o.scrollSpeed;",
          "376:    } else if ( event.pageY - this.overflowOffset.top < o.scrollSensitivity ) {",
          "377:     this.scrollParent[ 0 ].scrollTop =",
          "378:      scrolled = this.scrollParent[ 0 ].scrollTop - o.scrollSpeed;",
          "379:    }",
          "381:    if ( ( this.overflowOffset.left + this.scrollParent[ 0 ].offsetWidth ) -",
          "382:      event.pageX < o.scrollSensitivity ) {",
          "383:     this.scrollParent[ 0 ].scrollLeft = scrolled =",
          "384:      this.scrollParent[ 0 ].scrollLeft + o.scrollSpeed;",
          "385:    } else if ( event.pageX - this.overflowOffset.left < o.scrollSensitivity ) {",
          "386:     this.scrollParent[ 0 ].scrollLeft = scrolled =",
          "387:      this.scrollParent[ 0 ].scrollLeft - o.scrollSpeed;",
          "388:    }",
          "390:   } else {",
          "392:    if ( event.pageY - this.document.scrollTop() < o.scrollSensitivity ) {",
          "393:     scrolled = this.document.scrollTop( this.document.scrollTop() - o.scrollSpeed );",
          "394:    } else if ( this.window.height() - ( event.pageY - this.document.scrollTop() ) <",
          "395:      o.scrollSensitivity ) {",
          "396:     scrolled = this.document.scrollTop( this.document.scrollTop() + o.scrollSpeed );",
          "399:    if ( event.pageX - this.document.scrollLeft() < o.scrollSensitivity ) {",
          "400:     scrolled = this.document.scrollLeft(",
          "401:      this.document.scrollLeft() - o.scrollSpeed",
          "402:     );",
          "403:    } else if ( this.window.width() - ( event.pageX - this.document.scrollLeft() ) <",
          "404:      o.scrollSensitivity ) {",
          "405:     scrolled = this.document.scrollLeft(",
          "406:      this.document.scrollLeft() + o.scrollSpeed",
          "407:     );",
          "412:   return scrolled;",
          "413:  },",
          "415:  _mouseDrag: function( event ) {",
          "416:   var i, item, itemElement, intersection,",
          "417:    o = this.options;",
          "420:   this.position = this._generatePosition( event );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "411:    this.helper[ 0 ].style.top = this.position.top + \"px\";",
          "412:   }",
          "415:   for ( i = this.items.length - 1; i >= 0; i-- ) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432:   if ( o.scroll ) {",
          "433:    if ( this._scroll( event ) !== false ) {",
          "436:     this._refreshItemPositions( true );",
          "438:     if ( $.ui.ddmanager && !o.dropBehaviour ) {",
          "439:      $.ui.ddmanager.prepareOffsets( this, event );",
          "440:     }",
          "441:    }",
          "442:   }",
          "444:   this.dragDirection = {",
          "445:    vertical: this._getDragVerticalDirection(),",
          "446:    horizontal: this._getDragHorizontalDirection()",
          "447:   };",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "439:    if ( itemElement !== this.currentItem[ 0 ] &&",
          "441:     !$.contains( this.placeholder[ 0 ], itemElement ) &&",
          "442:     ( this.options.type === \"semi-dynamic\" ?",
          "443:      !$.contains( this.element[ 0 ], itemElement ) :",
          "",
          "[Removed Lines]",
          "440:     this.placeholder[ intersection === 1 ? \"next\" : \"prev\" ]()[ 0 ] !== itemElement &&",
          "",
          "[Added Lines]",
          "475:     this.placeholder[ intersection === 1 ?",
          "476:     \"next\" : \"prev\" ]()[ 0 ] !== itemElement &&",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "448:     this.direction = intersection === 1 ? \"down\" : \"up\";",
          "451:      this._rearrange( event, item );",
          "452:     } else {",
          "453:      break;",
          "",
          "[Removed Lines]",
          "450:     if ( this.options.tolerance === \"pointer\" || this._intersectsWithSides( item ) ) {",
          "",
          "[Added Lines]",
          "486:     if ( this.options.tolerance === \"pointer\" ||",
          "487:       this._intersectsWithSides( item ) ) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "663:    return false;",
          "664:   }",
          "669:   return this.floating ?",
          "673:  },",
          "",
          "[Removed Lines]",
          "666:   verticalDirection = this._getDragVerticalDirection();",
          "667:   horizontalDirection = this._getDragHorizontalDirection();",
          "670:    ( ( horizontalDirection === \"right\" || verticalDirection === \"down\" ) ? 2 : 1 )",
          "671:    : ( verticalDirection && ( verticalDirection === \"down\" ? 2 : 1 ) );",
          "",
          "[Added Lines]",
          "703:   verticalDirection = this.dragDirection.vertical;",
          "704:   horizontalDirection = this.dragDirection.horizontal;",
          "707:    ( ( horizontalDirection === \"right\" || verticalDirection === \"down\" ) ? 2 : 1 ) :",
          "708:    ( verticalDirection && ( verticalDirection === \"down\" ? 2 : 1 ) );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "678:     this.offset.click.top, item.top + ( item.height / 2 ), item.height ),",
          "679:    isOverRightHalf = this._isOverAxis( this.positionAbs.left +",
          "680:     this.offset.click.left, item.left + ( item.width / 2 ), item.width ),",
          "684:   if ( this.floating && horizontalDirection ) {",
          "685:    return ( ( horizontalDirection === \"right\" && isOverRightHalf ) ||",
          "",
          "[Removed Lines]",
          "681:    verticalDirection = this._getDragVerticalDirection(),",
          "682:    horizontalDirection = this._getDragHorizontalDirection();",
          "",
          "[Added Lines]",
          "718:    verticalDirection = this.dragDirection.vertical,",
          "719:    horizontalDirection = this.dragDirection.horizontal;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "728:     for ( j = cur.length - 1; j >= 0; j-- ) {",
          "729:      inst = $.data( cur[ j ], this.widgetFullName );",
          "730:      if ( inst && inst !== this && !inst.options.disabled ) {",
          "732:        inst.options.items.call( inst.element ) :",
          "733:        $( inst.options.items, inst.element )",
          "734:         .not( \".ui-sortable-helper\" )",
          "",
          "[Removed Lines]",
          "731:       queries.push( [ $.isFunction( inst.options.items ) ?",
          "",
          "[Added Lines]",
          "768:       queries.push( [ typeof inst.options.items === \"function\" ?",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "738:    }",
          "739:   }",
          "742:    this.options.items",
          "743:     .call( this.element, null, { options: this.options, item: this.currentItem } ) :",
          "744:    $( this.options.items, this.element )",
          "",
          "[Removed Lines]",
          "741:   queries.push( [ $.isFunction( this.options.items ) ?",
          "",
          "[Added Lines]",
          "778:   queries.push( [ typeof this.options.items === \"function\" ?",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "779:   var i, j, cur, inst, targetData, _queries, item, queriesLength,",
          "780:    items = this.items,",
          "782:     this.options.items.call( this.element[ 0 ], event, { item: this.currentItem } ) :",
          "783:     $( this.options.items, this.element ), this ] ],",
          "784:    connectWith = this._connectWith();",
          "",
          "[Removed Lines]",
          "781:    queries = [ [ $.isFunction( this.options.items ) ?",
          "",
          "[Added Lines]",
          "818:    queries = [ [ typeof this.options.items === \"function\" ?",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "790:     for ( j = cur.length - 1; j >= 0; j-- ) {",
          "791:      inst = $.data( cur[ j ], this.widgetFullName );",
          "792:      if ( inst && inst !== this && !inst.options.disabled ) {",
          "794:        inst.options.items",
          "795:         .call( inst.element[ 0 ], event, { item: this.currentItem } ) :",
          "796:        $( inst.options.items, inst.element ), inst ] );",
          "",
          "[Removed Lines]",
          "793:       queries.push( [ $.isFunction( inst.options.items ) ?",
          "",
          "[Added Lines]",
          "830:       queries.push( [ typeof inst.options.items === \"function\" ?",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "822:  },",
          "837:   var i, item, t, p;",
          "839:   for ( i = this.items.length - 1; i >= 0; i-- ) {",
          "840:    item = this.items[ i ];",
          "844:      item.item[ 0 ] !== this.currentItem[ 0 ] ) {",
          "845:     continue;",
          "846:    }",
          "",
          "[Removed Lines]",
          "824:  refreshPositions: function( fast ) {",
          "827:   this.floating = this.items.length ?",
          "828:    this.options.axis === \"x\" || this._isFloating( this.items[ 0 ].item ) :",
          "829:    false;",
          "833:   if ( this.offsetParent && this.helper ) {",
          "834:    this.offset.parent = this._getParentOffset();",
          "835:   }",
          "843:    if ( item.instance !== this.currentContainer && this.currentContainer &&",
          "",
          "[Added Lines]",
          "861:  _refreshItemPositions: function( fast ) {",
          "868:    if ( this.currentContainer && item.instance !== this.currentContainer &&",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "858:    item.left = p.left;",
          "859:    item.top = p.top;",
          "860:   }",
          "862:   if ( this.options.custom && this.options.custom.refreshContainers ) {",
          "863:    this.options.custom.refreshContainers.call( this );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "886:  },",
          "888:  refreshPositions: function( fast ) {",
          "891:   this.floating = this.items.length ?",
          "892:    this.options.axis === \"x\" || this._isFloating( this.items[ 0 ].item ) :",
          "893:    false;",
          "897:   if ( this.offsetParent && this.helper ) {",
          "898:    this.offset.parent = this._getParentOffset();",
          "899:   }",
          "901:   this._refreshItemPositions( fast );",
          "903:   var i, p;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "879:  _createPlaceholder: function( that ) {",
          "880:   that = that || this;",
          "882:    o = that.options;",
          "884:   if ( !o.placeholder || o.placeholder.constructor === String ) {",
          "885:    className = o.placeholder;",
          "886:    o.placeholder = {",
          "887:     element: function() {",
          "896:      if ( nodeName === \"tbody\" ) {",
          "897:       that._createTrPlaceholder(",
          "",
          "[Removed Lines]",
          "881:   var className,",
          "889:      var nodeName = that.currentItem[ 0 ].nodeName.toLowerCase(),",
          "890:       element = $( \"<\" + nodeName + \">\", that.document[ 0 ] );",
          "892:       that._addClass( element, \"ui-sortable-placeholder\",",
          "893:         className || that.currentItem[ 0 ].className )",
          "894:        ._removeClass( element, \"ui-sortable-helper\" );",
          "",
          "[Added Lines]",
          "924:   var className, nodeName,",
          "929:    nodeName = that.currentItem[ 0 ].nodeName.toLowerCase();",
          "933:      var element = $( \"<\" + nodeName + \">\", that.document[ 0 ] );",
          "935:      that._addClass( element, \"ui-sortable-placeholder\",",
          "936:        className || that.currentItem[ 0 ].className )",
          "937:       ._removeClass( element, \"ui-sortable-helper\" );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "920:       return;",
          "921:      }",
          "926:       p.height(",
          "927:        that.currentItem.innerHeight() -",
          "928:        parseInt( that.currentItem.css( \"paddingTop\" ) || 0, 10 ) -",
          "",
          "[Removed Lines]",
          "925:      if ( !p.height() ) {",
          "",
          "[Added Lines]",
          "973:      if ( !p.height() || ( o.forcePlaceholderSize &&",
          "974:        ( nodeName === \"tbody\" || nodeName === \"tr\" ) ) ) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1055:     return;",
          "1056:    }",
          "1060:     this._rearrange( event, null, this.containers[ innermostIndex ].element, true );",
          "1061:    this._trigger( \"change\", event, this._uiHash() );",
          "1062:    this.containers[ innermostIndex ]._trigger( \"change\", event, this._uiHash( this ) );",
          "1063:    this.currentContainer = this.containers[ innermostIndex ];",
          "",
          "[Removed Lines]",
          "1058:    itemWithLeastDistance ?",
          "1059:     this._rearrange( event, itemWithLeastDistance, null, true ) :",
          "",
          "[Added Lines]",
          "1107:    if ( itemWithLeastDistance ) {",
          "1108:     this._rearrange( event, itemWithLeastDistance, null, true );",
          "1109:    } else {",
          "1111:    }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1066:    this.options.placeholder.update( this.currentContainer, this.placeholder );",
          "1068:    this.containers[ innermostIndex ]._trigger( \"over\", event, this._uiHash( this ) );",
          "1069:    this.containers[ innermostIndex ].containerCache.over = 1;",
          "1070:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1120:    this.scrollParent = this.placeholder.scrollParent();",
          "1123:    if ( this.scrollParent[ 0 ] !== this.document[ 0 ] &&",
          "1124:      this.scrollParent[ 0 ].tagName !== \"HTML\" ) {",
          "1125:     this.overflowOffset = this.scrollParent.offset();",
          "1126:    }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1074:  _createHelper: function( event ) {",
          "1076:   var o = this.options,",
          "1078:     $( o.helper.apply( this.element[ 0 ], [ event, this.currentItem ] ) ) :",
          "1079:     ( o.helper === \"clone\" ? this.currentItem.clone() : this.currentItem );",
          "1082:   if ( !helper.parents( \"body\" ).length ) {",
          "1086:   }",
          "1088:   if ( helper[ 0 ] === this.currentItem[ 0 ] ) {",
          "",
          "[Removed Lines]",
          "1077:    helper = $.isFunction( o.helper ) ?",
          "1083:    $( o.appendTo !== \"parent\" ?",
          "1084:     o.appendTo :",
          "1085:     this.currentItem[ 0 ].parentNode )[ 0 ].appendChild( helper[ 0 ] );",
          "",
          "[Added Lines]",
          "1137:    helper = typeof o.helper === \"function\" ?",
          "1143:    this.appendTo[ 0 ].appendChild( helper[ 0 ] );",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1110:   if ( typeof obj === \"string\" ) {",
          "1111:    obj = obj.split( \" \" );",
          "1112:   }",
          "1114:    obj = { left: +obj[ 0 ], top: +obj[ 1 ] || 0 };",
          "1115:   }",
          "1116:   if ( \"left\" in obj ) {",
          "",
          "[Removed Lines]",
          "1113:   if ( $.isArray( obj ) ) {",
          "",
          "[Added Lines]",
          "1171:   if ( Array.isArray( obj ) ) {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1391:  _rearrange: function( event, i, a, hardRefresh ) {",
          "1394:    i.item[ 0 ].parentNode.insertBefore( this.placeholder[ 0 ],",
          "1395:     ( this.direction === \"down\" ? i.item[ 0 ] : i.item[ 0 ].nextSibling ) );",
          "",
          "[Removed Lines]",
          "1393:   a ? a[ 0 ].appendChild( this.placeholder[ 0 ] ) :",
          "",
          "[Added Lines]",
          "1451:   if ( a ) {",
          "1452:    a[ 0 ].appendChild( this.placeholder[ 0 ] );",
          "1453:   } else {",
          "1456:   }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1559: } );",
          "",
          "[Removed Lines]",
          "1561: } ) );",
          "",
          "[Added Lines]",
          "1622: } );",
          "",
          "---------------"
        ],
        "vendor/assets/javascripts/jquery-ui/widgets/tabs.js||vendor/assets/javascripts/jquery-ui/widgets/tabs.js": [
          "File: vendor/assets/javascripts/jquery-ui/widgets/tabs.js -> vendor/assets/javascripts/jquery-ui/widgets/tabs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: ( function( factory ) {",
          "27:  if ( typeof define === \"function\" && define.amd ) {",
          "30:   define( [",
          "31:    \"jquery\",",
          "33:    \"../keycode\",",
          "34:    \"../safe-active-element\",",
          "35:    \"../unique-id\",",
          "",
          "[Removed Lines]",
          "32:    \"../escape-selector\",",
          "",
          "[Added Lines]",
          "26:  \"use strict\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:   factory( jQuery );",
          "43:  }",
          "46: $.widget( \"ui.tabs\", {",
          "48:  delay: 300,",
          "49:  options: {",
          "50:   active: null,",
          "",
          "[Removed Lines]",
          "44: }( function( $ ) {",
          "47:  version: \"1.12.1\",",
          "",
          "[Added Lines]",
          "44: } )( function( $ ) {",
          "45: \"use strict\";",
          "48:  version: \"1.13.3\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:     $.map( this.tabs.filter( \".ui-state-disabled\" ), function( li ) {",
          "108:      return that.tabs.index( li );",
          "109:     } )",
          "",
          "[Removed Lines]",
          "105:   if ( $.isArray( options.disabled ) ) {",
          "106:    options.disabled = $.unique( options.disabled.concat(",
          "",
          "[Added Lines]",
          "106:   if ( Array.isArray( options.disabled ) ) {",
          "107:    options.disabled = $.uniqueSort( options.disabled.concat(",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "438:    return $( \"a\", this )[ 0 ];",
          "439:   } )",
          "440:    .attr( {",
          "442:     tabIndex: -1",
          "443:    } );",
          "444:   this._addClass( this.anchors, \"ui-tabs-anchor\" );",
          "",
          "[Removed Lines]",
          "441:     role: \"presentation\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "510:  _setOptionDisabled: function( disabled ) {",
          "511:   var currentItem, li, i;",
          "514:    if ( !disabled.length ) {",
          "515:     disabled = false;",
          "516:    } else if ( disabled.length === this.anchors.length ) {",
          "",
          "[Removed Lines]",
          "513:   if ( $.isArray( disabled ) ) {",
          "",
          "[Added Lines]",
          "513:   if ( Array.isArray( disabled ) ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "742:   if ( typeof index === \"string\" ) {",
          "743:    index = this.anchors.index( this.anchors.filter( \"[href$='\" +",
          "745:   }",
          "747:   return index;",
          "",
          "[Removed Lines]",
          "744:     $.ui.escapeSelector( index ) + \"']\" ) );",
          "",
          "[Added Lines]",
          "744:     $.escapeSelector( index ) + \"']\" ) );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "798:    disabled = false;",
          "799:   } else {",
          "800:    index = this._getIndex( index );",
          "802:     disabled = $.map( disabled, function( num ) {",
          "803:      return num !== index ? num : null;",
          "804:     } );",
          "",
          "[Removed Lines]",
          "801:    if ( $.isArray( disabled ) ) {",
          "",
          "[Added Lines]",
          "801:    if ( Array.isArray( disabled ) ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "824:    if ( $.inArray( index, disabled ) !== -1 ) {",
          "825:     return;",
          "826:    }",
          "828:     disabled = $.merge( [ index ], disabled ).sort();",
          "829:    } else {",
          "830:     disabled = [ index ];",
          "",
          "[Removed Lines]",
          "827:    if ( $.isArray( disabled ) ) {",
          "",
          "[Added Lines]",
          "827:    if ( Array.isArray( disabled ) ) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "929: return $.ui.tabs;",
          "",
          "[Removed Lines]",
          "931: } ) );",
          "",
          "[Added Lines]",
          "931: } );",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2185:     merge-stream \"^2.0.0\"",
          "2186:     supports-color \"^7.0.0\"",
          "2192:   dependencies:",
          "2193:     jquery \">=1.8.0 <4.0.0\"",
          "",
          "[Removed Lines]",
          "2188: jquery-ui@^1.12.1:",
          "2189:   version \"1.13.2\"",
          "2190:   resolved \"https://registry.yarnpkg.com/jquery-ui/-/jquery-ui-1.13.2.tgz#de03580ae6604773602f8d786ad1abfb75232034\"",
          "2191:   integrity sha512-wBZPnqWs5GaYJmo1Jj0k/mrSkzdQzKDwhXNtHKcBdAcKVxMM3KNYFq+iJ2i1rwiG53Z8M4mTn3Qxrm17uH1D4Q==",
          "",
          "[Added Lines]",
          "2188: jquery-ui@^1.13.3:",
          "2189:   version \"1.13.3\"",
          "2190:   resolved \"https://registry.yarnpkg.com/jquery-ui/-/jquery-ui-1.13.3.tgz#d9f5292b2857fa1f2fdbbe8f2e66081664eb9bc5\"",
          "2191:   integrity sha512-D2YJfswSJRh/B8M/zCowDpNFfwsDmtfnMPwjJTyvl+CBqzpYwQ+gFYIbUUlzijy/Qvoy30H1YhoSui4MNYpRwA==",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "856cfd4045427abdc6e0e77cf5b0c1e7350c1ebf",
      "candidate_info": {
        "commit_hash": "856cfd4045427abdc6e0e77cf5b0c1e7350c1ebf",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/856cfd4045427abdc6e0e77cf5b0c1e7350c1ebf",
        "files": [
          "lib/active_admin/form_builder.rb",
          "spec/unit/form_builder_spec.rb"
        ],
        "message": "(Backport) Fix attributes passed to form has_many not being set on new record form items (#8551)\n\nFix has_many custom attrs not being set on new record form items",
        "before_after_code_files": [
          "lib/active_admin/form_builder.rb||lib/active_admin/form_builder.rb",
          "spec/unit/form_builder_spec.rb||spec/unit/form_builder_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/active_admin/form_builder.rb||lib/active_admin/form_builder.rb": [
          "File: lib/active_admin/form_builder.rb -> lib/active_admin/form_builder.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:       contents = without_wrapper { inputs(options, &form_block) }",
          "96:       contents ||= \"\".html_safe",
          "99:       contents << js",
          "100:     end",
          "",
          "[Removed Lines]",
          "98:       js = new_record ? js_for_has_many(options[:class], &form_block) : \"\"",
          "",
          "[Added Lines]",
          "98:       js = new_record ? js_for_has_many(&form_block) : \"\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     end",
          "161:     # Capture the ADD JS",
          "163:       assoc_name = assoc_klass.model_name",
          "166:         for: [assoc, assoc_klass.new],",
          "168:         for_options: { child_index: placeholder }",
          "170:       html = template.capture { __getobj__.send(:inputs_for_nested_attributes, opts, &form_block) }",
          "171:       text = new_record.is_a?(String) ? new_record : I18n.t(\"active_admin.has_many_new\", model: assoc_name.human)",
          "",
          "[Removed Lines]",
          "162:     def js_for_has_many(class_string, &form_block)",
          "164:       placeholder = \"NEW_#{assoc_name.to_s.underscore.upcase.gsub(/\\//, '_')}_RECORD\"",
          "165:       opts = {",
          "167:         class: class_string,",
          "169:       }",
          "",
          "[Added Lines]",
          "162:     def js_for_has_many(&form_block)",
          "164:       placeholder = \"NEW_#{assoc_name.to_s.underscore.upcase.tr('/', '_')}_RECORD\"",
          "165:       opts = options.merge(",
          "168:       )",
          "",
          "---------------"
        ],
        "spec/unit/form_builder_spec.rb||spec/unit/form_builder_spec.rb": [
          "File: spec/unit/form_builder_spec.rb -> spec/unit/form_builder_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "648:       end",
          "649:     end",
          "651:     describe \"with allow destroy\" do",
          "652:       shared_examples_for \"has many with allow_destroy = true\" do |child_num|",
          "653:         it \"should render the nested form\" do",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "651:     describe \"with custom class\" do",
          "652:       let :body do",
          "653:         build_form({ url: \"/categories\" }, Category.new) do |f|",
          "654:           f.object.posts.build",
          "655:           f.has_many :posts, class: 'myclass' do |p|",
          "656:             p.input :title",
          "657:           end",
          "658:         end",
          "659:       end",
          "661:       it \"should generate a fieldset with the given class\" do",
          "662:         expect(body).to have_css(\".has_many_container > fieldset.myclass\")",
          "663:       end",
          "665:       it \"should add the custom class on the fieldset generated by the new record link\" do",
          "666:         link = body.find(\".has_many_container > a.has_many_add\")",
          "667:         new_record_html = Capybara.string(link[:'data-html'])",
          "668:         expect(new_record_html).to have_css(\"fieldset.myclass\")",
          "669:       end",
          "670:     end",
          "672:     describe \"with custom attributes\" do",
          "673:       let :body do",
          "674:         build_form({ url: \"/categories\" }, Category.new) do |f|",
          "675:           f.object.posts.build",
          "676:           f.has_many :posts, attr: \"value\", data: { 'custom-attribute': \"custom-value\" } do |p|",
          "677:             p.input :title",
          "678:           end",
          "679:         end",
          "680:       end",
          "682:       it \"should generate a fieldset with the given custom attributes\" do",
          "683:         expect(body).to have_css(\".has_many_container > fieldset[attr='value'][data-custom-attribute='custom-value']\")",
          "684:       end",
          "686:       it \"should add custom attributes on the fieldset generated by the new record link\" do",
          "687:         link = body.find(\".has_many_container > a.has_many_add\")",
          "688:         new_record_html = Capybara.string(link[:'data-html'])",
          "689:         expect(new_record_html).to have_css(\"fieldset[attr='value'][data-custom-attribute='custom-value']\")",
          "690:       end",
          "691:     end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67ee3b4f233c63b719d592fefe8402e53d845e58",
      "candidate_info": {
        "commit_hash": "67ee3b4f233c63b719d592fefe8402e53d845e58",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/67ee3b4f233c63b719d592fefe8402e53d845e58",
        "files": [
          "CHANGELOG.md",
          "Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb",
          "package.json"
        ],
        "message": "Get ready for 3.2.1 release (#8312)",
        "before_after_code_files": [
          "Gemfile.lock||Gemfile.lock",
          "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock",
          "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock",
          "lib/active_admin/version.rb||lib/active_admin/version.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Gemfile.lock||Gemfile.lock": [
          "File: Gemfile.lock -> Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: .",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.0)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.1)",
          "",
          "---------------"
        ],
        "gemfiles/rails_61/Gemfile.lock||gemfiles/rails_61/Gemfile.lock": [
          "File: gemfiles/rails_61/Gemfile.lock -> gemfiles/rails_61/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.0)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.1)",
          "",
          "---------------"
        ],
        "gemfiles/rails_70/Gemfile.lock||gemfiles/rails_70/Gemfile.lock": [
          "File: gemfiles/rails_70/Gemfile.lock -> gemfiles/rails_70/Gemfile.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: PATH",
          "2:   remote: ../..",
          "3:   specs:",
          "5:       arbre (~> 1.2, >= 1.2.1)",
          "6:       csv",
          "7:       formtastic (>= 3.1)",
          "",
          "[Removed Lines]",
          "4:     activeadmin (3.2.0)",
          "",
          "[Added Lines]",
          "4:     activeadmin (3.2.1)",
          "",
          "---------------"
        ],
        "lib/active_admin/version.rb||lib/active_admin/version.rb": [
          "File: lib/active_admin/version.rb -> lib/active_admin/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "2: module ActiveAdmin",
          "4: end",
          "",
          "[Removed Lines]",
          "3:   VERSION = \"3.2.0\"",
          "",
          "[Added Lines]",
          "3:   VERSION = \"3.2.1\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b6f8e3d64704b6fab5c4cff2a5e7bc231e6b345",
      "candidate_info": {
        "commit_hash": "5b6f8e3d64704b6fab5c4cff2a5e7bc231e6b345",
        "repo": "activeadmin/activeadmin",
        "commit_url": "https://github.com/activeadmin/activeadmin/commit/5b6f8e3d64704b6fab5c4cff2a5e7bc231e6b345",
        "files": [
          "features/index/filters.feature",
          "features/index/index_as_table.feature",
          "features/show/default_content.feature",
          "features/step_definitions/configuration_steps.rb",
          "features/step_definitions/filter_steps.rb",
          "lib/active_admin/resource/attributes.rb",
          "spec/support/templates/migrations/create_categories.tt",
          "spec/support/templates/migrations/create_users.tt",
          "spec/support/templates/models/post.rb",
          "spec/unit/resource/attributes_spec.rb"
        ],
        "message": "Backport Better implementation of counter-cache-column check (#8412)\n\n* improve counter_cache_col? check\n\nReimplementation of https://github.com/activeadmin/activeadmin/pull/7347\nFixes #7346.\n\nThanks @plashchynski for the work!\n\n```\nI have a model with some column ends with a \"_count\" substring.\nThis column doesn't appear on a show page.\nIt should appear as It is a regular column just like any other.\n```\n\n* fix specs",
        "before_after_code_files": [
          "features/index/filters.feature||features/index/filters.feature",
          "features/index/index_as_table.feature||features/index/index_as_table.feature",
          "features/show/default_content.feature||features/show/default_content.feature",
          "features/step_definitions/configuration_steps.rb||features/step_definitions/configuration_steps.rb",
          "features/step_definitions/filter_steps.rb||features/step_definitions/filter_steps.rb",
          "lib/active_admin/resource/attributes.rb||lib/active_admin/resource/attributes.rb",
          "spec/support/templates/migrations/create_categories.tt||spec/support/templates/migrations/create_categories.tt",
          "spec/support/templates/migrations/create_users.tt||spec/support/templates/migrations/create_users.tt",
          "spec/support/templates/models/post.rb||spec/support/templates/models/post.rb",
          "spec/unit/resource/attributes_spec.rb||spec/unit/resource/attributes_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DocBuddy/activeadmin/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "features/index/filters.feature||features/index/filters.feature": [
          "File: features/index/filters.feature -> features/index/filters.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:     And I press \"Filter\"",
          "359:     Then I should see current filter \"fancy_filter\" equal to \"Not Starred\" with label \"Ransackable Custom Filter\"",
          "360:     And I should see \"Hello World\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "362:   Scenario: \"counter cache\"-like filters",
          "363:     Given a user named \"Jane Doe\" exists",
          "364:     And an index configuration of:",
          "365:     \"\"\"",
          "366:       ActiveAdmin.register User",
          "367:     \"\"\"",
          "368:     When I am on the index page for users",
          "369:     Then I should see \"Displaying 1 User\"",
          "370:     And I should see the following filters:",
          "371:      | Sign in count  | number     |",
          "373:     When I fill in \"Sign in count\" with \"0\"",
          "374:     And I press \"Filter\"",
          "375:     Then I should see 1 users in the table",
          "376:     When I fill in \"Sign in count\" with \"1\"",
          "377:     And I press \"Filter\"",
          "378:     Then I should see \"No Users found\"",
          "",
          "---------------"
        ],
        "features/index/index_as_table.feature||features/index/index_as_table.feature": [
          "File: features/index/index_as_table.feature -> features/index/index_as_table.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     And I should see a link to \"Edit\"",
          "26:     And I should see a link to \"Delete\"",
          "28:   Scenario: Customizing the columns with symbols",
          "29:     Given a post with the title \"Hello World\" and body \"From the body\" exists",
          "30:     And an index configuration of:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   Scenario: Viewing the default table with \"counter-cache\"-like columns",
          "29:     Given a user named \"Jane Doe\" exists",
          "30:     And an index configuration of:",
          "31:       \"\"\"",
          "32:         ActiveAdmin.register User",
          "33:       \"\"\"",
          "34:     When I am on the index page for users",
          "35:     Then I should see a sortable table header with \"Sign In Count\"",
          "",
          "---------------"
        ],
        "features/show/default_content.feature||features/show/default_content.feature": [
          "File: features/show/default_content.feature -> features/show/default_content.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Viewing the show page for a resource",
          "5:   Background:",
          "8:   Scenario: Viewing the default show page",
          "9:     Given a show configuration of:",
          "",
          "[Removed Lines]",
          "6:     Given a unstarred post with the title \"Hello World\" written by \"Jane Doe\" exists",
          "",
          "[Added Lines]",
          "6:     Given a unstarred post with the title \"Hello World\" written by \"Jane Doe\" in category \"Stories\" exists",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     And I should see the attribute \"Body\" with \"Empty\"",
          "43:     And I should see the attribute \"Created At\" with a nicely formatted datetime",
          "44:     And I should not see the attribute \"Author\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:   Scenario: Columns with \"counter cache\"-like names",
          "47:     Given a show configuration of:",
          "48:       \"\"\"",
          "49:         ActiveAdmin.register User",
          "50:       \"\"\"",
          "51:     Then I should see the attribute \"First Name\" with \"Jane\"",
          "52:     And I should see the attribute \"Last Name\" with \"Doe\"",
          "53:     And I should see the attribute \"Sign In Count\" with \"0\"",
          "55:   Scenario: Counter cache columns",
          "56:     Given a show configuration of:",
          "57:       \"\"\"",
          "58:         ActiveAdmin.register Category",
          "59:       \"\"\"",
          "60:     Then I should see the attribute \"Name\" with \"Stories\"",
          "61:     And I should not see the attribute \"Posts Count\"",
          "",
          "---------------"
        ],
        "features/step_definitions/configuration_steps.rb||features/step_definitions/configuration_steps.rb": [
          "File: features/step_definitions/configuration_steps.rb -> features/step_definitions/configuration_steps.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:       step \"I am on the index page for posts\"",
          "23:     when \"Category\"",
          "24:       step \"I am on the index page for categories\"",
          "25:     else",
          "26:       # :nocov:",
          "27:       raise \"#{resource} is not supported\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     when \"User\"",
          "26:       step \"I am on the index page for users\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:       step \"I am logged in\"",
          "34:       step \"I am on the index page for posts\"",
          "35:       step 'I follow \"View\"'",
          "36:     when \"Tag\"",
          "37:       step \"I am logged in\"",
          "38:       Tag.create!",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     when \"User\"",
          "39:       step \"I am logged in\"",
          "40:       step \"I am on the index page for users\"",
          "41:       step 'I follow \"View\"'",
          "42:     when \"Category\"",
          "43:       step \"I am logged in\"",
          "44:       step \"I am on the index page for categories\"",
          "45:       step 'I follow \"View\"'",
          "",
          "---------------"
        ],
        "features/step_definitions/filter_steps.rb||features/step_definitions/filter_steps.rb": [
          "File: features/step_definitions/filter_steps.rb -> features/step_definitions/filter_steps.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   expect(page).to have_css \".filter_date_range label\", text: label",
          "22: end",
          "24: Then /^I should see the following filters:$/ do |table|",
          "25:   table.rows_hash.each do |label, type|",
          "26:     step %{I should see a #{type} filter for \"#{label}\"}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: Then /^I should see a number filter for \"([^\"]*)\"$/ do |label|",
          "25:   expect(page).to have_css \".filter_numeric label\", text: label",
          "26: end",
          "",
          "---------------"
        ],
        "lib/active_admin/resource/attributes.rb||lib/active_admin/resource/attributes.rb": [
          "File: lib/active_admin/resource/attributes.rb -> lib/active_admin/resource/attributes.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:       end",
          "39:       def counter_cache_col?(c)",
          "41:       end",
          "43:       def filtered_col?(c)",
          "",
          "[Removed Lines]",
          "40:         c.name.end_with?(\"_count\")",
          "",
          "[Added Lines]",
          "40:         # This helper is called inside a loop. Let's memoize the result.",
          "41:         @counter_cache_columns ||= begin",
          "42:           resource_class.reflect_on_all_associations(:has_many)",
          "43:                         .select(&:has_cached_counter?)",
          "44:                         .map(&:counter_cache_column)",
          "45:         end",
          "47:         @counter_cache_columns.include?(c.name)",
          "",
          "---------------"
        ],
        "spec/support/templates/migrations/create_categories.tt||spec/support/templates/migrations/create_categories.tt": [
          "File: spec/support/templates/migrations/create_categories.tt -> spec/support/templates/migrations/create_categories.tt",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     create_table :categories do |t|",
          "4:       t.string :name",
          "5:       t.text :description",
          "6:       t.datetime :created_at",
          "7:       t.datetime :updated_at",
          "8:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:       t.integer :posts_count, default: 0",
          "",
          "---------------"
        ],
        "spec/support/templates/migrations/create_users.tt||spec/support/templates/migrations/create_users.tt": [
          "File: spec/support/templates/migrations/create_users.tt -> spec/support/templates/migrations/create_users.tt",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:       t.integer :age",
          "9:       t.string :encrypted_password",
          "10:       t.string :reason_of_sign_in",
          "11:       t.datetime :created_at",
          "12:       t.datetime :updated_at",
          "13:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11:       t.integer :sign_in_count, default: 0",
          "",
          "---------------"
        ],
        "spec/support/templates/models/post.rb||spec/support/templates/models/post.rb": [
          "File: spec/support/templates/models/post.rb -> spec/support/templates/models/post.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "2: class Post < ApplicationRecord",
          "4:   belongs_to :author, class_name: \"User\", optional: true",
          "5:   has_many :taggings",
          "6:   has_many :tags, through: :taggings",
          "",
          "[Removed Lines]",
          "3:   belongs_to :category, foreign_key: :custom_category_id, optional: true",
          "",
          "[Added Lines]",
          "3:   belongs_to :category, foreign_key: :custom_category_id, optional: true, counter_cache: true",
          "",
          "---------------"
        ],
        "spec/unit/resource/attributes_spec.rb||spec/unit/resource/attributes_spec.rb": [
          "File: spec/unit/resource/attributes_spec.rb -> spec/unit/resource/attributes_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:         expect(subject).to_not include :published_date",
          "33:         ActiveAdmin.application.filter_attributes = keep",
          "34:       end",
          "35:     end",
          "37:     describe \"#association_columns\" do",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:       context \"when resource has a counter cache\" do",
          "37:         subject { ActiveAdmin::Resource.new(namespace, Category).resource_attributes }",
          "39:         it \"should not include counter cache column\" do",
          "40:           expect(subject.keys).not_to include(:posts_count)",
          "41:         end",
          "42:       end",
          "44:       context \"when resource has a 'counter cache'-like column\" do",
          "45:         subject { ActiveAdmin::Resource.new(namespace, User).resource_attributes }",
          "47:         it \"should include that attribute\" do",
          "48:           expect(subject).to include(sign_in_count: :sign_in_count)",
          "49:         end",
          "50:       end",
          "",
          "---------------"
        ]
      }
    }
  ]
}