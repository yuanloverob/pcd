{
  "cve_id": "CVE-2024-47780",
  "cve_desc": "TYPO3 is a free and open source Content Management Framework. Backend users could see items in the backend page tree without having access if the mounts pointed to pages restricted for their user/group, or if no mounts were configured but the pages allowed access to \"everybody.\" However, affected users could not manipulate these pages. Users are advised to update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described. There are no known workarounds for this vulnerability.",
  "repo": "TYPO3-CMS/backend",
  "patch_hash": "9ae1ef969b63292a13f80955a95713cabd45cc22",
  "patch_info": {
    "commit_hash": "9ae1ef969b63292a13f80955a95713cabd45cc22",
    "repo": "TYPO3-CMS/backend",
    "commit_url": "https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22",
    "files": [
      "Classes/Controller/Page/TreeController.php",
      "Classes/Tree/Repository/PageTreeRepository.php",
      "Tests/Functional/Controller/Page/Fixtures/PagesWithBEPermissions.yaml",
      "Tests/Functional/Controller/Page/Fixtures/be_users.csv",
      "Tests/Functional/Controller/Page/TreeControllerTest.php"
    ],
    "message": "[SECURITY] Show only explicitly configured page tree information\n\nBackend users were able see page tree items without having access:\n- in case no DB mounts were configured for a particular user\n  and page permissions configured to allow \"everybody\"\n- in case DB mounts were pointing to pages, but actually not having\n  any permission configured for these pages (user/group/everybody)\n\nIt was not possible to manipulate any of the affected pages.\n\nResolves: #104397\nReleases: main, 13.3, 12.4, 11.5\nChange-Id: I52079c8cef3d78946083403adb23a3e1a706c652\nSecurity-Bulletin: TYPO3-CORE-SA-2024-012\nSecurity-References: CVE-2024-47780\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/86499\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\nTested-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php",
      "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php",
      "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
    ]
  },
  "patch_diff": {
    "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php": [
      "File: Classes/Controller/Page/TreeController.php -> Classes/Controller/Page/TreeController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "407:             'workspaceId' => !empty($page['t3ver_oid']) ? $page['t3ver_oid'] : $pageId,",
      "408:         ];",
      "411:             $item['hasChildren'] = true;",
      "415:         }",
      "416:         if (is_array($lockInfo)) {",
      "417:             $item['locked'] = true;",
      "",
      "[Removed Lines]",
      "410:         if (!empty($page['_children']) || $this->pageTreeRepository->hasChildren($pageId)) {",
      "412:             if ($depth >= $this->levelsToFetch) {",
      "413:                 $page = $this->pageTreeRepository->getTreeLevels($page, 1);",
      "414:             }",
      "",
      "[Added Lines]",
      "410:         if ($depth >= $this->levelsToFetch && $this->pageTreeRepository->hasChildren($pageId)) {",
      "411:             $page = $this->pageTreeRepository->getTreeLevels($page, 1);",
      "412:         }",
      "413:         if (!empty($page['_children'])) {",
      "",
      "---------------"
    ],
    "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php": [
      "File: Classes/Tree/Repository/PageTreeRepository.php -> Classes/Tree/Repository/PageTreeRepository.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "179:     {",
      "180:         $groupedAndSortedPagesByPid = [];",
      "183:             $pageRecords = $this->getPageRecords($entryPointIds);",
      "184:             $groupedAndSortedPagesByPid[$pageTree['uid']] = $pageRecords;",
      "185:             $parentPageIds = $entryPointIds;",
      "188:         }",
      "190:         for ($i = 0; $i < $depth; $i++) {",
      "191:             if (empty($parentPageIds)) {",
      "192:                 break;",
      "193:             }",
      "194:             $pageRecords = $this->getChildPageRecords($parentPageIds);",
      "196:             $groupedAndSortedPagesByPid = $this->groupAndSortPages($pageRecords, $groupedAndSortedPagesByPid);",
      "198:             $parentPageIds = array_column($pageRecords, 'uid');",
      "199:         }",
      "200:         $this->addChildrenToPage($pageTree, $groupedAndSortedPagesByPid);",
      "",
      "[Removed Lines]",
      "178:     public function getTreeLevels(array $pageTree, int $depth, array $entryPointIds = []): array",
      "182:         if (count($entryPointIds) > 0) {",
      "186:         } else {",
      "187:             $parentPageIds = [$pageTree['uid']];",
      "",
      "[Added Lines]",
      "178:     public function getTreeLevels(array $pageTree, int $depth, ?array $entryPointIds = null): array",
      "182:         if ($entryPointIds === null) {",
      "183:             $parentPageIds = [$pageTree['uid']];",
      "185:         } elseif ($entryPointIds !== []) {",
      "",
      "---------------"
    ],
    "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php": [
      "File: Tests/Functional/Controller/Page/TreeControllerTest.php -> Tests/Functional/Controller/Page/TreeControllerTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:         $this->withDatabaseSnapshot(function () {",
      "60:             $this->importCSVDataSet(__DIR__ . '/Fixtures/be_users.csv');",
      "64:             $scenarioFile = __DIR__ . '/Fixtures/PagesWithBEPermissions.yaml';",
      "65:             $factory = DataHandlerFactory::fromYamlFile($scenarioFile);",
      "67:             $writer->invokeFactory($factory);",
      "68:             self::failIfArrayIsNotEmpty($writer->getErrors());",
      "69:         }, function () {",
      "",
      "[Removed Lines]",
      "62:             $this->backendUser = $this->setUpBackendUser(1);",
      "63:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
      "66:             $writer = DataHandlerWriter::withBackendUser($this->backendUser);",
      "",
      "[Added Lines]",
      "62:             $backendUser = $this->setUpBackendUser(1);",
      "63:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
      "66:             $writer = DataHandlerWriter::withBackendUser($backendUser);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "287:                             ],",
      "288:                         ],",
      "289:                     ],",
      "290:                 ],",
      "291:             ],",
      "292:             [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "290:                     [",
      "292:                         'uid' => 9100,",
      "293:                         'title' => 'Page 9100',",
      "294:                         '_children' => [],",
      "295:                     ],",
      "297:                     [",
      "299:                         'uid' => 9300,",
      "300:                         'title' => 'Page 9300',",
      "301:                         '_children' => [],",
      "302:                     ],",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "813:         self::assertEquals('1000', $afterPageTreeItemsPreparedEvent->getItems()[1]['identifier']);",
      "814:         self::assertEquals('ACME Inc', $afterPageTreeItemsPreparedEvent->getItems()[1]['name']);",
      "815:     }",
      "816: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "830:     public static function fetchDataActionConsidersPermissionsDataProvider(): \\Generator",
      "831:     {",
      "832:         yield 'admin user can see all root pages' => [",
      "833:             'backendUser' => 1,",
      "834:             'expectation' => ['0', '1000', '2000', '7000', '8000', '9100', '9200', '9300'],",
      "835:         ];",
      "836:         yield 'editor with DB mounts can only see accessible pages' => [",
      "837:             'backendUser' => 9,",
      "838:             'expectation' => ['0', '1000', '8110'],",
      "839:         ];",
      "840:         yield 'editor with DB mounts cannot see inaccessible pages' => [",
      "841:             'backendUser' => 8,",
      "842:             'expectation' => ['0'],",
      "843:         ];",
      "844:         yield 'editor without DB mounts cannot see any pages' => [",
      "845:             'backendUser' => 7,",
      "846:             'expectation' => ['0'],",
      "847:         ];",
      "848:     }",
      "850:     #[Test]",
      "851:     #[DataProvider('fetchDataActionConsidersPermissionsDataProvider')]",
      "852:     public function fetchDataActionConsidersPermissions(int $backendUser, array $expectation): void",
      "853:     {",
      "854:         $this->backendUser = $this->setUpBackendUser($backendUser);",
      "855:         $request = (new ServerRequest(new Uri('https://example.com')))->withQueryParams(['depth' => 1]);",
      "856:         $response = $this->get(TreeController::class)->fetchDataAction($request);",
      "857:         $data = json_decode((string)$response->getBody(), true);",
      "858:         $items = array_filter($data, static fn(array $page): bool => $page['depth'] <= 1);",
      "859:         $items = array_map(static fn(array $page): string => $page['identifier'], $items);",
      "860:         self::assertSame($expectation, array_values($items));",
      "861:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "edb3e81b8a9855a5d3ddcf16eb9fe242d0c23d5d",
      "candidate_info": {
        "commit_hash": "edb3e81b8a9855a5d3ddcf16eb9fe242d0c23d5d",
        "repo": "TYPO3-CMS/backend",
        "commit_url": "https://github.com/TYPO3-CMS/backend/commit/edb3e81b8a9855a5d3ddcf16eb9fe242d0c23d5d",
        "files": [
          "Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php",
          "Tests/Functional/Clipboard/ClipboardTest.php",
          "Tests/Functional/Controller/BackendControllerTest.php",
          "Tests/Functional/Controller/EditDocumentControllerTest.php",
          "Tests/Functional/Controller/FormInlineAjaxControllerTest.php",
          "Tests/Functional/Controller/MfaAjaxControllerTest.php",
          "Tests/Functional/Controller/MfaConfigurationControllerTest.php",
          "Tests/Functional/Controller/MfaControllerTest.php",
          "Tests/Functional/Controller/MfaSetupControllerTest.php",
          "Tests/Functional/Controller/Page/LocalizationControllerTest.php",
          "Tests/Functional/Controller/Page/TreeControllerTest.php",
          "Tests/Functional/Controller/ShortcutControllerTest.php",
          "Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php",
          "Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php",
          "Tests/Functional/Form/FormDataProvider/TcaGroupTest.php",
          "Tests/Functional/Middleware/BackendModuleValidatorTest.php",
          "Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php",
          "Tests/Functional/Utility/BackendUtilityTest.php",
          "Tests/Functional/View/Drawing/BackendLayoutRendererTest.php",
          "Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php"
        ],
        "message": "[TASK] Replace Bootstrap::initializeLanguageObject() in tests\n\nThis change uses the LanguageServiceFactory\ndirectly (mostly in tests) instead of\nBootstrap::initializeLanguageObject() in order\nto explicitly define $GLOBALS['LANG'], thus showing\nthe dependency to the global object.\n\nThe internal method Bootstrap::initializeLanguageObject()\ncan thus be removed.\n\nResolves: #102712\nReleases: main\nChange-Id: I78a93e222d302db796a031e585685a409aa73c41\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/82266\nReviewed-by: Benni Mack <benni@typo3.org>\nTested-by: Benni Mack <benni@typo3.org>\nReviewed-by: Nikita Hovratov <nikita.h@live.de>\nTested-by: Oliver Klee <typo3-coding@oliverklee.de>\nTested-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: Nikita Hovratov <nikita.h@live.de>\nReviewed-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: core-ci <typo3@b13.com>",
        "before_after_code_files": [
          "Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php||Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php",
          "Tests/Functional/Clipboard/ClipboardTest.php||Tests/Functional/Clipboard/ClipboardTest.php",
          "Tests/Functional/Controller/BackendControllerTest.php||Tests/Functional/Controller/BackendControllerTest.php",
          "Tests/Functional/Controller/EditDocumentControllerTest.php||Tests/Functional/Controller/EditDocumentControllerTest.php",
          "Tests/Functional/Controller/FormInlineAjaxControllerTest.php||Tests/Functional/Controller/FormInlineAjaxControllerTest.php",
          "Tests/Functional/Controller/MfaAjaxControllerTest.php||Tests/Functional/Controller/MfaAjaxControllerTest.php",
          "Tests/Functional/Controller/MfaConfigurationControllerTest.php||Tests/Functional/Controller/MfaConfigurationControllerTest.php",
          "Tests/Functional/Controller/MfaControllerTest.php||Tests/Functional/Controller/MfaControllerTest.php",
          "Tests/Functional/Controller/MfaSetupControllerTest.php||Tests/Functional/Controller/MfaSetupControllerTest.php",
          "Tests/Functional/Controller/Page/LocalizationControllerTest.php||Tests/Functional/Controller/Page/LocalizationControllerTest.php",
          "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php",
          "Tests/Functional/Controller/ShortcutControllerTest.php||Tests/Functional/Controller/ShortcutControllerTest.php",
          "Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php||Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php",
          "Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php||Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php",
          "Tests/Functional/Form/FormDataProvider/TcaGroupTest.php||Tests/Functional/Form/FormDataProvider/TcaGroupTest.php",
          "Tests/Functional/Middleware/BackendModuleValidatorTest.php||Tests/Functional/Middleware/BackendModuleValidatorTest.php",
          "Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php||Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php",
          "Tests/Functional/Utility/BackendUtilityTest.php||Tests/Functional/Utility/BackendUtilityTest.php",
          "Tests/Functional/View/Drawing/BackendLayoutRendererTest.php||Tests/Functional/View/Drawing/BackendLayoutRendererTest.php",
          "Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php||Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
          ],
          "candidate": [
            "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
          ]
        }
      },
      "candidate_diff": {
        "Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php||Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php": [
          "File: Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php -> Tests/Functional/Backend/Shortcut/ShortcutRepositoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use TYPO3\\CMS\\Backend\\Module\\ModuleProvider;",
          "22: use TYPO3\\CMS\\Backend\\Routing\\Router;",
          "23: use TYPO3\\CMS\\Backend\\Routing\\UriBuilder;",
          "25: use TYPO3\\CMS\\Core\\Database\\ConnectionPool;",
          "26: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "27: use TYPO3\\CMS\\Core\\Imaging\\IconFactory;",
          "28: use TYPO3\\CMS\\Core\\Routing\\RequestContextFactory;",
          "29: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "27: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:         parent::setUp();",
          "38:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/ShortcutsBase.csv');",
          "39:         $this->importCSVDataSet(__DIR__ . '/../../Fixtures/be_users.csv');",
          "43:         $request = new ServerRequest('https://localhost/typo3/');",
          "44:         $requestContextFactory = $this->get(RequestContextFactory::class);",
          "",
          "[Removed Lines]",
          "40:         $this->setUpBackendUser(1);",
          "41:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "40:         $backendUser = $this->setUpBackendUser(1);",
          "41:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Clipboard/ClipboardTest.php||Tests/Functional/Clipboard/ClipboardTest.php": [
          "File: Tests/Functional/Clipboard/ClipboardTest.php -> Tests/Functional/Clipboard/ClipboardTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use TYPO3\\CMS\\Backend\\Clipboard\\Clipboard;",
          "21: use TYPO3\\CMS\\Backend\\Routing\\UriBuilder;",
          "22: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "24: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "25: use TYPO3\\CMS\\Core\\Routing\\RequestContextFactory;",
          "26: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "27: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "24: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:             function () {",
          "58:                 $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "59:                 $this->backendUser = $this->setUpBackendUser(1);",
          "61:                 $scenarioFile = __DIR__ . '/../Fixtures/CommonScenario.yaml';",
          "62:                 $factory = DataHandlerFactory::fromYamlFile($scenarioFile);",
          "63:                 $writer = DataHandlerWriter::withBackendUser($this->backendUser);",
          "",
          "[Removed Lines]",
          "60:                 Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "60:                 $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "66:             },",
          "67:             function () {",
          "68:                 $this->backendUser = $this->setUpBackendUser(1);",
          "70:             }",
          "71:         );",
          "72:     }",
          "",
          "[Removed Lines]",
          "69:                 Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "69:                 $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/BackendControllerTest.php||Tests/Functional/Controller/BackendControllerTest.php": [
          "File: Tests/Functional/Controller/BackendControllerTest.php -> Tests/Functional/Controller/BackendControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use TYPO3\\CMS\\Backend\\Controller\\BackendController;",
          "22: use TYPO3\\CMS\\Backend\\Controller\\Event\\AfterBackendPageRenderEvent;",
          "23: use TYPO3\\CMS\\Backend\\Routing\\Route;",
          "25: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "26: use TYPO3\\CMS\\Core\\EventDispatcher\\ListenerProvider;",
          "27: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "28: use TYPO3\\CMS\\Core\\Messaging\\FlashMessage;",
          "29: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageQueue;",
          "30: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageService;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "27: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     {",
          "41:         parent::setUp();",
          "42:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "45:     }",
          "",
          "[Removed Lines]",
          "43:         $this->setUpBackendUser(1);",
          "44:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "43:         $backendUser = $this->setUpBackendUser(1);",
          "44:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/EditDocumentControllerTest.php||Tests/Functional/Controller/EditDocumentControllerTest.php": [
          "File: Tests/Functional/Controller/EditDocumentControllerTest.php -> Tests/Functional/Controller/EditDocumentControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use TYPO3\\CMS\\Backend\\Controller\\EditDocumentController;",
          "21: use TYPO3\\CMS\\Backend\\Routing\\Route;",
          "22: use TYPO3\\CMS\\Backend\\Utility\\BackendUtility;",
          "24: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "25: use TYPO3\\CMS\\Core\\Http\\NormalizedParams;",
          "26: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "27: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "28: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "26: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/pages.csv');",
          "44:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/tt_content.csv');",
          "45:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "49:         $this->subject = GeneralUtility::makeInstance(EditDocumentController::class);",
          "50:         $this->normalizedParams = new NormalizedParams([], [], '', '');",
          "",
          "[Removed Lines]",
          "46:         $this->setUpBackendUser(1);",
          "47:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "46:         $backendUser = $this->setUpBackendUser(1);",
          "47:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/FormInlineAjaxControllerTest.php||Tests/Functional/Controller/FormInlineAjaxControllerTest.php": [
          "File: Tests/Functional/Controller/FormInlineAjaxControllerTest.php -> Tests/Functional/Controller/FormInlineAjaxControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use TYPO3\\CMS\\Backend\\Controller\\FormInlineAjaxController;",
          "21: use TYPO3\\CMS\\Backend\\Form\\FormDataCompiler;",
          "22: use TYPO3\\CMS\\Backend\\Routing\\Route;",
          "24: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "25: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "26: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "27: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "24: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/pages.csv');",
          "55:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/tx_testirrecsv_hotel.csv');",
          "56:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "60:         $this->writeSiteConfiguration(",
          "61:             'website-local',",
          "",
          "[Removed Lines]",
          "57:         $this->setUpBackendUser(1);",
          "58:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "57:         $backendUser = $this->setUpBackendUser(1);",
          "58:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/MfaAjaxControllerTest.php||Tests/Functional/Controller/MfaAjaxControllerTest.php": [
          "File: Tests/Functional/Controller/MfaAjaxControllerTest.php -> Tests/Functional/Controller/MfaAjaxControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Backend\\Controller\\MfaAjaxController;",
          "22: use TYPO3\\CMS\\Core\\Authentication\\Mfa\\MfaProviderRegistry;",
          "24: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "25: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "26: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "28: final class MfaAjaxControllerTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "25: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:     {",
          "35:         parent::setUp();",
          "36:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users_mfa.csv');",
          "40:         $this->subject = new MfaAjaxController($this->get(MfaProviderRegistry::class));",
          "",
          "[Removed Lines]",
          "37:         $this->setUpBackendUser(1);",
          "38:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "37:         $backendUser = $this->setUpBackendUser(1);",
          "38:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/MfaConfigurationControllerTest.php||Tests/Functional/Controller/MfaConfigurationControllerTest.php": [
          "File: Tests/Functional/Controller/MfaConfigurationControllerTest.php -> Tests/Functional/Controller/MfaConfigurationControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: use TYPO3\\CMS\\Core\\Authentication\\Mfa\\MfaProviderRegistry;",
          "25: use TYPO3\\CMS\\Core\\Authentication\\Mfa\\Provider\\Totp;",
          "26: use TYPO3\\CMS\\Core\\Context\\Context;",
          "28: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "29: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "30: use TYPO3\\CMS\\Core\\Http\\NormalizedParams;",
          "31: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "32: use TYPO3\\CMS\\Core\\Imaging\\IconFactory;",
          "33: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageService;",
          "34: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "35: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "27: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "32: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:     {",
          "52:         parent::setUp();",
          "53:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "57:         $this->subject = new MfaConfigurationController(",
          "58:             $this->get(IconFactory::class),",
          "",
          "[Removed Lines]",
          "54:         $this->setUpBackendUser(1);",
          "55:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "54:         $backendUser = $this->setUpBackendUser(1);",
          "55:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/MfaControllerTest.php||Tests/Functional/Controller/MfaControllerTest.php": [
          "File: Tests/Functional/Controller/MfaControllerTest.php -> Tests/Functional/Controller/MfaControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Core\\Authentication\\Mfa\\Provider\\Totp;",
          "28: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "29: use TYPO3\\CMS\\Core\\Context\\Context;",
          "31: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "32: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "33: use TYPO3\\CMS\\Core\\Log\\Logger;",
          "34: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
          "35: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "30: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "32: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     {",
          "59:         parent::setUp();",
          "60:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "64:         $this->subject = new MfaController(",
          "65:             $this->get(UriBuilder::class),",
          "",
          "[Removed Lines]",
          "61:         $this->setUpBackendUser(1);",
          "62:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "61:         $backendUser = $this->setUpBackendUser(1);",
          "62:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/MfaSetupControllerTest.php||Tests/Functional/Controller/MfaSetupControllerTest.php": [
          "File: Tests/Functional/Controller/MfaSetupControllerTest.php -> Tests/Functional/Controller/MfaSetupControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Core\\Authentication\\Mfa\\Provider\\Totp;",
          "28: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "29: use TYPO3\\CMS\\Core\\Context\\Context;",
          "31: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "32: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "33: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageService;",
          "34: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
          "35: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "30: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "32: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     {",
          "59:         parent::setUp();",
          "60:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "62:         $GLOBALS['TYPO3_CONF_VARS']['BE']['requireMfa'] = 1;",
          "65:         $this->subject = new MfaSetupController(",
          "66:             $this->get(UriBuilder::class),",
          "",
          "[Removed Lines]",
          "61:         $this->setUpBackendUser(1);",
          "63:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "62:         $backendUser = $this->setUpBackendUser(1);",
          "63:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/Page/LocalizationControllerTest.php||Tests/Functional/Controller/Page/LocalizationControllerTest.php": [
          "File: Tests/Functional/Controller/Page/LocalizationControllerTest.php -> Tests/Functional/Controller/Page/LocalizationControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\Controller\\Page;",
          "20: use TYPO3\\CMS\\Backend\\Controller\\Page\\LocalizationController;",
          "22: use TYPO3\\CMS\\Core\\DataHandling\\DataHandler;",
          "23: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "24: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "25: use TYPO3\\TestingFramework\\Core\\Functional\\Framework\\DataHandling\\ActionService;",
          "26: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     public function recordsGetTranslatedFromDefaultLanguage(): void",
          "61:     {",
          "64:         $params = [",
          "65:             'pageId' => 1,",
          "66:             'srcLanguageId' => 0,",
          "",
          "[Removed Lines]",
          "62:         $this->setUpBackendUser(1);",
          "63:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "62:         $backendUser = $this->setUpBackendUser(1);",
          "63:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:     public function recordsGetTranslatedFromDifferentTranslation(): void",
          "80:     {",
          "81:         $this->importCSVDataSet(__DIR__ . '/Fixtures/tt_content-danish-language.csv');",
          "84:         $params = [",
          "85:             'pageId' => 1,",
          "86:             'srcLanguageId' => 1,",
          "",
          "[Removed Lines]",
          "82:         $this->setUpBackendUser(1);",
          "83:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "82:         $backendUser = $this->setUpBackendUser(1);",
          "83:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:     public function recordsGetCopiedFromDefaultLanguage(): void",
          "100:     {",
          "103:         $params = [",
          "104:             'pageId' => 1,",
          "105:             'srcLanguageId' => 0,",
          "",
          "[Removed Lines]",
          "101:         $this->setUpBackendUser(1);",
          "102:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "101:         $backendUser = $this->setUpBackendUser(1);",
          "102:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "118:     public function recordsGetCopiedFromAnotherLanguage(): void",
          "119:     {",
          "120:         $this->importCSVDataSet(__DIR__ . '/Fixtures/tt_content-danish-language.csv');",
          "123:         $params = [",
          "124:             'pageId' => 1,",
          "125:             'srcLanguageId' => 1,",
          "",
          "[Removed Lines]",
          "121:         $this->setUpBackendUser(1);",
          "122:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "121:         $backendUser = $this->setUpBackendUser(1);",
          "122:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "147:     public function copyingNewContentFromLanguageIntoExistingLocalizationHasSameOrdering(): void",
          "148:     {",
          "151:         $params = [",
          "152:             'pageId' => 1,",
          "153:             'srcLanguageId' => 0,",
          "",
          "[Removed Lines]",
          "149:         $this->setUpBackendUser(1);",
          "150:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "149:         $backendUser = $this->setUpBackendUser(1);",
          "150:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "191:     public function defaultLanguageIsFoundAsOriginLanguage(): void",
          "192:     {",
          "193:         $this->importCSVDataSet(__DIR__ . '/Fixtures/tt_content-danish-language.csv');",
          "197:         $data = [",
          "198:             'tt_content' => [",
          "",
          "[Removed Lines]",
          "194:         $this->setUpBackendUser(1);",
          "195:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "194:         $backendUser = $this->setUpBackendUser(1);",
          "195:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "223:     {",
          "224:         $this->importCSVDataSet(__DIR__ . '/Fixtures/tt_content-default-language-deleted-element.csv');",
          "225:         $this->importCSVDataSet(__DIR__ . '/Fixtures/tt_content-danish-language-deleted-source.csv');",
          "228:         $request = (new ServerRequest())->withQueryParams([",
          "229:             'pageId' => 2, // page uid, the records are stored on",
          "230:             'languageId' => 1,  // current language id",
          "",
          "[Removed Lines]",
          "226:         $this->setUpBackendUser(1);",
          "227:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "226:         $backendUser = $this->setUpBackendUser(1);",
          "227:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "241:     {",
          "243:         $backendUser = $this->setUpBackendUser(1);",
          "245:         $backendUser->workspace = 1;",
          "246:         $actionService = new ActionService();",
          "247:         $actionService->deleteRecord('tt_content', 2);",
          "",
          "[Removed Lines]",
          "244:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "244:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "283:     {",
          "285:         $backendUser = $this->setUpBackendUser(1);",
          "287:         $backendUser->workspace = 1;",
          "288:         $actionService = new ActionService();",
          "289:         $actionService->moveRecord('tt_content', 2, 2);",
          "",
          "[Removed Lines]",
          "286:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "286:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php": [
          "File: Tests/Functional/Controller/Page/TreeControllerTest.php -> Tests/Functional/Controller/Page/TreeControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "26: use TYPO3\\CMS\\Core\\Context\\Context;",
          "27: use TYPO3\\CMS\\Core\\Context\\WorkspaceAspect;",
          "29: use TYPO3\\CMS\\Core\\EventDispatcher\\ListenerProvider;",
          "30: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "31: use TYPO3\\CMS\\Core\\Http\\Uri;",
          "32: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "33: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "34: use TYPO3\\TestingFramework\\Core\\AccessibleObjectInterface;",
          "",
          "[Removed Lines]",
          "28: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "31: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:             $this->importCSVDataSet(__DIR__ . '/Fixtures/be_users.csv');",
          "61:             $this->backendUser = $this->setUpBackendUser(1);",
          "63:             $scenarioFile = __DIR__ . '/Fixtures/PagesWithBEPermissions.yaml';",
          "64:             $factory = DataHandlerFactory::fromYamlFile($scenarioFile);",
          "65:             $writer = DataHandlerWriter::withBackendUser($this->backendUser);",
          "66:             $writer->invokeFactory($factory);",
          "67:             static::failIfArrayIsNotEmpty($writer->getErrors());",
          "68:         });",
          "",
          "[Removed Lines]",
          "62:             Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "62:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "68:         }, function () {",
          "69:             $this->backendUser = $this->setUpBackendUser(1);",
          "70:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "710:     public function pageTreeItemsModificationEventIsTriggered(): void",
          "711:     {",
          "714:         $afterPageTreeItemsPreparedEvent = null;",
          "",
          "[Removed Lines]",
          "712:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/ShortcutControllerTest.php||Tests/Functional/Controller/ShortcutControllerTest.php": [
          "File: Tests/Functional/Controller/ShortcutControllerTest.php -> Tests/Functional/Controller/ShortcutControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use TYPO3\\CMS\\Backend\\Backend\\ToolbarItems\\ShortcutToolbarItem;",
          "22: use TYPO3\\CMS\\Backend\\Controller\\ShortcutController;",
          "23: use TYPO3\\CMS\\Backend\\View\\BackendViewFactory;",
          "25: use TYPO3\\CMS\\Core\\Http\\NormalizedParams;",
          "26: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "27: use TYPO3\\CMS\\Core\\Package\\PackageManager;",
          "28: use TYPO3\\CMS\\Fluid\\Core\\Rendering\\RenderingContextFactory;",
          "29: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "26: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/sys_be_shortcuts.csv');",
          "41:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "45:         $this->subject = new ShortcutController(",
          "46:             $this->get(ShortcutToolbarItem::class),",
          "",
          "[Removed Lines]",
          "42:         $this->setUpBackendUser(1);",
          "43:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "42:         $backendUser = $this->setUpBackendUser(1);",
          "43:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php||Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php": [
          "File: Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php -> Tests/Functional/Domain/Repository/Localization/LocalizationRepositoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\Domain\\Repository\\Localization;",
          "20: use TYPO3\\CMS\\Backend\\Domain\\Repository\\Localization\\LocalizationRepository;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "24: final class LocalizationRepositoryTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     {",
          "33:         parent::setUp();",
          "34:         $this->importCSVDataSet(__DIR__ . '/../../../Fixtures/be_users.csv');",
          "38:         $this->importCSVDataSet(__DIR__ . '/Fixtures/DefaultPagesAndContent.csv');",
          "",
          "[Removed Lines]",
          "35:         $this->setUpBackendUser(1);",
          "36:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "35:         $backendUser = $this->setUpBackendUser(1);",
          "36:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php||Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php": [
          "File: Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php -> Tests/Functional/Form/FormDataProvider/TcaCategoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\Form\\FormDataProvider;",
          "20: use TYPO3\\CMS\\Backend\\Form\\FormDataProvider\\TcaCategory;",
          "22: use TYPO3\\CMS\\Core\\Site\\Entity\\Site;",
          "23: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:         parent::setUp();",
          "30:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/CategoryRelations.csv');",
          "31:         $this->importCSVDataSet(__DIR__ . '/../../Fixtures/be_users.csv');",
          "34:     }",
          "",
          "[Removed Lines]",
          "32:         $this->setUpBackendUser(1);",
          "33:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "32:         $backendUser = $this->setUpBackendUser(1);",
          "33:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Form/FormDataProvider/TcaGroupTest.php||Tests/Functional/Form/FormDataProvider/TcaGroupTest.php": [
          "File: Tests/Functional/Form/FormDataProvider/TcaGroupTest.php -> Tests/Functional/Form/FormDataProvider/TcaGroupTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\Form\\FormDataProvider;",
          "20: use TYPO3\\CMS\\Backend\\Form\\FormDataProvider\\TcaGroup;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "24: final class TcaGroupTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     {",
          "30:         parent::setUp();",
          "31:         $this->importCSVDataSet(__DIR__ . '/../../Fixtures/be_users.csv');",
          "35:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/TcaGroup.csv');",
          "36:     }",
          "",
          "[Removed Lines]",
          "32:         $this->setUpBackendUser(1);",
          "33:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "32:         $backendUser = $this->setUpBackendUser(1);",
          "33:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Middleware/BackendModuleValidatorTest.php||Tests/Functional/Middleware/BackendModuleValidatorTest.php": [
          "File: Tests/Functional/Middleware/BackendModuleValidatorTest.php -> Tests/Functional/Middleware/BackendModuleValidatorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: use TYPO3\\CMS\\Backend\\Module\\ModuleProvider;",
          "27: use TYPO3\\CMS\\Backend\\Routing\\Route;",
          "28: use TYPO3\\CMS\\Backend\\Routing\\UriBuilder;",
          "30: use TYPO3\\CMS\\Core\\Http\\Response;",
          "31: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "32: use TYPO3\\CMS\\Core\\Messaging\\FlashMessage;",
          "33: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageQueue;",
          "34: use TYPO3\\CMS\\Core\\Messaging\\FlashMessageService;",
          "",
          "[Removed Lines]",
          "29: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "31: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:         parent::setUp();",
          "48:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "52:         $this->subject = new BackendModuleValidator(",
          "53:             $this->get(UriBuilder::class),",
          "",
          "[Removed Lines]",
          "49:         $this->setUpBackendUser(1);",
          "50:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "49:         $backendUser = $this->setUpBackendUser(1);",
          "50:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php||Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php": [
          "File: Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php -> Tests/Functional/Template/Components/Buttons/Action/ShortcutButtonTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\Template\\Components\\Buttons\\Action;",
          "20: use TYPO3\\CMS\\Backend\\Template\\Components\\Buttons\\Action\\ShortcutButton;",
          "22: use TYPO3\\CMS\\Core\\Core\\SystemEnvironmentBuilder;",
          "23: use TYPO3\\CMS\\Core\\Http\\NormalizedParams;",
          "24: use TYPO3\\CMS\\Core\\Http\\ServerRequest;",
          "25: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "27: final class ShortcutButtonTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "24: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     public function buttonIsNotRenderedForUserWithInsufficientPermissions(): void",
          "46:     {",
          "47:         $this->importCSVDataSet(__DIR__ . '/../../../../Fixtures/be_users_no_bookmarks.csv');",
          "50:         self::assertEmpty(",
          "51:             (new ShortcutButton())->setRouteIdentifier('web_list')->setDisplayName('Some module anme')->render()",
          "52:         );",
          "",
          "[Removed Lines]",
          "48:         $this->setUpBackendUser(1);",
          "49:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "48:         $backendUser = $this->setUpBackendUser(1);",
          "49:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:     public function rendersCorrectMarkup(ShortcutButton $button, string $expectedMarkupFile): void",
          "60:     {",
          "61:         $this->importCSVDataSet(__DIR__ . '/../../../../Fixtures/be_users.csv');",
          "64:         $serverParams = array_replace($_SERVER, ['HTTP_HOST' => 'example.com', 'SCRIPT_NAME' => '/typo3/index.php']);",
          "65:         $request = new ServerRequest('http://example.com/typo3/index.php', 'GET', null, $serverParams);",
          "66:         $GLOBALS['TYPO3_REQUEST'] = $request",
          "",
          "[Removed Lines]",
          "62:         $this->setUpBackendUser(1);",
          "63:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "62:         $backendUser = $this->setUpBackendUser(1);",
          "63:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/Utility/BackendUtilityTest.php||Tests/Functional/Utility/BackendUtilityTest.php": [
          "File: Tests/Functional/Utility/BackendUtilityTest.php -> Tests/Functional/Utility/BackendUtilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Doctrine\\DBAL\\Platforms\\SqlitePlatform as DoctrineSQLitePlatform;",
          "22: use TYPO3\\CMS\\Backend\\Utility\\BackendUtility;",
          "23: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "25: use TYPO3\\CMS\\Core\\Database\\ConnectionPool;",
          "26: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "27: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "28: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "25: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/tt_content.csv');",
          "47:         $this->importCSVDataSet(__DIR__ . '/../Fixtures/be_users.csv');",
          "48:         $this->backendUser = $this->setUpBackendUser(1);",
          "50:     }",
          "",
          "[Removed Lines]",
          "49:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "49:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/View/Drawing/BackendLayoutRendererTest.php||Tests/Functional/View/Drawing/BackendLayoutRendererTest.php": [
          "File: Tests/Functional/View/Drawing/BackendLayoutRendererTest.php -> Tests/Functional/View/Drawing/BackendLayoutRendererTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: use TYPO3\\CMS\\Backend\\View\\Drawing\\BackendLayoutRenderer;",
          "24: use TYPO3\\CMS\\Backend\\View\\PageLayoutContext;",
          "25: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "27: use TYPO3\\CMS\\Core\\Package\\PackageManager;",
          "28: use TYPO3\\CMS\\Core\\Tests\\Functional\\SiteHandling\\SiteBasedTestTrait;",
          "29: use TYPO3\\CMS\\Fluid\\Core\\Rendering\\RenderingContextFactory;",
          "",
          "[Removed Lines]",
          "26: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "26: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:             function () {",
          "51:                 $this->importCSVDataSet(__DIR__ . '/../../Fixtures/be_users.csv');",
          "52:                 $this->backendUser = $this->setUpBackendUser(1);",
          "54:                 $scenarioFile = __DIR__ . '/../Fixtures/DefaultViewScenario.yaml';",
          "55:                 $factory = DataHandlerFactory::fromYamlFile($scenarioFile);",
          "56:                 $writer = DataHandlerWriter::withBackendUser($this->backendUser);",
          "",
          "[Removed Lines]",
          "53:                 Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "53:                 $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "",
          "---------------"
        ],
        "Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php||Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php": [
          "File: Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php -> Tests/Functional/View/ValueFormatter/FlexFormValueFormatterTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Backend\\Tests\\Functional\\View\\ValueFormatter;",
          "20: use TYPO3\\CMS\\Backend\\View\\ValueFormatter\\FlexFormValueFormatter;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "24: final class FlexFormValueFormatterTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Core\\Bootstrap;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Localization\\LanguageServiceFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:     {",
          "28:         parent::setUp();",
          "29:         $this->importCSVDataSet('typo3/sysext/backend/Tests/Functional/Fixtures/be_users.csv');",
          "32:     }",
          "",
          "[Removed Lines]",
          "30:         $this->setUpBackendUser(1);",
          "31:         Bootstrap::initializeLanguageObject();",
          "",
          "[Added Lines]",
          "30:         $backendUser = $this->setUpBackendUser(1);",
          "31:         $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7906e023bc56d75491b4d985c5203828c3040473",
      "candidate_info": {
        "commit_hash": "7906e023bc56d75491b4d985c5203828c3040473",
        "repo": "TYPO3-CMS/backend",
        "commit_url": "https://github.com/TYPO3-CMS/backend/commit/7906e023bc56d75491b4d985c5203828c3040473",
        "files": [
          "Classes/Controller/Page/TreeController.php",
          "Classes/Tree/Repository/PageTreeRepository.php",
          "Tests/Functional/Controller/Page/Fixtures/PagesWithBEPermissions.yaml",
          "Tests/Functional/Controller/Page/Fixtures/be_users.csv",
          "Tests/Functional/Controller/Page/TreeControllerTest.php"
        ],
        "message": "[SECURITY] Show only explicitly configured page tree information\n\nBackend users were able see page tree items without having access:\n- in case no DB mounts were configured for a particular user\n  and page permissions configured to allow \"everybody\"\n- in case DB mounts were pointing to pages, but actually not having\n  any permission configured for these pages (user/group/everybody)\n\nIt was not possible to manipulate any of the affected pages.\n\nResolves: #104397\nReleases: main, 13.3, 12.4, 11.5\nChange-Id: I52079c8cef3d78946083403adb23a3e1a706c652\nSecurity-Bulletin: TYPO3-CORE-SA-2024-012\nSecurity-References: CVE-2024-47780\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/86501\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php",
          "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php",
          "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php",
            "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php",
            "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
          ],
          "candidate": [
            "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php",
            "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php",
            "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php"
          ]
        }
      },
      "candidate_diff": {
        "Classes/Controller/Page/TreeController.php||Classes/Controller/Page/TreeController.php": [
          "File: Classes/Controller/Page/TreeController.php -> Classes/Controller/Page/TreeController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:             'workspaceId' => !empty($page['t3ver_oid']) ? $page['t3ver_oid'] : $pageId,",
          "408:         ];",
          "411:             $item['hasChildren'] = true;",
          "415:         }",
          "416:         if (is_array($lockInfo)) {",
          "417:             $item['locked'] = true;",
          "",
          "[Removed Lines]",
          "410:         if (!empty($page['_children']) || $this->pageTreeRepository->hasChildren($pageId)) {",
          "412:             if ($depth >= $this->levelsToFetch) {",
          "413:                 $page = $this->pageTreeRepository->getTreeLevels($page, 1);",
          "414:             }",
          "",
          "[Added Lines]",
          "410:         if ($depth >= $this->levelsToFetch && $this->pageTreeRepository->hasChildren($pageId)) {",
          "411:             $page = $this->pageTreeRepository->getTreeLevels($page, 1);",
          "412:         }",
          "413:         if (!empty($page['_children'])) {",
          "",
          "---------------"
        ],
        "Classes/Tree/Repository/PageTreeRepository.php||Classes/Tree/Repository/PageTreeRepository.php": [
          "File: Classes/Tree/Repository/PageTreeRepository.php -> Classes/Tree/Repository/PageTreeRepository.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:     {",
          "180:         $groupedAndSortedPagesByPid = [];",
          "183:             $pageRecords = $this->getPageRecords($entryPointIds);",
          "184:             $groupedAndSortedPagesByPid[$pageTree['uid']] = $pageRecords;",
          "185:             $parentPageIds = $entryPointIds;",
          "188:         }",
          "190:         for ($i = 0; $i < $depth; $i++) {",
          "191:             if (empty($parentPageIds)) {",
          "192:                 break;",
          "193:             }",
          "194:             $pageRecords = $this->getChildPageRecords($parentPageIds);",
          "196:             $groupedAndSortedPagesByPid = $this->groupAndSortPages($pageRecords, $groupedAndSortedPagesByPid);",
          "198:             $parentPageIds = array_column($pageRecords, 'uid');",
          "199:         }",
          "200:         $this->addChildrenToPage($pageTree, $groupedAndSortedPagesByPid);",
          "",
          "[Removed Lines]",
          "178:     public function getTreeLevels(array $pageTree, int $depth, array $entryPointIds = []): array",
          "182:         if (count($entryPointIds) > 0) {",
          "186:         } else {",
          "187:             $parentPageIds = [$pageTree['uid']];",
          "",
          "[Added Lines]",
          "178:     public function getTreeLevels(array $pageTree, int $depth, ?array $entryPointIds = null): array",
          "182:         if ($entryPointIds === null) {",
          "183:             $parentPageIds = [$pageTree['uid']];",
          "185:         } elseif ($entryPointIds !== []) {",
          "",
          "---------------"
        ],
        "Tests/Functional/Controller/Page/TreeControllerTest.php||Tests/Functional/Controller/Page/TreeControllerTest.php": [
          "File: Tests/Functional/Controller/Page/TreeControllerTest.php -> Tests/Functional/Controller/Page/TreeControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:         $this->withDatabaseSnapshot(function () {",
          "60:             $this->importCSVDataSet(__DIR__ . '/Fixtures/be_users.csv');",
          "64:             $scenarioFile = __DIR__ . '/Fixtures/PagesWithBEPermissions.yaml';",
          "65:             $factory = DataHandlerFactory::fromYamlFile($scenarioFile);",
          "67:             $writer->invokeFactory($factory);",
          "68:             self::failIfArrayIsNotEmpty($writer->getErrors());",
          "69:         }, function () {",
          "",
          "[Removed Lines]",
          "62:             $this->backendUser = $this->setUpBackendUser(1);",
          "63:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($this->backendUser);",
          "66:             $writer = DataHandlerWriter::withBackendUser($this->backendUser);",
          "",
          "[Added Lines]",
          "62:             $backendUser = $this->setUpBackendUser(1);",
          "63:             $GLOBALS['LANG'] = $this->get(LanguageServiceFactory::class)->createFromUserPreferences($backendUser);",
          "66:             $writer = DataHandlerWriter::withBackendUser($backendUser);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:                             ],",
          "288:                         ],",
          "289:                     ],",
          "290:                 ],",
          "291:             ],",
          "292:             [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "290:                     [",
          "292:                         'uid' => 9100,",
          "293:                         'title' => 'Page 9100',",
          "294:                         '_children' => [],",
          "295:                     ],",
          "297:                     [",
          "299:                         'uid' => 9300,",
          "300:                         'title' => 'Page 9300',",
          "301:                         '_children' => [],",
          "302:                     ],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "813:         self::assertEquals('1000', $afterPageTreeItemsPreparedEvent->getItems()[1]['identifier']);",
          "814:         self::assertEquals('ACME Inc', $afterPageTreeItemsPreparedEvent->getItems()[1]['name']);",
          "815:     }",
          "816: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "830:     public static function fetchDataActionConsidersPermissionsDataProvider(): \\Generator",
          "831:     {",
          "832:         yield 'admin user can see all root pages' => [",
          "833:             'backendUser' => 1,",
          "834:             'expectation' => ['0', '1000', '2000', '7000', '8000', '9100', '9200', '9300'],",
          "835:         ];",
          "836:         yield 'editor with DB mounts can only see accessible pages' => [",
          "837:             'backendUser' => 9,",
          "838:             'expectation' => ['0', '1000', '8110'],",
          "839:         ];",
          "840:         yield 'editor with DB mounts cannot see inaccessible pages' => [",
          "841:             'backendUser' => 8,",
          "842:             'expectation' => ['0'],",
          "843:         ];",
          "844:         yield 'editor without DB mounts cannot see any pages' => [",
          "845:             'backendUser' => 7,",
          "846:             'expectation' => ['0'],",
          "847:         ];",
          "848:     }",
          "850:     #[Test]",
          "851:     #[DataProvider('fetchDataActionConsidersPermissionsDataProvider')]",
          "852:     public function fetchDataActionConsidersPermissions(int $backendUser, array $expectation): void",
          "853:     {",
          "854:         $this->backendUser = $this->setUpBackendUser($backendUser);",
          "855:         $request = (new ServerRequest(new Uri('https://example.com')))->withQueryParams(['depth' => 1]);",
          "856:         $response = $this->get(TreeController::class)->fetchDataAction($request);",
          "857:         $data = json_decode((string)$response->getBody(), true);",
          "858:         $items = array_filter($data, static fn(array $page): bool => $page['depth'] <= 1);",
          "859:         $items = array_map(static fn(array $page): string => $page['identifier'], $items);",
          "860:         self::assertSame($expectation, array_values($items));",
          "861:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}