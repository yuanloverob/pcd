{
  "cve_id": "CVE-2017-4995",
  "cve_desc": "An issue was discovered in Pivotal Spring Security 4.2.0.RELEASE through 4.2.2.RELEASE, and Spring Security 5.0.0.M1. When configured to enable default typing, Jackson contained a deserialization vulnerability that could lead to arbitrary code execution. Jackson fixed this vulnerability by blacklisting known \"deserialization gadgets.\" Spring Security configures Jackson with global default typing enabled, which means that (through the previous exploit) arbitrary code could be executed if all of the following is true: (1) Spring Security's Jackson support is being leveraged by invoking SecurityJackson2Modules.getModules(ClassLoader) or SecurityJackson2Modules.enableDefaultTyping(ObjectMapper); (2) Jackson is used to deserialize data that is not trusted (Spring Security does not perform deserialization using Jackson, so this is an explicit choice of the user); and (3) there is an unknown (Jackson is not blacklisting it already) \"deserialization gadget\" that allows code execution present on the classpath. Jackson provides a blacklisting approach to protecting against this type of attack, but Spring Security should be proactive against blocking unknown \"deserialization gadgets\" when Spring Security enables default typing.",
  "repo": "FasterXML/jackson-databind",
  "patch_hash": "6ce32ffd18facac6abdbbf559c817b47fcb622c1",
  "patch_info": {
    "commit_hash": "6ce32ffd18facac6abdbbf559c817b47fcb622c1",
    "repo": "FasterXML/jackson-databind",
    "commit_url": "https://github.com/FasterXML/jackson-databind/commit/6ce32ffd18facac6abdbbf559c817b47fcb622c",
    "files": [
      "release-notes/VERSION",
      "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
    ],
    "message": "Fix #1599 for 2.7(.10)",
    "before_after_code_files": [
      "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
    ]
  },
  "patch_diff": {
    "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": [
      "File: src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java -> src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "139:         if (!isPotentialBeanType(type.getRawClass())) {",
      "140:             return null;",
      "141:         }",
      "143:         return buildBeanDeserializer(ctxt, type, beanDesc);",
      "144:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "143:         checkIllegalTypes(ctxt, type, beanDesc);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "835:         return (status == null) ? false : status.booleanValue();",
      "836:     }",
      "837: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "843:     protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,",
      "844:             BeanDescription beanDesc)",
      "845:         throws JsonMappingException",
      "846:     {",
      "849:         Class<?> raw = type.getRawClass();",
      "850:         String name = raw.getSimpleName();",
      "852:         if (\"TemplatesImpl\".equals(name)) { // [databind#1599]",
      "853:             if (raw.getName().startsWith(\"com.sun.org.apache.xalan\")) {",
      "854:                 throw JsonMappingException.from(ctxt,",
      "855:                         String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\",",
      "856:                                 name));",
      "857:             }",
      "858:         }",
      "859:     }",
      "",
      "---------------"
    ],
    "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java": [
      "File: src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java -> src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package com.fasterxml.jackson.databind.interop;",
      "3: import com.fasterxml.jackson.databind.*;",
      "9: public class IllegalTypesCheckTest extends BaseMapTest",
      "10: {",
      "11:     static class Bean1599 {",
      "12:         public int id;",
      "13:         public Object obj;",
      "14:     }",
      "16:     public void testIssue1599() throws Exception",
      "17:     {",
      "18:         final String JSON = aposToQuotes(",
      "19:  \"{'id': 124,\\n\"",
      "20: +\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"",
      "21: +\"  {\\n\"",
      "22: +\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"",
      "23: +\"    'transletName' : 'a.b',\\n\"",
      "24: +\"    'outputProperties' : { }\\n\"",
      "25: +\"  }\\n\"",
      "26: +\" ]\\n\"",
      "27: +\"}\"",
      "28:         );",
      "29:         ObjectMapper mapper = new ObjectMapper();",
      "30:         mapper.enableDefaultTyping();",
      "31:         try {",
      "32:             mapper.readValue(JSON, Bean1599.class);",
      "33:             fail(\"Should not pass\");",
      "34:         } catch (JsonMappingException e) {",
      "35:             verifyException(e, \"Illegal type\");",
      "36:             verifyException(e, \"to deserialize\");",
      "37:             verifyException(e, \"prevented for security reasons\");",
      "38:         }",
      "39:     }",
      "40: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f031f27a31625d07922bdd090664c69544200a5d",
      "candidate_info": {
        "commit_hash": "f031f27a31625d07922bdd090664c69544200a5d",
        "repo": "FasterXML/jackson-databind",
        "commit_url": "https://github.com/FasterXML/jackson-databind/commit/f031f27a31625d07922bdd090664c69544200a5d",
        "files": [
          "release-notes/VERSION",
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
        ],
        "message": "Fix 1/3 of #1855",
        "before_after_code_files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
            "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
          ],
          "candidate": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
            "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java -> src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         s.add(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "69:         s.add(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "70:         s.add(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "72:         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
          "73:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:         s.add(\"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\");",
          "73:         s.add(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
          "",
          "---------------"
        ],
        "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java": [
          "File: src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java -> src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     public void testJDKTypes1737() throws Exception",
          "60:     {",
          "63:     }",
          "",
          "[Removed Lines]",
          "61:         _testTypes1737(java.util.logging.FileHandler.class);",
          "62:         _testTypes1737(java.rmi.server.UnicastRemoteObject.class);",
          "",
          "[Added Lines]",
          "61:         _testIllegalType(java.util.logging.FileHandler.class);",
          "62:         _testIllegalType(java.rmi.server.UnicastRemoteObject.class);",
          "63:     }",
          "66:     public void testJDKTypes1855() throws Exception",
          "67:     {",
          "69:         _testIllegalType(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     public void testSpringTypes1737() throws Exception",
          "71:     {",
          "74:     }",
          "76:     public void testC3P0Types1737() throws Exception",
          "77:     {",
          "80:     }",
          "85:     }",
          "88:     {",
          "",
          "[Removed Lines]",
          "72:         _testTypes1737(\"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor\");",
          "73:         _testTypes1737(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "78:         _testTypes1737(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "79:         _testTypes1737(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "83:     private void _testTypes1737(Class<?> nasty) throws Exception {",
          "84:         _testTypes1737(nasty.getName());",
          "87:     private void _testTypes1737(String clsName) throws Exception",
          "",
          "[Added Lines]",
          "79:         _testIllegalType(\"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor\");",
          "80:         _testIllegalType(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "85:         _testIllegalType(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "86:         _testIllegalType(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "90:     private void _testIllegalType(Class<?> nasty) throws Exception {",
          "91:         _testIllegalType(nasty.getName());",
          "94:     private void _testIllegalType(String clsName) throws Exception",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e865a7a4464da63ded9f4b1a2328ad85c9ded78b",
      "candidate_info": {
        "commit_hash": "e865a7a4464da63ded9f4b1a2328ad85c9ded78b",
        "repo": "FasterXML/jackson-databind",
        "commit_url": "https://github.com/FasterXML/jackson-databind/commit/e865a7a4464da63ded9f4b1a2328ad85c9ded78b",
        "files": [
          "release-notes/VERSION",
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
        ],
        "message": "Fix #1737 (#1857)",
        "before_after_code_files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
            "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
          ],
          "candidate": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
            "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java -> src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:         s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
          "62:         s.add(\"com.sun.rowset.JdbcRowSetImpl\");",
          "63:         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
          "64:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:         s.add(\"java.util.logging.FileHandler\");",
          "65:         s.add(\"java.rmi.server.UnicastRemoteObject\");",
          "67:         s.add(\"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor\");",
          "68:         s.add(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "69:         s.add(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "70:         s.add(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "",
          "---------------"
        ],
        "src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java||src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java": [
          "File: src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java -> src/test/java/com/fasterxml/jackson/databind/interop/IllegalTypesCheckTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package com.fasterxml.jackson.databind.interop;",
          "3: import com.fasterxml.jackson.databind.*;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import com.fasterxml.jackson.annotation.JsonTypeInfo;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:         public int id;",
          "13:         public Object obj;",
          "14:     }",
          "17:     {",
          "18:         final String JSON = aposToQuotes(",
          "19:  \"{'id': 124,\\n\"",
          "21: +\"  {\\n\"",
          "22: +\"    'transletBytecodes' : [ 'AAIAZQ==' ],\\n\"",
          "23: +\"    'transletName' : 'a.b',\\n\"",
          "",
          "[Removed Lines]",
          "16:     public void testIssue1599() throws Exception",
          "20: +\" 'obj':[ 'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\\n\"",
          "",
          "[Added Lines]",
          "17:     static class PolyWrapper {",
          "18:         @JsonTypeInfo(use = JsonTypeInfo.Id.CLASS,",
          "19:                 include = JsonTypeInfo.As.WRAPPER_ARRAY)",
          "20:         public Object v;",
          "21:     }",
          "29:     private final ObjectMapper MAPPER = objectMapper();",
          "33:     public void testXalanTypes1599() throws Exception",
          "35:         final String clsName = \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\";",
          "38: +\" 'obj':[ '\"+clsName+\"',\\n\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:             mapper.readValue(JSON, Bean1599.class);",
          "33:             fail(\"Should not pass\");",
          "34:         } catch (JsonMappingException e) {",
          "38:         }",
          "39:     }",
          "40: }",
          "",
          "[Removed Lines]",
          "35:             verifyException(e, \"Illegal type\");",
          "36:             verifyException(e, \"to deserialize\");",
          "37:             verifyException(e, \"prevented for security reasons\");",
          "",
          "[Added Lines]",
          "53:             _verifySecurityException(e, clsName);",
          "54:         }",
          "55:     }",
          "59:     public void testJDKTypes1737() throws Exception",
          "60:     {",
          "61:         _testTypes1737(java.util.logging.FileHandler.class);",
          "62:         _testTypes1737(java.rmi.server.UnicastRemoteObject.class);",
          "63:     }",
          "70:     public void testSpringTypes1737() throws Exception",
          "71:     {",
          "72:         _testTypes1737(\"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor\");",
          "73:         _testTypes1737(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "74:     }",
          "76:     public void testC3P0Types1737() throws Exception",
          "77:     {",
          "78:         _testTypes1737(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "79:         _testTypes1737(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "80:     }",
          "83:     private void _testTypes1737(Class<?> nasty) throws Exception {",
          "84:         _testTypes1737(nasty.getName());",
          "85:     }",
          "87:     private void _testTypes1737(String clsName) throws Exception",
          "88:     {",
          "91:         String json = aposToQuotes(",
          "92:                 \"{'v':['\"+clsName+\"','/tmp/foobar.txt']}\"",
          "93:                 );",
          "94:         try {",
          "95:             MAPPER.readValue(json, PolyWrapper.class);",
          "96:             fail(\"Should not pass\");",
          "97:         } catch (JsonMappingException e) {",
          "98:             _verifySecurityException(e, clsName);",
          "99:         }",
          "100:     }",
          "102:     protected void _verifySecurityException(Throwable t, String clsName) throws Exception",
          "103:     {",
          "105:         _verifyException(t, JsonMappingException.class,",
          "106:             \"Illegal type\",",
          "107:             \"to deserialize\",",
          "108:             \"prevented for security reasons\");",
          "109:         verifyException(t, clsName);",
          "110:     }",
          "112:     protected void _verifyException(Throwable t, Class<?> expExcType,",
          "113:             String... patterns) throws Exception",
          "114:     {",
          "115:         Class<?> actExc = t.getClass();",
          "116:         if (!expExcType.isAssignableFrom(actExc)) {",
          "117:             fail(\"Expected Exception of type '\"+expExcType.getName()+\"', got '\"",
          "118:                     +actExc.getName()+\"', message: \"+t.getMessage());",
          "119:         }",
          "120:         for (String pattern : patterns) {",
          "121:             verifyException(t, pattern);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "978798382ceb72229e5036aa1442943933d6d171",
      "candidate_info": {
        "commit_hash": "978798382ceb72229e5036aa1442943933d6d171",
        "repo": "FasterXML/jackson-databind",
        "commit_url": "https://github.com/FasterXML/jackson-databind/commit/978798382ceb72229e5036aa1442943933d6d171",
        "files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
        ],
        "message": "Fix minor regression wrt patch for #1855",
        "before_after_code_files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java||src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java"
          ],
          "candidate": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java -> src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "913:             BeanDescription beanDesc)",
          "914:         throws JsonMappingException",
          "915:     {",
          "917:     }",
          "918: }",
          "",
          "[Removed Lines]",
          "916:         SubTypeValidator.instance().validateSubType(ctxt, type);",
          "",
          "[Added Lines]",
          "916:         SubTypeValidator.instance().validateSubType(ctxt, type, beanDesc);",
          "",
          "---------------"
        ],
        "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java||src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java -> src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import java.util.HashSet;",
          "5: import java.util.Set;",
          "7: import com.fasterxml.jackson.databind.DeserializationContext;",
          "8: import com.fasterxml.jackson.databind.JavaType;",
          "9: import com.fasterxml.jackson.databind.JsonMappingException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import com.fasterxml.jackson.databind.BeanDescription;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     public static SubTypeValidator instance() { return instance; }",
          "68:     {",
          "",
          "[Removed Lines]",
          "67:     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException",
          "",
          "[Added Lines]",
          "68:     public void validateSubType(DeserializationContext ctxt, JavaType type,",
          "69:             BeanDescription beanDesc) throws JsonMappingException",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:             return;",
          "93:         } while (false);",
          "97:     }",
          "98: }",
          "",
          "[Removed Lines]",
          "95:         throw JsonMappingException.from(ctxt,",
          "96:                 String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));",
          "",
          "[Added Lines]",
          "97:         ctxt.reportBadTypeDefinition(beanDesc,",
          "98:                 \"Illegal type (%s) to deserialize: prevented for security reasons\", full);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2235894210c75f624a3d0cd60bfb0434a20a18bf",
      "candidate_info": {
        "commit_hash": "2235894210c75f624a3d0cd60bfb0434a20a18bf",
        "repo": "FasterXML/jackson-databind",
        "commit_url": "https://github.com/FasterXML/jackson-databind/commit/2235894210c75f624a3d0cd60bfb0434a20a18bf",
        "files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
        ],
        "message": "Fix #1855",
        "before_after_code_files": [
          "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java||src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java"
          ],
          "candidate": [
            "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java||src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java -> src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer;",
          "13: import com.fasterxml.jackson.databind.introspect.*;",
          "14: import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;",
          "15: import com.fasterxml.jackson.databind.util.ArrayBuilders;",
          "16: import com.fasterxml.jackson.databind.util.ClassUtil;",
          "17: import com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
          "",
          "[Removed Lines]",
          "47:     protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
          "48:     static {",
          "49:         Set<String> s = new HashSet<String>();",
          "52:         s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
          "53:         s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
          "54:         s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
          "55:         s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
          "56:         s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
          "57:         s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
          "58:         s.add(\"org.springframework.beans.factory.ObjectFactory\");",
          "59:         s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
          "60:         s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
          "62:         s.add(\"com.sun.rowset.JdbcRowSetImpl\");",
          "64:         s.add(\"java.util.logging.FileHandler\");",
          "65:         s.add(\"java.rmi.server.UnicastRemoteObject\");",
          "67:         s.add(\"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor\");",
          "68:         s.add(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "69:         s.add(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "70:         s.add(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "72:         s.add(\"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\");",
          "73:         s.add(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
          "74:         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
          "75:     }",
          "80:     protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:             return null;",
          "180:         }",
          "184:         return buildBeanDeserializer(ctxt, type, beanDesc);",
          "185:     }",
          "",
          "[Removed Lines]",
          "182:         checkIllegalTypes(ctxt, type, beanDesc);",
          "",
          "[Added Lines]",
          "145:         _validateSubType(ctxt, type, beanDesc);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "877:     }",
          "883:             BeanDescription beanDesc)",
          "884:         throws JsonMappingException",
          "885:     {",
          "894:     }",
          "895: }",
          "",
          "[Removed Lines]",
          "882:     protected void checkIllegalTypes(DeserializationContext ctxt, JavaType type,",
          "888:         String full = type.getRawClass().getName();",
          "890:         if (_cfgIllegalClassNames.contains(full)) {",
          "891:             throw JsonMappingException.from(ctxt,",
          "892:                     String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));",
          "893:         }",
          "",
          "[Added Lines]",
          "845:     protected void _validateSubType(DeserializationContext ctxt, JavaType type,",
          "849:         SubTypeValidator.instance().validateSubType(ctxt, type);",
          "",
          "---------------"
        ],
        "src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java||src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java": [
          "File: src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java -> src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package com.fasterxml.jackson.databind.jsontype.impl;",
          "3: import java.util.Collections;",
          "4: import java.util.HashSet;",
          "5: import java.util.Set;",
          "7: import com.fasterxml.jackson.databind.DeserializationContext;",
          "8: import com.fasterxml.jackson.databind.JavaType;",
          "9: import com.fasterxml.jackson.databind.JsonMappingException;",
          "19: public class SubTypeValidator",
          "20: {",
          "21:     protected final static String PREFIX_STRING = \"org.springframework.\";",
          "26:     protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;",
          "27:     static {",
          "28:         Set<String> s = new HashSet<String>();",
          "31:         s.add(\"org.apache.commons.collections.functors.InvokerTransformer\");",
          "32:         s.add(\"org.apache.commons.collections.functors.InstantiateTransformer\");",
          "33:         s.add(\"org.apache.commons.collections4.functors.InvokerTransformer\");",
          "34:         s.add(\"org.apache.commons.collections4.functors.InstantiateTransformer\");",
          "35:         s.add(\"org.codehaus.groovy.runtime.ConvertedClosure\");",
          "36:         s.add(\"org.codehaus.groovy.runtime.MethodClosure\");",
          "37:         s.add(\"org.springframework.beans.factory.ObjectFactory\");",
          "38:         s.add(\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\");",
          "39:         s.add(\"org.apache.xalan.xsltc.trax.TemplatesImpl\");",
          "41:         s.add(\"com.sun.rowset.JdbcRowSetImpl\");",
          "43:         s.add(\"java.util.logging.FileHandler\");",
          "44:         s.add(\"java.rmi.server.UnicastRemoteObject\");",
          "47:         s.add(\"org.springframework.beans.factory.config.PropertyPathFactoryBean\");",
          "48:         s.add(\"com.mchange.v2.c3p0.JndiRefForwardingDataSource\");",
          "49:         s.add(\"com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\");",
          "51:         s.add(\"org.apache.tomcat.dbcp.dbcp2.BasicDataSource\");",
          "52:         s.add(\"com.sun.org.apache.bcel.internal.util.ClassLoader\");",
          "53:         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);",
          "54:     }",
          "59:     protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;",
          "61:     private final static SubTypeValidator instance = new SubTypeValidator();",
          "63:     protected SubTypeValidator() { }",
          "65:     public static SubTypeValidator instance() { return instance; }",
          "67:     public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException",
          "68:     {",
          "71:         final Class<?> raw = type.getRawClass();",
          "72:         String full = raw.getName();",
          "74:         do {",
          "75:             if (_cfgIllegalClassNames.contains(full)) {",
          "76:                 break;",
          "77:             }",
          "81:             if (full.startsWith(PREFIX_STRING)) {",
          "82:                 for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {",
          "83:                     String name = cls.getSimpleName();",
          "85:                     if (\"AbstractPointcutAdvisor\".equals(name)",
          "87:                             || \"AbstractApplicationContext.equals\".equals(name)) {",
          "88:                         break;",
          "89:                     }",
          "90:                 }",
          "91:             }",
          "92:             return;",
          "93:         } while (false);",
          "95:         throw JsonMappingException.from(ctxt,",
          "96:                 String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}