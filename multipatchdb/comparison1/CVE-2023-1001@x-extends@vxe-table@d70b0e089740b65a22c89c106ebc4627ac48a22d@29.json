{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "759ec658fbff25c5381b082f038530a9942035ad",
      "candidate_info": {
        "commit_hash": "759ec658fbff25c5381b082f038530a9942035ad",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/759ec658fbff25c5381b082f038530a9942035ad",
        "files": [
          "package.json",
          "packages/icon/src/icon.js",
          "packages/table/src/methods.js",
          "styles/icon.scss",
          "types/table.d.ts"
        ],
        "message": "\u65b9\u6cd5 isExpandByRow \u66f4\u6539\u4e3a isRowExpandByRow",
        "before_after_code_files": [
          "packages/icon/src/icon.js||packages/icon/src/icon.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "styles/icon.scss||styles/icon.scss",
          "types/table.d.ts||types/table.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/icon/src/icon.js||packages/icon/src/icon.js": [
          "File: packages/icon/src/icon.js -> packages/icon/src/icon.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:   render (h) {",
          "9:     const { name, roll, status } = this",
          "10:     return h('i', {",
          "12:       on: {",
          "13:         click: this.clickEvent",
          "14:       }",
          "",
          "[Removed Lines]",
          "11:       class: [`vxe-icon-${name}`, roll || '', status || ''],",
          "",
          "[Added Lines]",
          "11:       class: [`vxe-icon-${name}`, roll || '', status ? [`theme--${status}`] : ''],",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4126:     const { lazy } = expandOpts",
          "4127:     const rowid = getRowid(this, row)",
          "4128:     if (!lazy || !rowExpandLazyLoadedMaps[rowid]) {",
          "4130:       const columnIndex = this.getColumnIndex(column)",
          "4131:       const $columnIndex = this.getVMColumnIndex(column)",
          "4132:       this.setRowExpand(row, expanded)",
          "",
          "[Removed Lines]",
          "4129:       const expanded = !this.isExpandByRow(row)",
          "",
          "[Added Lines]",
          "4129:       const expanded = !this.isRowExpandByRow(row)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4139:   toggleRowExpand (row) {",
          "4141:   },",
          "",
          "[Removed Lines]",
          "4140:     return this.setRowExpand(row, !this.isExpandByRow(row))",
          "",
          "[Added Lines]",
          "4140:     return this.setRowExpand(row, !this.isRowExpandByRow(row))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4267:     const { rowExpandedMaps } = this",
          "4268:     const rowid = getRowid(this, row)",
          "4269:     return !!rowExpandedMaps[rowid]",
          "4270:   },",
          "",
          "[Removed Lines]",
          "4266:   isExpandByRow (row) {",
          "",
          "[Added Lines]",
          "4266:   isRowExpandByRow (row) {",
          "4271:   isExpandByRow (row) {",
          "4276:     return this.isRowExpandByRow(row)",
          "4277:   },",
          "",
          "---------------"
        ],
        "styles/icon.scss||styles/icon.scss": [
          "File: styles/icon.scss -> styles/icon.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   }",
          "16: }",
          "18: [class*=\"vxe-icon-\"] {",
          "19:   font-family: \"vxeiconfont\" !important;",
          "20:   font-style: normal;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: $btnThemeList: (",
          "19:   (",
          "20:     name: \"primary\",",
          "21:     textColor: var(--vxe-primary-color),",
          "22:   ),",
          "23:   (",
          "24:     name: \"success\",",
          "25:     textColor: var(--vxe-success-color),",
          "26:   ),",
          "27:   (",
          "28:     name: \"info\",",
          "29:     textColor: var(--vxe-info-color),",
          "30:   ),",
          "31:   (",
          "32:     name: \"warning\",",
          "33:     textColor: var(--vxe-warning-color),",
          "34:   ),",
          "35:   (",
          "36:     name: \"danger\",",
          "37:     textColor: var(--vxe-danger-color),",
          "38:   )",
          "39: );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:   &.roll {",
          "43:     animation: rollCircle 1s infinite linear;",
          "44:   }",
          "45: }",
          "47: .vxe-icon-time:before {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:   @for $index from 0 to length($btnThemeList) {",
          "69:     $item: nth($btnThemeList, $index + 1);",
          "70:     &.theme--#{map-get($item, name)} {",
          "71:       color: map-get($item, textColor);",
          "72:     }",
          "73:   }",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "711:   isExpandByRow(row: RowInfo): boolean;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "711:   isRowExpandByRow(row: RowInfo): boolean;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc3797d66433e9872e038a6e62bea8d5ffde4cd3",
      "candidate_info": {
        "commit_hash": "cc3797d66433e9872e038a6e62bea8d5ffde4cd3",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/cc3797d66433e9872e038a6e62bea8d5ffde4cd3",
        "files": [
          "package.json",
          "packages/export/src/mixin.js",
          "packages/table/src/methods.js",
          "packages/table/src/table.js",
          "packages/v-x-e-table/index.js",
          "packages/v-x-e-table/src/commands.js",
          "packages/v-x-e-table/src/config.js",
          "packages/v-x-e-table/src/formats.js",
          "packages/v-x-e-table/src/menus.js",
          "types/v-x-e-table/config.d.ts",
          "types/v-x-e-table/index.d.ts"
        ],
        "message": "\u8c03\u6574\u5168\u5c40\u53c2\u6570 setup \u4e3a config",
        "before_after_code_files": [
          "packages/export/src/mixin.js||packages/export/src/mixin.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "packages/v-x-e-table/index.js||packages/v-x-e-table/index.js",
          "packages/v-x-e-table/src/commands.js||packages/v-x-e-table/src/commands.js",
          "packages/v-x-e-table/src/setup.js||packages/v-x-e-table/src/config.js",
          "packages/v-x-e-table/src/formats.js||packages/v-x-e-table/src/formats.js",
          "packages/v-x-e-table/src/menus.js||packages/v-x-e-table/src/menus.js",
          "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/export/src/mixin.js||packages/export/src/mixin.js": [
          "File: packages/export/src/mixin.js -> packages/export/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "858:   const { type, filename } = UtilTools.parseFile(file)",
          "862:     if (opts.message !== false) {",
          "864:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "",
          "[Removed Lines]",
          "861:   if (!importMethod && !XEUtils.includes(VXETable.config.importTypes, type)) {",
          "",
          "[Added Lines]",
          "861:   if (!importMethod && !XEUtils.includes(VXETable.globalConfs.importTypes, type)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1042:   const hasTree = treeConfig",
          "1043:   const hasMerge = !hasTree && mergeList.length",
          "1044:   const defOpts = Object.assign({ message: true, isHeader: true }, options)",
          "1046:   const modes = defOpts.modes",
          "1047:   const checkMethod = customOpts.checkMethod",
          "1048:   const exportColumns = collectColumn.slice(0)",
          "",
          "[Removed Lines]",
          "1045:   const types = defOpts.types || VXETable.config.exportTypes",
          "",
          "[Added Lines]",
          "1045:   const types = defOpts.types || VXETable.globalConfs.exportTypes",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1274:       }",
          "1278:         if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "1279:           errLog('vxe.error.notType', [type])",
          "1280:         }",
          "",
          "[Removed Lines]",
          "1277:       if (!opts.exportMethod && !XEUtils.includes(VXETable.config.exportTypes, type)) {",
          "",
          "[Added Lines]",
          "1277:       if (!opts.exportMethod && !XEUtils.includes(VXETable.globalConfs.exportTypes, type)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1349:     },",
          "1350:     _importData (options) {",
          "1351:       const opts = Object.assign({",
          "1355:       }, this.importOpts, options)",
          "",
          "[Removed Lines]",
          "1352:         types: VXETable.config.importTypes",
          "",
          "[Added Lines]",
          "1352:         types: VXETable.globalConfs.importTypes",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1399:       })",
          "1400:     },",
          "1401:     _openImport (options) {",
          "1403:       const { types } = defOpts",
          "1404:       const isTree = !!this.getTreeStatus()",
          "1405:       if (isTree) {",
          "",
          "[Removed Lines]",
          "1402:       const defOpts = Object.assign({ mode: 'insert', message: true, types: VXETable.config.importTypes }, options, this.importOpts)",
          "",
          "[Added Lines]",
          "1402:       const defOpts = Object.assign({ mode: 'insert', message: true, types: VXETable.globalConfs.importTypes }, options, this.importOpts)",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1499:   showColumn (fieldOrColumn) {",
          "1500:     const column = handleFieldOrColumn(this, fieldOrColumn)",
          "1502:       column.visible = true",
          "1503:       return this.handleCustom()",
          "1504:     }",
          "",
          "[Removed Lines]",
          "1501:     if (column && column.visible) {",
          "",
          "[Added Lines]",
          "1501:     if (column && !column.visible) {",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "805:       const { exportConfig, exportOpts, importConfig, importOpts } = this",
          "808:       }",
          "811:       }",
          "812:     }",
          "",
          "[Removed Lines]",
          "806:       if (importConfig && importOpts.types && !importOpts.importMethod && !XEUtils.includeArrays(VXETable.config.importTypes, importOpts.types)) {",
          "807:         warnLog('vxe.error.errProp', [`export-config.types=${importOpts.types.join(',')}`, importOpts.types.filter(type => XEUtils.includes(VXETable.config.importTypes, type)).join(',') || VXETable.config.importTypes.join(',')])",
          "809:       if (exportConfig && exportOpts.types && !exportOpts.exportMethod && !XEUtils.includeArrays(VXETable.config.exportTypes, exportOpts.types)) {",
          "810:         warnLog('vxe.error.errProp', [`export-config.types=${exportOpts.types.join(',')}`, exportOpts.types.filter(type => XEUtils.includes(VXETable.config.exportTypes, type)).join(',') || VXETable.config.exportTypes.join(',')])",
          "",
          "[Added Lines]",
          "806:       if (importConfig && importOpts.types && !importOpts.importMethod && !XEUtils.includeArrays(VXETable.globalConfs.importTypes, importOpts.types)) {",
          "807:         warnLog('vxe.error.errProp', [`export-config.types=${importOpts.types.join(',')}`, importOpts.types.filter(type => XEUtils.includes(VXETable.globalConfs.importTypes, type)).join(',') || VXETable.globalConfs.importTypes.join(',')])",
          "809:       if (exportConfig && exportOpts.types && !exportOpts.exportMethod && !XEUtils.includeArrays(VXETable.globalConfs.exportTypes, exportOpts.types)) {",
          "810:         warnLog('vxe.error.errProp', [`export-config.types=${exportOpts.types.join(',')}`, exportOpts.types.filter(type => XEUtils.includes(VXETable.globalConfs.exportTypes, type)).join(',') || VXETable.globalConfs.exportTypes.join(',')])",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/index.js||packages/v-x-e-table/index.js": [
          "File: packages/v-x-e-table/index.js -> packages/v-x-e-table/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import { menus } from './src/menus'",
          "7: import { formats } from './src/formats'",
          "8: import { validators } from './src/validators'",
          "10: import { UtilTools } from '../tools/utils'",
          "11: import { errLog } from '../tools/log'",
          "",
          "[Removed Lines]",
          "9: import { setup } from './src/setup'",
          "",
          "[Added Lines]",
          "9: import { config } from './src/config'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:     return getExportOrImpotType(GlobalConfig.export.types, 2)",
          "77:   }",
          "78: }",
          "81: export function t (key, args) {",
          "82:   return GlobalConfig.i18n(key, args)",
          "",
          "[Removed Lines]",
          "79: export const config = new VXETableConfig()",
          "",
          "[Added Lines]",
          "81: export const globalConfs = new VXETableConfig()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87: }",
          "89: export const v = 'v3'",
          "91: export const VXETable = {",
          "92:   v,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92: export const setup = config",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:   reg,",
          "95:   use,",
          "96:   setup,",
          "97:   interceptor,",
          "98:   renderer,",
          "99:   commands,",
          "100:   formats,",
          "101:   menus,",
          "102:   validators,",
          "104:   t,",
          "105:   _t",
          "106: }",
          "",
          "[Removed Lines]",
          "103:   config,",
          "",
          "[Added Lines]",
          "100:   config,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "110: export * from './src/commands'",
          "111: export * from './src/menus'",
          "112: export * from './src/formats'",
          "115: export default VXETable",
          "",
          "[Removed Lines]",
          "113: export * from './src/setup'",
          "",
          "[Added Lines]",
          "116: export * from './src/config'",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/commands.js||packages/v-x-e-table/src/commands.js": [
          "File: packages/v-x-e-table/src/commands.js -> packages/v-x-e-table/src/commands.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     const conf = this.store[name]",
          "23:     if (XEUtils.isFunction(render)) {",
          "27:       render = {",
          "28:         commandMethod: render",
          "29:       }",
          "",
          "[Removed Lines]",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "25:         warnLog('vxe.error.delProp', ['commands -> callback', 'commandMethod'])",
          "26:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/setup.js||packages/v-x-e-table/src/config.js": [
          "File: packages/v-x-e-table/src/setup.js -> packages/v-x-e-table/src/config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import XEUtils from 'xe-utils'",
          "8:   return XEUtils.merge(GlobalConfig, options)",
          "9: }",
          "",
          "[Removed Lines]",
          "1: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "7: export function setup (options) {",
          "",
          "[Added Lines]",
          "1: import GlobalConfig from './conf'",
          "7: export function config (options) {",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/formats.js||packages/v-x-e-table/src/formats.js": [
          "File: packages/v-x-e-table/src/formats.js -> packages/v-x-e-table/src/formats.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     const conf = this.store[name]",
          "23:     if (XEUtils.isFunction(render)) {",
          "27:       render = {",
          "28:         cellFormatMethod: render",
          "29:       }",
          "",
          "[Removed Lines]",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "25:         warnLog('vxe.error.delProp', ['formats -> callback', 'cellFormatMethod'])",
          "26:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/menus.js||packages/v-x-e-table/src/menus.js": [
          "File: packages/v-x-e-table/src/menus.js -> packages/v-x-e-table/src/menus.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     const conf = this.store[name]",
          "23:     if (XEUtils.isFunction(render)) {",
          "27:       render = {",
          "28:         menuMethod: render",
          "29:       }",
          "",
          "[Removed Lines]",
          "24:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "25:         warnLog('vxe.error.delProp', ['menus -> callback', 'menuMethod'])",
          "26:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts": [
          "File: types/v-x-e-table/index.d.ts -> types/v-x-e-table/index.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { VxeGlobalFormats } from './formats'",
          "10: import { VxeGlobalMenus } from './menus'",
          "11: import { VxeGlobalValidators } from './validators'",
          "",
          "[Removed Lines]",
          "12: import { VxeGlobalConfigMethod } from './setup'",
          "",
          "[Added Lines]",
          "12: import { VxeGlobalConfigMethod } from './config'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17: export type VxeGlobalTranslate = (key: string, args?: any) => string;",
          "18: export type VxeGlobalUse = (plugin: VXETablePluginObject, ...options: any[]) => VXETableCore;",
          "21: export const interceptor: VxeGlobalInterceptor",
          "22: export const renderer: VxeGlobalRenderer",
          "23: export const commands: VxeGlobalCommands",
          "",
          "[Removed Lines]",
          "20: export const setup: VxeGlobalConfigMethod",
          "",
          "[Added Lines]",
          "20: export const config: VxeGlobalConfigMethod",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "31: export const _t: VxeGlobalTranslate",
          "32: export const use: VxeGlobalUse",
          "34: export interface VXETablePluginObject {",
          "35:   install(vxetable: VXETableCore, ...options: any[]): void;",
          "36:   [key: string]: any;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: export const setup: VxeGlobalConfigMethod",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "41: export const v: VXETableVersion",
          "43: export interface VXETableCore {",
          "",
          "[Removed Lines]",
          "48:   v: VXETableVersion;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "56:   setup: VxeGlobalConfigMethod;",
          "",
          "[Added Lines]",
          "57:   config: VxeGlobalConfigMethod;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "106:   t: VxeGlobalI18n;",
          "107:   _t: VxeGlobalTranslate;",
          "108: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:   v: VXETableVersion;",
          "119:   setup: VxeGlobalConfigMethod;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "118: export * from './formats'",
          "119: export * from './menus'",
          "120: export * from './validators'",
          "123: export default VXETable",
          "",
          "[Removed Lines]",
          "121: export * from './setup'",
          "",
          "[Added Lines]",
          "133: export * from './config'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf60d513e42ec044df087eb7205a2ceb261ef6df",
      "candidate_info": {
        "commit_hash": "cf60d513e42ec044df087eb7205a2ceb261ef6df",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/cf60d513e42ec044df087eb7205a2ceb261ef6df",
        "files": [
          "package.json",
          "packages/filter/src/panel.js",
          "packages/table/src/cell.js"
        ],
        "message": "\u589e\u52a0\u53c2\u6570 filter-config.confirmButtonText\u3001resetButtonText",
        "before_after_code_files": [
          "packages/filter/src/panel.js||packages/filter/src/panel.js",
          "packages/table/src/cell.js||packages/table/src/cell.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/filter/src/panel.js||packages/filter/src/panel.js": [
          "File: packages/filter/src/panel.js -> packages/filter/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:       ]",
          "117:     },",
          "118:     renderFooter (h) {",
          "120:       const { column, multiple } = filterStore",
          "121:       const filterRender = column.filterRender",
          "122:       const compConf = filterRender ? VXETable.renderer.get(filterRender.name) : null",
          "",
          "[Removed Lines]",
          "119:       const { hasCheckOption, filterStore } = this",
          "",
          "[Added Lines]",
          "119:       const { $parent: $xetable, hasCheckOption, filterStore } = this",
          "120:       const { filterOpts } = $xetable",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:             on: {",
          "136:               click: this.confirmFilter",
          "137:             }",
          "139:           h('button', {",
          "140:             on: {",
          "141:               click: this.resetFilter",
          "142:             }",
          "144:         ])",
          "145:       ] : []",
          "146:     },",
          "",
          "[Removed Lines]",
          "138:           }, GlobalConfig.i18n('vxe.table.confirmFilter')),",
          "143:           }, GlobalConfig.i18n('vxe.table.resetFilter'))",
          "",
          "[Added Lines]",
          "139:           }, filterOpts.confirmButtonText || GlobalConfig.i18n('vxe.table.confirmFilter')),",
          "144:           }, filterOpts.resetButtonText || GlobalConfig.i18n('vxe.table.resetFilter'))",
          "",
          "---------------"
        ],
        "packages/table/src/cell.js||packages/table/src/cell.js": [
          "File: packages/table/src/cell.js -> packages/table/src/cell.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import { getRowid, getColumnConfig } from './util'",
          "7: import { getSlotVNs } from '../../tools/vn'",
          "10:   const { $table, column } = params",
          "11:   const titlePrefix = column.titlePrefix || column.titleHelp",
          "12:   return titlePrefix ? [",
          "",
          "[Removed Lines]",
          "9: function renderHelpIcon (h, params) {",
          "",
          "[Added Lines]",
          "9: function renderTitlePrefixIcon (h, params) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     return renderTitleContent(h, params, UtilTools.formatText(column.getTitle(), 1))",
          "160:   },",
          "161:   renderDefaultHeader (h, params) {",
          "163:   },",
          "164:   renderDefaultCell (h, params) {",
          "165:     const { $table, row, column } = params",
          "",
          "[Removed Lines]",
          "162:     return renderHelpIcon(h, params).concat(Cell.renderHeaderTitle(h, params))",
          "",
          "[Added Lines]",
          "162:     return renderTitlePrefixIcon(h, params).concat(Cell.renderHeaderTitle(h, params))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31fc97decc6277d7bbae97de77b22d79af05b867",
      "candidate_info": {
        "commit_hash": "31fc97decc6277d7bbae97de77b22d79af05b867",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/31fc97decc6277d7bbae97de77b22d79af05b867",
        "files": [
          "packages/custom/src/panel.js",
          "packages/table/src/table.js",
          "styles/base/common.scss",
          "styles/button.scss",
          "styles/custom.scss",
          "styles/helpers/mixin.scss",
          "styles/input.scss",
          "styles/modal.scss",
          "styles/select.scss",
          "styles/table.scss"
        ],
        "message": "fix style",
        "before_after_code_files": [
          "packages/custom/src/panel.js||packages/custom/src/panel.js",
          "packages/table/src/table.js||packages/table/src/table.js",
          "styles/base/common.scss||styles/base/common.scss",
          "styles/button.scss||styles/button.scss",
          "styles/custom.scss||styles/custom.scss",
          "styles/helpers/mixin.scss||styles/helpers/mixin.scss",
          "styles/input.scss||styles/input.scss",
          "styles/modal.scss||styles/modal.scss",
          "styles/select.scss||styles/select.scss",
          "styles/table.scss||styles/table.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/custom/src/panel.js||packages/custom/src/panel.js": [
          "File: packages/custom/src/panel.js -> packages/custom/src/panel.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "538:       if (prevDropTrEl) {",
          "540:         if (prevDropTrEl !== trEl) {",
          "542:           const colid = trEl.getAttribute('colid')",
          "543:           const column = $xetable.getColumnById(colid)",
          "544:           if (!column) {",
          "",
          "[Removed Lines]",
          "541:           const dragOffset = prevDropTrEl.getAttribute('dragoffset')",
          "",
          "[Added Lines]",
          "541:           const dragOffset = prevDropTrEl.getAttribute('drag-pos')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:           customColumnList.splice(tcIndex + (dragOffset === 'bottom' ? 1 : 0), 0, column)",
          "558:         }",
          "559:         prevDropTrEl.draggable = false",
          "561:         removeClass(prevDropTrEl, 'active--drag-target')",
          "562:       }",
          "563:       this.dragColumn = null",
          "564:       trEl.draggable = false",
          "566:       if (dragHintEl) {",
          "567:         dragHintEl.style.display = ''",
          "568:       }",
          "",
          "[Removed Lines]",
          "560:         prevDropTrEl.removeAttribute('dragoffset')",
          "565:       trEl.removeAttribute('dragoffset')",
          "",
          "[Added Lines]",
          "560:         prevDropTrEl.removeAttribute('drag-pos')",
          "565:       trEl.removeAttribute('drag-pos')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "587:         const offsetY = evnt.clientY - trEl.getBoundingClientRect().y",
          "588:         const dragOffset = offsetY < trEl.clientHeight / 2 ? 'top' : 'bottom'",
          "589:         addClass(trEl, 'active--drag-target')",
          "591:         this.prevDropTrEl = trEl",
          "592:       }",
          "593:       updateDropHint(this, evnt)",
          "",
          "[Removed Lines]",
          "590:         trEl.setAttribute('dragoffset', dragOffset)",
          "",
          "[Added Lines]",
          "590:         trEl.setAttribute('drag-pos', dragOffset)",
          "",
          "---------------"
        ],
        "packages/table/src/table.js||packages/table/src/table.js": [
          "File: packages/table/src/table.js -> packages/table/src/table.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1054:     const { leftList, rightList } = columnStore",
          "1055:     return h('div', {",
          "1056:       class: ['vxe-table', 'vxe-table--render-default', `tid_${tId}`, vSize ? `size--${vSize}` : '', `border--${tableBorder}`, {",
          "1058:         'vxe-editable': !!editConfig,",
          "1059:         'old-cell-valid': editRules && GlobalConfig.cellVaildMode === 'obsolete',",
          "1060:         'cell--highlight': highlightCell,",
          "",
          "[Removed Lines]",
          "1057:         [`vaild-msg--${validOpts.msgMode}`]: !!editRules,",
          "",
          "[Added Lines]",
          "1057:         [`valid-msg--${validOpts.msgMode}`]: !!editRules,",
          "",
          "---------------"
        ],
        "styles/base/common.scss||styles/base/common.scss": [
          "File: styles/base/common.scss -> styles/base/common.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:   .vxe-filter--btn {",
          "66:     &:before,",
          "67:     &:after {",
          "69:     }",
          "70:   }",
          "71:   .vxe-input--wrapper {",
          "72:     .vxe-input {",
          "74:     }",
          "75:   }",
          "76:   .vxe-table--expand-btn,",
          "77:   .vxe-tree--node-btn {",
          "79:   }",
          "80:   .vxe-checkbox,",
          "81:   .vxe-radio {",
          "82:     > input {",
          "83:       &:checked+span {",
          "85:       }",
          "86:     }",
          "87:   }",
          "",
          "[Removed Lines]",
          "68:       @include animatTransition(border);",
          "73:       @include animatTransition(border);",
          "78:     @include animatTransition(transform);",
          "84:         @include animatTransition(background-color);",
          "",
          "[Added Lines]",
          "68:       @include createAnimationTransition(border);",
          "73:       @include createAnimationTransition(border);",
          "78:     @include createAnimationTransition(transform);",
          "84:         @include createAnimationTransition(background-color);",
          "",
          "---------------"
        ],
        "styles/button.scss||styles/button.scss": [
          "File: styles/button.scss -> styles/button.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:   white-space: nowrap;",
          "67:   user-select: none;",
          "68:   appearance: none;",
          "70:   &:not(.is--disabled) {",
          "71:     color: $vxe-font-color;",
          "72:     cursor: pointer;",
          "",
          "[Removed Lines]",
          "69:   @include animatTransition(border, .2s);",
          "",
          "[Added Lines]",
          "69:   @include createAnimationTransition(border, .2s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:   display: inline-block;",
          "307:   font-size: 12px;",
          "308:   margin-left: 4px;",
          "310: }",
          "312: .vxe-button--dropdown-panel {",
          "",
          "[Removed Lines]",
          "309:   @include animatTransition(transform, .2s);",
          "",
          "[Added Lines]",
          "309:   @include createAnimationTransition(transform, .2s);",
          "",
          "---------------"
        ],
        "styles/custom.scss||styles/custom.scss": [
          "File: styles/custom.scss -> styles/custom.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "206: .vxe-table-custom-popup--row {",
          "207:   &.active--drag-target {",
          "209:       .vxe-table-custom-popup--column-item {",
          "210:         &::after {",
          "211:           display: block;",
          "",
          "[Removed Lines]",
          "208:     &[dragoffset=\"top\"] {",
          "",
          "[Added Lines]",
          "208:     &[drag-pos=\"top\"] {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "213:         }",
          "214:       }",
          "215:     }",
          "217:       .vxe-table-custom-popup--column-item {",
          "218:         &::after {",
          "219:           display: block;",
          "",
          "[Removed Lines]",
          "216:     &[dragoffset=\"bottom\"] {",
          "",
          "[Added Lines]",
          "216:     &[drag-pos=\"bottom\"] {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "223:     }",
          "224:   }",
          "225:   &:first-child {",
          "227:       .vxe-table-custom-popup--column-item {",
          "228:         &::after {",
          "229:           top: 0;",
          "",
          "[Removed Lines]",
          "226:     &[dragoffset=\"top\"] {",
          "",
          "[Added Lines]",
          "226:     &[drag-pos=\"top\"] {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "232:     }",
          "233:   }",
          "234:   &:last-child {",
          "236:       .vxe-table-custom-popup--column-item {",
          "237:         &::after {",
          "238:           bottom: 0;",
          "",
          "[Removed Lines]",
          "235:     &[dragoffset=\"bottom\"] {",
          "",
          "[Added Lines]",
          "235:     &[drag-pos=\"bottom\"] {",
          "",
          "---------------"
        ],
        "styles/helpers/mixin.scss||styles/helpers/mixin.scss": [
          "File: styles/helpers/mixin.scss -> styles/helpers/mixin.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   transition: $property $duration $func;",
          "3: }",
          "",
          "[Removed Lines]",
          "1: @mixin animatTransition ($property, $duration: .1s, $func: ease-in-out) {",
          "",
          "[Added Lines]",
          "1: @mixin createAnimationTransition ($property, $duration: .1s, $func: ease-in-out) {",
          "",
          "---------------"
        ],
        "styles/input.scss||styles/input.scss": [
          "File: styles/input.scss -> styles/input.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:     align-items: center;",
          "273:     justify-content: center;",
          "274:     .vxe-input--panel-icon {",
          "276:     }",
          "277:   }",
          "",
          "[Removed Lines]",
          "275:       @include animatTransition(transform, .2s);",
          "",
          "[Added Lines]",
          "275:       @include createAnimationTransition(transform, .2s);",
          "",
          "---------------"
        ],
        "styles/modal.scss||styles/modal.scss": [
          "File: styles/modal.scss -> styles/modal.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   &.is--animat {",
          "83:     &.is--mask {",
          "84:       &:before {",
          "86:       }",
          "87:     }",
          "88:     &.type--message {",
          "89:       .vxe-modal--box {",
          "90:         &:not(.is--drag) {",
          "92:         }",
          "93:       }",
          "94:     }",
          "",
          "[Removed Lines]",
          "85:         @include animatTransition(background-color, .2s);",
          "91:           @include animatTransition(all, .4s, ease-out);",
          "",
          "[Added Lines]",
          "85:         @include createAnimationTransition(background-color, .2s);",
          "91:           @include createAnimationTransition(all, .4s, ease-out);",
          "",
          "---------------"
        ],
        "styles/select.scss||styles/select.scss": [
          "File: styles/select.scss -> styles/select.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     width: 100%;",
          "31:     .vxe-input--suffix-icon {",
          "32:       display: inline-block;",
          "34:     }",
          "35:   }",
          "36:   &.is--active {",
          "",
          "[Removed Lines]",
          "33:       @include animatTransition(transform, .2s);",
          "",
          "[Added Lines]",
          "33:       @include createAnimationTransition(transform, .2s);",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1212:     }",
          "1213:   }",
          "1215:     .vxe-body--row {",
          "1216:       &:last-child {",
          "1217:         .vxe-cell--valid-error-hint {",
          "",
          "[Removed Lines]",
          "1214:   &.vaild-msg--single {",
          "",
          "[Added Lines]",
          "1214:   &.valid-msg--single {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1225:       }",
          "1226:     }",
          "1227:   }",
          "1229:     .vxe-body--row {",
          "1230:       &:last-child {",
          "1231:         .vxe-cell--valid-error-hint {",
          "",
          "[Removed Lines]",
          "1228:   &.vaild-msg--full {",
          "",
          "[Added Lines]",
          "1228:   &.valid-msg--full {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "870d453a7309bd41dd814edb34126fa621117d72",
      "candidate_info": {
        "commit_hash": "870d453a7309bd41dd814edb34126fa621117d72",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/870d453a7309bd41dd814edb34126fa621117d72",
        "files": [
          "README.md",
          "package.json",
          "packages/table/src/cell.js",
          "packages/table/src/methods.js",
          "styles/cssvar.scss",
          "styles/modules.scss",
          "types/table.d.ts"
        ],
        "message": "\u4fee\u590d\u6e32\u67d3\u903b\u8f91",
        "before_after_code_files": [
          "packages/table/src/cell.js||packages/table/src/cell.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "styles/cssvar.scss||styles/cssvar.scss",
          "styles/modules.scss||styles/modules.scss",
          "types/table.d.ts||types/table.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/cell.js||packages/table/src/cell.js": [
          "File: packages/table/src/cell.js -> packages/table/src/cell.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     }) : h('span', {",
          "66:       class: 'vxe-cell--title',",
          "67:       on: ons",
          "69:   ]",
          "70: }",
          "",
          "[Removed Lines]",
          "68:     }, content)",
          "",
          "[Added Lines]",
          "68:     }, getSlotVNs(content))",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: const resizableStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_WIDTH'",
          "19: const visibleStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_VISIBLE'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: const fixedStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_FIXED'",
          "21: const orderStorageKey = 'VXE_TABLE_CUSTOM_COLUMN_ORDER'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1488:     const { id, collectColumn, customConfig, customOpts } = this",
          "1489:     const { storage } = customOpts",
          "1490:     const isAllStorage = customOpts.storage === true",
          "1494:       const customMap = {}",
          "1495:       if (!id) {",
          "1496:         errLog('vxe.error.reqProp', ['id'])",
          "1497:         return",
          "1498:       }",
          "1500:         const columnWidthStorage = getCustomStorageMap(resizableStorageKey)[id]",
          "1501:         if (columnWidthStorage) {",
          "1502:           XEUtils.each(columnWidthStorage, (resizeWidth, field) => {",
          "",
          "[Removed Lines]",
          "1491:     const isResizable = isAllStorage || (storage && storage.resizable)",
          "1492:     const isVisible = isAllStorage || (storage && storage.visible)",
          "1493:     if (customConfig && (isResizable || isVisible)) {",
          "1499:       if (isResizable) {",
          "",
          "[Added Lines]",
          "1493:     const isCustomResizable = isAllStorage || (storage && storage.resizable)",
          "1494:     const isCustomVisible = isAllStorage || (storage && storage.visible)",
          "1495:     const isCustomFixed = storage === true || (storage && storage.fixed)",
          "1496:     const isCustomOrder = storage === true || (storage && storage.order)",
          "1497:     if (customConfig && (isCustomResizable || isCustomVisible || isCustomFixed || isCustomOrder)) {",
          "1503:       if (isCustomResizable) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1504:           })",
          "1505:         }",
          "1506:       }",
          "1508:         const columnVisibleStorage = getCustomStorageMap(visibleStorageKey)[id]",
          "1509:         if (columnVisibleStorage) {",
          "1510:           const colVisibles = columnVisibleStorage.split('|')",
          "",
          "[Removed Lines]",
          "1507:       if (isVisible) {",
          "",
          "[Added Lines]",
          "1512:       if (isCustomFixed) {",
          "1513:         const columnFixedStorage = getCustomStorageMap(fixedStorageKey)[id]",
          "1514:         if (columnFixedStorage) {",
          "1516:         }",
          "1517:       }",
          "1519:       if (isCustomOrder) {",
          "1520:         const columnOrderStorage = getCustomStorageMap(orderStorageKey)[id]",
          "1521:         if (columnOrderStorage) {",
          "1523:         }",
          "1524:       }",
          "1525:       if (isCustomVisible) {",
          "",
          "---------------"
        ],
        "styles/cssvar.scss||styles/cssvar.scss": [
          "File: styles/cssvar.scss -> styles/cssvar.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: :root {",
          "5:   --vxe-font-family: #{$vxe-font-family};",
          "6:   --vxe-font-color: #{$vxe-font-color};",
          "7:   --vxe-font-size: #{$vxe-font-size};",
          "8:   --vxe-font-size-medium: #{$vxe-font-size-medium};",
          "9:   --vxe-font-size-small: #{$vxe-font-size-small};",
          "10:   --vxe-font-size-mini: #{$vxe-font-size-mini};",
          "13:   --vxe-border-radius: #{$vxe-border-radius};",
          "16:   --vxe-icon-font-family: #{$vxe-icon-font-family};",
          "17:   --vxe-icon-background-color: #{$vxe-icon-background-color};",
          "20:   --vxe-primary-color: #{$vxe-primary-color};",
          "21:   --vxe-success-color: #{$vxe-success-color};",
          "22:   --vxe-info-color: #{$vxe-info-color};",
          "23:   --vxe-warning-color: #{$vxe-warning-color};",
          "24:   --vxe-danger-color: #{$vxe-danger-color};",
          "25:   --vxe-disabled-color: #{$vxe-disabled-color};",
          "26:   --vxe-primary-disabled-color: #{$vxe-primary-disabled-color};",
          "29:   --vxe-input-border-color: #{$vxe-input-border-color};",
          "30:   --vxe-input-disabled-color: #{$vxe-input-disabled-color};",
          "31:   --vxe-input-disabled-background-color: #{$vxe-input-disabled-background-color};",
          "32:   --vxe-input-placeholder-color: #{$vxe-input-placeholder-color};",
          "35:   --vxe-table-popup-border-color: #{$vxe-table-popup-border-color};",
          "38:   --vxe-table-font-color: #{$vxe-table-font-color};",
          "39:   --vxe-table-header-font-color: #{$vxe-table-header-font-color};",
          "40:   --vxe-table-footer-font-color: #{$vxe-table-footer-font-color};",
          "41:   --vxe-table-border-radius: #{$vxe-table-border-radius};",
          "42:   --vxe-table-border-width: #{$vxe-table-border-width};",
          "43:   --vxe-table-border-color: #{$vxe-table-border-color};",
          "44:   --vxe-table-resizable-line-color: #{$vxe-table-resizable-line-color};",
          "45:   --vxe-table-resizable-drag-line-color: #{$vxe-table-resizable-drag-line-color};",
          "46:   --vxe-table-header-background-color: #{$vxe-table-header-background-color};",
          "47:   --vxe-table-body-background-color: #{$vxe-table-body-background-color};",
          "48:   --vxe-table-footer-background-color: #{$vxe-table-footer-background-color};",
          "49:   --vxe-table-tree-node-line-color: #{$vxe-table-tree-node-line-color};",
          "50:   --vxe-table-tree-node-line-style: #{$vxe-table-tree-node-line-style};",
          "51:   --vxe-table-header-font-weight: #{$vxe-table-header-font-weight};",
          "53:   --vxe-table-row-height-default: #{$vxe-table-row-height-default};",
          "54:   --vxe-table-row-height-medium: #{$vxe-table-row-height-medium};",
          "55:   --vxe-table-row-height-small: #{$vxe-table-row-height-small};",
          "56:   --vxe-table-row-height-mini: #{$vxe-table-row-height-mini};",
          "57:   --vxe-table-row-line-height: #{$vxe-table-row-line-height};",
          "58:   --vxe-table-row-hover-background-color: #{$vxe-table-row-hover-background-color};",
          "59:   --vxe-table-row-striped-background-color: #{$vxe-table-row-striped-background-color};",
          "60:   --vxe-table-row-hover-striped-background-color: #{$vxe-table-row-hover-striped-background-color};",
          "61:   --vxe-table-row-radio-checked-background-color: #{$vxe-table-row-radio-checked-background-color};",
          "62:   --vxe-table-row-hover-radio-checked-background-color: #{$vxe-table-row-hover-radio-checked-background-color};",
          "63:   --vxe-table-row-checkbox-checked-background-color: #{$vxe-table-row-checkbox-checked-background-color};",
          "64:   --vxe-table-row-hover-checkbox-checked-background-color: #{$vxe-table-row-hover-checkbox-checked-background-color};",
          "65:   --vxe-table-row-current-background-color: #{$vxe-table-row-current-background-color};",
          "66:   --vxe-table-row-hover-current-background-color: #{$vxe-table-row-hover-current-background-color};",
          "68:   --vxe-table-column-padding-default: #{$vxe-table-column-padding-default};",
          "69:   --vxe-table-column-padding-medium: #{$vxe-table-column-padding-medium};",
          "70:   --vxe-table-column-padding-small: #{$vxe-table-column-padding-small};",
          "71:   --vxe-table-column-padding-mini: #{$vxe-table-column-padding-mini};",
          "72:   --vxe-table-column-hover-background-color: #{$vxe-table-column-hover-background-color};",
          "73:   --vxe-table-column-current-background-color: #{$vxe-table-column-current-background-color};",
          "74:   --vxe-table-column-icon-border-color: #{$vxe-table-column-icon-border-color};",
          "75:   --vxe-table-column-icon-border-hover-color: #{$vxe-table-column-icon-border-hover-color};",
          "77:   --vxe-table-cell-placeholder-color: #{$vxe-table-cell-placeholder-color};",
          "78:   --vxe-table-cell-padding-left: #{$vxe-table-cell-padding-left};",
          "79:   --vxe-table-cell-padding-right: #{$vxe-table-cell-padding-right};",
          "80:   --vxe-table-cell-input-height-default: #{$vxe-table-cell-input-height-default};",
          "81:   --vxe-table-cell-input-height-medium: #{$vxe-table-cell-input-height-medium};",
          "82:   --vxe-table-cell-input-height-small: #{$vxe-table-cell-input-height-small};",
          "83:   --vxe-table-cell-input-height-mini: #{$vxe-table-cell-input-height-mini};",
          "84:   --vxe-table-cell-dirty-width: #{$vxe-table-cell-dirty-width};",
          "85:   --vxe-table-cell-dirty-update-color: #{$vxe-table-cell-dirty-update-color};",
          "86:   --vxe-table-cell-dirty-insert-color: #{$vxe-table-cell-dirty-insert-color};",
          "87:   --vxe-table-cell-area-border-color: #{$vxe-table-cell-area-border-color};",
          "88:   --vxe-table-cell-area-border-width: #{$vxe-table-cell-area-border-width};",
          "89:   --vxe-table-cell-main-area-extension-border-color: #{$vxe-table-cell-main-area-extension-border-color};",
          "90:   --vxe-table-cell-main-area-extension-background-color: #{$vxe-table-cell-main-area-extension-background-color};",
          "91:   --vxe-table-cell-extend-area-border-width: #{$vxe-table-cell-extend-area-border-width};",
          "92:   --vxe-table-cell-copy-area-border-width: #{$vxe-table-cell-copy-area-border-width};",
          "93:   --vxe-table-cell-active-area-border-width: #{$vxe-table-cell-active-area-border-width};",
          "94:   --vxe-table-cell-copy-area-border-color: #{$vxe-table-cell-copy-area-border-color};",
          "95:   --vxe-table-cell-extend-area-border-color: #{$vxe-table-cell-extend-area-border-color};",
          "96:   --vxe-table-cell-active-area-border-color: #{$vxe-table-cell-active-area-border-color};",
          "97:   --vxe-table-cell-area-background-color: #{$vxe-table-cell-area-background-color};",
          "99:   --vxe-table-checkbox-range-border-width: #{$vxe-table-checkbox-range-border-width};",
          "100:   --vxe-table-checkbox-range-border-color: #{$vxe-table-checkbox-range-border-color};",
          "101:   --vxe-table-checkbox-range-background-color: #{$vxe-table-checkbox-range-background-color};",
          "103:   --vxe-table-fixed-left-scrolling-box-shadow: #{$vxe-table-fixed-left-scrolling-box-shadow};",
          "104:   --vxe-table-fixed-right-scrolling-box-shadow: #{$vxe-table-fixed-right-scrolling-box-shadow};",
          "107:   --vxe-table-filter-panel-background-color: #{$vxe-table-filter-panel-background-color};",
          "110:   --vxe-table-menu-item-width: #{$vxe-table-menu-item-width};",
          "111:   --vxe-table-menu-background-color: #{$vxe-table-menu-background-color};",
          "114:   --vxe-loading-color: #{$vxe-loading-color};",
          "115:   --vxe-loading-background-color: #{$vxe-loading-background-color};",
          "116:   --vxe-loading-z-index: #{$vxe-loading-z-index};",
          "119:   --vxe-table-validate-error-color: #{$vxe-table-validate-error-color};",
          "120:   --vxe-table-validate-tooltip-error-color: #{$vxe-table-validate-tooltip-error-color};",
          "121:   --vxe-table-validate-tooltip-error-background-color: #{$vxe-table-validate-tooltip-error-background-color};",
          "124:   --vxe-grid-maximize-background-color: #{$vxe-grid-maximize-background-color};",
          "127:   --vxe-toolbar-background-color: #{$vxe-toolbar-background-color};",
          "128:   --vxe-toolbar-custom-active-background-color: #{$vxe-toolbar-custom-active-background-color};",
          "129:   --vxe-toolbar-panel-background-color: #{$vxe-toolbar-panel-background-color};",
          "132:   --vxe-tooltip-dark-color: #{$vxe-tooltip-dark-color};",
          "133:   --vxe-tooltip-dark-background-color: #{$vxe-tooltip-dark-background-color};",
          "134:   --vxe-tooltip-light-background-color: #{$vxe-tooltip-light-background-color};",
          "135:   --vxe-tooltip-validate-error-color: #{$vxe-tooltip-validate-error-color};",
          "136:   --vxe-tooltip-validate-error-background-color: #{$vxe-tooltip-validate-error-background-color};",
          "139:   --vxe-pager-background-color: #{$vxe-pager-background-color};",
          "140:   --vxe-pager-perfect-background-color: #{$vxe-pager-perfect-background-color};",
          "141:   --vxe-pager-perfect-button-background-color: #{$vxe-pager-perfect-button-background-color};",
          "144:   --vxe-modal-header-background-color: #{$vxe-modal-header-background-color};",
          "145:   --vxe-modal-body-background-color: #{$vxe-modal-body-background-color};",
          "146:   --vxe-modal-border-color: #{$vxe-modal-border-color};",
          "149:   --vxe-checkbox-font-size-default: #{$vxe-checkbox-font-size-default};",
          "150:   --vxe-checkbox-font-size-medium: #{$vxe-checkbox-font-size-medium};",
          "151:   --vxe-checkbox-font-size-small: #{$vxe-checkbox-font-size-small};",
          "152:   --vxe-checkbox-font-size-mini: #{$vxe-checkbox-font-size-mini};",
          "153:   --vxe-checkbox-checked-width: #{$vxe-checkbox-checked-width};",
          "154:   --vxe-checkbox-checked-height: #{$vxe-checkbox-checked-height};",
          "155:   --vxe-checkbox-indeterminate-width: #{$vxe-checkbox-indeterminate-width};",
          "156:   --vxe-checkbox-indeterminate-height: #{$vxe-checkbox-indeterminate-height};",
          "157:   --vxe-checkbox-border-width: #{$vxe-checkbox-border-width};",
          "158:   --vxe-checkbox-border-radius: #{$vxe-checkbox-border-radius};",
          "159:   --vxe-checkbox-icon-background-color: #{$vxe-checkbox-icon-background-color};",
          "160:   --vxe-checkbox-checked-icon-border-color: #{$vxe-checkbox-checked-icon-border-color};",
          "161:   --vxe-checkbox-indeterminate-icon-background-color: #{$vxe-checkbox-indeterminate-icon-background-color};",
          "164:   --vxe-radio-font-size-default: #{$vxe-radio-font-size-default};",
          "165:   --vxe-radio-font-size-medium: #{$vxe-radio-font-size-medium};",
          "166:   --vxe-radio-font-size-small: #{$vxe-radio-font-size-small};",
          "167:   --vxe-radio-font-size-mini: #{$vxe-radio-font-size-mini};",
          "168:   --vxe-radio-border-width: #{$vxe-radio-border-width};",
          "169:   --vxe-radio-icon-background-color: #{$vxe-radio-icon-background-color};",
          "170:   --vxe-radio-checked-icon-background-color: #{$vxe-radio-checked-icon-background-color};",
          "171:   --vxe-radio-indeterminate-icon-background-color: #{$vxe-radio-indeterminate-icon-background-color};",
          "172:   --vxe-radio-button-default-background-color: #{$vxe-radio-button-default-background-color};",
          "175:   --vxe-button-max-width: #{$vxe-button-max-width};",
          "176:   --vxe-button-default-background-color: #{$vxe-button-default-background-color};",
          "177:   --vxe-button-dropdown-panel-background-color: #{$vxe-button-dropdown-panel-background-color};",
          "178:   --vxe-button-height-default: #{$vxe-button-height-default};",
          "179:   --vxe-button-height-medium: #{$vxe-button-height-medium};",
          "180:   --vxe-button-height-small: #{$vxe-button-height-small};",
          "181:   --vxe-button-height-mini: #{$vxe-button-height-mini};",
          "182:   --vxe-button-round-border-radius-default: #{$vxe-button-round-border-radius-default};",
          "183:   --vxe-button-round-border-radius-medium: #{$vxe-button-round-border-radius-medium};",
          "184:   --vxe-button-round-border-radius-small: #{$vxe-button-round-border-radius-small};",
          "185:   --vxe-button-round-border-radius-mini: #{$vxe-button-round-border-radius-mini};",
          "188:   --vxe-input-background-color: #{$vxe-input-background-color};",
          "189:   --vxe-input-panel-background-color: #{$vxe-input-panel-background-color};",
          "190:   --vxe-input-number-disabled-color: #{$vxe-input-number-disabled-color};",
          "191:   --vxe-input-date-festival-color: #{$vxe-input-date-festival-color};",
          "192:   --vxe-input-date-festival-important-color: #{$vxe-input-date-festival-important-color};",
          "193:   --vxe-input-date-notice-background-color: #{$vxe-input-date-notice-background-color};",
          "194:   --vxe-input-date-picker-hover-background-color: #{$vxe-input-date-picker-hover-background-color};",
          "195:   --vxe-input-date-picker-selected-color: #{$vxe-input-date-picker-selected-color};",
          "196:   --vxe-input-date-time-confirm-button-color: #{$vxe-input-date-time-confirm-button-color};",
          "197:   --vxe-input-date-picker-festival-selected-color: #{$vxe-input-date-picker-festival-selected-color};",
          "198:   --vxe-input-date-picker-notice-selected-background-color: #{$vxe-input-date-picker-notice-selected-background-color};",
          "199:   --vxe-input-date-extra-color: #{$vxe-input-date-extra-color};",
          "200:   --vxe-input-date-extra-important-color: #{$vxe-input-date-extra-important-color};",
          "201:   --vxe-input-date-title-height-default: #{$vxe-input-date-title-height-default};",
          "202:   --vxe-input-date-title-height-medium: #{$vxe-input-date-title-height-medium};",
          "203:   --vxe-input-date-title-height-small: #{$vxe-input-date-title-height-small};",
          "204:   --vxe-input-date-title-height-mini: #{$vxe-input-date-title-height-mini};",
          "205:   --vxe-input-date-time-week-row-height-default: #{$vxe-input-date-time-week-row-height-default};",
          "206:   --vxe-input-date-time-week-row-height-medium: #{$vxe-input-date-time-week-row-height-medium};",
          "207:   --vxe-input-date-time-week-row-height-small: #{$vxe-input-date-time-week-row-height-small};",
          "208:   --vxe-input-date-time-week-row-height-mini: #{$vxe-input-date-time-week-row-height-mini};",
          "209:   --vxe-input-date-month-year-row-height-default: #{$vxe-input-date-month-year-row-height-default};",
          "210:   --vxe-input-date-month-year-row-height-medium: #{$vxe-input-date-month-year-row-height-medium};",
          "211:   --vxe-input-date-month-year-row-height-small: #{$vxe-input-date-month-year-row-height-small};",
          "212:   --vxe-input-date-month-year-row-height-mini: #{$vxe-input-date-month-year-row-height-mini};",
          "213:   --vxe-input-date-quarter-row-height-default: #{$vxe-input-date-quarter-row-height-default};",
          "214:   --vxe-input-date-quarter-row-height-medium: #{$vxe-input-date-quarter-row-height-medium};",
          "215:   --vxe-input-date-quarter-row-height-small: #{$vxe-input-date-quarter-row-height-small};",
          "216:   --vxe-input-date-quarter-row-height-mini: #{$vxe-input-date-quarter-row-height-mini};",
          "217:   --vxe-input-height-default: #{$vxe-input-height-default};",
          "218:   --vxe-input-height-medium: #{$vxe-input-height-medium};",
          "219:   --vxe-input-height-small: #{$vxe-input-height-small};",
          "220:   --vxe-input-height-mini: #{$vxe-input-height-mini};",
          "223:   --vxe-textarea-line-height: #{$vxe-textarea-line-height};",
          "224:   --vxe-textarea-background-color: #{$vxe-textarea-background-color};",
          "225:   --vxe-textarea-count-color: #{$vxe-textarea-count-color};",
          "226:   --vxe-textarea-count-background-color: #{$vxe-textarea-count-background-color};",
          "227:   --vxe-textarea-count-error-color: #{$vxe-textarea-count-error-color};",
          "230:   --vxe-form-item-min-height-default: #{$vxe-form-item-min-height-default};",
          "231:   --vxe-form-item-min-height-medium: #{$vxe-form-item-min-height-medium};",
          "232:   --vxe-form-item-min-height-small: #{$vxe-form-item-min-height-small};",
          "233:   --vxe-form-item-min-height-mini: #{$vxe-form-item-min-height-mini};",
          "234:   --vxe-form-background-color: #{$vxe-form-background-color};",
          "235:   --vxe-form-validate-error-color: #{$vxe-form-validate-error-color};",
          "236:   --vxe-form-validate-error-background-color: #{$vxe-form-validate-error-background-color};",
          "239:   --vxe-select-option-height-default: #{$vxe-select-option-height-default};",
          "240:   --vxe-select-option-height-medium: #{$vxe-select-option-height-medium};",
          "241:   --vxe-select-option-height-small: #{$vxe-select-option-height-small};",
          "242:   --vxe-select-option-height-mini: #{$vxe-select-option-height-mini};",
          "243:   --vxe-select-option-hover-background-color: #{$vxe-select-option-hover-background-color};",
          "244:   --vxe-select-panel-background-color: #{$vxe-select-panel-background-color};",
          "245:   --vxe-select-empty-color: #{$vxe-select-empty-color};",
          "246:   --vxe-optgroup-title-color: #{$vxe-optgroup-title-color};",
          "249:   --vxe-switch-font-color: #{$vxe-switch-font-color};",
          "250:   --vxe-switch-icon-background-color: #{$vxe-switch-icon-background-color};",
          "251:   --vxe-switch-open-background-color: #{$vxe-switch-open-background-color};",
          "252:   --vxe-switch-close-background-color: #{$vxe-switch-close-background-color};",
          "253:   --vxe-switch-disabled-background-color: #{$vxe-switch-disabled-background-color};",
          "256:   --vxe-pulldown-panel-background-color: #{$vxe-pulldown-panel-background-color};",
          "257: }",
          "",
          "---------------"
        ],
        "styles/modules.scss||styles/modules.scss": [
          "File: styles/modules.scss -> styles/modules.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @import './icon.scss';",
          "2: @import './filter.scss';",
          "3: @import './menu.scss';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @import './cssvar.scss';",
          "",
          "---------------"
        ],
        "types/table.d.ts||types/table.d.ts": [
          "File: types/table.d.ts -> types/table.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:   syncResize?: boolean | string | number;",
          "179:   columnConfig?: TableColumnConfig;",
          "181:   seqConfig?: TableSeqConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:   rowConfig?: TableRowConfig;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "468:   resetColumn(options: boolean | { visible?: boolean, resizable?: boolean }): Promise<any>;",
          "",
          "[Added Lines]",
          "483:   resetColumn(options: boolean | {",
          "484:     visible?: boolean",
          "485:     resizable?: boolean",
          "486:     fixed?: boolean",
          "487:     order?: boolean",
          "488:    }): Promise<any>;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1136:   keepSource?: boolean;",
          "1137:   autoResize?: boolean;",
          "1138:   syncResize?: boolean | string | number;",
          "1139:   columnConfig?: TableColumnConfig;",
          "1140:   customConfig?: TableCustomConfig;",
          "1141:   seqConfig?: TableSeqConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1179:   rowConfig?: TableRowConfig;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1179:   [key: string]: any;",
          "1180: }",
          "1185: export interface TableColumnConfig {",
          "1188: }",
          "1189: export type ColumnDefaultConfig = TableColumnConfig",
          "",
          "[Removed Lines]",
          "1186:   width?: number;",
          "1187:   minWidth?: number;",
          "",
          "[Added Lines]",
          "1223: export interface TableRowConfig {",
          "1224:   useKey?: boolean",
          "1225:   keyField?: string",
          "1226:   isCurrent?: boolean",
          "1227:   isHover?: boolean",
          "1228:   height?: number",
          "1229: }",
          "1230: export type RowDefaultConfig = TableRowConfig",
          "1236:   useKey?: boolean",
          "1237:   isCurrent?: boolean",
          "1238:   isHover?: boolean",
          "1239:   resizable?: boolean",
          "1240:   width?: number",
          "1241:   minWidth?: number",
          "1242:   maxWidth?: number",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1195:   storage?: boolean | {",
          "1196:     visible?: boolean;",
          "1197:     resizable?: boolean;",
          "1198:   };",
          "1199:   checkMethod?(params: { column: ColumnInfo }): boolean;",
          "1200: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1253:     fixed?: boolean",
          "1254:     order?: boolean",
          "",
          "---------------"
        ]
      }
    }
  ]
}