{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb8af7b5666e7ed01497a862127011524fc400f5",
      "candidate_info": {
        "commit_hash": "eb8af7b5666e7ed01497a862127011524fc400f5",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/eb8af7b5666e7ed01497a862127011524fc400f5",
        "files": [
          ".changeset/blue-jeans-try.md",
          "packages/graphiql/src/components/GraphiQL.tsx"
        ],
        "message": "feat: allow inserting content before the top bar (#2191)",
        "before_after_code_files": [
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:   onSchemaChange?: (schema: GraphQLSchema) => void;",
          "291: };",
          "293: export type GraphiQLState = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "294:   beforeTopBarContent?: React.ReactElement | null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:         )}",
          "750:         <div className=\"editorWrap\">",
          "751:           <div className=\"topBarWrap\">",
          "752:             <div className=\"topBar\">",
          "753:               {logo}",
          "754:               <ExecuteButton",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "756:             {this.props.beforeTopBarContent}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50eb83dcddbb4c06944566c489309bde154941f7",
      "candidate_info": {
        "commit_hash": "50eb83dcddbb4c06944566c489309bde154941f7",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/50eb83dcddbb4c06944566c489309bde154941f7",
        "files": [
          ".changeset/five-pillows-fail.md",
          ".changeset/tender-impalas-provide.md",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/dialog.css",
          "packages/graphiql-react/src/ui/dialog.tsx",
          "packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/style.css",
          "yarn.lock"
        ],
        "message": "[redesign] add settings dialog (#2595)\n\n* add `Dialog` component to `@graphiql/react`\n\n* add a `clear` method to the `Storage` type\n\n* add success and failure states to `Button` component\n\n* add settings dialog\n\n* make sure to show dialog above editor scrollbars",
        "before_after_code_files": [
          "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/dialog.css||packages/graphiql-react/src/ui/dialog.css",
          "packages/graphiql-react/src/ui/dialog.tsx||packages/graphiql-react/src/ui/dialog.tsx",
          "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/style.css||packages/graphiql/src/style.css",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css": [
          "File: packages/graphiql-react/src/style/root.css -> packages/graphiql-react/src/style/root.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: .graphiql-container,",
          "2: .CodeMirror-info,",
          "5:   --color-pink: #d60690;",
          "6:   --color-purple: #6e6acf;",
          "",
          "[Removed Lines]",
          "3: .CodeMirror-lint-tooltip {",
          "",
          "[Added Lines]",
          "3: .CodeMirror-lint-tooltip,",
          "4: reach-portal {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   --color-orche-background: rgba(211, 127, 0, 0.07);",
          "24:   --color-orche-background-dark: rgba(211, 127, 0, 0.12);",
          "25:   --color-red-background: rgba(248, 91, 48, 0.12);",
          "28:   --font-family: 'Roboto', sans-serif;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   --color-green-background: rgba(43, 171, 124, 0.12);",
          "28:   --color-neutral-background: rgba(59, 75, 104, 0.1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:   --px-12: 12px;",
          "47:   --px-16: 16px;",
          "48:   --px-20: 20px;",
          "51:   --border-radius-2: 2px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:   --px-24: 24px;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67: .graphiql-container,",
          "68: .CodeMirror-info,",
          "69: .CodeMirror-lint-tooltip,",
          "70: .graphiql-container:is(button) {",
          "71:   color: var(--color-neutral-100);",
          "72:   font-family: var(--font-family);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: reach-portal,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css": [
          "File: packages/graphiql-react/src/ui/button.css -> packages/graphiql-react/src/ui/button.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   &:focus {",
          "29:     outline: var(--color-neutral-15) auto 1px;",
          "30:   }",
          "31: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   &.graphiql-button-success {",
          "33:     background-color: var(--color-green-background);",
          "34:   }",
          "35:   &.graphiql-button-error {",
          "36:     background-color: var(--color-red-background);",
          "37:   }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx": [
          "File: packages/graphiql-react/src/ui/button.tsx -> packages/graphiql-react/src/ui/button.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import './button.css';",
          "3: export function UnStyledButton(props: JSX.IntrinsicElements['button']) {",
          "4:   return (",
          "5:     <button",
          "6:       {...props}",
          "8:     />",
          "9:   );",
          "10: }",
          "13:   return (",
          "14:     <button",
          "15:       {...props}",
          "17:     />",
          "18:   );",
          "19: }",
          "",
          "[Removed Lines]",
          "7:       className={`graphiql-un-styled ${props.className || ''}`.trim()}",
          "12: export function Button(props: JSX.IntrinsicElements['button']) {",
          "16:       className={`graphiql-button ${props.className || ''}`.trim()}",
          "",
          "[Added Lines]",
          "1: import { compose } from '../utility/compose';",
          "9:       className={compose('graphiql-un-styled', props.className)}",
          "14: type ButtonProps = { state?: 'success' | 'error' };",
          "16: export function Button(props: ButtonProps & JSX.IntrinsicElements['button']) {",
          "20:       className={compose(",
          "21:         'graphiql-button',",
          "22:         props.state === 'success'",
          "23:           ? 'graphiql-button-success'",
          "24:           : props.state === 'error'",
          "25:           ? 'graphiql-button-error'",
          "26:           : '',",
          "27:         props.className,",
          "28:       )}",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/dialog.css||packages/graphiql-react/src/ui/dialog.css": [
          "File: packages/graphiql-react/src/ui/dialog.css -> packages/graphiql-react/src/ui/dialog.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @import url('@reach/dialog/styles.css');",
          "3: [data-reach-dialog-overlay] {",
          "4:   align-items: center;",
          "5:   background-color: var(--color-neutral-background);",
          "6:   display: flex;",
          "7:   justify-content: center;",
          "13:   z-index: 10;",
          "14: }",
          "16: [data-reach-dialog-content] {",
          "17:   background-color: var(--color-neutral-0);",
          "18:   border-radius: var(--border-radius-12);",
          "19:   box-shadow: var(--box-shadow);",
          "20:   margin: 0;",
          "21:   max-height: 80vh;",
          "22:   max-width: 80vw;",
          "23:   overflow: auto;",
          "24:   padding: 0;",
          "25:   width: unset;",
          "26: }",
          "28: .graphiql-dialog-close > svg {",
          "29:   color: var(--color-neutral-60);",
          "30:   display: block;",
          "31:   height: var(--px-12);",
          "32:   padding: var(--px-12);",
          "33:   width: var(--px-12);",
          "34: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/dialog.tsx||packages/graphiql-react/src/ui/dialog.tsx": [
          "File: packages/graphiql-react/src/ui/dialog.tsx -> packages/graphiql-react/src/ui/dialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Dialog as ReachDialog } from '@reach/dialog';",
          "2: import { VisuallyHidden } from '@reach/visually-hidden';",
          "3: import { ComponentProps } from 'react';",
          "4: import { CloseIcon } from '../icons';",
          "5: import { compose } from '../utility/compose';",
          "6: import { UnStyledButton } from './button';",
          "8: import './dialog.css';",
          "10: export function Dialog(props: ComponentProps<typeof ReachDialog>) {",
          "11:   return <ReachDialog {...props} />;",
          "12: }",
          "14: function DialogClose(props: JSX.IntrinsicElements['button']) {",
          "15:   return (",
          "16:     <UnStyledButton",
          "17:       {...props}",
          "18:       className={compose('graphiql-dialog-close', props.className)}>",
          "19:       <VisuallyHidden>Close dialog</VisuallyHidden>",
          "20:       <CloseIcon />",
          "21:     </UnStyledButton>",
          "22:   );",
          "23: }",
          "25: Dialog.Close = DialogClose;",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts": [
          "File: packages/graphiql-react/src/ui/index.ts -> packages/graphiql-react/src/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: export * from './button';",
          "2: export * from './dropdown';",
          "3: export * from './markdown';",
          "4: export * from './spinner';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: export * from './dialog';",
          "",
          "---------------"
        ],
        "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts": [
          "File: packages/graphiql-toolkit/src/storage/base.ts -> packages/graphiql-toolkit/src/storage/base.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   getItem(key: string): string | null;",
          "3:   removeItem(key: string): void;",
          "4:   setItem(key: string, value: string): void;",
          "5:   length: number;",
          "6: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:   clear(): void;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     return { isQuotaError: quotaError, error };",
          "79:   }",
          "80: }",
          "82: const STORAGE_NAMESPACE = 'graphiql';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:   clear() {",
          "83:     if (this.storage) {",
          "84:       this.storage.clear();",
          "85:     }",
          "86:   }",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx": [
          "File: packages/graphiql/__mocks__/@graphiql/react.tsx -> packages/graphiql/__mocks__/@graphiql/react.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   DeprecatedEnumValueIcon,",
          "26:   DeprecatedFieldIcon,",
          "27:   DeprecationReason,",
          "28:   Directive,",
          "29:   DirectiveIcon,",
          "30:   DocExplorer,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   Dialog,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: } from 'graphql';",
          "24: import {",
          "25:   ChevronDownIcon,",
          "26:   ChevronUpIcon,",
          "27:   CopyIcon,",
          "28:   DocExplorer,",
          "29:   DocsIcon,",
          "30:   EditorContextProvider,",
          "31:   ExecuteButton,",
          "32:   ExecutionContextProvider,",
          "33:   ExecutionContextType,",
          "34:   ExplorerContextProvider,",
          "35:   HeaderEditor,",
          "36:   History,",
          "37:   HistoryContextProvider,",
          "38:   HistoryIcon,",
          "39:   KeyboardShortcutIcon,",
          "40:   MergeIcon,",
          "41:   PlusIcon,",
          "42:   PrettifyIcon,",
          "43:   QueryEditor,",
          "44:   ResponseEditor,",
          "45:   SchemaContextProvider,",
          "46:   SettingsIcon,",
          "47:   Spinner,",
          "48:   StorageContextProvider,",
          "49:   Tab,",
          "50:   Tabs,",
          "51:   ToolbarButton,",
          "52:   UnStyledButton,",
          "53:   useAutoCompleteLeafs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:   Button,",
          "29:   Dialog,",
          "33:   EditorContextType,",
          "38:   ExplorerContextType,",
          "42:   HistoryContextType,",
          "45:   KeyMap,",
          "51:   ResponseTooltipType,",
          "53:   SchemaContextType,",
          "57:   StorageContextType,",
          "60:   TabsState,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:   useStorageContext,",
          "64:   VariableEditor,",
          "65: } from '@graphiql/react';",
          "77: import { ToolbarMenu, ToolbarMenuItem } from './ToolbarMenu';",
          "78: import find from '../utility/find';",
          "",
          "[Removed Lines]",
          "66: import type {",
          "67:   EditorContextType,",
          "68:   ExplorerContextType,",
          "69:   HistoryContextType,",
          "70:   ResponseTooltipType,",
          "71:   SchemaContextType,",
          "72:   StorageContextType,",
          "73:   TabsState,",
          "74:   KeyMap,",
          "75: } from '@graphiql/react';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "613: export type GraphiQLState = {",
          "614:   activeSecondaryEditor: 'variable' | 'header';",
          "615: };",
          "617: class GraphiQLWithContext extends React.Component<",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "615:   showSettings: boolean;",
          "616:   clearStorageStatus: 'success' | 'error' | null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "622:     super(props);",
          "626:   }",
          "628:   render() {",
          "",
          "[Removed Lines]",
          "625:     this.state = { activeSecondaryEditor: 'variable' };",
          "",
          "[Added Lines]",
          "627:     this.state = {",
          "628:       activeSecondaryEditor: 'variable',",
          "629:       showSettings: false,",
          "630:       clearStorageStatus: null,",
          "631:     };",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "735:             <UnStyledButton>",
          "736:               <KeyboardShortcutIcon />",
          "737:             </UnStyledButton>",
          "739:               <SettingsIcon />",
          "740:             </UnStyledButton>",
          "741:           </div>",
          "",
          "[Removed Lines]",
          "738:             <UnStyledButton>",
          "",
          "[Added Lines]",
          "744:             <UnStyledButton",
          "745:               onClick={() => {",
          "746:                 this.setState({ showSettings: true });",
          "747:               }}>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "978:             </div>",
          "979:           </div>",
          "980:         </div>",
          "981:       </div>",
          "982:     );",
          "983:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "990:         <Dialog",
          "991:           isOpen={this.state.showSettings}",
          "992:           onDismiss={() => {",
          "993:             this.setState({",
          "994:               showSettings: false,",
          "995:               clearStorageStatus: null,",
          "996:             });",
          "997:           }}>",
          "998:           <div className=\"graphiql-dialog-header\">",
          "999:             <div className=\"graphiql-dialog-title\">Settings</div>",
          "1000:             <Dialog.Close",
          "1001:               onClick={() => {",
          "1002:                 this.setState({",
          "1003:                   showSettings: false,",
          "1004:                   clearStorageStatus: null,",
          "1005:                 });",
          "1006:               }}",
          "1007:             />",
          "1008:           </div>",
          "1009:           {this.props.storageContext ? (",
          "1010:             <div className=\"graphiql-dialog-section\">",
          "1011:               <div>",
          "1012:                 <div className=\"graphiql-dialog-section-title\">",
          "1013:                   Clear storage",
          "1014:                 </div>",
          "1015:                 <div className=\"graphiql-dialog-section-caption\">",
          "1016:                   Remove all locally stored data and start fresh.",
          "1017:                 </div>",
          "1018:               </div>",
          "1019:               <div>",
          "1020:                 <Button",
          "1021:                   state={this.state.clearStorageStatus || undefined}",
          "1022:                   disabled={this.state.clearStorageStatus === 'success'}",
          "1023:                   onClick={() => {",
          "1024:                     try {",
          "1025:                       this.props.storageContext?.clear();",
          "1026:                       this.setState({ clearStorageStatus: 'success' });",
          "1027:                     } catch {",
          "1028:                       this.setState({ clearStorageStatus: 'error' });",
          "1029:                     }",
          "1030:                   }}>",
          "1031:                   {this.state.clearStorageStatus === 'success'",
          "1032:                     ? 'Cleared data'",
          "1033:                     : this.state.clearStorageStatus === 'error'",
          "1034:                     ? 'Failed'",
          "1035:                     : 'Clear data'}",
          "1036:                 </Button>",
          "1037:               </div>",
          "1038:             </div>",
          "1039:           ) : null}",
          "1040:         </Dialog>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/style.css||packages/graphiql/src/style.css": [
          "File: packages/graphiql/src/style.css -> packages/graphiql/src/style.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:   padding: var(--px-12);",
          "219:   width: var(--px-12);",
          "220: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223: reach-portal .graphiql-dialog-header {",
          "224:   align-items: center;",
          "225:   display: flex;",
          "226:   justify-content: space-between;",
          "227:   padding: var(--px-24);",
          "228: }",
          "231: reach-portal .graphiql-dialog-title {",
          "232:   font-size: var(--font-size-h3);",
          "233:   font-weight: var(--font-weight-medium);",
          "234: }",
          "237: reach-portal .graphiql-dialog-section {",
          "238:   align-items: center;",
          "239:   border-top: 1px solid var(--color-neutral-15);",
          "240:   display: flex;",
          "241:   justify-content: space-between;",
          "242:   padding: var(--px-24);",
          "243: }",
          "244: reach-portal .graphiql-dialog-section > :not(:first-child) {",
          "245:   margin-left: var(--px-24);",
          "246: }",
          "249: reach-portal .graphiql-dialog-section-title {",
          "250:   font-size: var(--font-size-h4);",
          "251:   font-weight: var(--font-weight-medium);",
          "252: }",
          "255: reach-portal .graphiql-dialog-section-caption {",
          "256:   color: var(--color-neutral-60);",
          "257: }",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3036:     core-js-pure \"^3.0.0\"",
          "3037:     regenerator-runtime \"^0.13.4\"",
          "3039: \"@babel/runtime@^7.10.2\", \"@babel/runtime@^7.10.3\", \"@babel/runtime@^7.8.3\":",
          "3040:   version \"7.11.2\"",
          "3041:   resolved \"https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.11.2.tgz#f549c13c754cc40b87644b9fa9f09a6a95fe0736\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3039: \"@babel/runtime@^7.0.0\", \"@babel/runtime@^7.12.13\":",
          "3040:   version \"7.18.9\"",
          "3041:   resolved \"https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.18.9.tgz#b4fcfce55db3d2e5e080d2490f608a3b9f407f4a\"",
          "3042:   integrity sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
          "3043:   dependencies:",
          "3044:     regenerator-runtime \"^0.13.4\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4395:     \"@reach/utils\" \"0.17.0\"",
          "4396:     tslib \"^2.3.0\"",
          "4398: \"@reach/observe-rect@1.2.0\":",
          "4399:   version \"1.2.0\"",
          "4400:   resolved \"https://registry.yarnpkg.com/@reach/observe-rect/-/observe-rect-1.2.0.tgz#d7a6013b8aafcc64c778a0ccb83355a11204d3b2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4405: \"@reach/dialog@^0.17.0\":",
          "4406:   version \"0.17.0\"",
          "4407:   resolved \"https://registry.yarnpkg.com/@reach/dialog/-/dialog-0.17.0.tgz#81c48dd4405945dfc6b6c3e5e125db2c4324e9e8\"",
          "4408:   integrity sha512-AnfKXugqDTGbeG3c8xDcrQDE4h9b/vnc27Sa118oQSquz52fneUeX9MeFb5ZEiBJK8T5NJpv7QUTBIKnFCAH5A==",
          "4409:   dependencies:",
          "4410:     \"@reach/portal\" \"0.17.0\"",
          "4411:     \"@reach/utils\" \"0.17.0\"",
          "4412:     prop-types \"^15.7.2\"",
          "4413:     react-focus-lock \"^2.5.2\"",
          "4414:     react-remove-scroll \"^2.4.3\"",
          "4415:     tslib \"^2.3.0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4439:     tiny-warning \"^1.0.3\"",
          "4440:     tslib \"^2.3.0\"",
          "4442: \"@rollup/pluginutils@^4.1.1\":",
          "4443:   version \"4.1.1\"",
          "4444:   resolved \"https://registry.yarnpkg.com/@rollup/pluginutils/-/pluginutils-4.1.1.tgz#1d4da86dd4eded15656a57d933fda2b9a08d47ec\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4461: \"@reach/visually-hidden@^0.17.0\":",
          "4462:   version \"0.17.0\"",
          "4463:   resolved \"https://registry.yarnpkg.com/@reach/visually-hidden/-/visually-hidden-0.17.0.tgz#033adba10b5ec419649da8d6bd8e46db06d4c3a1\"",
          "4464:   integrity sha512-T6xF3Nv8vVnjVkGU6cm0+kWtvliLqPAo8PcZ+WxkKacZsaHTjaZb4v1PaCcyQHmuTNT/vtTVNOJLG0SjQOIb7g==",
          "4465:   dependencies:",
          "4466:     prop-types \"^15.7.2\"",
          "4467:     tslib \"^2.3.0\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8225:   resolved \"https://registry.yarnpkg.com/detect-newline/-/detect-newline-3.1.0.tgz#576f5dfc63ae1a192ff192d8ad3af6308991b651\"",
          "8226:   integrity sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
          "8228: detect-node@^2.0.4:",
          "8229:   version \"2.0.5\"",
          "8230:   resolved \"https://registry.yarnpkg.com/detect-node/-/detect-node-2.0.5.tgz#9d270aa7eaa5af0b72c4c9d9b814e7f4ce738b79\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8255: detect-node-es@^1.1.0:",
          "8256:   version \"1.1.0\"",
          "8257:   resolved \"https://registry.yarnpkg.com/detect-node-es/-/detect-node-es-1.1.0.tgz#163acdf643330caa0b4cd7c21e7ee7755d6fa493\"",
          "8258:   integrity sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9907:     inherits \"^2.0.3\"",
          "9908:     readable-stream \"^2.3.6\"",
          "9910: follow-redirects@^1.0.0, follow-redirects@^1.13.2, follow-redirects@^1.14.0:",
          "9911:   version \"1.15.0\"",
          "9912:   resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.0.tgz#06441868281c86d0dda4ad8bdaead2d02dca89d4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9942: focus-lock@^0.11.2:",
          "9943:   version \"0.11.2\"",
          "9944:   resolved \"https://registry.yarnpkg.com/focus-lock/-/focus-lock-0.11.2.tgz#aeef3caf1cea757797ac8afdebaec8fd9ab243ed\"",
          "9945:   integrity sha512-pZ2bO++NWLHhiKkgP1bEXHhR1/OjVcSvlCJ98aNJDFeb7H5OOQaO+SKOZle6041O9rv2tmbrO4JzClAvDUHf0g==",
          "9946:   dependencies:",
          "9947:     tslib \"^2.0.3\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10162:     has \"^1.0.3\"",
          "10163:     has-symbols \"^1.0.1\"",
          "10165: get-own-enumerable-property-symbols@^3.0.0:",
          "10166:   version \"3.0.2\"",
          "10167:   resolved \"https://registry.yarnpkg.com/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.2.tgz#b5fde77f22cbe35f390b4e089922c50bce6ef664\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10204: get-nonce@^1.0.0:",
          "10205:   version \"1.0.1\"",
          "10206:   resolved \"https://registry.yarnpkg.com/get-nonce/-/get-nonce-1.0.1.tgz#fdf3f0278073820d2ce9426c18f07481b1e0cdf3\"",
          "10207:   integrity sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11193:   resolved \"https://registry.yarnpkg.com/interpret/-/interpret-1.4.0.tgz#665ab8bc4da27a774a40584e812e3e0fa45b1a1e\"",
          "11194:   integrity sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
          "11196: ip-regex@^2.1.0:",
          "11197:   version \"2.1.0\"",
          "11198:   resolved \"https://registry.yarnpkg.com/ip-regex/-/ip-regex-2.1.0.tgz#fa78bf5d2e6913c911ce9f819ee5146bb6d844e9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11240: invariant@^2.2.4:",
          "11241:   version \"2.2.4\"",
          "11242:   resolved \"https://registry.yarnpkg.com/invariant/-/invariant-2.2.4.tgz#610f3c92c9359ce1db616e538008d23ff35158e6\"",
          "11243:   integrity sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
          "11244:   dependencies:",
          "11245:     loose-envify \"^1.0.0\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "12775:   resolved \"https://registry.yarnpkg.com/loglevel/-/loglevel-1.7.1.tgz#005fde2f5e6e47068f935ff28573e125ef72f197\"",
          "12776:   integrity sha512-Hesni4s5UkWkwCGJMQGAh71PaLUmKFM60dHvq0zi/vDhhrzuk+4GgNbTXJ12YYQJn6ZKBDNIjYcuQGKudvqrIw==",
          "12779:   version \"1.4.0\"",
          "12780:   resolved \"https://registry.yarnpkg.com/loose-envify/-/loose-envify-1.4.0.tgz#71ee51fa7be4caec1a63839f7e682d8132d30caf\"",
          "12781:   integrity sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
          "",
          "[Removed Lines]",
          "12778: loose-envify@^1.1.0, loose-envify@^1.4.0:",
          "",
          "[Added Lines]",
          "12829: loose-envify@^1.0.0, loose-envify@^1.1.0, loose-envify@^1.4.0:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "15402:     minimist \"^1.2.0\"",
          "15403:     strip-json-comments \"~2.0.1\"",
          "15405: react-dom@^17.0.2:",
          "15406:   version \"17.0.2\"",
          "15407:   resolved \"https://registry.yarnpkg.com/react-dom/-/react-dom-17.0.2.tgz#ecffb6845e3ad8dbfcdc498f0d0a939736502c23\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15456: react-clientside-effect@^1.2.6:",
          "15457:   version \"1.2.6\"",
          "15458:   resolved \"https://registry.yarnpkg.com/react-clientside-effect/-/react-clientside-effect-1.2.6.tgz#29f9b14e944a376b03fb650eed2a754dd128ea3a\"",
          "15459:   integrity sha512-XGGGRQAKY+q25Lz9a/4EPqom7WRjz3z9R2k4jhVKA/puQFH/5Nt27vFZYql4m4NVNdUvX8PS3O7r/Zzm7cjUlg==",
          "15460:   dependencies:",
          "15461:     \"@babel/runtime\" \"^7.12.13\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "15411:     object-assign \"^4.1.1\"",
          "15412:     scheduler \"^0.20.2\"",
          "15414: react-hot-loader@^4.12.20:",
          "15415:   version \"4.12.21\"",
          "15416:   resolved \"https://registry.yarnpkg.com/react-hot-loader/-/react-hot-loader-4.12.21.tgz#332e830801fb33024b5a147d6b13417f491eb975\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15472: react-focus-lock@^2.5.2:",
          "15473:   version \"2.9.1\"",
          "15474:   resolved \"https://registry.yarnpkg.com/react-focus-lock/-/react-focus-lock-2.9.1.tgz#094cfc19b4f334122c73bb0bff65d77a0c92dd16\"",
          "15475:   integrity sha512-pSWOQrUmiKLkffPO6BpMXN7SNKXMsuOakl652IBuALAu1esk+IcpJyM+ALcYzPTTFz1rD0R54aB9A4HuP5t1Wg==",
          "15476:   dependencies:",
          "15477:     \"@babel/runtime\" \"^7.0.0\"",
          "15478:     focus-lock \"^0.11.2\"",
          "15479:     prop-types \"^15.6.2\"",
          "15480:     react-clientside-effect \"^1.2.6\"",
          "15481:     use-callback-ref \"^1.3.0\"",
          "15482:     use-sidecar \"^1.1.2\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "15450:   resolved \"https://registry.yarnpkg.com/react-refresh/-/react-refresh-0.13.0.tgz#cbd01a4482a177a5da8d44c9755ebb1f26d5a1c1\"",
          "15451:   integrity sha512-XP8A9BT0CpRBD+NYLLeIhld/RqG9+gktUjW1FkE+Vm7OCinbG1SshcK5tb9ls4kzvjZr9mOQc7HYgBngEyPAXg==",
          "15453: react-test-renderer@^16.13.1:",
          "15454:   version \"16.14.0\"",
          "15455:   resolved \"https://registry.yarnpkg.com/react-test-renderer/-/react-test-renderer-16.14.0.tgz#e98360087348e260c56d4fe2315e970480c228ae\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15523: react-remove-scroll-bar@^2.3.3:",
          "15524:   version \"2.3.3\"",
          "15525:   resolved \"https://registry.yarnpkg.com/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.3.tgz#e291f71b1bb30f5f67f023765b7435f4b2b2cd94\"",
          "15526:   integrity sha512-i9GMNWwpz8XpUpQ6QlevUtFjHGqnPG4Hxs+wlIJntu/xcsZVEpJcIV71K3ZkqNy2q3GfgvkD7y6t/Sv8ofYSbw==",
          "15527:   dependencies:",
          "15528:     react-style-singleton \"^2.2.1\"",
          "15529:     tslib \"^2.0.0\"",
          "15531: react-remove-scroll@^2.4.3:",
          "15532:   version \"2.5.5\"",
          "15533:   resolved \"https://registry.yarnpkg.com/react-remove-scroll/-/react-remove-scroll-2.5.5.tgz#1e31a1260df08887a8a0e46d09271b52b3a37e77\"",
          "15534:   integrity sha512-ImKhrzJJsyXJfBZ4bzu8Bwpka14c/fQt0k+cyFp/PBhTfyDnU5hjOtM4AG/0AMyy8oKzOTR0lDgJIM7pYXI0kw==",
          "15535:   dependencies:",
          "15536:     react-remove-scroll-bar \"^2.3.3\"",
          "15537:     react-style-singleton \"^2.2.1\"",
          "15538:     tslib \"^2.1.0\"",
          "15539:     use-callback-ref \"^1.3.0\"",
          "15540:     use-sidecar \"^1.1.2\"",
          "15542: react-style-singleton@^2.2.1:",
          "15543:   version \"2.2.1\"",
          "15544:   resolved \"https://registry.yarnpkg.com/react-style-singleton/-/react-style-singleton-2.2.1.tgz#f99e420492b2d8f34d38308ff660b60d0b1205b4\"",
          "15545:   integrity sha512-ZWj0fHEMyWkHzKYUr2Bs/4zU6XLmq9HsgBURm7g5pAVfyn49DgUiNgY2d4lXRlYSiCif9YBGpQleewkcqddc7g==",
          "15546:   dependencies:",
          "15547:     get-nonce \"^1.0.0\"",
          "15548:     invariant \"^2.2.4\"",
          "15549:     tslib \"^2.0.0\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "17479:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.3.1.tgz#e8a335add5ceae51aa261d32a490158ef042ef01\"",
          "17480:   integrity sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw==",
          "17482: tslib@^2.0.3:",
          "17483:   version \"2.1.0\"",
          "17484:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.1.0.tgz#da60860f1c2ecaa5703ab7d39bc05b6bf988b97a\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17580: tslib@^2.0.0, tslib@^2.1.0:",
          "17581:   version \"2.4.0\"",
          "17582:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.4.0.tgz#7cecaa7f073ce680a05847aa77be941098f36dc3\"",
          "17583:   integrity sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "17871:     punycode \"1.3.2\"",
          "17872:     querystring \"0.2.0\"",
          "17874: use@^3.1.0:",
          "17875:   version \"3.1.1\"",
          "17876:   resolved \"https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17977: use-callback-ref@^1.3.0:",
          "17978:   version \"1.3.0\"",
          "17979:   resolved \"https://registry.yarnpkg.com/use-callback-ref/-/use-callback-ref-1.3.0.tgz#772199899b9c9a50526fedc4993fc7fa1f7e32d5\"",
          "17980:   integrity sha512-3FT9PRuRdbB9HfXhEq35u4oZkvpJ5kuYbpqhCfmiZyReuRgpnhDlbr2ZEnnuS0RrJAPn6l23xjFg9kpDM+Ms7w==",
          "17981:   dependencies:",
          "17982:     tslib \"^2.0.0\"",
          "17984: use-sidecar@^1.1.2:",
          "17985:   version \"1.1.2\"",
          "17986:   resolved \"https://registry.yarnpkg.com/use-sidecar/-/use-sidecar-1.1.2.tgz#2f43126ba2d7d7e117aa5855e5d8f0276dfe73c2\"",
          "17987:   integrity sha512-epTbsLuzZ7lPClpz2TyryBfztm7m+28DlEv2ZCQ3MDr5ssiwyOwGH/e5F9CkfWjJ1t4clvI58yF822/GUkjjhw==",
          "17988:   dependencies:",
          "17989:     detect-node-es \"^1.1.0\"",
          "17990:     tslib \"^2.0.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e823697b5d47565671d5919be84f69919e70977f",
      "candidate_info": {
        "commit_hash": "e823697b5d47565671d5919be84f69919e70977f",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/e823697b5d47565671d5919be84f69919e70977f",
        "files": [
          ".changeset/brave-dots-guess.md",
          "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/ToolbarMenu.tsx",
          "packages/graphiql/src/components/ToolbarSelect.tsx"
        ],
        "message": "fix(types): components that accept children should declare this (#2387)",
        "before_after_code_files": [
          "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx||packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/ToolbarMenu.tsx||packages/graphiql/src/components/ToolbarMenu.tsx",
          "packages/graphiql/src/components/ToolbarSelect.tsx||packages/graphiql/src/components/ToolbarSelect.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx||packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx -> packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { GraphQLSchema, OperationDefinitionNode, GraphQLType } from 'graphql';",
          "11: import type { SchemaConfig } from 'graphql-language-service';",
          "",
          "[Removed Lines]",
          "8: import React, { ComponentType, PropsWithChildren } from 'react';",
          "",
          "[Added Lines]",
          "8: import React, { ComponentType, PropsWithChildren, ReactNode } from 'react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:   variablesEditorOptions?: monaco.editor.IStandaloneEditorConstructionOptions;",
          "95:   operationEditorOptions?: monaco.editor.IStandaloneEditorConstructionOptions;",
          "96:   resultsEditorOptions?: monaco.editor.IStandaloneEditorConstructionOptions;",
          "97: } & Partial<Formatters>;",
          "99: export type GraphiQLState = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:   children?: ReactNode;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
          "10: import { FieldType } from './DocExplorer/types';",
          "",
          "[Removed Lines]",
          "8: import React from 'react';",
          "",
          "[Added Lines]",
          "8: import React, { ReactNode } from 'react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: type DocExplorerProps = {",
          "31:   schema?: GraphQLSchema | null;",
          "32:   schemaErrors?: readonly GraphQLError[];",
          "33: };",
          "35: type DocExplorerState = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:   children?: ReactNode;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   MouseEventHandler,",
          "12:   Component,",
          "13:   FunctionComponent,",
          "14: } from 'react';",
          "15: import {",
          "16:   buildClientSchema,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:   ReactNode,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:         onTabChange?: (tab: TabsState) => void;",
          "311:       };",
          "312: };",
          "314: export type GraphiQLState = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "314:   children?: ReactNode;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx": [
          "File: packages/graphiql/src/components/QueryHistory.tsx -> packages/graphiql/src/components/QueryHistory.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { QueryStoreItem } from '../utility/QueryStore';",
          "10: import HistoryQuery, {",
          "11:   HandleEditLabelFn,",
          "",
          "[Removed Lines]",
          "8: import React from 'react';",
          "",
          "[Added Lines]",
          "8: import React, { ReactNode } from 'react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:   onSelectQuery: HandleSelectQueryFn;",
          "25:   storage: StorageAPI;",
          "26:   maxHistoryLength: number;",
          "27: };",
          "29: type QueryHistoryState = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   children?: ReactNode;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/ToolbarMenu.tsx||packages/graphiql/src/components/ToolbarMenu.tsx": [
          "File: packages/graphiql/src/components/ToolbarMenu.tsx -> packages/graphiql/src/components/ToolbarMenu.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: type ToolbarMenuProps = {",
          "11:   title: string;",
          "12:   label: string;",
          "13: };",
          "15: type ToolbarMenuState = {",
          "",
          "[Removed Lines]",
          "8: import React, { FC, MouseEventHandler } from 'react';",
          "",
          "[Added Lines]",
          "8: import React, { FC, MouseEventHandler, ReactNode } from 'react';",
          "13:   children?: ReactNode;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/ToolbarSelect.tsx||packages/graphiql/src/components/ToolbarSelect.tsx": [
          "File: packages/graphiql/src/components/ToolbarSelect.tsx -> packages/graphiql/src/components/ToolbarSelect.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: type ToolbarSelectProps = {",
          "11:   title?: string;",
          "12:   label?: string;",
          "13:   onSelect?: (selection: string) => void;",
          "14: };",
          "16: type ToolbarSelectState = {",
          "",
          "[Removed Lines]",
          "8: import React, { MouseEventHandler } from 'react';",
          "",
          "[Added Lines]",
          "8: import React, { MouseEventHandler, ReactNode } from 'react';",
          "14:   children?: ReactNode;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89f5d611644abb6b210a6f6cec779e12a5e848c2",
      "candidate_info": {
        "commit_hash": "89f5d611644abb6b210a6f6cec779e12a5e848c2",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/89f5d611644abb6b210a6f6cec779e12a5e848c2",
        "files": [
          "packages/graphiql/src/components/GraphiQL.tsx"
        ],
        "message": "rename handleTabClickProp`o`gation() to handleTabClickProp`a`gation (#2455)",
        "before_after_code_files": [
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "895:                       this.state.variableEditorActive ? ' active' : ''",
          "896:                     }`}",
          "897:                     onClick={this.handleOpenVariableEditorTab}",
          "899:                     Query Variables",
          "900:                   </div>",
          "901:                   {this.state.headerEditorEnabled && (",
          "",
          "[Removed Lines]",
          "898:                     onMouseDown={this.handleTabClickPropogation}>",
          "",
          "[Added Lines]",
          "898:                     onMouseDown={this.handleTabClickPropagation}>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "907:                         this.state.headerEditorActive ? ' active' : ''",
          "908:                       }`}",
          "909:                       onClick={this.handleOpenHeaderEditorTab}",
          "911:                       Request Headers",
          "912:                     </div>",
          "913:                   )}",
          "",
          "[Removed Lines]",
          "910:                       onMouseDown={this.handleTabClickPropogation}>",
          "",
          "[Added Lines]",
          "910:                       onMouseDown={this.handleTabClickPropagation}>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1521:   };",
          "1525:     HTMLDivElement",
          "1526:   > = downEvent => {",
          "1527:     downEvent.preventDefault();",
          "",
          "[Removed Lines]",
          "1524:   private handleTabClickPropogation: MouseEventHandler<",
          "",
          "[Added Lines]",
          "1524:   private handleTabClickPropagation: MouseEventHandler<",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "858907d2106742a65ec52eb017f2e91268cc37bf",
      "candidate_info": {
        "commit_hash": "858907d2106742a65ec52eb017f2e91268cc37bf",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/858907d2106742a65ec52eb017f2e91268cc37bf",
        "files": [
          ".changeset/nervous-squids-flow.md",
          ".github/workflows/canary.yml",
          ".github/workflows/deploy-preview.yml",
          ".github/workflows/deploy.yml",
          ".github/workflows/license-check.yml",
          ".github/workflows/pr-check.yml",
          ".github/workflows/pr-tests.yml",
          ".github/workflows/release.yml",
          ".nvmrc",
          "packages/graphiql/test/schema.js",
          "yarn.lock"
        ],
        "message": "missing changeset, fix e2e, node 16 (#2045)",
        "before_after_code_files": [
          "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js": [
          "File: packages/graphiql/test/schema.js -> packages/graphiql/test/schema.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:       },",
          "334:       async *subscribe(args) {",
          "335:         for (const hi of ['Hi', 'Bonjour', 'Hola', 'Ciao', 'Zdravo']) {",
          "337:             await sleep(args.delay);",
          "338:           }",
          "339:           yield { message: hi };",
          "",
          "[Removed Lines]",
          "336:           if (args.delay) {",
          "",
          "[Added Lines]",
          "336:           if (args && args.delay) {",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3270:     tslib \"^2\"",
          "3272: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
          "3274:   dependencies:",
          "3275:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.1.0\"",
          "3276:     meros \"^1.1.4\"",
          "",
          "[Removed Lines]",
          "3273:   version \"0.4.0\"",
          "",
          "[Added Lines]",
          "3273:   version \"0.4.1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10992:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "10994: \"graphiql@file:packages/graphiql\":",
          "10996:   dependencies:",
          "10998:     codemirror \"^5.58.2\"",
          "11000:     copy-to-clipboard \"^3.2.0\"",
          "11001:     dset \"^3.1.0\"",
          "11002:     entities \"^2.0.0\"",
          "",
          "[Removed Lines]",
          "10995:   version \"1.5.1\"",
          "10997:     \"@graphiql/toolkit\" \"^0.4.0\"",
          "10999:     codemirror-graphql \"^1.1.0\"",
          "",
          "[Added Lines]",
          "10995:   version \"1.5.2\"",
          "10997:     \"@graphiql/toolkit\" \"^0.4.1\"",
          "10999:     codemirror-graphql \"^1.2.0\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}