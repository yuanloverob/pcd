{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bd48a9caaad7c432015c08f4ccdced4049db7ebf",
      "candidate_info": {
        "commit_hash": "bd48a9caaad7c432015c08f4ccdced4049db7ebf",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/bd48a9caaad7c432015c08f4ccdced4049db7ebf",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890815 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java -> fontbox/src/main/java/org/apache/fontbox/ttf/GlyphRenderer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:         int endPtIndex = 0;",
          "67:         int endPtOfContourIndex = -1;",
          "68:         Point[] points = new Point[gd.getPointCount()];",
          "70:         {",
          "71:             if (endPtOfContourIndex == -1)",
          "72:             {",
          "",
          "[Removed Lines]",
          "69:         for (int i = 0; i < gd.getPointCount(); i++)",
          "",
          "[Added Lines]",
          "69:         for (int i = 0; i < points.length; i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f848120aa9aad4199504d9e8133d6942ed4adb99",
      "candidate_info": {
        "commit_hash": "f848120aa9aad4199504d9e8133d6942ed4adb99",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f848120aa9aad4199504d9e8133d6942ed4adb99",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4949: don't clip if \"W n\" only\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881364 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1011:         if (clipWindingRule != -1)",
          "1012:         {",
          "1013:             linePath.setWindingRule(clipWindingRule);",
          "",
          "[Removed Lines]",
          "1014:             getGraphicsState().intersectClippingPath(linePath);",
          "",
          "[Added Lines]",
          "1015:             if (!linePath.getPathIterator(null).isDone())",
          "1016:             {",
          "1018:                 getGraphicsState().intersectClippingPath(linePath);",
          "1019:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9de3738b2a1998490254a6a590614967c4341817",
      "candidate_info": {
        "commit_hash": "9de3738b2a1998490254a6a590614967c4341817",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9de3738b2a1998490254a6a590614967c4341817",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java"
        ],
        "message": "PDFBOX-5188: call super as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889650 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSOutputStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     @Override",
          "111:     public void flush() throws IOException",
          "112:     {",
          "113:     }",
          "115:     @Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:         if (buffer != null)",
          "114:         {",
          "115:             super.flush();",
          "116:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0333988a35b4d9abb00fc2ce72d652422e8dc327",
      "candidate_info": {
        "commit_hash": "0333988a35b4d9abb00fc2ce72d652422e8dc327",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0333988a35b4d9abb00fc2ce72d652422e8dc327",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887317 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "658:         COSArray array = (COSArray) field.getDictionaryObject(COSName.OPT);",
          "659:         if (array != null)",
          "660:         {",
          "662:             for (int i = 0; i < array.size(); i++)",
          "663:             {",
          "664:                 COSBase next = array.getObject(i);",
          "",
          "[Removed Lines]",
          "661:             List<Object> objects = new ArrayList<Object>();",
          "",
          "[Added Lines]",
          "661:             List<Object> objects = new ArrayList<Object>(array.size());",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:         COSArray array = (COSArray) page.getDictionaryObject(COSName.TEMPLATES);",
          "75:         if (array != null)",
          "76:         {",
          "78:             for (int i = 0; i < array.size(); i++)",
          "79:             {",
          "80:                 objects.add(new FDFTemplate((COSDictionary) array.getObject(i)));",
          "",
          "[Removed Lines]",
          "77:             List<FDFTemplate> objects = new ArrayList<FDFTemplate>();",
          "",
          "[Added Lines]",
          "77:             List<FDFTemplate> objects = new ArrayList<FDFTemplate>(array.size());",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "313:             }",
          "317:             FontFileFinder fontFileFinder = new FontFileFinder();",
          "318:             List<URI> fonts = fontFileFinder.find();",
          "319:             for (URI font : fonts)",
          "320:             {",
          "321:                 files.add(new File(font));",
          "",
          "[Removed Lines]",
          "316:             List<File> files = new ArrayList<File>();",
          "",
          "[Added Lines]",
          "318:             List<File> files = new ArrayList<File>(fonts.size());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "475:     private List<FSFontInfo> loadDiskCache(List<File> files)",
          "476:     {",
          "478:         for (File file : files)",
          "479:         {",
          "480:             pending.add(file.getAbsolutePath());",
          "",
          "[Removed Lines]",
          "477:         Set<String> pending = new HashSet<String>();",
          "",
          "[Added Lines]",
          "477:         Set<String> pending = new HashSet<String>(files.size());",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     static List<KeyValue> toKeyValueList(List<String> key, List<String> value)",
          "116:     {",
          "118:         for(int i =0; i<key.size(); i++)",
          "119:         {",
          "120:             list.add(new FieldUtils.KeyValue(key.get(i),value.get(i)));",
          "",
          "[Removed Lines]",
          "117:         List<KeyValue> list = new ArrayList<KeyValue>();",
          "",
          "[Added Lines]",
          "117:         List<KeyValue> list = new ArrayList<KeyValue>(key.size());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07505e6e88a66c03e4696e67ed4d5dfd7f447499",
      "candidate_info": {
        "commit_hash": "07505e6e88a66c03e4696e67ed4d5dfd7f447499",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/07505e6e88a66c03e4696e67ed4d5dfd7f447499",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java"
        ],
        "message": "PDFBOX-5145: replace call that doesn't exist in jdk6\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888235 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "622:                 if (isSoft)",
          "623:                 {",
          "624:                     rgbaRow[offset + 3] = alphaRow[x];",
          "626:                     {",
          "627:                         float k = alphaRow[x] / 255f;",
          "628:                         rgbaRow[offset + 0] = clampColor(((rgbaRow[offset + 0] / 255f - matte[0]) / k + matte[0]) * 255f);",
          "",
          "[Removed Lines]",
          "625:                     if (matte != null && Integer.compare(alphaRow[x], 0) != 0)",
          "",
          "[Added Lines]",
          "625:                     if (matte != null && alphaRow[x] != 0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}