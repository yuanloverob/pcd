{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "121a8a1d9fadf988a45029caf39c6249a95d5ba9",
      "candidate_info": {
        "commit_hash": "121a8a1d9fadf988a45029caf39c6249a95d5ba9",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/121a8a1d9fadf988a45029caf39c6249a95d5ba9",
        "files": [
          "query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java"
        ],
        "message": "KYLIN-5162 Fix non select sql pushdown",
        "before_after_code_files": [
          "query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java||query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java||query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java": [
          "File: query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java -> query/src/main/java/org/apache/kylin/query/util/PushDownUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     public static Pair<List<List<String>>, List<SelectedColumnMeta>> tryPushDownNonSelectQuery(String project,",
          "66:             String sql, String defaultSchema, boolean isPrepare) throws Exception {",
          "67:         PushDownExecutor executor = new PushDownExecutor();",
          "69:     }",
          "71:     static String schemaCompletion(String inputSql, String schema) throws SqlParseException {",
          "",
          "[Removed Lines]",
          "68:         return executor.pushDownQuery(project, sql, defaultSchema, null, true, isPrepare);",
          "",
          "[Added Lines]",
          "68:         return executor.pushDownQuery(project, sql, defaultSchema, null, false, isPrepare);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3765cdaba3da961f99e68da4e6681dd72ebb768",
      "candidate_info": {
        "commit_hash": "c3765cdaba3da961f99e68da4e6681dd72ebb768",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/c3765cdaba3da961f99e68da4e6681dd72ebb768",
        "files": [
          "core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java",
          "pom.xml"
        ],
        "message": "KYLIN-4935 Existing JobOutput's extend info will be lost when it is updated",
        "before_after_code_files": [
          "core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java||core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java||core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java": [
          "File: core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java -> core-job/src/main/java/org/apache/kylin/job/execution/ExecutableManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "675:                 logger.info(\"job id:\" + jobId + \" from \" + oldStatus + \" to \" + newStatus);",
          "676:             }",
          "677:             if (info != null) {",
          "679:             }",
          "680:             if (output != null) {",
          "681:                 if (output.length() > config.getJobOutputMaxSize()) {",
          "",
          "[Removed Lines]",
          "678:                 jobOutput.setInfo(info);",
          "",
          "[Added Lines]",
          "678:                 if (null != jobOutput.getInfo()) {",
          "679:                     jobOutput.getInfo().putAll(info);",
          "680:                 } else {",
          "681:                     jobOutput.setInfo(info);",
          "682:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01036afd898e313a7d3b31f326dc780fd47f8fd0",
      "candidate_info": {
        "commit_hash": "01036afd898e313a7d3b31f326dc780fd47f8fd0",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/01036afd898e313a7d3b31f326dc780fd47f8fd0",
        "files": [
          "kylin-it/src/test/resources/query/sql_limit/query00.sql",
          "kylin-it/src/test/resources/query/sql_limit/query00.sql.expected/._SUCCESS.crc",
          "kylin-it/src/test/resources/query/sql_limit/query00.sql.expected/.part-00000-a290bf53-2025-46e5-8133-2a6bf503206c-c000.csv.crc",
          "kylin-it/src/test/resources/query/sql_limit/query00.sql.expected/_SUCCESS",
          "kylin-it/src/test/resources/query/sql_limit/query00.sql.expected/part-00000-a290bf53-2025-46e5-8133-2a6bf503206c-c000.csv",
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala",
          "kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java",
          "query/src/main/java/org/apache/kylin/query/exec/SparkExec.java",
          "query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java"
        ],
        "message": "KYLIN-4905 Support limit .. offset ... in spark query engine",
        "before_after_code_files": [
          "kylin-it/src/test/resources/query/sql_limit/query00.sql||kylin-it/src/test/resources/query/sql_limit/query00.sql",
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala",
          "kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java||kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java",
          "query/src/main/java/org/apache/kylin/query/exec/SparkExec.java||query/src/main/java/org/apache/kylin/query/exec/SparkExec.java",
          "query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java||query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-it/src/test/resources/query/sql_limit/query00.sql||kylin-it/src/test/resources/query/sql_limit/query00.sql": [
          "File: kylin-it/src/test/resources/query/sql_limit/query00.sql -> kylin-it/src/test/resources/query/sql_limit/query00.sql",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --",
          "2: -- Licensed to the Apache Software Foundation (ASF) under one",
          "3: -- or more contributor license agreements.  See the NOTICE file",
          "4: -- distributed with this work for additional information",
          "5: -- regarding copyright ownership.  The ASF licenses this file",
          "6: -- to you under the Apache License, Version 2.0 (the",
          "7: -- \"License\"); you may not use this file except in compliance",
          "8: -- with the License.  You may obtain a copy of the License at",
          "9: --",
          "10: --     http://www.apache.org/licenses/LICENSE-2.0",
          "11: --",
          "12: -- Unless required by applicable law or agreed to in writing, software",
          "13: -- distributed under the License is distributed on an \"AS IS\" BASIS,",
          "14: -- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "15: -- See the License for the specific language governing permissions and",
          "16: -- limitations under the License.",
          "17: --",
          "19: select slr_segment_cd, sum(price)",
          "20: from test_kylin_fact",
          "21: group by slr_segment_cd",
          "22: order by sum(price) desc",
          "23: limit 4 offset 2",
          "24: ;{\"scanRowCount\":300,\"scanBytes\":0,\"scanFiles\":1,\"cuboidId\":14336}",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala": [
          "File: kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala -> kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/kylin/query/runtime/plans/LimitPlan.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:       val offset = BigDecimal(rel.localOffset.accept(visitor).toString).toInt",
          "42:       inputs",
          "43:         .get(0)",
          "45:     }",
          "46:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:         .limit(offset + limit)",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java||kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java": [
          "File: kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java -> kylin-spark-project/kylin-spark-test/src/test/java/org/apache/kylin/engine/spark2/NBuildAndQueryTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:             tasks.add(new QueryCallable(CompareLevel.SAME, joinType, \"sql_unionall\"));",
          "201:             tasks.add(new QueryCallable(CompareLevel.SAME, joinType, \"sql_values\"));",
          "202:             tasks.add(new QueryCallable(CompareLevel.SAME, joinType, \"sql_window\"));",
          "203:         }",
          "204:         logger.info(\"Total {} tasks.\", tasks.size());",
          "205:         return tasks;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:             tasks.add(new QueryCallable(CompareLevel.SAME, joinType, \"sql_limit\"));",
          "",
          "---------------"
        ],
        "query/src/main/java/org/apache/kylin/query/exec/SparkExec.java||query/src/main/java/org/apache/kylin/query/exec/SparkExec.java": [
          "File: query/src/main/java/org/apache/kylin/query/exec/SparkExec.java -> query/src/main/java/org/apache/kylin/query/exec/SparkExec.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import org.apache.calcite.linq4j.Enumerable;",
          "23: import org.apache.calcite.linq4j.Linq4j;",
          "24: import org.apache.calcite.rel.type.RelDataType;",
          "25: import org.apache.kylin.common.QueryContextFacade;",
          "26: import org.apache.kylin.common.debug.BackdoorToggles;",
          "27: import org.apache.kylin.query.relnode.OLAPRel;",
          "29: public class SparkExec {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import org.apache.calcite.rex.RexLiteral;",
          "28: import org.apache.kylin.query.relnode.OLAPLimitRel;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:         RelDataType rowType = (RelDataType) QueryContextFacade.current().getResultType();",
          "38:         try {",
          "39:             Enumerable<Object[]> computer = QueryEngineFactory.compute(dataContext, olapRel, rowType);",
          "41:         } catch (Exception e) {",
          "42:             throw new RuntimeException(e);",
          "43:         }",
          "",
          "[Removed Lines]",
          "40:             return computer;",
          "",
          "[Added Lines]",
          "43:             if (olapRel instanceof OLAPLimitRel && ((OLAPLimitRel) olapRel).localOffset != null) {",
          "44:                 RexLiteral literal = (RexLiteral) ((OLAPLimitRel) olapRel).localOffset;",
          "45:                 return computer.skip(Integer.valueOf(literal.getValue().toString()));",
          "46:             } else {",
          "47:                 return computer;",
          "48:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:         RelDataType rowType = (RelDataType) QueryContextFacade.current().getResultType();",
          "53:         try {",
          "54:             Enumerable<Object> objects = QueryEngineFactory.computeSCALA(dataContext, olapRel, rowType);",
          "57:         } catch (Exception e) {",
          "58:             throw new RuntimeException(e);",
          "",
          "[Removed Lines]",
          "55:             return objects;",
          "",
          "[Added Lines]",
          "64:             if (olapRel instanceof OLAPLimitRel && ((OLAPLimitRel) olapRel).localOffset != null) {",
          "65:                 RexLiteral literal = (RexLiteral) ((OLAPLimitRel) olapRel).localOffset;",
          "66:                 return objects.skip(Integer.valueOf(literal.getValue().toString()));",
          "67:             } else {",
          "68:                 return objects;",
          "69:             }",
          "",
          "---------------"
        ],
        "query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java||query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java": [
          "File: query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java -> query/src/main/java/org/apache/kylin/query/relnode/OLAPTableScan.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: import org.apache.calcite.rel.rules.SemiJoinRule;",
          "63: import org.apache.calcite.rel.rules.SortJoinTransposeRule;",
          "64: import org.apache.calcite.rel.rules.SortUnionTransposeRule;",
          "65: import org.apache.calcite.rel.type.RelDataType;",
          "66: import org.apache.calcite.rel.type.RelDataTypeFactory;",
          "67: import org.apache.calcite.rel.type.RelDataTypeField;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: import org.apache.calcite.rel.rules.SortProjectTransposeRule;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "213:         planner.removeRule(ExpandConversionRule.INSTANCE);",
          "214:     }",
          "216:     protected void addRules(final RelOptPlanner planner, List<String> rules) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:             1. Calcite optimized plan with SortProjectTransposeRule enabled:",
          "223:                 OLAPProjectRel",
          "224:                  |_OLAPLimitRel (offset=3,fetch=10)",
          "225:                    |_OLAPSortRel",
          "226:                      |_OLAPAggregateRel",
          "227:                        |_OLAPProjectRel",
          "228:                          |_OLAPTableScan",
          "230:             2. Calcite optimized plan with SortProjectTransposeRule removed:",
          "231:                 OLAPLimitRel  (offset=3,fetch=10)",
          "232:                   |_OLAPSortRel",
          "233:                     |_ OLAPAggregateRel",
          "234:                       |_ OLAPProjectRel",
          "235:                         |_OLAPTableScan",
          "238:         planner.removeRule(SortProjectTransposeRule.INSTANCE);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e719f7b562f87cb0ecaaca34a4c53c2fe91cecc0",
      "candidate_info": {
        "commit_hash": "e719f7b562f87cb0ecaaca34a4c53c2fe91cecc0",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/e719f7b562f87cb0ecaaca34a4c53c2fe91cecc0",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java"
        ],
        "message": "KYLIn-4874 Fix CubeMigrationCLI bug for kylin4",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java||tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2350:     }",
          "2352:     public String getKylinMetricsSubjectQueryExecution() {",
          "2354:     }",
          "2356:     public String getKylinMetricsSubjectQuerySparkJob() {",
          "2358:                 + getKylinMetricsSubjectSuffix();",
          "2359:     }",
          "2361:     public String getKylinMetricsSubjectQuerySparkStage() {",
          "2363:                 + getKylinMetricsSubjectSuffix();",
          "2364:     }",
          "",
          "[Removed Lines]",
          "2353:         return getOptional(\"kylin.metrics.subject-query\", \"METRICS_QUERY_EXECUTION\") + \"_\" + getKylinMetricsSubjectSuffix();",
          "2357:         return getOptional(\"kylin.metrics.subject-query-cube\", \"METRICS_QUERY_SPARK_JOB\") + \"_\"",
          "2362:         return getOptional(\"kylin.metrics.subject-query-rpc\", \"METRICS_QUERY_SPARK_STAGE\") + \"_\"",
          "",
          "[Added Lines]",
          "2353:         return getOptional(\"kylin.metrics.subject-query-execution\", \"METRICS_QUERY_EXECUTION\") + \"_\" + getKylinMetricsSubjectSuffix();",
          "2357:         return getOptional(\"kylin.metrics.subject-query-spark-job\", \"METRICS_QUERY_SPARK_JOB\") + \"_\"",
          "2362:         return getOptional(\"kylin.metrics.subject-query-spark-stage\", \"METRICS_QUERY_SPARK_STAGE\") + \"_\"",
          "",
          "---------------"
        ],
        "tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java||tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java": [
          "File: tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java -> tool/src/main/java/org/apache/kylin/tool/CubeMigrationCLI.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: import org.apache.kylin.metadata.model.TableDesc;",
          "55: import org.apache.kylin.metadata.model.TableRef;",
          "56: import org.apache.kylin.metadata.model.TableExtDesc;",
          "57: import org.apache.kylin.metadata.project.ProjectInstance;",
          "58: import org.apache.kylin.metadata.realization.RealizationStatusEnum;",
          "59: import org.apache.kylin.metadata.realization.RealizationType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: import org.apache.kylin.metadata.model.DataModelManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "403:                     logger.info(\"Item: {} doesn't exist, ignore it.\", item);",
          "404:                     break;",
          "405:                 }",
          "406:                 dstStore.putResource(renameTableWithinProject(item), res.content(), res.lastModified());",
          "407:                 res.content().close();",
          "408:                 logger.info(\"Item \" + item + \" is copied\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:                 if (item.startsWith(ResourceStore.DATA_MODEL_DESC_RESOURCE_ROOT)) {",
          "409:                     DataModelDesc dataModelDesc = srcStore.getResource(item, DataModelManager.getInstance(srcConfig).getDataModelSerializer());",
          "410:                     if (dataModelDesc != null && dataModelDesc.getProjectName() != null && !dataModelDesc.getProjectName().equals(dstProject)) {",
          "411:                         dataModelDesc.setProjectName(dstProject);",
          "412:                         dstStore.putResource(item, dataModelDesc, res.lastModified(), DataModelManager.getInstance(srcConfig).getDataModelSerializer());",
          "413:                         logger.info(\"Item \" + item + \" is copied.\");",
          "414:                         break;",
          "415:                     }",
          "416:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "527:     }",
          "529:     private String renameTableWithinProject(String srcItem) {",
          "531:             String tableIdentity = TableDesc.parseResourcePath(srcItem).getTable();",
          "532:             if (srcItem.contains(ResourceStore.TABLE_EXD_RESOURCE_ROOT))",
          "533:                 return TableExtDesc.concatResourcePath(tableIdentity, dstProject);",
          "",
          "[Removed Lines]",
          "530:         if (dstProject != null && srcItem.contains(ResourceStore.TABLE_RESOURCE_ROOT)) {",
          "",
          "[Added Lines]",
          "541:         if (dstProject != null && srcItem.startsWith(ResourceStore.TABLE_RESOURCE_ROOT)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0ed13d6e57843477579060f21b0d3cb14098abe",
      "candidate_info": {
        "commit_hash": "a0ed13d6e57843477579060f21b0d3cb14098abe",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/a0ed13d6e57843477579060f21b0d3cb14098abe",
        "files": [
          "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java"
        ],
        "message": "KYLIN-4896 Optimize the process of writing big resource files into HDFS.\n\n(cherry picked from commit 985ff834a2eefc536a3bb2e516ab36d8f5667893)",
        "before_after_code_files": [
          "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java||storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java||storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java": [
          "File: storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java -> storage-hbase/src/main/java/org/apache/kylin/storage/hbase/HBaseResourceStore.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:         tableName = metadataUrl.getIdentifier();",
          "88:         createHTableIfNeeded(tableName);",
          "91:                 .parseInt(getConnection().getConfiguration().get(\"hbase.client.keyvalue.maxsize\", \"10485760\"));",
          "92:     }",
          "94:     Connection getConnection() throws IOException {",
          "",
          "[Removed Lines]",
          "90:         kvSizeLimit = Integer",
          "",
          "[Added Lines]",
          "90:         int kvSizeLimitActual = Integer",
          "92:         kvSizeLimit = kvSizeLimitActual > 10485760 ? kvSizeLimitActual : 10485760;",
          "93:         logger.debug(\"hbase.client.keyvalue.maxsize is {}, kvSizeLimit is set to {}\", kvSizeLimitActual, kvSizeLimit);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "323:             byte[] bOldTS = oldTS == 0 ? null : Bytes.toBytes(oldTS);",
          "325:             if (content.length > kvSizeLimit) {",
          "326:                 pushdown = writePushdown(resPath, ContentWriter.create(content));",
          "327:                 content = BytesUtil.EMPTY_BYTE_ARRAY;",
          "328:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:                 logger.info(\"Length of content exceeds the limit of {} bytes, push down {} to HDFS\", kvSizeLimit, resPath);",
          "",
          "---------------"
        ]
      }
    }
  ]
}