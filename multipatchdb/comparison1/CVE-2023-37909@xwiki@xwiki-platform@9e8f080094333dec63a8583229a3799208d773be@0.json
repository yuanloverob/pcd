{
  "cve_id": "CVE-2023-37909",
  "cve_desc": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Starting in version 5.1-rc-1 and prior to versions 14.10.8 and 15.3-rc-1, any user who can edit their own user profile can execute arbitrary script macros including Groovy and Python macros that allow remote code execution including unrestricted read and write access to all wiki contents. This has been patched in XWiki 14.10.8 and 15.3-rc-1 by adding proper escaping. As a workaround, the patch can be manually applied to the document `Menu.UIExtensionSheet`; only three lines need to be changed.",
  "repo": "xwiki/xwiki-platform",
  "patch_hash": "9e8f080094333dec63a8583229a3799208d773be",
  "patch_info": {
    "commit_hash": "9e8f080094333dec63a8583229a3799208d773be",
    "repo": "xwiki/xwiki-platform",
    "commit_url": "https://github.com/xwiki/xwiki-platform/commit/9e8f080094333dec63a8583229a3799208d773be",
    "files": [
      "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/pom.xml",
      "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/main/resources/Menu/UIExtensionSheet.xml",
      "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
    ],
    "message": "XWIKI-20746: Improve escaping in Menu.UIExtensionSheet\n\n* Add a page test",
    "before_after_code_files": [
      "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
    ]
  },
  "patch_diff": {
    "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java": [
      "File: xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java -> xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: package org.xwiki.menu;",
      "22: import org.jsoup.Jsoup;",
      "23: import org.jsoup.nodes.Document;",
      "24: import org.jsoup.nodes.Element;",
      "25: import org.jsoup.select.Elements;",
      "26: import org.junit.jupiter.api.Test;",
      "27: import org.xwiki.model.reference.DocumentReference;",
      "28: import org.xwiki.test.annotation.ComponentList;",
      "29: import org.xwiki.test.page.HTML50ComponentList;",
      "30: import org.xwiki.test.page.PageTest;",
      "31: import org.xwiki.test.page.XWikiSyntax21ComponentList;",
      "32: import org.xwiki.uiextension.internal.UIExtensionClassDocumentInitializer;",
      "34: import com.xpn.xwiki.doc.XWikiDocument;",
      "35: import com.xpn.xwiki.objects.BaseObject;",
      "37: import static org.junit.jupiter.api.Assertions.assertEquals;",
      "38: import static org.junit.jupiter.api.Assertions.assertNotNull;",
      "45: @ComponentList({",
      "46:     UIExtensionClassDocumentInitializer.class",
      "47: })",
      "48: @HTML50ComponentList",
      "49: @XWikiSyntax21ComponentList",
      "50: class UIExtensionSheetPageTest extends PageTest",
      "51: {",
      "52:     private static final DocumentReference SHEET_REFERENCE = new DocumentReference(\"xwiki\", \"Menu\", \"UIExtensionSheet\");",
      "54:     @Test",
      "55:     void escaping() throws Exception",
      "56:     {",
      "57:         DocumentReference testDocumentReference = new DocumentReference(\"xwiki\", \"space\", \"test\");",
      "58:         XWikiDocument testDocument = new XWikiDocument(testDocumentReference);",
      "59:         BaseObject uiExtension =",
      "60:             testDocument.newXObject(UIExtensionClassDocumentInitializer.UI_EXTENSION_CLASS, this.context);",
      "61:         String extensionID = \"\\\"{{/html}}</option>\";",
      "62:         String contentValue = \"content +\" + extensionID;",
      "63:         uiExtension.setLargeStringValue(UIExtensionClassDocumentInitializer.CONTENT_PROPERTY, contentValue);",
      "64:         uiExtension.setStringValue(UIExtensionClassDocumentInitializer.EXTENSION_POINT_ID_PROPERTY, extensionID);",
      "65:         this.xwiki.saveDocument(testDocument, this.context);",
      "67:         this.context.setDoc(testDocument);",
      "68:         this.context.setAction(\"edit\");",
      "70:         XWikiDocument sheet = loadPage(SHEET_REFERENCE);",
      "71:         String htmlContent = sheet.getRenderedContent(this.context);",
      "72:         Document renderedDocument = Jsoup.parse(htmlContent);",
      "74:         Element selectElement = renderedDocument.getElementById(\"XWiki.UIExtensionClass_0_extensionPointId\");",
      "75:         assertNotNull(selectElement);",
      "76:         Elements optionElement = selectElement.getElementsByAttributeValue(\"value\", extensionID);",
      "77:         assertEquals(1, optionElement.size());",
      "78:         String extensionIdTitle = \"menu.uix.extensionPoint.value.\" + extensionID;",
      "79:         assertEquals(extensionIdTitle, optionElement.get(0).text());",
      "81:         selectElement = renderedDocument.getElementById(\"XWiki.UIExtensionClass_0_content\");",
      "82:         assertNotNull(selectElement);",
      "83:         optionElement = selectElement.getElementsByAttributeValue(\"value\", contentValue);",
      "84:         assertEquals(1, optionElement.size());",
      "85:         assertEquals(extensionIdTitle, optionElement.get(0).text());",
      "86:     }",
      "87: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cadfe8ef91aaa398c09fa61e39a02034fa7bb364",
      "candidate_info": {
        "commit_hash": "cadfe8ef91aaa398c09fa61e39a02034fa7bb364",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/cadfe8ef91aaa398c09fa61e39a02034fa7bb364",
        "files": [
          "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/pom.xml",
          "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/main/resources/Menu/UIExtensionSheet.xml",
          "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
        ],
        "message": "XWIKI-20746: Improve escaping in Menu.UIExtensionSheet\n\n* Add a page test\n\n(cherry picked from commit 9e8f080094333dec63a8583229a3799208d773be)",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java||xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java": [
          "File: xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java -> xwiki-platform-core/xwiki-platform-menu/xwiki-platform-menu-ui/src/test/java/org/xwiki/menu/UIExtensionSheetPageTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.menu;",
          "22: import org.jsoup.Jsoup;",
          "23: import org.jsoup.nodes.Document;",
          "24: import org.jsoup.nodes.Element;",
          "25: import org.jsoup.select.Elements;",
          "26: import org.junit.jupiter.api.Test;",
          "27: import org.xwiki.model.reference.DocumentReference;",
          "28: import org.xwiki.test.annotation.ComponentList;",
          "29: import org.xwiki.test.page.HTML50ComponentList;",
          "30: import org.xwiki.test.page.PageTest;",
          "31: import org.xwiki.test.page.XWikiSyntax21ComponentList;",
          "32: import org.xwiki.uiextension.internal.UIExtensionClassDocumentInitializer;",
          "34: import com.xpn.xwiki.doc.XWikiDocument;",
          "35: import com.xpn.xwiki.objects.BaseObject;",
          "37: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "38: import static org.junit.jupiter.api.Assertions.assertNotNull;",
          "45: @ComponentList({",
          "46:     UIExtensionClassDocumentInitializer.class",
          "47: })",
          "48: @HTML50ComponentList",
          "49: @XWikiSyntax21ComponentList",
          "50: class UIExtensionSheetPageTest extends PageTest",
          "51: {",
          "52:     private static final DocumentReference SHEET_REFERENCE = new DocumentReference(\"xwiki\", \"Menu\", \"UIExtensionSheet\");",
          "54:     @Test",
          "55:     void escaping() throws Exception",
          "56:     {",
          "57:         DocumentReference testDocumentReference = new DocumentReference(\"xwiki\", \"space\", \"test\");",
          "58:         XWikiDocument testDocument = new XWikiDocument(testDocumentReference);",
          "59:         BaseObject uiExtension =",
          "60:             testDocument.newXObject(UIExtensionClassDocumentInitializer.UI_EXTENSION_CLASS, this.context);",
          "61:         String extensionID = \"\\\"{{/html}}</option>\";",
          "62:         String contentValue = \"content +\" + extensionID;",
          "63:         uiExtension.setLargeStringValue(UIExtensionClassDocumentInitializer.CONTENT_PROPERTY, contentValue);",
          "64:         uiExtension.setStringValue(UIExtensionClassDocumentInitializer.EXTENSION_POINT_ID_PROPERTY, extensionID);",
          "65:         this.xwiki.saveDocument(testDocument, this.context);",
          "67:         this.context.setDoc(testDocument);",
          "68:         this.context.setAction(\"edit\");",
          "70:         XWikiDocument sheet = loadPage(SHEET_REFERENCE);",
          "71:         String htmlContent = sheet.getRenderedContent(this.context);",
          "72:         Document renderedDocument = Jsoup.parse(htmlContent);",
          "74:         Element selectElement = renderedDocument.getElementById(\"XWiki.UIExtensionClass_0_extensionPointId\");",
          "75:         assertNotNull(selectElement);",
          "76:         Elements optionElement = selectElement.getElementsByAttributeValue(\"value\", extensionID);",
          "77:         assertEquals(1, optionElement.size());",
          "78:         String extensionIdTitle = \"menu.uix.extensionPoint.value.\" + extensionID;",
          "79:         assertEquals(extensionIdTitle, optionElement.get(0).text());",
          "81:         selectElement = renderedDocument.getElementById(\"XWiki.UIExtensionClass_0_content\");",
          "82:         assertNotNull(selectElement);",
          "83:         optionElement = selectElement.getElementsByAttributeValue(\"value\", contentValue);",
          "84:         assertEquals(1, optionElement.size());",
          "85:         assertEquals(extensionIdTitle, optionElement.get(0).text());",
          "86:     }",
          "87: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}