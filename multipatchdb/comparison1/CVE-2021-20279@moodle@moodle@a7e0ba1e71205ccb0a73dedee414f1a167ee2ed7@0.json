{
  "cve_id": "CVE-2021-20279",
  "cve_desc": "The ID number user profile field required additional sanitizing to prevent a stored XSS risk in moodle before 3.10.2, 3.9.5, 3.8.8, 3.5.17.",
  "repo": "moodle/moodle",
  "patch_hash": "a7e0ba1e71205ccb0a73dedee414f1a167ee2ed7",
  "patch_info": {
    "commit_hash": "a7e0ba1e71205ccb0a73dedee414f1a167ee2ed7",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/a7e0ba1e71205ccb0a73dedee414f1a167ee2ed7",
    "files": [
      "admin/tool/uploaduser/user_form.php",
      "blocks/activity_results/block_activity_results.php",
      "grade/report/user/externallib.php",
      "lib/myprofilelib.php"
    ],
    "message": "MDL-65552 user: escape idnumber field on output.\n\nThis commit also corrects parameter definition of the field to\nmatch core_user.",
    "before_after_code_files": [
      "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
      "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
      "grade/report/user/externallib.php||grade/report/user/externallib.php",
      "lib/myprofilelib.php||lib/myprofilelib.php"
    ]
  },
  "patch_diff": {
    "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php": [
      "File: admin/tool/uploaduser/user_form.php -> admin/tool/uploaduser/user_form.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "305:         $mform->setAdvanced('url');",
      "307:         $mform->addElement('text', 'idnumber', get_string('idnumber'), 'maxlength=\"255\" size=\"25\"');",
      "309:         $mform->setForceLtr('idnumber');",
      "311:         $mform->addElement('text', 'institution', get_string('institution'), 'maxlength=\"255\" size=\"25\"');",
      "",
      "[Removed Lines]",
      "308:         $mform->setType('idnumber', PARAM_NOTAGS);",
      "",
      "[Added Lines]",
      "308:         $mform->setType('idnumber', core_user::get_property_type('idnumber'));",
      "",
      "---------------"
    ],
    "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php": [
      "File: blocks/activity_results/block_activity_results.php -> blocks/activity_results/block_activity_results.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "512:                 $fields = implode(',', $fields);",
      "513:                 $users = $DB->get_records_list('user', 'id', $userids, '', $fields);",
      "516:                 if ($activity->gradetype == GRADE_TYPE_SCALE) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "516:                 $extrafields = get_extra_user_fields($this->context);",
      "517:                 $canviewidnumber = (array_search('idnumber', $extrafields) !== false);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "537:                     }",
      "538:                     $this->content->text .= '</h6></caption><colgroup class=\"number\" />';",
      "539:                     $this->content->text .= '<colgroup class=\"name\" /><colgroup class=\"grade\" /><tbody>';",
      "540:                     foreach ($best as $userid => $gradeid) {",
      "541:                         switch ($nameformat) {",
      "542:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
      "544:                             break;",
      "545:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
      "546:                                 $thisname = get_string('user');",
      "",
      "[Removed Lines]",
      "543:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
      "",
      "[Added Lines]",
      "548:                                 $thisname = get_string('user');",
      "549:                                 if ($canviewidnumber) {",
      "550:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
      "551:                                 }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "603:                     foreach ($worst as $userid => $gradeid) {",
      "604:                         switch ($nameformat) {",
      "605:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
      "607:                             break;",
      "608:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
      "609:                                 $thisname = get_string('user');",
      "",
      "[Removed Lines]",
      "606:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
      "",
      "[Added Lines]",
      "614:                                 $thisname = get_string('user');",
      "615:                                 if ($canviewidnumber) {",
      "616:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
      "617:                                 };",
      "",
      "---------------"
    ],
    "grade/report/user/externallib.php||grade/report/user/externallib.php": [
      "File: grade/report/user/externallib.php -> grade/report/user/externallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "480:                             'courseid' => new external_value(PARAM_INT, 'course id'),",
      "481:                             'userid'   => new external_value(PARAM_INT, 'user id'),",
      "482:                             'userfullname' => new external_value(PARAM_TEXT, 'user fullname'),",
      "484:                             'maxdepth'   => new external_value(PARAM_INT, 'table max depth (needed for printing it)'),",
      "485:                             'gradeitems' => new external_multiple_structure(",
      "486:                                 new external_single_structure(",
      "",
      "[Removed Lines]",
      "483:                             'useridnumber' => new external_value(PARAM_TEXT, 'user idnumber'),",
      "",
      "[Added Lines]",
      "483:                             'useridnumber' => new external_value(",
      "484:                                 core_user::get_property_type('idnumber'), 'user idnumber'),",
      "",
      "---------------"
    ],
    "lib/myprofilelib.php||lib/myprofilelib.php": [
      "File: lib/myprofilelib.php -> lib/myprofilelib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "220:     if (isset($identityfields['idnumber']) && $user->idnumber) {",
      "221:         $node = new core_user\\output\\myprofile\\node('contact', 'idnumber', get_string('idnumber'), null, null,",
      "223:         $tree->add_node($node);",
      "224:     }",
      "",
      "[Removed Lines]",
      "222:             $user->idnumber);",
      "",
      "[Added Lines]",
      "222:             s($user->idnumber));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1cdee638213ac1dfc78ef8b2de38efc60fed84dc",
      "candidate_info": {
        "commit_hash": "1cdee638213ac1dfc78ef8b2de38efc60fed84dc",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1cdee638213ac1dfc78ef8b2de38efc60fed84dc",
        "files": [
          "grade/report/user/externallib.php",
          "grade/report/user/lib.php",
          "grade/report/user/tests/externallib_test.php"
        ],
        "message": "MDL-69486 webservices: Added user and grade idnumber to grade items",
        "before_after_code_files": [
          "grade/report/user/externallib.php||grade/report/user/externallib.php",
          "grade/report/user/lib.php||grade/report/user/lib.php",
          "grade/report/user/tests/externallib_test.php||grade/report/user/tests/externallib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "grade/report/user/externallib.php||grade/report/user/externallib.php"
          ],
          "candidate": [
            "grade/report/user/externallib.php||grade/report/user/externallib.php"
          ]
        }
      },
      "candidate_diff": {
        "grade/report/user/externallib.php||grade/report/user/externallib.php": [
          "File: grade/report/user/externallib.php -> grade/report/user/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:                 'courseid'      => $course->id,",
          "166:                 'userid'        => $user->id,",
          "167:                 'userfullname'  => fullname($user),",
          "168:                 'maxdepth'      => $report->maxdepth,",
          "169:             );",
          "170:             if ($tabledata) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:                 'useridnumber'  => $user->idnumber,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:                     'courseid'      => $course->id,",
          "192:                     'userid'        => $currentuser->id,",
          "193:                     'userfullname'  => fullname($currentuser),",
          "194:                     'maxdepth'      => $report->maxdepth,",
          "195:                 );",
          "196:                 if ($tabledata) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195:                     'useridnumber'  => $currentuser->idnumber,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "478:                             'courseid' => new external_value(PARAM_INT, 'course id'),",
          "479:                             'userid'   => new external_value(PARAM_INT, 'user id'),",
          "480:                             'userfullname' => new external_value(PARAM_TEXT, 'user fullname'),",
          "481:                             'maxdepth'   => new external_value(PARAM_INT, 'table max depth (needed for printing it)'),",
          "482:                             'gradeitems' => new external_multiple_structure(",
          "483:                                 new external_single_structure(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:                             'useridnumber' => new external_value(PARAM_TEXT, 'user idnumber'),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "488:                                         'itemmodule' => new external_value(PARAM_PLUGIN, 'Grade item module'),",
          "489:                                         'iteminstance' => new external_value(PARAM_INT, 'Grade item instance'),",
          "490:                                         'itemnumber' => new external_value(PARAM_INT, 'Grade item item number'),",
          "491:                                         'categoryid' => new external_value(PARAM_INT, 'Grade item category id'),",
          "492:                                         'outcomeid' => new external_value(PARAM_INT, 'Outcome id'),",
          "493:                                         'scaleid' => new external_value(PARAM_INT, 'Scale id'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494:                                         'idnumber' => new external_value(PARAM_TEXT, 'Grade item idnumber'),",
          "",
          "---------------"
        ],
        "grade/report/user/lib.php||grade/report/user/lib.php": [
          "File: grade/report/user/lib.php -> grade/report/user/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "517:                 $gradeitemdata['itemmodule'] = $grade_object->itemmodule;",
          "518:                 $gradeitemdata['iteminstance'] = $grade_object->iteminstance;",
          "519:                 $gradeitemdata['itemnumber'] = $grade_object->itemnumber;",
          "520:                 $gradeitemdata['categoryid'] = $grade_object->categoryid;",
          "521:                 $gradeitemdata['outcomeid'] = $grade_object->outcomeid;",
          "522:                 $gradeitemdata['scaleid'] = $grade_object->outcomeid;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "520:                 $gradeitemdata['idnumber'] = $grade_object->idnumber;",
          "",
          "---------------"
        ],
        "grade/report/user/tests/externallib_test.php||grade/report/user/tests/externallib_test.php": [
          "File: grade/report/user/tests/externallib_test.php -> grade/report/user/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         $course = $this->getDataGenerator()->create_course(array('groupmode' => SEPARATEGROUPS, 'groupmodeforce' => 1));",
          "54:         $studentrole = $DB->get_record('role', array('shortname' => 'student'));",
          "56:         $this->getDataGenerator()->enrol_user($student1->id, $course->id, $studentrole->id);",
          "58:         $student2 = $this->getDataGenerator()->create_user();",
          "",
          "[Removed Lines]",
          "55:         $student1 = $this->getDataGenerator()->create_user();",
          "",
          "[Added Lines]",
          "55:         $student1 = $this->getDataGenerator()->create_user(array('idnumber' => 'testidnumber'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:         $modcontext = get_coursemodule_from_instance('assign', $assignment->id, $course->id);",
          "77:         $assignment->cmidnumber = $modcontext->id;",
          "81:         $studentgrades = array($student1->id => $student1grade, $student2->id => $student2grade);",
          "82:         assign_grade_item_update($assignment, $studentgrades);",
          "",
          "[Removed Lines]",
          "79:         $student1grade = array('userid' => $student1->id, 'rawgrade' => $s1grade);",
          "80:         $student2grade = array('userid' => $student2->id, 'rawgrade' => $s2grade);",
          "",
          "[Added Lines]",
          "79:         $student1grade = array('userid' => $student1->id, 'rawgrade' => $s1grade, 'idnumber' => 'testidnumber1');",
          "80:         $student2grade = array('userid' => $student2->id, 'rawgrade' => $s2grade, 'idnumber' => 'testidnumber2');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "348:         $this->assertEquals($course->id, $studentgrades['usergrades'][0]['courseid']);",
          "349:         $this->assertEquals($student1->id, $studentgrades['usergrades'][0]['userid']);",
          "350:         $this->assertEquals($assignment->name, $studentgrades['usergrades'][0]['gradeitems'][0]['itemname']);",
          "351:         $this->assertEquals('mod', $studentgrades['usergrades'][0]['gradeitems'][0]['itemtype']);",
          "352:         $this->assertEquals('assign', $studentgrades['usergrades'][0]['gradeitems'][0]['itemmodule']);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:         $this->assertEquals($student1->idnumber, $studentgrades['usergrades'][0]['useridnumber']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "373:         $this->assertEquals(2, $studentgrades['usergrades'][0]['gradeitems'][0]['numusers']);",
          "374:         $this->assertEquals(70, $studentgrades['usergrades'][0]['gradeitems'][0]['averageformatted']);",
          "377:         $gradegrade = new grade_grade(array('userid' => $student1->id,",
          "378:                                         'itemid' => $studentgrades['usergrades'][0]['gradeitems'][0]['id']), true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "378:         $this->assertEquals((string) $studentgrades['usergrades'][0]['gradeitems'][0]['cmid'],",
          "379:             $studentgrades['usergrades'][0]['gradeitems'][0]['idnumber']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "551680435a57cc36b15a9ca76ef119065cde9a42",
      "candidate_info": {
        "commit_hash": "551680435a57cc36b15a9ca76ef119065cde9a42",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/551680435a57cc36b15a9ca76ef119065cde9a42",
        "files": [
          "admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php"
        ],
        "message": "MDL-65552 user: escape idnumber field on output.\n\nThis commit also corrects parameter definition of the field to\nmatch core_user.",
        "before_after_code_files": [
          "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php||lib/myprofilelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ],
          "candidate": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php": [
          "File: admin/tool/uploaduser/user_form.php -> admin/tool/uploaduser/user_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:         $mform->setAdvanced('url');",
          "285:         $mform->addElement('text', 'idnumber', get_string('idnumber'), 'maxlength=\"255\" size=\"25\"');",
          "287:         $mform->setForceLtr('idnumber');",
          "289:         $mform->addElement('text', 'institution', get_string('institution'), 'maxlength=\"255\" size=\"25\"');",
          "",
          "[Removed Lines]",
          "286:         $mform->setType('idnumber', PARAM_NOTAGS);",
          "",
          "[Added Lines]",
          "286:         $mform->setType('idnumber', core_user::get_property_type('idnumber'));",
          "",
          "---------------"
        ],
        "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php": [
          "File: blocks/activity_results/block_activity_results.php -> blocks/activity_results/block_activity_results.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:                 $fields = implode(',', $fields);",
          "513:                 $users = $DB->get_records_list('user', 'id', $userids, '', $fields);",
          "516:                 if ($activity->gradetype == GRADE_TYPE_SCALE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:                 $extrafields = get_extra_user_fields($this->context);",
          "517:                 $canviewidnumber = (array_search('idnumber', $extrafields) !== false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537:                     }",
          "538:                     $this->content->text .= '</caption><colgroup class=\"number\" />';",
          "539:                     $this->content->text .= '<colgroup class=\"name\" /><colgroup class=\"grade\" /><tbody>';",
          "540:                     foreach ($best as $userid => $gradeid) {",
          "541:                         switch ($nameformat) {",
          "542:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "544:                             break;",
          "545:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "546:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "543:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "548:                                 $thisname = get_string('user');",
          "549:                                 if ($canviewidnumber) {",
          "550:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "551:                                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "603:                     foreach ($worst as $userid => $gradeid) {",
          "604:                         switch ($nameformat) {",
          "605:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "607:                             break;",
          "608:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "609:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "606:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "614:                                 $thisname = get_string('user');",
          "615:                                 if ($canviewidnumber) {",
          "616:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "617:                                 };",
          "",
          "---------------"
        ],
        "lib/myprofilelib.php||lib/myprofilelib.php": [
          "File: lib/myprofilelib.php -> lib/myprofilelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "206:     if (isset($identityfields['idnumber']) && $user->idnumber) {",
          "207:         $node = new core_user\\output\\myprofile\\node('contact', 'idnumber', get_string('idnumber'), null, null,",
          "209:         $tree->add_node($node);",
          "210:     }",
          "",
          "[Removed Lines]",
          "208:             $user->idnumber);",
          "",
          "[Added Lines]",
          "208:             s($user->idnumber));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74706d5f3082b3a050783fe9f557947ffd17fa9a",
      "candidate_info": {
        "commit_hash": "74706d5f3082b3a050783fe9f557947ffd17fa9a",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/74706d5f3082b3a050783fe9f557947ffd17fa9a",
        "files": [
          "admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php"
        ],
        "message": "MDL-65552 user: escape idnumber field on output.\n\nThis commit also corrects parameter definition of the field to\nmatch core_user.",
        "before_after_code_files": [
          "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php||lib/myprofilelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ],
          "candidate": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php": [
          "File: admin/tool/uploaduser/user_form.php -> admin/tool/uploaduser/user_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:         $mform->setAdvanced('url');",
          "295:         $mform->addElement('text', 'idnumber', get_string('idnumber'), 'maxlength=\"255\" size=\"25\"');",
          "297:         $mform->setForceLtr('idnumber');",
          "299:         $mform->addElement('text', 'institution', get_string('institution'), 'maxlength=\"255\" size=\"25\"');",
          "",
          "[Removed Lines]",
          "296:         $mform->setType('idnumber', PARAM_NOTAGS);",
          "",
          "[Added Lines]",
          "296:         $mform->setType('idnumber', core_user::get_property_type('idnumber'));",
          "",
          "---------------"
        ],
        "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php": [
          "File: blocks/activity_results/block_activity_results.php -> blocks/activity_results/block_activity_results.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:                 $fields = implode(',', $fields);",
          "513:                 $users = $DB->get_records_list('user', 'id', $userids, '', $fields);",
          "516:                 if ($activity->gradetype == GRADE_TYPE_SCALE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:                 $extrafields = get_extra_user_fields($this->context);",
          "517:                 $canviewidnumber = (array_search('idnumber', $extrafields) !== false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537:                     }",
          "538:                     $this->content->text .= '</h6></caption><colgroup class=\"number\" />';",
          "539:                     $this->content->text .= '<colgroup class=\"name\" /><colgroup class=\"grade\" /><tbody>';",
          "540:                     foreach ($best as $userid => $gradeid) {",
          "541:                         switch ($nameformat) {",
          "542:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "544:                             break;",
          "545:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "546:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "543:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "548:                                 $thisname = get_string('user');",
          "549:                                 if ($canviewidnumber) {",
          "550:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "551:                                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "603:                     foreach ($worst as $userid => $gradeid) {",
          "604:                         switch ($nameformat) {",
          "605:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "607:                             break;",
          "608:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "609:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "606:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "614:                                 $thisname = get_string('user');",
          "615:                                 if ($canviewidnumber) {",
          "616:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "617:                                 };",
          "",
          "---------------"
        ],
        "lib/myprofilelib.php||lib/myprofilelib.php": [
          "File: lib/myprofilelib.php -> lib/myprofilelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:     if (isset($identityfields['idnumber']) && $user->idnumber) {",
          "205:         $node = new core_user\\output\\myprofile\\node('contact', 'idnumber', get_string('idnumber'), null, null,",
          "207:         $tree->add_node($node);",
          "208:     }",
          "",
          "[Removed Lines]",
          "206:             $user->idnumber);",
          "",
          "[Added Lines]",
          "206:             s($user->idnumber));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2474bc765f0714f3998f1e5da352364936451c69",
      "candidate_info": {
        "commit_hash": "2474bc765f0714f3998f1e5da352364936451c69",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/2474bc765f0714f3998f1e5da352364936451c69",
        "files": [
          "admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php",
          "grade/report/user/externallib.php",
          "lib/myprofilelib.php"
        ],
        "message": "MDL-65552 user: escape idnumber field on output.\n\nThis commit also corrects parameter definition of the field to\nmatch core_user.",
        "before_after_code_files": [
          "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
          "grade/report/user/externallib.php||grade/report/user/externallib.php",
          "lib/myprofilelib.php||lib/myprofilelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "grade/report/user/externallib.php||grade/report/user/externallib.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ],
          "candidate": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "grade/report/user/externallib.php||grade/report/user/externallib.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php": [
          "File: admin/tool/uploaduser/user_form.php -> admin/tool/uploaduser/user_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:         $mform->setAdvanced('url');",
          "307:         $mform->addElement('text', 'idnumber', get_string('idnumber'), 'maxlength=\"255\" size=\"25\"');",
          "309:         $mform->setForceLtr('idnumber');",
          "311:         $mform->addElement('text', 'institution', get_string('institution'), 'maxlength=\"255\" size=\"25\"');",
          "",
          "[Removed Lines]",
          "308:         $mform->setType('idnumber', PARAM_NOTAGS);",
          "",
          "[Added Lines]",
          "308:         $mform->setType('idnumber', core_user::get_property_type('idnumber'));",
          "",
          "---------------"
        ],
        "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php": [
          "File: blocks/activity_results/block_activity_results.php -> blocks/activity_results/block_activity_results.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:                 $fields = implode(',', $fields);",
          "513:                 $users = $DB->get_records_list('user', 'id', $userids, '', $fields);",
          "516:                 if ($activity->gradetype == GRADE_TYPE_SCALE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:                 $extrafields = get_extra_user_fields($this->context);",
          "517:                 $canviewidnumber = (array_search('idnumber', $extrafields) !== false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537:                     }",
          "538:                     $this->content->text .= '</h6></caption><colgroup class=\"number\" />';",
          "539:                     $this->content->text .= '<colgroup class=\"name\" /><colgroup class=\"grade\" /><tbody>';",
          "540:                     foreach ($best as $userid => $gradeid) {",
          "541:                         switch ($nameformat) {",
          "542:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "544:                             break;",
          "545:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "546:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "543:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "548:                                 $thisname = get_string('user');",
          "549:                                 if ($canviewidnumber) {",
          "550:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "551:                                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "603:                     foreach ($worst as $userid => $gradeid) {",
          "604:                         switch ($nameformat) {",
          "605:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "607:                             break;",
          "608:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "609:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "606:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "614:                                 $thisname = get_string('user');",
          "615:                                 if ($canviewidnumber) {",
          "616:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "617:                                 };",
          "",
          "---------------"
        ],
        "grade/report/user/externallib.php||grade/report/user/externallib.php": [
          "File: grade/report/user/externallib.php -> grade/report/user/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:                             'courseid' => new external_value(PARAM_INT, 'course id'),",
          "481:                             'userid'   => new external_value(PARAM_INT, 'user id'),",
          "482:                             'userfullname' => new external_value(PARAM_TEXT, 'user fullname'),",
          "484:                             'maxdepth'   => new external_value(PARAM_INT, 'table max depth (needed for printing it)'),",
          "485:                             'gradeitems' => new external_multiple_structure(",
          "486:                                 new external_single_structure(",
          "",
          "[Removed Lines]",
          "483:                             'useridnumber' => new external_value(PARAM_TEXT, 'user idnumber'),",
          "",
          "[Added Lines]",
          "483:                             'useridnumber' => new external_value(",
          "484:                                 core_user::get_property_type('idnumber'), 'user idnumber'),",
          "",
          "---------------"
        ],
        "lib/myprofilelib.php||lib/myprofilelib.php": [
          "File: lib/myprofilelib.php -> lib/myprofilelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:     if (isset($identityfields['idnumber']) && $user->idnumber) {",
          "221:         $node = new core_user\\output\\myprofile\\node('contact', 'idnumber', get_string('idnumber'), null, null,",
          "223:         $tree->add_node($node);",
          "224:     }",
          "",
          "[Removed Lines]",
          "222:             $user->idnumber);",
          "",
          "[Added Lines]",
          "222:             s($user->idnumber));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7afca3b34ae8fc1984b95d66e30afa6011c433db",
      "candidate_info": {
        "commit_hash": "7afca3b34ae8fc1984b95d66e30afa6011c433db",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/7afca3b34ae8fc1984b95d66e30afa6011c433db",
        "files": [
          "admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php"
        ],
        "message": "MDL-65552 user: escape idnumber field on output.\n\nThis commit also corrects parameter definition of the field to\nmatch core_user.",
        "before_after_code_files": [
          "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
          "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
          "lib/myprofilelib.php||lib/myprofilelib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ],
          "candidate": [
            "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php",
            "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php",
            "lib/myprofilelib.php||lib/myprofilelib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/uploaduser/user_form.php||admin/tool/uploaduser/user_form.php": [
          "File: admin/tool/uploaduser/user_form.php -> admin/tool/uploaduser/user_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:         $mform->setAdvanced('url');",
          "295:         $mform->addElement('text', 'idnumber', get_string('idnumber'), 'maxlength=\"255\" size=\"25\"');",
          "297:         $mform->setForceLtr('idnumber');",
          "299:         $mform->addElement('text', 'institution', get_string('institution'), 'maxlength=\"255\" size=\"25\"');",
          "",
          "[Removed Lines]",
          "296:         $mform->setType('idnumber', PARAM_NOTAGS);",
          "",
          "[Added Lines]",
          "296:         $mform->setType('idnumber', core_user::get_property_type('idnumber'));",
          "",
          "---------------"
        ],
        "blocks/activity_results/block_activity_results.php||blocks/activity_results/block_activity_results.php": [
          "File: blocks/activity_results/block_activity_results.php -> blocks/activity_results/block_activity_results.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:                 $fields = implode(',', $fields);",
          "513:                 $users = $DB->get_records_list('user', 'id', $userids, '', $fields);",
          "516:                 if ($activity->gradetype == GRADE_TYPE_SCALE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "516:                 $extrafields = get_extra_user_fields($this->context);",
          "517:                 $canviewidnumber = (array_search('idnumber', $extrafields) !== false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537:                     }",
          "538:                     $this->content->text .= '</h6></caption><colgroup class=\"number\" />';",
          "539:                     $this->content->text .= '<colgroup class=\"name\" /><colgroup class=\"grade\" /><tbody>';",
          "540:                     foreach ($best as $userid => $gradeid) {",
          "541:                         switch ($nameformat) {",
          "542:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "544:                             break;",
          "545:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "546:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "543:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "548:                                 $thisname = get_string('user');",
          "549:                                 if ($canviewidnumber) {",
          "550:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "551:                                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "603:                     foreach ($worst as $userid => $gradeid) {",
          "604:                         switch ($nameformat) {",
          "605:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ID:",
          "607:                             break;",
          "608:                             case B_ACTIVITYRESULTS_NAME_FORMAT_ANON:",
          "609:                                 $thisname = get_string('user');",
          "",
          "[Removed Lines]",
          "606:                                 $thisname = get_string('user').' '.$users[$userid]->idnumber;",
          "",
          "[Added Lines]",
          "614:                                 $thisname = get_string('user');",
          "615:                                 if ($canviewidnumber) {",
          "616:                                     $thisname .= ' ' . s($users[$userid]->idnumber);",
          "617:                                 };",
          "",
          "---------------"
        ],
        "lib/myprofilelib.php||lib/myprofilelib.php": [
          "File: lib/myprofilelib.php -> lib/myprofilelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:     if (isset($identityfields['idnumber']) && $user->idnumber) {",
          "211:         $node = new core_user\\output\\myprofile\\node('contact', 'idnumber', get_string('idnumber'), null, null,",
          "213:         $tree->add_node($node);",
          "214:     }",
          "",
          "[Removed Lines]",
          "212:             $user->idnumber);",
          "",
          "[Added Lines]",
          "212:             s($user->idnumber));",
          "",
          "---------------"
        ]
      }
    }
  ]
}