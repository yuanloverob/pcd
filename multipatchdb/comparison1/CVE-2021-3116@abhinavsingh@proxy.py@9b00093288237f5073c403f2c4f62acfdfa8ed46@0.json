{
  "cve_id": "CVE-2021-3116",
  "cve_desc": "before_upstream_connection in AuthPlugin in http/proxy/auth.py in proxy.py before 2.3.1 accepts incorrect Proxy-Authorization header data because of a boolean confusion (and versus or).",
  "repo": "abhinavsingh/proxy.py",
  "patch_hash": "9b00093288237f5073c403f2c4f62acfdfa8ed46",
  "patch_info": {
    "commit_hash": "9b00093288237f5073c403f2c4f62acfdfa8ed46",
    "repo": "abhinavsingh/proxy.py",
    "commit_url": "https://github.com/abhinavsingh/proxy.py/pull/482/commits/9b00093288237f5073c403f2c4f62acfdfa8ed46",
    "files": [
      "proxy/http/proxy/auth.py"
    ],
    "message": "Fix basic auth condition",
    "before_after_code_files": [
      "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py"
    ]
  },
  "patch_diff": {
    "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py": [
      "File: proxy/http/proxy/auth.py -> proxy/http/proxy/auth.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "35:                 raise ProxyAuthenticationFailed()",
      "36:             parts = request.headers[b'proxy-authorization'][1].split()",
      "37:             if len(parts) != 2 \\",
      "40:                 raise ProxyAuthenticationFailed()",
      "41:         return request",
      "",
      "[Removed Lines]",
      "38:                     and parts[0].lower() != b'basic' \\",
      "39:                     and parts[1] != self.flags.auth_code:",
      "",
      "[Added Lines]",
      "38:                     or parts[0].lower() != b'basic' \\",
      "39:                     or parts[1] != self.flags.auth_code:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bff171ec26d826ae1d22d2466eaf9d8bdbf059d3",
      "candidate_info": {
        "commit_hash": "bff171ec26d826ae1d22d2466eaf9d8bdbf059d3",
        "repo": "abhinavsingh/proxy.py",
        "commit_url": "https://github.com/abhinavsingh/proxy.py/commit/bff171ec26d826ae1d22d2466eaf9d8bdbf059d3",
        "files": [
          "README.md",
          "proxy/common/version.py",
          "proxy/http/proxy/auth.py",
          "setup.py"
        ],
        "message": "Fix basic auth condition (#482)\n\n* Fix basic auth condition\n\n* Prepare for v2.3.1",
        "before_after_code_files": [
          "proxy/common/version.py||proxy/common/version.py",
          "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py",
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/abhinavsingh/proxy.py/pull/482"
        ],
        "olp_code_files": {
          "patch": [
            "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py"
          ],
          "candidate": [
            "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py"
          ]
        }
      },
      "candidate_diff": {
        "proxy/common/version.py||proxy/common/version.py": [
          "File: proxy/common/version.py -> proxy/common/version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     :copyright: (c) 2013-present by Abhinav Singh and contributors.",
          "9:     :license: BSD, see LICENSE for more details.",
          "10: \"\"\"",
          "12: __version__ = '.'.join(map(str, VERSION[0:3]))",
          "",
          "[Removed Lines]",
          "11: VERSION = (2, 3, 0)",
          "",
          "[Added Lines]",
          "11: VERSION = (2, 3, 1)",
          "",
          "---------------"
        ],
        "proxy/http/proxy/auth.py||proxy/http/proxy/auth.py": [
          "File: proxy/http/proxy/auth.py -> proxy/http/proxy/auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:                 raise ProxyAuthenticationFailed()",
          "36:             parts = request.headers[b'proxy-authorization'][1].split()",
          "37:             if len(parts) != 2 \\",
          "40:                 raise ProxyAuthenticationFailed()",
          "41:         return request",
          "",
          "[Removed Lines]",
          "38:                     and parts[0].lower() != b'basic' \\",
          "39:                     and parts[1] != self.flags.auth_code:",
          "",
          "[Added Lines]",
          "38:                     or parts[0].lower() != b'basic' \\",
          "39:                     or parts[1] != self.flags.auth_code:",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: \"\"\"",
          "11: from setuptools import setup, find_packages",
          "14: __version__ = '.'.join(map(str, VERSION[0:3]))",
          "15: __description__ = '''\u26a1\u26a1\u26a1Fast, Lightweight, Pluggable, TLS interception capable proxy server",
          "16:     focused on Network monitoring, controls & Application development, testing, debugging.'''",
          "",
          "[Removed Lines]",
          "13: VERSION = (2, 3, 0)",
          "",
          "[Added Lines]",
          "13: VERSION = (2, 3, 1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}