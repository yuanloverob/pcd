{
  "cve_id": "CVE-2019-14881",
  "cve_desc": "A vulnerability was found in moodle 3.7 before 3.7.3, where there is blind XSS reflected in some locations where user email is displayed.",
  "repo": "moodle/moodle",
  "patch_hash": "7455b741c954af3c3e7dfda2972edc1146ea1562",
  "patch_info": {
    "commit_hash": "7455b741c954af3c3e7dfda2972edc1146ea1562",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/7455b741c954af3c3e7dfda2972edc1146ea1562",
    "files": [
      "admin/roles/admins.php",
      "admin/tool/dataprivacy/classes/external.php",
      "admin/user.php",
      "admin/user/user_bulk_cohortadd.php",
      "admin/user/user_bulk_display.php",
      "enrol/locallib.php",
      "grade/report/grader/lib.php",
      "login/index.php",
      "report/security/locallib.php",
      "user/selector/lib.php",
      "webservice/renderer.php"
    ],
    "message": "MDL-66762 user: escape extra/email user fields.",
    "before_after_code_files": [
      "admin/roles/admins.php||admin/roles/admins.php",
      "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
      "admin/user.php||admin/user.php",
      "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php",
      "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php",
      "enrol/locallib.php||enrol/locallib.php",
      "grade/report/grader/lib.php||grade/report/grader/lib.php",
      "login/index.php||login/index.php",
      "report/security/locallib.php||report/security/locallib.php",
      "user/selector/lib.php||user/selector/lib.php",
      "webservice/renderer.php||webservice/renderer.php"
    ]
  },
  "patch_diff": {
    "admin/roles/admins.php||admin/roles/admins.php": [
      "File: admin/roles/admins.php -> admin/roles/admins.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: }",
      "38: $admisselector = new core_role_admins_existing_selector();",
      "41: $potentialadmisselector = new core_role_admins_potential_selector();",
      "44: if (optional_param('add', false, PARAM_BOOL) and confirm_sesskey()) {",
      "45:     if ($userstoadd = $potentialadmisselector->get_selected_users()) {",
      "46:         $user = reset($userstoadd);",
      "48:         echo $OUTPUT->header();",
      "49:         $yesurl = new moodle_url('/admin/roles/admins.php', array('confirmadd'=>$user->id, 'sesskey'=>sesskey()));",
      "50:         echo $OUTPUT->confirm(get_string('confirmaddadmin', 'core_role', $username), $yesurl, $PAGE->url);",
      "",
      "[Removed Lines]",
      "39: $admisselector->set_extra_fields(array('username', 'email'));",
      "42: $potentialadmisselector->set_extra_fields(array('username', 'email'));",
      "47:         $username = fullname($user) . \" ($user->username, $user->email)\";",
      "",
      "[Added Lines]",
      "44:         $username = $potentialadmisselector->output_user($user);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "58:         if ($USER->id == $user->id) {",
      "60:         } else {",
      "62:             echo $OUTPUT->header();",
      "63:             $yesurl = new moodle_url('/admin/roles/admins.php', array('confirmdel'=>$user->id, 'sesskey'=>sesskey()));",
      "64:             echo $OUTPUT->confirm(get_string('confirmdeladmin', 'core_role', $username), $yesurl, $PAGE->url);",
      "",
      "[Removed Lines]",
      "61:             $username = fullname($user) . \" ($user->username, $user->email)\";",
      "",
      "[Added Lines]",
      "58:             $username = $admisselector->output_user($user);",
      "",
      "---------------"
    ],
    "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php": [
      "File: admin/tool/dataprivacy/classes/external.php -> admin/tool/dataprivacy/classes/external.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "724:             foreach ($extrafields as $extrafield) {",
      "725:                 $useroption->extrafields[] = (object)[",
      "726:                     'name' => $extrafield,",
      "728:                 ];",
      "729:             }",
      "730:             $useroptions[$user->id] = $useroption;",
      "",
      "[Removed Lines]",
      "727:                     'value' => $user->$extrafield",
      "",
      "[Added Lines]",
      "727:                     'value' => $user->{$extrafield}",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "748:                 'extrafields' => new external_multiple_structure(",
      "749:                     new external_single_structure([",
      "750:                             'name' => new external_value(PARAM_TEXT, 'Name of the extrafield.'),",
      "752:                         ]",
      "753:                     ), 'List of extra fields', VALUE_OPTIONAL",
      "754:                 )",
      "",
      "[Removed Lines]",
      "751:                             'value' => new external_value(PARAM_TEXT, 'Value of the extrafield.')",
      "",
      "[Added Lines]",
      "751:                             'value' => new external_value(PARAM_RAW_TRIMMED, 'Value of the extrafield.')",
      "",
      "---------------"
    ],
    "admin/user.php||admin/user.php": [
      "File: admin/user.php -> admin/user.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "401:             $row = array ();",
      "402:             $row[] = \"<a href=\\\"../user/view.php?id=$user->id&amp;course=$site->id\\\">$fullname</a>\";",
      "403:             foreach ($extracolumns as $field) {",
      "405:             }",
      "406:             $row[] = $user->city;",
      "407:             $row[] = $user->country;",
      "",
      "[Removed Lines]",
      "404:                 $row[] = $user->{$field};",
      "",
      "[Added Lines]",
      "404:                 $row[] = s($user->{$field});",
      "",
      "---------------"
    ],
    "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php": [
      "File: admin/user/user_bulk_cohortadd.php -> admin/user/user_bulk_cohortadd.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "138:             '<a href=\"' . $CFG->wwwroot . '/user/view.php?id=' . $user->id . '&amp;course=' . SITEID . '\">' .",
      "139:             $user->fullname .",
      "140:             '</a>',",
      "142:             $user->city,",
      "143:             $user->country,",
      "144:             $user->lastaccess ? format_time(time() - $user->lastaccess) : $strnever",
      "",
      "[Removed Lines]",
      "141:             $user->email,",
      "",
      "[Added Lines]",
      "141:             s($user->email),",
      "",
      "---------------"
    ],
    "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php": [
      "File: admin/user/user_bulk_display.php -> admin/user/user_bulk_display.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:     $table->data[] = array (",
      "73:         '<a href=\"'.$CFG->wwwroot.'/user/view.php?id='.$user->id.'&amp;course='.SITEID.'\">'.$user->fullname.'</a>',",
      "76:         $user->city,",
      "77:         $user->country,",
      "78:         $user->lastaccess ? format_time(time() - $user->lastaccess) : $strnever",
      "",
      "[Removed Lines]",
      "75:         $user->email,",
      "",
      "[Added Lines]",
      "75:         s($user->email),",
      "",
      "---------------"
    ],
    "enrol/locallib.php||enrol/locallib.php": [
      "File: enrol/locallib.php -> enrol/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1220:         );",
      "1222:         foreach ($extrafields as $field) {",
      "1224:         }",
      "",
      "[Removed Lines]",
      "1223:             $details[$field] = $user->{$field};",
      "",
      "[Added Lines]",
      "1223:             $details[$field] = s($user->{$field});",
      "",
      "---------------"
    ],
    "grade/report/grader/lib.php||grade/report/grader/lib.php": [
      "File: grade/report/grader/lib.php -> grade/report/grader/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "767:                 $fieldcell = new html_table_cell();",
      "768:                 $fieldcell->attributes['class'] = 'userfield user' . $field;",
      "769:                 $fieldcell->header = false;",
      "771:                 $userrow->cells[] = $fieldcell;",
      "772:             }",
      "",
      "[Removed Lines]",
      "770:                 $fieldcell->text = $user->{$field};",
      "",
      "[Added Lines]",
      "770:                 $fieldcell->text = s($user->{$field});",
      "",
      "---------------"
    ],
    "login/index.php||login/index.php": [
      "File: login/index.php -> login/index.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "193:                     echo $OUTPUT->notification(get_string('emailconfirmsentsuccess'), \\core\\output\\notification::NOTIFY_SUCCESS);",
      "194:                 }",
      "195:             }",
      "197:             $resendconfirmurl = new moodle_url('/login/index.php',",
      "198:                 [",
      "199:                     'username' => $frm->username,",
      "",
      "[Removed Lines]",
      "196:             echo $OUTPUT->box(get_string(\"emailconfirmsent\", \"\", $user->email), \"generalbox boxaligncenter\");",
      "",
      "[Added Lines]",
      "196:             echo $OUTPUT->box(get_string(\"emailconfirmsent\", \"\", s($user->email)), \"generalbox boxaligncenter\");",
      "",
      "---------------"
    ],
    "report/security/locallib.php||report/security/locallib.php": [
      "File: report/security/locallib.php -> report/security/locallib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "698:     if ($detailed) {",
      "699:         foreach ($admins as $uid=>$user) {",
      "700:             $url = \"$CFG->wwwroot/user/view.php?id=$user->id\";",
      "702:         }",
      "703:         $admins = '<ul>'.implode('', $admins).'</ul>';",
      "704:     }",
      "",
      "[Removed Lines]",
      "701:             $admins[$uid] = '<li><a href=\"'.$url.'\">'.fullname($user).' ('.$user->email.')</a></li>';",
      "",
      "[Added Lines]",
      "701:             $admins[$uid] = '<li><a href=\"'.$url.'\">' . fullname($user, true) . ' (' . s($user->email) . ')</a></li>';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "824:         foreach ($rs as $user) {",
      "825:             $context = context::instance_by_id($user->contextid);",
      "826:             $url = \"$CFG->wwwroot/$CFG->admin/roles/assign.php?contextid=$user->contextid&amp;roleid=$user->roleid\";",
      "828:                                'contextname'=>$context->get_context_name());",
      "829:             $users[] = '<li>'.get_string('check_riskbackup_unassign', 'report_security', $a).'</li>';",
      "830:         }",
      "",
      "[Removed Lines]",
      "827:             $a = (object)array('fullname'=>fullname($user), 'url'=>$url, 'email'=>$user->email,",
      "",
      "[Added Lines]",
      "827:             $a = (object)array('fullname'=>fullname($user), 'url'=>$url, 'email'=>s($user->email),",
      "",
      "---------------"
    ],
    "user/selector/lib.php||user/selector/lib.php": [
      "File: user/selector/lib.php -> user/selector/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "581:         if ($this->extrafields) {",
      "582:             $displayfields = array();",
      "583:             foreach ($this->extrafields as $field) {",
      "585:             }",
      "586:             $out .= ' (' . implode(', ', $displayfields) . ')';",
      "587:         }",
      "",
      "[Removed Lines]",
      "584:                 $displayfields[] = $user->{$field};",
      "",
      "[Added Lines]",
      "584:                 $displayfields[] = s($user->{$field});",
      "",
      "---------------"
    ],
    "webservice/renderer.php||webservice/renderer.php": [
      "File: webservice/renderer.php -> webservice/renderer.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "109:             $modifiedauthoriseduserurl = new moodle_url('/' . $CFG->admin . '/webservice/service_user_settings.php',",
      "110:                             array('userid' => $user->id, 'serviceid' => $serviceid));",
      "111:             $html .= html_writer::tag('a', $user->firstname . \" \"",
      "113:                             array('href' => $modifiedauthoriseduserurl));",
      "115:             if (!empty($user->missingcapabilities)) {",
      "",
      "[Removed Lines]",
      "112:                             . $user->lastname . \", \" . $user->email,",
      "",
      "[Added Lines]",
      "112:                             . $user->lastname . \", \" . s($user->email),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "81eb8b2bbc2a5f3ce560a6efc2cb970865ffd814",
      "candidate_info": {
        "commit_hash": "81eb8b2bbc2a5f3ce560a6efc2cb970865ffd814",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/81eb8b2bbc2a5f3ce560a6efc2cb970865ffd814",
        "files": [
          "admin/tool/dataprivacy/classes/external.php",
          "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache",
          "admin/tool/dataprivacy/tests/behat/dataexport.feature",
          "admin/tool/dataprivacy/tests/external_test.php",
          "admin/tool/dataprivacy/version.php"
        ],
        "message": "MDL-64323 GDPR: New request form user search not using configured fields",
        "before_after_code_files": [
          "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
          "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache||admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache",
          "admin/tool/dataprivacy/tests/behat/dataexport.feature||admin/tool/dataprivacy/tests/behat/dataexport.feature",
          "admin/tool/dataprivacy/tests/external_test.php||admin/tool/dataprivacy/tests/external_test.php",
          "admin/tool/dataprivacy/version.php||admin/tool/dataprivacy/version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php"
          ],
          "candidate": [
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php": [
          "File: admin/tool/dataprivacy/classes/external.php -> admin/tool/dataprivacy/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "691:     public static function get_users($query) {",
          "692:         $params = external_api::validate_parameters(self::get_users_parameters(), [",
          "693:             'query' => $query",
          "694:         ]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692:         global $DB;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "704:         $excludedusers = array_keys(get_admins()) + [guest_user()->id];",
          "705:         $sort = 'lastname ASC, firstname ASC';",
          "708:         $useroptions = [];",
          "709:         foreach ($users as $user) {",
          "711:                 'id' => $user->id,",
          "714:             ];",
          "715:         }",
          "717:         return $useroptions;",
          "",
          "[Removed Lines]",
          "706:         $fields = 'id, email, ' . $allusernames;",
          "707:         $users = get_users(true, $query, true, $excludedusers, $sort, '', '', 0, 30, $fields);",
          "710:             $useroptions[$user->id] = (object)[",
          "712:                 'fullname' => fullname($user),",
          "713:                 'email' => $user->email",
          "",
          "[Added Lines]",
          "707:         $fields = 'id,' . $allusernames;",
          "709:         $extrafields = get_extra_user_fields($context);",
          "710:         if (!empty($extrafields)) {",
          "711:             $fields .= ',' . implode(',', $extrafields);",
          "712:         }",
          "714:         list($sql, $params) = users_search_sql($query, '', false, $extrafields, $excludedusers);",
          "715:         $users = $DB->get_records_select('user', $sql, $params, $sort, $fields, 0, 30);",
          "719:             $useroption = (object)[",
          "721:                 'fullname' => fullname($user)",
          "723:             $useroption->extrafields = [];",
          "724:             foreach ($extrafields as $extrafield) {",
          "725:                 $useroption->extrafields[] = (object)[",
          "726:                     'name' => $extrafield,",
          "727:                     'value' => $user->$extrafield",
          "728:                 ];",
          "729:             }",
          "730:             $useroptions[$user->id] = $useroption;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "729:             [",
          "730:                 'id' => new external_value(core_user::get_property_type('id'), 'ID of the user'),",
          "731:                 'fullname' => new external_value(core_user::get_property_type('firstname'), 'The fullname of the user'),",
          "733:             ]",
          "734:         ));",
          "735:     }",
          "",
          "[Removed Lines]",
          "732:                 'email' => new external_value(core_user::get_property_type('email'), 'The user\\'s email address', VALUE_OPTIONAL),",
          "",
          "[Added Lines]",
          "748:                 'extrafields' => new external_multiple_structure(",
          "749:                     new external_single_structure([",
          "750:                             'name' => new external_value(PARAM_TEXT, 'Name of the extrafield.'),",
          "751:                             'value' => new external_value(PARAM_TEXT, 'Value of the extrafield.')",
          "752:                         ]",
          "753:                     ), 'List of extra fields', VALUE_OPTIONAL",
          "754:                 )",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache||admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache": [
          "File: admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache -> admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     Example context (json):",
          "33:     {",
          "34:         \"fullname\": \"Admin User\",",
          "36:     }",
          "37: }}",
          "38: <span>",
          "39:     <span>{{fullname}}</span>",
          "41: </span>",
          "",
          "[Removed Lines]",
          "35:         \"email\": \"admin@example.com\"",
          "40:     <span><small>{{email}}</small></span>",
          "",
          "[Added Lines]",
          "35:         \"extrafields\": [",
          "36:             {",
          "37:                 \"name\": \"email\",",
          "38:                 \"value\": \"admin@example.com\"",
          "39:             },",
          "40:             {",
          "41:                 \"name\": \"phone1\",",
          "42:                 \"value\": \"0123456789\"",
          "43:             }",
          "44:         ]",
          "49:     {{#extrafields}}",
          "50:         <span><small>{{value}}</small></span>",
          "51:     {{/extrafields}}",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/tests/behat/dataexport.feature||admin/tool/dataprivacy/tests/behat/dataexport.feature": [
          "File: admin/tool/dataprivacy/tests/behat/dataexport.feature -> admin/tool/dataprivacy/tests/behat/dataexport.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:   Background:",
          "8:     Given the following \"users\" exist:",
          "12:     And the following \"roles\" exist:",
          "13:       | shortname | name  | archetype |",
          "14:       | tired     | Tired |           |",
          "15:     And the following \"permission overrides\" exist:",
          "18:     And the following \"role assigns\" exist:",
          "19:       | user   | role  | contextlevel | reference |",
          "20:       | parent | tired | User         | victim    |",
          "21:     And the following config values are set as admin:",
          "22:       | contactdataprotectionofficer | 1  | tool_dataprivacy |",
          "23:       | privacyrequestexpiry         | 55 | tool_dataprivacy |",
          "24:     And the following data privacy \"categories\" exist:",
          "25:       | name          |",
          "26:       | Site category |",
          "",
          "[Removed Lines]",
          "9:       | username | firstname      | lastname |",
          "10:       | victim   | Victim User    | 1        |",
          "11:       | parent   | Long-suffering | Parent   |",
          "16:       | capability                                   | permission | role  | contextlevel | reference |",
          "17:       | tool/dataprivacy:makedatarequestsforchildren | Allow      | tired | System       |           |",
          "",
          "[Added Lines]",
          "9:       | username  | firstname      | lastname  | institution |",
          "10:       | victim    | Victim User    | 1         | University1 |",
          "11:       | victim2   | Victim User    | 2         | University2 |",
          "12:       | requester | The            | Requester | University3 |",
          "13:       | parent    | Long-suffering | Parent    |             |",
          "18:       | capability                                   | permission | role    | contextlevel | reference |",
          "19:       | tool/dataprivacy:makedatarequestsforchildren | Allow      | tired   | System       |           |",
          "20:       | tool/dataprivacy:managedatarequests          | Allow      | manager | System       |           |",
          "21:       | moodle/site:viewuseridentity                 | Prevent    | manager | System       |           |",
          "25:     And the following \"system role assigns\" exist:",
          "26:       | user      | role    | contextlevel |",
          "27:       | requester | manager | User         |",
          "31:       | dporoles                     | 1  | tool_dataprivacy |",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "128:     And I should see \"Expired\" in the \"Victim User 1\" \"table_row\"",
          "129:     And I should not see \"Actions\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   @javascript",
          "140:   Scenario: Test search for user using extra field.",
          "141:     Given the following \"permission overrides\" exist:",
          "142:       | capability                   | permission | role    | contextlevel | reference |",
          "143:       | moodle/site:viewuseridentity | Allow      | manager | System       |           |",
          "144:     And the following config values are set as admin:",
          "145:       | showuseridentity | institution |",
          "146:     And I log in as \"requester\"",
          "147:     And I navigate to \"Users > Privacy and policies > Data requests\" in site administration",
          "148:     And I follow \"New request\"",
          "149:     And I set the field \"Search\" to \"University1\"",
          "150:     Then I should see \"Victim User 1\"",
          "151:     When I reload the page",
          "152:     And I set the field \"Search\" to \"University2\"",
          "153:     Then I should see \"Victim User 2\"",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/tests/external_test.php||admin/tool/dataprivacy/tests/external_test.php": [
          "File: admin/tool/dataprivacy/tests/external_test.php -> admin/tool/dataprivacy/tests/external_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "970:         $this->expectException(required_capability_exception::class);",
          "971:         $result = external::bulk_deny_data_requests([$requestid1]);",
          "972:     }",
          "973: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "984:     public function test_get_users_using_using_non_identity() {",
          "985:         $this->resetAfterTest();",
          "986:         $context = context_system::instance();",
          "987:         $requester = $this->getDataGenerator()->create_user();",
          "988:         $role = $this->getDataGenerator()->create_role();",
          "989:         role_assign($role, $requester->id, $context);",
          "990:         assign_capability('tool/dataprivacy:managedatarequests', CAP_ALLOW, $role, $context);",
          "991:         $this->setUser($requester);",
          "993:         $this->getDataGenerator()->create_user([",
          "994:             'firstname' => 'First Student'",
          "995:         ]);",
          "996:         $student2 = $this->getDataGenerator()->create_user([",
          "997:             'firstname' => 'Second Student'",
          "998:         ]);",
          "1000:         $results = external::get_users('Second');",
          "1001:         $this->assertCount(1, $results);",
          "1002:         $this->assertEquals((object)[",
          "1003:             'id' => $student2->id,",
          "1004:             'fullname' => fullname($student2),",
          "1005:             'extrafields' => []",
          "1006:         ], $results[$student2->id]);",
          "1007:     }",
          "1019:     public function test_get_users_using_identity_without_permission() {",
          "1020:         global $CFG;",
          "1022:         $this->resetAfterTest();",
          "1023:         $CFG->showuseridentity = 'institution';",
          "1026:         $context = context_system::instance();",
          "1027:         $requester = $this->getDataGenerator()->create_user();",
          "1028:         $role = $this->getDataGenerator()->create_role();",
          "1029:         role_assign($role, $requester->id, $context);",
          "1030:         assign_capability('tool/dataprivacy:managedatarequests', CAP_ALLOW, $role, $context);",
          "1031:         $this->setUser($requester);",
          "1033:         $this->getDataGenerator()->create_user([",
          "1034:             'institution' => 'University1'",
          "1035:         ]);",
          "1037:         $results = external::get_users('University1');",
          "1038:         $this->assertEmpty($results);",
          "1039:     }",
          "1051:     public function test_get_users_using_field_not_in_identity() {",
          "1052:         $this->resetAfterTest();",
          "1054:         $context = context_system::instance();",
          "1055:         $requester = $this->getDataGenerator()->create_user();",
          "1056:         $role = $this->getDataGenerator()->create_role();",
          "1057:         role_assign($role, $requester->id, $context);",
          "1058:         assign_capability('tool/dataprivacy:managedatarequests', CAP_ALLOW, $role, $context);",
          "1059:         assign_capability('moodle/site:viewuseridentity', CAP_ALLOW, $role, $context);",
          "1060:         $this->setUser($requester);",
          "1062:         $this->getDataGenerator()->create_user([",
          "1063:             'institution' => 'University1'",
          "1064:         ]);",
          "1066:         $results = external::get_users('University1');",
          "1067:         $this->assertEmpty($results);",
          "1068:     }",
          "1080:     public function test_get_users() {",
          "1081:         global $CFG;",
          "1082:         $this->resetAfterTest();",
          "1083:         $CFG->showuseridentity = 'institution';",
          "1084:         $context = context_system::instance();",
          "1085:         $requester = $this->getDataGenerator()->create_user();",
          "1086:         $role = $this->getDataGenerator()->create_role();",
          "1087:         role_assign($role, $requester->id, $context);",
          "1088:         assign_capability('tool/dataprivacy:managedatarequests', CAP_ALLOW, $role, $context);",
          "1089:         assign_capability('moodle/site:viewuseridentity', CAP_ALLOW, $role, $context);",
          "1090:         $this->setUser($requester);",
          "1092:         $student1 = $this->getDataGenerator()->create_user([",
          "1093:             'institution' => 'University1'",
          "1094:         ]);",
          "1095:         $this->getDataGenerator()->create_user([",
          "1096:             'institution' => 'University2'",
          "1097:         ]);",
          "1099:         $results = external::get_users('University1');",
          "1100:         $this->assertCount(1, $results);",
          "1101:         $this->assertEquals((object)[",
          "1102:             'id' => $student1->id,",
          "1103:             'fullname' => fullname($student1),",
          "1104:             'extrafields' => [",
          "1105:                 0 => (object)[",
          "1106:                     'name' => 'institution',",
          "1107:                     'value' => 'University1'",
          "1108:                 ]",
          "1109:             ]",
          "1110:         ], $results[$student1->id]);",
          "1111:     }",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/version.php||admin/tool/dataprivacy/version.php": [
          "File: admin/tool/dataprivacy/version.php -> admin/tool/dataprivacy/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die;",
          "28: $plugin->requires  = 2018112800;        // Moodle 3.5dev (Build 2018031600) and upwards.",
          "29: $plugin->component = 'tool_dataprivacy';",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2018120300;",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2018011500;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ac0f57073ec6fe89d8cedc1f502cf7a975d92b4",
      "candidate_info": {
        "commit_hash": "6ac0f57073ec6fe89d8cedc1f502cf7a975d92b4",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6ac0f57073ec6fe89d8cedc1f502cf7a975d92b4",
        "files": [
          "admin/tool/dataprivacy/classes/external.php",
          "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache"
        ],
        "message": "MDL-66762 tool_dataprivacy: Sanitize the extra fields in the webservice",
        "before_after_code_files": [
          "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
          "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache||admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php"
          ],
          "candidate": [
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php": [
          "File: admin/tool/dataprivacy/classes/external.php -> admin/tool/dataprivacy/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "722:             ];",
          "723:             $useroption->extrafields = [];",
          "724:             foreach ($extrafields as $extrafield) {",
          "725:                 $useroption->extrafields[] = (object)[",
          "726:                     'name' => $extrafield,",
          "728:                 ];",
          "729:             }",
          "730:             $useroptions[$user->id] = $useroption;",
          "",
          "[Removed Lines]",
          "727:                     'value' => $user->{$extrafield}",
          "",
          "[Added Lines]",
          "727:                     'value' => s($user->$extrafield)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "748:                 'extrafields' => new external_multiple_structure(",
          "749:                     new external_single_structure([",
          "750:                             'name' => new external_value(PARAM_TEXT, 'Name of the extrafield.'),",
          "752:                         ]",
          "753:                     ), 'List of extra fields', VALUE_OPTIONAL",
          "754:                 )",
          "",
          "[Removed Lines]",
          "751:                             'value' => new external_value(PARAM_RAW_TRIMMED, 'Value of the extrafield.')",
          "",
          "[Added Lines]",
          "751:                             'value' => new external_value(PARAM_TEXT, 'Value of the extrafield.')",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache||admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache": [
          "File: admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache -> admin/tool/dataprivacy/templates/form-user-selector-suggestion.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: <span>",
          "48:     <span>{{fullname}}</span>",
          "49:     {{#extrafields}}",
          "51:     {{/extrafields}}",
          "52: </span>",
          "",
          "[Removed Lines]",
          "50:         <span><small>{{value}}</small></span>",
          "",
          "[Added Lines]",
          "50:         <span><small>{{{value}}}</small></span>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a722b44a092ed1dfc7ceea52b2476a0f39507d7e",
      "candidate_info": {
        "commit_hash": "a722b44a092ed1dfc7ceea52b2476a0f39507d7e",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a722b44a092ed1dfc7ceea52b2476a0f39507d7e",
        "files": [
          "admin/roles/admins.php",
          "admin/tool/dataprivacy/classes/external.php",
          "admin/user.php",
          "admin/user/user_bulk_cohortadd.php",
          "admin/user/user_bulk_display.php",
          "enrol/locallib.php",
          "grade/report/grader/lib.php",
          "login/index.php",
          "report/security/locallib.php",
          "user/selector/lib.php",
          "webservice/renderer.php"
        ],
        "message": "MDL-66762 user: escape extra/email user fields.",
        "before_after_code_files": [
          "admin/roles/admins.php||admin/roles/admins.php",
          "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
          "admin/user.php||admin/user.php",
          "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php",
          "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php",
          "enrol/locallib.php||enrol/locallib.php",
          "grade/report/grader/lib.php||grade/report/grader/lib.php",
          "login/index.php||login/index.php",
          "report/security/locallib.php||report/security/locallib.php",
          "user/selector/lib.php||user/selector/lib.php",
          "webservice/renderer.php||webservice/renderer.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/roles/admins.php||admin/roles/admins.php",
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
            "admin/user.php||admin/user.php",
            "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php",
            "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php",
            "enrol/locallib.php||enrol/locallib.php",
            "grade/report/grader/lib.php||grade/report/grader/lib.php",
            "login/index.php||login/index.php",
            "report/security/locallib.php||report/security/locallib.php",
            "user/selector/lib.php||user/selector/lib.php",
            "webservice/renderer.php||webservice/renderer.php"
          ],
          "candidate": [
            "admin/roles/admins.php||admin/roles/admins.php",
            "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php",
            "admin/user.php||admin/user.php",
            "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php",
            "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php",
            "enrol/locallib.php||enrol/locallib.php",
            "grade/report/grader/lib.php||grade/report/grader/lib.php",
            "login/index.php||login/index.php",
            "report/security/locallib.php||report/security/locallib.php",
            "user/selector/lib.php||user/selector/lib.php",
            "webservice/renderer.php||webservice/renderer.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/roles/admins.php||admin/roles/admins.php": [
          "File: admin/roles/admins.php -> admin/roles/admins.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: }",
          "38: $admisselector = new core_role_admins_existing_selector();",
          "41: $potentialadmisselector = new core_role_admins_potential_selector();",
          "44: if (optional_param('add', false, PARAM_BOOL) and confirm_sesskey()) {",
          "45:     if ($userstoadd = $potentialadmisselector->get_selected_users()) {",
          "46:         $user = reset($userstoadd);",
          "48:         echo $OUTPUT->header();",
          "49:         $yesurl = new moodle_url('/admin/roles/admins.php', array('confirmadd'=>$user->id, 'sesskey'=>sesskey()));",
          "50:         echo $OUTPUT->confirm(get_string('confirmaddadmin', 'core_role', $username), $yesurl, $PAGE->url);",
          "",
          "[Removed Lines]",
          "39: $admisselector->set_extra_fields(array('username', 'email'));",
          "42: $potentialadmisselector->set_extra_fields(array('username', 'email'));",
          "47:         $username = fullname($user) . \" ($user->username, $user->email)\";",
          "",
          "[Added Lines]",
          "44:         $username = $potentialadmisselector->output_user($user);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         if ($USER->id == $user->id) {",
          "60:         } else {",
          "62:             echo $OUTPUT->header();",
          "63:             $yesurl = new moodle_url('/admin/roles/admins.php', array('confirmdel'=>$user->id, 'sesskey'=>sesskey()));",
          "64:             echo $OUTPUT->confirm(get_string('confirmdeladmin', 'core_role', $username), $yesurl, $PAGE->url);",
          "",
          "[Removed Lines]",
          "61:             $username = fullname($user) . \" ($user->username, $user->email)\";",
          "",
          "[Added Lines]",
          "58:             $username = $admisselector->output_user($user);",
          "",
          "---------------"
        ],
        "admin/tool/dataprivacy/classes/external.php||admin/tool/dataprivacy/classes/external.php": [
          "File: admin/tool/dataprivacy/classes/external.php -> admin/tool/dataprivacy/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "724:             foreach ($extrafields as $extrafield) {",
          "725:                 $useroption->extrafields[] = (object)[",
          "726:                     'name' => $extrafield,",
          "728:                 ];",
          "729:             }",
          "730:             $useroptions[$user->id] = $useroption;",
          "",
          "[Removed Lines]",
          "727:                     'value' => $user->$extrafield",
          "",
          "[Added Lines]",
          "727:                     'value' => $user->{$extrafield}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "748:                 'extrafields' => new external_multiple_structure(",
          "749:                     new external_single_structure([",
          "750:                             'name' => new external_value(PARAM_TEXT, 'Name of the extrafield.'),",
          "752:                         ]",
          "753:                     ), 'List of extra fields', VALUE_OPTIONAL",
          "754:                 )",
          "",
          "[Removed Lines]",
          "751:                             'value' => new external_value(PARAM_TEXT, 'Value of the extrafield.')",
          "",
          "[Added Lines]",
          "751:                             'value' => new external_value(PARAM_RAW_TRIMMED, 'Value of the extrafield.')",
          "",
          "---------------"
        ],
        "admin/user.php||admin/user.php": [
          "File: admin/user.php -> admin/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "401:             $row = array ();",
          "402:             $row[] = \"<a href=\\\"../user/view.php?id=$user->id&amp;course=$site->id\\\">$fullname</a>\";",
          "403:             foreach ($extracolumns as $field) {",
          "405:             }",
          "406:             $row[] = $user->city;",
          "407:             $row[] = $user->country;",
          "",
          "[Removed Lines]",
          "404:                 $row[] = $user->{$field};",
          "",
          "[Added Lines]",
          "404:                 $row[] = s($user->{$field});",
          "",
          "---------------"
        ],
        "admin/user/user_bulk_cohortadd.php||admin/user/user_bulk_cohortadd.php": [
          "File: admin/user/user_bulk_cohortadd.php -> admin/user/user_bulk_cohortadd.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:             '<a href=\"' . $CFG->wwwroot . '/user/view.php?id=' . $user->id . '&amp;course=' . SITEID . '\">' .",
          "139:             $user->fullname .",
          "140:             '</a>',",
          "142:             $user->city,",
          "143:             $user->country,",
          "144:             $user->lastaccess ? format_time(time() - $user->lastaccess) : $strnever",
          "",
          "[Removed Lines]",
          "141:             $user->email,",
          "",
          "[Added Lines]",
          "141:             s($user->email),",
          "",
          "---------------"
        ],
        "admin/user/user_bulk_display.php||admin/user/user_bulk_display.php": [
          "File: admin/user/user_bulk_display.php -> admin/user/user_bulk_display.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     $table->data[] = array (",
          "73:         '<a href=\"'.$CFG->wwwroot.'/user/view.php?id='.$user->id.'&amp;course='.SITEID.'\">'.$user->fullname.'</a>',",
          "76:         $user->city,",
          "77:         $user->country,",
          "78:         $user->lastaccess ? format_time(time() - $user->lastaccess) : $strnever",
          "",
          "[Removed Lines]",
          "75:         $user->email,",
          "",
          "[Added Lines]",
          "75:         s($user->email),",
          "",
          "---------------"
        ],
        "enrol/locallib.php||enrol/locallib.php": [
          "File: enrol/locallib.php -> enrol/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191:         );",
          "1193:         foreach ($extrafields as $field) {",
          "1195:         }",
          "",
          "[Removed Lines]",
          "1194:             $details[$field] = $user->{$field};",
          "",
          "[Added Lines]",
          "1194:             $details[$field] = s($user->{$field});",
          "",
          "---------------"
        ],
        "grade/report/grader/lib.php||grade/report/grader/lib.php": [
          "File: grade/report/grader/lib.php -> grade/report/grader/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "767:                 $fieldcell = new html_table_cell();",
          "768:                 $fieldcell->attributes['class'] = 'userfield user' . $field;",
          "769:                 $fieldcell->header = false;",
          "771:                 $userrow->cells[] = $fieldcell;",
          "772:             }",
          "",
          "[Removed Lines]",
          "770:                 $fieldcell->text = $user->{$field};",
          "",
          "[Added Lines]",
          "770:                 $fieldcell->text = s($user->{$field});",
          "",
          "---------------"
        ],
        "login/index.php||login/index.php": [
          "File: login/index.php -> login/index.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:                     echo $OUTPUT->notification(get_string('emailconfirmsentsuccess'), \\core\\output\\notification::NOTIFY_SUCCESS);",
          "194:                 }",
          "195:             }",
          "197:             $resendconfirmurl = new moodle_url('/login/index.php',",
          "198:                 [",
          "199:                     'username' => $frm->username,",
          "",
          "[Removed Lines]",
          "196:             echo $OUTPUT->box(get_string(\"emailconfirmsent\", \"\", $user->email), \"generalbox boxaligncenter\");",
          "",
          "[Added Lines]",
          "196:             echo $OUTPUT->box(get_string(\"emailconfirmsent\", \"\", s($user->email)), \"generalbox boxaligncenter\");",
          "",
          "---------------"
        ],
        "report/security/locallib.php||report/security/locallib.php": [
          "File: report/security/locallib.php -> report/security/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "698:     if ($detailed) {",
          "699:         foreach ($admins as $uid=>$user) {",
          "700:             $url = \"$CFG->wwwroot/user/view.php?id=$user->id\";",
          "702:         }",
          "703:         $admins = '<ul>'.implode('', $admins).'</ul>';",
          "704:     }",
          "",
          "[Removed Lines]",
          "701:             $admins[$uid] = '<li><a href=\"'.$url.'\">'.fullname($user).' ('.$user->email.')</a></li>';",
          "",
          "[Added Lines]",
          "701:             $admins[$uid] = '<li><a href=\"'.$url.'\">' . fullname($user, true) . ' (' . s($user->email) . ')</a></li>';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "824:         foreach ($rs as $user) {",
          "825:             $context = context::instance_by_id($user->contextid);",
          "826:             $url = \"$CFG->wwwroot/$CFG->admin/roles/assign.php?contextid=$user->contextid&amp;roleid=$user->roleid\";",
          "828:                                'contextname'=>$context->get_context_name());",
          "829:             $users[] = '<li>'.get_string('check_riskbackup_unassign', 'report_security', $a).'</li>';",
          "830:         }",
          "",
          "[Removed Lines]",
          "827:             $a = (object)array('fullname'=>fullname($user), 'url'=>$url, 'email'=>$user->email,",
          "",
          "[Added Lines]",
          "827:             $a = (object)array('fullname'=>fullname($user), 'url'=>$url, 'email'=>s($user->email),",
          "",
          "---------------"
        ],
        "user/selector/lib.php||user/selector/lib.php": [
          "File: user/selector/lib.php -> user/selector/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:         if ($this->extrafields) {",
          "582:             $displayfields = array();",
          "583:             foreach ($this->extrafields as $field) {",
          "585:             }",
          "586:             $out .= ' (' . implode(', ', $displayfields) . ')';",
          "587:         }",
          "",
          "[Removed Lines]",
          "584:                 $displayfields[] = $user->{$field};",
          "",
          "[Added Lines]",
          "584:                 $displayfields[] = s($user->{$field});",
          "",
          "---------------"
        ],
        "webservice/renderer.php||webservice/renderer.php": [
          "File: webservice/renderer.php -> webservice/renderer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:             $modifiedauthoriseduserurl = new moodle_url('/' . $CFG->admin . '/webservice/service_user_settings.php',",
          "110:                             array('userid' => $user->id, 'serviceid' => $serviceid));",
          "111:             $html .= html_writer::tag('a', $user->firstname . \" \"",
          "113:                             array('href' => $modifiedauthoriseduserurl));",
          "115:             if (!empty($user->missingcapabilities)) {",
          "",
          "[Removed Lines]",
          "112:                             . $user->lastname . \", \" . $user->email,",
          "",
          "[Added Lines]",
          "112:                             . $user->lastname . \", \" . s($user->email),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dbab6200d506ea226ed19655a26d5d5420c200f7",
      "candidate_info": {
        "commit_hash": "dbab6200d506ea226ed19655a26d5d5420c200f7",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/dbab6200d506ea226ed19655a26d5d5420c200f7",
        "files": [
          "admin/user.php",
          "enrol/locallib.php",
          "grade/report/grader/lib.php",
          "user/selector/lib.php"
        ],
        "message": "MDL-65552 user: escape extra/email user fields.\n\nThis commit has been backported from the changes in MDL-66762.",
        "before_after_code_files": [
          "admin/user.php||admin/user.php",
          "enrol/locallib.php||enrol/locallib.php",
          "grade/report/grader/lib.php||grade/report/grader/lib.php",
          "user/selector/lib.php||user/selector/lib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "admin/user.php||admin/user.php",
            "enrol/locallib.php||enrol/locallib.php",
            "grade/report/grader/lib.php||grade/report/grader/lib.php",
            "user/selector/lib.php||user/selector/lib.php"
          ],
          "candidate": [
            "admin/user.php||admin/user.php",
            "enrol/locallib.php||enrol/locallib.php",
            "grade/report/grader/lib.php||grade/report/grader/lib.php",
            "user/selector/lib.php||user/selector/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/user.php||admin/user.php": [
          "File: admin/user.php -> admin/user.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:             $row = array ();",
          "375:             $row[] = \"<a href=\\\"../user/view.php?id=$user->id&amp;course=$site->id\\\">$fullname</a>\";",
          "376:             foreach ($extracolumns as $field) {",
          "378:             }",
          "379:             $row[] = $user->city;",
          "380:             $row[] = $user->country;",
          "",
          "[Removed Lines]",
          "377:                 $row[] = $user->{$field};",
          "",
          "[Added Lines]",
          "377:                 $row[] = s($user->{$field});",
          "",
          "---------------"
        ],
        "enrol/locallib.php||enrol/locallib.php": [
          "File: enrol/locallib.php -> enrol/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1150:         );",
          "1152:         foreach ($extrafields as $field) {",
          "1154:         }",
          "",
          "[Removed Lines]",
          "1153:             $details[$field] = $user->{$field};",
          "",
          "[Added Lines]",
          "1153:             $details[$field] = s($user->{$field});",
          "",
          "---------------"
        ],
        "grade/report/grader/lib.php||grade/report/grader/lib.php": [
          "File: grade/report/grader/lib.php -> grade/report/grader/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "767:                 $fieldcell = new html_table_cell();",
          "768:                 $fieldcell->attributes['class'] = 'userfield user' . $field;",
          "769:                 $fieldcell->header = false;",
          "771:                 $userrow->cells[] = $fieldcell;",
          "772:             }",
          "",
          "[Removed Lines]",
          "770:                 $fieldcell->text = $user->{$field};",
          "",
          "[Added Lines]",
          "770:                 $fieldcell->text = s($user->{$field});",
          "",
          "---------------"
        ],
        "user/selector/lib.php||user/selector/lib.php": [
          "File: user/selector/lib.php -> user/selector/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:         if ($this->extrafields) {",
          "601:             $displayfields = array();",
          "602:             foreach ($this->extrafields as $field) {",
          "604:             }",
          "605:             $out .= ' (' . implode(', ', $displayfields) . ')';",
          "606:         }",
          "",
          "[Removed Lines]",
          "603:                 $displayfields[] = $user->{$field};",
          "",
          "[Added Lines]",
          "603:                 $displayfields[] = s($user->{$field});",
          "",
          "---------------"
        ]
      }
    }
  ]
}