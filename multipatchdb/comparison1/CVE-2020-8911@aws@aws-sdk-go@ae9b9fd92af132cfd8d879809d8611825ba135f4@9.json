{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b8066072e4e7872280568864d30dec9805d2ebb3",
      "candidate_info": {
        "commit_hash": "b8066072e4e7872280568864d30dec9805d2ebb3",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/b8066072e4e7872280568864d30dec9805d2ebb3",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/appconfig/2019-10-09/docs-2.json",
          "models/apis/codebuild/2016-10-06/api-2.json",
          "models/apis/codebuild/2016-10-06/docs-2.json",
          "models/apis/codebuild/2016-10-06/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/lightsail/2016-11-28/api-2.json",
          "models/apis/lightsail/2016-11-28/docs-2.json",
          "models/apis/logs/2014-03-28/api-2.json",
          "models/apis/logs/2014-03-28/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/endpoints/endpoints.json",
          "service/appconfig/api.go",
          "service/cloudwatchlogs/api.go",
          "service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "service/cloudwatchlogs/errors.go",
          "service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go",
          "service/lightsail/api.go",
          "service/route53/api.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.30.23 (2020-05-07) ===\n\n### Service Client Updates\n* `service/appconfig`: Updates service documentation\n* `service/codebuild`: Updates service API, documentation, and paginators\n  * Add COMMIT_MESSAGE enum for webhook filter types\n* `service/ec2`: Updates service API and documentation\n  * Amazon EC2 now adds warnings to identify issues when creating a launch template or launch template version.\n* `service/lightsail`: Updates service API and documentation\n  * This release adds support for the following options in instance public ports: Specify source IP addresses, specify ICMP protocol like PING, and enable/disable the Lightsail browser-based SSH and RDP clients' access to your instance.\n* `service/logs`: Updates service API and documentation\n  * Amazon CloudWatch Logs now offers the ability to interact with Logs Insights queries via the new PutQueryDefinition, DescribeQueryDefinitions, and DeleteQueryDefinition APIs.\n* `service/route53`: Updates service API\n  * Amazon Route 53 now supports the EU (Milan) Region (eu-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API\n  * This Patch Manager release supports creating patch baselines for Oracle Linux and Debian",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/appconfig/api.go||service/appconfig/api.go",
          "service/cloudwatchlogs/api.go||service/cloudwatchlogs/api.go",
          "service/cloudwatchlogs/cloudwatchlogsiface/interface.go||service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "service/cloudwatchlogs/errors.go||service/cloudwatchlogs/errors.go",
          "service/codebuild/api.go||service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/lightsail/api.go||service/lightsail/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3221:     \"eu-central-1\":   endpoint{},",
          "3222:     \"eu-west-1\":      endpoint{},",
          "3223:     \"eu-west-2\":      endpoint{},",
          "3224:     \"us-east-1\":      endpoint{},",
          "3225:     \"us-east-2\":      endpoint{},",
          "3226:     \"us-west-1\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3224:     \"sa-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3870:     \"eu-west-1\":      endpoint{},",
          "3871:     \"eu-west-2\":      endpoint{},",
          "3872:     \"eu-west-3\":      endpoint{},",
          "3878:    },",
          "3879:   },",
          "3880:   \"pinpoint\": service{",
          "",
          "[Removed Lines]",
          "3873:     \"me-south-1\":     endpoint{},",
          "3874:     \"us-east-1\":      endpoint{},",
          "3875:     \"us-east-2\":      endpoint{},",
          "3876:     \"us-west-1\":      endpoint{},",
          "3877:     \"us-west-2\":      endpoint{},",
          "",
          "[Added Lines]",
          "3874:     \"fips-ca-central-1\": endpoint{",
          "3875:      Hostname: \"outposts-fips.ca-central-1.amazonaws.com\",",
          "3876:      CredentialScope: credentialScope{",
          "3877:       Region: \"ca-central-1\",",
          "3878:      },",
          "3879:     },",
          "3880:     \"fips-us-east-1\": endpoint{",
          "3881:      Hostname: \"outposts-fips.us-east-1.amazonaws.com\",",
          "3882:      CredentialScope: credentialScope{",
          "3883:       Region: \"us-east-1\",",
          "3884:      },",
          "3885:     },",
          "3886:     \"fips-us-east-2\": endpoint{",
          "3887:      Hostname: \"outposts-fips.us-east-2.amazonaws.com\",",
          "3888:      CredentialScope: credentialScope{",
          "3889:       Region: \"us-east-2\",",
          "3890:      },",
          "3891:     },",
          "3892:     \"fips-us-west-1\": endpoint{",
          "3893:      Hostname: \"outposts-fips.us-west-1.amazonaws.com\",",
          "3894:      CredentialScope: credentialScope{",
          "3895:       Region: \"us-west-1\",",
          "3896:      },",
          "3897:     },",
          "3898:     \"fips-us-west-2\": endpoint{",
          "3899:      Hostname: \"outposts-fips.us-west-2.amazonaws.com\",",
          "3900:      CredentialScope: credentialScope{",
          "3901:       Region: \"us-west-2\",",
          "3902:      },",
          "3903:     },",
          "3904:     \"me-south-1\": endpoint{},",
          "3905:     \"us-east-1\":  endpoint{},",
          "3906:     \"us-east-2\":  endpoint{},",
          "3907:     \"us-west-1\":  endpoint{},",
          "3908:     \"us-west-2\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4681:   \"securityhub\": service{",
          "4683:    Endpoints: endpoints{",
          "4684:     \"ap-east-1\":      endpoint{},",
          "4685:     \"ap-northeast-1\": endpoint{},",
          "4686:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4715:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4690:     \"ca-central-1\":   endpoint{},",
          "4691:     \"eu-central-1\":   endpoint{},",
          "4692:     \"eu-north-1\":     endpoint{},",
          "4693:     \"eu-west-1\":      endpoint{},",
          "4694:     \"eu-west-2\":      endpoint{},",
          "4695:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4725:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6814:   \"cloudtrail\": service{",
          "6816:    Endpoints: endpoints{",
          "6819:    },",
          "6820:   },",
          "6821:   \"codebuild\": service{",
          "",
          "[Removed Lines]",
          "6817:     \"us-gov-east-1\": endpoint{},",
          "6818:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "6850:     \"us-gov-east-1\": endpoint{",
          "6851:      Hostname: \"cloudtrail.us-gov-east-1.amazonaws.com\",",
          "6852:      CredentialScope: credentialScope{",
          "6853:       Region: \"us-gov-east-1\",",
          "6854:      },",
          "6855:     },",
          "6856:     \"us-gov-west-1\": endpoint{",
          "6857:      Hostname: \"cloudtrail.us-gov-west-1.amazonaws.com\",",
          "6858:      CredentialScope: credentialScope{",
          "6859:       Region: \"us-gov-west-1\",",
          "6860:      },",
          "6861:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7149:   \"events\": service{",
          "7151:    Endpoints: endpoints{",
          "7154:    },",
          "7155:   },",
          "7156:   \"firehose\": service{",
          "",
          "[Removed Lines]",
          "7152:     \"us-gov-east-1\": endpoint{},",
          "7153:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "7195:     \"us-gov-east-1\": endpoint{",
          "7196:      Hostname: \"events.us-gov-east-1.amazonaws.com\",",
          "7197:      CredentialScope: credentialScope{",
          "7198:       Region: \"us-gov-east-1\",",
          "7199:      },",
          "7200:     },",
          "7201:     \"us-gov-west-1\": endpoint{",
          "7202:      Hostname: \"events.us-gov-west-1.amazonaws.com\",",
          "7203:      CredentialScope: credentialScope{",
          "7204:       Region: \"us-gov-west-1\",",
          "7205:      },",
          "7206:     },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7281:     \"us-gov-west-1\": endpoint{},",
          "7282:    },",
          "7283:   },",
          "7284:   \"kinesis\": service{",
          "7286:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7337:   \"kafka\": service{",
          "7339:    Endpoints: endpoints{",
          "7340:     \"us-gov-east-1\": endpoint{},",
          "7341:     \"us-gov-west-1\": endpoint{},",
          "7342:    },",
          "7343:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7415:   \"outposts\": service{",
          "7417:    Endpoints: endpoints{",
          "7420:    },",
          "7421:   },",
          "7422:   \"pinpoint\": service{",
          "",
          "[Removed Lines]",
          "7418:     \"us-gov-east-1\": endpoint{},",
          "7419:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "7478:     \"us-gov-east-1\": endpoint{",
          "7479:      Hostname: \"outposts.us-gov-east-1.amazonaws.com\",",
          "7480:      CredentialScope: credentialScope{",
          "7481:       Region: \"us-gov-east-1\",",
          "7482:      },",
          "7483:     },",
          "7484:     \"us-gov-west-1\": endpoint{",
          "7485:      Hostname: \"outposts.us-gov-west-1.amazonaws.com\",",
          "7486:      CredentialScope: credentialScope{",
          "7487:       Region: \"us-gov-west-1\",",
          "7488:      },",
          "7489:     },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.22\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.23\"",
          "",
          "---------------"
        ],
        "service/appconfig/api.go||service/appconfig/api.go": [
          "File: service/appconfig/api.go -> service/appconfig/api.go"
        ],
        "service/cloudwatchlogs/api.go||service/cloudwatchlogs/api.go": [
          "File: service/cloudwatchlogs/api.go -> service/cloudwatchlogs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "896:  return out, req.Send()",
          "897: }",
          "899: const opDeleteResourcePolicy = \"DeleteResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900: const opDeleteQueryDefinition = \"DeleteQueryDefinition\"",
          "926: func (c *CloudWatchLogs) DeleteQueryDefinitionRequest(input *DeleteQueryDefinitionInput) (req *request.Request, output *DeleteQueryDefinitionOutput) {",
          "927:  op := &request.Operation{",
          "928:   Name:       opDeleteQueryDefinition,",
          "929:   HTTPMethod: \"POST\",",
          "930:   HTTPPath:   \"/\",",
          "931:  }",
          "933:  if input == nil {",
          "934:   input = &DeleteQueryDefinitionInput{}",
          "935:  }",
          "937:  output = &DeleteQueryDefinitionOutput{}",
          "938:  req = c.newRequest(op, input, output)",
          "939:  return",
          "940: }",
          "962: func (c *CloudWatchLogs) DeleteQueryDefinition(input *DeleteQueryDefinitionInput) (*DeleteQueryDefinitionOutput, error) {",
          "963:  req, out := c.DeleteQueryDefinitionRequest(input)",
          "964:  return out, req.Send()",
          "965: }",
          "976: func (c *CloudWatchLogs) DeleteQueryDefinitionWithContext(ctx aws.Context, input *DeleteQueryDefinitionInput, opts ...request.Option) (*DeleteQueryDefinitionOutput, error) {",
          "977:  req, out := c.DeleteQueryDefinitionRequest(input)",
          "978:  req.SetContext(ctx)",
          "979:  req.ApplyOptions(opts...)",
          "980:  return out, req.Send()",
          "981: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1914:  return out, req.Send()",
          "1915: }",
          "1917: const opDescribeResourcePolicies = \"DescribeResourcePolicies\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2001: const opDescribeQueryDefinitions = \"DescribeQueryDefinitions\"",
          "2027: func (c *CloudWatchLogs) DescribeQueryDefinitionsRequest(input *DescribeQueryDefinitionsInput) (req *request.Request, output *DescribeQueryDefinitionsOutput) {",
          "2028:  op := &request.Operation{",
          "2029:   Name:       opDescribeQueryDefinitions,",
          "2030:   HTTPMethod: \"POST\",",
          "2031:   HTTPPath:   \"/\",",
          "2032:  }",
          "2034:  if input == nil {",
          "2035:   input = &DescribeQueryDefinitionsInput{}",
          "2036:  }",
          "2038:  output = &DescribeQueryDefinitionsOutput{}",
          "2039:  req = c.newRequest(op, input, output)",
          "2040:  return",
          "2041: }",
          "2060: func (c *CloudWatchLogs) DescribeQueryDefinitions(input *DescribeQueryDefinitionsInput) (*DescribeQueryDefinitionsOutput, error) {",
          "2061:  req, out := c.DescribeQueryDefinitionsRequest(input)",
          "2062:  return out, req.Send()",
          "2063: }",
          "2074: func (c *CloudWatchLogs) DescribeQueryDefinitionsWithContext(ctx aws.Context, input *DescribeQueryDefinitionsInput, opts ...request.Option) (*DescribeQueryDefinitionsOutput, error) {",
          "2075:  req, out := c.DescribeQueryDefinitionsRequest(input)",
          "2076:  req.SetContext(ctx)",
          "2077:  req.ApplyOptions(opts...)",
          "2078:  return out, req.Send()",
          "2079: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3319:  return out, req.Send()",
          "3320: }",
          "3322: const opPutResourcePolicy = \"PutResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3491: const opPutQueryDefinition = \"PutQueryDefinition\"",
          "3517: func (c *CloudWatchLogs) PutQueryDefinitionRequest(input *PutQueryDefinitionInput) (req *request.Request, output *PutQueryDefinitionOutput) {",
          "3518:  op := &request.Operation{",
          "3519:   Name:       opPutQueryDefinition,",
          "3520:   HTTPMethod: \"POST\",",
          "3521:   HTTPPath:   \"/\",",
          "3522:  }",
          "3524:  if input == nil {",
          "3525:   input = &PutQueryDefinitionInput{}",
          "3526:  }",
          "3528:  output = &PutQueryDefinitionOutput{}",
          "3529:  req = c.newRequest(op, input, output)",
          "3530:  return",
          "3531: }",
          "3553: func (c *CloudWatchLogs) PutQueryDefinition(input *PutQueryDefinitionInput) (*PutQueryDefinitionOutput, error) {",
          "3554:  req, out := c.PutQueryDefinitionRequest(input)",
          "3555:  return out, req.Send()",
          "3556: }",
          "3567: func (c *CloudWatchLogs) PutQueryDefinitionWithContext(ctx aws.Context, input *PutQueryDefinitionInput, opts ...request.Option) (*PutQueryDefinitionOutput, error) {",
          "3568:  req, out := c.PutQueryDefinitionRequest(input)",
          "3569:  req.SetContext(ctx)",
          "3570:  req.ApplyOptions(opts...)",
          "3571:  return out, req.Send()",
          "3572: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4793:  return s.String()",
          "4794: }",
          "4796: type DeleteResourcePolicyInput struct {",
          "4797:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5049: type DeleteQueryDefinitionInput struct {",
          "5050:  _ struct{} `type:\"structure\"`",
          "5053:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\" required:\"true\"`",
          "5054: }",
          "5057: func (s DeleteQueryDefinitionInput) String() string {",
          "5058:  return awsutil.Prettify(s)",
          "5059: }",
          "5062: func (s DeleteQueryDefinitionInput) GoString() string {",
          "5063:  return s.String()",
          "5064: }",
          "5067: func (s *DeleteQueryDefinitionInput) Validate() error {",
          "5068:  invalidParams := request.ErrInvalidParams{Context: \"DeleteQueryDefinitionInput\"}",
          "5069:  if s.QueryDefinitionId == nil {",
          "5070:   invalidParams.Add(request.NewErrParamRequired(\"QueryDefinitionId\"))",
          "5071:  }",
          "5073:  if invalidParams.Len() > 0 {",
          "5074:   return invalidParams",
          "5075:  }",
          "5076:  return nil",
          "5077: }",
          "5080: func (s *DeleteQueryDefinitionInput) SetQueryDefinitionId(v string) *DeleteQueryDefinitionInput {",
          "5081:  s.QueryDefinitionId = &v",
          "5082:  return s",
          "5083: }",
          "5085: type DeleteQueryDefinitionOutput struct {",
          "5086:  _ struct{} `type:\"structure\"`",
          "5088:  Success *bool `locationName:\"success\" type:\"boolean\"`",
          "5089: }",
          "5092: func (s DeleteQueryDefinitionOutput) String() string {",
          "5093:  return awsutil.Prettify(s)",
          "5094: }",
          "5097: func (s DeleteQueryDefinitionOutput) GoString() string {",
          "5098:  return s.String()",
          "5099: }",
          "5102: func (s *DeleteQueryDefinitionOutput) SetSuccess(v bool) *DeleteQueryDefinitionOutput {",
          "5103:  s.Success = &v",
          "5104:  return s",
          "5105: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5631:  return s",
          "5632: }",
          "5634: type DescribeResourcePoliciesInput struct {",
          "5635:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5945: type DescribeQueryDefinitionsInput struct {",
          "5946:  _ struct{} `type:\"structure\"`",
          "5948:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5952:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "5954:  QueryDefinitionNamePrefix *string `locationName:\"queryDefinitionNamePrefix\" min:\"1\" type:\"string\"`",
          "5955: }",
          "5958: func (s DescribeQueryDefinitionsInput) String() string {",
          "5959:  return awsutil.Prettify(s)",
          "5960: }",
          "5963: func (s DescribeQueryDefinitionsInput) GoString() string {",
          "5964:  return s.String()",
          "5965: }",
          "5968: func (s *DescribeQueryDefinitionsInput) Validate() error {",
          "5969:  invalidParams := request.ErrInvalidParams{Context: \"DescribeQueryDefinitionsInput\"}",
          "5970:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5971:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5972:  }",
          "5973:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "5974:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "5975:  }",
          "5976:  if s.QueryDefinitionNamePrefix != nil && len(*s.QueryDefinitionNamePrefix) < 1 {",
          "5977:   invalidParams.Add(request.NewErrParamMinLen(\"QueryDefinitionNamePrefix\", 1))",
          "5978:  }",
          "5980:  if invalidParams.Len() > 0 {",
          "5981:   return invalidParams",
          "5982:  }",
          "5983:  return nil",
          "5984: }",
          "5987: func (s *DescribeQueryDefinitionsInput) SetMaxResults(v int64) *DescribeQueryDefinitionsInput {",
          "5988:  s.MaxResults = &v",
          "5989:  return s",
          "5990: }",
          "5993: func (s *DescribeQueryDefinitionsInput) SetNextToken(v string) *DescribeQueryDefinitionsInput {",
          "5994:  s.NextToken = &v",
          "5995:  return s",
          "5996: }",
          "5999: func (s *DescribeQueryDefinitionsInput) SetQueryDefinitionNamePrefix(v string) *DescribeQueryDefinitionsInput {",
          "6000:  s.QueryDefinitionNamePrefix = &v",
          "6001:  return s",
          "6002: }",
          "6004: type DescribeQueryDefinitionsOutput struct {",
          "6005:  _ struct{} `type:\"structure\"`",
          "6009:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6011:  QueryDefinitions []*QueryDefinition `locationName:\"queryDefinitions\" type:\"list\"`",
          "6012: }",
          "6015: func (s DescribeQueryDefinitionsOutput) String() string {",
          "6016:  return awsutil.Prettify(s)",
          "6017: }",
          "6020: func (s DescribeQueryDefinitionsOutput) GoString() string {",
          "6021:  return s.String()",
          "6022: }",
          "6025: func (s *DescribeQueryDefinitionsOutput) SetNextToken(v string) *DescribeQueryDefinitionsOutput {",
          "6026:  s.NextToken = &v",
          "6027:  return s",
          "6028: }",
          "6031: func (s *DescribeQueryDefinitionsOutput) SetQueryDefinitions(v []*QueryDefinition) *DescribeQueryDefinitionsOutput {",
          "6032:  s.QueryDefinitions = v",
          "6033:  return s",
          "6034: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8111:  return s.String()",
          "8112: }",
          "8114: type PutResourcePolicyInput struct {",
          "8115:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8518: type PutQueryDefinitionInput struct {",
          "8519:  _ struct{} `type:\"structure\"`",
          "8521:  LogGroupNames []*string `locationName:\"logGroupNames\" type:\"list\"`",
          "8524:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "8526:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8529:  QueryString *string `locationName:\"queryString\" min:\"1\" type:\"string\" required:\"true\"`",
          "8530: }",
          "8533: func (s PutQueryDefinitionInput) String() string {",
          "8534:  return awsutil.Prettify(s)",
          "8535: }",
          "8538: func (s PutQueryDefinitionInput) GoString() string {",
          "8539:  return s.String()",
          "8540: }",
          "8543: func (s *PutQueryDefinitionInput) Validate() error {",
          "8544:  invalidParams := request.ErrInvalidParams{Context: \"PutQueryDefinitionInput\"}",
          "8545:  if s.Name == nil {",
          "8546:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "8547:  }",
          "8548:  if s.Name != nil && len(*s.Name) < 1 {",
          "8549:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "8550:  }",
          "8551:  if s.QueryString == nil {",
          "8552:   invalidParams.Add(request.NewErrParamRequired(\"QueryString\"))",
          "8553:  }",
          "8554:  if s.QueryString != nil && len(*s.QueryString) < 1 {",
          "8555:   invalidParams.Add(request.NewErrParamMinLen(\"QueryString\", 1))",
          "8556:  }",
          "8558:  if invalidParams.Len() > 0 {",
          "8559:   return invalidParams",
          "8560:  }",
          "8561:  return nil",
          "8562: }",
          "8565: func (s *PutQueryDefinitionInput) SetLogGroupNames(v []*string) *PutQueryDefinitionInput {",
          "8566:  s.LogGroupNames = v",
          "8567:  return s",
          "8568: }",
          "8571: func (s *PutQueryDefinitionInput) SetName(v string) *PutQueryDefinitionInput {",
          "8572:  s.Name = &v",
          "8573:  return s",
          "8574: }",
          "8577: func (s *PutQueryDefinitionInput) SetQueryDefinitionId(v string) *PutQueryDefinitionInput {",
          "8578:  s.QueryDefinitionId = &v",
          "8579:  return s",
          "8580: }",
          "8583: func (s *PutQueryDefinitionInput) SetQueryString(v string) *PutQueryDefinitionInput {",
          "8584:  s.QueryString = &v",
          "8585:  return s",
          "8586: }",
          "8588: type PutQueryDefinitionOutput struct {",
          "8589:  _ struct{} `type:\"structure\"`",
          "8591:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8592: }",
          "8595: func (s PutQueryDefinitionOutput) String() string {",
          "8596:  return awsutil.Prettify(s)",
          "8597: }",
          "8600: func (s PutQueryDefinitionOutput) GoString() string {",
          "8601:  return s.String()",
          "8602: }",
          "8605: func (s *PutQueryDefinitionOutput) SetQueryDefinitionId(v string) *PutQueryDefinitionOutput {",
          "8606:  s.QueryDefinitionId = &v",
          "8607:  return s",
          "8608: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8472:  return s",
          "8473: }",
          "8477: type QueryInfo struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8972: type QueryDefinition struct {",
          "8973:  _ struct{} `type:\"structure\"`",
          "8975:  LastModified *int64 `locationName:\"lastModified\" type:\"long\"`",
          "8977:  LogGroupNames []*string `locationName:\"logGroupNames\" type:\"list\"`",
          "8979:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "8981:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8983:  QueryString *string `locationName:\"queryString\" min:\"1\" type:\"string\"`",
          "8984: }",
          "8987: func (s QueryDefinition) String() string {",
          "8988:  return awsutil.Prettify(s)",
          "8989: }",
          "8992: func (s QueryDefinition) GoString() string {",
          "8993:  return s.String()",
          "8994: }",
          "8997: func (s *QueryDefinition) SetLastModified(v int64) *QueryDefinition {",
          "8998:  s.LastModified = &v",
          "8999:  return s",
          "9000: }",
          "9003: func (s *QueryDefinition) SetLogGroupNames(v []*string) *QueryDefinition {",
          "9004:  s.LogGroupNames = v",
          "9005:  return s",
          "9006: }",
          "9009: func (s *QueryDefinition) SetName(v string) *QueryDefinition {",
          "9010:  s.Name = &v",
          "9011:  return s",
          "9012: }",
          "9015: func (s *QueryDefinition) SetQueryDefinitionId(v string) *QueryDefinition {",
          "9016:  s.QueryDefinitionId = &v",
          "9017:  return s",
          "9018: }",
          "9021: func (s *QueryDefinition) SetQueryString(v string) *QueryDefinition {",
          "9022:  s.QueryString = &v",
          "9023:  return s",
          "9024: }",
          "",
          "---------------"
        ],
        "service/cloudwatchlogs/cloudwatchlogsiface/interface.go||service/cloudwatchlogs/cloudwatchlogsiface/interface.go": [
          "File: service/cloudwatchlogs/cloudwatchlogsiface/interface.go -> service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  DeleteMetricFilterWithContext(aws.Context, *cloudwatchlogs.DeleteMetricFilterInput, ...request.Option) (*cloudwatchlogs.DeleteMetricFilterOutput, error)",
          "97:  DeleteMetricFilterRequest(*cloudwatchlogs.DeleteMetricFilterInput) (*request.Request, *cloudwatchlogs.DeleteMetricFilterOutput)",
          "99:  DeleteResourcePolicy(*cloudwatchlogs.DeleteResourcePolicyInput) (*cloudwatchlogs.DeleteResourcePolicyOutput, error)",
          "100:  DeleteResourcePolicyWithContext(aws.Context, *cloudwatchlogs.DeleteResourcePolicyInput, ...request.Option) (*cloudwatchlogs.DeleteResourcePolicyOutput, error)",
          "101:  DeleteResourcePolicyRequest(*cloudwatchlogs.DeleteResourcePolicyInput) (*request.Request, *cloudwatchlogs.DeleteResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  DeleteQueryDefinition(*cloudwatchlogs.DeleteQueryDefinitionInput) (*cloudwatchlogs.DeleteQueryDefinitionOutput, error)",
          "100:  DeleteQueryDefinitionWithContext(aws.Context, *cloudwatchlogs.DeleteQueryDefinitionInput, ...request.Option) (*cloudwatchlogs.DeleteQueryDefinitionOutput, error)",
          "101:  DeleteQueryDefinitionRequest(*cloudwatchlogs.DeleteQueryDefinitionInput) (*request.Request, *cloudwatchlogs.DeleteQueryDefinitionOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:  DescribeQueriesWithContext(aws.Context, *cloudwatchlogs.DescribeQueriesInput, ...request.Option) (*cloudwatchlogs.DescribeQueriesOutput, error)",
          "145:  DescribeQueriesRequest(*cloudwatchlogs.DescribeQueriesInput) (*request.Request, *cloudwatchlogs.DescribeQueriesOutput)",
          "147:  DescribeResourcePolicies(*cloudwatchlogs.DescribeResourcePoliciesInput) (*cloudwatchlogs.DescribeResourcePoliciesOutput, error)",
          "148:  DescribeResourcePoliciesWithContext(aws.Context, *cloudwatchlogs.DescribeResourcePoliciesInput, ...request.Option) (*cloudwatchlogs.DescribeResourcePoliciesOutput, error)",
          "149:  DescribeResourcePoliciesRequest(*cloudwatchlogs.DescribeResourcePoliciesInput) (*request.Request, *cloudwatchlogs.DescribeResourcePoliciesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:  DescribeQueryDefinitions(*cloudwatchlogs.DescribeQueryDefinitionsInput) (*cloudwatchlogs.DescribeQueryDefinitionsOutput, error)",
          "152:  DescribeQueryDefinitionsWithContext(aws.Context, *cloudwatchlogs.DescribeQueryDefinitionsInput, ...request.Option) (*cloudwatchlogs.DescribeQueryDefinitionsOutput, error)",
          "153:  DescribeQueryDefinitionsRequest(*cloudwatchlogs.DescribeQueryDefinitionsInput) (*request.Request, *cloudwatchlogs.DescribeQueryDefinitionsOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205:  PutMetricFilterWithContext(aws.Context, *cloudwatchlogs.PutMetricFilterInput, ...request.Option) (*cloudwatchlogs.PutMetricFilterOutput, error)",
          "206:  PutMetricFilterRequest(*cloudwatchlogs.PutMetricFilterInput) (*request.Request, *cloudwatchlogs.PutMetricFilterOutput)",
          "208:  PutResourcePolicy(*cloudwatchlogs.PutResourcePolicyInput) (*cloudwatchlogs.PutResourcePolicyOutput, error)",
          "209:  PutResourcePolicyWithContext(aws.Context, *cloudwatchlogs.PutResourcePolicyInput, ...request.Option) (*cloudwatchlogs.PutResourcePolicyOutput, error)",
          "210:  PutResourcePolicyRequest(*cloudwatchlogs.PutResourcePolicyInput) (*request.Request, *cloudwatchlogs.PutResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:  PutQueryDefinition(*cloudwatchlogs.PutQueryDefinitionInput) (*cloudwatchlogs.PutQueryDefinitionOutput, error)",
          "217:  PutQueryDefinitionWithContext(aws.Context, *cloudwatchlogs.PutQueryDefinitionInput, ...request.Option) (*cloudwatchlogs.PutQueryDefinitionOutput, error)",
          "218:  PutQueryDefinitionRequest(*cloudwatchlogs.PutQueryDefinitionInput) (*request.Request, *cloudwatchlogs.PutQueryDefinitionOutput)",
          "",
          "---------------"
        ],
        "service/cloudwatchlogs/errors.go||service/cloudwatchlogs/errors.go": [
          "File: service/cloudwatchlogs/errors.go -> service/cloudwatchlogs/errors.go"
        ],
        "service/codebuild/api.go||service/codebuild/api.go": [
          "File: service/codebuild/api.go -> service/codebuild/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1205:   Name:       opDescribeTestCases,",
          "1206:   HTTPMethod: \"POST\",",
          "1207:   HTTPPath:   \"/\",",
          "1208:  }",
          "1210:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1208:   Paginator: &request.Paginator{",
          "1209:    InputTokens:     []string{\"nextToken\"},",
          "1210:    OutputTokens:    []string{\"nextToken\"},",
          "1211:    LimitToken:      \"maxResults\",",
          "1212:    TruncationToken: \"\",",
          "1213:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1256:  return out, req.Send()",
          "1257: }",
          "1259: const opGetResourcePolicy = \"GetResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1282: func (c *CodeBuild) DescribeTestCasesPages(input *DescribeTestCasesInput, fn func(*DescribeTestCasesOutput, bool) bool) error {",
          "1283:  return c.DescribeTestCasesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1284: }",
          "1293: func (c *CodeBuild) DescribeTestCasesPagesWithContext(ctx aws.Context, input *DescribeTestCasesInput, fn func(*DescribeTestCasesOutput, bool) bool, opts ...request.Option) error {",
          "1294:  p := request.Pagination{",
          "1295:   NewRequest: func() (*request.Request, error) {",
          "1296:    var inCpy *DescribeTestCasesInput",
          "1297:    if input != nil {",
          "1298:     tmp := *input",
          "1299:     inCpy = &tmp",
          "1300:    }",
          "1301:    req, _ := c.DescribeTestCasesRequest(inCpy)",
          "1302:    req.SetContext(ctx)",
          "1303:    req.ApplyOptions(opts...)",
          "1304:    return req, nil",
          "1305:   },",
          "1306:  }",
          "1308:  for p.Next() {",
          "1309:   if !fn(p.Page().(*DescribeTestCasesOutput), !p.HasNextPage()) {",
          "1310:    break",
          "1311:   }",
          "1312:  }",
          "1314:  return p.Err()",
          "1315: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1539:   Name:       opListBuilds,",
          "1540:   HTTPMethod: \"POST\",",
          "1541:   HTTPPath:   \"/\",",
          "1542:  }",
          "1544:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1600:   Paginator: &request.Paginator{",
          "1601:    InputTokens:     []string{\"nextToken\"},",
          "1602:    OutputTokens:    []string{\"nextToken\"},",
          "1603:    LimitToken:      \"\",",
          "1604:    TruncationToken: \"\",",
          "1605:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1587:  return out, req.Send()",
          "1588: }",
          "1590: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1671: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "1672:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1673: }",
          "1682: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "1683:  p := request.Pagination{",
          "1684:   NewRequest: func() (*request.Request, error) {",
          "1685:    var inCpy *ListBuildsInput",
          "1686:    if input != nil {",
          "1687:     tmp := *input",
          "1688:     inCpy = &tmp",
          "1689:    }",
          "1690:    req, _ := c.ListBuildsRequest(inCpy)",
          "1691:    req.SetContext(ctx)",
          "1692:    req.ApplyOptions(opts...)",
          "1693:    return req, nil",
          "1694:   },",
          "1695:  }",
          "1697:  for p.Next() {",
          "1698:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "1699:    break",
          "1700:   }",
          "1701:  }",
          "1703:  return p.Err()",
          "1704: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1618:   Name:       opListBuildsForProject,",
          "1619:   HTTPMethod: \"POST\",",
          "1620:   HTTPPath:   \"/\",",
          "1621:  }",
          "1623:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1737:   Paginator: &request.Paginator{",
          "1738:    InputTokens:     []string{\"nextToken\"},",
          "1739:    OutputTokens:    []string{\"nextToken\"},",
          "1740:    LimitToken:      \"\",",
          "1741:    TruncationToken: \"\",",
          "1742:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1670:  return out, req.Send()",
          "1671: }",
          "1673: const opListCuratedEnvironmentImages = \"ListCuratedEnvironmentImages\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1812: func (c *CodeBuild) ListBuildsForProjectPages(input *ListBuildsForProjectInput, fn func(*ListBuildsForProjectOutput, bool) bool) error {",
          "1813:  return c.ListBuildsForProjectPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1814: }",
          "1823: func (c *CodeBuild) ListBuildsForProjectPagesWithContext(ctx aws.Context, input *ListBuildsForProjectInput, fn func(*ListBuildsForProjectOutput, bool) bool, opts ...request.Option) error {",
          "1824:  p := request.Pagination{",
          "1825:   NewRequest: func() (*request.Request, error) {",
          "1826:    var inCpy *ListBuildsForProjectInput",
          "1827:    if input != nil {",
          "1828:     tmp := *input",
          "1829:     inCpy = &tmp",
          "1830:    }",
          "1831:    req, _ := c.ListBuildsForProjectRequest(inCpy)",
          "1832:    req.SetContext(ctx)",
          "1833:    req.ApplyOptions(opts...)",
          "1834:    return req, nil",
          "1835:   },",
          "1836:  }",
          "1838:  for p.Next() {",
          "1839:   if !fn(p.Page().(*ListBuildsForProjectOutput), !p.HasNextPage()) {",
          "1840:    break",
          "1841:   }",
          "1842:  }",
          "1844:  return p.Err()",
          "1845: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1775:   Name:       opListProjects,",
          "1776:   HTTPMethod: \"POST\",",
          "1777:   HTTPPath:   \"/\",",
          "1778:  }",
          "1780:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1952:   Paginator: &request.Paginator{",
          "1953:    InputTokens:     []string{\"nextToken\"},",
          "1954:    OutputTokens:    []string{\"nextToken\"},",
          "1955:    LimitToken:      \"\",",
          "1956:    TruncationToken: \"\",",
          "1957:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1824:  return out, req.Send()",
          "1825: }",
          "1827: const opListReportGroups = \"ListReportGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024: func (c *CodeBuild) ListProjectsPages(input *ListProjectsInput, fn func(*ListProjectsOutput, bool) bool) error {",
          "2025:  return c.ListProjectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2026: }",
          "2035: func (c *CodeBuild) ListProjectsPagesWithContext(ctx aws.Context, input *ListProjectsInput, fn func(*ListProjectsOutput, bool) bool, opts ...request.Option) error {",
          "2036:  p := request.Pagination{",
          "2037:   NewRequest: func() (*request.Request, error) {",
          "2038:    var inCpy *ListProjectsInput",
          "2039:    if input != nil {",
          "2040:     tmp := *input",
          "2041:     inCpy = &tmp",
          "2042:    }",
          "2043:    req, _ := c.ListProjectsRequest(inCpy)",
          "2044:    req.SetContext(ctx)",
          "2045:    req.ApplyOptions(opts...)",
          "2046:    return req, nil",
          "2047:   },",
          "2048:  }",
          "2050:  for p.Next() {",
          "2051:   if !fn(p.Page().(*ListProjectsOutput), !p.HasNextPage()) {",
          "2052:    break",
          "2053:   }",
          "2054:  }",
          "2056:  return p.Err()",
          "2057: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1855:   Name:       opListReportGroups,",
          "1856:   HTTPMethod: \"POST\",",
          "1857:   HTTPPath:   \"/\",",
          "1858:  }",
          "1860:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2090:   Paginator: &request.Paginator{",
          "2091:    InputTokens:     []string{\"nextToken\"},",
          "2092:    OutputTokens:    []string{\"nextToken\"},",
          "2093:    LimitToken:      \"maxResults\",",
          "2094:    TruncationToken: \"\",",
          "2095:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1903:  return out, req.Send()",
          "1904: }",
          "1906: const opListReports = \"ListReports\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2161: func (c *CodeBuild) ListReportGroupsPages(input *ListReportGroupsInput, fn func(*ListReportGroupsOutput, bool) bool) error {",
          "2162:  return c.ListReportGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2163: }",
          "2172: func (c *CodeBuild) ListReportGroupsPagesWithContext(ctx aws.Context, input *ListReportGroupsInput, fn func(*ListReportGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2173:  p := request.Pagination{",
          "2174:   NewRequest: func() (*request.Request, error) {",
          "2175:    var inCpy *ListReportGroupsInput",
          "2176:    if input != nil {",
          "2177:     tmp := *input",
          "2178:     inCpy = &tmp",
          "2179:    }",
          "2180:    req, _ := c.ListReportGroupsRequest(inCpy)",
          "2181:    req.SetContext(ctx)",
          "2182:    req.ApplyOptions(opts...)",
          "2183:    return req, nil",
          "2184:   },",
          "2185:  }",
          "2187:  for p.Next() {",
          "2188:   if !fn(p.Page().(*ListReportGroupsOutput), !p.HasNextPage()) {",
          "2189:    break",
          "2190:   }",
          "2191:  }",
          "2193:  return p.Err()",
          "2194: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1934:   Name:       opListReports,",
          "1935:   HTTPMethod: \"POST\",",
          "1936:   HTTPPath:   \"/\",",
          "1937:  }",
          "1939:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2227:   Paginator: &request.Paginator{",
          "2228:    InputTokens:     []string{\"nextToken\"},",
          "2229:    OutputTokens:    []string{\"nextToken\"},",
          "2230:    LimitToken:      \"maxResults\",",
          "2231:    TruncationToken: \"\",",
          "2232:   },",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1982:  return out, req.Send()",
          "1983: }",
          "1985: const opListReportsForReportGroup = \"ListReportsForReportGroup\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2298: func (c *CodeBuild) ListReportsPages(input *ListReportsInput, fn func(*ListReportsOutput, bool) bool) error {",
          "2299:  return c.ListReportsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2300: }",
          "2309: func (c *CodeBuild) ListReportsPagesWithContext(ctx aws.Context, input *ListReportsInput, fn func(*ListReportsOutput, bool) bool, opts ...request.Option) error {",
          "2310:  p := request.Pagination{",
          "2311:   NewRequest: func() (*request.Request, error) {",
          "2312:    var inCpy *ListReportsInput",
          "2313:    if input != nil {",
          "2314:     tmp := *input",
          "2315:     inCpy = &tmp",
          "2316:    }",
          "2317:    req, _ := c.ListReportsRequest(inCpy)",
          "2318:    req.SetContext(ctx)",
          "2319:    req.ApplyOptions(opts...)",
          "2320:    return req, nil",
          "2321:   },",
          "2322:  }",
          "2324:  for p.Next() {",
          "2325:   if !fn(p.Page().(*ListReportsOutput), !p.HasNextPage()) {",
          "2326:    break",
          "2327:   }",
          "2328:  }",
          "2330:  return p.Err()",
          "2331: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2013:   Name:       opListReportsForReportGroup,",
          "2014:   HTTPMethod: \"POST\",",
          "2015:   HTTPPath:   \"/\",",
          "2016:  }",
          "2018:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2364:   Paginator: &request.Paginator{",
          "2365:    InputTokens:     []string{\"nextToken\"},",
          "2366:    OutputTokens:    []string{\"nextToken\"},",
          "2367:    LimitToken:      \"maxResults\",",
          "2368:    TruncationToken: \"\",",
          "2369:   },",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2064:  return out, req.Send()",
          "2065: }",
          "2067: const opListSharedProjects = \"ListSharedProjects\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2438: func (c *CodeBuild) ListReportsForReportGroupPages(input *ListReportsForReportGroupInput, fn func(*ListReportsForReportGroupOutput, bool) bool) error {",
          "2439:  return c.ListReportsForReportGroupPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2440: }",
          "2449: func (c *CodeBuild) ListReportsForReportGroupPagesWithContext(ctx aws.Context, input *ListReportsForReportGroupInput, fn func(*ListReportsForReportGroupOutput, bool) bool, opts ...request.Option) error {",
          "2450:  p := request.Pagination{",
          "2451:   NewRequest: func() (*request.Request, error) {",
          "2452:    var inCpy *ListReportsForReportGroupInput",
          "2453:    if input != nil {",
          "2454:     tmp := *input",
          "2455:     inCpy = &tmp",
          "2456:    }",
          "2457:    req, _ := c.ListReportsForReportGroupRequest(inCpy)",
          "2458:    req.SetContext(ctx)",
          "2459:    req.ApplyOptions(opts...)",
          "2460:    return req, nil",
          "2461:   },",
          "2462:  }",
          "2464:  for p.Next() {",
          "2465:   if !fn(p.Page().(*ListReportsForReportGroupOutput), !p.HasNextPage()) {",
          "2466:    break",
          "2467:   }",
          "2468:  }",
          "2470:  return p.Err()",
          "2471: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2095:   Name:       opListSharedProjects,",
          "2096:   HTTPMethod: \"POST\",",
          "2097:   HTTPPath:   \"/\",",
          "2098:  }",
          "2100:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2504:   Paginator: &request.Paginator{",
          "2505:    InputTokens:     []string{\"nextToken\"},",
          "2506:    OutputTokens:    []string{\"nextToken\"},",
          "2507:    LimitToken:      \"maxResults\",",
          "2508:    TruncationToken: \"\",",
          "2509:   },",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2143:  return out, req.Send()",
          "2144: }",
          "2146: const opListSharedReportGroups = \"ListSharedReportGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2575: func (c *CodeBuild) ListSharedProjectsPages(input *ListSharedProjectsInput, fn func(*ListSharedProjectsOutput, bool) bool) error {",
          "2576:  return c.ListSharedProjectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2577: }",
          "2586: func (c *CodeBuild) ListSharedProjectsPagesWithContext(ctx aws.Context, input *ListSharedProjectsInput, fn func(*ListSharedProjectsOutput, bool) bool, opts ...request.Option) error {",
          "2587:  p := request.Pagination{",
          "2588:   NewRequest: func() (*request.Request, error) {",
          "2589:    var inCpy *ListSharedProjectsInput",
          "2590:    if input != nil {",
          "2591:     tmp := *input",
          "2592:     inCpy = &tmp",
          "2593:    }",
          "2594:    req, _ := c.ListSharedProjectsRequest(inCpy)",
          "2595:    req.SetContext(ctx)",
          "2596:    req.ApplyOptions(opts...)",
          "2597:    return req, nil",
          "2598:   },",
          "2599:  }",
          "2601:  for p.Next() {",
          "2602:   if !fn(p.Page().(*ListSharedProjectsOutput), !p.HasNextPage()) {",
          "2603:    break",
          "2604:   }",
          "2605:  }",
          "2607:  return p.Err()",
          "2608: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2174:   Name:       opListSharedReportGroups,",
          "2175:   HTTPMethod: \"POST\",",
          "2176:   HTTPPath:   \"/\",",
          "2177:  }",
          "2179:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2641:   Paginator: &request.Paginator{",
          "2642:    InputTokens:     []string{\"nextToken\"},",
          "2643:    OutputTokens:    []string{\"nextToken\"},",
          "2644:    LimitToken:      \"maxResults\",",
          "2645:    TruncationToken: \"\",",
          "2646:   },",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2222:  return out, req.Send()",
          "2223: }",
          "2225: const opListSourceCredentials = \"ListSourceCredentials\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: func (c *CodeBuild) ListSharedReportGroupsPages(input *ListSharedReportGroupsInput, fn func(*ListSharedReportGroupsOutput, bool) bool) error {",
          "2713:  return c.ListSharedReportGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2714: }",
          "2723: func (c *CodeBuild) ListSharedReportGroupsPagesWithContext(ctx aws.Context, input *ListSharedReportGroupsInput, fn func(*ListSharedReportGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2724:  p := request.Pagination{",
          "2725:   NewRequest: func() (*request.Request, error) {",
          "2726:    var inCpy *ListSharedReportGroupsInput",
          "2727:    if input != nil {",
          "2728:     tmp := *input",
          "2729:     inCpy = &tmp",
          "2730:    }",
          "2731:    req, _ := c.ListSharedReportGroupsRequest(inCpy)",
          "2732:    req.SetContext(ctx)",
          "2733:    req.ApplyOptions(opts...)",
          "2734:    return req, nil",
          "2735:   },",
          "2736:  }",
          "2738:  for p.Next() {",
          "2739:   if !fn(p.Page().(*ListSharedReportGroupsOutput), !p.HasNextPage()) {",
          "2740:    break",
          "2741:   }",
          "2742:  }",
          "2744:  return p.Err()",
          "2745: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "10519:  WebhookFilterTypeFilePath = \"FILE_PATH\"",
          "10520: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11058:  WebhookFilterTypeCommitMessage = \"COMMIT_MESSAGE\"",
          "",
          "---------------"
        ],
        "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go": [
          "File: service/codebuild/codebuildiface/interface.go -> service/codebuild/codebuildiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  DescribeTestCasesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, ...request.Option) (*codebuild.DescribeTestCasesOutput, error)",
          "121:  DescribeTestCasesRequest(*codebuild.DescribeTestCasesInput) (*request.Request, *codebuild.DescribeTestCasesOutput)",
          "123:  GetResourcePolicy(*codebuild.GetResourcePolicyInput) (*codebuild.GetResourcePolicyOutput, error)",
          "124:  GetResourcePolicyWithContext(aws.Context, *codebuild.GetResourcePolicyInput, ...request.Option) (*codebuild.GetResourcePolicyOutput, error)",
          "125:  GetResourcePolicyRequest(*codebuild.GetResourcePolicyInput) (*request.Request, *codebuild.GetResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  DescribeTestCasesPages(*codebuild.DescribeTestCasesInput, func(*codebuild.DescribeTestCasesOutput, bool) bool) error",
          "124:  DescribeTestCasesPagesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, func(*codebuild.DescribeTestCasesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:  ListBuildsWithContext(aws.Context, *codebuild.ListBuildsInput, ...request.Option) (*codebuild.ListBuildsOutput, error)",
          "137:  ListBuildsRequest(*codebuild.ListBuildsInput) (*request.Request, *codebuild.ListBuildsOutput)",
          "139:  ListBuildsForProject(*codebuild.ListBuildsForProjectInput) (*codebuild.ListBuildsForProjectOutput, error)",
          "140:  ListBuildsForProjectWithContext(aws.Context, *codebuild.ListBuildsForProjectInput, ...request.Option) (*codebuild.ListBuildsForProjectOutput, error)",
          "141:  ListBuildsForProjectRequest(*codebuild.ListBuildsForProjectInput) (*request.Request, *codebuild.ListBuildsForProjectOutput)",
          "143:  ListCuratedEnvironmentImages(*codebuild.ListCuratedEnvironmentImagesInput) (*codebuild.ListCuratedEnvironmentImagesOutput, error)",
          "144:  ListCuratedEnvironmentImagesWithContext(aws.Context, *codebuild.ListCuratedEnvironmentImagesInput, ...request.Option) (*codebuild.ListCuratedEnvironmentImagesOutput, error)",
          "145:  ListCuratedEnvironmentImagesRequest(*codebuild.ListCuratedEnvironmentImagesInput) (*request.Request, *codebuild.ListCuratedEnvironmentImagesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:  ListBuildsPages(*codebuild.ListBuildsInput, func(*codebuild.ListBuildsOutput, bool) bool) error",
          "143:  ListBuildsPagesWithContext(aws.Context, *codebuild.ListBuildsInput, func(*codebuild.ListBuildsOutput, bool) bool, ...request.Option) error",
          "149:  ListBuildsForProjectPages(*codebuild.ListBuildsForProjectInput, func(*codebuild.ListBuildsForProjectOutput, bool) bool) error",
          "150:  ListBuildsForProjectPagesWithContext(aws.Context, *codebuild.ListBuildsForProjectInput, func(*codebuild.ListBuildsForProjectOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:  ListProjectsWithContext(aws.Context, *codebuild.ListProjectsInput, ...request.Option) (*codebuild.ListProjectsOutput, error)",
          "149:  ListProjectsRequest(*codebuild.ListProjectsInput) (*request.Request, *codebuild.ListProjectsOutput)",
          "151:  ListReportGroups(*codebuild.ListReportGroupsInput) (*codebuild.ListReportGroupsOutput, error)",
          "152:  ListReportGroupsWithContext(aws.Context, *codebuild.ListReportGroupsInput, ...request.Option) (*codebuild.ListReportGroupsOutput, error)",
          "153:  ListReportGroupsRequest(*codebuild.ListReportGroupsInput) (*request.Request, *codebuild.ListReportGroupsOutput)",
          "155:  ListReports(*codebuild.ListReportsInput) (*codebuild.ListReportsOutput, error)",
          "156:  ListReportsWithContext(aws.Context, *codebuild.ListReportsInput, ...request.Option) (*codebuild.ListReportsOutput, error)",
          "157:  ListReportsRequest(*codebuild.ListReportsInput) (*request.Request, *codebuild.ListReportsOutput)",
          "159:  ListReportsForReportGroup(*codebuild.ListReportsForReportGroupInput) (*codebuild.ListReportsForReportGroupOutput, error)",
          "160:  ListReportsForReportGroupWithContext(aws.Context, *codebuild.ListReportsForReportGroupInput, ...request.Option) (*codebuild.ListReportsForReportGroupOutput, error)",
          "161:  ListReportsForReportGroupRequest(*codebuild.ListReportsForReportGroupInput) (*request.Request, *codebuild.ListReportsForReportGroupOutput)",
          "163:  ListSharedProjects(*codebuild.ListSharedProjectsInput) (*codebuild.ListSharedProjectsOutput, error)",
          "164:  ListSharedProjectsWithContext(aws.Context, *codebuild.ListSharedProjectsInput, ...request.Option) (*codebuild.ListSharedProjectsOutput, error)",
          "165:  ListSharedProjectsRequest(*codebuild.ListSharedProjectsInput) (*request.Request, *codebuild.ListSharedProjectsOutput)",
          "167:  ListSharedReportGroups(*codebuild.ListSharedReportGroupsInput) (*codebuild.ListSharedReportGroupsOutput, error)",
          "168:  ListSharedReportGroupsWithContext(aws.Context, *codebuild.ListSharedReportGroupsInput, ...request.Option) (*codebuild.ListSharedReportGroupsOutput, error)",
          "169:  ListSharedReportGroupsRequest(*codebuild.ListSharedReportGroupsInput) (*request.Request, *codebuild.ListSharedReportGroupsOutput)",
          "171:  ListSourceCredentials(*codebuild.ListSourceCredentialsInput) (*codebuild.ListSourceCredentialsOutput, error)",
          "172:  ListSourceCredentialsWithContext(aws.Context, *codebuild.ListSourceCredentialsInput, ...request.Option) (*codebuild.ListSourceCredentialsOutput, error)",
          "173:  ListSourceCredentialsRequest(*codebuild.ListSourceCredentialsInput) (*request.Request, *codebuild.ListSourceCredentialsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:  ListProjectsPages(*codebuild.ListProjectsInput, func(*codebuild.ListProjectsOutput, bool) bool) error",
          "161:  ListProjectsPagesWithContext(aws.Context, *codebuild.ListProjectsInput, func(*codebuild.ListProjectsOutput, bool) bool, ...request.Option) error",
          "167:  ListReportGroupsPages(*codebuild.ListReportGroupsInput, func(*codebuild.ListReportGroupsOutput, bool) bool) error",
          "168:  ListReportGroupsPagesWithContext(aws.Context, *codebuild.ListReportGroupsInput, func(*codebuild.ListReportGroupsOutput, bool) bool, ...request.Option) error",
          "174:  ListReportsPages(*codebuild.ListReportsInput, func(*codebuild.ListReportsOutput, bool) bool) error",
          "175:  ListReportsPagesWithContext(aws.Context, *codebuild.ListReportsInput, func(*codebuild.ListReportsOutput, bool) bool, ...request.Option) error",
          "181:  ListReportsForReportGroupPages(*codebuild.ListReportsForReportGroupInput, func(*codebuild.ListReportsForReportGroupOutput, bool) bool) error",
          "182:  ListReportsForReportGroupPagesWithContext(aws.Context, *codebuild.ListReportsForReportGroupInput, func(*codebuild.ListReportsForReportGroupOutput, bool) bool, ...request.Option) error",
          "188:  ListSharedProjectsPages(*codebuild.ListSharedProjectsInput, func(*codebuild.ListSharedProjectsOutput, bool) bool) error",
          "189:  ListSharedProjectsPagesWithContext(aws.Context, *codebuild.ListSharedProjectsInput, func(*codebuild.ListSharedProjectsOutput, bool) bool, ...request.Option) error",
          "195:  ListSharedReportGroupsPages(*codebuild.ListSharedReportGroupsInput, func(*codebuild.ListSharedReportGroupsOutput, bool) bool) error",
          "196:  ListSharedReportGroupsPagesWithContext(aws.Context, *codebuild.ListSharedReportGroupsInput, func(*codebuild.ListSharedReportGroupsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "46594:  LaunchTemplate *LaunchTemplate `locationName:\"launchTemplate\" type:\"structure\"`",
          "46595: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46604:  Warning *ValidationWarning `locationName:\"warning\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46610:  return s",
          "46611: }",
          "46613: type CreateLaunchTemplateVersionInput struct {",
          "46614:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46624: func (s *CreateLaunchTemplateOutput) SetWarning(v *ValidationWarning) *CreateLaunchTemplateOutput {",
          "46625:  s.Warning = v",
          "46626:  return s",
          "46627: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46729:  LaunchTemplateVersion *LaunchTemplateVersion `locationName:\"launchTemplateVersion\" type:\"structure\"`",
          "46730: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46750:  Warning *ValidationWarning `locationName:\"warning\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46745:  return s",
          "46746: }",
          "46748: type CreateLocalGatewayRouteInput struct {",
          "46749:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46770: func (s *CreateLaunchTemplateVersionOutput) SetWarning(v *ValidationWarning) *CreateLaunchTemplateVersionOutput {",
          "46771:  s.Warning = v",
          "46772:  return s",
          "46773: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "107275:  return s",
          "107276: }",
          "107279: type VgwTelemetry struct {",
          "107280:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107308: type ValidationError struct {",
          "107309:  _ struct{} `type:\"structure\"`",
          "107313:  Code *string `locationName:\"code\" type:\"string\"`",
          "107318:  Message *string `locationName:\"message\" type:\"string\"`",
          "107319: }",
          "107322: func (s ValidationError) String() string {",
          "107323:  return awsutil.Prettify(s)",
          "107324: }",
          "107327: func (s ValidationError) GoString() string {",
          "107328:  return s.String()",
          "107329: }",
          "107332: func (s *ValidationError) SetCode(v string) *ValidationError {",
          "107333:  s.Code = &v",
          "107334:  return s",
          "107335: }",
          "107338: func (s *ValidationError) SetMessage(v string) *ValidationError {",
          "107339:  s.Message = &v",
          "107340:  return s",
          "107341: }",
          "107346: type ValidationWarning struct {",
          "107347:  _ struct{} `type:\"structure\"`",
          "107350:  Errors []*ValidationError `locationName:\"errorSet\" locationNameList:\"item\" type:\"list\"`",
          "107351: }",
          "107354: func (s ValidationWarning) String() string {",
          "107355:  return awsutil.Prettify(s)",
          "107356: }",
          "107359: func (s ValidationWarning) GoString() string {",
          "107360:  return s.String()",
          "107361: }",
          "107364: func (s *ValidationWarning) SetErrors(v []*ValidationError) *ValidationWarning {",
          "107365:  s.Errors = v",
          "107366:  return s",
          "107367: }",
          "",
          "---------------"
        ],
        "service/lightsail/api.go||service/lightsail/api.go": [
          "File: service/lightsail/api.go -> service/lightsail/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13514:  if s.PortInfo == nil {",
          "13515:   invalidParams.Add(request.NewErrParamRequired(\"PortInfo\"))",
          "13516:  }",
          "13518:  if invalidParams.Len() > 0 {",
          "13519:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13524:  if s.PortInfo != nil {",
          "13525:   if err := s.PortInfo.Validate(); err != nil {",
          "13526:    invalidParams.AddNested(\"PortInfo\", err.(request.ErrInvalidParams))",
          "13527:   }",
          "13528:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15397:  if s.InstancePort == nil {",
          "15398:   invalidParams.Add(request.NewErrParamRequired(\"InstancePort\"))",
          "15399:  }",
          "15400:  if s.LoadBalancerName == nil {",
          "15401:   invalidParams.Add(request.NewErrParamRequired(\"LoadBalancerName\"))",
          "15402:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15412:  if s.InstancePort != nil && *s.InstancePort < -1 {",
          "15413:   invalidParams.Add(request.NewErrParamMinValue(\"InstancePort\", -1))",
          "15414:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "23019:  return s",
          "23020: }",
          "23023: type InstancePortInfo struct {",
          "23024:  _ struct{} `type:\"structure\"`",
          "23027:  AccessDirection *string `locationName:\"accessDirection\" type:\"string\" enum:\"AccessDirection\"`",
          "23030:  AccessFrom *string `locationName:\"accessFrom\" type:\"string\"`",
          "23033:  AccessType *string `locationName:\"accessType\" type:\"string\" enum:\"PortAccessType\"`",
          "23036:  CommonName *string `locationName:\"commonName\" type:\"string\"`",
          "23039:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23065:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "23074:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "23090:  return s",
          "23091: }",
          "23094: func (s *InstancePortInfo) SetCommonName(v string) *InstancePortInfo {",
          "23095:  s.CommonName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23160: func (s *InstancePortInfo) SetCidrListAliases(v []*string) *InstancePortInfo {",
          "23161:  s.CidrListAliases = v",
          "23162:  return s",
          "23163: }",
          "23166: func (s *InstancePortInfo) SetCidrs(v []*string) *InstancePortInfo {",
          "23167:  s.Cidrs = v",
          "23168:  return s",
          "23169: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "23114:  return s",
          "23115: }",
          "23118: type InstancePortState struct {",
          "23119:  _ struct{} `type:\"structure\"`",
          "23122:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23205:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "23214:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "23158:  return s.String()",
          "23159: }",
          "23162: func (s *InstancePortState) SetFromPort(v int64) *InstancePortState {",
          "23163:  s.FromPort = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23284: func (s *InstancePortState) SetCidrListAliases(v []*string) *InstancePortState {",
          "23285:  s.CidrListAliases = v",
          "23286:  return s",
          "23287: }",
          "23290: func (s *InstancePortState) SetCidrs(v []*string) *InstancePortState {",
          "23291:  s.Cidrs = v",
          "23292:  return s",
          "23293: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "24507:  if s.PortInfo == nil {",
          "24508:   invalidParams.Add(request.NewErrParamRequired(\"PortInfo\"))",
          "24509:  }",
          "24511:  if invalidParams.Len() > 0 {",
          "24512:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24644:  if s.PortInfo != nil {",
          "24645:   if err := s.PortInfo.Validate(); err != nil {",
          "24646:    invalidParams.AddNested(\"PortInfo\", err.(request.ErrInvalidParams))",
          "24647:   }",
          "24648:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "24911:  return s",
          "24912: }",
          "24916: type PortInfo struct {",
          "24917:  _ struct{} `type:\"structure\"`",
          "24920:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "24923:  Protocol *string `locationName:\"protocol\" type:\"string\" enum:\"NetworkProtocol\"`",
          "24926:  ToPort *int64 `locationName:\"toPort\" type:\"integer\"`",
          "24927: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25063:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "25078:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "24936:  return s.String()",
          "24937: }",
          "24940: func (s *PortInfo) SetFromPort(v int64) *PortInfo {",
          "24941:  s.FromPort = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25143: func (s *PortInfo) Validate() error {",
          "25144:  invalidParams := request.ErrInvalidParams{Context: \"PortInfo\"}",
          "25145:  if s.FromPort != nil && *s.FromPort < -1 {",
          "25146:   invalidParams.Add(request.NewErrParamMinValue(\"FromPort\", -1))",
          "25147:  }",
          "25148:  if s.ToPort != nil && *s.ToPort < -1 {",
          "25149:   invalidParams.Add(request.NewErrParamMinValue(\"ToPort\", -1))",
          "25150:  }",
          "25152:  if invalidParams.Len() > 0 {",
          "25153:   return invalidParams",
          "25154:  }",
          "25155:  return nil",
          "25156: }",
          "25159: func (s *PortInfo) SetCidrListAliases(v []*string) *PortInfo {",
          "25160:  s.CidrListAliases = v",
          "25161:  return s",
          "25162: }",
          "25165: func (s *PortInfo) SetCidrs(v []*string) *PortInfo {",
          "25166:  s.Cidrs = v",
          "25167:  return s",
          "25168: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "25252:  if s.PortInfos == nil {",
          "25253:   invalidParams.Add(request.NewErrParamRequired(\"PortInfos\"))",
          "25254:  }",
          "25256:  if invalidParams.Len() > 0 {",
          "25257:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25486:  if s.PortInfos != nil {",
          "25487:   for i, v := range s.PortInfos {",
          "25488:    if v == nil {",
          "25489:     continue",
          "25490:    }",
          "25491:    if err := v.Validate(); err != nil {",
          "25492:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"PortInfos\", i), err.(request.ErrInvalidParams))",
          "25493:    }",
          "25494:   }",
          "25495:  }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "28320:  NetworkProtocolUdp = \"udp\"",
          "28321: )",
          "28323: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28564:  NetworkProtocolIcmp = \"icmp\"",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15198:  CloudWatchRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "15418: )",
          "15420: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15423:  ResourceRecordSetRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "15525: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15533:  VPCRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "45715:  OperatingSystemCentos = \"CENTOS\"",
          "45716: )",
          "45718: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45718:  OperatingSystemOracleLinux = \"ORACLE_LINUX\"",
          "45721:  OperatingSystemDebian = \"DEBIAN\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "972f63b853bc156fb8a49b8c228d03b6402ba93b",
      "candidate_info": {
        "commit_hash": "972f63b853bc156fb8a49b8c228d03b6402ba93b",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/972f63b853bc156fb8a49b8c228d03b6402ba93b",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/appflow/2020-08-23/api-2.json",
          "models/apis/appflow/2020-08-23/docs-2.json",
          "models/apis/appflow/2020-08-23/examples-1.json",
          "models/apis/appflow/2020-08-23/paginators-1.json",
          "models/apis/route53resolver/2018-04-01/api-2.json",
          "models/apis/route53resolver/2018-04-01/docs-2.json",
          "models/apis/route53resolver/2018-04-01/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/appflow/api.go",
          "service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go",
          "service/appflow/errors.go",
          "service/appflow/service.go",
          "service/route53resolver/api.go",
          "service/route53resolver/doc.go",
          "service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go"
        ],
        "message": "Release v1.34.11 (2020-08-26) (#3508)\n\nRelease v1.34.11 (2020-08-26)\n===\n\n### Service Client Updates\n* `service/appflow`: Adds new service\n* `service/route53resolver`: Updates service API, documentation, and paginators",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/appflow/api.go||service/appflow/api.go",
          "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go",
          "service/appflow/doc.go||service/appflow/doc.go",
          "service/appflow/errors.go||service/appflow/errors.go",
          "service/appflow/service.go||service/appflow/service.go",
          "service/route53resolver/api.go||service/route53resolver/api.go",
          "service/route53resolver/doc.go||service/route53resolver/doc.go",
          "service/route53resolver/errors.go||service/route53resolver/errors.go",
          "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3305:     \"ca-central-1\":   endpoint{},",
          "3306:     \"eu-central-1\":   endpoint{},",
          "3307:     \"eu-north-1\":     endpoint{},",
          "3308:     \"eu-west-1\":      endpoint{},",
          "3309:     \"eu-west-2\":      endpoint{},",
          "3310:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3308:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8092:     },",
          "8093:    },",
          "8094:    Endpoints: endpoints{",
          "8095:     \"us-gov-west-1\": endpoint{},",
          "8096:    },",
          "8097:   },",
          "8098:   \"iotsecuredtunneling\": service{",
          "8100:    Endpoints: endpoints{",
          "8101:     \"us-gov-west-1\": endpoint{},",
          "8102:    },",
          "8103:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8096:     \"us-gov-east-1\": endpoint{},",
          "8103:     \"us-gov-east-1\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.10\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.11\"",
          "",
          "---------------"
        ],
        "service/appflow/api.go||service/appflow/api.go": [
          "File: service/appflow/api.go -> service/appflow/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "14: )",
          "16: const opCreateConnectorProfile = \"CreateConnectorProfile\"",
          "42: func (c *Appflow) CreateConnectorProfileRequest(input *CreateConnectorProfileInput) (req *request.Request, output *CreateConnectorProfileOutput) {",
          "43:  op := &request.Operation{",
          "44:   Name:       opCreateConnectorProfile,",
          "45:   HTTPMethod: \"POST\",",
          "46:   HTTPPath:   \"/create-connector-profile\",",
          "47:  }",
          "49:  if input == nil {",
          "50:   input = &CreateConnectorProfileInput{}",
          "51:  }",
          "53:  output = &CreateConnectorProfileOutput{}",
          "54:  req = c.newRequest(op, input, output)",
          "55:  return",
          "56: }",
          "93: func (c *Appflow) CreateConnectorProfile(input *CreateConnectorProfileInput) (*CreateConnectorProfileOutput, error) {",
          "94:  req, out := c.CreateConnectorProfileRequest(input)",
          "95:  return out, req.Send()",
          "96: }",
          "107: func (c *Appflow) CreateConnectorProfileWithContext(ctx aws.Context, input *CreateConnectorProfileInput, opts ...request.Option) (*CreateConnectorProfileOutput, error) {",
          "108:  req, out := c.CreateConnectorProfileRequest(input)",
          "109:  req.SetContext(ctx)",
          "110:  req.ApplyOptions(opts...)",
          "111:  return out, req.Send()",
          "112: }",
          "114: const opCreateFlow = \"CreateFlow\"",
          "140: func (c *Appflow) CreateFlowRequest(input *CreateFlowInput) (req *request.Request, output *CreateFlowOutput) {",
          "141:  op := &request.Operation{",
          "142:   Name:       opCreateFlow,",
          "143:   HTTPMethod: \"POST\",",
          "144:   HTTPPath:   \"/create-flow\",",
          "145:  }",
          "147:  if input == nil {",
          "148:   input = &CreateFlowInput{}",
          "149:  }",
          "151:  output = &CreateFlowOutput{}",
          "152:  req = c.newRequest(op, input, output)",
          "153:  return",
          "154: }",
          "199: func (c *Appflow) CreateFlow(input *CreateFlowInput) (*CreateFlowOutput, error) {",
          "200:  req, out := c.CreateFlowRequest(input)",
          "201:  return out, req.Send()",
          "202: }",
          "213: func (c *Appflow) CreateFlowWithContext(ctx aws.Context, input *CreateFlowInput, opts ...request.Option) (*CreateFlowOutput, error) {",
          "214:  req, out := c.CreateFlowRequest(input)",
          "215:  req.SetContext(ctx)",
          "216:  req.ApplyOptions(opts...)",
          "217:  return out, req.Send()",
          "218: }",
          "220: const opDeleteConnectorProfile = \"DeleteConnectorProfile\"",
          "246: func (c *Appflow) DeleteConnectorProfileRequest(input *DeleteConnectorProfileInput) (req *request.Request, output *DeleteConnectorProfileOutput) {",
          "247:  op := &request.Operation{",
          "248:   Name:       opDeleteConnectorProfile,",
          "249:   HTTPMethod: \"POST\",",
          "250:   HTTPPath:   \"/delete-connector-profile\",",
          "251:  }",
          "253:  if input == nil {",
          "254:   input = &DeleteConnectorProfileInput{}",
          "255:  }",
          "257:  output = &DeleteConnectorProfileOutput{}",
          "258:  req = c.newRequest(op, input, output)",
          "259:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "260:  return",
          "261: }",
          "289: func (c *Appflow) DeleteConnectorProfile(input *DeleteConnectorProfileInput) (*DeleteConnectorProfileOutput, error) {",
          "290:  req, out := c.DeleteConnectorProfileRequest(input)",
          "291:  return out, req.Send()",
          "292: }",
          "303: func (c *Appflow) DeleteConnectorProfileWithContext(ctx aws.Context, input *DeleteConnectorProfileInput, opts ...request.Option) (*DeleteConnectorProfileOutput, error) {",
          "304:  req, out := c.DeleteConnectorProfileRequest(input)",
          "305:  req.SetContext(ctx)",
          "306:  req.ApplyOptions(opts...)",
          "307:  return out, req.Send()",
          "308: }",
          "310: const opDeleteFlow = \"DeleteFlow\"",
          "336: func (c *Appflow) DeleteFlowRequest(input *DeleteFlowInput) (req *request.Request, output *DeleteFlowOutput) {",
          "337:  op := &request.Operation{",
          "338:   Name:       opDeleteFlow,",
          "339:   HTTPMethod: \"POST\",",
          "340:   HTTPPath:   \"/delete-flow\",",
          "341:  }",
          "343:  if input == nil {",
          "344:   input = &DeleteFlowInput{}",
          "345:  }",
          "347:  output = &DeleteFlowOutput{}",
          "348:  req = c.newRequest(op, input, output)",
          "349:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "350:  return",
          "351: }",
          "381: func (c *Appflow) DeleteFlow(input *DeleteFlowInput) (*DeleteFlowOutput, error) {",
          "382:  req, out := c.DeleteFlowRequest(input)",
          "383:  return out, req.Send()",
          "384: }",
          "395: func (c *Appflow) DeleteFlowWithContext(ctx aws.Context, input *DeleteFlowInput, opts ...request.Option) (*DeleteFlowOutput, error) {",
          "396:  req, out := c.DeleteFlowRequest(input)",
          "397:  req.SetContext(ctx)",
          "398:  req.ApplyOptions(opts...)",
          "399:  return out, req.Send()",
          "400: }",
          "402: const opDescribeConnectorEntity = \"DescribeConnectorEntity\"",
          "428: func (c *Appflow) DescribeConnectorEntityRequest(input *DescribeConnectorEntityInput) (req *request.Request, output *DescribeConnectorEntityOutput) {",
          "429:  op := &request.Operation{",
          "430:   Name:       opDescribeConnectorEntity,",
          "431:   HTTPMethod: \"POST\",",
          "432:   HTTPPath:   \"/describe-connector-entity\",",
          "433:  }",
          "435:  if input == nil {",
          "436:   input = &DescribeConnectorEntityInput{}",
          "437:  }",
          "439:  output = &DescribeConnectorEntityOutput{}",
          "440:  req = c.newRequest(op, input, output)",
          "441:  return",
          "442: }",
          "475: func (c *Appflow) DescribeConnectorEntity(input *DescribeConnectorEntityInput) (*DescribeConnectorEntityOutput, error) {",
          "476:  req, out := c.DescribeConnectorEntityRequest(input)",
          "477:  return out, req.Send()",
          "478: }",
          "489: func (c *Appflow) DescribeConnectorEntityWithContext(ctx aws.Context, input *DescribeConnectorEntityInput, opts ...request.Option) (*DescribeConnectorEntityOutput, error) {",
          "490:  req, out := c.DescribeConnectorEntityRequest(input)",
          "491:  req.SetContext(ctx)",
          "492:  req.ApplyOptions(opts...)",
          "493:  return out, req.Send()",
          "494: }",
          "496: const opDescribeConnectorProfiles = \"DescribeConnectorProfiles\"",
          "522: func (c *Appflow) DescribeConnectorProfilesRequest(input *DescribeConnectorProfilesInput) (req *request.Request, output *DescribeConnectorProfilesOutput) {",
          "523:  op := &request.Operation{",
          "524:   Name:       opDescribeConnectorProfiles,",
          "525:   HTTPMethod: \"POST\",",
          "526:   HTTPPath:   \"/describe-connector-profiles\",",
          "527:   Paginator: &request.Paginator{",
          "528:    InputTokens:     []string{\"nextToken\"},",
          "529:    OutputTokens:    []string{\"nextToken\"},",
          "530:    LimitToken:      \"maxResults\",",
          "531:    TruncationToken: \"\",",
          "532:   },",
          "533:  }",
          "535:  if input == nil {",
          "536:   input = &DescribeConnectorProfilesInput{}",
          "537:  }",
          "539:  output = &DescribeConnectorProfilesOutput{}",
          "540:  req = c.newRequest(op, input, output)",
          "541:  return",
          "542: }",
          "570: func (c *Appflow) DescribeConnectorProfiles(input *DescribeConnectorProfilesInput) (*DescribeConnectorProfilesOutput, error) {",
          "571:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "572:  return out, req.Send()",
          "573: }",
          "584: func (c *Appflow) DescribeConnectorProfilesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, opts ...request.Option) (*DescribeConnectorProfilesOutput, error) {",
          "585:  req, out := c.DescribeConnectorProfilesRequest(input)",
          "586:  req.SetContext(ctx)",
          "587:  req.ApplyOptions(opts...)",
          "588:  return out, req.Send()",
          "589: }",
          "608: func (c *Appflow) DescribeConnectorProfilesPages(input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool) error {",
          "609:  return c.DescribeConnectorProfilesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "610: }",
          "619: func (c *Appflow) DescribeConnectorProfilesPagesWithContext(ctx aws.Context, input *DescribeConnectorProfilesInput, fn func(*DescribeConnectorProfilesOutput, bool) bool, opts ...request.Option) error {",
          "620:  p := request.Pagination{",
          "621:   NewRequest: func() (*request.Request, error) {",
          "622:    var inCpy *DescribeConnectorProfilesInput",
          "623:    if input != nil {",
          "624:     tmp := *input",
          "625:     inCpy = &tmp",
          "626:    }",
          "627:    req, _ := c.DescribeConnectorProfilesRequest(inCpy)",
          "628:    req.SetContext(ctx)",
          "629:    req.ApplyOptions(opts...)",
          "630:    return req, nil",
          "631:   },",
          "632:  }",
          "634:  for p.Next() {",
          "635:   if !fn(p.Page().(*DescribeConnectorProfilesOutput), !p.HasNextPage()) {",
          "636:    break",
          "637:   }",
          "638:  }",
          "640:  return p.Err()",
          "641: }",
          "643: const opDescribeConnectors = \"DescribeConnectors\"",
          "669: func (c *Appflow) DescribeConnectorsRequest(input *DescribeConnectorsInput) (req *request.Request, output *DescribeConnectorsOutput) {",
          "670:  op := &request.Operation{",
          "671:   Name:       opDescribeConnectors,",
          "672:   HTTPMethod: \"POST\",",
          "673:   HTTPPath:   \"/describe-connectors\",",
          "674:   Paginator: &request.Paginator{",
          "675:    InputTokens:     []string{\"nextToken\"},",
          "676:    OutputTokens:    []string{\"nextToken\"},",
          "677:    LimitToken:      \"\",",
          "678:    TruncationToken: \"\",",
          "679:   },",
          "680:  }",
          "682:  if input == nil {",
          "683:   input = &DescribeConnectorsInput{}",
          "684:  }",
          "686:  output = &DescribeConnectorsOutput{}",
          "687:  req = c.newRequest(op, input, output)",
          "688:  return",
          "689: }",
          "716: func (c *Appflow) DescribeConnectors(input *DescribeConnectorsInput) (*DescribeConnectorsOutput, error) {",
          "717:  req, out := c.DescribeConnectorsRequest(input)",
          "718:  return out, req.Send()",
          "719: }",
          "730: func (c *Appflow) DescribeConnectorsWithContext(ctx aws.Context, input *DescribeConnectorsInput, opts ...request.Option) (*DescribeConnectorsOutput, error) {",
          "731:  req, out := c.DescribeConnectorsRequest(input)",
          "732:  req.SetContext(ctx)",
          "733:  req.ApplyOptions(opts...)",
          "734:  return out, req.Send()",
          "735: }",
          "754: func (c *Appflow) DescribeConnectorsPages(input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool) error {",
          "755:  return c.DescribeConnectorsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "756: }",
          "765: func (c *Appflow) DescribeConnectorsPagesWithContext(ctx aws.Context, input *DescribeConnectorsInput, fn func(*DescribeConnectorsOutput, bool) bool, opts ...request.Option) error {",
          "766:  p := request.Pagination{",
          "767:   NewRequest: func() (*request.Request, error) {",
          "768:    var inCpy *DescribeConnectorsInput",
          "769:    if input != nil {",
          "770:     tmp := *input",
          "771:     inCpy = &tmp",
          "772:    }",
          "773:    req, _ := c.DescribeConnectorsRequest(inCpy)",
          "774:    req.SetContext(ctx)",
          "775:    req.ApplyOptions(opts...)",
          "776:    return req, nil",
          "777:   },",
          "778:  }",
          "780:  for p.Next() {",
          "781:   if !fn(p.Page().(*DescribeConnectorsOutput), !p.HasNextPage()) {",
          "782:    break",
          "783:   }",
          "784:  }",
          "786:  return p.Err()",
          "787: }",
          "789: const opDescribeFlow = \"DescribeFlow\"",
          "815: func (c *Appflow) DescribeFlowRequest(input *DescribeFlowInput) (req *request.Request, output *DescribeFlowOutput) {",
          "816:  op := &request.Operation{",
          "817:   Name:       opDescribeFlow,",
          "818:   HTTPMethod: \"POST\",",
          "819:   HTTPPath:   \"/describe-flow\",",
          "820:  }",
          "822:  if input == nil {",
          "823:   input = &DescribeFlowInput{}",
          "824:  }",
          "826:  output = &DescribeFlowOutput{}",
          "827:  req = c.newRequest(op, input, output)",
          "828:  return",
          "829: }",
          "852: func (c *Appflow) DescribeFlow(input *DescribeFlowInput) (*DescribeFlowOutput, error) {",
          "853:  req, out := c.DescribeFlowRequest(input)",
          "854:  return out, req.Send()",
          "855: }",
          "866: func (c *Appflow) DescribeFlowWithContext(ctx aws.Context, input *DescribeFlowInput, opts ...request.Option) (*DescribeFlowOutput, error) {",
          "867:  req, out := c.DescribeFlowRequest(input)",
          "868:  req.SetContext(ctx)",
          "869:  req.ApplyOptions(opts...)",
          "870:  return out, req.Send()",
          "871: }",
          "873: const opDescribeFlowExecutionRecords = \"DescribeFlowExecutionRecords\"",
          "899: func (c *Appflow) DescribeFlowExecutionRecordsRequest(input *DescribeFlowExecutionRecordsInput) (req *request.Request, output *DescribeFlowExecutionRecordsOutput) {",
          "900:  op := &request.Operation{",
          "901:   Name:       opDescribeFlowExecutionRecords,",
          "902:   HTTPMethod: \"POST\",",
          "903:   HTTPPath:   \"/describe-flow-execution-records\",",
          "904:   Paginator: &request.Paginator{",
          "905:    InputTokens:     []string{\"nextToken\"},",
          "906:    OutputTokens:    []string{\"nextToken\"},",
          "907:    LimitToken:      \"maxResults\",",
          "908:    TruncationToken: \"\",",
          "909:   },",
          "910:  }",
          "912:  if input == nil {",
          "913:   input = &DescribeFlowExecutionRecordsInput{}",
          "914:  }",
          "916:  output = &DescribeFlowExecutionRecordsOutput{}",
          "917:  req = c.newRequest(op, input, output)",
          "918:  return",
          "919: }",
          "945: func (c *Appflow) DescribeFlowExecutionRecords(input *DescribeFlowExecutionRecordsInput) (*DescribeFlowExecutionRecordsOutput, error) {",
          "946:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "947:  return out, req.Send()",
          "948: }",
          "959: func (c *Appflow) DescribeFlowExecutionRecordsWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, opts ...request.Option) (*DescribeFlowExecutionRecordsOutput, error) {",
          "960:  req, out := c.DescribeFlowExecutionRecordsRequest(input)",
          "961:  req.SetContext(ctx)",
          "962:  req.ApplyOptions(opts...)",
          "963:  return out, req.Send()",
          "964: }",
          "983: func (c *Appflow) DescribeFlowExecutionRecordsPages(input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool) error {",
          "984:  return c.DescribeFlowExecutionRecordsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "985: }",
          "994: func (c *Appflow) DescribeFlowExecutionRecordsPagesWithContext(ctx aws.Context, input *DescribeFlowExecutionRecordsInput, fn func(*DescribeFlowExecutionRecordsOutput, bool) bool, opts ...request.Option) error {",
          "995:  p := request.Pagination{",
          "996:   NewRequest: func() (*request.Request, error) {",
          "997:    var inCpy *DescribeFlowExecutionRecordsInput",
          "998:    if input != nil {",
          "999:     tmp := *input",
          "1000:     inCpy = &tmp",
          "1001:    }",
          "1002:    req, _ := c.DescribeFlowExecutionRecordsRequest(inCpy)",
          "1003:    req.SetContext(ctx)",
          "1004:    req.ApplyOptions(opts...)",
          "1005:    return req, nil",
          "1006:   },",
          "1007:  }",
          "1009:  for p.Next() {",
          "1010:   if !fn(p.Page().(*DescribeFlowExecutionRecordsOutput), !p.HasNextPage()) {",
          "1011:    break",
          "1012:   }",
          "1013:  }",
          "1015:  return p.Err()",
          "1016: }",
          "1018: const opListConnectorEntities = \"ListConnectorEntities\"",
          "1044: func (c *Appflow) ListConnectorEntitiesRequest(input *ListConnectorEntitiesInput) (req *request.Request, output *ListConnectorEntitiesOutput) {",
          "1045:  op := &request.Operation{",
          "1046:   Name:       opListConnectorEntities,",
          "1047:   HTTPMethod: \"POST\",",
          "1048:   HTTPPath:   \"/list-connector-entities\",",
          "1049:  }",
          "1051:  if input == nil {",
          "1052:   input = &ListConnectorEntitiesInput{}",
          "1053:  }",
          "1055:  output = &ListConnectorEntitiesOutput{}",
          "1056:  req = c.newRequest(op, input, output)",
          "1057:  return",
          "1058: }",
          "1092: func (c *Appflow) ListConnectorEntities(input *ListConnectorEntitiesInput) (*ListConnectorEntitiesOutput, error) {",
          "1093:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1094:  return out, req.Send()",
          "1095: }",
          "1106: func (c *Appflow) ListConnectorEntitiesWithContext(ctx aws.Context, input *ListConnectorEntitiesInput, opts ...request.Option) (*ListConnectorEntitiesOutput, error) {",
          "1107:  req, out := c.ListConnectorEntitiesRequest(input)",
          "1108:  req.SetContext(ctx)",
          "1109:  req.ApplyOptions(opts...)",
          "1110:  return out, req.Send()",
          "1111: }",
          "1113: const opListFlows = \"ListFlows\"",
          "1139: func (c *Appflow) ListFlowsRequest(input *ListFlowsInput) (req *request.Request, output *ListFlowsOutput) {",
          "1140:  op := &request.Operation{",
          "1141:   Name:       opListFlows,",
          "1142:   HTTPMethod: \"POST\",",
          "1143:   HTTPPath:   \"/list-flows\",",
          "1144:   Paginator: &request.Paginator{",
          "1145:    InputTokens:     []string{\"nextToken\"},",
          "1146:    OutputTokens:    []string{\"nextToken\"},",
          "1147:    LimitToken:      \"maxResults\",",
          "1148:    TruncationToken: \"\",",
          "1149:   },",
          "1150:  }",
          "1152:  if input == nil {",
          "1153:   input = &ListFlowsInput{}",
          "1154:  }",
          "1156:  output = &ListFlowsOutput{}",
          "1157:  req = c.newRequest(op, input, output)",
          "1158:  return",
          "1159: }",
          "1181: func (c *Appflow) ListFlows(input *ListFlowsInput) (*ListFlowsOutput, error) {",
          "1182:  req, out := c.ListFlowsRequest(input)",
          "1183:  return out, req.Send()",
          "1184: }",
          "1195: func (c *Appflow) ListFlowsWithContext(ctx aws.Context, input *ListFlowsInput, opts ...request.Option) (*ListFlowsOutput, error) {",
          "1196:  req, out := c.ListFlowsRequest(input)",
          "1197:  req.SetContext(ctx)",
          "1198:  req.ApplyOptions(opts...)",
          "1199:  return out, req.Send()",
          "1200: }",
          "1219: func (c *Appflow) ListFlowsPages(input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool) error {",
          "1220:  return c.ListFlowsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1221: }",
          "1230: func (c *Appflow) ListFlowsPagesWithContext(ctx aws.Context, input *ListFlowsInput, fn func(*ListFlowsOutput, bool) bool, opts ...request.Option) error {",
          "1231:  p := request.Pagination{",
          "1232:   NewRequest: func() (*request.Request, error) {",
          "1233:    var inCpy *ListFlowsInput",
          "1234:    if input != nil {",
          "1235:     tmp := *input",
          "1236:     inCpy = &tmp",
          "1237:    }",
          "1238:    req, _ := c.ListFlowsRequest(inCpy)",
          "1239:    req.SetContext(ctx)",
          "1240:    req.ApplyOptions(opts...)",
          "1241:    return req, nil",
          "1242:   },",
          "1243:  }",
          "1245:  for p.Next() {",
          "1246:   if !fn(p.Page().(*ListFlowsOutput), !p.HasNextPage()) {",
          "1247:    break",
          "1248:   }",
          "1249:  }",
          "1251:  return p.Err()",
          "1252: }",
          "1254: const opListTagsForResource = \"ListTagsForResource\"",
          "1280: func (c *Appflow) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {",
          "1281:  op := &request.Operation{",
          "1282:   Name:       opListTagsForResource,",
          "1283:   HTTPMethod: \"GET\",",
          "1284:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1285:  }",
          "1287:  if input == nil {",
          "1288:   input = &ListTagsForResourceInput{}",
          "1289:  }",
          "1291:  output = &ListTagsForResourceOutput{}",
          "1292:  req = c.newRequest(op, input, output)",
          "1293:  return",
          "1294: }",
          "1320: func (c *Appflow) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1321:  req, out := c.ListTagsForResourceRequest(input)",
          "1322:  return out, req.Send()",
          "1323: }",
          "1334: func (c *Appflow) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1335:  req, out := c.ListTagsForResourceRequest(input)",
          "1336:  req.SetContext(ctx)",
          "1337:  req.ApplyOptions(opts...)",
          "1338:  return out, req.Send()",
          "1339: }",
          "1341: const opStartFlow = \"StartFlow\"",
          "1367: func (c *Appflow) StartFlowRequest(input *StartFlowInput) (req *request.Request, output *StartFlowOutput) {",
          "1368:  op := &request.Operation{",
          "1369:   Name:       opStartFlow,",
          "1370:   HTTPMethod: \"POST\",",
          "1371:   HTTPPath:   \"/start-flow\",",
          "1372:  }",
          "1374:  if input == nil {",
          "1375:   input = &StartFlowInput{}",
          "1376:  }",
          "1378:  output = &StartFlowOutput{}",
          "1379:  req = c.newRequest(op, input, output)",
          "1380:  return",
          "1381: }",
          "1415: func (c *Appflow) StartFlow(input *StartFlowInput) (*StartFlowOutput, error) {",
          "1416:  req, out := c.StartFlowRequest(input)",
          "1417:  return out, req.Send()",
          "1418: }",
          "1429: func (c *Appflow) StartFlowWithContext(ctx aws.Context, input *StartFlowInput, opts ...request.Option) (*StartFlowOutput, error) {",
          "1430:  req, out := c.StartFlowRequest(input)",
          "1431:  req.SetContext(ctx)",
          "1432:  req.ApplyOptions(opts...)",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opStopFlow = \"StopFlow\"",
          "1462: func (c *Appflow) StopFlowRequest(input *StopFlowInput) (req *request.Request, output *StopFlowOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opStopFlow,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/stop-flow\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &StopFlowInput{}",
          "1471:  }",
          "1473:  output = &StopFlowOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1509: func (c *Appflow) StopFlow(input *StopFlowInput) (*StopFlowOutput, error) {",
          "1510:  req, out := c.StopFlowRequest(input)",
          "1511:  return out, req.Send()",
          "1512: }",
          "1523: func (c *Appflow) StopFlowWithContext(ctx aws.Context, input *StopFlowInput, opts ...request.Option) (*StopFlowOutput, error) {",
          "1524:  req, out := c.StopFlowRequest(input)",
          "1525:  req.SetContext(ctx)",
          "1526:  req.ApplyOptions(opts...)",
          "1527:  return out, req.Send()",
          "1528: }",
          "1530: const opTagResource = \"TagResource\"",
          "1556: func (c *Appflow) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {",
          "1557:  op := &request.Operation{",
          "1558:   Name:       opTagResource,",
          "1559:   HTTPMethod: \"POST\",",
          "1560:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1561:  }",
          "1563:  if input == nil {",
          "1564:   input = &TagResourceInput{}",
          "1565:  }",
          "1567:  output = &TagResourceOutput{}",
          "1568:  req = c.newRequest(op, input, output)",
          "1569:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1570:  return",
          "1571: }",
          "1597: func (c *Appflow) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {",
          "1598:  req, out := c.TagResourceRequest(input)",
          "1599:  return out, req.Send()",
          "1600: }",
          "1611: func (c *Appflow) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {",
          "1612:  req, out := c.TagResourceRequest(input)",
          "1613:  req.SetContext(ctx)",
          "1614:  req.ApplyOptions(opts...)",
          "1615:  return out, req.Send()",
          "1616: }",
          "1618: const opUntagResource = \"UntagResource\"",
          "1644: func (c *Appflow) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {",
          "1645:  op := &request.Operation{",
          "1646:   Name:       opUntagResource,",
          "1647:   HTTPMethod: \"DELETE\",",
          "1648:   HTTPPath:   \"/tags/{resourceArn}\",",
          "1649:  }",
          "1651:  if input == nil {",
          "1652:   input = &UntagResourceInput{}",
          "1653:  }",
          "1655:  output = &UntagResourceOutput{}",
          "1656:  req = c.newRequest(op, input, output)",
          "1657:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "1658:  return",
          "1659: }",
          "1685: func (c *Appflow) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {",
          "1686:  req, out := c.UntagResourceRequest(input)",
          "1687:  return out, req.Send()",
          "1688: }",
          "1699: func (c *Appflow) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {",
          "1700:  req, out := c.UntagResourceRequest(input)",
          "1701:  req.SetContext(ctx)",
          "1702:  req.ApplyOptions(opts...)",
          "1703:  return out, req.Send()",
          "1704: }",
          "1706: const opUpdateConnectorProfile = \"UpdateConnectorProfile\"",
          "1732: func (c *Appflow) UpdateConnectorProfileRequest(input *UpdateConnectorProfileInput) (req *request.Request, output *UpdateConnectorProfileOutput) {",
          "1733:  op := &request.Operation{",
          "1734:   Name:       opUpdateConnectorProfile,",
          "1735:   HTTPMethod: \"POST\",",
          "1736:   HTTPPath:   \"/update-connector-profile\",",
          "1737:  }",
          "1739:  if input == nil {",
          "1740:   input = &UpdateConnectorProfileInput{}",
          "1741:  }",
          "1743:  output = &UpdateConnectorProfileOutput{}",
          "1744:  req = c.newRequest(op, input, output)",
          "1745:  return",
          "1746: }",
          "1780: func (c *Appflow) UpdateConnectorProfile(input *UpdateConnectorProfileInput) (*UpdateConnectorProfileOutput, error) {",
          "1781:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1782:  return out, req.Send()",
          "1783: }",
          "1794: func (c *Appflow) UpdateConnectorProfileWithContext(ctx aws.Context, input *UpdateConnectorProfileInput, opts ...request.Option) (*UpdateConnectorProfileOutput, error) {",
          "1795:  req, out := c.UpdateConnectorProfileRequest(input)",
          "1796:  req.SetContext(ctx)",
          "1797:  req.ApplyOptions(opts...)",
          "1798:  return out, req.Send()",
          "1799: }",
          "1801: const opUpdateFlow = \"UpdateFlow\"",
          "1827: func (c *Appflow) UpdateFlowRequest(input *UpdateFlowInput) (req *request.Request, output *UpdateFlowOutput) {",
          "1828:  op := &request.Operation{",
          "1829:   Name:       opUpdateFlow,",
          "1830:   HTTPMethod: \"POST\",",
          "1831:   HTTPPath:   \"/update-flow\",",
          "1832:  }",
          "1834:  if input == nil {",
          "1835:   input = &UpdateFlowInput{}",
          "1836:  }",
          "1838:  output = &UpdateFlowOutput{}",
          "1839:  req = c.newRequest(op, input, output)",
          "1840:  return",
          "1841: }",
          "1882: func (c *Appflow) UpdateFlow(input *UpdateFlowInput) (*UpdateFlowOutput, error) {",
          "1883:  req, out := c.UpdateFlowRequest(input)",
          "1884:  return out, req.Send()",
          "1885: }",
          "1896: func (c *Appflow) UpdateFlowWithContext(ctx aws.Context, input *UpdateFlowInput, opts ...request.Option) (*UpdateFlowOutput, error) {",
          "1897:  req, out := c.UpdateFlowRequest(input)",
          "1898:  req.SetContext(ctx)",
          "1899:  req.ApplyOptions(opts...)",
          "1900:  return out, req.Send()",
          "1901: }",
          "1905: type AggregationConfig struct {",
          "1906:  _ struct{} `type:\"structure\"`",
          "1910:  AggregationType *string `locationName:\"aggregationType\" type:\"string\" enum:\"AggregationType\"`",
          "1911: }",
          "1914: func (s AggregationConfig) String() string {",
          "1915:  return awsutil.Prettify(s)",
          "1916: }",
          "1919: func (s AggregationConfig) GoString() string {",
          "1920:  return s.String()",
          "1921: }",
          "1924: func (s *AggregationConfig) SetAggregationType(v string) *AggregationConfig {",
          "1925:  s.AggregationType = &v",
          "1926:  return s",
          "1927: }",
          "1930: type AmplitudeConnectorProfileCredentials struct {",
          "1931:  _ struct{} `type:\"structure\"`",
          "1937:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "1942:  SecretKey *string `locationName:\"secretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "1943: }",
          "1946: func (s AmplitudeConnectorProfileCredentials) String() string {",
          "1947:  return awsutil.Prettify(s)",
          "1948: }",
          "1951: func (s AmplitudeConnectorProfileCredentials) GoString() string {",
          "1952:  return s.String()",
          "1953: }",
          "1956: func (s *AmplitudeConnectorProfileCredentials) Validate() error {",
          "1957:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeConnectorProfileCredentials\"}",
          "1958:  if s.ApiKey == nil {",
          "1959:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "1960:  }",
          "1961:  if s.SecretKey == nil {",
          "1962:   invalidParams.Add(request.NewErrParamRequired(\"SecretKey\"))",
          "1963:  }",
          "1965:  if invalidParams.Len() > 0 {",
          "1966:   return invalidParams",
          "1967:  }",
          "1968:  return nil",
          "1969: }",
          "1972: func (s *AmplitudeConnectorProfileCredentials) SetApiKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1973:  s.ApiKey = &v",
          "1974:  return s",
          "1975: }",
          "1978: func (s *AmplitudeConnectorProfileCredentials) SetSecretKey(v string) *AmplitudeConnectorProfileCredentials {",
          "1979:  s.SecretKey = &v",
          "1980:  return s",
          "1981: }",
          "1984: type AmplitudeConnectorProfileProperties struct {",
          "1985:  _ struct{} `type:\"structure\"`",
          "1986: }",
          "1989: func (s AmplitudeConnectorProfileProperties) String() string {",
          "1990:  return awsutil.Prettify(s)",
          "1991: }",
          "1994: func (s AmplitudeConnectorProfileProperties) GoString() string {",
          "1995:  return s.String()",
          "1996: }",
          "1999: type AmplitudeMetadata struct {",
          "2000:  _ struct{} `type:\"structure\"`",
          "2001: }",
          "2004: func (s AmplitudeMetadata) String() string {",
          "2005:  return awsutil.Prettify(s)",
          "2006: }",
          "2009: func (s AmplitudeMetadata) GoString() string {",
          "2010:  return s.String()",
          "2011: }",
          "2014: type AmplitudeSourceProperties struct {",
          "2015:  _ struct{} `type:\"structure\"`",
          "2020:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "2021: }",
          "2024: func (s AmplitudeSourceProperties) String() string {",
          "2025:  return awsutil.Prettify(s)",
          "2026: }",
          "2029: func (s AmplitudeSourceProperties) GoString() string {",
          "2030:  return s.String()",
          "2031: }",
          "2034: func (s *AmplitudeSourceProperties) Validate() error {",
          "2035:  invalidParams := request.ErrInvalidParams{Context: \"AmplitudeSourceProperties\"}",
          "2036:  if s.Object == nil {",
          "2037:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "2038:  }",
          "2040:  if invalidParams.Len() > 0 {",
          "2041:   return invalidParams",
          "2042:  }",
          "2043:  return nil",
          "2044: }",
          "2047: func (s *AmplitudeSourceProperties) SetObject(v string) *AmplitudeSourceProperties {",
          "2048:  s.Object = &v",
          "2049:  return s",
          "2050: }",
          "2055: type ConflictException struct {",
          "2056:  _            struct{}                  `type:\"structure\"`",
          "2057:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2059:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2060: }",
          "2063: func (s ConflictException) String() string {",
          "2064:  return awsutil.Prettify(s)",
          "2065: }",
          "2068: func (s ConflictException) GoString() string {",
          "2069:  return s.String()",
          "2070: }",
          "2072: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2073:  return &ConflictException{",
          "2074:   RespMetadata: v,",
          "2075:  }",
          "2076: }",
          "2079: func (s *ConflictException) Code() string {",
          "2080:  return \"ConflictException\"",
          "2081: }",
          "2084: func (s *ConflictException) Message() string {",
          "2085:  if s.Message_ != nil {",
          "2086:   return *s.Message_",
          "2087:  }",
          "2088:  return \"\"",
          "2089: }",
          "2092: func (s *ConflictException) OrigErr() error {",
          "2093:  return nil",
          "2094: }",
          "2096: func (s *ConflictException) Error() string {",
          "2097:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2098: }",
          "2101: func (s *ConflictException) StatusCode() int {",
          "2102:  return s.RespMetadata.StatusCode",
          "2103: }",
          "2106: func (s *ConflictException) RequestID() string {",
          "2107:  return s.RespMetadata.RequestID",
          "2108: }",
          "2111: type ConnectorAuthenticationException struct {",
          "2112:  _            struct{}                  `type:\"structure\"`",
          "2113:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2115:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "2116: }",
          "2119: func (s ConnectorAuthenticationException) String() string {",
          "2120:  return awsutil.Prettify(s)",
          "2121: }",
          "2124: func (s ConnectorAuthenticationException) GoString() string {",
          "2125:  return s.String()",
          "2126: }",
          "2128: func newErrorConnectorAuthenticationException(v protocol.ResponseMetadata) error {",
          "2129:  return &ConnectorAuthenticationException{",
          "2130:   RespMetadata: v,",
          "2131:  }",
          "2132: }",
          "2135: func (s *ConnectorAuthenticationException) Code() string {",
          "2136:  return \"ConnectorAuthenticationException\"",
          "2137: }",
          "2140: func (s *ConnectorAuthenticationException) Message() string {",
          "2141:  if s.Message_ != nil {",
          "2142:   return *s.Message_",
          "2143:  }",
          "2144:  return \"\"",
          "2145: }",
          "2148: func (s *ConnectorAuthenticationException) OrigErr() error {",
          "2149:  return nil",
          "2150: }",
          "2152: func (s *ConnectorAuthenticationException) Error() string {",
          "2153:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2154: }",
          "2157: func (s *ConnectorAuthenticationException) StatusCode() int {",
          "2158:  return s.RespMetadata.StatusCode",
          "2159: }",
          "2162: func (s *ConnectorAuthenticationException) RequestID() string {",
          "2163:  return s.RespMetadata.RequestID",
          "2164: }",
          "2167: type ConnectorConfiguration struct {",
          "2168:  _ struct{} `type:\"structure\"`",
          "2171:  CanUseAsDestination *bool `locationName:\"canUseAsDestination\" type:\"boolean\"`",
          "2174:  CanUseAsSource *bool `locationName:\"canUseAsSource\" type:\"boolean\"`",
          "2178:  ConnectorMetadata *ConnectorMetadata `locationName:\"connectorMetadata\" type:\"structure\"`",
          "2181:  IsPrivateLinkEnabled *bool `locationName:\"isPrivateLinkEnabled\" type:\"boolean\"`",
          "2184:  IsPrivateLinkEndpointUrlRequired *bool `locationName:\"isPrivateLinkEndpointUrlRequired\" type:\"boolean\"`",
          "2187:  SupportedDestinationConnectors []*string `locationName:\"supportedDestinationConnectors\" type:\"list\"`",
          "2190:  SupportedSchedulingFrequencies []*string `locationName:\"supportedSchedulingFrequencies\" type:\"list\"`",
          "2193:  SupportedTriggerTypes []*string `locationName:\"supportedTriggerTypes\" type:\"list\"`",
          "2194: }",
          "2197: func (s ConnectorConfiguration) String() string {",
          "2198:  return awsutil.Prettify(s)",
          "2199: }",
          "2202: func (s ConnectorConfiguration) GoString() string {",
          "2203:  return s.String()",
          "2204: }",
          "2207: func (s *ConnectorConfiguration) SetCanUseAsDestination(v bool) *ConnectorConfiguration {",
          "2208:  s.CanUseAsDestination = &v",
          "2209:  return s",
          "2210: }",
          "2213: func (s *ConnectorConfiguration) SetCanUseAsSource(v bool) *ConnectorConfiguration {",
          "2214:  s.CanUseAsSource = &v",
          "2215:  return s",
          "2216: }",
          "2219: func (s *ConnectorConfiguration) SetConnectorMetadata(v *ConnectorMetadata) *ConnectorConfiguration {",
          "2220:  s.ConnectorMetadata = v",
          "2221:  return s",
          "2222: }",
          "2225: func (s *ConnectorConfiguration) SetIsPrivateLinkEnabled(v bool) *ConnectorConfiguration {",
          "2226:  s.IsPrivateLinkEnabled = &v",
          "2227:  return s",
          "2228: }",
          "2231: func (s *ConnectorConfiguration) SetIsPrivateLinkEndpointUrlRequired(v bool) *ConnectorConfiguration {",
          "2232:  s.IsPrivateLinkEndpointUrlRequired = &v",
          "2233:  return s",
          "2234: }",
          "2237: func (s *ConnectorConfiguration) SetSupportedDestinationConnectors(v []*string) *ConnectorConfiguration {",
          "2238:  s.SupportedDestinationConnectors = v",
          "2239:  return s",
          "2240: }",
          "2243: func (s *ConnectorConfiguration) SetSupportedSchedulingFrequencies(v []*string) *ConnectorConfiguration {",
          "2244:  s.SupportedSchedulingFrequencies = v",
          "2245:  return s",
          "2246: }",
          "2249: func (s *ConnectorConfiguration) SetSupportedTriggerTypes(v []*string) *ConnectorConfiguration {",
          "2250:  s.SupportedTriggerTypes = v",
          "2251:  return s",
          "2252: }",
          "2257: type ConnectorEntity struct {",
          "2258:  _ struct{} `type:\"structure\"`",
          "2265:  HasNestedEntities *bool `locationName:\"hasNestedEntities\" type:\"boolean\"`",
          "2268:  Label *string `locationName:\"label\" type:\"string\"`",
          "2273:  Name *string `locationName:\"name\" type:\"string\" required:\"true\"`",
          "2274: }",
          "2277: func (s ConnectorEntity) String() string {",
          "2278:  return awsutil.Prettify(s)",
          "2279: }",
          "2282: func (s ConnectorEntity) GoString() string {",
          "2283:  return s.String()",
          "2284: }",
          "2287: func (s *ConnectorEntity) SetHasNestedEntities(v bool) *ConnectorEntity {",
          "2288:  s.HasNestedEntities = &v",
          "2289:  return s",
          "2290: }",
          "2293: func (s *ConnectorEntity) SetLabel(v string) *ConnectorEntity {",
          "2294:  s.Label = &v",
          "2295:  return s",
          "2296: }",
          "2299: func (s *ConnectorEntity) SetName(v string) *ConnectorEntity {",
          "2300:  s.Name = &v",
          "2301:  return s",
          "2302: }",
          "2306: type ConnectorEntityField struct {",
          "2307:  _ struct{} `type:\"structure\"`",
          "2310:  Description *string `locationName:\"description\" type:\"string\"`",
          "2313:  DestinationProperties *DestinationFieldProperties `locationName:\"destinationProperties\" type:\"structure\"`",
          "2318:  Identifier *string `locationName:\"identifier\" type:\"string\" required:\"true\"`",
          "2321:  Label *string `locationName:\"label\" type:\"string\"`",
          "2325:  SourceProperties *SourceFieldProperties `locationName:\"sourceProperties\" type:\"structure\"`",
          "2329:  SupportedFieldTypeDetails *SupportedFieldTypeDetails `locationName:\"supportedFieldTypeDetails\" type:\"structure\"`",
          "2330: }",
          "2333: func (s ConnectorEntityField) String() string {",
          "2334:  return awsutil.Prettify(s)",
          "2335: }",
          "2338: func (s ConnectorEntityField) GoString() string {",
          "2339:  return s.String()",
          "2340: }",
          "2343: func (s *ConnectorEntityField) SetDescription(v string) *ConnectorEntityField {",
          "2344:  s.Description = &v",
          "2345:  return s",
          "2346: }",
          "2349: func (s *ConnectorEntityField) SetDestinationProperties(v *DestinationFieldProperties) *ConnectorEntityField {",
          "2350:  s.DestinationProperties = v",
          "2351:  return s",
          "2352: }",
          "2355: func (s *ConnectorEntityField) SetIdentifier(v string) *ConnectorEntityField {",
          "2356:  s.Identifier = &v",
          "2357:  return s",
          "2358: }",
          "2361: func (s *ConnectorEntityField) SetLabel(v string) *ConnectorEntityField {",
          "2362:  s.Label = &v",
          "2363:  return s",
          "2364: }",
          "2367: func (s *ConnectorEntityField) SetSourceProperties(v *SourceFieldProperties) *ConnectorEntityField {",
          "2368:  s.SourceProperties = v",
          "2369:  return s",
          "2370: }",
          "2373: func (s *ConnectorEntityField) SetSupportedFieldTypeDetails(v *SupportedFieldTypeDetails) *ConnectorEntityField {",
          "2374:  s.SupportedFieldTypeDetails = v",
          "2375:  return s",
          "2376: }",
          "2380: type ConnectorMetadata struct {",
          "2381:  _ struct{} `type:\"structure\"`",
          "2384:  Amplitude *AmplitudeMetadata `type:\"structure\"`",
          "2387:  Datadog *DatadogMetadata `type:\"structure\"`",
          "2390:  Dynatrace *DynatraceMetadata `type:\"structure\"`",
          "2393:  EventBridge *EventBridgeMetadata `type:\"structure\"`",
          "2396:  GoogleAnalytics *GoogleAnalyticsMetadata `type:\"structure\"`",
          "2399:  InforNexus *InforNexusMetadata `type:\"structure\"`",
          "2402:  Marketo *MarketoMetadata `type:\"structure\"`",
          "2405:  Redshift *RedshiftMetadata `type:\"structure\"`",
          "2408:  S3 *S3Metadata `type:\"structure\"`",
          "2411:  Salesforce *SalesforceMetadata `type:\"structure\"`",
          "2414:  ServiceNow *ServiceNowMetadata `type:\"structure\"`",
          "2417:  Singular *SingularMetadata `type:\"structure\"`",
          "2420:  Slack *SlackMetadata `type:\"structure\"`",
          "2423:  Snowflake *SnowflakeMetadata `type:\"structure\"`",
          "2426:  Trendmicro *TrendmicroMetadata `type:\"structure\"`",
          "2429:  Veeva *VeevaMetadata `type:\"structure\"`",
          "2432:  Zendesk *ZendeskMetadata `type:\"structure\"`",
          "2433: }",
          "2436: func (s ConnectorMetadata) String() string {",
          "2437:  return awsutil.Prettify(s)",
          "2438: }",
          "2441: func (s ConnectorMetadata) GoString() string {",
          "2442:  return s.String()",
          "2443: }",
          "2446: func (s *ConnectorMetadata) SetAmplitude(v *AmplitudeMetadata) *ConnectorMetadata {",
          "2447:  s.Amplitude = v",
          "2448:  return s",
          "2449: }",
          "2452: func (s *ConnectorMetadata) SetDatadog(v *DatadogMetadata) *ConnectorMetadata {",
          "2453:  s.Datadog = v",
          "2454:  return s",
          "2455: }",
          "2458: func (s *ConnectorMetadata) SetDynatrace(v *DynatraceMetadata) *ConnectorMetadata {",
          "2459:  s.Dynatrace = v",
          "2460:  return s",
          "2461: }",
          "2464: func (s *ConnectorMetadata) SetEventBridge(v *EventBridgeMetadata) *ConnectorMetadata {",
          "2465:  s.EventBridge = v",
          "2466:  return s",
          "2467: }",
          "2470: func (s *ConnectorMetadata) SetGoogleAnalytics(v *GoogleAnalyticsMetadata) *ConnectorMetadata {",
          "2471:  s.GoogleAnalytics = v",
          "2472:  return s",
          "2473: }",
          "2476: func (s *ConnectorMetadata) SetInforNexus(v *InforNexusMetadata) *ConnectorMetadata {",
          "2477:  s.InforNexus = v",
          "2478:  return s",
          "2479: }",
          "2482: func (s *ConnectorMetadata) SetMarketo(v *MarketoMetadata) *ConnectorMetadata {",
          "2483:  s.Marketo = v",
          "2484:  return s",
          "2485: }",
          "2488: func (s *ConnectorMetadata) SetRedshift(v *RedshiftMetadata) *ConnectorMetadata {",
          "2489:  s.Redshift = v",
          "2490:  return s",
          "2491: }",
          "2494: func (s *ConnectorMetadata) SetS3(v *S3Metadata) *ConnectorMetadata {",
          "2495:  s.S3 = v",
          "2496:  return s",
          "2497: }",
          "2500: func (s *ConnectorMetadata) SetSalesforce(v *SalesforceMetadata) *ConnectorMetadata {",
          "2501:  s.Salesforce = v",
          "2502:  return s",
          "2503: }",
          "2506: func (s *ConnectorMetadata) SetServiceNow(v *ServiceNowMetadata) *ConnectorMetadata {",
          "2507:  s.ServiceNow = v",
          "2508:  return s",
          "2509: }",
          "2512: func (s *ConnectorMetadata) SetSingular(v *SingularMetadata) *ConnectorMetadata {",
          "2513:  s.Singular = v",
          "2514:  return s",
          "2515: }",
          "2518: func (s *ConnectorMetadata) SetSlack(v *SlackMetadata) *ConnectorMetadata {",
          "2519:  s.Slack = v",
          "2520:  return s",
          "2521: }",
          "2524: func (s *ConnectorMetadata) SetSnowflake(v *SnowflakeMetadata) *ConnectorMetadata {",
          "2525:  s.Snowflake = v",
          "2526:  return s",
          "2527: }",
          "2530: func (s *ConnectorMetadata) SetTrendmicro(v *TrendmicroMetadata) *ConnectorMetadata {",
          "2531:  s.Trendmicro = v",
          "2532:  return s",
          "2533: }",
          "2536: func (s *ConnectorMetadata) SetVeeva(v *VeevaMetadata) *ConnectorMetadata {",
          "2537:  s.Veeva = v",
          "2538:  return s",
          "2539: }",
          "2542: func (s *ConnectorMetadata) SetZendesk(v *ZendeskMetadata) *ConnectorMetadata {",
          "2543:  s.Zendesk = v",
          "2544:  return s",
          "2545: }",
          "2549: type ConnectorOAuthRequest struct {",
          "2550:  _ struct{} `type:\"structure\"`",
          "2554:  AuthCode *string `locationName:\"authCode\" type:\"string\"`",
          "2558:  RedirectUri *string `locationName:\"redirectUri\" type:\"string\"`",
          "2559: }",
          "2562: func (s ConnectorOAuthRequest) String() string {",
          "2563:  return awsutil.Prettify(s)",
          "2564: }",
          "2567: func (s ConnectorOAuthRequest) GoString() string {",
          "2568:  return s.String()",
          "2569: }",
          "2572: func (s *ConnectorOAuthRequest) SetAuthCode(v string) *ConnectorOAuthRequest {",
          "2573:  s.AuthCode = &v",
          "2574:  return s",
          "2575: }",
          "2578: func (s *ConnectorOAuthRequest) SetRedirectUri(v string) *ConnectorOAuthRequest {",
          "2579:  s.RedirectUri = &v",
          "2580:  return s",
          "2581: }",
          "2584: type ConnectorOperator struct {",
          "2585:  _ struct{} `type:\"structure\"`",
          "2588:  Amplitude *string `type:\"string\" enum:\"AmplitudeConnectorOperator\"`",
          "2591:  Datadog *string `type:\"string\" enum:\"DatadogConnectorOperator\"`",
          "2594:  Dynatrace *string `type:\"string\" enum:\"DynatraceConnectorOperator\"`",
          "2597:  GoogleAnalytics *string `type:\"string\" enum:\"GoogleAnalyticsConnectorOperator\"`",
          "2600:  InforNexus *string `type:\"string\" enum:\"InforNexusConnectorOperator\"`",
          "2603:  Marketo *string `type:\"string\" enum:\"MarketoConnectorOperator\"`",
          "2606:  S3 *string `type:\"string\" enum:\"S3ConnectorOperator\"`",
          "2609:  Salesforce *string `type:\"string\" enum:\"SalesforceConnectorOperator\"`",
          "2612:  ServiceNow *string `type:\"string\" enum:\"ServiceNowConnectorOperator\"`",
          "2615:  Singular *string `type:\"string\" enum:\"SingularConnectorOperator\"`",
          "2618:  Slack *string `type:\"string\" enum:\"SlackConnectorOperator\"`",
          "2621:  Trendmicro *string `type:\"string\" enum:\"TrendmicroConnectorOperator\"`",
          "2624:  Veeva *string `type:\"string\" enum:\"VeevaConnectorOperator\"`",
          "2627:  Zendesk *string `type:\"string\" enum:\"ZendeskConnectorOperator\"`",
          "2628: }",
          "2631: func (s ConnectorOperator) String() string {",
          "2632:  return awsutil.Prettify(s)",
          "2633: }",
          "2636: func (s ConnectorOperator) GoString() string {",
          "2637:  return s.String()",
          "2638: }",
          "2641: func (s *ConnectorOperator) SetAmplitude(v string) *ConnectorOperator {",
          "2642:  s.Amplitude = &v",
          "2643:  return s",
          "2644: }",
          "2647: func (s *ConnectorOperator) SetDatadog(v string) *ConnectorOperator {",
          "2648:  s.Datadog = &v",
          "2649:  return s",
          "2650: }",
          "2653: func (s *ConnectorOperator) SetDynatrace(v string) *ConnectorOperator {",
          "2654:  s.Dynatrace = &v",
          "2655:  return s",
          "2656: }",
          "2659: func (s *ConnectorOperator) SetGoogleAnalytics(v string) *ConnectorOperator {",
          "2660:  s.GoogleAnalytics = &v",
          "2661:  return s",
          "2662: }",
          "2665: func (s *ConnectorOperator) SetInforNexus(v string) *ConnectorOperator {",
          "2666:  s.InforNexus = &v",
          "2667:  return s",
          "2668: }",
          "2671: func (s *ConnectorOperator) SetMarketo(v string) *ConnectorOperator {",
          "2672:  s.Marketo = &v",
          "2673:  return s",
          "2674: }",
          "2677: func (s *ConnectorOperator) SetS3(v string) *ConnectorOperator {",
          "2678:  s.S3 = &v",
          "2679:  return s",
          "2680: }",
          "2683: func (s *ConnectorOperator) SetSalesforce(v string) *ConnectorOperator {",
          "2684:  s.Salesforce = &v",
          "2685:  return s",
          "2686: }",
          "2689: func (s *ConnectorOperator) SetServiceNow(v string) *ConnectorOperator {",
          "2690:  s.ServiceNow = &v",
          "2691:  return s",
          "2692: }",
          "2695: func (s *ConnectorOperator) SetSingular(v string) *ConnectorOperator {",
          "2696:  s.Singular = &v",
          "2697:  return s",
          "2698: }",
          "2701: func (s *ConnectorOperator) SetSlack(v string) *ConnectorOperator {",
          "2702:  s.Slack = &v",
          "2703:  return s",
          "2704: }",
          "2707: func (s *ConnectorOperator) SetTrendmicro(v string) *ConnectorOperator {",
          "2708:  s.Trendmicro = &v",
          "2709:  return s",
          "2710: }",
          "2713: func (s *ConnectorOperator) SetVeeva(v string) *ConnectorOperator {",
          "2714:  s.Veeva = &v",
          "2715:  return s",
          "2716: }",
          "2719: func (s *ConnectorOperator) SetZendesk(v string) *ConnectorOperator {",
          "2720:  s.Zendesk = &v",
          "2721:  return s",
          "2722: }",
          "2729: type ConnectorProfile struct {",
          "2730:  _ struct{} `type:\"structure\"`",
          "2733:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" enum:\"ConnectionMode\"`",
          "2736:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "2740:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "2743:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\"`",
          "2746:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "2749:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "2752:  CredentialsArn *string `locationName:\"credentialsArn\" type:\"string\"`",
          "2755:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "2756: }",
          "2759: func (s ConnectorProfile) String() string {",
          "2760:  return awsutil.Prettify(s)",
          "2761: }",
          "2764: func (s ConnectorProfile) GoString() string {",
          "2765:  return s.String()",
          "2766: }",
          "2769: func (s *ConnectorProfile) SetConnectionMode(v string) *ConnectorProfile {",
          "2770:  s.ConnectionMode = &v",
          "2771:  return s",
          "2772: }",
          "2775: func (s *ConnectorProfile) SetConnectorProfileArn(v string) *ConnectorProfile {",
          "2776:  s.ConnectorProfileArn = &v",
          "2777:  return s",
          "2778: }",
          "2781: func (s *ConnectorProfile) SetConnectorProfileName(v string) *ConnectorProfile {",
          "2782:  s.ConnectorProfileName = &v",
          "2783:  return s",
          "2784: }",
          "2787: func (s *ConnectorProfile) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfile {",
          "2788:  s.ConnectorProfileProperties = v",
          "2789:  return s",
          "2790: }",
          "2793: func (s *ConnectorProfile) SetConnectorType(v string) *ConnectorProfile {",
          "2794:  s.ConnectorType = &v",
          "2795:  return s",
          "2796: }",
          "2799: func (s *ConnectorProfile) SetCreatedAt(v time.Time) *ConnectorProfile {",
          "2800:  s.CreatedAt = &v",
          "2801:  return s",
          "2802: }",
          "2805: func (s *ConnectorProfile) SetCredentialsArn(v string) *ConnectorProfile {",
          "2806:  s.CredentialsArn = &v",
          "2807:  return s",
          "2808: }",
          "2811: func (s *ConnectorProfile) SetLastUpdatedAt(v time.Time) *ConnectorProfile {",
          "2812:  s.LastUpdatedAt = &v",
          "2813:  return s",
          "2814: }",
          "2818: type ConnectorProfileConfig struct {",
          "2819:  _ struct{} `type:\"structure\"`",
          "2824:  ConnectorProfileCredentials *ConnectorProfileCredentials `locationName:\"connectorProfileCredentials\" type:\"structure\" required:\"true\"`",
          "2829:  ConnectorProfileProperties *ConnectorProfileProperties `locationName:\"connectorProfileProperties\" type:\"structure\" required:\"true\"`",
          "2830: }",
          "2833: func (s ConnectorProfileConfig) String() string {",
          "2834:  return awsutil.Prettify(s)",
          "2835: }",
          "2838: func (s ConnectorProfileConfig) GoString() string {",
          "2839:  return s.String()",
          "2840: }",
          "2843: func (s *ConnectorProfileConfig) Validate() error {",
          "2844:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileConfig\"}",
          "2845:  if s.ConnectorProfileCredentials == nil {",
          "2846:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileCredentials\"))",
          "2847:  }",
          "2848:  if s.ConnectorProfileProperties == nil {",
          "2849:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileProperties\"))",
          "2850:  }",
          "2851:  if s.ConnectorProfileCredentials != nil {",
          "2852:   if err := s.ConnectorProfileCredentials.Validate(); err != nil {",
          "2853:    invalidParams.AddNested(\"ConnectorProfileCredentials\", err.(request.ErrInvalidParams))",
          "2854:   }",
          "2855:  }",
          "2856:  if s.ConnectorProfileProperties != nil {",
          "2857:   if err := s.ConnectorProfileProperties.Validate(); err != nil {",
          "2858:    invalidParams.AddNested(\"ConnectorProfileProperties\", err.(request.ErrInvalidParams))",
          "2859:   }",
          "2860:  }",
          "2862:  if invalidParams.Len() > 0 {",
          "2863:   return invalidParams",
          "2864:  }",
          "2865:  return nil",
          "2866: }",
          "2869: func (s *ConnectorProfileConfig) SetConnectorProfileCredentials(v *ConnectorProfileCredentials) *ConnectorProfileConfig {",
          "2870:  s.ConnectorProfileCredentials = v",
          "2871:  return s",
          "2872: }",
          "2875: func (s *ConnectorProfileConfig) SetConnectorProfileProperties(v *ConnectorProfileProperties) *ConnectorProfileConfig {",
          "2876:  s.ConnectorProfileProperties = v",
          "2877:  return s",
          "2878: }",
          "2881: type ConnectorProfileCredentials struct {",
          "2882:  _ struct{} `type:\"structure\"`",
          "2885:  Amplitude *AmplitudeConnectorProfileCredentials `type:\"structure\"`",
          "2888:  Datadog *DatadogConnectorProfileCredentials `type:\"structure\"`",
          "2891:  Dynatrace *DynatraceConnectorProfileCredentials `type:\"structure\"`",
          "2894:  GoogleAnalytics *GoogleAnalyticsConnectorProfileCredentials `type:\"structure\"`",
          "2897:  InforNexus *InforNexusConnectorProfileCredentials `type:\"structure\"`",
          "2900:  Marketo *MarketoConnectorProfileCredentials `type:\"structure\"`",
          "2903:  Redshift *RedshiftConnectorProfileCredentials `type:\"structure\"`",
          "2906:  Salesforce *SalesforceConnectorProfileCredentials `type:\"structure\"`",
          "2909:  ServiceNow *ServiceNowConnectorProfileCredentials `type:\"structure\"`",
          "2912:  Singular *SingularConnectorProfileCredentials `type:\"structure\"`",
          "2915:  Slack *SlackConnectorProfileCredentials `type:\"structure\"`",
          "2918:  Snowflake *SnowflakeConnectorProfileCredentials `type:\"structure\"`",
          "2921:  Trendmicro *TrendmicroConnectorProfileCredentials `type:\"structure\"`",
          "2924:  Veeva *VeevaConnectorProfileCredentials `type:\"structure\"`",
          "2927:  Zendesk *ZendeskConnectorProfileCredentials `type:\"structure\"`",
          "2928: }",
          "2931: func (s ConnectorProfileCredentials) String() string {",
          "2932:  return awsutil.Prettify(s)",
          "2933: }",
          "2936: func (s ConnectorProfileCredentials) GoString() string {",
          "2937:  return s.String()",
          "2938: }",
          "2941: func (s *ConnectorProfileCredentials) Validate() error {",
          "2942:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileCredentials\"}",
          "2943:  if s.Amplitude != nil {",
          "2944:   if err := s.Amplitude.Validate(); err != nil {",
          "2945:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "2946:   }",
          "2947:  }",
          "2948:  if s.Datadog != nil {",
          "2949:   if err := s.Datadog.Validate(); err != nil {",
          "2950:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "2951:   }",
          "2952:  }",
          "2953:  if s.Dynatrace != nil {",
          "2954:   if err := s.Dynatrace.Validate(); err != nil {",
          "2955:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "2956:   }",
          "2957:  }",
          "2958:  if s.GoogleAnalytics != nil {",
          "2959:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "2960:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "2961:   }",
          "2962:  }",
          "2963:  if s.InforNexus != nil {",
          "2964:   if err := s.InforNexus.Validate(); err != nil {",
          "2965:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "2966:   }",
          "2967:  }",
          "2968:  if s.Marketo != nil {",
          "2969:   if err := s.Marketo.Validate(); err != nil {",
          "2970:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "2971:   }",
          "2972:  }",
          "2973:  if s.Redshift != nil {",
          "2974:   if err := s.Redshift.Validate(); err != nil {",
          "2975:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "2976:   }",
          "2977:  }",
          "2978:  if s.ServiceNow != nil {",
          "2979:   if err := s.ServiceNow.Validate(); err != nil {",
          "2980:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "2981:   }",
          "2982:  }",
          "2983:  if s.Singular != nil {",
          "2984:   if err := s.Singular.Validate(); err != nil {",
          "2985:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "2986:   }",
          "2987:  }",
          "2988:  if s.Slack != nil {",
          "2989:   if err := s.Slack.Validate(); err != nil {",
          "2990:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "2991:   }",
          "2992:  }",
          "2993:  if s.Snowflake != nil {",
          "2994:   if err := s.Snowflake.Validate(); err != nil {",
          "2995:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "2996:   }",
          "2997:  }",
          "2998:  if s.Trendmicro != nil {",
          "2999:   if err := s.Trendmicro.Validate(); err != nil {",
          "3000:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "3001:   }",
          "3002:  }",
          "3003:  if s.Veeva != nil {",
          "3004:   if err := s.Veeva.Validate(); err != nil {",
          "3005:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3006:   }",
          "3007:  }",
          "3008:  if s.Zendesk != nil {",
          "3009:   if err := s.Zendesk.Validate(); err != nil {",
          "3010:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3011:   }",
          "3012:  }",
          "3014:  if invalidParams.Len() > 0 {",
          "3015:   return invalidParams",
          "3016:  }",
          "3017:  return nil",
          "3018: }",
          "3021: func (s *ConnectorProfileCredentials) SetAmplitude(v *AmplitudeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3022:  s.Amplitude = v",
          "3023:  return s",
          "3024: }",
          "3027: func (s *ConnectorProfileCredentials) SetDatadog(v *DatadogConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3028:  s.Datadog = v",
          "3029:  return s",
          "3030: }",
          "3033: func (s *ConnectorProfileCredentials) SetDynatrace(v *DynatraceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3034:  s.Dynatrace = v",
          "3035:  return s",
          "3036: }",
          "3039: func (s *ConnectorProfileCredentials) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3040:  s.GoogleAnalytics = v",
          "3041:  return s",
          "3042: }",
          "3045: func (s *ConnectorProfileCredentials) SetInforNexus(v *InforNexusConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3046:  s.InforNexus = v",
          "3047:  return s",
          "3048: }",
          "3051: func (s *ConnectorProfileCredentials) SetMarketo(v *MarketoConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3052:  s.Marketo = v",
          "3053:  return s",
          "3054: }",
          "3057: func (s *ConnectorProfileCredentials) SetRedshift(v *RedshiftConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3058:  s.Redshift = v",
          "3059:  return s",
          "3060: }",
          "3063: func (s *ConnectorProfileCredentials) SetSalesforce(v *SalesforceConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3064:  s.Salesforce = v",
          "3065:  return s",
          "3066: }",
          "3069: func (s *ConnectorProfileCredentials) SetServiceNow(v *ServiceNowConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3070:  s.ServiceNow = v",
          "3071:  return s",
          "3072: }",
          "3075: func (s *ConnectorProfileCredentials) SetSingular(v *SingularConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3076:  s.Singular = v",
          "3077:  return s",
          "3078: }",
          "3081: func (s *ConnectorProfileCredentials) SetSlack(v *SlackConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3082:  s.Slack = v",
          "3083:  return s",
          "3084: }",
          "3087: func (s *ConnectorProfileCredentials) SetSnowflake(v *SnowflakeConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3088:  s.Snowflake = v",
          "3089:  return s",
          "3090: }",
          "3093: func (s *ConnectorProfileCredentials) SetTrendmicro(v *TrendmicroConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3094:  s.Trendmicro = v",
          "3095:  return s",
          "3096: }",
          "3099: func (s *ConnectorProfileCredentials) SetVeeva(v *VeevaConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3100:  s.Veeva = v",
          "3101:  return s",
          "3102: }",
          "3105: func (s *ConnectorProfileCredentials) SetZendesk(v *ZendeskConnectorProfileCredentials) *ConnectorProfileCredentials {",
          "3106:  s.Zendesk = v",
          "3107:  return s",
          "3108: }",
          "3111: type ConnectorProfileProperties struct {",
          "3112:  _ struct{} `type:\"structure\"`",
          "3115:  Amplitude *AmplitudeConnectorProfileProperties `type:\"structure\"`",
          "3118:  Datadog *DatadogConnectorProfileProperties `type:\"structure\"`",
          "3121:  Dynatrace *DynatraceConnectorProfileProperties `type:\"structure\"`",
          "3124:  GoogleAnalytics *GoogleAnalyticsConnectorProfileProperties `type:\"structure\"`",
          "3127:  InforNexus *InforNexusConnectorProfileProperties `type:\"structure\"`",
          "3130:  Marketo *MarketoConnectorProfileProperties `type:\"structure\"`",
          "3133:  Redshift *RedshiftConnectorProfileProperties `type:\"structure\"`",
          "3136:  Salesforce *SalesforceConnectorProfileProperties `type:\"structure\"`",
          "3139:  ServiceNow *ServiceNowConnectorProfileProperties `type:\"structure\"`",
          "3142:  Singular *SingularConnectorProfileProperties `type:\"structure\"`",
          "3145:  Slack *SlackConnectorProfileProperties `type:\"structure\"`",
          "3148:  Snowflake *SnowflakeConnectorProfileProperties `type:\"structure\"`",
          "3151:  Trendmicro *TrendmicroConnectorProfileProperties `type:\"structure\"`",
          "3154:  Veeva *VeevaConnectorProfileProperties `type:\"structure\"`",
          "3157:  Zendesk *ZendeskConnectorProfileProperties `type:\"structure\"`",
          "3158: }",
          "3161: func (s ConnectorProfileProperties) String() string {",
          "3162:  return awsutil.Prettify(s)",
          "3163: }",
          "3166: func (s ConnectorProfileProperties) GoString() string {",
          "3167:  return s.String()",
          "3168: }",
          "3171: func (s *ConnectorProfileProperties) Validate() error {",
          "3172:  invalidParams := request.ErrInvalidParams{Context: \"ConnectorProfileProperties\"}",
          "3173:  if s.Datadog != nil {",
          "3174:   if err := s.Datadog.Validate(); err != nil {",
          "3175:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "3176:   }",
          "3177:  }",
          "3178:  if s.Dynatrace != nil {",
          "3179:   if err := s.Dynatrace.Validate(); err != nil {",
          "3180:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "3181:   }",
          "3182:  }",
          "3183:  if s.InforNexus != nil {",
          "3184:   if err := s.InforNexus.Validate(); err != nil {",
          "3185:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "3186:   }",
          "3187:  }",
          "3188:  if s.Marketo != nil {",
          "3189:   if err := s.Marketo.Validate(); err != nil {",
          "3190:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "3191:   }",
          "3192:  }",
          "3193:  if s.Redshift != nil {",
          "3194:   if err := s.Redshift.Validate(); err != nil {",
          "3195:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "3196:   }",
          "3197:  }",
          "3198:  if s.ServiceNow != nil {",
          "3199:   if err := s.ServiceNow.Validate(); err != nil {",
          "3200:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "3201:   }",
          "3202:  }",
          "3203:  if s.Slack != nil {",
          "3204:   if err := s.Slack.Validate(); err != nil {",
          "3205:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "3206:   }",
          "3207:  }",
          "3208:  if s.Snowflake != nil {",
          "3209:   if err := s.Snowflake.Validate(); err != nil {",
          "3210:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "3211:   }",
          "3212:  }",
          "3213:  if s.Veeva != nil {",
          "3214:   if err := s.Veeva.Validate(); err != nil {",
          "3215:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "3216:   }",
          "3217:  }",
          "3218:  if s.Zendesk != nil {",
          "3219:   if err := s.Zendesk.Validate(); err != nil {",
          "3220:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "3221:   }",
          "3222:  }",
          "3224:  if invalidParams.Len() > 0 {",
          "3225:   return invalidParams",
          "3226:  }",
          "3227:  return nil",
          "3228: }",
          "3231: func (s *ConnectorProfileProperties) SetAmplitude(v *AmplitudeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3232:  s.Amplitude = v",
          "3233:  return s",
          "3234: }",
          "3237: func (s *ConnectorProfileProperties) SetDatadog(v *DatadogConnectorProfileProperties) *ConnectorProfileProperties {",
          "3238:  s.Datadog = v",
          "3239:  return s",
          "3240: }",
          "3243: func (s *ConnectorProfileProperties) SetDynatrace(v *DynatraceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3244:  s.Dynatrace = v",
          "3245:  return s",
          "3246: }",
          "3249: func (s *ConnectorProfileProperties) SetGoogleAnalytics(v *GoogleAnalyticsConnectorProfileProperties) *ConnectorProfileProperties {",
          "3250:  s.GoogleAnalytics = v",
          "3251:  return s",
          "3252: }",
          "3255: func (s *ConnectorProfileProperties) SetInforNexus(v *InforNexusConnectorProfileProperties) *ConnectorProfileProperties {",
          "3256:  s.InforNexus = v",
          "3257:  return s",
          "3258: }",
          "3261: func (s *ConnectorProfileProperties) SetMarketo(v *MarketoConnectorProfileProperties) *ConnectorProfileProperties {",
          "3262:  s.Marketo = v",
          "3263:  return s",
          "3264: }",
          "3267: func (s *ConnectorProfileProperties) SetRedshift(v *RedshiftConnectorProfileProperties) *ConnectorProfileProperties {",
          "3268:  s.Redshift = v",
          "3269:  return s",
          "3270: }",
          "3273: func (s *ConnectorProfileProperties) SetSalesforce(v *SalesforceConnectorProfileProperties) *ConnectorProfileProperties {",
          "3274:  s.Salesforce = v",
          "3275:  return s",
          "3276: }",
          "3279: func (s *ConnectorProfileProperties) SetServiceNow(v *ServiceNowConnectorProfileProperties) *ConnectorProfileProperties {",
          "3280:  s.ServiceNow = v",
          "3281:  return s",
          "3282: }",
          "3285: func (s *ConnectorProfileProperties) SetSingular(v *SingularConnectorProfileProperties) *ConnectorProfileProperties {",
          "3286:  s.Singular = v",
          "3287:  return s",
          "3288: }",
          "3291: func (s *ConnectorProfileProperties) SetSlack(v *SlackConnectorProfileProperties) *ConnectorProfileProperties {",
          "3292:  s.Slack = v",
          "3293:  return s",
          "3294: }",
          "3297: func (s *ConnectorProfileProperties) SetSnowflake(v *SnowflakeConnectorProfileProperties) *ConnectorProfileProperties {",
          "3298:  s.Snowflake = v",
          "3299:  return s",
          "3300: }",
          "3303: func (s *ConnectorProfileProperties) SetTrendmicro(v *TrendmicroConnectorProfileProperties) *ConnectorProfileProperties {",
          "3304:  s.Trendmicro = v",
          "3305:  return s",
          "3306: }",
          "3309: func (s *ConnectorProfileProperties) SetVeeva(v *VeevaConnectorProfileProperties) *ConnectorProfileProperties {",
          "3310:  s.Veeva = v",
          "3311:  return s",
          "3312: }",
          "3315: func (s *ConnectorProfileProperties) SetZendesk(v *ZendeskConnectorProfileProperties) *ConnectorProfileProperties {",
          "3316:  s.Zendesk = v",
          "3317:  return s",
          "3318: }",
          "3321: type ConnectorServerException struct {",
          "3322:  _            struct{}                  `type:\"structure\"`",
          "3323:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3325:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "3326: }",
          "3329: func (s ConnectorServerException) String() string {",
          "3330:  return awsutil.Prettify(s)",
          "3331: }",
          "3334: func (s ConnectorServerException) GoString() string {",
          "3335:  return s.String()",
          "3336: }",
          "3338: func newErrorConnectorServerException(v protocol.ResponseMetadata) error {",
          "3339:  return &ConnectorServerException{",
          "3340:   RespMetadata: v,",
          "3341:  }",
          "3342: }",
          "3345: func (s *ConnectorServerException) Code() string {",
          "3346:  return \"ConnectorServerException\"",
          "3347: }",
          "3350: func (s *ConnectorServerException) Message() string {",
          "3351:  if s.Message_ != nil {",
          "3352:   return *s.Message_",
          "3353:  }",
          "3354:  return \"\"",
          "3355: }",
          "3358: func (s *ConnectorServerException) OrigErr() error {",
          "3359:  return nil",
          "3360: }",
          "3362: func (s *ConnectorServerException) Error() string {",
          "3363:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3364: }",
          "3367: func (s *ConnectorServerException) StatusCode() int {",
          "3368:  return s.RespMetadata.StatusCode",
          "3369: }",
          "3372: func (s *ConnectorServerException) RequestID() string {",
          "3373:  return s.RespMetadata.RequestID",
          "3374: }",
          "3376: type CreateConnectorProfileInput struct {",
          "3377:  _ struct{} `type:\"structure\"`",
          "3384:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "3389:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "3395:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3400:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "3406:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3407: }",
          "3410: func (s CreateConnectorProfileInput) String() string {",
          "3411:  return awsutil.Prettify(s)",
          "3412: }",
          "3415: func (s CreateConnectorProfileInput) GoString() string {",
          "3416:  return s.String()",
          "3417: }",
          "3420: func (s *CreateConnectorProfileInput) Validate() error {",
          "3421:  invalidParams := request.ErrInvalidParams{Context: \"CreateConnectorProfileInput\"}",
          "3422:  if s.ConnectionMode == nil {",
          "3423:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "3424:  }",
          "3425:  if s.ConnectorProfileConfig == nil {",
          "3426:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "3427:  }",
          "3428:  if s.ConnectorProfileName == nil {",
          "3429:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3430:  }",
          "3431:  if s.ConnectorType == nil {",
          "3432:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "3433:  }",
          "3434:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3435:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3436:  }",
          "3437:  if s.ConnectorProfileConfig != nil {",
          "3438:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "3439:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "3440:   }",
          "3441:  }",
          "3443:  if invalidParams.Len() > 0 {",
          "3444:   return invalidParams",
          "3445:  }",
          "3446:  return nil",
          "3447: }",
          "3450: func (s *CreateConnectorProfileInput) SetConnectionMode(v string) *CreateConnectorProfileInput {",
          "3451:  s.ConnectionMode = &v",
          "3452:  return s",
          "3453: }",
          "3456: func (s *CreateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *CreateConnectorProfileInput {",
          "3457:  s.ConnectorProfileConfig = v",
          "3458:  return s",
          "3459: }",
          "3462: func (s *CreateConnectorProfileInput) SetConnectorProfileName(v string) *CreateConnectorProfileInput {",
          "3463:  s.ConnectorProfileName = &v",
          "3464:  return s",
          "3465: }",
          "3468: func (s *CreateConnectorProfileInput) SetConnectorType(v string) *CreateConnectorProfileInput {",
          "3469:  s.ConnectorType = &v",
          "3470:  return s",
          "3471: }",
          "3474: func (s *CreateConnectorProfileInput) SetKmsArn(v string) *CreateConnectorProfileInput {",
          "3475:  s.KmsArn = &v",
          "3476:  return s",
          "3477: }",
          "3479: type CreateConnectorProfileOutput struct {",
          "3480:  _ struct{} `type:\"structure\"`",
          "3483:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "3484: }",
          "3487: func (s CreateConnectorProfileOutput) String() string {",
          "3488:  return awsutil.Prettify(s)",
          "3489: }",
          "3492: func (s CreateConnectorProfileOutput) GoString() string {",
          "3493:  return s.String()",
          "3494: }",
          "3497: func (s *CreateConnectorProfileOutput) SetConnectorProfileArn(v string) *CreateConnectorProfileOutput {",
          "3498:  s.ConnectorProfileArn = &v",
          "3499:  return s",
          "3500: }",
          "3502: type CreateFlowInput struct {",
          "3503:  _ struct{} `type:\"structure\"`",
          "3506:  Description *string `locationName:\"description\" type:\"string\"`",
          "3512:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "3518:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3524:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "3530:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\" required:\"true\"`",
          "3533:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3539:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "3544:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "3545: }",
          "3548: func (s CreateFlowInput) String() string {",
          "3549:  return awsutil.Prettify(s)",
          "3550: }",
          "3553: func (s CreateFlowInput) GoString() string {",
          "3554:  return s.String()",
          "3555: }",
          "3558: func (s *CreateFlowInput) Validate() error {",
          "3559:  invalidParams := request.ErrInvalidParams{Context: \"CreateFlowInput\"}",
          "3560:  if s.DestinationFlowConfigList == nil {",
          "3561:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "3562:  }",
          "3563:  if s.FlowName == nil {",
          "3564:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3565:  }",
          "3566:  if s.KmsArn != nil && len(*s.KmsArn) < 20 {",
          "3567:   invalidParams.Add(request.NewErrParamMinLen(\"KmsArn\", 20))",
          "3568:  }",
          "3569:  if s.SourceFlowConfig == nil {",
          "3570:   invalidParams.Add(request.NewErrParamRequired(\"SourceFlowConfig\"))",
          "3571:  }",
          "3572:  if s.Tasks == nil {",
          "3573:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "3574:  }",
          "3575:  if s.TriggerConfig == nil {",
          "3576:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "3577:  }",
          "3578:  if s.DestinationFlowConfigList != nil {",
          "3579:   for i, v := range s.DestinationFlowConfigList {",
          "3580:    if v == nil {",
          "3581:     continue",
          "3582:    }",
          "3583:    if err := v.Validate(); err != nil {",
          "3584:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "3585:    }",
          "3586:   }",
          "3587:  }",
          "3588:  if s.SourceFlowConfig != nil {",
          "3589:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "3590:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "3591:   }",
          "3592:  }",
          "3593:  if s.Tasks != nil {",
          "3594:   for i, v := range s.Tasks {",
          "3595:    if v == nil {",
          "3596:     continue",
          "3597:    }",
          "3598:    if err := v.Validate(); err != nil {",
          "3599:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "3600:    }",
          "3601:   }",
          "3602:  }",
          "3603:  if s.TriggerConfig != nil {",
          "3604:   if err := s.TriggerConfig.Validate(); err != nil {",
          "3605:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "3606:   }",
          "3607:  }",
          "3609:  if invalidParams.Len() > 0 {",
          "3610:   return invalidParams",
          "3611:  }",
          "3612:  return nil",
          "3613: }",
          "3616: func (s *CreateFlowInput) SetDescription(v string) *CreateFlowInput {",
          "3617:  s.Description = &v",
          "3618:  return s",
          "3619: }",
          "3622: func (s *CreateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *CreateFlowInput {",
          "3623:  s.DestinationFlowConfigList = v",
          "3624:  return s",
          "3625: }",
          "3628: func (s *CreateFlowInput) SetFlowName(v string) *CreateFlowInput {",
          "3629:  s.FlowName = &v",
          "3630:  return s",
          "3631: }",
          "3634: func (s *CreateFlowInput) SetKmsArn(v string) *CreateFlowInput {",
          "3635:  s.KmsArn = &v",
          "3636:  return s",
          "3637: }",
          "3640: func (s *CreateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *CreateFlowInput {",
          "3641:  s.SourceFlowConfig = v",
          "3642:  return s",
          "3643: }",
          "3646: func (s *CreateFlowInput) SetTags(v map[string]*string) *CreateFlowInput {",
          "3647:  s.Tags = v",
          "3648:  return s",
          "3649: }",
          "3652: func (s *CreateFlowInput) SetTasks(v []*Task) *CreateFlowInput {",
          "3653:  s.Tasks = v",
          "3654:  return s",
          "3655: }",
          "3658: func (s *CreateFlowInput) SetTriggerConfig(v *TriggerConfig) *CreateFlowInput {",
          "3659:  s.TriggerConfig = v",
          "3660:  return s",
          "3661: }",
          "3663: type CreateFlowOutput struct {",
          "3664:  _ struct{} `type:\"structure\"`",
          "3667:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "3670:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "3671: }",
          "3674: func (s CreateFlowOutput) String() string {",
          "3675:  return awsutil.Prettify(s)",
          "3676: }",
          "3679: func (s CreateFlowOutput) GoString() string {",
          "3680:  return s.String()",
          "3681: }",
          "3684: func (s *CreateFlowOutput) SetFlowArn(v string) *CreateFlowOutput {",
          "3685:  s.FlowArn = &v",
          "3686:  return s",
          "3687: }",
          "3690: func (s *CreateFlowOutput) SetFlowStatus(v string) *CreateFlowOutput {",
          "3691:  s.FlowStatus = &v",
          "3692:  return s",
          "3693: }",
          "3696: type DatadogConnectorProfileCredentials struct {",
          "3697:  _ struct{} `type:\"structure\"`",
          "3703:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "3711:  ApplicationKey *string `locationName:\"applicationKey\" type:\"string\" required:\"true\"`",
          "3712: }",
          "3715: func (s DatadogConnectorProfileCredentials) String() string {",
          "3716:  return awsutil.Prettify(s)",
          "3717: }",
          "3720: func (s DatadogConnectorProfileCredentials) GoString() string {",
          "3721:  return s.String()",
          "3722: }",
          "3725: func (s *DatadogConnectorProfileCredentials) Validate() error {",
          "3726:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileCredentials\"}",
          "3727:  if s.ApiKey == nil {",
          "3728:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "3729:  }",
          "3730:  if s.ApplicationKey == nil {",
          "3731:   invalidParams.Add(request.NewErrParamRequired(\"ApplicationKey\"))",
          "3732:  }",
          "3734:  if invalidParams.Len() > 0 {",
          "3735:   return invalidParams",
          "3736:  }",
          "3737:  return nil",
          "3738: }",
          "3741: func (s *DatadogConnectorProfileCredentials) SetApiKey(v string) *DatadogConnectorProfileCredentials {",
          "3742:  s.ApiKey = &v",
          "3743:  return s",
          "3744: }",
          "3747: func (s *DatadogConnectorProfileCredentials) SetApplicationKey(v string) *DatadogConnectorProfileCredentials {",
          "3748:  s.ApplicationKey = &v",
          "3749:  return s",
          "3750: }",
          "3753: type DatadogConnectorProfileProperties struct {",
          "3754:  _ struct{} `type:\"structure\"`",
          "3759:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "3760: }",
          "3763: func (s DatadogConnectorProfileProperties) String() string {",
          "3764:  return awsutil.Prettify(s)",
          "3765: }",
          "3768: func (s DatadogConnectorProfileProperties) GoString() string {",
          "3769:  return s.String()",
          "3770: }",
          "3773: func (s *DatadogConnectorProfileProperties) Validate() error {",
          "3774:  invalidParams := request.ErrInvalidParams{Context: \"DatadogConnectorProfileProperties\"}",
          "3775:  if s.InstanceUrl == nil {",
          "3776:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "3777:  }",
          "3779:  if invalidParams.Len() > 0 {",
          "3780:   return invalidParams",
          "3781:  }",
          "3782:  return nil",
          "3783: }",
          "3786: func (s *DatadogConnectorProfileProperties) SetInstanceUrl(v string) *DatadogConnectorProfileProperties {",
          "3787:  s.InstanceUrl = &v",
          "3788:  return s",
          "3789: }",
          "3792: type DatadogMetadata struct {",
          "3793:  _ struct{} `type:\"structure\"`",
          "3794: }",
          "3797: func (s DatadogMetadata) String() string {",
          "3798:  return awsutil.Prettify(s)",
          "3799: }",
          "3802: func (s DatadogMetadata) GoString() string {",
          "3803:  return s.String()",
          "3804: }",
          "3807: type DatadogSourceProperties struct {",
          "3808:  _ struct{} `type:\"structure\"`",
          "3813:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "3814: }",
          "3817: func (s DatadogSourceProperties) String() string {",
          "3818:  return awsutil.Prettify(s)",
          "3819: }",
          "3822: func (s DatadogSourceProperties) GoString() string {",
          "3823:  return s.String()",
          "3824: }",
          "3827: func (s *DatadogSourceProperties) Validate() error {",
          "3828:  invalidParams := request.ErrInvalidParams{Context: \"DatadogSourceProperties\"}",
          "3829:  if s.Object == nil {",
          "3830:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "3831:  }",
          "3833:  if invalidParams.Len() > 0 {",
          "3834:   return invalidParams",
          "3835:  }",
          "3836:  return nil",
          "3837: }",
          "3840: func (s *DatadogSourceProperties) SetObject(v string) *DatadogSourceProperties {",
          "3841:  s.Object = &v",
          "3842:  return s",
          "3843: }",
          "3845: type DeleteConnectorProfileInput struct {",
          "3846:  _ struct{} `type:\"structure\"`",
          "3852:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "3856:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3857: }",
          "3860: func (s DeleteConnectorProfileInput) String() string {",
          "3861:  return awsutil.Prettify(s)",
          "3862: }",
          "3865: func (s DeleteConnectorProfileInput) GoString() string {",
          "3866:  return s.String()",
          "3867: }",
          "3870: func (s *DeleteConnectorProfileInput) Validate() error {",
          "3871:  invalidParams := request.ErrInvalidParams{Context: \"DeleteConnectorProfileInput\"}",
          "3872:  if s.ConnectorProfileName == nil {",
          "3873:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "3874:  }",
          "3876:  if invalidParams.Len() > 0 {",
          "3877:   return invalidParams",
          "3878:  }",
          "3879:  return nil",
          "3880: }",
          "3883: func (s *DeleteConnectorProfileInput) SetConnectorProfileName(v string) *DeleteConnectorProfileInput {",
          "3884:  s.ConnectorProfileName = &v",
          "3885:  return s",
          "3886: }",
          "3889: func (s *DeleteConnectorProfileInput) SetForceDelete(v bool) *DeleteConnectorProfileInput {",
          "3890:  s.ForceDelete = &v",
          "3891:  return s",
          "3892: }",
          "3894: type DeleteConnectorProfileOutput struct {",
          "3895:  _ struct{} `type:\"structure\"`",
          "3896: }",
          "3899: func (s DeleteConnectorProfileOutput) String() string {",
          "3900:  return awsutil.Prettify(s)",
          "3901: }",
          "3904: func (s DeleteConnectorProfileOutput) GoString() string {",
          "3905:  return s.String()",
          "3906: }",
          "3908: type DeleteFlowInput struct {",
          "3909:  _ struct{} `type:\"structure\"`",
          "3915:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "3919:  ForceDelete *bool `locationName:\"forceDelete\" type:\"boolean\"`",
          "3920: }",
          "3923: func (s DeleteFlowInput) String() string {",
          "3924:  return awsutil.Prettify(s)",
          "3925: }",
          "3928: func (s DeleteFlowInput) GoString() string {",
          "3929:  return s.String()",
          "3930: }",
          "3933: func (s *DeleteFlowInput) Validate() error {",
          "3934:  invalidParams := request.ErrInvalidParams{Context: \"DeleteFlowInput\"}",
          "3935:  if s.FlowName == nil {",
          "3936:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "3937:  }",
          "3939:  if invalidParams.Len() > 0 {",
          "3940:   return invalidParams",
          "3941:  }",
          "3942:  return nil",
          "3943: }",
          "3946: func (s *DeleteFlowInput) SetFlowName(v string) *DeleteFlowInput {",
          "3947:  s.FlowName = &v",
          "3948:  return s",
          "3949: }",
          "3952: func (s *DeleteFlowInput) SetForceDelete(v bool) *DeleteFlowInput {",
          "3953:  s.ForceDelete = &v",
          "3954:  return s",
          "3955: }",
          "3957: type DeleteFlowOutput struct {",
          "3958:  _ struct{} `type:\"structure\"`",
          "3959: }",
          "3962: func (s DeleteFlowOutput) String() string {",
          "3963:  return awsutil.Prettify(s)",
          "3964: }",
          "3967: func (s DeleteFlowOutput) GoString() string {",
          "3968:  return s.String()",
          "3969: }",
          "3971: type DescribeConnectorEntityInput struct {",
          "3972:  _ struct{} `type:\"structure\"`",
          "3977:  ConnectorEntityName *string `locationName:\"connectorEntityName\" type:\"string\" required:\"true\"`",
          "3981:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "3985:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "3986: }",
          "3989: func (s DescribeConnectorEntityInput) String() string {",
          "3990:  return awsutil.Prettify(s)",
          "3991: }",
          "3994: func (s DescribeConnectorEntityInput) GoString() string {",
          "3995:  return s.String()",
          "3996: }",
          "3999: func (s *DescribeConnectorEntityInput) Validate() error {",
          "4000:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorEntityInput\"}",
          "4001:  if s.ConnectorEntityName == nil {",
          "4002:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorEntityName\"))",
          "4003:  }",
          "4005:  if invalidParams.Len() > 0 {",
          "4006:   return invalidParams",
          "4007:  }",
          "4008:  return nil",
          "4009: }",
          "4012: func (s *DescribeConnectorEntityInput) SetConnectorEntityName(v string) *DescribeConnectorEntityInput {",
          "4013:  s.ConnectorEntityName = &v",
          "4014:  return s",
          "4015: }",
          "4018: func (s *DescribeConnectorEntityInput) SetConnectorProfileName(v string) *DescribeConnectorEntityInput {",
          "4019:  s.ConnectorProfileName = &v",
          "4020:  return s",
          "4021: }",
          "4024: func (s *DescribeConnectorEntityInput) SetConnectorType(v string) *DescribeConnectorEntityInput {",
          "4025:  s.ConnectorType = &v",
          "4026:  return s",
          "4027: }",
          "4029: type DescribeConnectorEntityOutput struct {",
          "4030:  _ struct{} `type:\"structure\"`",
          "4036:  ConnectorEntityFields []*ConnectorEntityField `locationName:\"connectorEntityFields\" type:\"list\" required:\"true\"`",
          "4037: }",
          "4040: func (s DescribeConnectorEntityOutput) String() string {",
          "4041:  return awsutil.Prettify(s)",
          "4042: }",
          "4045: func (s DescribeConnectorEntityOutput) GoString() string {",
          "4046:  return s.String()",
          "4047: }",
          "4050: func (s *DescribeConnectorEntityOutput) SetConnectorEntityFields(v []*ConnectorEntityField) *DescribeConnectorEntityOutput {",
          "4051:  s.ConnectorEntityFields = v",
          "4052:  return s",
          "4053: }",
          "4055: type DescribeConnectorProfilesInput struct {",
          "4056:  _ struct{} `type:\"structure\"`",
          "4060:  ConnectorProfileNames []*string `locationName:\"connectorProfileNames\" type:\"list\"`",
          "4063:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "4067:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4070:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4071: }",
          "4074: func (s DescribeConnectorProfilesInput) String() string {",
          "4075:  return awsutil.Prettify(s)",
          "4076: }",
          "4079: func (s DescribeConnectorProfilesInput) GoString() string {",
          "4080:  return s.String()",
          "4081: }",
          "4084: func (s *DescribeConnectorProfilesInput) Validate() error {",
          "4085:  invalidParams := request.ErrInvalidParams{Context: \"DescribeConnectorProfilesInput\"}",
          "4086:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4087:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4088:  }",
          "4090:  if invalidParams.Len() > 0 {",
          "4091:   return invalidParams",
          "4092:  }",
          "4093:  return nil",
          "4094: }",
          "4097: func (s *DescribeConnectorProfilesInput) SetConnectorProfileNames(v []*string) *DescribeConnectorProfilesInput {",
          "4098:  s.ConnectorProfileNames = v",
          "4099:  return s",
          "4100: }",
          "4103: func (s *DescribeConnectorProfilesInput) SetConnectorType(v string) *DescribeConnectorProfilesInput {",
          "4104:  s.ConnectorType = &v",
          "4105:  return s",
          "4106: }",
          "4109: func (s *DescribeConnectorProfilesInput) SetMaxResults(v int64) *DescribeConnectorProfilesInput {",
          "4110:  s.MaxResults = &v",
          "4111:  return s",
          "4112: }",
          "4115: func (s *DescribeConnectorProfilesInput) SetNextToken(v string) *DescribeConnectorProfilesInput {",
          "4116:  s.NextToken = &v",
          "4117:  return s",
          "4118: }",
          "4120: type DescribeConnectorProfilesOutput struct {",
          "4121:  _ struct{} `type:\"structure\"`",
          "4124:  ConnectorProfileDetails []*ConnectorProfile `locationName:\"connectorProfileDetails\" type:\"list\"`",
          "4128:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4129: }",
          "4132: func (s DescribeConnectorProfilesOutput) String() string {",
          "4133:  return awsutil.Prettify(s)",
          "4134: }",
          "4137: func (s DescribeConnectorProfilesOutput) GoString() string {",
          "4138:  return s.String()",
          "4139: }",
          "4142: func (s *DescribeConnectorProfilesOutput) SetConnectorProfileDetails(v []*ConnectorProfile) *DescribeConnectorProfilesOutput {",
          "4143:  s.ConnectorProfileDetails = v",
          "4144:  return s",
          "4145: }",
          "4148: func (s *DescribeConnectorProfilesOutput) SetNextToken(v string) *DescribeConnectorProfilesOutput {",
          "4149:  s.NextToken = &v",
          "4150:  return s",
          "4151: }",
          "4153: type DescribeConnectorsInput struct {",
          "4154:  _ struct{} `type:\"structure\"`",
          "4157:  ConnectorTypes []*string `locationName:\"connectorTypes\" type:\"list\"`",
          "4160:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4161: }",
          "4164: func (s DescribeConnectorsInput) String() string {",
          "4165:  return awsutil.Prettify(s)",
          "4166: }",
          "4169: func (s DescribeConnectorsInput) GoString() string {",
          "4170:  return s.String()",
          "4171: }",
          "4174: func (s *DescribeConnectorsInput) SetConnectorTypes(v []*string) *DescribeConnectorsInput {",
          "4175:  s.ConnectorTypes = v",
          "4176:  return s",
          "4177: }",
          "4180: func (s *DescribeConnectorsInput) SetNextToken(v string) *DescribeConnectorsInput {",
          "4181:  s.NextToken = &v",
          "4182:  return s",
          "4183: }",
          "4185: type DescribeConnectorsOutput struct {",
          "4186:  _ struct{} `type:\"structure\"`",
          "4189:  ConnectorConfigurations map[string]*ConnectorConfiguration `locationName:\"connectorConfigurations\" type:\"map\"`",
          "4192:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4193: }",
          "4196: func (s DescribeConnectorsOutput) String() string {",
          "4197:  return awsutil.Prettify(s)",
          "4198: }",
          "4201: func (s DescribeConnectorsOutput) GoString() string {",
          "4202:  return s.String()",
          "4203: }",
          "4206: func (s *DescribeConnectorsOutput) SetConnectorConfigurations(v map[string]*ConnectorConfiguration) *DescribeConnectorsOutput {",
          "4207:  s.ConnectorConfigurations = v",
          "4208:  return s",
          "4209: }",
          "4212: func (s *DescribeConnectorsOutput) SetNextToken(v string) *DescribeConnectorsOutput {",
          "4213:  s.NextToken = &v",
          "4214:  return s",
          "4215: }",
          "4217: type DescribeFlowExecutionRecordsInput struct {",
          "4218:  _ struct{} `type:\"structure\"`",
          "4224:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4228:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "4231:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4232: }",
          "4235: func (s DescribeFlowExecutionRecordsInput) String() string {",
          "4236:  return awsutil.Prettify(s)",
          "4237: }",
          "4240: func (s DescribeFlowExecutionRecordsInput) GoString() string {",
          "4241:  return s.String()",
          "4242: }",
          "4245: func (s *DescribeFlowExecutionRecordsInput) Validate() error {",
          "4246:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowExecutionRecordsInput\"}",
          "4247:  if s.FlowName == nil {",
          "4248:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4249:  }",
          "4250:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4251:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4252:  }",
          "4254:  if invalidParams.Len() > 0 {",
          "4255:   return invalidParams",
          "4256:  }",
          "4257:  return nil",
          "4258: }",
          "4261: func (s *DescribeFlowExecutionRecordsInput) SetFlowName(v string) *DescribeFlowExecutionRecordsInput {",
          "4262:  s.FlowName = &v",
          "4263:  return s",
          "4264: }",
          "4267: func (s *DescribeFlowExecutionRecordsInput) SetMaxResults(v int64) *DescribeFlowExecutionRecordsInput {",
          "4268:  s.MaxResults = &v",
          "4269:  return s",
          "4270: }",
          "4273: func (s *DescribeFlowExecutionRecordsInput) SetNextToken(v string) *DescribeFlowExecutionRecordsInput {",
          "4274:  s.NextToken = &v",
          "4275:  return s",
          "4276: }",
          "4278: type DescribeFlowExecutionRecordsOutput struct {",
          "4279:  _ struct{} `type:\"structure\"`",
          "4282:  FlowExecutions []*ExecutionRecord `locationName:\"flowExecutions\" type:\"list\"`",
          "4285:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "4286: }",
          "4289: func (s DescribeFlowExecutionRecordsOutput) String() string {",
          "4290:  return awsutil.Prettify(s)",
          "4291: }",
          "4294: func (s DescribeFlowExecutionRecordsOutput) GoString() string {",
          "4295:  return s.String()",
          "4296: }",
          "4299: func (s *DescribeFlowExecutionRecordsOutput) SetFlowExecutions(v []*ExecutionRecord) *DescribeFlowExecutionRecordsOutput {",
          "4300:  s.FlowExecutions = v",
          "4301:  return s",
          "4302: }",
          "4305: func (s *DescribeFlowExecutionRecordsOutput) SetNextToken(v string) *DescribeFlowExecutionRecordsOutput {",
          "4306:  s.NextToken = &v",
          "4307:  return s",
          "4308: }",
          "4310: type DescribeFlowInput struct {",
          "4311:  _ struct{} `type:\"structure\"`",
          "4317:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "4318: }",
          "4321: func (s DescribeFlowInput) String() string {",
          "4322:  return awsutil.Prettify(s)",
          "4323: }",
          "4326: func (s DescribeFlowInput) GoString() string {",
          "4327:  return s.String()",
          "4328: }",
          "4331: func (s *DescribeFlowInput) Validate() error {",
          "4332:  invalidParams := request.ErrInvalidParams{Context: \"DescribeFlowInput\"}",
          "4333:  if s.FlowName == nil {",
          "4334:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "4335:  }",
          "4337:  if invalidParams.Len() > 0 {",
          "4338:   return invalidParams",
          "4339:  }",
          "4340:  return nil",
          "4341: }",
          "4344: func (s *DescribeFlowInput) SetFlowName(v string) *DescribeFlowInput {",
          "4345:  s.FlowName = &v",
          "4346:  return s",
          "4347: }",
          "4349: type DescribeFlowOutput struct {",
          "4350:  _ struct{} `type:\"structure\"`",
          "4353:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "4356:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "4359:  Description *string `locationName:\"description\" type:\"string\"`",
          "4363:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\"`",
          "4366:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "4370:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "4373:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "4377:  FlowStatusMessage *string `locationName:\"flowStatusMessage\" type:\"string\"`",
          "4383:  KmsArn *string `locationName:\"kmsArn\" min:\"20\" type:\"string\"`",
          "4386:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "4389:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "4392:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "4396:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "4399:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "4403:  Tasks []*Task `locationName:\"tasks\" type:\"list\"`",
          "4406:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\"`",
          "4407: }",
          "4410: func (s DescribeFlowOutput) String() string {",
          "4411:  return awsutil.Prettify(s)",
          "4412: }",
          "4415: func (s DescribeFlowOutput) GoString() string {",
          "4416:  return s.String()",
          "4417: }",
          "4420: func (s *DescribeFlowOutput) SetCreatedAt(v time.Time) *DescribeFlowOutput {",
          "4421:  s.CreatedAt = &v",
          "4422:  return s",
          "4423: }",
          "4426: func (s *DescribeFlowOutput) SetCreatedBy(v string) *DescribeFlowOutput {",
          "4427:  s.CreatedBy = &v",
          "4428:  return s",
          "4429: }",
          "4432: func (s *DescribeFlowOutput) SetDescription(v string) *DescribeFlowOutput {",
          "4433:  s.Description = &v",
          "4434:  return s",
          "4435: }",
          "4438: func (s *DescribeFlowOutput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *DescribeFlowOutput {",
          "4439:  s.DestinationFlowConfigList = v",
          "4440:  return s",
          "4441: }",
          "4444: func (s *DescribeFlowOutput) SetFlowArn(v string) *DescribeFlowOutput {",
          "4445:  s.FlowArn = &v",
          "4446:  return s",
          "4447: }",
          "4450: func (s *DescribeFlowOutput) SetFlowName(v string) *DescribeFlowOutput {",
          "4451:  s.FlowName = &v",
          "4452:  return s",
          "4453: }",
          "4456: func (s *DescribeFlowOutput) SetFlowStatus(v string) *DescribeFlowOutput {",
          "4457:  s.FlowStatus = &v",
          "4458:  return s",
          "4459: }",
          "4462: func (s *DescribeFlowOutput) SetFlowStatusMessage(v string) *DescribeFlowOutput {",
          "4463:  s.FlowStatusMessage = &v",
          "4464:  return s",
          "4465: }",
          "4468: func (s *DescribeFlowOutput) SetKmsArn(v string) *DescribeFlowOutput {",
          "4469:  s.KmsArn = &v",
          "4470:  return s",
          "4471: }",
          "4474: func (s *DescribeFlowOutput) SetLastRunExecutionDetails(v *ExecutionDetails) *DescribeFlowOutput {",
          "4475:  s.LastRunExecutionDetails = v",
          "4476:  return s",
          "4477: }",
          "4480: func (s *DescribeFlowOutput) SetLastUpdatedAt(v time.Time) *DescribeFlowOutput {",
          "4481:  s.LastUpdatedAt = &v",
          "4482:  return s",
          "4483: }",
          "4486: func (s *DescribeFlowOutput) SetLastUpdatedBy(v string) *DescribeFlowOutput {",
          "4487:  s.LastUpdatedBy = &v",
          "4488:  return s",
          "4489: }",
          "4492: func (s *DescribeFlowOutput) SetSourceFlowConfig(v *SourceFlowConfig) *DescribeFlowOutput {",
          "4493:  s.SourceFlowConfig = v",
          "4494:  return s",
          "4495: }",
          "4498: func (s *DescribeFlowOutput) SetTags(v map[string]*string) *DescribeFlowOutput {",
          "4499:  s.Tags = v",
          "4500:  return s",
          "4501: }",
          "4504: func (s *DescribeFlowOutput) SetTasks(v []*Task) *DescribeFlowOutput {",
          "4505:  s.Tasks = v",
          "4506:  return s",
          "4507: }",
          "4510: func (s *DescribeFlowOutput) SetTriggerConfig(v *TriggerConfig) *DescribeFlowOutput {",
          "4511:  s.TriggerConfig = v",
          "4512:  return s",
          "4513: }",
          "4516: type DestinationConnectorProperties struct {",
          "4517:  _ struct{} `type:\"structure\"`",
          "4520:  EventBridge *EventBridgeDestinationProperties `type:\"structure\"`",
          "4523:  Redshift *RedshiftDestinationProperties `type:\"structure\"`",
          "4526:  S3 *S3DestinationProperties `type:\"structure\"`",
          "4529:  Salesforce *SalesforceDestinationProperties `type:\"structure\"`",
          "4532:  Snowflake *SnowflakeDestinationProperties `type:\"structure\"`",
          "4533: }",
          "4536: func (s DestinationConnectorProperties) String() string {",
          "4537:  return awsutil.Prettify(s)",
          "4538: }",
          "4541: func (s DestinationConnectorProperties) GoString() string {",
          "4542:  return s.String()",
          "4543: }",
          "4546: func (s *DestinationConnectorProperties) Validate() error {",
          "4547:  invalidParams := request.ErrInvalidParams{Context: \"DestinationConnectorProperties\"}",
          "4548:  if s.EventBridge != nil {",
          "4549:   if err := s.EventBridge.Validate(); err != nil {",
          "4550:    invalidParams.AddNested(\"EventBridge\", err.(request.ErrInvalidParams))",
          "4551:   }",
          "4552:  }",
          "4553:  if s.Redshift != nil {",
          "4554:   if err := s.Redshift.Validate(); err != nil {",
          "4555:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "4556:   }",
          "4557:  }",
          "4558:  if s.S3 != nil {",
          "4559:   if err := s.S3.Validate(); err != nil {",
          "4560:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "4561:   }",
          "4562:  }",
          "4563:  if s.Salesforce != nil {",
          "4564:   if err := s.Salesforce.Validate(); err != nil {",
          "4565:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "4566:   }",
          "4567:  }",
          "4568:  if s.Snowflake != nil {",
          "4569:   if err := s.Snowflake.Validate(); err != nil {",
          "4570:    invalidParams.AddNested(\"Snowflake\", err.(request.ErrInvalidParams))",
          "4571:   }",
          "4572:  }",
          "4574:  if invalidParams.Len() > 0 {",
          "4575:   return invalidParams",
          "4576:  }",
          "4577:  return nil",
          "4578: }",
          "4581: func (s *DestinationConnectorProperties) SetEventBridge(v *EventBridgeDestinationProperties) *DestinationConnectorProperties {",
          "4582:  s.EventBridge = v",
          "4583:  return s",
          "4584: }",
          "4587: func (s *DestinationConnectorProperties) SetRedshift(v *RedshiftDestinationProperties) *DestinationConnectorProperties {",
          "4588:  s.Redshift = v",
          "4589:  return s",
          "4590: }",
          "4593: func (s *DestinationConnectorProperties) SetS3(v *S3DestinationProperties) *DestinationConnectorProperties {",
          "4594:  s.S3 = v",
          "4595:  return s",
          "4596: }",
          "4599: func (s *DestinationConnectorProperties) SetSalesforce(v *SalesforceDestinationProperties) *DestinationConnectorProperties {",
          "4600:  s.Salesforce = v",
          "4601:  return s",
          "4602: }",
          "4605: func (s *DestinationConnectorProperties) SetSnowflake(v *SnowflakeDestinationProperties) *DestinationConnectorProperties {",
          "4606:  s.Snowflake = v",
          "4607:  return s",
          "4608: }",
          "4612: type DestinationFieldProperties struct {",
          "4613:  _ struct{} `type:\"structure\"`",
          "4616:  IsCreatable *bool `locationName:\"isCreatable\" type:\"boolean\"`",
          "4619:  IsNullable *bool `locationName:\"isNullable\" type:\"boolean\"`",
          "4623:  IsUpsertable *bool `locationName:\"isUpsertable\" type:\"boolean\"`",
          "4624: }",
          "4627: func (s DestinationFieldProperties) String() string {",
          "4628:  return awsutil.Prettify(s)",
          "4629: }",
          "4632: func (s DestinationFieldProperties) GoString() string {",
          "4633:  return s.String()",
          "4634: }",
          "4637: func (s *DestinationFieldProperties) SetIsCreatable(v bool) *DestinationFieldProperties {",
          "4638:  s.IsCreatable = &v",
          "4639:  return s",
          "4640: }",
          "4643: func (s *DestinationFieldProperties) SetIsNullable(v bool) *DestinationFieldProperties {",
          "4644:  s.IsNullable = &v",
          "4645:  return s",
          "4646: }",
          "4649: func (s *DestinationFieldProperties) SetIsUpsertable(v bool) *DestinationFieldProperties {",
          "4650:  s.IsUpsertable = &v",
          "4651:  return s",
          "4652: }",
          "4656: type DestinationFlowConfig struct {",
          "4657:  _ struct{} `type:\"structure\"`",
          "4661:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "4666:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "4671:  DestinationConnectorProperties *DestinationConnectorProperties `locationName:\"destinationConnectorProperties\" type:\"structure\" required:\"true\"`",
          "4672: }",
          "4675: func (s DestinationFlowConfig) String() string {",
          "4676:  return awsutil.Prettify(s)",
          "4677: }",
          "4680: func (s DestinationFlowConfig) GoString() string {",
          "4681:  return s.String()",
          "4682: }",
          "4685: func (s *DestinationFlowConfig) Validate() error {",
          "4686:  invalidParams := request.ErrInvalidParams{Context: \"DestinationFlowConfig\"}",
          "4687:  if s.ConnectorType == nil {",
          "4688:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "4689:  }",
          "4690:  if s.DestinationConnectorProperties == nil {",
          "4691:   invalidParams.Add(request.NewErrParamRequired(\"DestinationConnectorProperties\"))",
          "4692:  }",
          "4693:  if s.DestinationConnectorProperties != nil {",
          "4694:   if err := s.DestinationConnectorProperties.Validate(); err != nil {",
          "4695:    invalidParams.AddNested(\"DestinationConnectorProperties\", err.(request.ErrInvalidParams))",
          "4696:   }",
          "4697:  }",
          "4699:  if invalidParams.Len() > 0 {",
          "4700:   return invalidParams",
          "4701:  }",
          "4702:  return nil",
          "4703: }",
          "4706: func (s *DestinationFlowConfig) SetConnectorProfileName(v string) *DestinationFlowConfig {",
          "4707:  s.ConnectorProfileName = &v",
          "4708:  return s",
          "4709: }",
          "4712: func (s *DestinationFlowConfig) SetConnectorType(v string) *DestinationFlowConfig {",
          "4713:  s.ConnectorType = &v",
          "4714:  return s",
          "4715: }",
          "4718: func (s *DestinationFlowConfig) SetDestinationConnectorProperties(v *DestinationConnectorProperties) *DestinationFlowConfig {",
          "4719:  s.DestinationConnectorProperties = v",
          "4720:  return s",
          "4721: }",
          "4724: type DynatraceConnectorProfileCredentials struct {",
          "4725:  _ struct{} `type:\"structure\"`",
          "4730:  ApiToken *string `locationName:\"apiToken\" type:\"string\" required:\"true\"`",
          "4731: }",
          "4734: func (s DynatraceConnectorProfileCredentials) String() string {",
          "4735:  return awsutil.Prettify(s)",
          "4736: }",
          "4739: func (s DynatraceConnectorProfileCredentials) GoString() string {",
          "4740:  return s.String()",
          "4741: }",
          "4744: func (s *DynatraceConnectorProfileCredentials) Validate() error {",
          "4745:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileCredentials\"}",
          "4746:  if s.ApiToken == nil {",
          "4747:   invalidParams.Add(request.NewErrParamRequired(\"ApiToken\"))",
          "4748:  }",
          "4750:  if invalidParams.Len() > 0 {",
          "4751:   return invalidParams",
          "4752:  }",
          "4753:  return nil",
          "4754: }",
          "4757: func (s *DynatraceConnectorProfileCredentials) SetApiToken(v string) *DynatraceConnectorProfileCredentials {",
          "4758:  s.ApiToken = &v",
          "4759:  return s",
          "4760: }",
          "4763: type DynatraceConnectorProfileProperties struct {",
          "4764:  _ struct{} `type:\"structure\"`",
          "4769:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "4770: }",
          "4773: func (s DynatraceConnectorProfileProperties) String() string {",
          "4774:  return awsutil.Prettify(s)",
          "4775: }",
          "4778: func (s DynatraceConnectorProfileProperties) GoString() string {",
          "4779:  return s.String()",
          "4780: }",
          "4783: func (s *DynatraceConnectorProfileProperties) Validate() error {",
          "4784:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceConnectorProfileProperties\"}",
          "4785:  if s.InstanceUrl == nil {",
          "4786:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "4787:  }",
          "4789:  if invalidParams.Len() > 0 {",
          "4790:   return invalidParams",
          "4791:  }",
          "4792:  return nil",
          "4793: }",
          "4796: func (s *DynatraceConnectorProfileProperties) SetInstanceUrl(v string) *DynatraceConnectorProfileProperties {",
          "4797:  s.InstanceUrl = &v",
          "4798:  return s",
          "4799: }",
          "4802: type DynatraceMetadata struct {",
          "4803:  _ struct{} `type:\"structure\"`",
          "4804: }",
          "4807: func (s DynatraceMetadata) String() string {",
          "4808:  return awsutil.Prettify(s)",
          "4809: }",
          "4812: func (s DynatraceMetadata) GoString() string {",
          "4813:  return s.String()",
          "4814: }",
          "4817: type DynatraceSourceProperties struct {",
          "4818:  _ struct{} `type:\"structure\"`",
          "4823:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4824: }",
          "4827: func (s DynatraceSourceProperties) String() string {",
          "4828:  return awsutil.Prettify(s)",
          "4829: }",
          "4832: func (s DynatraceSourceProperties) GoString() string {",
          "4833:  return s.String()",
          "4834: }",
          "4837: func (s *DynatraceSourceProperties) Validate() error {",
          "4838:  invalidParams := request.ErrInvalidParams{Context: \"DynatraceSourceProperties\"}",
          "4839:  if s.Object == nil {",
          "4840:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4841:  }",
          "4843:  if invalidParams.Len() > 0 {",
          "4844:   return invalidParams",
          "4845:  }",
          "4846:  return nil",
          "4847: }",
          "4850: func (s *DynatraceSourceProperties) SetObject(v string) *DynatraceSourceProperties {",
          "4851:  s.Object = &v",
          "4852:  return s",
          "4853: }",
          "4860: type ErrorHandlingConfig struct {",
          "4861:  _ struct{} `type:\"structure\"`",
          "4864:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\"`",
          "4867:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "4871:  FailOnFirstDestinationError *bool `locationName:\"failOnFirstDestinationError\" type:\"boolean\"`",
          "4872: }",
          "4875: func (s ErrorHandlingConfig) String() string {",
          "4876:  return awsutil.Prettify(s)",
          "4877: }",
          "4880: func (s ErrorHandlingConfig) GoString() string {",
          "4881:  return s.String()",
          "4882: }",
          "4885: func (s *ErrorHandlingConfig) Validate() error {",
          "4886:  invalidParams := request.ErrInvalidParams{Context: \"ErrorHandlingConfig\"}",
          "4887:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "4888:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "4889:  }",
          "4891:  if invalidParams.Len() > 0 {",
          "4892:   return invalidParams",
          "4893:  }",
          "4894:  return nil",
          "4895: }",
          "4898: func (s *ErrorHandlingConfig) SetBucketName(v string) *ErrorHandlingConfig {",
          "4899:  s.BucketName = &v",
          "4900:  return s",
          "4901: }",
          "4904: func (s *ErrorHandlingConfig) SetBucketPrefix(v string) *ErrorHandlingConfig {",
          "4905:  s.BucketPrefix = &v",
          "4906:  return s",
          "4907: }",
          "4910: func (s *ErrorHandlingConfig) SetFailOnFirstDestinationError(v bool) *ErrorHandlingConfig {",
          "4911:  s.FailOnFirstDestinationError = &v",
          "4912:  return s",
          "4913: }",
          "4917: type ErrorInfo struct {",
          "4918:  _ struct{} `type:\"structure\"`",
          "4921:  ExecutionMessage *string `locationName:\"executionMessage\" type:\"string\"`",
          "4924:  PutFailuresCount *int64 `locationName:\"putFailuresCount\" type:\"long\"`",
          "4925: }",
          "4928: func (s ErrorInfo) String() string {",
          "4929:  return awsutil.Prettify(s)",
          "4930: }",
          "4933: func (s ErrorInfo) GoString() string {",
          "4934:  return s.String()",
          "4935: }",
          "4938: func (s *ErrorInfo) SetExecutionMessage(v string) *ErrorInfo {",
          "4939:  s.ExecutionMessage = &v",
          "4940:  return s",
          "4941: }",
          "4944: func (s *ErrorInfo) SetPutFailuresCount(v int64) *ErrorInfo {",
          "4945:  s.PutFailuresCount = &v",
          "4946:  return s",
          "4947: }",
          "4951: type EventBridgeDestinationProperties struct {",
          "4952:  _ struct{} `type:\"structure\"`",
          "4959:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "4964:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "4965: }",
          "4968: func (s EventBridgeDestinationProperties) String() string {",
          "4969:  return awsutil.Prettify(s)",
          "4970: }",
          "4973: func (s EventBridgeDestinationProperties) GoString() string {",
          "4974:  return s.String()",
          "4975: }",
          "4978: func (s *EventBridgeDestinationProperties) Validate() error {",
          "4979:  invalidParams := request.ErrInvalidParams{Context: \"EventBridgeDestinationProperties\"}",
          "4980:  if s.Object == nil {",
          "4981:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "4982:  }",
          "4983:  if s.ErrorHandlingConfig != nil {",
          "4984:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "4985:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "4986:   }",
          "4987:  }",
          "4989:  if invalidParams.Len() > 0 {",
          "4990:   return invalidParams",
          "4991:  }",
          "4992:  return nil",
          "4993: }",
          "4996: func (s *EventBridgeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *EventBridgeDestinationProperties {",
          "4997:  s.ErrorHandlingConfig = v",
          "4998:  return s",
          "4999: }",
          "5002: func (s *EventBridgeDestinationProperties) SetObject(v string) *EventBridgeDestinationProperties {",
          "5003:  s.Object = &v",
          "5004:  return s",
          "5005: }",
          "5008: type EventBridgeMetadata struct {",
          "5009:  _ struct{} `type:\"structure\"`",
          "5010: }",
          "5013: func (s EventBridgeMetadata) String() string {",
          "5014:  return awsutil.Prettify(s)",
          "5015: }",
          "5018: func (s EventBridgeMetadata) GoString() string {",
          "5019:  return s.String()",
          "5020: }",
          "5024: type ExecutionDetails struct {",
          "5025:  _ struct{} `type:\"structure\"`",
          "5028:  MostRecentExecutionMessage *string `locationName:\"mostRecentExecutionMessage\" type:\"string\"`",
          "5031:  MostRecentExecutionStatus *string `locationName:\"mostRecentExecutionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5034:  MostRecentExecutionTime *time.Time `locationName:\"mostRecentExecutionTime\" type:\"timestamp\"`",
          "5035: }",
          "5038: func (s ExecutionDetails) String() string {",
          "5039:  return awsutil.Prettify(s)",
          "5040: }",
          "5043: func (s ExecutionDetails) GoString() string {",
          "5044:  return s.String()",
          "5045: }",
          "5048: func (s *ExecutionDetails) SetMostRecentExecutionMessage(v string) *ExecutionDetails {",
          "5049:  s.MostRecentExecutionMessage = &v",
          "5050:  return s",
          "5051: }",
          "5054: func (s *ExecutionDetails) SetMostRecentExecutionStatus(v string) *ExecutionDetails {",
          "5055:  s.MostRecentExecutionStatus = &v",
          "5056:  return s",
          "5057: }",
          "5060: func (s *ExecutionDetails) SetMostRecentExecutionTime(v time.Time) *ExecutionDetails {",
          "5061:  s.MostRecentExecutionTime = &v",
          "5062:  return s",
          "5063: }",
          "5066: type ExecutionRecord struct {",
          "5067:  _ struct{} `type:\"structure\"`",
          "5070:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "5073:  ExecutionResult *ExecutionResult `locationName:\"executionResult\" type:\"structure\"`",
          "5077:  ExecutionStatus *string `locationName:\"executionStatus\" type:\"string\" enum:\"ExecutionStatus\"`",
          "5080:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5083:  StartedAt *time.Time `locationName:\"startedAt\" type:\"timestamp\"`",
          "5084: }",
          "5087: func (s ExecutionRecord) String() string {",
          "5088:  return awsutil.Prettify(s)",
          "5089: }",
          "5092: func (s ExecutionRecord) GoString() string {",
          "5093:  return s.String()",
          "5094: }",
          "5097: func (s *ExecutionRecord) SetExecutionId(v string) *ExecutionRecord {",
          "5098:  s.ExecutionId = &v",
          "5099:  return s",
          "5100: }",
          "5103: func (s *ExecutionRecord) SetExecutionResult(v *ExecutionResult) *ExecutionRecord {",
          "5104:  s.ExecutionResult = v",
          "5105:  return s",
          "5106: }",
          "5109: func (s *ExecutionRecord) SetExecutionStatus(v string) *ExecutionRecord {",
          "5110:  s.ExecutionStatus = &v",
          "5111:  return s",
          "5112: }",
          "5115: func (s *ExecutionRecord) SetLastUpdatedAt(v time.Time) *ExecutionRecord {",
          "5116:  s.LastUpdatedAt = &v",
          "5117:  return s",
          "5118: }",
          "5121: func (s *ExecutionRecord) SetStartedAt(v time.Time) *ExecutionRecord {",
          "5122:  s.StartedAt = &v",
          "5123:  return s",
          "5124: }",
          "5127: type ExecutionResult struct {",
          "5128:  _ struct{} `type:\"structure\"`",
          "5131:  BytesProcessed *int64 `locationName:\"bytesProcessed\" type:\"long\"`",
          "5134:  BytesWritten *int64 `locationName:\"bytesWritten\" type:\"long\"`",
          "5137:  ErrorInfo *ErrorInfo `locationName:\"errorInfo\" type:\"structure\"`",
          "5140:  RecordsProcessed *int64 `locationName:\"recordsProcessed\" type:\"long\"`",
          "5141: }",
          "5144: func (s ExecutionResult) String() string {",
          "5145:  return awsutil.Prettify(s)",
          "5146: }",
          "5149: func (s ExecutionResult) GoString() string {",
          "5150:  return s.String()",
          "5151: }",
          "5154: func (s *ExecutionResult) SetBytesProcessed(v int64) *ExecutionResult {",
          "5155:  s.BytesProcessed = &v",
          "5156:  return s",
          "5157: }",
          "5160: func (s *ExecutionResult) SetBytesWritten(v int64) *ExecutionResult {",
          "5161:  s.BytesWritten = &v",
          "5162:  return s",
          "5163: }",
          "5166: func (s *ExecutionResult) SetErrorInfo(v *ErrorInfo) *ExecutionResult {",
          "5167:  s.ErrorInfo = v",
          "5168:  return s",
          "5169: }",
          "5172: func (s *ExecutionResult) SetRecordsProcessed(v int64) *ExecutionResult {",
          "5173:  s.RecordsProcessed = &v",
          "5174:  return s",
          "5175: }",
          "5179: type FieldTypeDetails struct {",
          "5180:  _ struct{} `type:\"structure\"`",
          "5185:  FieldType *string `locationName:\"fieldType\" type:\"string\" required:\"true\"`",
          "5190:  FilterOperators []*string `locationName:\"filterOperators\" type:\"list\" required:\"true\"`",
          "5194:  SupportedValues []*string `locationName:\"supportedValues\" type:\"list\"`",
          "5195: }",
          "5198: func (s FieldTypeDetails) String() string {",
          "5199:  return awsutil.Prettify(s)",
          "5200: }",
          "5203: func (s FieldTypeDetails) GoString() string {",
          "5204:  return s.String()",
          "5205: }",
          "5208: func (s *FieldTypeDetails) SetFieldType(v string) *FieldTypeDetails {",
          "5209:  s.FieldType = &v",
          "5210:  return s",
          "5211: }",
          "5214: func (s *FieldTypeDetails) SetFilterOperators(v []*string) *FieldTypeDetails {",
          "5215:  s.FilterOperators = v",
          "5216:  return s",
          "5217: }",
          "5220: func (s *FieldTypeDetails) SetSupportedValues(v []*string) *FieldTypeDetails {",
          "5221:  s.SupportedValues = v",
          "5222:  return s",
          "5223: }",
          "5227: type FlowDefinition struct {",
          "5228:  _ struct{} `type:\"structure\"`",
          "5231:  CreatedAt *time.Time `locationName:\"createdAt\" type:\"timestamp\"`",
          "5234:  CreatedBy *string `locationName:\"createdBy\" type:\"string\"`",
          "5237:  Description *string `locationName:\"description\" type:\"string\"`",
          "5241:  DestinationConnectorType *string `locationName:\"destinationConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5244:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "5248:  FlowName *string `locationName:\"flowName\" type:\"string\"`",
          "5251:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "5254:  LastRunExecutionDetails *ExecutionDetails `locationName:\"lastRunExecutionDetails\" type:\"structure\"`",
          "5257:  LastUpdatedAt *time.Time `locationName:\"lastUpdatedAt\" type:\"timestamp\"`",
          "5260:  LastUpdatedBy *string `locationName:\"lastUpdatedBy\" type:\"string\"`",
          "5264:  SourceConnectorType *string `locationName:\"sourceConnectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5267:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5270:  TriggerType *string `locationName:\"triggerType\" type:\"string\" enum:\"TriggerType\"`",
          "5271: }",
          "5274: func (s FlowDefinition) String() string {",
          "5275:  return awsutil.Prettify(s)",
          "5276: }",
          "5279: func (s FlowDefinition) GoString() string {",
          "5280:  return s.String()",
          "5281: }",
          "5284: func (s *FlowDefinition) SetCreatedAt(v time.Time) *FlowDefinition {",
          "5285:  s.CreatedAt = &v",
          "5286:  return s",
          "5287: }",
          "5290: func (s *FlowDefinition) SetCreatedBy(v string) *FlowDefinition {",
          "5291:  s.CreatedBy = &v",
          "5292:  return s",
          "5293: }",
          "5296: func (s *FlowDefinition) SetDescription(v string) *FlowDefinition {",
          "5297:  s.Description = &v",
          "5298:  return s",
          "5299: }",
          "5302: func (s *FlowDefinition) SetDestinationConnectorType(v string) *FlowDefinition {",
          "5303:  s.DestinationConnectorType = &v",
          "5304:  return s",
          "5305: }",
          "5308: func (s *FlowDefinition) SetFlowArn(v string) *FlowDefinition {",
          "5309:  s.FlowArn = &v",
          "5310:  return s",
          "5311: }",
          "5314: func (s *FlowDefinition) SetFlowName(v string) *FlowDefinition {",
          "5315:  s.FlowName = &v",
          "5316:  return s",
          "5317: }",
          "5320: func (s *FlowDefinition) SetFlowStatus(v string) *FlowDefinition {",
          "5321:  s.FlowStatus = &v",
          "5322:  return s",
          "5323: }",
          "5326: func (s *FlowDefinition) SetLastRunExecutionDetails(v *ExecutionDetails) *FlowDefinition {",
          "5327:  s.LastRunExecutionDetails = v",
          "5328:  return s",
          "5329: }",
          "5332: func (s *FlowDefinition) SetLastUpdatedAt(v time.Time) *FlowDefinition {",
          "5333:  s.LastUpdatedAt = &v",
          "5334:  return s",
          "5335: }",
          "5338: func (s *FlowDefinition) SetLastUpdatedBy(v string) *FlowDefinition {",
          "5339:  s.LastUpdatedBy = &v",
          "5340:  return s",
          "5341: }",
          "5344: func (s *FlowDefinition) SetSourceConnectorType(v string) *FlowDefinition {",
          "5345:  s.SourceConnectorType = &v",
          "5346:  return s",
          "5347: }",
          "5350: func (s *FlowDefinition) SetTags(v map[string]*string) *FlowDefinition {",
          "5351:  s.Tags = v",
          "5352:  return s",
          "5353: }",
          "5356: func (s *FlowDefinition) SetTriggerType(v string) *FlowDefinition {",
          "5357:  s.TriggerType = &v",
          "5358:  return s",
          "5359: }",
          "5362: type GoogleAnalyticsConnectorProfileCredentials struct {",
          "5363:  _ struct{} `type:\"structure\"`",
          "5366:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5371:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5377:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5381:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5385:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "5386: }",
          "5389: func (s GoogleAnalyticsConnectorProfileCredentials) String() string {",
          "5390:  return awsutil.Prettify(s)",
          "5391: }",
          "5394: func (s GoogleAnalyticsConnectorProfileCredentials) GoString() string {",
          "5395:  return s.String()",
          "5396: }",
          "5399: func (s *GoogleAnalyticsConnectorProfileCredentials) Validate() error {",
          "5400:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsConnectorProfileCredentials\"}",
          "5401:  if s.ClientId == nil {",
          "5402:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "5403:  }",
          "5404:  if s.ClientSecret == nil {",
          "5405:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "5406:  }",
          "5408:  if invalidParams.Len() > 0 {",
          "5409:   return invalidParams",
          "5410:  }",
          "5411:  return nil",
          "5412: }",
          "5415: func (s *GoogleAnalyticsConnectorProfileCredentials) SetAccessToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5416:  s.AccessToken = &v",
          "5417:  return s",
          "5418: }",
          "5421: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientId(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5422:  s.ClientId = &v",
          "5423:  return s",
          "5424: }",
          "5427: func (s *GoogleAnalyticsConnectorProfileCredentials) SetClientSecret(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5428:  s.ClientSecret = &v",
          "5429:  return s",
          "5430: }",
          "5433: func (s *GoogleAnalyticsConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *GoogleAnalyticsConnectorProfileCredentials {",
          "5434:  s.OAuthRequest = v",
          "5435:  return s",
          "5436: }",
          "5439: func (s *GoogleAnalyticsConnectorProfileCredentials) SetRefreshToken(v string) *GoogleAnalyticsConnectorProfileCredentials {",
          "5440:  s.RefreshToken = &v",
          "5441:  return s",
          "5442: }",
          "5445: type GoogleAnalyticsConnectorProfileProperties struct {",
          "5446:  _ struct{} `type:\"structure\"`",
          "5447: }",
          "5450: func (s GoogleAnalyticsConnectorProfileProperties) String() string {",
          "5451:  return awsutil.Prettify(s)",
          "5452: }",
          "5455: func (s GoogleAnalyticsConnectorProfileProperties) GoString() string {",
          "5456:  return s.String()",
          "5457: }",
          "5460: type GoogleAnalyticsMetadata struct {",
          "5461:  _ struct{} `type:\"structure\"`",
          "5464:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "5465: }",
          "5468: func (s GoogleAnalyticsMetadata) String() string {",
          "5469:  return awsutil.Prettify(s)",
          "5470: }",
          "5473: func (s GoogleAnalyticsMetadata) GoString() string {",
          "5474:  return s.String()",
          "5475: }",
          "5478: func (s *GoogleAnalyticsMetadata) SetOAuthScopes(v []*string) *GoogleAnalyticsMetadata {",
          "5479:  s.OAuthScopes = v",
          "5480:  return s",
          "5481: }",
          "5485: type GoogleAnalyticsSourceProperties struct {",
          "5486:  _ struct{} `type:\"structure\"`",
          "5491:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5492: }",
          "5495: func (s GoogleAnalyticsSourceProperties) String() string {",
          "5496:  return awsutil.Prettify(s)",
          "5497: }",
          "5500: func (s GoogleAnalyticsSourceProperties) GoString() string {",
          "5501:  return s.String()",
          "5502: }",
          "5505: func (s *GoogleAnalyticsSourceProperties) Validate() error {",
          "5506:  invalidParams := request.ErrInvalidParams{Context: \"GoogleAnalyticsSourceProperties\"}",
          "5507:  if s.Object == nil {",
          "5508:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5509:  }",
          "5511:  if invalidParams.Len() > 0 {",
          "5512:   return invalidParams",
          "5513:  }",
          "5514:  return nil",
          "5515: }",
          "5518: func (s *GoogleAnalyticsSourceProperties) SetObject(v string) *GoogleAnalyticsSourceProperties {",
          "5519:  s.Object = &v",
          "5520:  return s",
          "5521: }",
          "5524: type InforNexusConnectorProfileCredentials struct {",
          "5525:  _ struct{} `type:\"structure\"`",
          "5530:  AccessKeyId *string `locationName:\"accessKeyId\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5535:  Datakey *string `locationName:\"datakey\" type:\"string\" required:\"true\"`",
          "5540:  SecretAccessKey *string `locationName:\"secretAccessKey\" type:\"string\" required:\"true\"`",
          "5545:  UserId *string `locationName:\"userId\" type:\"string\" required:\"true\"`",
          "5546: }",
          "5549: func (s InforNexusConnectorProfileCredentials) String() string {",
          "5550:  return awsutil.Prettify(s)",
          "5551: }",
          "5554: func (s InforNexusConnectorProfileCredentials) GoString() string {",
          "5555:  return s.String()",
          "5556: }",
          "5559: func (s *InforNexusConnectorProfileCredentials) Validate() error {",
          "5560:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileCredentials\"}",
          "5561:  if s.AccessKeyId == nil {",
          "5562:   invalidParams.Add(request.NewErrParamRequired(\"AccessKeyId\"))",
          "5563:  }",
          "5564:  if s.Datakey == nil {",
          "5565:   invalidParams.Add(request.NewErrParamRequired(\"Datakey\"))",
          "5566:  }",
          "5567:  if s.SecretAccessKey == nil {",
          "5568:   invalidParams.Add(request.NewErrParamRequired(\"SecretAccessKey\"))",
          "5569:  }",
          "5570:  if s.UserId == nil {",
          "5571:   invalidParams.Add(request.NewErrParamRequired(\"UserId\"))",
          "5572:  }",
          "5574:  if invalidParams.Len() > 0 {",
          "5575:   return invalidParams",
          "5576:  }",
          "5577:  return nil",
          "5578: }",
          "5581: func (s *InforNexusConnectorProfileCredentials) SetAccessKeyId(v string) *InforNexusConnectorProfileCredentials {",
          "5582:  s.AccessKeyId = &v",
          "5583:  return s",
          "5584: }",
          "5587: func (s *InforNexusConnectorProfileCredentials) SetDatakey(v string) *InforNexusConnectorProfileCredentials {",
          "5588:  s.Datakey = &v",
          "5589:  return s",
          "5590: }",
          "5593: func (s *InforNexusConnectorProfileCredentials) SetSecretAccessKey(v string) *InforNexusConnectorProfileCredentials {",
          "5594:  s.SecretAccessKey = &v",
          "5595:  return s",
          "5596: }",
          "5599: func (s *InforNexusConnectorProfileCredentials) SetUserId(v string) *InforNexusConnectorProfileCredentials {",
          "5600:  s.UserId = &v",
          "5601:  return s",
          "5602: }",
          "5605: type InforNexusConnectorProfileProperties struct {",
          "5606:  _ struct{} `type:\"structure\"`",
          "5611:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "5612: }",
          "5615: func (s InforNexusConnectorProfileProperties) String() string {",
          "5616:  return awsutil.Prettify(s)",
          "5617: }",
          "5620: func (s InforNexusConnectorProfileProperties) GoString() string {",
          "5621:  return s.String()",
          "5622: }",
          "5625: func (s *InforNexusConnectorProfileProperties) Validate() error {",
          "5626:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusConnectorProfileProperties\"}",
          "5627:  if s.InstanceUrl == nil {",
          "5628:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "5629:  }",
          "5631:  if invalidParams.Len() > 0 {",
          "5632:   return invalidParams",
          "5633:  }",
          "5634:  return nil",
          "5635: }",
          "5638: func (s *InforNexusConnectorProfileProperties) SetInstanceUrl(v string) *InforNexusConnectorProfileProperties {",
          "5639:  s.InstanceUrl = &v",
          "5640:  return s",
          "5641: }",
          "5644: type InforNexusMetadata struct {",
          "5645:  _ struct{} `type:\"structure\"`",
          "5646: }",
          "5649: func (s InforNexusMetadata) String() string {",
          "5650:  return awsutil.Prettify(s)",
          "5651: }",
          "5654: func (s InforNexusMetadata) GoString() string {",
          "5655:  return s.String()",
          "5656: }",
          "5659: type InforNexusSourceProperties struct {",
          "5660:  _ struct{} `type:\"structure\"`",
          "5665:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "5666: }",
          "5669: func (s InforNexusSourceProperties) String() string {",
          "5670:  return awsutil.Prettify(s)",
          "5671: }",
          "5674: func (s InforNexusSourceProperties) GoString() string {",
          "5675:  return s.String()",
          "5676: }",
          "5679: func (s *InforNexusSourceProperties) Validate() error {",
          "5680:  invalidParams := request.ErrInvalidParams{Context: \"InforNexusSourceProperties\"}",
          "5681:  if s.Object == nil {",
          "5682:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "5683:  }",
          "5685:  if invalidParams.Len() > 0 {",
          "5686:   return invalidParams",
          "5687:  }",
          "5688:  return nil",
          "5689: }",
          "5692: func (s *InforNexusSourceProperties) SetObject(v string) *InforNexusSourceProperties {",
          "5693:  s.Object = &v",
          "5694:  return s",
          "5695: }",
          "5699: type InternalServerException struct {",
          "5700:  _            struct{}                  `type:\"structure\"`",
          "5701:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5703:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5704: }",
          "5707: func (s InternalServerException) String() string {",
          "5708:  return awsutil.Prettify(s)",
          "5709: }",
          "5712: func (s InternalServerException) GoString() string {",
          "5713:  return s.String()",
          "5714: }",
          "5716: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "5717:  return &InternalServerException{",
          "5718:   RespMetadata: v,",
          "5719:  }",
          "5720: }",
          "5723: func (s *InternalServerException) Code() string {",
          "5724:  return \"InternalServerException\"",
          "5725: }",
          "5728: func (s *InternalServerException) Message() string {",
          "5729:  if s.Message_ != nil {",
          "5730:   return *s.Message_",
          "5731:  }",
          "5732:  return \"\"",
          "5733: }",
          "5736: func (s *InternalServerException) OrigErr() error {",
          "5737:  return nil",
          "5738: }",
          "5740: func (s *InternalServerException) Error() string {",
          "5741:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5742: }",
          "5745: func (s *InternalServerException) StatusCode() int {",
          "5746:  return s.RespMetadata.StatusCode",
          "5747: }",
          "5750: func (s *InternalServerException) RequestID() string {",
          "5751:  return s.RespMetadata.RequestID",
          "5752: }",
          "5754: type ListConnectorEntitiesInput struct {",
          "5755:  _ struct{} `type:\"structure\"`",
          "5759:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "5762:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" enum:\"ConnectorType\"`",
          "5770:  EntitiesPath *string `locationName:\"entitiesPath\" type:\"string\"`",
          "5771: }",
          "5774: func (s ListConnectorEntitiesInput) String() string {",
          "5775:  return awsutil.Prettify(s)",
          "5776: }",
          "5779: func (s ListConnectorEntitiesInput) GoString() string {",
          "5780:  return s.String()",
          "5781: }",
          "5784: func (s *ListConnectorEntitiesInput) SetConnectorProfileName(v string) *ListConnectorEntitiesInput {",
          "5785:  s.ConnectorProfileName = &v",
          "5786:  return s",
          "5787: }",
          "5790: func (s *ListConnectorEntitiesInput) SetConnectorType(v string) *ListConnectorEntitiesInput {",
          "5791:  s.ConnectorType = &v",
          "5792:  return s",
          "5793: }",
          "5796: func (s *ListConnectorEntitiesInput) SetEntitiesPath(v string) *ListConnectorEntitiesInput {",
          "5797:  s.EntitiesPath = &v",
          "5798:  return s",
          "5799: }",
          "5801: type ListConnectorEntitiesOutput struct {",
          "5802:  _ struct{} `type:\"structure\"`",
          "5809:  ConnectorEntityMap map[string][]*ConnectorEntity `locationName:\"connectorEntityMap\" type:\"map\" required:\"true\"`",
          "5810: }",
          "5813: func (s ListConnectorEntitiesOutput) String() string {",
          "5814:  return awsutil.Prettify(s)",
          "5815: }",
          "5818: func (s ListConnectorEntitiesOutput) GoString() string {",
          "5819:  return s.String()",
          "5820: }",
          "5823: func (s *ListConnectorEntitiesOutput) SetConnectorEntityMap(v map[string][]*ConnectorEntity) *ListConnectorEntitiesOutput {",
          "5824:  s.ConnectorEntityMap = v",
          "5825:  return s",
          "5826: }",
          "5828: type ListFlowsInput struct {",
          "5829:  _ struct{} `type:\"structure\"`",
          "5833:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5836:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5837: }",
          "5840: func (s ListFlowsInput) String() string {",
          "5841:  return awsutil.Prettify(s)",
          "5842: }",
          "5845: func (s ListFlowsInput) GoString() string {",
          "5846:  return s.String()",
          "5847: }",
          "5850: func (s *ListFlowsInput) Validate() error {",
          "5851:  invalidParams := request.ErrInvalidParams{Context: \"ListFlowsInput\"}",
          "5852:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5853:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5854:  }",
          "5856:  if invalidParams.Len() > 0 {",
          "5857:   return invalidParams",
          "5858:  }",
          "5859:  return nil",
          "5860: }",
          "5863: func (s *ListFlowsInput) SetMaxResults(v int64) *ListFlowsInput {",
          "5864:  s.MaxResults = &v",
          "5865:  return s",
          "5866: }",
          "5869: func (s *ListFlowsInput) SetNextToken(v string) *ListFlowsInput {",
          "5870:  s.NextToken = &v",
          "5871:  return s",
          "5872: }",
          "5874: type ListFlowsOutput struct {",
          "5875:  _ struct{} `type:\"structure\"`",
          "5878:  Flows []*FlowDefinition `locationName:\"flows\" type:\"list\"`",
          "5881:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "5882: }",
          "5885: func (s ListFlowsOutput) String() string {",
          "5886:  return awsutil.Prettify(s)",
          "5887: }",
          "5890: func (s ListFlowsOutput) GoString() string {",
          "5891:  return s.String()",
          "5892: }",
          "5895: func (s *ListFlowsOutput) SetFlows(v []*FlowDefinition) *ListFlowsOutput {",
          "5896:  s.Flows = v",
          "5897:  return s",
          "5898: }",
          "5901: func (s *ListFlowsOutput) SetNextToken(v string) *ListFlowsOutput {",
          "5902:  s.NextToken = &v",
          "5903:  return s",
          "5904: }",
          "5906: type ListTagsForResourceInput struct {",
          "5907:  _ struct{} `type:\"structure\"`",
          "5912:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "5913: }",
          "5916: func (s ListTagsForResourceInput) String() string {",
          "5917:  return awsutil.Prettify(s)",
          "5918: }",
          "5921: func (s ListTagsForResourceInput) GoString() string {",
          "5922:  return s.String()",
          "5923: }",
          "5926: func (s *ListTagsForResourceInput) Validate() error {",
          "5927:  invalidParams := request.ErrInvalidParams{Context: \"ListTagsForResourceInput\"}",
          "5928:  if s.ResourceArn == nil {",
          "5929:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "5930:  }",
          "5931:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "5932:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "5933:  }",
          "5935:  if invalidParams.Len() > 0 {",
          "5936:   return invalidParams",
          "5937:  }",
          "5938:  return nil",
          "5939: }",
          "5942: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "5943:  s.ResourceArn = &v",
          "5944:  return s",
          "5945: }",
          "5947: type ListTagsForResourceOutput struct {",
          "5948:  _ struct{} `type:\"structure\"`",
          "5951:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "5952: }",
          "5955: func (s ListTagsForResourceOutput) String() string {",
          "5956:  return awsutil.Prettify(s)",
          "5957: }",
          "5960: func (s ListTagsForResourceOutput) GoString() string {",
          "5961:  return s.String()",
          "5962: }",
          "5965: func (s *ListTagsForResourceOutput) SetTags(v map[string]*string) *ListTagsForResourceOutput {",
          "5966:  s.Tags = v",
          "5967:  return s",
          "5968: }",
          "5971: type MarketoConnectorProfileCredentials struct {",
          "5972:  _ struct{} `type:\"structure\"`",
          "5975:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "5980:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "5986:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "5990:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "5991: }",
          "5994: func (s MarketoConnectorProfileCredentials) String() string {",
          "5995:  return awsutil.Prettify(s)",
          "5996: }",
          "5999: func (s MarketoConnectorProfileCredentials) GoString() string {",
          "6000:  return s.String()",
          "6001: }",
          "6004: func (s *MarketoConnectorProfileCredentials) Validate() error {",
          "6005:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileCredentials\"}",
          "6006:  if s.ClientId == nil {",
          "6007:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "6008:  }",
          "6009:  if s.ClientSecret == nil {",
          "6010:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "6011:  }",
          "6013:  if invalidParams.Len() > 0 {",
          "6014:   return invalidParams",
          "6015:  }",
          "6016:  return nil",
          "6017: }",
          "6020: func (s *MarketoConnectorProfileCredentials) SetAccessToken(v string) *MarketoConnectorProfileCredentials {",
          "6021:  s.AccessToken = &v",
          "6022:  return s",
          "6023: }",
          "6026: func (s *MarketoConnectorProfileCredentials) SetClientId(v string) *MarketoConnectorProfileCredentials {",
          "6027:  s.ClientId = &v",
          "6028:  return s",
          "6029: }",
          "6032: func (s *MarketoConnectorProfileCredentials) SetClientSecret(v string) *MarketoConnectorProfileCredentials {",
          "6033:  s.ClientSecret = &v",
          "6034:  return s",
          "6035: }",
          "6038: func (s *MarketoConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *MarketoConnectorProfileCredentials {",
          "6039:  s.OAuthRequest = v",
          "6040:  return s",
          "6041: }",
          "6044: type MarketoConnectorProfileProperties struct {",
          "6045:  _ struct{} `type:\"structure\"`",
          "6050:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6051: }",
          "6054: func (s MarketoConnectorProfileProperties) String() string {",
          "6055:  return awsutil.Prettify(s)",
          "6056: }",
          "6059: func (s MarketoConnectorProfileProperties) GoString() string {",
          "6060:  return s.String()",
          "6061: }",
          "6064: func (s *MarketoConnectorProfileProperties) Validate() error {",
          "6065:  invalidParams := request.ErrInvalidParams{Context: \"MarketoConnectorProfileProperties\"}",
          "6066:  if s.InstanceUrl == nil {",
          "6067:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "6068:  }",
          "6070:  if invalidParams.Len() > 0 {",
          "6071:   return invalidParams",
          "6072:  }",
          "6073:  return nil",
          "6074: }",
          "6077: func (s *MarketoConnectorProfileProperties) SetInstanceUrl(v string) *MarketoConnectorProfileProperties {",
          "6078:  s.InstanceUrl = &v",
          "6079:  return s",
          "6080: }",
          "6083: type MarketoMetadata struct {",
          "6084:  _ struct{} `type:\"structure\"`",
          "6085: }",
          "6088: func (s MarketoMetadata) String() string {",
          "6089:  return awsutil.Prettify(s)",
          "6090: }",
          "6093: func (s MarketoMetadata) GoString() string {",
          "6094:  return s.String()",
          "6095: }",
          "6098: type MarketoSourceProperties struct {",
          "6099:  _ struct{} `type:\"structure\"`",
          "6104:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6105: }",
          "6108: func (s MarketoSourceProperties) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s MarketoSourceProperties) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *MarketoSourceProperties) Validate() error {",
          "6119:  invalidParams := request.ErrInvalidParams{Context: \"MarketoSourceProperties\"}",
          "6120:  if s.Object == nil {",
          "6121:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6122:  }",
          "6124:  if invalidParams.Len() > 0 {",
          "6125:   return invalidParams",
          "6126:  }",
          "6127:  return nil",
          "6128: }",
          "6131: func (s *MarketoSourceProperties) SetObject(v string) *MarketoSourceProperties {",
          "6132:  s.Object = &v",
          "6133:  return s",
          "6134: }",
          "6139: type PrefixConfig struct {",
          "6140:  _ struct{} `type:\"structure\"`",
          "6144:  PrefixFormat *string `locationName:\"prefixFormat\" type:\"string\" enum:\"PrefixFormat\"`",
          "6147:  PrefixType *string `locationName:\"prefixType\" type:\"string\" enum:\"PrefixType\"`",
          "6148: }",
          "6151: func (s PrefixConfig) String() string {",
          "6152:  return awsutil.Prettify(s)",
          "6153: }",
          "6156: func (s PrefixConfig) GoString() string {",
          "6157:  return s.String()",
          "6158: }",
          "6161: func (s *PrefixConfig) SetPrefixFormat(v string) *PrefixConfig {",
          "6162:  s.PrefixFormat = &v",
          "6163:  return s",
          "6164: }",
          "6167: func (s *PrefixConfig) SetPrefixType(v string) *PrefixConfig {",
          "6168:  s.PrefixType = &v",
          "6169:  return s",
          "6170: }",
          "6173: type RedshiftConnectorProfileCredentials struct {",
          "6174:  _ struct{} `type:\"structure\"`",
          "6179:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6184:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6185: }",
          "6188: func (s RedshiftConnectorProfileCredentials) String() string {",
          "6189:  return awsutil.Prettify(s)",
          "6190: }",
          "6193: func (s RedshiftConnectorProfileCredentials) GoString() string {",
          "6194:  return s.String()",
          "6195: }",
          "6198: func (s *RedshiftConnectorProfileCredentials) Validate() error {",
          "6199:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileCredentials\"}",
          "6200:  if s.Password == nil {",
          "6201:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6202:  }",
          "6203:  if s.Username == nil {",
          "6204:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6205:  }",
          "6207:  if invalidParams.Len() > 0 {",
          "6208:   return invalidParams",
          "6209:  }",
          "6210:  return nil",
          "6211: }",
          "6214: func (s *RedshiftConnectorProfileCredentials) SetPassword(v string) *RedshiftConnectorProfileCredentials {",
          "6215:  s.Password = &v",
          "6216:  return s",
          "6217: }",
          "6220: func (s *RedshiftConnectorProfileCredentials) SetUsername(v string) *RedshiftConnectorProfileCredentials {",
          "6221:  s.Username = &v",
          "6222:  return s",
          "6223: }",
          "6226: type RedshiftConnectorProfileProperties struct {",
          "6227:  _ struct{} `type:\"structure\"`",
          "6232:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6236:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6241:  DatabaseUrl *string `locationName:\"databaseUrl\" type:\"string\" required:\"true\"`",
          "6246:  RoleArn *string `locationName:\"roleArn\" type:\"string\" required:\"true\"`",
          "6247: }",
          "6250: func (s RedshiftConnectorProfileProperties) String() string {",
          "6251:  return awsutil.Prettify(s)",
          "6252: }",
          "6255: func (s RedshiftConnectorProfileProperties) GoString() string {",
          "6256:  return s.String()",
          "6257: }",
          "6260: func (s *RedshiftConnectorProfileProperties) Validate() error {",
          "6261:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftConnectorProfileProperties\"}",
          "6262:  if s.BucketName == nil {",
          "6263:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6264:  }",
          "6265:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6266:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6267:  }",
          "6268:  if s.DatabaseUrl == nil {",
          "6269:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseUrl\"))",
          "6270:  }",
          "6271:  if s.RoleArn == nil {",
          "6272:   invalidParams.Add(request.NewErrParamRequired(\"RoleArn\"))",
          "6273:  }",
          "6275:  if invalidParams.Len() > 0 {",
          "6276:   return invalidParams",
          "6277:  }",
          "6278:  return nil",
          "6279: }",
          "6282: func (s *RedshiftConnectorProfileProperties) SetBucketName(v string) *RedshiftConnectorProfileProperties {",
          "6283:  s.BucketName = &v",
          "6284:  return s",
          "6285: }",
          "6288: func (s *RedshiftConnectorProfileProperties) SetBucketPrefix(v string) *RedshiftConnectorProfileProperties {",
          "6289:  s.BucketPrefix = &v",
          "6290:  return s",
          "6291: }",
          "6294: func (s *RedshiftConnectorProfileProperties) SetDatabaseUrl(v string) *RedshiftConnectorProfileProperties {",
          "6295:  s.DatabaseUrl = &v",
          "6296:  return s",
          "6297: }",
          "6300: func (s *RedshiftConnectorProfileProperties) SetRoleArn(v string) *RedshiftConnectorProfileProperties {",
          "6301:  s.RoleArn = &v",
          "6302:  return s",
          "6303: }",
          "6306: type RedshiftDestinationProperties struct {",
          "6307:  _ struct{} `type:\"structure\"`",
          "6311:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6318:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6324:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6329:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6330: }",
          "6333: func (s RedshiftDestinationProperties) String() string {",
          "6334:  return awsutil.Prettify(s)",
          "6335: }",
          "6338: func (s RedshiftDestinationProperties) GoString() string {",
          "6339:  return s.String()",
          "6340: }",
          "6343: func (s *RedshiftDestinationProperties) Validate() error {",
          "6344:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftDestinationProperties\"}",
          "6345:  if s.IntermediateBucketName == nil {",
          "6346:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "6347:  }",
          "6348:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "6349:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "6350:  }",
          "6351:  if s.Object == nil {",
          "6352:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6353:  }",
          "6354:  if s.ErrorHandlingConfig != nil {",
          "6355:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6356:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6357:   }",
          "6358:  }",
          "6360:  if invalidParams.Len() > 0 {",
          "6361:   return invalidParams",
          "6362:  }",
          "6363:  return nil",
          "6364: }",
          "6367: func (s *RedshiftDestinationProperties) SetBucketPrefix(v string) *RedshiftDestinationProperties {",
          "6368:  s.BucketPrefix = &v",
          "6369:  return s",
          "6370: }",
          "6373: func (s *RedshiftDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *RedshiftDestinationProperties {",
          "6374:  s.ErrorHandlingConfig = v",
          "6375:  return s",
          "6376: }",
          "6379: func (s *RedshiftDestinationProperties) SetIntermediateBucketName(v string) *RedshiftDestinationProperties {",
          "6380:  s.IntermediateBucketName = &v",
          "6381:  return s",
          "6382: }",
          "6385: func (s *RedshiftDestinationProperties) SetObject(v string) *RedshiftDestinationProperties {",
          "6386:  s.Object = &v",
          "6387:  return s",
          "6388: }",
          "6391: type RedshiftMetadata struct {",
          "6392:  _ struct{} `type:\"structure\"`",
          "6393: }",
          "6396: func (s RedshiftMetadata) String() string {",
          "6397:  return awsutil.Prettify(s)",
          "6398: }",
          "6401: func (s RedshiftMetadata) GoString() string {",
          "6402:  return s.String()",
          "6403: }",
          "6407: type ResourceNotFoundException struct {",
          "6408:  _            struct{}                  `type:\"structure\"`",
          "6409:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "6411:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "6412: }",
          "6415: func (s ResourceNotFoundException) String() string {",
          "6416:  return awsutil.Prettify(s)",
          "6417: }",
          "6420: func (s ResourceNotFoundException) GoString() string {",
          "6421:  return s.String()",
          "6422: }",
          "6424: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "6425:  return &ResourceNotFoundException{",
          "6426:   RespMetadata: v,",
          "6427:  }",
          "6428: }",
          "6431: func (s *ResourceNotFoundException) Code() string {",
          "6432:  return \"ResourceNotFoundException\"",
          "6433: }",
          "6436: func (s *ResourceNotFoundException) Message() string {",
          "6437:  if s.Message_ != nil {",
          "6438:   return *s.Message_",
          "6439:  }",
          "6440:  return \"\"",
          "6441: }",
          "6444: func (s *ResourceNotFoundException) OrigErr() error {",
          "6445:  return nil",
          "6446: }",
          "6448: func (s *ResourceNotFoundException) Error() string {",
          "6449:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "6450: }",
          "6453: func (s *ResourceNotFoundException) StatusCode() int {",
          "6454:  return s.RespMetadata.StatusCode",
          "6455: }",
          "6458: func (s *ResourceNotFoundException) RequestID() string {",
          "6459:  return s.RespMetadata.RequestID",
          "6460: }",
          "6463: type S3DestinationProperties struct {",
          "6464:  _ struct{} `type:\"structure\"`",
          "6470:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6474:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6478:  S3OutputFormatConfig *S3OutputFormatConfig `locationName:\"s3OutputFormatConfig\" type:\"structure\"`",
          "6479: }",
          "6482: func (s S3DestinationProperties) String() string {",
          "6483:  return awsutil.Prettify(s)",
          "6484: }",
          "6487: func (s S3DestinationProperties) GoString() string {",
          "6488:  return s.String()",
          "6489: }",
          "6492: func (s *S3DestinationProperties) Validate() error {",
          "6493:  invalidParams := request.ErrInvalidParams{Context: \"S3DestinationProperties\"}",
          "6494:  if s.BucketName == nil {",
          "6495:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6496:  }",
          "6497:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6498:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6499:  }",
          "6501:  if invalidParams.Len() > 0 {",
          "6502:   return invalidParams",
          "6503:  }",
          "6504:  return nil",
          "6505: }",
          "6508: func (s *S3DestinationProperties) SetBucketName(v string) *S3DestinationProperties {",
          "6509:  s.BucketName = &v",
          "6510:  return s",
          "6511: }",
          "6514: func (s *S3DestinationProperties) SetBucketPrefix(v string) *S3DestinationProperties {",
          "6515:  s.BucketPrefix = &v",
          "6516:  return s",
          "6517: }",
          "6520: func (s *S3DestinationProperties) SetS3OutputFormatConfig(v *S3OutputFormatConfig) *S3DestinationProperties {",
          "6521:  s.S3OutputFormatConfig = v",
          "6522:  return s",
          "6523: }",
          "6526: type S3Metadata struct {",
          "6527:  _ struct{} `type:\"structure\"`",
          "6528: }",
          "6531: func (s S3Metadata) String() string {",
          "6532:  return awsutil.Prettify(s)",
          "6533: }",
          "6536: func (s S3Metadata) GoString() string {",
          "6537:  return s.String()",
          "6538: }",
          "6542: type S3OutputFormatConfig struct {",
          "6543:  _ struct{} `type:\"structure\"`",
          "6547:  AggregationConfig *AggregationConfig `locationName:\"aggregationConfig\" type:\"structure\"`",
          "6550:  FileType *string `locationName:\"fileType\" type:\"string\" enum:\"FileType\"`",
          "6555:  PrefixConfig *PrefixConfig `locationName:\"prefixConfig\" type:\"structure\"`",
          "6556: }",
          "6559: func (s S3OutputFormatConfig) String() string {",
          "6560:  return awsutil.Prettify(s)",
          "6561: }",
          "6564: func (s S3OutputFormatConfig) GoString() string {",
          "6565:  return s.String()",
          "6566: }",
          "6569: func (s *S3OutputFormatConfig) SetAggregationConfig(v *AggregationConfig) *S3OutputFormatConfig {",
          "6570:  s.AggregationConfig = v",
          "6571:  return s",
          "6572: }",
          "6575: func (s *S3OutputFormatConfig) SetFileType(v string) *S3OutputFormatConfig {",
          "6576:  s.FileType = &v",
          "6577:  return s",
          "6578: }",
          "6581: func (s *S3OutputFormatConfig) SetPrefixConfig(v *PrefixConfig) *S3OutputFormatConfig {",
          "6582:  s.PrefixConfig = v",
          "6583:  return s",
          "6584: }",
          "6588: type S3SourceProperties struct {",
          "6589:  _ struct{} `type:\"structure\"`",
          "6594:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "6597:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "6598: }",
          "6601: func (s S3SourceProperties) String() string {",
          "6602:  return awsutil.Prettify(s)",
          "6603: }",
          "6606: func (s S3SourceProperties) GoString() string {",
          "6607:  return s.String()",
          "6608: }",
          "6611: func (s *S3SourceProperties) Validate() error {",
          "6612:  invalidParams := request.ErrInvalidParams{Context: \"S3SourceProperties\"}",
          "6613:  if s.BucketName == nil {",
          "6614:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "6615:  }",
          "6616:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "6617:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "6618:  }",
          "6620:  if invalidParams.Len() > 0 {",
          "6621:   return invalidParams",
          "6622:  }",
          "6623:  return nil",
          "6624: }",
          "6627: func (s *S3SourceProperties) SetBucketName(v string) *S3SourceProperties {",
          "6628:  s.BucketName = &v",
          "6629:  return s",
          "6630: }",
          "6633: func (s *S3SourceProperties) SetBucketPrefix(v string) *S3SourceProperties {",
          "6634:  s.BucketPrefix = &v",
          "6635:  return s",
          "6636: }",
          "6639: type SalesforceConnectorProfileCredentials struct {",
          "6640:  _ struct{} `type:\"structure\"`",
          "6643:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "6647:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "6650:  RefreshToken *string `locationName:\"refreshToken\" type:\"string\"`",
          "6651: }",
          "6654: func (s SalesforceConnectorProfileCredentials) String() string {",
          "6655:  return awsutil.Prettify(s)",
          "6656: }",
          "6659: func (s SalesforceConnectorProfileCredentials) GoString() string {",
          "6660:  return s.String()",
          "6661: }",
          "6664: func (s *SalesforceConnectorProfileCredentials) SetAccessToken(v string) *SalesforceConnectorProfileCredentials {",
          "6665:  s.AccessToken = &v",
          "6666:  return s",
          "6667: }",
          "6670: func (s *SalesforceConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SalesforceConnectorProfileCredentials {",
          "6671:  s.OAuthRequest = v",
          "6672:  return s",
          "6673: }",
          "6676: func (s *SalesforceConnectorProfileCredentials) SetRefreshToken(v string) *SalesforceConnectorProfileCredentials {",
          "6677:  s.RefreshToken = &v",
          "6678:  return s",
          "6679: }",
          "6682: type SalesforceConnectorProfileProperties struct {",
          "6683:  _ struct{} `type:\"structure\"`",
          "6686:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\"`",
          "6690:  IsSandboxEnvironment *bool `locationName:\"isSandboxEnvironment\" type:\"boolean\"`",
          "6691: }",
          "6694: func (s SalesforceConnectorProfileProperties) String() string {",
          "6695:  return awsutil.Prettify(s)",
          "6696: }",
          "6699: func (s SalesforceConnectorProfileProperties) GoString() string {",
          "6700:  return s.String()",
          "6701: }",
          "6704: func (s *SalesforceConnectorProfileProperties) SetInstanceUrl(v string) *SalesforceConnectorProfileProperties {",
          "6705:  s.InstanceUrl = &v",
          "6706:  return s",
          "6707: }",
          "6710: func (s *SalesforceConnectorProfileProperties) SetIsSandboxEnvironment(v bool) *SalesforceConnectorProfileProperties {",
          "6711:  s.IsSandboxEnvironment = &v",
          "6712:  return s",
          "6713: }",
          "6716: type SalesforceDestinationProperties struct {",
          "6717:  _ struct{} `type:\"structure\"`",
          "6724:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6729:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6730: }",
          "6733: func (s SalesforceDestinationProperties) String() string {",
          "6734:  return awsutil.Prettify(s)",
          "6735: }",
          "6738: func (s SalesforceDestinationProperties) GoString() string {",
          "6739:  return s.String()",
          "6740: }",
          "6743: func (s *SalesforceDestinationProperties) Validate() error {",
          "6744:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceDestinationProperties\"}",
          "6745:  if s.Object == nil {",
          "6746:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6747:  }",
          "6748:  if s.ErrorHandlingConfig != nil {",
          "6749:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "6750:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "6751:   }",
          "6752:  }",
          "6754:  if invalidParams.Len() > 0 {",
          "6755:   return invalidParams",
          "6756:  }",
          "6757:  return nil",
          "6758: }",
          "6761: func (s *SalesforceDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SalesforceDestinationProperties {",
          "6762:  s.ErrorHandlingConfig = v",
          "6763:  return s",
          "6764: }",
          "6767: func (s *SalesforceDestinationProperties) SetObject(v string) *SalesforceDestinationProperties {",
          "6768:  s.Object = &v",
          "6769:  return s",
          "6770: }",
          "6773: type SalesforceMetadata struct {",
          "6774:  _ struct{} `type:\"structure\"`",
          "6777:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "6778: }",
          "6781: func (s SalesforceMetadata) String() string {",
          "6782:  return awsutil.Prettify(s)",
          "6783: }",
          "6786: func (s SalesforceMetadata) GoString() string {",
          "6787:  return s.String()",
          "6788: }",
          "6791: func (s *SalesforceMetadata) SetOAuthScopes(v []*string) *SalesforceMetadata {",
          "6792:  s.OAuthScopes = v",
          "6793:  return s",
          "6794: }",
          "6797: type SalesforceSourceProperties struct {",
          "6798:  _ struct{} `type:\"structure\"`",
          "6802:  EnableDynamicFieldUpdate *bool `locationName:\"enableDynamicFieldUpdate\" type:\"boolean\"`",
          "6805:  IncludeDeletedRecords *bool `locationName:\"includeDeletedRecords\" type:\"boolean\"`",
          "6810:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6811: }",
          "6814: func (s SalesforceSourceProperties) String() string {",
          "6815:  return awsutil.Prettify(s)",
          "6816: }",
          "6819: func (s SalesforceSourceProperties) GoString() string {",
          "6820:  return s.String()",
          "6821: }",
          "6824: func (s *SalesforceSourceProperties) Validate() error {",
          "6825:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceSourceProperties\"}",
          "6826:  if s.Object == nil {",
          "6827:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "6828:  }",
          "6830:  if invalidParams.Len() > 0 {",
          "6831:   return invalidParams",
          "6832:  }",
          "6833:  return nil",
          "6834: }",
          "6837: func (s *SalesforceSourceProperties) SetEnableDynamicFieldUpdate(v bool) *SalesforceSourceProperties {",
          "6838:  s.EnableDynamicFieldUpdate = &v",
          "6839:  return s",
          "6840: }",
          "6843: func (s *SalesforceSourceProperties) SetIncludeDeletedRecords(v bool) *SalesforceSourceProperties {",
          "6844:  s.IncludeDeletedRecords = &v",
          "6845:  return s",
          "6846: }",
          "6849: func (s *SalesforceSourceProperties) SetObject(v string) *SalesforceSourceProperties {",
          "6850:  s.Object = &v",
          "6851:  return s",
          "6852: }",
          "6857: type ScheduledTriggerProperties struct {",
          "6858:  _ struct{} `type:\"structure\"`",
          "6862:  DataPullMode *string `locationName:\"dataPullMode\" type:\"string\" enum:\"DataPullMode\"`",
          "6865:  ScheduleEndTime *time.Time `locationName:\"scheduleEndTime\" type:\"timestamp\"`",
          "6870:  ScheduleExpression *string `locationName:\"scheduleExpression\" type:\"string\" required:\"true\"`",
          "6873:  ScheduleStartTime *time.Time `locationName:\"scheduleStartTime\" type:\"timestamp\"`",
          "6877:  Timezone *string `locationName:\"timezone\" type:\"string\"`",
          "6878: }",
          "6881: func (s ScheduledTriggerProperties) String() string {",
          "6882:  return awsutil.Prettify(s)",
          "6883: }",
          "6886: func (s ScheduledTriggerProperties) GoString() string {",
          "6887:  return s.String()",
          "6888: }",
          "6891: func (s *ScheduledTriggerProperties) Validate() error {",
          "6892:  invalidParams := request.ErrInvalidParams{Context: \"ScheduledTriggerProperties\"}",
          "6893:  if s.ScheduleExpression == nil {",
          "6894:   invalidParams.Add(request.NewErrParamRequired(\"ScheduleExpression\"))",
          "6895:  }",
          "6897:  if invalidParams.Len() > 0 {",
          "6898:   return invalidParams",
          "6899:  }",
          "6900:  return nil",
          "6901: }",
          "6904: func (s *ScheduledTriggerProperties) SetDataPullMode(v string) *ScheduledTriggerProperties {",
          "6905:  s.DataPullMode = &v",
          "6906:  return s",
          "6907: }",
          "6910: func (s *ScheduledTriggerProperties) SetScheduleEndTime(v time.Time) *ScheduledTriggerProperties {",
          "6911:  s.ScheduleEndTime = &v",
          "6912:  return s",
          "6913: }",
          "6916: func (s *ScheduledTriggerProperties) SetScheduleExpression(v string) *ScheduledTriggerProperties {",
          "6917:  s.ScheduleExpression = &v",
          "6918:  return s",
          "6919: }",
          "6922: func (s *ScheduledTriggerProperties) SetScheduleStartTime(v time.Time) *ScheduledTriggerProperties {",
          "6923:  s.ScheduleStartTime = &v",
          "6924:  return s",
          "6925: }",
          "6928: func (s *ScheduledTriggerProperties) SetTimezone(v string) *ScheduledTriggerProperties {",
          "6929:  s.Timezone = &v",
          "6930:  return s",
          "6931: }",
          "6934: type ServiceNowConnectorProfileCredentials struct {",
          "6935:  _ struct{} `type:\"structure\"`",
          "6940:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "6945:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "6946: }",
          "6949: func (s ServiceNowConnectorProfileCredentials) String() string {",
          "6950:  return awsutil.Prettify(s)",
          "6951: }",
          "6954: func (s ServiceNowConnectorProfileCredentials) GoString() string {",
          "6955:  return s.String()",
          "6956: }",
          "6959: func (s *ServiceNowConnectorProfileCredentials) Validate() error {",
          "6960:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileCredentials\"}",
          "6961:  if s.Password == nil {",
          "6962:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "6963:  }",
          "6964:  if s.Username == nil {",
          "6965:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "6966:  }",
          "6968:  if invalidParams.Len() > 0 {",
          "6969:   return invalidParams",
          "6970:  }",
          "6971:  return nil",
          "6972: }",
          "6975: func (s *ServiceNowConnectorProfileCredentials) SetPassword(v string) *ServiceNowConnectorProfileCredentials {",
          "6976:  s.Password = &v",
          "6977:  return s",
          "6978: }",
          "6981: func (s *ServiceNowConnectorProfileCredentials) SetUsername(v string) *ServiceNowConnectorProfileCredentials {",
          "6982:  s.Username = &v",
          "6983:  return s",
          "6984: }",
          "6987: type ServiceNowConnectorProfileProperties struct {",
          "6988:  _ struct{} `type:\"structure\"`",
          "6993:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "6994: }",
          "6997: func (s ServiceNowConnectorProfileProperties) String() string {",
          "6998:  return awsutil.Prettify(s)",
          "6999: }",
          "7002: func (s ServiceNowConnectorProfileProperties) GoString() string {",
          "7003:  return s.String()",
          "7004: }",
          "7007: func (s *ServiceNowConnectorProfileProperties) Validate() error {",
          "7008:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowConnectorProfileProperties\"}",
          "7009:  if s.InstanceUrl == nil {",
          "7010:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7011:  }",
          "7013:  if invalidParams.Len() > 0 {",
          "7014:   return invalidParams",
          "7015:  }",
          "7016:  return nil",
          "7017: }",
          "7020: func (s *ServiceNowConnectorProfileProperties) SetInstanceUrl(v string) *ServiceNowConnectorProfileProperties {",
          "7021:  s.InstanceUrl = &v",
          "7022:  return s",
          "7023: }",
          "7026: type ServiceNowMetadata struct {",
          "7027:  _ struct{} `type:\"structure\"`",
          "7028: }",
          "7031: func (s ServiceNowMetadata) String() string {",
          "7032:  return awsutil.Prettify(s)",
          "7033: }",
          "7036: func (s ServiceNowMetadata) GoString() string {",
          "7037:  return s.String()",
          "7038: }",
          "7041: type ServiceNowSourceProperties struct {",
          "7042:  _ struct{} `type:\"structure\"`",
          "7047:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7048: }",
          "7051: func (s ServiceNowSourceProperties) String() string {",
          "7052:  return awsutil.Prettify(s)",
          "7053: }",
          "7056: func (s ServiceNowSourceProperties) GoString() string {",
          "7057:  return s.String()",
          "7058: }",
          "7061: func (s *ServiceNowSourceProperties) Validate() error {",
          "7062:  invalidParams := request.ErrInvalidParams{Context: \"ServiceNowSourceProperties\"}",
          "7063:  if s.Object == nil {",
          "7064:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7065:  }",
          "7067:  if invalidParams.Len() > 0 {",
          "7068:   return invalidParams",
          "7069:  }",
          "7070:  return nil",
          "7071: }",
          "7074: func (s *ServiceNowSourceProperties) SetObject(v string) *ServiceNowSourceProperties {",
          "7075:  s.Object = &v",
          "7076:  return s",
          "7077: }",
          "7081: type ServiceQuotaExceededException struct {",
          "7082:  _            struct{}                  `type:\"structure\"`",
          "7083:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "7085:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "7086: }",
          "7089: func (s ServiceQuotaExceededException) String() string {",
          "7090:  return awsutil.Prettify(s)",
          "7091: }",
          "7094: func (s ServiceQuotaExceededException) GoString() string {",
          "7095:  return s.String()",
          "7096: }",
          "7098: func newErrorServiceQuotaExceededException(v protocol.ResponseMetadata) error {",
          "7099:  return &ServiceQuotaExceededException{",
          "7100:   RespMetadata: v,",
          "7101:  }",
          "7102: }",
          "7105: func (s *ServiceQuotaExceededException) Code() string {",
          "7106:  return \"ServiceQuotaExceededException\"",
          "7107: }",
          "7110: func (s *ServiceQuotaExceededException) Message() string {",
          "7111:  if s.Message_ != nil {",
          "7112:   return *s.Message_",
          "7113:  }",
          "7114:  return \"\"",
          "7115: }",
          "7118: func (s *ServiceQuotaExceededException) OrigErr() error {",
          "7119:  return nil",
          "7120: }",
          "7122: func (s *ServiceQuotaExceededException) Error() string {",
          "7123:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "7124: }",
          "7127: func (s *ServiceQuotaExceededException) StatusCode() int {",
          "7128:  return s.RespMetadata.StatusCode",
          "7129: }",
          "7132: func (s *ServiceQuotaExceededException) RequestID() string {",
          "7133:  return s.RespMetadata.RequestID",
          "7134: }",
          "7137: type SingularConnectorProfileCredentials struct {",
          "7138:  _ struct{} `type:\"structure\"`",
          "7144:  ApiKey *string `locationName:\"apiKey\" type:\"string\" required:\"true\"`",
          "7145: }",
          "7148: func (s SingularConnectorProfileCredentials) String() string {",
          "7149:  return awsutil.Prettify(s)",
          "7150: }",
          "7153: func (s SingularConnectorProfileCredentials) GoString() string {",
          "7154:  return s.String()",
          "7155: }",
          "7158: func (s *SingularConnectorProfileCredentials) Validate() error {",
          "7159:  invalidParams := request.ErrInvalidParams{Context: \"SingularConnectorProfileCredentials\"}",
          "7160:  if s.ApiKey == nil {",
          "7161:   invalidParams.Add(request.NewErrParamRequired(\"ApiKey\"))",
          "7162:  }",
          "7164:  if invalidParams.Len() > 0 {",
          "7165:   return invalidParams",
          "7166:  }",
          "7167:  return nil",
          "7168: }",
          "7171: func (s *SingularConnectorProfileCredentials) SetApiKey(v string) *SingularConnectorProfileCredentials {",
          "7172:  s.ApiKey = &v",
          "7173:  return s",
          "7174: }",
          "7177: type SingularConnectorProfileProperties struct {",
          "7178:  _ struct{} `type:\"structure\"`",
          "7179: }",
          "7182: func (s SingularConnectorProfileProperties) String() string {",
          "7183:  return awsutil.Prettify(s)",
          "7184: }",
          "7187: func (s SingularConnectorProfileProperties) GoString() string {",
          "7188:  return s.String()",
          "7189: }",
          "7192: type SingularMetadata struct {",
          "7193:  _ struct{} `type:\"structure\"`",
          "7194: }",
          "7197: func (s SingularMetadata) String() string {",
          "7198:  return awsutil.Prettify(s)",
          "7199: }",
          "7202: func (s SingularMetadata) GoString() string {",
          "7203:  return s.String()",
          "7204: }",
          "7207: type SingularSourceProperties struct {",
          "7208:  _ struct{} `type:\"structure\"`",
          "7213:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7214: }",
          "7217: func (s SingularSourceProperties) String() string {",
          "7218:  return awsutil.Prettify(s)",
          "7219: }",
          "7222: func (s SingularSourceProperties) GoString() string {",
          "7223:  return s.String()",
          "7224: }",
          "7227: func (s *SingularSourceProperties) Validate() error {",
          "7228:  invalidParams := request.ErrInvalidParams{Context: \"SingularSourceProperties\"}",
          "7229:  if s.Object == nil {",
          "7230:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7231:  }",
          "7233:  if invalidParams.Len() > 0 {",
          "7234:   return invalidParams",
          "7235:  }",
          "7236:  return nil",
          "7237: }",
          "7240: func (s *SingularSourceProperties) SetObject(v string) *SingularSourceProperties {",
          "7241:  s.Object = &v",
          "7242:  return s",
          "7243: }",
          "7246: type SlackConnectorProfileCredentials struct {",
          "7247:  _ struct{} `type:\"structure\"`",
          "7250:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "7255:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "7261:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7265:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "7266: }",
          "7269: func (s SlackConnectorProfileCredentials) String() string {",
          "7270:  return awsutil.Prettify(s)",
          "7271: }",
          "7274: func (s SlackConnectorProfileCredentials) GoString() string {",
          "7275:  return s.String()",
          "7276: }",
          "7279: func (s *SlackConnectorProfileCredentials) Validate() error {",
          "7280:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileCredentials\"}",
          "7281:  if s.ClientId == nil {",
          "7282:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "7283:  }",
          "7284:  if s.ClientSecret == nil {",
          "7285:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "7286:  }",
          "7288:  if invalidParams.Len() > 0 {",
          "7289:   return invalidParams",
          "7290:  }",
          "7291:  return nil",
          "7292: }",
          "7295: func (s *SlackConnectorProfileCredentials) SetAccessToken(v string) *SlackConnectorProfileCredentials {",
          "7296:  s.AccessToken = &v",
          "7297:  return s",
          "7298: }",
          "7301: func (s *SlackConnectorProfileCredentials) SetClientId(v string) *SlackConnectorProfileCredentials {",
          "7302:  s.ClientId = &v",
          "7303:  return s",
          "7304: }",
          "7307: func (s *SlackConnectorProfileCredentials) SetClientSecret(v string) *SlackConnectorProfileCredentials {",
          "7308:  s.ClientSecret = &v",
          "7309:  return s",
          "7310: }",
          "7313: func (s *SlackConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SlackConnectorProfileCredentials {",
          "7314:  s.OAuthRequest = v",
          "7315:  return s",
          "7316: }",
          "7319: type SlackConnectorProfileProperties struct {",
          "7320:  _ struct{} `type:\"structure\"`",
          "7325:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "7326: }",
          "7329: func (s SlackConnectorProfileProperties) String() string {",
          "7330:  return awsutil.Prettify(s)",
          "7331: }",
          "7334: func (s SlackConnectorProfileProperties) GoString() string {",
          "7335:  return s.String()",
          "7336: }",
          "7339: func (s *SlackConnectorProfileProperties) Validate() error {",
          "7340:  invalidParams := request.ErrInvalidParams{Context: \"SlackConnectorProfileProperties\"}",
          "7341:  if s.InstanceUrl == nil {",
          "7342:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "7343:  }",
          "7345:  if invalidParams.Len() > 0 {",
          "7346:   return invalidParams",
          "7347:  }",
          "7348:  return nil",
          "7349: }",
          "7352: func (s *SlackConnectorProfileProperties) SetInstanceUrl(v string) *SlackConnectorProfileProperties {",
          "7353:  s.InstanceUrl = &v",
          "7354:  return s",
          "7355: }",
          "7358: type SlackMetadata struct {",
          "7359:  _ struct{} `type:\"structure\"`",
          "7362:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "7363: }",
          "7366: func (s SlackMetadata) String() string {",
          "7367:  return awsutil.Prettify(s)",
          "7368: }",
          "7371: func (s SlackMetadata) GoString() string {",
          "7372:  return s.String()",
          "7373: }",
          "7376: func (s *SlackMetadata) SetOAuthScopes(v []*string) *SlackMetadata {",
          "7377:  s.OAuthScopes = v",
          "7378:  return s",
          "7379: }",
          "7382: type SlackSourceProperties struct {",
          "7383:  _ struct{} `type:\"structure\"`",
          "7388:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7389: }",
          "7392: func (s SlackSourceProperties) String() string {",
          "7393:  return awsutil.Prettify(s)",
          "7394: }",
          "7397: func (s SlackSourceProperties) GoString() string {",
          "7398:  return s.String()",
          "7399: }",
          "7402: func (s *SlackSourceProperties) Validate() error {",
          "7403:  invalidParams := request.ErrInvalidParams{Context: \"SlackSourceProperties\"}",
          "7404:  if s.Object == nil {",
          "7405:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7406:  }",
          "7408:  if invalidParams.Len() > 0 {",
          "7409:   return invalidParams",
          "7410:  }",
          "7411:  return nil",
          "7412: }",
          "7415: func (s *SlackSourceProperties) SetObject(v string) *SlackSourceProperties {",
          "7416:  s.Object = &v",
          "7417:  return s",
          "7418: }",
          "7421: type SnowflakeConnectorProfileCredentials struct {",
          "7422:  _ struct{} `type:\"structure\"`",
          "7427:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7432:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "7433: }",
          "7436: func (s SnowflakeConnectorProfileCredentials) String() string {",
          "7437:  return awsutil.Prettify(s)",
          "7438: }",
          "7441: func (s SnowflakeConnectorProfileCredentials) GoString() string {",
          "7442:  return s.String()",
          "7443: }",
          "7446: func (s *SnowflakeConnectorProfileCredentials) Validate() error {",
          "7447:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileCredentials\"}",
          "7448:  if s.Password == nil {",
          "7449:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "7450:  }",
          "7451:  if s.Username == nil {",
          "7452:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "7453:  }",
          "7455:  if invalidParams.Len() > 0 {",
          "7456:   return invalidParams",
          "7457:  }",
          "7458:  return nil",
          "7459: }",
          "7462: func (s *SnowflakeConnectorProfileCredentials) SetPassword(v string) *SnowflakeConnectorProfileCredentials {",
          "7463:  s.Password = &v",
          "7464:  return s",
          "7465: }",
          "7468: func (s *SnowflakeConnectorProfileCredentials) SetUsername(v string) *SnowflakeConnectorProfileCredentials {",
          "7469:  s.Username = &v",
          "7470:  return s",
          "7471: }",
          "7474: type SnowflakeConnectorProfileProperties struct {",
          "7475:  _ struct{} `type:\"structure\"`",
          "7478:  AccountName *string `locationName:\"accountName\" type:\"string\"`",
          "7483:  BucketName *string `locationName:\"bucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7486:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7489:  PrivateLinkServiceName *string `locationName:\"privateLinkServiceName\" type:\"string\"`",
          "7492:  Region *string `locationName:\"region\" type:\"string\"`",
          "7499:  Stage *string `locationName:\"stage\" type:\"string\" required:\"true\"`",
          "7504:  Warehouse *string `locationName:\"warehouse\" type:\"string\" required:\"true\"`",
          "7505: }",
          "7508: func (s SnowflakeConnectorProfileProperties) String() string {",
          "7509:  return awsutil.Prettify(s)",
          "7510: }",
          "7513: func (s SnowflakeConnectorProfileProperties) GoString() string {",
          "7514:  return s.String()",
          "7515: }",
          "7518: func (s *SnowflakeConnectorProfileProperties) Validate() error {",
          "7519:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeConnectorProfileProperties\"}",
          "7520:  if s.BucketName == nil {",
          "7521:   invalidParams.Add(request.NewErrParamRequired(\"BucketName\"))",
          "7522:  }",
          "7523:  if s.BucketName != nil && len(*s.BucketName) < 3 {",
          "7524:   invalidParams.Add(request.NewErrParamMinLen(\"BucketName\", 3))",
          "7525:  }",
          "7526:  if s.Stage == nil {",
          "7527:   invalidParams.Add(request.NewErrParamRequired(\"Stage\"))",
          "7528:  }",
          "7529:  if s.Warehouse == nil {",
          "7530:   invalidParams.Add(request.NewErrParamRequired(\"Warehouse\"))",
          "7531:  }",
          "7533:  if invalidParams.Len() > 0 {",
          "7534:   return invalidParams",
          "7535:  }",
          "7536:  return nil",
          "7537: }",
          "7540: func (s *SnowflakeConnectorProfileProperties) SetAccountName(v string) *SnowflakeConnectorProfileProperties {",
          "7541:  s.AccountName = &v",
          "7542:  return s",
          "7543: }",
          "7546: func (s *SnowflakeConnectorProfileProperties) SetBucketName(v string) *SnowflakeConnectorProfileProperties {",
          "7547:  s.BucketName = &v",
          "7548:  return s",
          "7549: }",
          "7552: func (s *SnowflakeConnectorProfileProperties) SetBucketPrefix(v string) *SnowflakeConnectorProfileProperties {",
          "7553:  s.BucketPrefix = &v",
          "7554:  return s",
          "7555: }",
          "7558: func (s *SnowflakeConnectorProfileProperties) SetPrivateLinkServiceName(v string) *SnowflakeConnectorProfileProperties {",
          "7559:  s.PrivateLinkServiceName = &v",
          "7560:  return s",
          "7561: }",
          "7564: func (s *SnowflakeConnectorProfileProperties) SetRegion(v string) *SnowflakeConnectorProfileProperties {",
          "7565:  s.Region = &v",
          "7566:  return s",
          "7567: }",
          "7570: func (s *SnowflakeConnectorProfileProperties) SetStage(v string) *SnowflakeConnectorProfileProperties {",
          "7571:  s.Stage = &v",
          "7572:  return s",
          "7573: }",
          "7576: func (s *SnowflakeConnectorProfileProperties) SetWarehouse(v string) *SnowflakeConnectorProfileProperties {",
          "7577:  s.Warehouse = &v",
          "7578:  return s",
          "7579: }",
          "7582: type SnowflakeDestinationProperties struct {",
          "7583:  _ struct{} `type:\"structure\"`",
          "7587:  BucketPrefix *string `locationName:\"bucketPrefix\" type:\"string\"`",
          "7594:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "7599:  IntermediateBucketName *string `locationName:\"intermediateBucketName\" min:\"3\" type:\"string\" required:\"true\"`",
          "7604:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "7605: }",
          "7608: func (s SnowflakeDestinationProperties) String() string {",
          "7609:  return awsutil.Prettify(s)",
          "7610: }",
          "7613: func (s SnowflakeDestinationProperties) GoString() string {",
          "7614:  return s.String()",
          "7615: }",
          "7618: func (s *SnowflakeDestinationProperties) Validate() error {",
          "7619:  invalidParams := request.ErrInvalidParams{Context: \"SnowflakeDestinationProperties\"}",
          "7620:  if s.IntermediateBucketName == nil {",
          "7621:   invalidParams.Add(request.NewErrParamRequired(\"IntermediateBucketName\"))",
          "7622:  }",
          "7623:  if s.IntermediateBucketName != nil && len(*s.IntermediateBucketName) < 3 {",
          "7624:   invalidParams.Add(request.NewErrParamMinLen(\"IntermediateBucketName\", 3))",
          "7625:  }",
          "7626:  if s.Object == nil {",
          "7627:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "7628:  }",
          "7629:  if s.ErrorHandlingConfig != nil {",
          "7630:   if err := s.ErrorHandlingConfig.Validate(); err != nil {",
          "7631:    invalidParams.AddNested(\"ErrorHandlingConfig\", err.(request.ErrInvalidParams))",
          "7632:   }",
          "7633:  }",
          "7635:  if invalidParams.Len() > 0 {",
          "7636:   return invalidParams",
          "7637:  }",
          "7638:  return nil",
          "7639: }",
          "7642: func (s *SnowflakeDestinationProperties) SetBucketPrefix(v string) *SnowflakeDestinationProperties {",
          "7643:  s.BucketPrefix = &v",
          "7644:  return s",
          "7645: }",
          "7648: func (s *SnowflakeDestinationProperties) SetErrorHandlingConfig(v *ErrorHandlingConfig) *SnowflakeDestinationProperties {",
          "7649:  s.ErrorHandlingConfig = v",
          "7650:  return s",
          "7651: }",
          "7654: func (s *SnowflakeDestinationProperties) SetIntermediateBucketName(v string) *SnowflakeDestinationProperties {",
          "7655:  s.IntermediateBucketName = &v",
          "7656:  return s",
          "7657: }",
          "7660: func (s *SnowflakeDestinationProperties) SetObject(v string) *SnowflakeDestinationProperties {",
          "7661:  s.Object = &v",
          "7662:  return s",
          "7663: }",
          "7666: type SnowflakeMetadata struct {",
          "7667:  _ struct{} `type:\"structure\"`",
          "7670:  SupportedRegions []*string `locationName:\"supportedRegions\" type:\"list\"`",
          "7671: }",
          "7674: func (s SnowflakeMetadata) String() string {",
          "7675:  return awsutil.Prettify(s)",
          "7676: }",
          "7679: func (s SnowflakeMetadata) GoString() string {",
          "7680:  return s.String()",
          "7681: }",
          "7684: func (s *SnowflakeMetadata) SetSupportedRegions(v []*string) *SnowflakeMetadata {",
          "7685:  s.SupportedRegions = v",
          "7686:  return s",
          "7687: }",
          "7690: type SourceConnectorProperties struct {",
          "7691:  _ struct{} `type:\"structure\"`",
          "7694:  Amplitude *AmplitudeSourceProperties `type:\"structure\"`",
          "7697:  Datadog *DatadogSourceProperties `type:\"structure\"`",
          "7700:  Dynatrace *DynatraceSourceProperties `type:\"structure\"`",
          "7703:  GoogleAnalytics *GoogleAnalyticsSourceProperties `type:\"structure\"`",
          "7706:  InforNexus *InforNexusSourceProperties `type:\"structure\"`",
          "7709:  Marketo *MarketoSourceProperties `type:\"structure\"`",
          "7712:  S3 *S3SourceProperties `type:\"structure\"`",
          "7715:  Salesforce *SalesforceSourceProperties `type:\"structure\"`",
          "7718:  ServiceNow *ServiceNowSourceProperties `type:\"structure\"`",
          "7721:  Singular *SingularSourceProperties `type:\"structure\"`",
          "7724:  Slack *SlackSourceProperties `type:\"structure\"`",
          "7727:  Trendmicro *TrendmicroSourceProperties `type:\"structure\"`",
          "7730:  Veeva *VeevaSourceProperties `type:\"structure\"`",
          "7733:  Zendesk *ZendeskSourceProperties `type:\"structure\"`",
          "7734: }",
          "7737: func (s SourceConnectorProperties) String() string {",
          "7738:  return awsutil.Prettify(s)",
          "7739: }",
          "7742: func (s SourceConnectorProperties) GoString() string {",
          "7743:  return s.String()",
          "7744: }",
          "7747: func (s *SourceConnectorProperties) Validate() error {",
          "7748:  invalidParams := request.ErrInvalidParams{Context: \"SourceConnectorProperties\"}",
          "7749:  if s.Amplitude != nil {",
          "7750:   if err := s.Amplitude.Validate(); err != nil {",
          "7751:    invalidParams.AddNested(\"Amplitude\", err.(request.ErrInvalidParams))",
          "7752:   }",
          "7753:  }",
          "7754:  if s.Datadog != nil {",
          "7755:   if err := s.Datadog.Validate(); err != nil {",
          "7756:    invalidParams.AddNested(\"Datadog\", err.(request.ErrInvalidParams))",
          "7757:   }",
          "7758:  }",
          "7759:  if s.Dynatrace != nil {",
          "7760:   if err := s.Dynatrace.Validate(); err != nil {",
          "7761:    invalidParams.AddNested(\"Dynatrace\", err.(request.ErrInvalidParams))",
          "7762:   }",
          "7763:  }",
          "7764:  if s.GoogleAnalytics != nil {",
          "7765:   if err := s.GoogleAnalytics.Validate(); err != nil {",
          "7766:    invalidParams.AddNested(\"GoogleAnalytics\", err.(request.ErrInvalidParams))",
          "7767:   }",
          "7768:  }",
          "7769:  if s.InforNexus != nil {",
          "7770:   if err := s.InforNexus.Validate(); err != nil {",
          "7771:    invalidParams.AddNested(\"InforNexus\", err.(request.ErrInvalidParams))",
          "7772:   }",
          "7773:  }",
          "7774:  if s.Marketo != nil {",
          "7775:   if err := s.Marketo.Validate(); err != nil {",
          "7776:    invalidParams.AddNested(\"Marketo\", err.(request.ErrInvalidParams))",
          "7777:   }",
          "7778:  }",
          "7779:  if s.S3 != nil {",
          "7780:   if err := s.S3.Validate(); err != nil {",
          "7781:    invalidParams.AddNested(\"S3\", err.(request.ErrInvalidParams))",
          "7782:   }",
          "7783:  }",
          "7784:  if s.Salesforce != nil {",
          "7785:   if err := s.Salesforce.Validate(); err != nil {",
          "7786:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "7787:   }",
          "7788:  }",
          "7789:  if s.ServiceNow != nil {",
          "7790:   if err := s.ServiceNow.Validate(); err != nil {",
          "7791:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "7792:   }",
          "7793:  }",
          "7794:  if s.Singular != nil {",
          "7795:   if err := s.Singular.Validate(); err != nil {",
          "7796:    invalidParams.AddNested(\"Singular\", err.(request.ErrInvalidParams))",
          "7797:   }",
          "7798:  }",
          "7799:  if s.Slack != nil {",
          "7800:   if err := s.Slack.Validate(); err != nil {",
          "7801:    invalidParams.AddNested(\"Slack\", err.(request.ErrInvalidParams))",
          "7802:   }",
          "7803:  }",
          "7804:  if s.Trendmicro != nil {",
          "7805:   if err := s.Trendmicro.Validate(); err != nil {",
          "7806:    invalidParams.AddNested(\"Trendmicro\", err.(request.ErrInvalidParams))",
          "7807:   }",
          "7808:  }",
          "7809:  if s.Veeva != nil {",
          "7810:   if err := s.Veeva.Validate(); err != nil {",
          "7811:    invalidParams.AddNested(\"Veeva\", err.(request.ErrInvalidParams))",
          "7812:   }",
          "7813:  }",
          "7814:  if s.Zendesk != nil {",
          "7815:   if err := s.Zendesk.Validate(); err != nil {",
          "7816:    invalidParams.AddNested(\"Zendesk\", err.(request.ErrInvalidParams))",
          "7817:   }",
          "7818:  }",
          "7820:  if invalidParams.Len() > 0 {",
          "7821:   return invalidParams",
          "7822:  }",
          "7823:  return nil",
          "7824: }",
          "7827: func (s *SourceConnectorProperties) SetAmplitude(v *AmplitudeSourceProperties) *SourceConnectorProperties {",
          "7828:  s.Amplitude = v",
          "7829:  return s",
          "7830: }",
          "7833: func (s *SourceConnectorProperties) SetDatadog(v *DatadogSourceProperties) *SourceConnectorProperties {",
          "7834:  s.Datadog = v",
          "7835:  return s",
          "7836: }",
          "7839: func (s *SourceConnectorProperties) SetDynatrace(v *DynatraceSourceProperties) *SourceConnectorProperties {",
          "7840:  s.Dynatrace = v",
          "7841:  return s",
          "7842: }",
          "7845: func (s *SourceConnectorProperties) SetGoogleAnalytics(v *GoogleAnalyticsSourceProperties) *SourceConnectorProperties {",
          "7846:  s.GoogleAnalytics = v",
          "7847:  return s",
          "7848: }",
          "7851: func (s *SourceConnectorProperties) SetInforNexus(v *InforNexusSourceProperties) *SourceConnectorProperties {",
          "7852:  s.InforNexus = v",
          "7853:  return s",
          "7854: }",
          "7857: func (s *SourceConnectorProperties) SetMarketo(v *MarketoSourceProperties) *SourceConnectorProperties {",
          "7858:  s.Marketo = v",
          "7859:  return s",
          "7860: }",
          "7863: func (s *SourceConnectorProperties) SetS3(v *S3SourceProperties) *SourceConnectorProperties {",
          "7864:  s.S3 = v",
          "7865:  return s",
          "7866: }",
          "7869: func (s *SourceConnectorProperties) SetSalesforce(v *SalesforceSourceProperties) *SourceConnectorProperties {",
          "7870:  s.Salesforce = v",
          "7871:  return s",
          "7872: }",
          "7875: func (s *SourceConnectorProperties) SetServiceNow(v *ServiceNowSourceProperties) *SourceConnectorProperties {",
          "7876:  s.ServiceNow = v",
          "7877:  return s",
          "7878: }",
          "7881: func (s *SourceConnectorProperties) SetSingular(v *SingularSourceProperties) *SourceConnectorProperties {",
          "7882:  s.Singular = v",
          "7883:  return s",
          "7884: }",
          "7887: func (s *SourceConnectorProperties) SetSlack(v *SlackSourceProperties) *SourceConnectorProperties {",
          "7888:  s.Slack = v",
          "7889:  return s",
          "7890: }",
          "7893: func (s *SourceConnectorProperties) SetTrendmicro(v *TrendmicroSourceProperties) *SourceConnectorProperties {",
          "7894:  s.Trendmicro = v",
          "7895:  return s",
          "7896: }",
          "7899: func (s *SourceConnectorProperties) SetVeeva(v *VeevaSourceProperties) *SourceConnectorProperties {",
          "7900:  s.Veeva = v",
          "7901:  return s",
          "7902: }",
          "7905: func (s *SourceConnectorProperties) SetZendesk(v *ZendeskSourceProperties) *SourceConnectorProperties {",
          "7906:  s.Zendesk = v",
          "7907:  return s",
          "7908: }",
          "7912: type SourceFieldProperties struct {",
          "7913:  _ struct{} `type:\"structure\"`",
          "7916:  IsQueryable *bool `locationName:\"isQueryable\" type:\"boolean\"`",
          "7919:  IsRetrievable *bool `locationName:\"isRetrievable\" type:\"boolean\"`",
          "7920: }",
          "7923: func (s SourceFieldProperties) String() string {",
          "7924:  return awsutil.Prettify(s)",
          "7925: }",
          "7928: func (s SourceFieldProperties) GoString() string {",
          "7929:  return s.String()",
          "7930: }",
          "7933: func (s *SourceFieldProperties) SetIsQueryable(v bool) *SourceFieldProperties {",
          "7934:  s.IsQueryable = &v",
          "7935:  return s",
          "7936: }",
          "7939: func (s *SourceFieldProperties) SetIsRetrievable(v bool) *SourceFieldProperties {",
          "7940:  s.IsRetrievable = &v",
          "7941:  return s",
          "7942: }",
          "7946: type SourceFlowConfig struct {",
          "7947:  _ struct{} `type:\"structure\"`",
          "7951:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\"`",
          "7956:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "7961:  SourceConnectorProperties *SourceConnectorProperties `locationName:\"sourceConnectorProperties\" type:\"structure\" required:\"true\"`",
          "7962: }",
          "7965: func (s SourceFlowConfig) String() string {",
          "7966:  return awsutil.Prettify(s)",
          "7967: }",
          "7970: func (s SourceFlowConfig) GoString() string {",
          "7971:  return s.String()",
          "7972: }",
          "7975: func (s *SourceFlowConfig) Validate() error {",
          "7976:  invalidParams := request.ErrInvalidParams{Context: \"SourceFlowConfig\"}",
          "7977:  if s.ConnectorType == nil {",
          "7978:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorType\"))",
          "7979:  }",
          "7980:  if s.SourceConnectorProperties == nil {",
          "7981:   invalidParams.Add(request.NewErrParamRequired(\"SourceConnectorProperties\"))",
          "7982:  }",
          "7983:  if s.SourceConnectorProperties != nil {",
          "7984:   if err := s.SourceConnectorProperties.Validate(); err != nil {",
          "7985:    invalidParams.AddNested(\"SourceConnectorProperties\", err.(request.ErrInvalidParams))",
          "7986:   }",
          "7987:  }",
          "7989:  if invalidParams.Len() > 0 {",
          "7990:   return invalidParams",
          "7991:  }",
          "7992:  return nil",
          "7993: }",
          "7996: func (s *SourceFlowConfig) SetConnectorProfileName(v string) *SourceFlowConfig {",
          "7997:  s.ConnectorProfileName = &v",
          "7998:  return s",
          "7999: }",
          "8002: func (s *SourceFlowConfig) SetConnectorType(v string) *SourceFlowConfig {",
          "8003:  s.ConnectorType = &v",
          "8004:  return s",
          "8005: }",
          "8008: func (s *SourceFlowConfig) SetSourceConnectorProperties(v *SourceConnectorProperties) *SourceFlowConfig {",
          "8009:  s.SourceConnectorProperties = v",
          "8010:  return s",
          "8011: }",
          "8013: type StartFlowInput struct {",
          "8014:  _ struct{} `type:\"structure\"`",
          "8020:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8021: }",
          "8024: func (s StartFlowInput) String() string {",
          "8025:  return awsutil.Prettify(s)",
          "8026: }",
          "8029: func (s StartFlowInput) GoString() string {",
          "8030:  return s.String()",
          "8031: }",
          "8034: func (s *StartFlowInput) Validate() error {",
          "8035:  invalidParams := request.ErrInvalidParams{Context: \"StartFlowInput\"}",
          "8036:  if s.FlowName == nil {",
          "8037:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8038:  }",
          "8040:  if invalidParams.Len() > 0 {",
          "8041:   return invalidParams",
          "8042:  }",
          "8043:  return nil",
          "8044: }",
          "8047: func (s *StartFlowInput) SetFlowName(v string) *StartFlowInput {",
          "8048:  s.FlowName = &v",
          "8049:  return s",
          "8050: }",
          "8052: type StartFlowOutput struct {",
          "8053:  _ struct{} `type:\"structure\"`",
          "8056:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8059:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8060: }",
          "8063: func (s StartFlowOutput) String() string {",
          "8064:  return awsutil.Prettify(s)",
          "8065: }",
          "8068: func (s StartFlowOutput) GoString() string {",
          "8069:  return s.String()",
          "8070: }",
          "8073: func (s *StartFlowOutput) SetFlowArn(v string) *StartFlowOutput {",
          "8074:  s.FlowArn = &v",
          "8075:  return s",
          "8076: }",
          "8079: func (s *StartFlowOutput) SetFlowStatus(v string) *StartFlowOutput {",
          "8080:  s.FlowStatus = &v",
          "8081:  return s",
          "8082: }",
          "8084: type StopFlowInput struct {",
          "8085:  _ struct{} `type:\"structure\"`",
          "8091:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8092: }",
          "8095: func (s StopFlowInput) String() string {",
          "8096:  return awsutil.Prettify(s)",
          "8097: }",
          "8100: func (s StopFlowInput) GoString() string {",
          "8101:  return s.String()",
          "8102: }",
          "8105: func (s *StopFlowInput) Validate() error {",
          "8106:  invalidParams := request.ErrInvalidParams{Context: \"StopFlowInput\"}",
          "8107:  if s.FlowName == nil {",
          "8108:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8109:  }",
          "8111:  if invalidParams.Len() > 0 {",
          "8112:   return invalidParams",
          "8113:  }",
          "8114:  return nil",
          "8115: }",
          "8118: func (s *StopFlowInput) SetFlowName(v string) *StopFlowInput {",
          "8119:  s.FlowName = &v",
          "8120:  return s",
          "8121: }",
          "8123: type StopFlowOutput struct {",
          "8124:  _ struct{} `type:\"structure\"`",
          "8127:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "8130:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8131: }",
          "8134: func (s StopFlowOutput) String() string {",
          "8135:  return awsutil.Prettify(s)",
          "8136: }",
          "8139: func (s StopFlowOutput) GoString() string {",
          "8140:  return s.String()",
          "8141: }",
          "8144: func (s *StopFlowOutput) SetFlowArn(v string) *StopFlowOutput {",
          "8145:  s.FlowArn = &v",
          "8146:  return s",
          "8147: }",
          "8150: func (s *StopFlowOutput) SetFlowStatus(v string) *StopFlowOutput {",
          "8151:  s.FlowStatus = &v",
          "8152:  return s",
          "8153: }",
          "8157: type SupportedFieldTypeDetails struct {",
          "8158:  _ struct{} `type:\"structure\"`",
          "8164:  V1 *FieldTypeDetails `locationName:\"v1\" type:\"structure\" required:\"true\"`",
          "8165: }",
          "8168: func (s SupportedFieldTypeDetails) String() string {",
          "8169:  return awsutil.Prettify(s)",
          "8170: }",
          "8173: func (s SupportedFieldTypeDetails) GoString() string {",
          "8174:  return s.String()",
          "8175: }",
          "8178: func (s *SupportedFieldTypeDetails) SetV1(v *FieldTypeDetails) *SupportedFieldTypeDetails {",
          "8179:  s.V1 = v",
          "8180:  return s",
          "8181: }",
          "8183: type TagResourceInput struct {",
          "8184:  _ struct{} `type:\"structure\"`",
          "8189:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8194:  Tags map[string]*string `locationName:\"tags\" type:\"map\" required:\"true\"`",
          "8195: }",
          "8198: func (s TagResourceInput) String() string {",
          "8199:  return awsutil.Prettify(s)",
          "8200: }",
          "8203: func (s TagResourceInput) GoString() string {",
          "8204:  return s.String()",
          "8205: }",
          "8208: func (s *TagResourceInput) Validate() error {",
          "8209:  invalidParams := request.ErrInvalidParams{Context: \"TagResourceInput\"}",
          "8210:  if s.ResourceArn == nil {",
          "8211:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8212:  }",
          "8213:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8214:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8215:  }",
          "8216:  if s.Tags == nil {",
          "8217:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "8218:  }",
          "8220:  if invalidParams.Len() > 0 {",
          "8221:   return invalidParams",
          "8222:  }",
          "8223:  return nil",
          "8224: }",
          "8227: func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {",
          "8228:  s.ResourceArn = &v",
          "8229:  return s",
          "8230: }",
          "8233: func (s *TagResourceInput) SetTags(v map[string]*string) *TagResourceInput {",
          "8234:  s.Tags = v",
          "8235:  return s",
          "8236: }",
          "8238: type TagResourceOutput struct {",
          "8239:  _ struct{} `type:\"structure\"`",
          "8240: }",
          "8243: func (s TagResourceOutput) String() string {",
          "8244:  return awsutil.Prettify(s)",
          "8245: }",
          "8248: func (s TagResourceOutput) GoString() string {",
          "8249:  return s.String()",
          "8250: }",
          "8254: type Task struct {",
          "8255:  _ struct{} `type:\"structure\"`",
          "8258:  ConnectorOperator *ConnectorOperator `locationName:\"connectorOperator\" type:\"structure\"`",
          "8262:  DestinationField *string `locationName:\"destinationField\" type:\"string\"`",
          "8267:  SourceFields []*string `locationName:\"sourceFields\" type:\"list\" required:\"true\"`",
          "8271:  TaskProperties map[string]*string `locationName:\"taskProperties\" type:\"map\"`",
          "8276:  TaskType *string `locationName:\"taskType\" type:\"string\" required:\"true\" enum:\"TaskType\"`",
          "8277: }",
          "8280: func (s Task) String() string {",
          "8281:  return awsutil.Prettify(s)",
          "8282: }",
          "8285: func (s Task) GoString() string {",
          "8286:  return s.String()",
          "8287: }",
          "8290: func (s *Task) Validate() error {",
          "8291:  invalidParams := request.ErrInvalidParams{Context: \"Task\"}",
          "8292:  if s.SourceFields == nil {",
          "8293:   invalidParams.Add(request.NewErrParamRequired(\"SourceFields\"))",
          "8294:  }",
          "8295:  if s.TaskType == nil {",
          "8296:   invalidParams.Add(request.NewErrParamRequired(\"TaskType\"))",
          "8297:  }",
          "8299:  if invalidParams.Len() > 0 {",
          "8300:   return invalidParams",
          "8301:  }",
          "8302:  return nil",
          "8303: }",
          "8306: func (s *Task) SetConnectorOperator(v *ConnectorOperator) *Task {",
          "8307:  s.ConnectorOperator = v",
          "8308:  return s",
          "8309: }",
          "8312: func (s *Task) SetDestinationField(v string) *Task {",
          "8313:  s.DestinationField = &v",
          "8314:  return s",
          "8315: }",
          "8318: func (s *Task) SetSourceFields(v []*string) *Task {",
          "8319:  s.SourceFields = v",
          "8320:  return s",
          "8321: }",
          "8324: func (s *Task) SetTaskProperties(v map[string]*string) *Task {",
          "8325:  s.TaskProperties = v",
          "8326:  return s",
          "8327: }",
          "8330: func (s *Task) SetTaskType(v string) *Task {",
          "8331:  s.TaskType = &v",
          "8332:  return s",
          "8333: }",
          "8336: type TrendmicroConnectorProfileCredentials struct {",
          "8337:  _ struct{} `type:\"structure\"`",
          "8342:  ApiSecretKey *string `locationName:\"apiSecretKey\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8343: }",
          "8346: func (s TrendmicroConnectorProfileCredentials) String() string {",
          "8347:  return awsutil.Prettify(s)",
          "8348: }",
          "8351: func (s TrendmicroConnectorProfileCredentials) GoString() string {",
          "8352:  return s.String()",
          "8353: }",
          "8356: func (s *TrendmicroConnectorProfileCredentials) Validate() error {",
          "8357:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroConnectorProfileCredentials\"}",
          "8358:  if s.ApiSecretKey == nil {",
          "8359:   invalidParams.Add(request.NewErrParamRequired(\"ApiSecretKey\"))",
          "8360:  }",
          "8362:  if invalidParams.Len() > 0 {",
          "8363:   return invalidParams",
          "8364:  }",
          "8365:  return nil",
          "8366: }",
          "8369: func (s *TrendmicroConnectorProfileCredentials) SetApiSecretKey(v string) *TrendmicroConnectorProfileCredentials {",
          "8370:  s.ApiSecretKey = &v",
          "8371:  return s",
          "8372: }",
          "8375: type TrendmicroConnectorProfileProperties struct {",
          "8376:  _ struct{} `type:\"structure\"`",
          "8377: }",
          "8380: func (s TrendmicroConnectorProfileProperties) String() string {",
          "8381:  return awsutil.Prettify(s)",
          "8382: }",
          "8385: func (s TrendmicroConnectorProfileProperties) GoString() string {",
          "8386:  return s.String()",
          "8387: }",
          "8390: type TrendmicroMetadata struct {",
          "8391:  _ struct{} `type:\"structure\"`",
          "8392: }",
          "8395: func (s TrendmicroMetadata) String() string {",
          "8396:  return awsutil.Prettify(s)",
          "8397: }",
          "8400: func (s TrendmicroMetadata) GoString() string {",
          "8401:  return s.String()",
          "8402: }",
          "8405: type TrendmicroSourceProperties struct {",
          "8406:  _ struct{} `type:\"structure\"`",
          "8411:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "8412: }",
          "8415: func (s TrendmicroSourceProperties) String() string {",
          "8416:  return awsutil.Prettify(s)",
          "8417: }",
          "8420: func (s TrendmicroSourceProperties) GoString() string {",
          "8421:  return s.String()",
          "8422: }",
          "8425: func (s *TrendmicroSourceProperties) Validate() error {",
          "8426:  invalidParams := request.ErrInvalidParams{Context: \"TrendmicroSourceProperties\"}",
          "8427:  if s.Object == nil {",
          "8428:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "8429:  }",
          "8431:  if invalidParams.Len() > 0 {",
          "8432:   return invalidParams",
          "8433:  }",
          "8434:  return nil",
          "8435: }",
          "8438: func (s *TrendmicroSourceProperties) SetObject(v string) *TrendmicroSourceProperties {",
          "8439:  s.Object = &v",
          "8440:  return s",
          "8441: }",
          "8445: type TriggerConfig struct {",
          "8446:  _ struct{} `type:\"structure\"`",
          "8451:  TriggerProperties *TriggerProperties `locationName:\"triggerProperties\" type:\"structure\"`",
          "8456:  TriggerType *string `locationName:\"triggerType\" type:\"string\" required:\"true\" enum:\"TriggerType\"`",
          "8457: }",
          "8460: func (s TriggerConfig) String() string {",
          "8461:  return awsutil.Prettify(s)",
          "8462: }",
          "8465: func (s TriggerConfig) GoString() string {",
          "8466:  return s.String()",
          "8467: }",
          "8470: func (s *TriggerConfig) Validate() error {",
          "8471:  invalidParams := request.ErrInvalidParams{Context: \"TriggerConfig\"}",
          "8472:  if s.TriggerType == nil {",
          "8473:   invalidParams.Add(request.NewErrParamRequired(\"TriggerType\"))",
          "8474:  }",
          "8475:  if s.TriggerProperties != nil {",
          "8476:   if err := s.TriggerProperties.Validate(); err != nil {",
          "8477:    invalidParams.AddNested(\"TriggerProperties\", err.(request.ErrInvalidParams))",
          "8478:   }",
          "8479:  }",
          "8481:  if invalidParams.Len() > 0 {",
          "8482:   return invalidParams",
          "8483:  }",
          "8484:  return nil",
          "8485: }",
          "8488: func (s *TriggerConfig) SetTriggerProperties(v *TriggerProperties) *TriggerConfig {",
          "8489:  s.TriggerProperties = v",
          "8490:  return s",
          "8491: }",
          "8494: func (s *TriggerConfig) SetTriggerType(v string) *TriggerConfig {",
          "8495:  s.TriggerType = &v",
          "8496:  return s",
          "8497: }",
          "8501: type TriggerProperties struct {",
          "8502:  _ struct{} `type:\"structure\"`",
          "8506:  Scheduled *ScheduledTriggerProperties `type:\"structure\"`",
          "8507: }",
          "8510: func (s TriggerProperties) String() string {",
          "8511:  return awsutil.Prettify(s)",
          "8512: }",
          "8515: func (s TriggerProperties) GoString() string {",
          "8516:  return s.String()",
          "8517: }",
          "8520: func (s *TriggerProperties) Validate() error {",
          "8521:  invalidParams := request.ErrInvalidParams{Context: \"TriggerProperties\"}",
          "8522:  if s.Scheduled != nil {",
          "8523:   if err := s.Scheduled.Validate(); err != nil {",
          "8524:    invalidParams.AddNested(\"Scheduled\", err.(request.ErrInvalidParams))",
          "8525:   }",
          "8526:  }",
          "8528:  if invalidParams.Len() > 0 {",
          "8529:   return invalidParams",
          "8530:  }",
          "8531:  return nil",
          "8532: }",
          "8535: func (s *TriggerProperties) SetScheduled(v *ScheduledTriggerProperties) *TriggerProperties {",
          "8536:  s.Scheduled = v",
          "8537:  return s",
          "8538: }",
          "8541: type UnsupportedOperationException struct {",
          "8542:  _            struct{}                  `type:\"structure\"`",
          "8543:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8545:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8546: }",
          "8549: func (s UnsupportedOperationException) String() string {",
          "8550:  return awsutil.Prettify(s)",
          "8551: }",
          "8554: func (s UnsupportedOperationException) GoString() string {",
          "8555:  return s.String()",
          "8556: }",
          "8558: func newErrorUnsupportedOperationException(v protocol.ResponseMetadata) error {",
          "8559:  return &UnsupportedOperationException{",
          "8560:   RespMetadata: v,",
          "8561:  }",
          "8562: }",
          "8565: func (s *UnsupportedOperationException) Code() string {",
          "8566:  return \"UnsupportedOperationException\"",
          "8567: }",
          "8570: func (s *UnsupportedOperationException) Message() string {",
          "8571:  if s.Message_ != nil {",
          "8572:   return *s.Message_",
          "8573:  }",
          "8574:  return \"\"",
          "8575: }",
          "8578: func (s *UnsupportedOperationException) OrigErr() error {",
          "8579:  return nil",
          "8580: }",
          "8582: func (s *UnsupportedOperationException) Error() string {",
          "8583:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8584: }",
          "8587: func (s *UnsupportedOperationException) StatusCode() int {",
          "8588:  return s.RespMetadata.StatusCode",
          "8589: }",
          "8592: func (s *UnsupportedOperationException) RequestID() string {",
          "8593:  return s.RespMetadata.RequestID",
          "8594: }",
          "8596: type UntagResourceInput struct {",
          "8597:  _ struct{} `type:\"structure\"`",
          "8602:  ResourceArn *string `location:\"uri\" locationName:\"resourceArn\" type:\"string\" required:\"true\"`",
          "8607:  TagKeys []*string `location:\"querystring\" locationName:\"tagKeys\" type:\"list\" required:\"true\"`",
          "8608: }",
          "8611: func (s UntagResourceInput) String() string {",
          "8612:  return awsutil.Prettify(s)",
          "8613: }",
          "8616: func (s UntagResourceInput) GoString() string {",
          "8617:  return s.String()",
          "8618: }",
          "8621: func (s *UntagResourceInput) Validate() error {",
          "8622:  invalidParams := request.ErrInvalidParams{Context: \"UntagResourceInput\"}",
          "8623:  if s.ResourceArn == nil {",
          "8624:   invalidParams.Add(request.NewErrParamRequired(\"ResourceArn\"))",
          "8625:  }",
          "8626:  if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {",
          "8627:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceArn\", 1))",
          "8628:  }",
          "8629:  if s.TagKeys == nil {",
          "8630:   invalidParams.Add(request.NewErrParamRequired(\"TagKeys\"))",
          "8631:  }",
          "8633:  if invalidParams.Len() > 0 {",
          "8634:   return invalidParams",
          "8635:  }",
          "8636:  return nil",
          "8637: }",
          "8640: func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {",
          "8641:  s.ResourceArn = &v",
          "8642:  return s",
          "8643: }",
          "8646: func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {",
          "8647:  s.TagKeys = v",
          "8648:  return s",
          "8649: }",
          "8651: type UntagResourceOutput struct {",
          "8652:  _ struct{} `type:\"structure\"`",
          "8653: }",
          "8656: func (s UntagResourceOutput) String() string {",
          "8657:  return awsutil.Prettify(s)",
          "8658: }",
          "8661: func (s UntagResourceOutput) GoString() string {",
          "8662:  return s.String()",
          "8663: }",
          "8665: type UpdateConnectorProfileInput struct {",
          "8666:  _ struct{} `type:\"structure\"`",
          "8671:  ConnectionMode *string `locationName:\"connectionMode\" type:\"string\" required:\"true\" enum:\"ConnectionMode\"`",
          "8676:  ConnectorProfileConfig *ConnectorProfileConfig `locationName:\"connectorProfileConfig\" type:\"structure\" required:\"true\"`",
          "8682:  ConnectorProfileName *string `locationName:\"connectorProfileName\" type:\"string\" required:\"true\"`",
          "8683: }",
          "8686: func (s UpdateConnectorProfileInput) String() string {",
          "8687:  return awsutil.Prettify(s)",
          "8688: }",
          "8691: func (s UpdateConnectorProfileInput) GoString() string {",
          "8692:  return s.String()",
          "8693: }",
          "8696: func (s *UpdateConnectorProfileInput) Validate() error {",
          "8697:  invalidParams := request.ErrInvalidParams{Context: \"UpdateConnectorProfileInput\"}",
          "8698:  if s.ConnectionMode == nil {",
          "8699:   invalidParams.Add(request.NewErrParamRequired(\"ConnectionMode\"))",
          "8700:  }",
          "8701:  if s.ConnectorProfileConfig == nil {",
          "8702:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileConfig\"))",
          "8703:  }",
          "8704:  if s.ConnectorProfileName == nil {",
          "8705:   invalidParams.Add(request.NewErrParamRequired(\"ConnectorProfileName\"))",
          "8706:  }",
          "8707:  if s.ConnectorProfileConfig != nil {",
          "8708:   if err := s.ConnectorProfileConfig.Validate(); err != nil {",
          "8709:    invalidParams.AddNested(\"ConnectorProfileConfig\", err.(request.ErrInvalidParams))",
          "8710:   }",
          "8711:  }",
          "8713:  if invalidParams.Len() > 0 {",
          "8714:   return invalidParams",
          "8715:  }",
          "8716:  return nil",
          "8717: }",
          "8720: func (s *UpdateConnectorProfileInput) SetConnectionMode(v string) *UpdateConnectorProfileInput {",
          "8721:  s.ConnectionMode = &v",
          "8722:  return s",
          "8723: }",
          "8726: func (s *UpdateConnectorProfileInput) SetConnectorProfileConfig(v *ConnectorProfileConfig) *UpdateConnectorProfileInput {",
          "8727:  s.ConnectorProfileConfig = v",
          "8728:  return s",
          "8729: }",
          "8732: func (s *UpdateConnectorProfileInput) SetConnectorProfileName(v string) *UpdateConnectorProfileInput {",
          "8733:  s.ConnectorProfileName = &v",
          "8734:  return s",
          "8735: }",
          "8737: type UpdateConnectorProfileOutput struct {",
          "8738:  _ struct{} `type:\"structure\"`",
          "8741:  ConnectorProfileArn *string `locationName:\"connectorProfileArn\" type:\"string\"`",
          "8742: }",
          "8745: func (s UpdateConnectorProfileOutput) String() string {",
          "8746:  return awsutil.Prettify(s)",
          "8747: }",
          "8750: func (s UpdateConnectorProfileOutput) GoString() string {",
          "8751:  return s.String()",
          "8752: }",
          "8755: func (s *UpdateConnectorProfileOutput) SetConnectorProfileArn(v string) *UpdateConnectorProfileOutput {",
          "8756:  s.ConnectorProfileArn = &v",
          "8757:  return s",
          "8758: }",
          "8760: type UpdateFlowInput struct {",
          "8761:  _ struct{} `type:\"structure\"`",
          "8764:  Description *string `locationName:\"description\" type:\"string\"`",
          "8770:  DestinationFlowConfigList []*DestinationFlowConfig `locationName:\"destinationFlowConfigList\" type:\"list\" required:\"true\"`",
          "8776:  FlowName *string `locationName:\"flowName\" type:\"string\" required:\"true\"`",
          "8780:  SourceFlowConfig *SourceFlowConfig `locationName:\"sourceFlowConfig\" type:\"structure\"`",
          "8786:  Tasks []*Task `locationName:\"tasks\" type:\"list\" required:\"true\"`",
          "8791:  TriggerConfig *TriggerConfig `locationName:\"triggerConfig\" type:\"structure\" required:\"true\"`",
          "8792: }",
          "8795: func (s UpdateFlowInput) String() string {",
          "8796:  return awsutil.Prettify(s)",
          "8797: }",
          "8800: func (s UpdateFlowInput) GoString() string {",
          "8801:  return s.String()",
          "8802: }",
          "8805: func (s *UpdateFlowInput) Validate() error {",
          "8806:  invalidParams := request.ErrInvalidParams{Context: \"UpdateFlowInput\"}",
          "8807:  if s.DestinationFlowConfigList == nil {",
          "8808:   invalidParams.Add(request.NewErrParamRequired(\"DestinationFlowConfigList\"))",
          "8809:  }",
          "8810:  if s.FlowName == nil {",
          "8811:   invalidParams.Add(request.NewErrParamRequired(\"FlowName\"))",
          "8812:  }",
          "8813:  if s.Tasks == nil {",
          "8814:   invalidParams.Add(request.NewErrParamRequired(\"Tasks\"))",
          "8815:  }",
          "8816:  if s.TriggerConfig == nil {",
          "8817:   invalidParams.Add(request.NewErrParamRequired(\"TriggerConfig\"))",
          "8818:  }",
          "8819:  if s.DestinationFlowConfigList != nil {",
          "8820:   for i, v := range s.DestinationFlowConfigList {",
          "8821:    if v == nil {",
          "8822:     continue",
          "8823:    }",
          "8824:    if err := v.Validate(); err != nil {",
          "8825:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"DestinationFlowConfigList\", i), err.(request.ErrInvalidParams))",
          "8826:    }",
          "8827:   }",
          "8828:  }",
          "8829:  if s.SourceFlowConfig != nil {",
          "8830:   if err := s.SourceFlowConfig.Validate(); err != nil {",
          "8831:    invalidParams.AddNested(\"SourceFlowConfig\", err.(request.ErrInvalidParams))",
          "8832:   }",
          "8833:  }",
          "8834:  if s.Tasks != nil {",
          "8835:   for i, v := range s.Tasks {",
          "8836:    if v == nil {",
          "8837:     continue",
          "8838:    }",
          "8839:    if err := v.Validate(); err != nil {",
          "8840:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tasks\", i), err.(request.ErrInvalidParams))",
          "8841:    }",
          "8842:   }",
          "8843:  }",
          "8844:  if s.TriggerConfig != nil {",
          "8845:   if err := s.TriggerConfig.Validate(); err != nil {",
          "8846:    invalidParams.AddNested(\"TriggerConfig\", err.(request.ErrInvalidParams))",
          "8847:   }",
          "8848:  }",
          "8850:  if invalidParams.Len() > 0 {",
          "8851:   return invalidParams",
          "8852:  }",
          "8853:  return nil",
          "8854: }",
          "8857: func (s *UpdateFlowInput) SetDescription(v string) *UpdateFlowInput {",
          "8858:  s.Description = &v",
          "8859:  return s",
          "8860: }",
          "8863: func (s *UpdateFlowInput) SetDestinationFlowConfigList(v []*DestinationFlowConfig) *UpdateFlowInput {",
          "8864:  s.DestinationFlowConfigList = v",
          "8865:  return s",
          "8866: }",
          "8869: func (s *UpdateFlowInput) SetFlowName(v string) *UpdateFlowInput {",
          "8870:  s.FlowName = &v",
          "8871:  return s",
          "8872: }",
          "8875: func (s *UpdateFlowInput) SetSourceFlowConfig(v *SourceFlowConfig) *UpdateFlowInput {",
          "8876:  s.SourceFlowConfig = v",
          "8877:  return s",
          "8878: }",
          "8881: func (s *UpdateFlowInput) SetTasks(v []*Task) *UpdateFlowInput {",
          "8882:  s.Tasks = v",
          "8883:  return s",
          "8884: }",
          "8887: func (s *UpdateFlowInput) SetTriggerConfig(v *TriggerConfig) *UpdateFlowInput {",
          "8888:  s.TriggerConfig = v",
          "8889:  return s",
          "8890: }",
          "8892: type UpdateFlowOutput struct {",
          "8893:  _ struct{} `type:\"structure\"`",
          "8896:  FlowStatus *string `locationName:\"flowStatus\" type:\"string\" enum:\"FlowStatus\"`",
          "8897: }",
          "8900: func (s UpdateFlowOutput) String() string {",
          "8901:  return awsutil.Prettify(s)",
          "8902: }",
          "8905: func (s UpdateFlowOutput) GoString() string {",
          "8906:  return s.String()",
          "8907: }",
          "8910: func (s *UpdateFlowOutput) SetFlowStatus(v string) *UpdateFlowOutput {",
          "8911:  s.FlowStatus = &v",
          "8912:  return s",
          "8913: }",
          "8916: type ValidationException struct {",
          "8917:  _            struct{}                  `type:\"structure\"`",
          "8918:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "8920:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "8921: }",
          "8924: func (s ValidationException) String() string {",
          "8925:  return awsutil.Prettify(s)",
          "8926: }",
          "8929: func (s ValidationException) GoString() string {",
          "8930:  return s.String()",
          "8931: }",
          "8933: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "8934:  return &ValidationException{",
          "8935:   RespMetadata: v,",
          "8936:  }",
          "8937: }",
          "8940: func (s *ValidationException) Code() string {",
          "8941:  return \"ValidationException\"",
          "8942: }",
          "8945: func (s *ValidationException) Message() string {",
          "8946:  if s.Message_ != nil {",
          "8947:   return *s.Message_",
          "8948:  }",
          "8949:  return \"\"",
          "8950: }",
          "8953: func (s *ValidationException) OrigErr() error {",
          "8954:  return nil",
          "8955: }",
          "8957: func (s *ValidationException) Error() string {",
          "8958:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "8959: }",
          "8962: func (s *ValidationException) StatusCode() int {",
          "8963:  return s.RespMetadata.StatusCode",
          "8964: }",
          "8967: func (s *ValidationException) RequestID() string {",
          "8968:  return s.RespMetadata.RequestID",
          "8969: }",
          "8972: type VeevaConnectorProfileCredentials struct {",
          "8973:  _ struct{} `type:\"structure\"`",
          "8978:  Password *string `locationName:\"password\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8983:  Username *string `locationName:\"username\" type:\"string\" required:\"true\"`",
          "8984: }",
          "8987: func (s VeevaConnectorProfileCredentials) String() string {",
          "8988:  return awsutil.Prettify(s)",
          "8989: }",
          "8992: func (s VeevaConnectorProfileCredentials) GoString() string {",
          "8993:  return s.String()",
          "8994: }",
          "8997: func (s *VeevaConnectorProfileCredentials) Validate() error {",
          "8998:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileCredentials\"}",
          "8999:  if s.Password == nil {",
          "9000:   invalidParams.Add(request.NewErrParamRequired(\"Password\"))",
          "9001:  }",
          "9002:  if s.Username == nil {",
          "9003:   invalidParams.Add(request.NewErrParamRequired(\"Username\"))",
          "9004:  }",
          "9006:  if invalidParams.Len() > 0 {",
          "9007:   return invalidParams",
          "9008:  }",
          "9009:  return nil",
          "9010: }",
          "9013: func (s *VeevaConnectorProfileCredentials) SetPassword(v string) *VeevaConnectorProfileCredentials {",
          "9014:  s.Password = &v",
          "9015:  return s",
          "9016: }",
          "9019: func (s *VeevaConnectorProfileCredentials) SetUsername(v string) *VeevaConnectorProfileCredentials {",
          "9020:  s.Username = &v",
          "9021:  return s",
          "9022: }",
          "9025: type VeevaConnectorProfileProperties struct {",
          "9026:  _ struct{} `type:\"structure\"`",
          "9031:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9032: }",
          "9035: func (s VeevaConnectorProfileProperties) String() string {",
          "9036:  return awsutil.Prettify(s)",
          "9037: }",
          "9040: func (s VeevaConnectorProfileProperties) GoString() string {",
          "9041:  return s.String()",
          "9042: }",
          "9045: func (s *VeevaConnectorProfileProperties) Validate() error {",
          "9046:  invalidParams := request.ErrInvalidParams{Context: \"VeevaConnectorProfileProperties\"}",
          "9047:  if s.InstanceUrl == nil {",
          "9048:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9049:  }",
          "9051:  if invalidParams.Len() > 0 {",
          "9052:   return invalidParams",
          "9053:  }",
          "9054:  return nil",
          "9055: }",
          "9058: func (s *VeevaConnectorProfileProperties) SetInstanceUrl(v string) *VeevaConnectorProfileProperties {",
          "9059:  s.InstanceUrl = &v",
          "9060:  return s",
          "9061: }",
          "9064: type VeevaMetadata struct {",
          "9065:  _ struct{} `type:\"structure\"`",
          "9066: }",
          "9069: func (s VeevaMetadata) String() string {",
          "9070:  return awsutil.Prettify(s)",
          "9071: }",
          "9074: func (s VeevaMetadata) GoString() string {",
          "9075:  return s.String()",
          "9076: }",
          "9079: type VeevaSourceProperties struct {",
          "9080:  _ struct{} `type:\"structure\"`",
          "9085:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9086: }",
          "9089: func (s VeevaSourceProperties) String() string {",
          "9090:  return awsutil.Prettify(s)",
          "9091: }",
          "9094: func (s VeevaSourceProperties) GoString() string {",
          "9095:  return s.String()",
          "9096: }",
          "9099: func (s *VeevaSourceProperties) Validate() error {",
          "9100:  invalidParams := request.ErrInvalidParams{Context: \"VeevaSourceProperties\"}",
          "9101:  if s.Object == nil {",
          "9102:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9103:  }",
          "9105:  if invalidParams.Len() > 0 {",
          "9106:   return invalidParams",
          "9107:  }",
          "9108:  return nil",
          "9109: }",
          "9112: func (s *VeevaSourceProperties) SetObject(v string) *VeevaSourceProperties {",
          "9113:  s.Object = &v",
          "9114:  return s",
          "9115: }",
          "9118: type ZendeskConnectorProfileCredentials struct {",
          "9119:  _ struct{} `type:\"structure\"`",
          "9122:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "9127:  ClientId *string `locationName:\"clientId\" type:\"string\" required:\"true\"`",
          "9133:  ClientSecret *string `locationName:\"clientSecret\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "9137:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "9138: }",
          "9141: func (s ZendeskConnectorProfileCredentials) String() string {",
          "9142:  return awsutil.Prettify(s)",
          "9143: }",
          "9146: func (s ZendeskConnectorProfileCredentials) GoString() string {",
          "9147:  return s.String()",
          "9148: }",
          "9151: func (s *ZendeskConnectorProfileCredentials) Validate() error {",
          "9152:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileCredentials\"}",
          "9153:  if s.ClientId == nil {",
          "9154:   invalidParams.Add(request.NewErrParamRequired(\"ClientId\"))",
          "9155:  }",
          "9156:  if s.ClientSecret == nil {",
          "9157:   invalidParams.Add(request.NewErrParamRequired(\"ClientSecret\"))",
          "9158:  }",
          "9160:  if invalidParams.Len() > 0 {",
          "9161:   return invalidParams",
          "9162:  }",
          "9163:  return nil",
          "9164: }",
          "9167: func (s *ZendeskConnectorProfileCredentials) SetAccessToken(v string) *ZendeskConnectorProfileCredentials {",
          "9168:  s.AccessToken = &v",
          "9169:  return s",
          "9170: }",
          "9173: func (s *ZendeskConnectorProfileCredentials) SetClientId(v string) *ZendeskConnectorProfileCredentials {",
          "9174:  s.ClientId = &v",
          "9175:  return s",
          "9176: }",
          "9179: func (s *ZendeskConnectorProfileCredentials) SetClientSecret(v string) *ZendeskConnectorProfileCredentials {",
          "9180:  s.ClientSecret = &v",
          "9181:  return s",
          "9182: }",
          "9185: func (s *ZendeskConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *ZendeskConnectorProfileCredentials {",
          "9186:  s.OAuthRequest = v",
          "9187:  return s",
          "9188: }",
          "9191: type ZendeskConnectorProfileProperties struct {",
          "9192:  _ struct{} `type:\"structure\"`",
          "9197:  InstanceUrl *string `locationName:\"instanceUrl\" type:\"string\" required:\"true\"`",
          "9198: }",
          "9201: func (s ZendeskConnectorProfileProperties) String() string {",
          "9202:  return awsutil.Prettify(s)",
          "9203: }",
          "9206: func (s ZendeskConnectorProfileProperties) GoString() string {",
          "9207:  return s.String()",
          "9208: }",
          "9211: func (s *ZendeskConnectorProfileProperties) Validate() error {",
          "9212:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskConnectorProfileProperties\"}",
          "9213:  if s.InstanceUrl == nil {",
          "9214:   invalidParams.Add(request.NewErrParamRequired(\"InstanceUrl\"))",
          "9215:  }",
          "9217:  if invalidParams.Len() > 0 {",
          "9218:   return invalidParams",
          "9219:  }",
          "9220:  return nil",
          "9221: }",
          "9224: func (s *ZendeskConnectorProfileProperties) SetInstanceUrl(v string) *ZendeskConnectorProfileProperties {",
          "9225:  s.InstanceUrl = &v",
          "9226:  return s",
          "9227: }",
          "9230: type ZendeskMetadata struct {",
          "9231:  _ struct{} `type:\"structure\"`",
          "9234:  OAuthScopes []*string `locationName:\"oAuthScopes\" type:\"list\"`",
          "9235: }",
          "9238: func (s ZendeskMetadata) String() string {",
          "9239:  return awsutil.Prettify(s)",
          "9240: }",
          "9243: func (s ZendeskMetadata) GoString() string {",
          "9244:  return s.String()",
          "9245: }",
          "9248: func (s *ZendeskMetadata) SetOAuthScopes(v []*string) *ZendeskMetadata {",
          "9249:  s.OAuthScopes = v",
          "9250:  return s",
          "9251: }",
          "9254: type ZendeskSourceProperties struct {",
          "9255:  _ struct{} `type:\"structure\"`",
          "9260:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "9261: }",
          "9264: func (s ZendeskSourceProperties) String() string {",
          "9265:  return awsutil.Prettify(s)",
          "9266: }",
          "9269: func (s ZendeskSourceProperties) GoString() string {",
          "9270:  return s.String()",
          "9271: }",
          "9274: func (s *ZendeskSourceProperties) Validate() error {",
          "9275:  invalidParams := request.ErrInvalidParams{Context: \"ZendeskSourceProperties\"}",
          "9276:  if s.Object == nil {",
          "9277:   invalidParams.Add(request.NewErrParamRequired(\"Object\"))",
          "9278:  }",
          "9280:  if invalidParams.Len() > 0 {",
          "9281:   return invalidParams",
          "9282:  }",
          "9283:  return nil",
          "9284: }",
          "9287: func (s *ZendeskSourceProperties) SetObject(v string) *ZendeskSourceProperties {",
          "9288:  s.Object = &v",
          "9289:  return s",
          "9290: }",
          "9292: const (",
          "9294:  AggregationTypeNone = \"None\"",
          "9297:  AggregationTypeSingleFile = \"SingleFile\"",
          "9298: )",
          "9301: func AggregationType_Values() []string {",
          "9302:  return []string{",
          "9303:   AggregationTypeNone,",
          "9304:   AggregationTypeSingleFile,",
          "9305:  }",
          "9306: }",
          "9308: const (",
          "9310:  AmplitudeConnectorOperatorBetween = \"BETWEEN\"",
          "9311: )",
          "9314: func AmplitudeConnectorOperator_Values() []string {",
          "9315:  return []string{",
          "9316:   AmplitudeConnectorOperatorBetween,",
          "9317:  }",
          "9318: }",
          "9320: const (",
          "9322:  ConnectionModePublic = \"Public\"",
          "9325:  ConnectionModePrivate = \"Private\"",
          "9326: )",
          "9329: func ConnectionMode_Values() []string {",
          "9330:  return []string{",
          "9331:   ConnectionModePublic,",
          "9332:   ConnectionModePrivate,",
          "9333:  }",
          "9334: }",
          "9336: const (",
          "9338:  ConnectorTypeSalesforce = \"Salesforce\"",
          "9341:  ConnectorTypeSingular = \"Singular\"",
          "9344:  ConnectorTypeSlack = \"Slack\"",
          "9347:  ConnectorTypeRedshift = \"Redshift\"",
          "9350:  ConnectorTypeS3 = \"S3\"",
          "9353:  ConnectorTypeMarketo = \"Marketo\"",
          "9356:  ConnectorTypeGoogleanalytics = \"Googleanalytics\"",
          "9359:  ConnectorTypeZendesk = \"Zendesk\"",
          "9362:  ConnectorTypeServicenow = \"Servicenow\"",
          "9365:  ConnectorTypeDatadog = \"Datadog\"",
          "9368:  ConnectorTypeTrendmicro = \"Trendmicro\"",
          "9371:  ConnectorTypeSnowflake = \"Snowflake\"",
          "9374:  ConnectorTypeDynatrace = \"Dynatrace\"",
          "9377:  ConnectorTypeInfornexus = \"Infornexus\"",
          "9380:  ConnectorTypeAmplitude = \"Amplitude\"",
          "9383:  ConnectorTypeVeeva = \"Veeva\"",
          "9386:  ConnectorTypeEventBridge = \"EventBridge\"",
          "9387: )",
          "9390: func ConnectorType_Values() []string {",
          "9391:  return []string{",
          "9392:   ConnectorTypeSalesforce,",
          "9393:   ConnectorTypeSingular,",
          "9394:   ConnectorTypeSlack,",
          "9395:   ConnectorTypeRedshift,",
          "9396:   ConnectorTypeS3,",
          "9397:   ConnectorTypeMarketo,",
          "9398:   ConnectorTypeGoogleanalytics,",
          "9399:   ConnectorTypeZendesk,",
          "9400:   ConnectorTypeServicenow,",
          "9401:   ConnectorTypeDatadog,",
          "9402:   ConnectorTypeTrendmicro,",
          "9403:   ConnectorTypeSnowflake,",
          "9404:   ConnectorTypeDynatrace,",
          "9405:   ConnectorTypeInfornexus,",
          "9406:   ConnectorTypeAmplitude,",
          "9407:   ConnectorTypeVeeva,",
          "9408:   ConnectorTypeEventBridge,",
          "9409:  }",
          "9410: }",
          "9412: const (",
          "9414:  DataPullModeIncremental = \"Incremental\"",
          "9417:  DataPullModeComplete = \"Complete\"",
          "9418: )",
          "9421: func DataPullMode_Values() []string {",
          "9422:  return []string{",
          "9423:   DataPullModeIncremental,",
          "9424:   DataPullModeComplete,",
          "9425:  }",
          "9426: }",
          "9428: const (",
          "9430:  DatadogConnectorOperatorProjection = \"PROJECTION\"",
          "9433:  DatadogConnectorOperatorBetween = \"BETWEEN\"",
          "9436:  DatadogConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9439:  DatadogConnectorOperatorAddition = \"ADDITION\"",
          "9442:  DatadogConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9445:  DatadogConnectorOperatorDivision = \"DIVISION\"",
          "9448:  DatadogConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9451:  DatadogConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9454:  DatadogConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9457:  DatadogConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9460:  DatadogConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9463:  DatadogConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9466:  DatadogConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9469:  DatadogConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9472:  DatadogConnectorOperatorNoOp = \"NO_OP\"",
          "9473: )",
          "9476: func DatadogConnectorOperator_Values() []string {",
          "9477:  return []string{",
          "9478:   DatadogConnectorOperatorProjection,",
          "9479:   DatadogConnectorOperatorBetween,",
          "9480:   DatadogConnectorOperatorEqualTo,",
          "9481:   DatadogConnectorOperatorAddition,",
          "9482:   DatadogConnectorOperatorMultiplication,",
          "9483:   DatadogConnectorOperatorDivision,",
          "9484:   DatadogConnectorOperatorSubtraction,",
          "9485:   DatadogConnectorOperatorMaskAll,",
          "9486:   DatadogConnectorOperatorMaskFirstN,",
          "9487:   DatadogConnectorOperatorMaskLastN,",
          "9488:   DatadogConnectorOperatorValidateNonNull,",
          "9489:   DatadogConnectorOperatorValidateNonZero,",
          "9490:   DatadogConnectorOperatorValidateNonNegative,",
          "9491:   DatadogConnectorOperatorValidateNumeric,",
          "9492:   DatadogConnectorOperatorNoOp,",
          "9493:  }",
          "9494: }",
          "9496: const (",
          "9498:  DynatraceConnectorOperatorProjection = \"PROJECTION\"",
          "9501:  DynatraceConnectorOperatorBetween = \"BETWEEN\"",
          "9504:  DynatraceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9507:  DynatraceConnectorOperatorAddition = \"ADDITION\"",
          "9510:  DynatraceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9513:  DynatraceConnectorOperatorDivision = \"DIVISION\"",
          "9516:  DynatraceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9519:  DynatraceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9522:  DynatraceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9525:  DynatraceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9528:  DynatraceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9531:  DynatraceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9534:  DynatraceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9537:  DynatraceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9540:  DynatraceConnectorOperatorNoOp = \"NO_OP\"",
          "9541: )",
          "9544: func DynatraceConnectorOperator_Values() []string {",
          "9545:  return []string{",
          "9546:   DynatraceConnectorOperatorProjection,",
          "9547:   DynatraceConnectorOperatorBetween,",
          "9548:   DynatraceConnectorOperatorEqualTo,",
          "9549:   DynatraceConnectorOperatorAddition,",
          "9550:   DynatraceConnectorOperatorMultiplication,",
          "9551:   DynatraceConnectorOperatorDivision,",
          "9552:   DynatraceConnectorOperatorSubtraction,",
          "9553:   DynatraceConnectorOperatorMaskAll,",
          "9554:   DynatraceConnectorOperatorMaskFirstN,",
          "9555:   DynatraceConnectorOperatorMaskLastN,",
          "9556:   DynatraceConnectorOperatorValidateNonNull,",
          "9557:   DynatraceConnectorOperatorValidateNonZero,",
          "9558:   DynatraceConnectorOperatorValidateNonNegative,",
          "9559:   DynatraceConnectorOperatorValidateNumeric,",
          "9560:   DynatraceConnectorOperatorNoOp,",
          "9561:  }",
          "9562: }",
          "9564: const (",
          "9566:  ExecutionStatusInProgress = \"InProgress\"",
          "9569:  ExecutionStatusSuccessful = \"Successful\"",
          "9572:  ExecutionStatusError = \"Error\"",
          "9573: )",
          "9576: func ExecutionStatus_Values() []string {",
          "9577:  return []string{",
          "9578:   ExecutionStatusInProgress,",
          "9579:   ExecutionStatusSuccessful,",
          "9580:   ExecutionStatusError,",
          "9581:  }",
          "9582: }",
          "9584: const (",
          "9586:  FileTypeCsv = \"CSV\"",
          "9589:  FileTypeJson = \"JSON\"",
          "9592:  FileTypeParquet = \"PARQUET\"",
          "9593: )",
          "9596: func FileType_Values() []string {",
          "9597:  return []string{",
          "9598:   FileTypeCsv,",
          "9599:   FileTypeJson,",
          "9600:   FileTypeParquet,",
          "9601:  }",
          "9602: }",
          "9604: const (",
          "9606:  FlowStatusActive = \"Active\"",
          "9609:  FlowStatusDeprecated = \"Deprecated\"",
          "9612:  FlowStatusDeleted = \"Deleted\"",
          "9615:  FlowStatusDraft = \"Draft\"",
          "9618:  FlowStatusErrored = \"Errored\"",
          "9621:  FlowStatusSuspended = \"Suspended\"",
          "9622: )",
          "9625: func FlowStatus_Values() []string {",
          "9626:  return []string{",
          "9627:   FlowStatusActive,",
          "9628:   FlowStatusDeprecated,",
          "9629:   FlowStatusDeleted,",
          "9630:   FlowStatusDraft,",
          "9631:   FlowStatusErrored,",
          "9632:   FlowStatusSuspended,",
          "9633:  }",
          "9634: }",
          "9636: const (",
          "9638:  GoogleAnalyticsConnectorOperatorProjection = \"PROJECTION\"",
          "9641:  GoogleAnalyticsConnectorOperatorBetween = \"BETWEEN\"",
          "9642: )",
          "9645: func GoogleAnalyticsConnectorOperator_Values() []string {",
          "9646:  return []string{",
          "9647:   GoogleAnalyticsConnectorOperatorProjection,",
          "9648:   GoogleAnalyticsConnectorOperatorBetween,",
          "9649:  }",
          "9650: }",
          "9652: const (",
          "9654:  InforNexusConnectorOperatorProjection = \"PROJECTION\"",
          "9657:  InforNexusConnectorOperatorBetween = \"BETWEEN\"",
          "9660:  InforNexusConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "9663:  InforNexusConnectorOperatorAddition = \"ADDITION\"",
          "9666:  InforNexusConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9669:  InforNexusConnectorOperatorDivision = \"DIVISION\"",
          "9672:  InforNexusConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9675:  InforNexusConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9678:  InforNexusConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9681:  InforNexusConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9684:  InforNexusConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9687:  InforNexusConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9690:  InforNexusConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9693:  InforNexusConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9696:  InforNexusConnectorOperatorNoOp = \"NO_OP\"",
          "9697: )",
          "9700: func InforNexusConnectorOperator_Values() []string {",
          "9701:  return []string{",
          "9702:   InforNexusConnectorOperatorProjection,",
          "9703:   InforNexusConnectorOperatorBetween,",
          "9704:   InforNexusConnectorOperatorEqualTo,",
          "9705:   InforNexusConnectorOperatorAddition,",
          "9706:   InforNexusConnectorOperatorMultiplication,",
          "9707:   InforNexusConnectorOperatorDivision,",
          "9708:   InforNexusConnectorOperatorSubtraction,",
          "9709:   InforNexusConnectorOperatorMaskAll,",
          "9710:   InforNexusConnectorOperatorMaskFirstN,",
          "9711:   InforNexusConnectorOperatorMaskLastN,",
          "9712:   InforNexusConnectorOperatorValidateNonNull,",
          "9713:   InforNexusConnectorOperatorValidateNonZero,",
          "9714:   InforNexusConnectorOperatorValidateNonNegative,",
          "9715:   InforNexusConnectorOperatorValidateNumeric,",
          "9716:   InforNexusConnectorOperatorNoOp,",
          "9717:  }",
          "9718: }",
          "9720: const (",
          "9722:  MarketoConnectorOperatorProjection = \"PROJECTION\"",
          "9725:  MarketoConnectorOperatorLessThan = \"LESS_THAN\"",
          "9728:  MarketoConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "9731:  MarketoConnectorOperatorBetween = \"BETWEEN\"",
          "9734:  MarketoConnectorOperatorAddition = \"ADDITION\"",
          "9737:  MarketoConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "9740:  MarketoConnectorOperatorDivision = \"DIVISION\"",
          "9743:  MarketoConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "9746:  MarketoConnectorOperatorMaskAll = \"MASK_ALL\"",
          "9749:  MarketoConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9752:  MarketoConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "9755:  MarketoConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9758:  MarketoConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9761:  MarketoConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9764:  MarketoConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9767:  MarketoConnectorOperatorNoOp = \"NO_OP\"",
          "9768: )",
          "9771: func MarketoConnectorOperator_Values() []string {",
          "9772:  return []string{",
          "9773:   MarketoConnectorOperatorProjection,",
          "9774:   MarketoConnectorOperatorLessThan,",
          "9775:   MarketoConnectorOperatorGreaterThan,",
          "9776:   MarketoConnectorOperatorBetween,",
          "9777:   MarketoConnectorOperatorAddition,",
          "9778:   MarketoConnectorOperatorMultiplication,",
          "9779:   MarketoConnectorOperatorDivision,",
          "9780:   MarketoConnectorOperatorSubtraction,",
          "9781:   MarketoConnectorOperatorMaskAll,",
          "9782:   MarketoConnectorOperatorMaskFirstN,",
          "9783:   MarketoConnectorOperatorMaskLastN,",
          "9784:   MarketoConnectorOperatorValidateNonNull,",
          "9785:   MarketoConnectorOperatorValidateNonZero,",
          "9786:   MarketoConnectorOperatorValidateNonNegative,",
          "9787:   MarketoConnectorOperatorValidateNumeric,",
          "9788:   MarketoConnectorOperatorNoOp,",
          "9789:  }",
          "9790: }",
          "9792: const (",
          "9794:  OperatorProjection = \"PROJECTION\"",
          "9797:  OperatorLessThan = \"LESS_THAN\"",
          "9800:  OperatorGreaterThan = \"GREATER_THAN\"",
          "9803:  OperatorContains = \"CONTAINS\"",
          "9806:  OperatorBetween = \"BETWEEN\"",
          "9809:  OperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "9812:  OperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "9815:  OperatorEqualTo = \"EQUAL_TO\"",
          "9818:  OperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "9821:  OperatorAddition = \"ADDITION\"",
          "9824:  OperatorMultiplication = \"MULTIPLICATION\"",
          "9827:  OperatorDivision = \"DIVISION\"",
          "9830:  OperatorSubtraction = \"SUBTRACTION\"",
          "9833:  OperatorMaskAll = \"MASK_ALL\"",
          "9836:  OperatorMaskFirstN = \"MASK_FIRST_N\"",
          "9839:  OperatorMaskLastN = \"MASK_LAST_N\"",
          "9842:  OperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "9845:  OperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "9848:  OperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "9851:  OperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "9854:  OperatorNoOp = \"NO_OP\"",
          "9855: )",
          "9858: func Operator_Values() []string {",
          "9859:  return []string{",
          "9860:   OperatorProjection,",
          "9861:   OperatorLessThan,",
          "9862:   OperatorGreaterThan,",
          "9863:   OperatorContains,",
          "9864:   OperatorBetween,",
          "9865:   OperatorLessThanOrEqualTo,",
          "9866:   OperatorGreaterThanOrEqualTo,",
          "9867:   OperatorEqualTo,",
          "9868:   OperatorNotEqualTo,",
          "9869:   OperatorAddition,",
          "9870:   OperatorMultiplication,",
          "9871:   OperatorDivision,",
          "9872:   OperatorSubtraction,",
          "9873:   OperatorMaskAll,",
          "9874:   OperatorMaskFirstN,",
          "9875:   OperatorMaskLastN,",
          "9876:   OperatorValidateNonNull,",
          "9877:   OperatorValidateNonZero,",
          "9878:   OperatorValidateNonNegative,",
          "9879:   OperatorValidateNumeric,",
          "9880:   OperatorNoOp,",
          "9881:  }",
          "9882: }",
          "9884: const (",
          "9886:  OperatorPropertiesKeysValue = \"VALUE\"",
          "9889:  OperatorPropertiesKeysValues = \"VALUES\"",
          "9892:  OperatorPropertiesKeysDataType = \"DATA_TYPE\"",
          "9895:  OperatorPropertiesKeysUpperBound = \"UPPER_BOUND\"",
          "9898:  OperatorPropertiesKeysLowerBound = \"LOWER_BOUND\"",
          "9901:  OperatorPropertiesKeysSourceDataType = \"SOURCE_DATA_TYPE\"",
          "9904:  OperatorPropertiesKeysDestinationDataType = \"DESTINATION_DATA_TYPE\"",
          "9907:  OperatorPropertiesKeysValidationAction = \"VALIDATION_ACTION\"",
          "9910:  OperatorPropertiesKeysMaskValue = \"MASK_VALUE\"",
          "9913:  OperatorPropertiesKeysMaskLength = \"MASK_LENGTH\"",
          "9916:  OperatorPropertiesKeysTruncateLength = \"TRUNCATE_LENGTH\"",
          "9919:  OperatorPropertiesKeysMathOperationFieldsOrder = \"MATH_OPERATION_FIELDS_ORDER\"",
          "9922:  OperatorPropertiesKeysConcatFormat = \"CONCAT_FORMAT\"",
          "9925:  OperatorPropertiesKeysSubfieldCategoryMap = \"SUBFIELD_CATEGORY_MAP\"",
          "9926: )",
          "9929: func OperatorPropertiesKeys_Values() []string {",
          "9930:  return []string{",
          "9931:   OperatorPropertiesKeysValue,",
          "9932:   OperatorPropertiesKeysValues,",
          "9933:   OperatorPropertiesKeysDataType,",
          "9934:   OperatorPropertiesKeysUpperBound,",
          "9935:   OperatorPropertiesKeysLowerBound,",
          "9936:   OperatorPropertiesKeysSourceDataType,",
          "9937:   OperatorPropertiesKeysDestinationDataType,",
          "9938:   OperatorPropertiesKeysValidationAction,",
          "9939:   OperatorPropertiesKeysMaskValue,",
          "9940:   OperatorPropertiesKeysMaskLength,",
          "9941:   OperatorPropertiesKeysTruncateLength,",
          "9942:   OperatorPropertiesKeysMathOperationFieldsOrder,",
          "9943:   OperatorPropertiesKeysConcatFormat,",
          "9944:   OperatorPropertiesKeysSubfieldCategoryMap,",
          "9945:  }",
          "9946: }",
          "9948: const (",
          "9950:  PrefixFormatYear = \"YEAR\"",
          "9953:  PrefixFormatMonth = \"MONTH\"",
          "9956:  PrefixFormatDay = \"DAY\"",
          "9959:  PrefixFormatHour = \"HOUR\"",
          "9962:  PrefixFormatMinute = \"MINUTE\"",
          "9963: )",
          "9966: func PrefixFormat_Values() []string {",
          "9967:  return []string{",
          "9968:   PrefixFormatYear,",
          "9969:   PrefixFormatMonth,",
          "9970:   PrefixFormatDay,",
          "9971:   PrefixFormatHour,",
          "9972:   PrefixFormatMinute,",
          "9973:  }",
          "9974: }",
          "9976: const (",
          "9978:  PrefixTypeFilename = \"FILENAME\"",
          "9981:  PrefixTypePath = \"PATH\"",
          "9984:  PrefixTypePathAndFilename = \"PATH_AND_FILENAME\"",
          "9985: )",
          "9988: func PrefixType_Values() []string {",
          "9989:  return []string{",
          "9990:   PrefixTypeFilename,",
          "9991:   PrefixTypePath,",
          "9992:   PrefixTypePathAndFilename,",
          "9993:  }",
          "9994: }",
          "9996: const (",
          "9998:  S3ConnectorOperatorProjection = \"PROJECTION\"",
          "10001:  S3ConnectorOperatorLessThan = \"LESS_THAN\"",
          "10004:  S3ConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10007:  S3ConnectorOperatorBetween = \"BETWEEN\"",
          "10010:  S3ConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10013:  S3ConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10016:  S3ConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10019:  S3ConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10022:  S3ConnectorOperatorAddition = \"ADDITION\"",
          "10025:  S3ConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10028:  S3ConnectorOperatorDivision = \"DIVISION\"",
          "10031:  S3ConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10034:  S3ConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10037:  S3ConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10040:  S3ConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10043:  S3ConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10046:  S3ConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10049:  S3ConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10052:  S3ConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10055:  S3ConnectorOperatorNoOp = \"NO_OP\"",
          "10056: )",
          "10059: func S3ConnectorOperator_Values() []string {",
          "10060:  return []string{",
          "10061:   S3ConnectorOperatorProjection,",
          "10062:   S3ConnectorOperatorLessThan,",
          "10063:   S3ConnectorOperatorGreaterThan,",
          "10064:   S3ConnectorOperatorBetween,",
          "10065:   S3ConnectorOperatorLessThanOrEqualTo,",
          "10066:   S3ConnectorOperatorGreaterThanOrEqualTo,",
          "10067:   S3ConnectorOperatorEqualTo,",
          "10068:   S3ConnectorOperatorNotEqualTo,",
          "10069:   S3ConnectorOperatorAddition,",
          "10070:   S3ConnectorOperatorMultiplication,",
          "10071:   S3ConnectorOperatorDivision,",
          "10072:   S3ConnectorOperatorSubtraction,",
          "10073:   S3ConnectorOperatorMaskAll,",
          "10074:   S3ConnectorOperatorMaskFirstN,",
          "10075:   S3ConnectorOperatorMaskLastN,",
          "10076:   S3ConnectorOperatorValidateNonNull,",
          "10077:   S3ConnectorOperatorValidateNonZero,",
          "10078:   S3ConnectorOperatorValidateNonNegative,",
          "10079:   S3ConnectorOperatorValidateNumeric,",
          "10080:   S3ConnectorOperatorNoOp,",
          "10081:  }",
          "10082: }",
          "10084: const (",
          "10086:  SalesforceConnectorOperatorProjection = \"PROJECTION\"",
          "10089:  SalesforceConnectorOperatorLessThan = \"LESS_THAN\"",
          "10092:  SalesforceConnectorOperatorContains = \"CONTAINS\"",
          "10095:  SalesforceConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10098:  SalesforceConnectorOperatorBetween = \"BETWEEN\"",
          "10101:  SalesforceConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10104:  SalesforceConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10107:  SalesforceConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10110:  SalesforceConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10113:  SalesforceConnectorOperatorAddition = \"ADDITION\"",
          "10116:  SalesforceConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10119:  SalesforceConnectorOperatorDivision = \"DIVISION\"",
          "10122:  SalesforceConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10125:  SalesforceConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10128:  SalesforceConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10131:  SalesforceConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10134:  SalesforceConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10137:  SalesforceConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10140:  SalesforceConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10143:  SalesforceConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10146:  SalesforceConnectorOperatorNoOp = \"NO_OP\"",
          "10147: )",
          "10150: func SalesforceConnectorOperator_Values() []string {",
          "10151:  return []string{",
          "10152:   SalesforceConnectorOperatorProjection,",
          "10153:   SalesforceConnectorOperatorLessThan,",
          "10154:   SalesforceConnectorOperatorContains,",
          "10155:   SalesforceConnectorOperatorGreaterThan,",
          "10156:   SalesforceConnectorOperatorBetween,",
          "10157:   SalesforceConnectorOperatorLessThanOrEqualTo,",
          "10158:   SalesforceConnectorOperatorGreaterThanOrEqualTo,",
          "10159:   SalesforceConnectorOperatorEqualTo,",
          "10160:   SalesforceConnectorOperatorNotEqualTo,",
          "10161:   SalesforceConnectorOperatorAddition,",
          "10162:   SalesforceConnectorOperatorMultiplication,",
          "10163:   SalesforceConnectorOperatorDivision,",
          "10164:   SalesforceConnectorOperatorSubtraction,",
          "10165:   SalesforceConnectorOperatorMaskAll,",
          "10166:   SalesforceConnectorOperatorMaskFirstN,",
          "10167:   SalesforceConnectorOperatorMaskLastN,",
          "10168:   SalesforceConnectorOperatorValidateNonNull,",
          "10169:   SalesforceConnectorOperatorValidateNonZero,",
          "10170:   SalesforceConnectorOperatorValidateNonNegative,",
          "10171:   SalesforceConnectorOperatorValidateNumeric,",
          "10172:   SalesforceConnectorOperatorNoOp,",
          "10173:  }",
          "10174: }",
          "10176: const (",
          "10178:  ScheduleFrequencyTypeByminute = \"BYMINUTE\"",
          "10181:  ScheduleFrequencyTypeHourly = \"HOURLY\"",
          "10184:  ScheduleFrequencyTypeDaily = \"DAILY\"",
          "10187:  ScheduleFrequencyTypeWeekly = \"WEEKLY\"",
          "10190:  ScheduleFrequencyTypeMonthly = \"MONTHLY\"",
          "10193:  ScheduleFrequencyTypeOnce = \"ONCE\"",
          "10194: )",
          "10197: func ScheduleFrequencyType_Values() []string {",
          "10198:  return []string{",
          "10199:   ScheduleFrequencyTypeByminute,",
          "10200:   ScheduleFrequencyTypeHourly,",
          "10201:   ScheduleFrequencyTypeDaily,",
          "10202:   ScheduleFrequencyTypeWeekly,",
          "10203:   ScheduleFrequencyTypeMonthly,",
          "10204:   ScheduleFrequencyTypeOnce,",
          "10205:  }",
          "10206: }",
          "10208: const (",
          "10210:  ServiceNowConnectorOperatorProjection = \"PROJECTION\"",
          "10213:  ServiceNowConnectorOperatorContains = \"CONTAINS\"",
          "10216:  ServiceNowConnectorOperatorLessThan = \"LESS_THAN\"",
          "10219:  ServiceNowConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10222:  ServiceNowConnectorOperatorBetween = \"BETWEEN\"",
          "10225:  ServiceNowConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10228:  ServiceNowConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10231:  ServiceNowConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10234:  ServiceNowConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10237:  ServiceNowConnectorOperatorAddition = \"ADDITION\"",
          "10240:  ServiceNowConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10243:  ServiceNowConnectorOperatorDivision = \"DIVISION\"",
          "10246:  ServiceNowConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10249:  ServiceNowConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10252:  ServiceNowConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10255:  ServiceNowConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10258:  ServiceNowConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10261:  ServiceNowConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10264:  ServiceNowConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10267:  ServiceNowConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10270:  ServiceNowConnectorOperatorNoOp = \"NO_OP\"",
          "10271: )",
          "10274: func ServiceNowConnectorOperator_Values() []string {",
          "10275:  return []string{",
          "10276:   ServiceNowConnectorOperatorProjection,",
          "10277:   ServiceNowConnectorOperatorContains,",
          "10278:   ServiceNowConnectorOperatorLessThan,",
          "10279:   ServiceNowConnectorOperatorGreaterThan,",
          "10280:   ServiceNowConnectorOperatorBetween,",
          "10281:   ServiceNowConnectorOperatorLessThanOrEqualTo,",
          "10282:   ServiceNowConnectorOperatorGreaterThanOrEqualTo,",
          "10283:   ServiceNowConnectorOperatorEqualTo,",
          "10284:   ServiceNowConnectorOperatorNotEqualTo,",
          "10285:   ServiceNowConnectorOperatorAddition,",
          "10286:   ServiceNowConnectorOperatorMultiplication,",
          "10287:   ServiceNowConnectorOperatorDivision,",
          "10288:   ServiceNowConnectorOperatorSubtraction,",
          "10289:   ServiceNowConnectorOperatorMaskAll,",
          "10290:   ServiceNowConnectorOperatorMaskFirstN,",
          "10291:   ServiceNowConnectorOperatorMaskLastN,",
          "10292:   ServiceNowConnectorOperatorValidateNonNull,",
          "10293:   ServiceNowConnectorOperatorValidateNonZero,",
          "10294:   ServiceNowConnectorOperatorValidateNonNegative,",
          "10295:   ServiceNowConnectorOperatorValidateNumeric,",
          "10296:   ServiceNowConnectorOperatorNoOp,",
          "10297:  }",
          "10298: }",
          "10300: const (",
          "10302:  SingularConnectorOperatorProjection = \"PROJECTION\"",
          "10305:  SingularConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10308:  SingularConnectorOperatorAddition = \"ADDITION\"",
          "10311:  SingularConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10314:  SingularConnectorOperatorDivision = \"DIVISION\"",
          "10317:  SingularConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10320:  SingularConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10323:  SingularConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10326:  SingularConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10329:  SingularConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10332:  SingularConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10335:  SingularConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10338:  SingularConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10341:  SingularConnectorOperatorNoOp = \"NO_OP\"",
          "10342: )",
          "10345: func SingularConnectorOperator_Values() []string {",
          "10346:  return []string{",
          "10347:   SingularConnectorOperatorProjection,",
          "10348:   SingularConnectorOperatorEqualTo,",
          "10349:   SingularConnectorOperatorAddition,",
          "10350:   SingularConnectorOperatorMultiplication,",
          "10351:   SingularConnectorOperatorDivision,",
          "10352:   SingularConnectorOperatorSubtraction,",
          "10353:   SingularConnectorOperatorMaskAll,",
          "10354:   SingularConnectorOperatorMaskFirstN,",
          "10355:   SingularConnectorOperatorMaskLastN,",
          "10356:   SingularConnectorOperatorValidateNonNull,",
          "10357:   SingularConnectorOperatorValidateNonZero,",
          "10358:   SingularConnectorOperatorValidateNonNegative,",
          "10359:   SingularConnectorOperatorValidateNumeric,",
          "10360:   SingularConnectorOperatorNoOp,",
          "10361:  }",
          "10362: }",
          "10364: const (",
          "10366:  SlackConnectorOperatorProjection = \"PROJECTION\"",
          "10369:  SlackConnectorOperatorLessThan = \"LESS_THAN\"",
          "10372:  SlackConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10375:  SlackConnectorOperatorBetween = \"BETWEEN\"",
          "10378:  SlackConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10381:  SlackConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10384:  SlackConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10387:  SlackConnectorOperatorAddition = \"ADDITION\"",
          "10390:  SlackConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10393:  SlackConnectorOperatorDivision = \"DIVISION\"",
          "10396:  SlackConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10399:  SlackConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10402:  SlackConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10405:  SlackConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10408:  SlackConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10411:  SlackConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10414:  SlackConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10417:  SlackConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10420:  SlackConnectorOperatorNoOp = \"NO_OP\"",
          "10421: )",
          "10424: func SlackConnectorOperator_Values() []string {",
          "10425:  return []string{",
          "10426:   SlackConnectorOperatorProjection,",
          "10427:   SlackConnectorOperatorLessThan,",
          "10428:   SlackConnectorOperatorGreaterThan,",
          "10429:   SlackConnectorOperatorBetween,",
          "10430:   SlackConnectorOperatorLessThanOrEqualTo,",
          "10431:   SlackConnectorOperatorGreaterThanOrEqualTo,",
          "10432:   SlackConnectorOperatorEqualTo,",
          "10433:   SlackConnectorOperatorAddition,",
          "10434:   SlackConnectorOperatorMultiplication,",
          "10435:   SlackConnectorOperatorDivision,",
          "10436:   SlackConnectorOperatorSubtraction,",
          "10437:   SlackConnectorOperatorMaskAll,",
          "10438:   SlackConnectorOperatorMaskFirstN,",
          "10439:   SlackConnectorOperatorMaskLastN,",
          "10440:   SlackConnectorOperatorValidateNonNull,",
          "10441:   SlackConnectorOperatorValidateNonZero,",
          "10442:   SlackConnectorOperatorValidateNonNegative,",
          "10443:   SlackConnectorOperatorValidateNumeric,",
          "10444:   SlackConnectorOperatorNoOp,",
          "10445:  }",
          "10446: }",
          "10448: const (",
          "10450:  TaskTypeArithmetic = \"Arithmetic\"",
          "10453:  TaskTypeFilter = \"Filter\"",
          "10456:  TaskTypeMap = \"Map\"",
          "10459:  TaskTypeMask = \"Mask\"",
          "10462:  TaskTypeMerge = \"Merge\"",
          "10465:  TaskTypeTruncate = \"Truncate\"",
          "10468:  TaskTypeValidate = \"Validate\"",
          "10469: )",
          "10472: func TaskType_Values() []string {",
          "10473:  return []string{",
          "10474:   TaskTypeArithmetic,",
          "10475:   TaskTypeFilter,",
          "10476:   TaskTypeMap,",
          "10477:   TaskTypeMask,",
          "10478:   TaskTypeMerge,",
          "10479:   TaskTypeTruncate,",
          "10480:   TaskTypeValidate,",
          "10481:  }",
          "10482: }",
          "10484: const (",
          "10486:  TrendmicroConnectorOperatorProjection = \"PROJECTION\"",
          "10489:  TrendmicroConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10492:  TrendmicroConnectorOperatorAddition = \"ADDITION\"",
          "10495:  TrendmicroConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10498:  TrendmicroConnectorOperatorDivision = \"DIVISION\"",
          "10501:  TrendmicroConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10504:  TrendmicroConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10507:  TrendmicroConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10510:  TrendmicroConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10513:  TrendmicroConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10516:  TrendmicroConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10519:  TrendmicroConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10522:  TrendmicroConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10525:  TrendmicroConnectorOperatorNoOp = \"NO_OP\"",
          "10526: )",
          "10529: func TrendmicroConnectorOperator_Values() []string {",
          "10530:  return []string{",
          "10531:   TrendmicroConnectorOperatorProjection,",
          "10532:   TrendmicroConnectorOperatorEqualTo,",
          "10533:   TrendmicroConnectorOperatorAddition,",
          "10534:   TrendmicroConnectorOperatorMultiplication,",
          "10535:   TrendmicroConnectorOperatorDivision,",
          "10536:   TrendmicroConnectorOperatorSubtraction,",
          "10537:   TrendmicroConnectorOperatorMaskAll,",
          "10538:   TrendmicroConnectorOperatorMaskFirstN,",
          "10539:   TrendmicroConnectorOperatorMaskLastN,",
          "10540:   TrendmicroConnectorOperatorValidateNonNull,",
          "10541:   TrendmicroConnectorOperatorValidateNonZero,",
          "10542:   TrendmicroConnectorOperatorValidateNonNegative,",
          "10543:   TrendmicroConnectorOperatorValidateNumeric,",
          "10544:   TrendmicroConnectorOperatorNoOp,",
          "10545:  }",
          "10546: }",
          "10548: const (",
          "10550:  TriggerTypeScheduled = \"Scheduled\"",
          "10553:  TriggerTypeEvent = \"Event\"",
          "10556:  TriggerTypeOnDemand = \"OnDemand\"",
          "10557: )",
          "10560: func TriggerType_Values() []string {",
          "10561:  return []string{",
          "10562:   TriggerTypeScheduled,",
          "10563:   TriggerTypeEvent,",
          "10564:   TriggerTypeOnDemand,",
          "10565:  }",
          "10566: }",
          "10568: const (",
          "10570:  VeevaConnectorOperatorProjection = \"PROJECTION\"",
          "10573:  VeevaConnectorOperatorLessThan = \"LESS_THAN\"",
          "10576:  VeevaConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10579:  VeevaConnectorOperatorContains = \"CONTAINS\"",
          "10582:  VeevaConnectorOperatorBetween = \"BETWEEN\"",
          "10585:  VeevaConnectorOperatorLessThanOrEqualTo = \"LESS_THAN_OR_EQUAL_TO\"",
          "10588:  VeevaConnectorOperatorGreaterThanOrEqualTo = \"GREATER_THAN_OR_EQUAL_TO\"",
          "10591:  VeevaConnectorOperatorEqualTo = \"EQUAL_TO\"",
          "10594:  VeevaConnectorOperatorNotEqualTo = \"NOT_EQUAL_TO\"",
          "10597:  VeevaConnectorOperatorAddition = \"ADDITION\"",
          "10600:  VeevaConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10603:  VeevaConnectorOperatorDivision = \"DIVISION\"",
          "10606:  VeevaConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10609:  VeevaConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10612:  VeevaConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10615:  VeevaConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10618:  VeevaConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10621:  VeevaConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10624:  VeevaConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10627:  VeevaConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10630:  VeevaConnectorOperatorNoOp = \"NO_OP\"",
          "10631: )",
          "10634: func VeevaConnectorOperator_Values() []string {",
          "10635:  return []string{",
          "10636:   VeevaConnectorOperatorProjection,",
          "10637:   VeevaConnectorOperatorLessThan,",
          "10638:   VeevaConnectorOperatorGreaterThan,",
          "10639:   VeevaConnectorOperatorContains,",
          "10640:   VeevaConnectorOperatorBetween,",
          "10641:   VeevaConnectorOperatorLessThanOrEqualTo,",
          "10642:   VeevaConnectorOperatorGreaterThanOrEqualTo,",
          "10643:   VeevaConnectorOperatorEqualTo,",
          "10644:   VeevaConnectorOperatorNotEqualTo,",
          "10645:   VeevaConnectorOperatorAddition,",
          "10646:   VeevaConnectorOperatorMultiplication,",
          "10647:   VeevaConnectorOperatorDivision,",
          "10648:   VeevaConnectorOperatorSubtraction,",
          "10649:   VeevaConnectorOperatorMaskAll,",
          "10650:   VeevaConnectorOperatorMaskFirstN,",
          "10651:   VeevaConnectorOperatorMaskLastN,",
          "10652:   VeevaConnectorOperatorValidateNonNull,",
          "10653:   VeevaConnectorOperatorValidateNonZero,",
          "10654:   VeevaConnectorOperatorValidateNonNegative,",
          "10655:   VeevaConnectorOperatorValidateNumeric,",
          "10656:   VeevaConnectorOperatorNoOp,",
          "10657:  }",
          "10658: }",
          "10660: const (",
          "10662:  ZendeskConnectorOperatorProjection = \"PROJECTION\"",
          "10665:  ZendeskConnectorOperatorGreaterThan = \"GREATER_THAN\"",
          "10668:  ZendeskConnectorOperatorAddition = \"ADDITION\"",
          "10671:  ZendeskConnectorOperatorMultiplication = \"MULTIPLICATION\"",
          "10674:  ZendeskConnectorOperatorDivision = \"DIVISION\"",
          "10677:  ZendeskConnectorOperatorSubtraction = \"SUBTRACTION\"",
          "10680:  ZendeskConnectorOperatorMaskAll = \"MASK_ALL\"",
          "10683:  ZendeskConnectorOperatorMaskFirstN = \"MASK_FIRST_N\"",
          "10686:  ZendeskConnectorOperatorMaskLastN = \"MASK_LAST_N\"",
          "10689:  ZendeskConnectorOperatorValidateNonNull = \"VALIDATE_NON_NULL\"",
          "10692:  ZendeskConnectorOperatorValidateNonZero = \"VALIDATE_NON_ZERO\"",
          "10695:  ZendeskConnectorOperatorValidateNonNegative = \"VALIDATE_NON_NEGATIVE\"",
          "10698:  ZendeskConnectorOperatorValidateNumeric = \"VALIDATE_NUMERIC\"",
          "10701:  ZendeskConnectorOperatorNoOp = \"NO_OP\"",
          "10702: )",
          "10705: func ZendeskConnectorOperator_Values() []string {",
          "10706:  return []string{",
          "10707:   ZendeskConnectorOperatorProjection,",
          "10708:   ZendeskConnectorOperatorGreaterThan,",
          "10709:   ZendeskConnectorOperatorAddition,",
          "10710:   ZendeskConnectorOperatorMultiplication,",
          "10711:   ZendeskConnectorOperatorDivision,",
          "10712:   ZendeskConnectorOperatorSubtraction,",
          "10713:   ZendeskConnectorOperatorMaskAll,",
          "10714:   ZendeskConnectorOperatorMaskFirstN,",
          "10715:   ZendeskConnectorOperatorMaskLastN,",
          "10716:   ZendeskConnectorOperatorValidateNonNull,",
          "10717:   ZendeskConnectorOperatorValidateNonZero,",
          "10718:   ZendeskConnectorOperatorValidateNonNegative,",
          "10719:   ZendeskConnectorOperatorValidateNumeric,",
          "10720:   ZendeskConnectorOperatorNoOp,",
          "10721:  }",
          "10722: }",
          "",
          "---------------"
        ],
        "service/appflow/appflowiface/interface.go||service/appflow/appflowiface/interface.go": [
          "File: service/appflow/appflowiface/interface.go -> service/appflow/appflowiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package appflowiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/appflow\"",
          "15: )",
          "62: type AppflowAPI interface {",
          "63:  CreateConnectorProfile(*appflow.CreateConnectorProfileInput) (*appflow.CreateConnectorProfileOutput, error)",
          "64:  CreateConnectorProfileWithContext(aws.Context, *appflow.CreateConnectorProfileInput, ...request.Option) (*appflow.CreateConnectorProfileOutput, error)",
          "65:  CreateConnectorProfileRequest(*appflow.CreateConnectorProfileInput) (*request.Request, *appflow.CreateConnectorProfileOutput)",
          "67:  CreateFlow(*appflow.CreateFlowInput) (*appflow.CreateFlowOutput, error)",
          "68:  CreateFlowWithContext(aws.Context, *appflow.CreateFlowInput, ...request.Option) (*appflow.CreateFlowOutput, error)",
          "69:  CreateFlowRequest(*appflow.CreateFlowInput) (*request.Request, *appflow.CreateFlowOutput)",
          "71:  DeleteConnectorProfile(*appflow.DeleteConnectorProfileInput) (*appflow.DeleteConnectorProfileOutput, error)",
          "72:  DeleteConnectorProfileWithContext(aws.Context, *appflow.DeleteConnectorProfileInput, ...request.Option) (*appflow.DeleteConnectorProfileOutput, error)",
          "73:  DeleteConnectorProfileRequest(*appflow.DeleteConnectorProfileInput) (*request.Request, *appflow.DeleteConnectorProfileOutput)",
          "75:  DeleteFlow(*appflow.DeleteFlowInput) (*appflow.DeleteFlowOutput, error)",
          "76:  DeleteFlowWithContext(aws.Context, *appflow.DeleteFlowInput, ...request.Option) (*appflow.DeleteFlowOutput, error)",
          "77:  DeleteFlowRequest(*appflow.DeleteFlowInput) (*request.Request, *appflow.DeleteFlowOutput)",
          "79:  DescribeConnectorEntity(*appflow.DescribeConnectorEntityInput) (*appflow.DescribeConnectorEntityOutput, error)",
          "80:  DescribeConnectorEntityWithContext(aws.Context, *appflow.DescribeConnectorEntityInput, ...request.Option) (*appflow.DescribeConnectorEntityOutput, error)",
          "81:  DescribeConnectorEntityRequest(*appflow.DescribeConnectorEntityInput) (*request.Request, *appflow.DescribeConnectorEntityOutput)",
          "83:  DescribeConnectorProfiles(*appflow.DescribeConnectorProfilesInput) (*appflow.DescribeConnectorProfilesOutput, error)",
          "84:  DescribeConnectorProfilesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, ...request.Option) (*appflow.DescribeConnectorProfilesOutput, error)",
          "85:  DescribeConnectorProfilesRequest(*appflow.DescribeConnectorProfilesInput) (*request.Request, *appflow.DescribeConnectorProfilesOutput)",
          "87:  DescribeConnectorProfilesPages(*appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool) error",
          "88:  DescribeConnectorProfilesPagesWithContext(aws.Context, *appflow.DescribeConnectorProfilesInput, func(*appflow.DescribeConnectorProfilesOutput, bool) bool, ...request.Option) error",
          "90:  DescribeConnectors(*appflow.DescribeConnectorsInput) (*appflow.DescribeConnectorsOutput, error)",
          "91:  DescribeConnectorsWithContext(aws.Context, *appflow.DescribeConnectorsInput, ...request.Option) (*appflow.DescribeConnectorsOutput, error)",
          "92:  DescribeConnectorsRequest(*appflow.DescribeConnectorsInput) (*request.Request, *appflow.DescribeConnectorsOutput)",
          "94:  DescribeConnectorsPages(*appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool) error",
          "95:  DescribeConnectorsPagesWithContext(aws.Context, *appflow.DescribeConnectorsInput, func(*appflow.DescribeConnectorsOutput, bool) bool, ...request.Option) error",
          "97:  DescribeFlow(*appflow.DescribeFlowInput) (*appflow.DescribeFlowOutput, error)",
          "98:  DescribeFlowWithContext(aws.Context, *appflow.DescribeFlowInput, ...request.Option) (*appflow.DescribeFlowOutput, error)",
          "99:  DescribeFlowRequest(*appflow.DescribeFlowInput) (*request.Request, *appflow.DescribeFlowOutput)",
          "101:  DescribeFlowExecutionRecords(*appflow.DescribeFlowExecutionRecordsInput) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "102:  DescribeFlowExecutionRecordsWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, ...request.Option) (*appflow.DescribeFlowExecutionRecordsOutput, error)",
          "103:  DescribeFlowExecutionRecordsRequest(*appflow.DescribeFlowExecutionRecordsInput) (*request.Request, *appflow.DescribeFlowExecutionRecordsOutput)",
          "105:  DescribeFlowExecutionRecordsPages(*appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool) error",
          "106:  DescribeFlowExecutionRecordsPagesWithContext(aws.Context, *appflow.DescribeFlowExecutionRecordsInput, func(*appflow.DescribeFlowExecutionRecordsOutput, bool) bool, ...request.Option) error",
          "108:  ListConnectorEntities(*appflow.ListConnectorEntitiesInput) (*appflow.ListConnectorEntitiesOutput, error)",
          "109:  ListConnectorEntitiesWithContext(aws.Context, *appflow.ListConnectorEntitiesInput, ...request.Option) (*appflow.ListConnectorEntitiesOutput, error)",
          "110:  ListConnectorEntitiesRequest(*appflow.ListConnectorEntitiesInput) (*request.Request, *appflow.ListConnectorEntitiesOutput)",
          "112:  ListFlows(*appflow.ListFlowsInput) (*appflow.ListFlowsOutput, error)",
          "113:  ListFlowsWithContext(aws.Context, *appflow.ListFlowsInput, ...request.Option) (*appflow.ListFlowsOutput, error)",
          "114:  ListFlowsRequest(*appflow.ListFlowsInput) (*request.Request, *appflow.ListFlowsOutput)",
          "116:  ListFlowsPages(*appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool) error",
          "117:  ListFlowsPagesWithContext(aws.Context, *appflow.ListFlowsInput, func(*appflow.ListFlowsOutput, bool) bool, ...request.Option) error",
          "119:  ListTagsForResource(*appflow.ListTagsForResourceInput) (*appflow.ListTagsForResourceOutput, error)",
          "120:  ListTagsForResourceWithContext(aws.Context, *appflow.ListTagsForResourceInput, ...request.Option) (*appflow.ListTagsForResourceOutput, error)",
          "121:  ListTagsForResourceRequest(*appflow.ListTagsForResourceInput) (*request.Request, *appflow.ListTagsForResourceOutput)",
          "123:  StartFlow(*appflow.StartFlowInput) (*appflow.StartFlowOutput, error)",
          "124:  StartFlowWithContext(aws.Context, *appflow.StartFlowInput, ...request.Option) (*appflow.StartFlowOutput, error)",
          "125:  StartFlowRequest(*appflow.StartFlowInput) (*request.Request, *appflow.StartFlowOutput)",
          "127:  StopFlow(*appflow.StopFlowInput) (*appflow.StopFlowOutput, error)",
          "128:  StopFlowWithContext(aws.Context, *appflow.StopFlowInput, ...request.Option) (*appflow.StopFlowOutput, error)",
          "129:  StopFlowRequest(*appflow.StopFlowInput) (*request.Request, *appflow.StopFlowOutput)",
          "131:  TagResource(*appflow.TagResourceInput) (*appflow.TagResourceOutput, error)",
          "132:  TagResourceWithContext(aws.Context, *appflow.TagResourceInput, ...request.Option) (*appflow.TagResourceOutput, error)",
          "133:  TagResourceRequest(*appflow.TagResourceInput) (*request.Request, *appflow.TagResourceOutput)",
          "135:  UntagResource(*appflow.UntagResourceInput) (*appflow.UntagResourceOutput, error)",
          "136:  UntagResourceWithContext(aws.Context, *appflow.UntagResourceInput, ...request.Option) (*appflow.UntagResourceOutput, error)",
          "137:  UntagResourceRequest(*appflow.UntagResourceInput) (*request.Request, *appflow.UntagResourceOutput)",
          "139:  UpdateConnectorProfile(*appflow.UpdateConnectorProfileInput) (*appflow.UpdateConnectorProfileOutput, error)",
          "140:  UpdateConnectorProfileWithContext(aws.Context, *appflow.UpdateConnectorProfileInput, ...request.Option) (*appflow.UpdateConnectorProfileOutput, error)",
          "141:  UpdateConnectorProfileRequest(*appflow.UpdateConnectorProfileInput) (*request.Request, *appflow.UpdateConnectorProfileOutput)",
          "143:  UpdateFlow(*appflow.UpdateFlowInput) (*appflow.UpdateFlowOutput, error)",
          "144:  UpdateFlowWithContext(aws.Context, *appflow.UpdateFlowInput, ...request.Option) (*appflow.UpdateFlowOutput, error)",
          "145:  UpdateFlowRequest(*appflow.UpdateFlowInput) (*request.Request, *appflow.UpdateFlowOutput)",
          "146: }",
          "148: var _ AppflowAPI = (*appflow.Appflow)(nil)",
          "",
          "---------------"
        ],
        "service/appflow/doc.go||service/appflow/doc.go": [
          "File: service/appflow/doc.go -> service/appflow/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: package appflow",
          "",
          "---------------"
        ],
        "service/appflow/errors.go||service/appflow/errors.go": [
          "File: service/appflow/errors.go -> service/appflow/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "17:  ErrCodeConflictException = \"ConflictException\"",
          "23:  ErrCodeConnectorAuthenticationException = \"ConnectorAuthenticationException\"",
          "29:  ErrCodeConnectorServerException = \"ConnectorServerException\"",
          "36:  ErrCodeInternalServerException = \"InternalServerException\"",
          "43:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "50:  ErrCodeServiceQuotaExceededException = \"ServiceQuotaExceededException\"",
          "56:  ErrCodeUnsupportedOperationException = \"UnsupportedOperationException\"",
          "62:  ErrCodeValidationException = \"ValidationException\"",
          "63: )",
          "65: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "66:  \"ConflictException\":                newErrorConflictException,",
          "67:  \"ConnectorAuthenticationException\": newErrorConnectorAuthenticationException,",
          "68:  \"ConnectorServerException\":         newErrorConnectorServerException,",
          "69:  \"InternalServerException\":          newErrorInternalServerException,",
          "70:  \"ResourceNotFoundException\":        newErrorResourceNotFoundException,",
          "71:  \"ServiceQuotaExceededException\":    newErrorServiceQuotaExceededException,",
          "72:  \"UnsupportedOperationException\":    newErrorUnsupportedOperationException,",
          "73:  \"ValidationException\":              newErrorValidationException,",
          "74: }",
          "",
          "---------------"
        ],
        "service/appflow/service.go||service/appflow/service.go": [
          "File: service/appflow/service.go -> service/appflow/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package appflow",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/restjson\"",
          "13: )",
          "21: type Appflow struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"Appflow\" // Name of service.",
          "34:  EndpointsID = \"appflow\" // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"Appflow\" // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *Appflow {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"appflow\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *Appflow {",
          "60:  svc := &Appflow{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2020-08-23\",",
          "71:    },",
          "72:    handlers,",
          "73:   ),",
          "74:  }",
          "77:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "78:  svc.Handlers.Build.PushBackNamed(restjson.BuildHandler)",
          "79:  svc.Handlers.Unmarshal.PushBackNamed(restjson.UnmarshalHandler)",
          "80:  svc.Handlers.UnmarshalMeta.PushBackNamed(restjson.UnmarshalMetaHandler)",
          "81:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "82:   protocol.NewUnmarshalErrorHandler(restjson.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "83:  )",
          "86:  if initClient != nil {",
          "87:   initClient(svc.Client)",
          "88:  }",
          "90:  return svc",
          "91: }",
          "95: func (c *Appflow) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "96:  req := c.NewRequest(op, params, data)",
          "99:  if initRequest != nil {",
          "100:   initRequest(req)",
          "101:  }",
          "103:  return req",
          "104: }",
          "",
          "---------------"
        ],
        "service/route53resolver/api.go||service/route53resolver/api.go": [
          "File: service/route53resolver/api.go -> service/route53resolver/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:  return out, req.Send()",
          "114: }",
          "116: const opAssociateResolverRule = \"AssociateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: const opAssociateResolverQueryLogConfig = \"AssociateResolverQueryLogConfig\"",
          "143: func (c *Route53Resolver) AssociateResolverQueryLogConfigRequest(input *AssociateResolverQueryLogConfigInput) (req *request.Request, output *AssociateResolverQueryLogConfigOutput) {",
          "144:  op := &request.Operation{",
          "145:   Name:       opAssociateResolverQueryLogConfig,",
          "146:   HTTPMethod: \"POST\",",
          "147:   HTTPPath:   \"/\",",
          "148:  }",
          "150:  if input == nil {",
          "151:   input = &AssociateResolverQueryLogConfigInput{}",
          "152:  }",
          "154:  output = &AssociateResolverQueryLogConfigOutput{}",
          "155:  req = c.newRequest(op, input, output)",
          "156:  return",
          "157: }",
          "207: func (c *Route53Resolver) AssociateResolverQueryLogConfig(input *AssociateResolverQueryLogConfigInput) (*AssociateResolverQueryLogConfigOutput, error) {",
          "208:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "209:  return out, req.Send()",
          "210: }",
          "221: func (c *Route53Resolver) AssociateResolverQueryLogConfigWithContext(ctx aws.Context, input *AssociateResolverQueryLogConfigInput, opts ...request.Option) (*AssociateResolverQueryLogConfigOutput, error) {",
          "222:  req, out := c.AssociateResolverQueryLogConfigRequest(input)",
          "223:  req.SetContext(ctx)",
          "224:  req.ApplyOptions(opts...)",
          "225:  return out, req.Send()",
          "226: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:  return out, req.Send()",
          "319: }",
          "321: const opCreateResolverRule = \"CreateResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436: const opCreateResolverQueryLogConfig = \"CreateResolverQueryLogConfig\"",
          "462: func (c *Route53Resolver) CreateResolverQueryLogConfigRequest(input *CreateResolverQueryLogConfigInput) (req *request.Request, output *CreateResolverQueryLogConfigOutput) {",
          "463:  op := &request.Operation{",
          "464:   Name:       opCreateResolverQueryLogConfig,",
          "465:   HTTPMethod: \"POST\",",
          "466:   HTTPPath:   \"/\",",
          "467:  }",
          "469:  if input == nil {",
          "470:   input = &CreateResolverQueryLogConfigInput{}",
          "471:  }",
          "473:  output = &CreateResolverQueryLogConfigOutput{}",
          "474:  req = c.newRequest(op, input, output)",
          "475:  return",
          "476: }",
          "528: func (c *Route53Resolver) CreateResolverQueryLogConfig(input *CreateResolverQueryLogConfigInput) (*CreateResolverQueryLogConfigOutput, error) {",
          "529:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "530:  return out, req.Send()",
          "531: }",
          "542: func (c *Route53Resolver) CreateResolverQueryLogConfigWithContext(ctx aws.Context, input *CreateResolverQueryLogConfigInput, opts ...request.Option) (*CreateResolverQueryLogConfigOutput, error) {",
          "543:  req, out := c.CreateResolverQueryLogConfigRequest(input)",
          "544:  req.SetContext(ctx)",
          "545:  req.ApplyOptions(opts...)",
          "546:  return out, req.Send()",
          "547: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "518:  return out, req.Send()",
          "519: }",
          "521: const opDeleteResolverRule = \"DeleteResolverRule\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "748: const opDeleteResolverQueryLogConfig = \"DeleteResolverQueryLogConfig\"",
          "774: func (c *Route53Resolver) DeleteResolverQueryLogConfigRequest(input *DeleteResolverQueryLogConfigInput) (req *request.Request, output *DeleteResolverQueryLogConfigOutput) {",
          "775:  op := &request.Operation{",
          "776:   Name:       opDeleteResolverQueryLogConfig,",
          "777:   HTTPMethod: \"POST\",",
          "778:   HTTPPath:   \"/\",",
          "779:  }",
          "781:  if input == nil {",
          "782:   input = &DeleteResolverQueryLogConfigInput{}",
          "783:  }",
          "785:  output = &DeleteResolverQueryLogConfigOutput{}",
          "786:  req = c.newRequest(op, input, output)",
          "787:  return",
          "788: }",
          "836: func (c *Route53Resolver) DeleteResolverQueryLogConfig(input *DeleteResolverQueryLogConfigInput) (*DeleteResolverQueryLogConfigOutput, error) {",
          "837:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "838:  return out, req.Send()",
          "839: }",
          "850: func (c *Route53Resolver) DeleteResolverQueryLogConfigWithContext(ctx aws.Context, input *DeleteResolverQueryLogConfigInput, opts ...request.Option) (*DeleteResolverQueryLogConfigOutput, error) {",
          "851:  req, out := c.DeleteResolverQueryLogConfigRequest(input)",
          "852:  req.SetContext(ctx)",
          "853:  req.ApplyOptions(opts...)",
          "854:  return out, req.Send()",
          "855: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "709:  return out, req.Send()",
          "710: }",
          "739:  op := &request.Operation{",
          "741:   HTTPMethod: \"POST\",",
          "742:   HTTPPath:   \"/\",",
          "743:  }",
          "745:  if input == nil {",
          "747:  }",
          "750:  req = c.newRequest(op, input, output)",
          "751:  return",
          "752: }",
          "",
          "[Removed Lines]",
          "712: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "738: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "740:   Name:       opDisassociateResolverRule,",
          "746:   input = &DisassociateResolverRuleInput{}",
          "749:  output = &DisassociateResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1049: const opDisassociateResolverQueryLogConfig = \"DisassociateResolverQueryLogConfig\"",
          "1075: func (c *Route53Resolver) DisassociateResolverQueryLogConfigRequest(input *DisassociateResolverQueryLogConfigInput) (req *request.Request, output *DisassociateResolverQueryLogConfigOutput) {",
          "1077:   Name:       opDisassociateResolverQueryLogConfig,",
          "1083:   input = &DisassociateResolverQueryLogConfigInput{}",
          "1086:  output = &DisassociateResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "785:  return out, req.Send()",
          "786: }",
          "",
          "[Removed Lines]",
          "783: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "784:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "[Added Lines]",
          "1133: func (c *Route53Resolver) DisassociateResolverQueryLogConfig(input *DisassociateResolverQueryLogConfigInput) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1134:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1135:  return out, req.Send()",
          "1136: }",
          "1147: func (c *Route53Resolver) DisassociateResolverQueryLogConfigWithContext(ctx aws.Context, input *DisassociateResolverQueryLogConfigInput, opts ...request.Option) (*DisassociateResolverQueryLogConfigOutput, error) {",
          "1148:  req, out := c.DisassociateResolverQueryLogConfigRequest(input)",
          "1149:  req.SetContext(ctx)",
          "1150:  req.ApplyOptions(opts...)",
          "1151:  return out, req.Send()",
          "1152: }",
          "1154: const opDisassociateResolverRule = \"DisassociateResolverRule\"",
          "1180: func (c *Route53Resolver) DisassociateResolverRuleRequest(input *DisassociateResolverRuleInput) (req *request.Request, output *DisassociateResolverRuleOutput) {",
          "1181:  op := &request.Operation{",
          "1182:   Name:       opDisassociateResolverRule,",
          "1183:   HTTPMethod: \"POST\",",
          "1184:   HTTPPath:   \"/\",",
          "1185:  }",
          "1187:  if input == nil {",
          "1188:   input = &DisassociateResolverRuleInput{}",
          "1189:  }",
          "1191:  output = &DisassociateResolverRuleOutput{}",
          "1192:  req = c.newRequest(op, input, output)",
          "1193:  return",
          "1194: }",
          "1225: func (c *Route53Resolver) DisassociateResolverRule(input *DisassociateResolverRuleInput) (*DisassociateResolverRuleOutput, error) {",
          "1226:  req, out := c.DisassociateResolverRuleRequest(input)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "891:  return out, req.Send()",
          "892: }",
          "921:  op := &request.Operation{",
          "923:   HTTPMethod: \"POST\",",
          "924:   HTTPPath:   \"/\",",
          "925:  }",
          "927:  if input == nil {",
          "929:  }",
          "932:  req = c.newRequest(op, input, output)",
          "933:  return",
          "934: }",
          "",
          "[Removed Lines]",
          "894: const opGetResolverRule = \"GetResolverRule\"",
          "920: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "922:   Name:       opGetResolverRule,",
          "928:   input = &GetResolverRuleInput{}",
          "931:  output = &GetResolverRuleOutput{}",
          "",
          "[Added Lines]",
          "1336: const opGetResolverQueryLogConfig = \"GetResolverQueryLogConfig\"",
          "1362: func (c *Route53Resolver) GetResolverQueryLogConfigRequest(input *GetResolverQueryLogConfigInput) (req *request.Request, output *GetResolverQueryLogConfigOutput) {",
          "1364:   Name:       opGetResolverQueryLogConfig,",
          "1370:   input = &GetResolverQueryLogConfigInput{}",
          "1373:  output = &GetResolverQueryLogConfigOutput{}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "965:  return out, req.Send()",
          "966: }",
          "979:  req.SetContext(ctx)",
          "980:  req.ApplyOptions(opts...)",
          "981:  return out, req.Send()",
          "982: }",
          "1011:  op := &request.Operation{",
          "1013:   HTTPMethod: \"POST\",",
          "1014:   HTTPPath:   \"/\",",
          "1015:  }",
          "1017:  if input == nil {",
          "1019:  }",
          "1022:  req = c.newRequest(op, input, output)",
          "1023:  return",
          "1024: }",
          "",
          "[Removed Lines]",
          "963: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "964:  req, out := c.GetResolverRuleRequest(input)",
          "977: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "978:  req, out := c.GetResolverRuleRequest(input)",
          "984: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1010: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1012:   Name:       opGetResolverRuleAssociation,",
          "1018:   input = &GetResolverRuleAssociationInput{}",
          "1021:  output = &GetResolverRuleAssociationOutput{}",
          "",
          "[Added Lines]",
          "1412: func (c *Route53Resolver) GetResolverQueryLogConfig(input *GetResolverQueryLogConfigInput) (*GetResolverQueryLogConfigOutput, error) {",
          "1413:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1426: func (c *Route53Resolver) GetResolverQueryLogConfigWithContext(ctx aws.Context, input *GetResolverQueryLogConfigInput, opts ...request.Option) (*GetResolverQueryLogConfigOutput, error) {",
          "1427:  req, out := c.GetResolverQueryLogConfigRequest(input)",
          "1433: const opGetResolverQueryLogConfigAssociation = \"GetResolverQueryLogConfigAssociation\"",
          "1459: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationRequest(input *GetResolverQueryLogConfigAssociationInput) (req *request.Request, output *GetResolverQueryLogConfigAssociationOutput) {",
          "1461:   Name:       opGetResolverQueryLogConfigAssociation,",
          "1467:   input = &GetResolverQueryLogConfigAssociationInput{}",
          "1470:  output = &GetResolverQueryLogConfigAssociationOutput{}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1054:  return out, req.Send()",
          "1055: }",
          "1068:  req.SetContext(ctx)",
          "1069:  req.ApplyOptions(opts...)",
          "1070:  return out, req.Send()",
          "1071: }",
          "1100:  op := &request.Operation{",
          "1102:   HTTPMethod: \"POST\",",
          "1103:   HTTPPath:   \"/\",",
          "1104:  }",
          "1106:  if input == nil {",
          "1108:  }",
          "1111:  req = c.newRequest(op, input, output)",
          "1112:  return",
          "1113: }",
          "1141:  return out, req.Send()",
          "1142: }",
          "1155:  req.SetContext(ctx)",
          "1156:  req.ApplyOptions(opts...)",
          "1157:  return out, req.Send()",
          "1158: }",
          "1187:  op := &request.Operation{",
          "1189:   HTTPMethod: \"POST\",",
          "1190:   HTTPPath:   \"/\",",
          "1197:  }",
          "1199:  if input == nil {",
          "1201:  }",
          "1204:  req = c.newRequest(op, input, output)",
          "1205:  return",
          "1206: }",
          "",
          "[Removed Lines]",
          "1052: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1053:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1066: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1067:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1073: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1099: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1101:   Name:       opGetResolverRulePolicy,",
          "1107:   input = &GetResolverRulePolicyInput{}",
          "1110:  output = &GetResolverRulePolicyOutput{}",
          "1139: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1140:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1153: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1154:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1160: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1186: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1188:   Name:       opListResolverEndpointIpAddresses,",
          "1191:   Paginator: &request.Paginator{",
          "1192:    InputTokens:     []string{\"NextToken\"},",
          "1193:    OutputTokens:    []string{\"NextToken\"},",
          "1194:    LimitToken:      \"MaxResults\",",
          "1195:    TruncationToken: \"\",",
          "1196:   },",
          "1200:   input = &ListResolverEndpointIpAddressesInput{}",
          "1203:  output = &ListResolverEndpointIpAddressesOutput{}",
          "",
          "[Added Lines]",
          "1509: func (c *Route53Resolver) GetResolverQueryLogConfigAssociation(input *GetResolverQueryLogConfigAssociationInput) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1510:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1523: func (c *Route53Resolver) GetResolverQueryLogConfigAssociationWithContext(ctx aws.Context, input *GetResolverQueryLogConfigAssociationInput, opts ...request.Option) (*GetResolverQueryLogConfigAssociationOutput, error) {",
          "1524:  req, out := c.GetResolverQueryLogConfigAssociationRequest(input)",
          "1530: const opGetResolverQueryLogConfigPolicy = \"GetResolverQueryLogConfigPolicy\"",
          "1556: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyRequest(input *GetResolverQueryLogConfigPolicyInput) (req *request.Request, output *GetResolverQueryLogConfigPolicyOutput) {",
          "1558:   Name:       opGetResolverQueryLogConfigPolicy,",
          "1564:   input = &GetResolverQueryLogConfigPolicyInput{}",
          "1567:  output = &GetResolverQueryLogConfigPolicyOutput{}",
          "1603: func (c *Route53Resolver) GetResolverQueryLogConfigPolicy(input *GetResolverQueryLogConfigPolicyInput) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1604:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1617: func (c *Route53Resolver) GetResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *GetResolverQueryLogConfigPolicyInput, opts ...request.Option) (*GetResolverQueryLogConfigPolicyOutput, error) {",
          "1618:  req, out := c.GetResolverQueryLogConfigPolicyRequest(input)",
          "1624: const opGetResolverRule = \"GetResolverRule\"",
          "1650: func (c *Route53Resolver) GetResolverRuleRequest(input *GetResolverRuleInput) (req *request.Request, output *GetResolverRuleOutput) {",
          "1652:   Name:       opGetResolverRule,",
          "1658:   input = &GetResolverRuleInput{}",
          "1661:  output = &GetResolverRuleOutput{}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1238:  return out, req.Send()",
          "1239: }",
          "1252:  req.SetContext(ctx)",
          "1253:  req.ApplyOptions(opts...)",
          "1254:  return out, req.Send()",
          "1255: }",
          "1295:    req.ApplyOptions(opts...)",
          "1296:    return req, nil",
          "1297:   },",
          "1298:  }",
          "1300:  for p.Next() {",
          "1302:    break",
          "1303:   }",
          "1304:  }",
          "",
          "[Removed Lines]",
          "1236: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1237:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1250: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1251:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1274: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "1275:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1276: }",
          "1285: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "1286:  p := request.Pagination{",
          "1287:   NewRequest: func() (*request.Request, error) {",
          "1288:    var inCpy *ListResolverEndpointIpAddressesInput",
          "1289:    if input != nil {",
          "1290:     tmp := *input",
          "1291:     inCpy = &tmp",
          "1292:    }",
          "1293:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "1294:    req.SetContext(ctx)",
          "1301:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "1693: func (c *Route53Resolver) GetResolverRule(input *GetResolverRuleInput) (*GetResolverRuleOutput, error) {",
          "1694:  req, out := c.GetResolverRuleRequest(input)",
          "1707: func (c *Route53Resolver) GetResolverRuleWithContext(ctx aws.Context, input *GetResolverRuleInput, opts ...request.Option) (*GetResolverRuleOutput, error) {",
          "1708:  req, out := c.GetResolverRuleRequest(input)",
          "1714: const opGetResolverRuleAssociation = \"GetResolverRuleAssociation\"",
          "1740: func (c *Route53Resolver) GetResolverRuleAssociationRequest(input *GetResolverRuleAssociationInput) (req *request.Request, output *GetResolverRuleAssociationOutput) {",
          "1741:  op := &request.Operation{",
          "1742:   Name:       opGetResolverRuleAssociation,",
          "1743:   HTTPMethod: \"POST\",",
          "1744:   HTTPPath:   \"/\",",
          "1745:  }",
          "1747:  if input == nil {",
          "1748:   input = &GetResolverRuleAssociationInput{}",
          "1749:  }",
          "1751:  output = &GetResolverRuleAssociationOutput{}",
          "1752:  req = c.newRequest(op, input, output)",
          "1753:  return",
          "1754: }",
          "1783: func (c *Route53Resolver) GetResolverRuleAssociation(input *GetResolverRuleAssociationInput) (*GetResolverRuleAssociationOutput, error) {",
          "1784:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1785:  return out, req.Send()",
          "1786: }",
          "1797: func (c *Route53Resolver) GetResolverRuleAssociationWithContext(ctx aws.Context, input *GetResolverRuleAssociationInput, opts ...request.Option) (*GetResolverRuleAssociationOutput, error) {",
          "1798:  req, out := c.GetResolverRuleAssociationRequest(input)",
          "1799:  req.SetContext(ctx)",
          "1800:  req.ApplyOptions(opts...)",
          "1801:  return out, req.Send()",
          "1802: }",
          "1804: const opGetResolverRulePolicy = \"GetResolverRulePolicy\"",
          "1830: func (c *Route53Resolver) GetResolverRulePolicyRequest(input *GetResolverRulePolicyInput) (req *request.Request, output *GetResolverRulePolicyOutput) {",
          "1831:  op := &request.Operation{",
          "1832:   Name:       opGetResolverRulePolicy,",
          "1833:   HTTPMethod: \"POST\",",
          "1834:   HTTPPath:   \"/\",",
          "1835:  }",
          "1837:  if input == nil {",
          "1838:   input = &GetResolverRulePolicyInput{}",
          "1839:  }",
          "1841:  output = &GetResolverRulePolicyOutput{}",
          "1842:  req = c.newRequest(op, input, output)",
          "1843:  return",
          "1844: }",
          "1870: func (c *Route53Resolver) GetResolverRulePolicy(input *GetResolverRulePolicyInput) (*GetResolverRulePolicyOutput, error) {",
          "1871:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1872:  return out, req.Send()",
          "1873: }",
          "1884: func (c *Route53Resolver) GetResolverRulePolicyWithContext(ctx aws.Context, input *GetResolverRulePolicyInput, opts ...request.Option) (*GetResolverRulePolicyOutput, error) {",
          "1885:  req, out := c.GetResolverRulePolicyRequest(input)",
          "1886:  req.SetContext(ctx)",
          "1887:  req.ApplyOptions(opts...)",
          "1888:  return out, req.Send()",
          "1889: }",
          "1891: const opListResolverEndpointIpAddresses = \"ListResolverEndpointIpAddresses\"",
          "1917: func (c *Route53Resolver) ListResolverEndpointIpAddressesRequest(input *ListResolverEndpointIpAddressesInput) (req *request.Request, output *ListResolverEndpointIpAddressesOutput) {",
          "1918:  op := &request.Operation{",
          "1919:   Name:       opListResolverEndpointIpAddresses,",
          "1920:   HTTPMethod: \"POST\",",
          "1921:   HTTPPath:   \"/\",",
          "1922:   Paginator: &request.Paginator{",
          "1923:    InputTokens:     []string{\"NextToken\"},",
          "1924:    OutputTokens:    []string{\"NextToken\"},",
          "1925:    LimitToken:      \"MaxResults\",",
          "1926:    TruncationToken: \"\",",
          "1927:   },",
          "1928:  }",
          "1930:  if input == nil {",
          "1931:   input = &ListResolverEndpointIpAddressesInput{}",
          "1932:  }",
          "1934:  output = &ListResolverEndpointIpAddressesOutput{}",
          "1935:  req = c.newRequest(op, input, output)",
          "1936:  return",
          "1937: }",
          "1967: func (c *Route53Resolver) ListResolverEndpointIpAddresses(input *ListResolverEndpointIpAddressesInput) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1968:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1969:  return out, req.Send()",
          "1970: }",
          "1981: func (c *Route53Resolver) ListResolverEndpointIpAddressesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, opts ...request.Option) (*ListResolverEndpointIpAddressesOutput, error) {",
          "1982:  req, out := c.ListResolverEndpointIpAddressesRequest(input)",
          "1983:  req.SetContext(ctx)",
          "1984:  req.ApplyOptions(opts...)",
          "1985:  return out, req.Send()",
          "1986: }",
          "2005: func (c *Route53Resolver) ListResolverEndpointIpAddressesPages(input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool) error {",
          "2006:  return c.ListResolverEndpointIpAddressesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2007: }",
          "2016: func (c *Route53Resolver) ListResolverEndpointIpAddressesPagesWithContext(ctx aws.Context, input *ListResolverEndpointIpAddressesInput, fn func(*ListResolverEndpointIpAddressesOutput, bool) bool, opts ...request.Option) error {",
          "2017:  p := request.Pagination{",
          "2018:   NewRequest: func() (*request.Request, error) {",
          "2019:    var inCpy *ListResolverEndpointIpAddressesInput",
          "2020:    if input != nil {",
          "2021:     tmp := *input",
          "2022:     inCpy = &tmp",
          "2023:    }",
          "2024:    req, _ := c.ListResolverEndpointIpAddressesRequest(inCpy)",
          "2025:    req.SetContext(ctx)",
          "2026:    req.ApplyOptions(opts...)",
          "2027:    return req, nil",
          "2028:   },",
          "2029:  }",
          "2031:  for p.Next() {",
          "2032:   if !fn(p.Page().(*ListResolverEndpointIpAddressesOutput), !p.HasNextPage()) {",
          "2033:    break",
          "2034:   }",
          "2035:  }",
          "2037:  return p.Err()",
          "2038: }",
          "2040: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "2066: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "2067:  op := &request.Operation{",
          "2068:   Name:       opListResolverEndpoints,",
          "2069:   HTTPMethod: \"POST\",",
          "2070:   HTTPPath:   \"/\",",
          "2071:   Paginator: &request.Paginator{",
          "2072:    InputTokens:     []string{\"NextToken\"},",
          "2073:    OutputTokens:    []string{\"NextToken\"},",
          "2074:    LimitToken:      \"MaxResults\",",
          "2075:    TruncationToken: \"\",",
          "2076:   },",
          "2077:  }",
          "2079:  if input == nil {",
          "2080:   input = &ListResolverEndpointsInput{}",
          "2081:  }",
          "2083:  output = &ListResolverEndpointsOutput{}",
          "2084:  req = c.newRequest(op, input, output)",
          "2085:  return",
          "2086: }",
          "2117: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "2118:  req, out := c.ListResolverEndpointsRequest(input)",
          "2119:  return out, req.Send()",
          "2120: }",
          "2131: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "2132:  req, out := c.ListResolverEndpointsRequest(input)",
          "2133:  req.SetContext(ctx)",
          "2134:  req.ApplyOptions(opts...)",
          "2135:  return out, req.Send()",
          "2136: }",
          "2155: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "2156:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2157: }",
          "2166: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "2167:  p := request.Pagination{",
          "2168:   NewRequest: func() (*request.Request, error) {",
          "2169:    var inCpy *ListResolverEndpointsInput",
          "2170:    if input != nil {",
          "2171:     tmp := *input",
          "2172:     inCpy = &tmp",
          "2173:    }",
          "2174:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "2175:    req.SetContext(ctx)",
          "2176:    req.ApplyOptions(opts...)",
          "2177:    return req, nil",
          "2178:   },",
          "2179:  }",
          "2181:  for p.Next() {",
          "2182:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "2183:    break",
          "2184:   }",
          "2185:  }",
          "2187:  return p.Err()",
          "2188: }",
          "2190: const opListResolverQueryLogConfigAssociations = \"ListResolverQueryLogConfigAssociations\"",
          "2216: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsRequest(input *ListResolverQueryLogConfigAssociationsInput) (req *request.Request, output *ListResolverQueryLogConfigAssociationsOutput) {",
          "2217:  op := &request.Operation{",
          "2218:   Name:       opListResolverQueryLogConfigAssociations,",
          "2219:   HTTPMethod: \"POST\",",
          "2220:   HTTPPath:   \"/\",",
          "2221:   Paginator: &request.Paginator{",
          "2222:    InputTokens:     []string{\"NextToken\"},",
          "2223:    OutputTokens:    []string{\"NextToken\"},",
          "2224:    LimitToken:      \"MaxResults\",",
          "2225:    TruncationToken: \"\",",
          "2226:   },",
          "2227:  }",
          "2229:  if input == nil {",
          "2230:   input = &ListResolverQueryLogConfigAssociationsInput{}",
          "2231:  }",
          "2233:  output = &ListResolverQueryLogConfigAssociationsOutput{}",
          "2234:  req = c.newRequest(op, input, output)",
          "2235:  return",
          "2236: }",
          "2271: func (c *Route53Resolver) ListResolverQueryLogConfigAssociations(input *ListResolverQueryLogConfigAssociationsInput) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2272:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2273:  return out, req.Send()",
          "2274: }",
          "2285: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, opts ...request.Option) (*ListResolverQueryLogConfigAssociationsOutput, error) {",
          "2286:  req, out := c.ListResolverQueryLogConfigAssociationsRequest(input)",
          "2287:  req.SetContext(ctx)",
          "2288:  req.ApplyOptions(opts...)",
          "2289:  return out, req.Send()",
          "2290: }",
          "2309: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPages(input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool) error {",
          "2310:  return c.ListResolverQueryLogConfigAssociationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2311: }",
          "2320: func (c *Route53Resolver) ListResolverQueryLogConfigAssociationsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigAssociationsInput, fn func(*ListResolverQueryLogConfigAssociationsOutput, bool) bool, opts ...request.Option) error {",
          "2321:  p := request.Pagination{",
          "2322:   NewRequest: func() (*request.Request, error) {",
          "2323:    var inCpy *ListResolverQueryLogConfigAssociationsInput",
          "2324:    if input != nil {",
          "2325:     tmp := *input",
          "2326:     inCpy = &tmp",
          "2327:    }",
          "2328:    req, _ := c.ListResolverQueryLogConfigAssociationsRequest(inCpy)",
          "2329:    req.SetContext(ctx)",
          "2336:   if !fn(p.Page().(*ListResolverQueryLogConfigAssociationsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1306:  return p.Err()",
          "1307: }",
          "1336:  op := &request.Operation{",
          "1338:   HTTPMethod: \"POST\",",
          "1339:   HTTPPath:   \"/\",",
          "1340:   Paginator: &request.Paginator{",
          "",
          "[Removed Lines]",
          "1309: const opListResolverEndpoints = \"ListResolverEndpoints\"",
          "1335: func (c *Route53Resolver) ListResolverEndpointsRequest(input *ListResolverEndpointsInput) (req *request.Request, output *ListResolverEndpointsOutput) {",
          "1337:   Name:       opListResolverEndpoints,",
          "",
          "[Added Lines]",
          "2344: const opListResolverQueryLogConfigs = \"ListResolverQueryLogConfigs\"",
          "2370: func (c *Route53Resolver) ListResolverQueryLogConfigsRequest(input *ListResolverQueryLogConfigsInput) (req *request.Request, output *ListResolverQueryLogConfigsOutput) {",
          "2372:   Name:       opListResolverQueryLogConfigs,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1346:  }",
          "1348:  if input == nil {",
          "1350:  }",
          "1353:  req = c.newRequest(op, input, output)",
          "1354:  return",
          "1355: }",
          "",
          "[Removed Lines]",
          "1349:   input = &ListResolverEndpointsInput{}",
          "1352:  output = &ListResolverEndpointsOutput{}",
          "",
          "[Added Lines]",
          "2384:   input = &ListResolverQueryLogConfigsInput{}",
          "2387:  output = &ListResolverQueryLogConfigsOutput{}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1388:  return out, req.Send()",
          "1389: }",
          "1402:  req.SetContext(ctx)",
          "1403:  req.ApplyOptions(opts...)",
          "1404:  return out, req.Send()",
          "1405: }",
          "1426: }",
          "1436:  p := request.Pagination{",
          "1437:   NewRequest: func() (*request.Request, error) {",
          "1439:    if input != nil {",
          "1440:     tmp := *input",
          "1441:     inCpy = &tmp",
          "1442:    }",
          "1444:    req.SetContext(ctx)",
          "1445:    req.ApplyOptions(opts...)",
          "1446:    return req, nil",
          "",
          "[Removed Lines]",
          "1386: func (c *Route53Resolver) ListResolverEndpoints(input *ListResolverEndpointsInput) (*ListResolverEndpointsOutput, error) {",
          "1387:  req, out := c.ListResolverEndpointsRequest(input)",
          "1400: func (c *Route53Resolver) ListResolverEndpointsWithContext(ctx aws.Context, input *ListResolverEndpointsInput, opts ...request.Option) (*ListResolverEndpointsOutput, error) {",
          "1401:  req, out := c.ListResolverEndpointsRequest(input)",
          "1424: func (c *Route53Resolver) ListResolverEndpointsPages(input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool) error {",
          "1425:  return c.ListResolverEndpointsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1435: func (c *Route53Resolver) ListResolverEndpointsPagesWithContext(ctx aws.Context, input *ListResolverEndpointsInput, fn func(*ListResolverEndpointsOutput, bool) bool, opts ...request.Option) error {",
          "1438:    var inCpy *ListResolverEndpointsInput",
          "1443:    req, _ := c.ListResolverEndpointsRequest(inCpy)",
          "",
          "[Added Lines]",
          "2426: func (c *Route53Resolver) ListResolverQueryLogConfigs(input *ListResolverQueryLogConfigsInput) (*ListResolverQueryLogConfigsOutput, error) {",
          "2427:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2440: func (c *Route53Resolver) ListResolverQueryLogConfigsWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, opts ...request.Option) (*ListResolverQueryLogConfigsOutput, error) {",
          "2441:  req, out := c.ListResolverQueryLogConfigsRequest(input)",
          "2464: func (c *Route53Resolver) ListResolverQueryLogConfigsPages(input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool) error {",
          "2465:  return c.ListResolverQueryLogConfigsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2475: func (c *Route53Resolver) ListResolverQueryLogConfigsPagesWithContext(ctx aws.Context, input *ListResolverQueryLogConfigsInput, fn func(*ListResolverQueryLogConfigsOutput, bool) bool, opts ...request.Option) error {",
          "2478:    var inCpy *ListResolverQueryLogConfigsInput",
          "2483:    req, _ := c.ListResolverQueryLogConfigsRequest(inCpy)",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1448:  }",
          "1450:  for p.Next() {",
          "1452:    break",
          "1453:   }",
          "1454:  }",
          "",
          "[Removed Lines]",
          "1451:   if !fn(p.Page().(*ListResolverEndpointsOutput), !p.HasNextPage()) {",
          "",
          "[Added Lines]",
          "2491:   if !fn(p.Page().(*ListResolverQueryLogConfigsOutput), !p.HasNextPage()) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1786:   Name:       opListTagsForResource,",
          "1787:   HTTPMethod: \"POST\",",
          "1788:   HTTPPath:   \"/\",",
          "1789:  }",
          "1791:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2829:   Paginator: &request.Paginator{",
          "2830:    InputTokens:     []string{\"NextToken\"},",
          "2831:    OutputTokens:    []string{\"NextToken\"},",
          "2832:    LimitToken:      \"MaxResults\",",
          "2833:    TruncationToken: \"\",",
          "2834:   },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1833:  return out, req.Send()",
          "1834: }",
          "1847:  req.SetContext(ctx)",
          "1848:  req.ApplyOptions(opts...)",
          "1849:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "1831: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "1832:  req, out := c.ListTagsForResourceRequest(input)",
          "1845: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "1846:  req, out := c.ListTagsForResourceRequest(input)",
          "",
          "[Added Lines]",
          "2877: func (c *Route53Resolver) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {",
          "2878:  req, out := c.ListTagsForResourceRequest(input)",
          "2879:  return out, req.Send()",
          "2880: }",
          "2891: func (c *Route53Resolver) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {",
          "2892:  req, out := c.ListTagsForResourceRequest(input)",
          "2893:  req.SetContext(ctx)",
          "2894:  req.ApplyOptions(opts...)",
          "2895:  return out, req.Send()",
          "2896: }",
          "2915: func (c *Route53Resolver) ListTagsForResourcePages(input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool) error {",
          "2916:  return c.ListTagsForResourcePagesWithContext(aws.BackgroundContext(), input, fn)",
          "2917: }",
          "2926: func (c *Route53Resolver) ListTagsForResourcePagesWithContext(ctx aws.Context, input *ListTagsForResourceInput, fn func(*ListTagsForResourceOutput, bool) bool, opts ...request.Option) error {",
          "2927:  p := request.Pagination{",
          "2928:   NewRequest: func() (*request.Request, error) {",
          "2929:    var inCpy *ListTagsForResourceInput",
          "2930:    if input != nil {",
          "2931:     tmp := *input",
          "2932:     inCpy = &tmp",
          "2933:    }",
          "2934:    req, _ := c.ListTagsForResourceRequest(inCpy)",
          "2935:    req.SetContext(ctx)",
          "2936:    req.ApplyOptions(opts...)",
          "2937:    return req, nil",
          "2938:   },",
          "2939:  }",
          "2941:  for p.Next() {",
          "2942:   if !fn(p.Page().(*ListTagsForResourceOutput), !p.HasNextPage()) {",
          "2943:    break",
          "2944:   }",
          "2945:  }",
          "2947:  return p.Err()",
          "2948: }",
          "2950: const opPutResolverQueryLogConfigPolicy = \"PutResolverQueryLogConfigPolicy\"",
          "2976: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyRequest(input *PutResolverQueryLogConfigPolicyInput) (req *request.Request, output *PutResolverQueryLogConfigPolicyOutput) {",
          "2977:  op := &request.Operation{",
          "2978:   Name:       opPutResolverQueryLogConfigPolicy,",
          "2979:   HTTPMethod: \"POST\",",
          "2980:   HTTPPath:   \"/\",",
          "2981:  }",
          "2983:  if input == nil {",
          "2984:   input = &PutResolverQueryLogConfigPolicyInput{}",
          "2985:  }",
          "2987:  output = &PutResolverQueryLogConfigPolicyOutput{}",
          "2988:  req = c.newRequest(op, input, output)",
          "2989:  return",
          "2990: }",
          "3026: func (c *Route53Resolver) PutResolverQueryLogConfigPolicy(input *PutResolverQueryLogConfigPolicyInput) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3027:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "3040: func (c *Route53Resolver) PutResolverQueryLogConfigPolicyWithContext(ctx aws.Context, input *PutResolverQueryLogConfigPolicyInput, opts ...request.Option) (*PutResolverQueryLogConfigPolicyOutput, error) {",
          "3041:  req, out := c.PutResolverQueryLogConfigPolicyRequest(input)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2312:  return out, req.Send()",
          "2313: }",
          "2315: type AssociateResolverEndpointIpAddressInput struct {",
          "2316:  _ struct{} `type:\"structure\"`",
          "2323:  IpAddress *IpAddressUpdate `type:\"structure\" required:\"true\"`",
          "2328:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3519: type AccessDeniedException struct {",
          "3520:  _            struct{}                  `type:\"structure\"`",
          "3521:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "3523:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "3524: }",
          "3527: func (s AccessDeniedException) String() string {",
          "3528:  return awsutil.Prettify(s)",
          "3529: }",
          "3532: func (s AccessDeniedException) GoString() string {",
          "3533:  return s.String()",
          "3534: }",
          "3536: func newErrorAccessDeniedException(v protocol.ResponseMetadata) error {",
          "3537:  return &AccessDeniedException{",
          "3538:   RespMetadata: v,",
          "3539:  }",
          "3540: }",
          "3543: func (s *AccessDeniedException) Code() string {",
          "3544:  return \"AccessDeniedException\"",
          "3545: }",
          "3548: func (s *AccessDeniedException) Message() string {",
          "3549:  if s.Message_ != nil {",
          "3550:   return *s.Message_",
          "3551:  }",
          "3552:  return \"\"",
          "3553: }",
          "3556: func (s *AccessDeniedException) OrigErr() error {",
          "3557:  return nil",
          "3558: }",
          "3560: func (s *AccessDeniedException) Error() string {",
          "3561:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "3562: }",
          "3565: func (s *AccessDeniedException) StatusCode() int {",
          "3566:  return s.RespMetadata.StatusCode",
          "3567: }",
          "3570: func (s *AccessDeniedException) RequestID() string {",
          "3571:  return s.RespMetadata.RequestID",
          "3572: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2397:  return s",
          "2398: }",
          "2400: type AssociateResolverRuleInput struct {",
          "2401:  _ struct{} `type:\"structure\"`",
          "2405:  Name *string `type:\"string\"`",
          "2411:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "2416:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3659: type AssociateResolverQueryLogConfigInput struct {",
          "3660:  _ struct{} `type:\"structure\"`",
          "3666:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3674:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3675: }",
          "3678: func (s AssociateResolverQueryLogConfigInput) String() string {",
          "3679:  return awsutil.Prettify(s)",
          "3680: }",
          "3683: func (s AssociateResolverQueryLogConfigInput) GoString() string {",
          "3684:  return s.String()",
          "3685: }",
          "3688: func (s *AssociateResolverQueryLogConfigInput) Validate() error {",
          "3689:  invalidParams := request.ErrInvalidParams{Context: \"AssociateResolverQueryLogConfigInput\"}",
          "3690:  if s.ResolverQueryLogConfigId == nil {",
          "3691:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "3692:  }",
          "3693:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "3694:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "3695:  }",
          "3696:  if s.ResourceId == nil {",
          "3697:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "3698:  }",
          "3699:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "3700:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "3701:  }",
          "3703:  if invalidParams.Len() > 0 {",
          "3704:   return invalidParams",
          "3705:  }",
          "3706:  return nil",
          "3707: }",
          "3710: func (s *AssociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *AssociateResolverQueryLogConfigInput {",
          "3711:  s.ResolverQueryLogConfigId = &v",
          "3712:  return s",
          "3713: }",
          "3716: func (s *AssociateResolverQueryLogConfigInput) SetResourceId(v string) *AssociateResolverQueryLogConfigInput {",
          "3717:  s.ResourceId = &v",
          "3718:  return s",
          "3719: }",
          "3721: type AssociateResolverQueryLogConfigOutput struct {",
          "3722:  _ struct{} `type:\"structure\"`",
          "3726:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "3727: }",
          "3730: func (s AssociateResolverQueryLogConfigOutput) String() string {",
          "3731:  return awsutil.Prettify(s)",
          "3732: }",
          "3735: func (s AssociateResolverQueryLogConfigOutput) GoString() string {",
          "3736:  return s.String()",
          "3737: }",
          "3740: func (s *AssociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *AssociateResolverQueryLogConfigOutput {",
          "3741:  s.ResolverQueryLogConfigAssociation = v",
          "3742:  return s",
          "3743: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2575:    }",
          "2576:   }",
          "2577:  }",
          "2579:  if invalidParams.Len() > 0 {",
          "2580:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3925:  if s.Tags != nil {",
          "3926:   for i, v := range s.Tags {",
          "3927:    if v == nil {",
          "3928:     continue",
          "3929:    }",
          "3930:    if err := v.Validate(); err != nil {",
          "3931:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "3932:    }",
          "3933:   }",
          "3934:  }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2642:  return s",
          "2643: }",
          "2645: type CreateResolverRuleInput struct {",
          "2646:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4002: type CreateResolverQueryLogConfigInput struct {",
          "4003:  _ struct{} `type:\"structure\"`",
          "4008:  CreatorRequestId *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "4022:  DestinationArn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4027:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4031:  Tags []*Tag `type:\"list\"`",
          "4032: }",
          "4035: func (s CreateResolverQueryLogConfigInput) String() string {",
          "4036:  return awsutil.Prettify(s)",
          "4037: }",
          "4040: func (s CreateResolverQueryLogConfigInput) GoString() string {",
          "4041:  return s.String()",
          "4042: }",
          "4045: func (s *CreateResolverQueryLogConfigInput) Validate() error {",
          "4046:  invalidParams := request.ErrInvalidParams{Context: \"CreateResolverQueryLogConfigInput\"}",
          "4047:  if s.CreatorRequestId != nil && len(*s.CreatorRequestId) < 1 {",
          "4048:   invalidParams.Add(request.NewErrParamMinLen(\"CreatorRequestId\", 1))",
          "4049:  }",
          "4050:  if s.DestinationArn == nil {",
          "4051:   invalidParams.Add(request.NewErrParamRequired(\"DestinationArn\"))",
          "4052:  }",
          "4053:  if s.DestinationArn != nil && len(*s.DestinationArn) < 1 {",
          "4054:   invalidParams.Add(request.NewErrParamMinLen(\"DestinationArn\", 1))",
          "4055:  }",
          "4056:  if s.Name == nil {",
          "4057:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "4058:  }",
          "4059:  if s.Name != nil && len(*s.Name) < 1 {",
          "4060:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "4061:  }",
          "4062:  if s.Tags != nil {",
          "4063:   for i, v := range s.Tags {",
          "4064:    if v == nil {",
          "4065:     continue",
          "4066:    }",
          "4067:    if err := v.Validate(); err != nil {",
          "4068:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4069:    }",
          "4070:   }",
          "4071:  }",
          "4073:  if invalidParams.Len() > 0 {",
          "4074:   return invalidParams",
          "4075:  }",
          "4076:  return nil",
          "4077: }",
          "4080: func (s *CreateResolverQueryLogConfigInput) SetCreatorRequestId(v string) *CreateResolverQueryLogConfigInput {",
          "4081:  s.CreatorRequestId = &v",
          "4082:  return s",
          "4083: }",
          "4086: func (s *CreateResolverQueryLogConfigInput) SetDestinationArn(v string) *CreateResolverQueryLogConfigInput {",
          "4087:  s.DestinationArn = &v",
          "4088:  return s",
          "4089: }",
          "4092: func (s *CreateResolverQueryLogConfigInput) SetName(v string) *CreateResolverQueryLogConfigInput {",
          "4093:  s.Name = &v",
          "4094:  return s",
          "4095: }",
          "4098: func (s *CreateResolverQueryLogConfigInput) SetTags(v []*Tag) *CreateResolverQueryLogConfigInput {",
          "4099:  s.Tags = v",
          "4100:  return s",
          "4101: }",
          "4103: type CreateResolverQueryLogConfigOutput struct {",
          "4104:  _ struct{} `type:\"structure\"`",
          "4108:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4109: }",
          "4112: func (s CreateResolverQueryLogConfigOutput) String() string {",
          "4113:  return awsutil.Prettify(s)",
          "4114: }",
          "4117: func (s CreateResolverQueryLogConfigOutput) GoString() string {",
          "4118:  return s.String()",
          "4119: }",
          "4122: func (s *CreateResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *CreateResolverQueryLogConfigOutput {",
          "4123:  s.ResolverQueryLogConfig = v",
          "4124:  return s",
          "4125: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2715:  if s.TargetIps != nil && len(s.TargetIps) < 1 {",
          "2716:   invalidParams.Add(request.NewErrParamMinLen(\"TargetIps\", 1))",
          "2717:  }",
          "2718:  if s.TargetIps != nil {",
          "2719:   for i, v := range s.TargetIps {",
          "2720:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4215:  if s.Tags != nil {",
          "4216:   for i, v := range s.Tags {",
          "4217:    if v == nil {",
          "4218:     continue",
          "4219:    }",
          "4220:    if err := v.Validate(); err != nil {",
          "4221:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "4222:    }",
          "4223:   }",
          "4224:  }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2842: type DeleteResolverEndpointOutput struct {",
          "2843:  _ struct{} `type:\"structure\"`",
          "2848: }",
          "2852:  return awsutil.Prettify(s)",
          "2853: }",
          "2857:  return s.String()",
          "2858: }",
          "2863:  return s",
          "2864: }",
          "2866: type DeleteResolverRuleInput struct {",
          "2867:  _ struct{} `type:\"structure\"`",
          "2872:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "2847:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "2851: func (s DeleteResolverEndpointOutput) String() string {",
          "2856: func (s DeleteResolverEndpointOutput) GoString() string {",
          "2861: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "2862:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "4354:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "4355: }",
          "4358: func (s DeleteResolverEndpointOutput) String() string {",
          "4359:  return awsutil.Prettify(s)",
          "4360: }",
          "4363: func (s DeleteResolverEndpointOutput) GoString() string {",
          "4364:  return s.String()",
          "4365: }",
          "4368: func (s *DeleteResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *DeleteResolverEndpointOutput {",
          "4369:  s.ResolverEndpoint = v",
          "4370:  return s",
          "4371: }",
          "4373: type DeleteResolverQueryLogConfigInput struct {",
          "4374:  _ struct{} `type:\"structure\"`",
          "4379:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4380: }",
          "4383: func (s DeleteResolverQueryLogConfigInput) String() string {",
          "4384:  return awsutil.Prettify(s)",
          "4385: }",
          "4388: func (s DeleteResolverQueryLogConfigInput) GoString() string {",
          "4389:  return s.String()",
          "4390: }",
          "4393: func (s *DeleteResolverQueryLogConfigInput) Validate() error {",
          "4394:  invalidParams := request.ErrInvalidParams{Context: \"DeleteResolverQueryLogConfigInput\"}",
          "4395:  if s.ResolverQueryLogConfigId == nil {",
          "4396:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4397:  }",
          "4398:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4399:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4400:  }",
          "4402:  if invalidParams.Len() > 0 {",
          "4403:   return invalidParams",
          "4404:  }",
          "4405:  return nil",
          "4406: }",
          "4409: func (s *DeleteResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DeleteResolverQueryLogConfigInput {",
          "4410:  s.ResolverQueryLogConfigId = &v",
          "4411:  return s",
          "4412: }",
          "4414: type DeleteResolverQueryLogConfigOutput struct {",
          "4415:  _ struct{} `type:\"structure\"`",
          "4419:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "4423: func (s DeleteResolverQueryLogConfigOutput) String() string {",
          "4428: func (s DeleteResolverQueryLogConfigOutput) GoString() string {",
          "4433: func (s *DeleteResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *DeleteResolverQueryLogConfigOutput {",
          "4434:  s.ResolverQueryLogConfig = v",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3012:  return s",
          "3013: }",
          "3015: type DisassociateResolverRuleInput struct {",
          "3016:  _ struct{} `type:\"structure\"`",
          "3022:  ResolverRuleId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3027:  VPCId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4587: type DisassociateResolverQueryLogConfigInput struct {",
          "4588:  _ struct{} `type:\"structure\"`",
          "4594:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4600:  ResourceId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4601: }",
          "4604: func (s DisassociateResolverQueryLogConfigInput) String() string {",
          "4605:  return awsutil.Prettify(s)",
          "4606: }",
          "4609: func (s DisassociateResolverQueryLogConfigInput) GoString() string {",
          "4610:  return s.String()",
          "4611: }",
          "4614: func (s *DisassociateResolverQueryLogConfigInput) Validate() error {",
          "4615:  invalidParams := request.ErrInvalidParams{Context: \"DisassociateResolverQueryLogConfigInput\"}",
          "4616:  if s.ResolverQueryLogConfigId == nil {",
          "4617:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "4618:  }",
          "4619:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "4620:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "4621:  }",
          "4622:  if s.ResourceId == nil {",
          "4623:   invalidParams.Add(request.NewErrParamRequired(\"ResourceId\"))",
          "4624:  }",
          "4625:  if s.ResourceId != nil && len(*s.ResourceId) < 1 {",
          "4626:   invalidParams.Add(request.NewErrParamMinLen(\"ResourceId\", 1))",
          "4627:  }",
          "4629:  if invalidParams.Len() > 0 {",
          "4630:   return invalidParams",
          "4631:  }",
          "4632:  return nil",
          "4633: }",
          "4636: func (s *DisassociateResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4637:  s.ResolverQueryLogConfigId = &v",
          "4638:  return s",
          "4639: }",
          "4642: func (s *DisassociateResolverQueryLogConfigInput) SetResourceId(v string) *DisassociateResolverQueryLogConfigInput {",
          "4643:  s.ResourceId = &v",
          "4644:  return s",
          "4645: }",
          "4647: type DisassociateResolverQueryLogConfigOutput struct {",
          "4648:  _ struct{} `type:\"structure\"`",
          "4652:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "4653: }",
          "4656: func (s DisassociateResolverQueryLogConfigOutput) String() string {",
          "4657:  return awsutil.Prettify(s)",
          "4658: }",
          "4661: func (s DisassociateResolverQueryLogConfigOutput) GoString() string {",
          "4662:  return s.String()",
          "4663: }",
          "4666: func (s *DisassociateResolverQueryLogConfigOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *DisassociateResolverQueryLogConfigOutput {",
          "4667:  s.ResolverQueryLogConfigAssociation = v",
          "4668:  return s",
          "4669: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3137:  return nil",
          "3138: }",
          "3144: }",
          "3149:  return s",
          "3150: }",
          "3153:  _ struct{} `type:\"structure\"`",
          "3159: }",
          "3163:  return awsutil.Prettify(s)",
          "3164: }",
          "3168:  return s.String()",
          "3169: }",
          "3176:  }",
          "3179:  }",
          "3181:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3141: func (s *Filter) SetName(v string) *Filter {",
          "3142:  s.Name = &v",
          "3143:  return s",
          "3147: func (s *Filter) SetValues(v []*string) *Filter {",
          "3148:  s.Values = v",
          "3152: type GetResolverEndpointInput struct {",
          "3158:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "3162: func (s GetResolverEndpointInput) String() string {",
          "3167: func (s GetResolverEndpointInput) GoString() string {",
          "3172: func (s *GetResolverEndpointInput) Validate() error {",
          "3173:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "3174:  if s.ResolverEndpointId == nil {",
          "3175:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "3177:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "3178:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "4946: func (s *Filter) SetName(v string) *Filter {",
          "4947:  s.Name = &v",
          "4948:  return s",
          "4949: }",
          "4952: func (s *Filter) SetValues(v []*string) *Filter {",
          "4953:  s.Values = v",
          "4954:  return s",
          "4955: }",
          "4957: type GetResolverEndpointInput struct {",
          "4958:  _ struct{} `type:\"structure\"`",
          "4963:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4964: }",
          "4967: func (s GetResolverEndpointInput) String() string {",
          "4968:  return awsutil.Prettify(s)",
          "4969: }",
          "4972: func (s GetResolverEndpointInput) GoString() string {",
          "4973:  return s.String()",
          "4974: }",
          "4977: func (s *GetResolverEndpointInput) Validate() error {",
          "4978:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverEndpointInput\"}",
          "4979:  if s.ResolverEndpointId == nil {",
          "4980:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4981:  }",
          "4982:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4983:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "4984:  }",
          "4986:  if invalidParams.Len() > 0 {",
          "4987:   return invalidParams",
          "4988:  }",
          "4989:  return nil",
          "4990: }",
          "4993: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "4994:  s.ResolverEndpointId = &v",
          "4995:  return s",
          "4996: }",
          "4998: type GetResolverEndpointOutput struct {",
          "4999:  _ struct{} `type:\"structure\"`",
          "5003:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "5004: }",
          "5007: func (s GetResolverEndpointOutput) String() string {",
          "5008:  return awsutil.Prettify(s)",
          "5009: }",
          "5012: func (s GetResolverEndpointOutput) GoString() string {",
          "5013:  return s.String()",
          "5014: }",
          "5017: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "5018:  s.ResolverEndpoint = v",
          "5019:  return s",
          "5020: }",
          "5022: type GetResolverQueryLogConfigAssociationInput struct {",
          "5023:  _ struct{} `type:\"structure\"`",
          "5029:  ResolverQueryLogConfigAssociationId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5030: }",
          "5033: func (s GetResolverQueryLogConfigAssociationInput) String() string {",
          "5034:  return awsutil.Prettify(s)",
          "5035: }",
          "5038: func (s GetResolverQueryLogConfigAssociationInput) GoString() string {",
          "5039:  return s.String()",
          "5040: }",
          "5043: func (s *GetResolverQueryLogConfigAssociationInput) Validate() error {",
          "5044:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigAssociationInput\"}",
          "5045:  if s.ResolverQueryLogConfigAssociationId == nil {",
          "5046:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigAssociationId\"))",
          "5047:  }",
          "5048:  if s.ResolverQueryLogConfigAssociationId != nil && len(*s.ResolverQueryLogConfigAssociationId) < 1 {",
          "5049:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigAssociationId\", 1))",
          "5050:  }",
          "5052:  if invalidParams.Len() > 0 {",
          "5053:   return invalidParams",
          "5054:  }",
          "5055:  return nil",
          "5056: }",
          "5059: func (s *GetResolverQueryLogConfigAssociationInput) SetResolverQueryLogConfigAssociationId(v string) *GetResolverQueryLogConfigAssociationInput {",
          "5060:  s.ResolverQueryLogConfigAssociationId = &v",
          "5061:  return s",
          "5062: }",
          "5064: type GetResolverQueryLogConfigAssociationOutput struct {",
          "5065:  _ struct{} `type:\"structure\"`",
          "5069:  ResolverQueryLogConfigAssociation *ResolverQueryLogConfigAssociation `type:\"structure\"`",
          "5070: }",
          "5073: func (s GetResolverQueryLogConfigAssociationOutput) String() string {",
          "5074:  return awsutil.Prettify(s)",
          "5075: }",
          "5078: func (s GetResolverQueryLogConfigAssociationOutput) GoString() string {",
          "5079:  return s.String()",
          "5080: }",
          "5083: func (s *GetResolverQueryLogConfigAssociationOutput) SetResolverQueryLogConfigAssociation(v *ResolverQueryLogConfigAssociation) *GetResolverQueryLogConfigAssociationOutput {",
          "5084:  s.ResolverQueryLogConfigAssociation = v",
          "5085:  return s",
          "5086: }",
          "5088: type GetResolverQueryLogConfigInput struct {",
          "5089:  _ struct{} `type:\"structure\"`",
          "5095:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5096: }",
          "5099: func (s GetResolverQueryLogConfigInput) String() string {",
          "5100:  return awsutil.Prettify(s)",
          "5101: }",
          "5104: func (s GetResolverQueryLogConfigInput) GoString() string {",
          "5105:  return s.String()",
          "5106: }",
          "5109: func (s *GetResolverQueryLogConfigInput) Validate() error {",
          "5110:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigInput\"}",
          "5111:  if s.ResolverQueryLogConfigId == nil {",
          "5112:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigId\"))",
          "5113:  }",
          "5114:  if s.ResolverQueryLogConfigId != nil && len(*s.ResolverQueryLogConfigId) < 1 {",
          "5115:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverQueryLogConfigId\", 1))",
          "5116:  }",
          "5118:  if invalidParams.Len() > 0 {",
          "5119:   return invalidParams",
          "5120:  }",
          "5121:  return nil",
          "5122: }",
          "5125: func (s *GetResolverQueryLogConfigInput) SetResolverQueryLogConfigId(v string) *GetResolverQueryLogConfigInput {",
          "5126:  s.ResolverQueryLogConfigId = &v",
          "5127:  return s",
          "5128: }",
          "5130: type GetResolverQueryLogConfigOutput struct {",
          "5131:  _ struct{} `type:\"structure\"`",
          "5135:  ResolverQueryLogConfig *ResolverQueryLogConfig `type:\"structure\"`",
          "5136: }",
          "5139: func (s GetResolverQueryLogConfigOutput) String() string {",
          "5140:  return awsutil.Prettify(s)",
          "5141: }",
          "5144: func (s GetResolverQueryLogConfigOutput) GoString() string {",
          "5145:  return s.String()",
          "5149: func (s *GetResolverQueryLogConfigOutput) SetResolverQueryLogConfig(v *ResolverQueryLogConfig) *GetResolverQueryLogConfigOutput {",
          "5150:  s.ResolverQueryLogConfig = v",
          "5154: type GetResolverQueryLogConfigPolicyInput struct {",
          "5161:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "5165: func (s GetResolverQueryLogConfigPolicyInput) String() string {",
          "5170: func (s GetResolverQueryLogConfigPolicyInput) GoString() string {",
          "5175: func (s *GetResolverQueryLogConfigPolicyInput) Validate() error {",
          "5176:  invalidParams := request.ErrInvalidParams{Context: \"GetResolverQueryLogConfigPolicyInput\"}",
          "5177:  if s.Arn == nil {",
          "5178:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "5180:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "5181:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3184:  return nil",
          "3185: }",
          "3190:  return s",
          "3191: }",
          "3194:  _ struct{} `type:\"structure\"`",
          "3199: }",
          "3203:  return awsutil.Prettify(s)",
          "3204: }",
          "3208:  return s.String()",
          "3209: }",
          "3214:  return s",
          "3215: }",
          "3217: type GetResolverRuleAssociationInput struct {",
          "3218:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "3188: func (s *GetResolverEndpointInput) SetResolverEndpointId(v string) *GetResolverEndpointInput {",
          "3189:  s.ResolverEndpointId = &v",
          "3193: type GetResolverEndpointOutput struct {",
          "3198:  ResolverEndpoint *ResolverEndpoint `type:\"structure\"`",
          "3202: func (s GetResolverEndpointOutput) String() string {",
          "3207: func (s GetResolverEndpointOutput) GoString() string {",
          "3212: func (s *GetResolverEndpointOutput) SetResolverEndpoint(v *ResolverEndpoint) *GetResolverEndpointOutput {",
          "3213:  s.ResolverEndpoint = v",
          "",
          "[Added Lines]",
          "5191: func (s *GetResolverQueryLogConfigPolicyInput) SetArn(v string) *GetResolverQueryLogConfigPolicyInput {",
          "5192:  s.Arn = &v",
          "5196: type GetResolverQueryLogConfigPolicyOutput struct {",
          "5201:  ResolverQueryLogConfigPolicy *string `type:\"string\"`",
          "5205: func (s GetResolverQueryLogConfigPolicyOutput) String() string {",
          "5210: func (s GetResolverQueryLogConfigPolicyOutput) GoString() string {",
          "5215: func (s *GetResolverQueryLogConfigPolicyOutput) SetResolverQueryLogConfigPolicy(v string) *GetResolverQueryLogConfigPolicyOutput {",
          "5216:  s.ResolverQueryLogConfigPolicy = &v",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "3991:  return \"\"",
          "3992: }",
          "3997: }",
          "4001: }",
          "4006: }",
          "4011: }",
          "4014:  _ struct{} `type:\"structure\"`",
          "4019:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4027:  NextToken *string `type:\"string\"`",
          "4033: }",
          "4037:  return awsutil.Prettify(s)",
          "4038: }",
          "4042:  return s.String()",
          "4043: }",
          "4048:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4049:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4050:  }",
          "4053:  }",
          "4056:  }",
          "4058:  if invalidParams.Len() > 0 {",
          "",
          "[Removed Lines]",
          "3995: func (s *LimitExceededException) OrigErr() error {",
          "3996:  return nil",
          "3999: func (s *LimitExceededException) Error() string {",
          "4000:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "4004: func (s *LimitExceededException) StatusCode() int {",
          "4005:  return s.RespMetadata.StatusCode",
          "4009: func (s *LimitExceededException) RequestID() string {",
          "4010:  return s.RespMetadata.RequestID",
          "4013: type ListResolverEndpointIpAddressesInput struct {",
          "4032:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4036: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "4041: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "4046: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "4047:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "4051:  if s.ResolverEndpointId == nil {",
          "4052:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "4054:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "4055:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "",
          "[Added Lines]",
          "6002: func (s *LimitExceededException) OrigErr() error {",
          "6003:  return nil",
          "6004: }",
          "6006: func (s *LimitExceededException) Error() string {",
          "6007:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "6008: }",
          "6011: func (s *LimitExceededException) StatusCode() int {",
          "6012:  return s.RespMetadata.StatusCode",
          "6013: }",
          "6016: func (s *LimitExceededException) RequestID() string {",
          "6017:  return s.RespMetadata.RequestID",
          "6018: }",
          "6020: type ListResolverEndpointIpAddressesInput struct {",
          "6021:  _ struct{} `type:\"structure\"`",
          "6026:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6034:  NextToken *string `type:\"string\"`",
          "6039:  ResolverEndpointId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "6040: }",
          "6043: func (s ListResolverEndpointIpAddressesInput) String() string {",
          "6044:  return awsutil.Prettify(s)",
          "6045: }",
          "6048: func (s ListResolverEndpointIpAddressesInput) GoString() string {",
          "6049:  return s.String()",
          "6050: }",
          "6053: func (s *ListResolverEndpointIpAddressesInput) Validate() error {",
          "6054:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointIpAddressesInput\"}",
          "6055:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6056:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6057:  }",
          "6058:  if s.ResolverEndpointId == nil {",
          "6059:   invalidParams.Add(request.NewErrParamRequired(\"ResolverEndpointId\"))",
          "6060:  }",
          "6061:  if s.ResolverEndpointId != nil && len(*s.ResolverEndpointId) < 1 {",
          "6062:   invalidParams.Add(request.NewErrParamMinLen(\"ResolverEndpointId\", 1))",
          "6063:  }",
          "6065:  if invalidParams.Len() > 0 {",
          "6066:   return invalidParams",
          "6067:  }",
          "6068:  return nil",
          "6069: }",
          "6072: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "6073:  s.MaxResults = &v",
          "6074:  return s",
          "6075: }",
          "6078: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "6079:  s.NextToken = &v",
          "6080:  return s",
          "6081: }",
          "6084: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "6085:  s.ResolverEndpointId = &v",
          "6086:  return s",
          "6087: }",
          "6089: type ListResolverEndpointIpAddressesOutput struct {",
          "6090:  _ struct{} `type:\"structure\"`",
          "6095:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "6098:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6104:  NextToken *string `type:\"string\"`",
          "6105: }",
          "6108: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "6109:  return awsutil.Prettify(s)",
          "6110: }",
          "6113: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "6114:  return s.String()",
          "6115: }",
          "6118: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "6119:  s.IpAddresses = v",
          "6120:  return s",
          "6121: }",
          "6124: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "6125:  s.MaxResults = &v",
          "6126:  return s",
          "6127: }",
          "6130: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "6131:  s.NextToken = &v",
          "6132:  return s",
          "6133: }",
          "6135: type ListResolverEndpointsInput struct {",
          "6136:  _ struct{} `type:\"structure\"`",
          "6144:  Filters []*Filter `type:\"list\"`",
          "6149:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6156:  NextToken *string `type:\"string\"`",
          "6157: }",
          "6160: func (s ListResolverEndpointsInput) String() string {",
          "6161:  return awsutil.Prettify(s)",
          "6162: }",
          "6165: func (s ListResolverEndpointsInput) GoString() string {",
          "6166:  return s.String()",
          "6167: }",
          "6170: func (s *ListResolverEndpointsInput) Validate() error {",
          "6171:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "6172:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "6173:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "6174:  }",
          "6175:  if s.Filters != nil {",
          "6176:   for i, v := range s.Filters {",
          "6177:    if v == nil {",
          "6178:     continue",
          "6179:    }",
          "6180:    if err := v.Validate(); err != nil {",
          "6181:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6182:    }",
          "6183:   }",
          "6184:  }",
          "6186:  if invalidParams.Len() > 0 {",
          "6187:   return invalidParams",
          "6188:  }",
          "6189:  return nil",
          "6190: }",
          "6193: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "6194:  s.Filters = v",
          "6195:  return s",
          "6196: }",
          "6199: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "6200:  s.MaxResults = &v",
          "6201:  return s",
          "6202: }",
          "6205: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "6206:  s.NextToken = &v",
          "6207:  return s",
          "6208: }",
          "6210: type ListResolverEndpointsOutput struct {",
          "6211:  _ struct{} `type:\"structure\"`",
          "6214:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "6219:  NextToken *string `type:\"string\"`",
          "6223:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "6224: }",
          "6227: func (s ListResolverEndpointsOutput) String() string {",
          "6228:  return awsutil.Prettify(s)",
          "6229: }",
          "6232: func (s ListResolverEndpointsOutput) GoString() string {",
          "6233:  return s.String()",
          "6237: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "6238:  s.MaxResults = &v",
          "6239:  return s",
          "6243: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "6244:  s.NextToken = &v",
          "6245:  return s",
          "6249: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "6250:  s.ResolverEndpoints = v",
          "6251:  return s",
          "6254: type ListResolverQueryLogConfigAssociationsInput struct {",
          "6262:  Filters []*Filter `type:\"list\"`",
          "6311:  SortBy *string `min:\"1\" type:\"string\"`",
          "6319:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6323: func (s ListResolverQueryLogConfigAssociationsInput) String() string {",
          "6328: func (s ListResolverQueryLogConfigAssociationsInput) GoString() string {",
          "6333: func (s *ListResolverQueryLogConfigAssociationsInput) Validate() error {",
          "6334:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigAssociationsInput\"}",
          "6338:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6339:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6341:  if s.Filters != nil {",
          "6342:   for i, v := range s.Filters {",
          "6343:    if v == nil {",
          "6344:     continue",
          "6345:    }",
          "6346:    if err := v.Validate(); err != nil {",
          "6347:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Filters\", i), err.(request.ErrInvalidParams))",
          "6348:    }",
          "6349:   }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4061:  return nil",
          "4062: }",
          "4066:  s.MaxResults = &v",
          "4067:  return s",
          "4068: }",
          "4072:  s.NextToken = &v",
          "4073:  return s",
          "4074: }",
          "4079:  return s",
          "4080: }",
          "4096:  NextToken *string `type:\"string\"`",
          "4097: }",
          "4101:  return awsutil.Prettify(s)",
          "4102: }",
          "4106:  return s.String()",
          "4107: }",
          "4112:  return s",
          "4113: }",
          "4118:  return s",
          "4119: }",
          "4124:  return s",
          "4125: }",
          "4128:  _ struct{} `type:\"structure\"`",
          "4136:  Filters []*Filter `type:\"list\"`",
          "4141:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4148:  NextToken *string `type:\"string\"`",
          "4149: }",
          "4153:  return awsutil.Prettify(s)",
          "4154: }",
          "4158:  return s.String()",
          "4159: }",
          "4164:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "4165:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "4166:  }",
          "4167:  if s.Filters != nil {",
          "4168:   for i, v := range s.Filters {",
          "4169:    if v == nil {",
          "",
          "[Removed Lines]",
          "4065: func (s *ListResolverEndpointIpAddressesInput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesInput {",
          "4071: func (s *ListResolverEndpointIpAddressesInput) SetNextToken(v string) *ListResolverEndpointIpAddressesInput {",
          "4077: func (s *ListResolverEndpointIpAddressesInput) SetResolverEndpointId(v string) *ListResolverEndpointIpAddressesInput {",
          "4078:  s.ResolverEndpointId = &v",
          "4082: type ListResolverEndpointIpAddressesOutput struct {",
          "4083:  _ struct{} `type:\"structure\"`",
          "4087:  IpAddresses []*IpAddressResponse `type:\"list\"`",
          "4090:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4100: func (s ListResolverEndpointIpAddressesOutput) String() string {",
          "4105: func (s ListResolverEndpointIpAddressesOutput) GoString() string {",
          "4110: func (s *ListResolverEndpointIpAddressesOutput) SetIpAddresses(v []*IpAddressResponse) *ListResolverEndpointIpAddressesOutput {",
          "4111:  s.IpAddresses = v",
          "4116: func (s *ListResolverEndpointIpAddressesOutput) SetMaxResults(v int64) *ListResolverEndpointIpAddressesOutput {",
          "4117:  s.MaxResults = &v",
          "4122: func (s *ListResolverEndpointIpAddressesOutput) SetNextToken(v string) *ListResolverEndpointIpAddressesOutput {",
          "4123:  s.NextToken = &v",
          "4127: type ListResolverEndpointsInput struct {",
          "4152: func (s ListResolverEndpointsInput) String() string {",
          "4157: func (s ListResolverEndpointsInput) GoString() string {",
          "4162: func (s *ListResolverEndpointsInput) Validate() error {",
          "4163:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverEndpointsInput\"}",
          "",
          "[Added Lines]",
          "6359: func (s *ListResolverQueryLogConfigAssociationsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigAssociationsInput {",
          "6360:  s.Filters = v",
          "6361:  return s",
          "6362: }",
          "6365: func (s *ListResolverQueryLogConfigAssociationsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigAssociationsInput {",
          "6371: func (s *ListResolverQueryLogConfigAssociationsInput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6377: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortBy(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6378:  s.SortBy = &v",
          "6383: func (s *ListResolverQueryLogConfigAssociationsInput) SetSortOrder(v string) *ListResolverQueryLogConfigAssociationsInput {",
          "6384:  s.SortOrder = &v",
          "6385:  return s",
          "6386: }",
          "6388: type ListResolverQueryLogConfigAssociationsOutput struct {",
          "6389:  _ struct{} `type:\"structure\"`",
          "6400:  ResolverQueryLogConfigAssociations []*ResolverQueryLogConfigAssociation `type:\"list\"`",
          "6406:  TotalCount *int64 `type:\"integer\"`",
          "6413:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6417: func (s ListResolverQueryLogConfigAssociationsOutput) String() string {",
          "6422: func (s ListResolverQueryLogConfigAssociationsOutput) GoString() string {",
          "6427: func (s *ListResolverQueryLogConfigAssociationsOutput) SetNextToken(v string) *ListResolverQueryLogConfigAssociationsOutput {",
          "6428:  s.NextToken = &v",
          "6433: func (s *ListResolverQueryLogConfigAssociationsOutput) SetResolverQueryLogConfigAssociations(v []*ResolverQueryLogConfigAssociation) *ListResolverQueryLogConfigAssociationsOutput {",
          "6434:  s.ResolverQueryLogConfigAssociations = v",
          "6439: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6440:  s.TotalCount = &v",
          "6445: func (s *ListResolverQueryLogConfigAssociationsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigAssociationsOutput {",
          "6446:  s.TotalFilteredCount = &v",
          "6447:  return s",
          "6448: }",
          "6450: type ListResolverQueryLogConfigsInput struct {",
          "6512:  SortBy *string `min:\"1\" type:\"string\"`",
          "6520:  SortOrder *string `type:\"string\" enum:\"SortOrder\"`",
          "6524: func (s ListResolverQueryLogConfigsInput) String() string {",
          "6529: func (s ListResolverQueryLogConfigsInput) GoString() string {",
          "6534: func (s *ListResolverQueryLogConfigsInput) Validate() error {",
          "6535:  invalidParams := request.ErrInvalidParams{Context: \"ListResolverQueryLogConfigsInput\"}",
          "6539:  if s.SortBy != nil && len(*s.SortBy) < 1 {",
          "6540:   invalidParams.Add(request.NewErrParamMinLen(\"SortBy\", 1))",
          "6541:  }",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4182: }",
          "4186:  s.Filters = v",
          "4187:  return s",
          "4188: }",
          "4192:  s.MaxResults = &v",
          "4193:  return s",
          "4194: }",
          "4198:  s.NextToken = &v",
          "4199:  return s",
          "4200: }",
          "4211:  NextToken *string `type:\"string\"`",
          "4216: }",
          "4220:  return awsutil.Prettify(s)",
          "4221: }",
          "4225:  return s.String()",
          "4226: }",
          "4231:  return s",
          "4232: }",
          "4237:  return s",
          "4238: }",
          "4243:  return s",
          "4244: }",
          "4246: type ListResolverRuleAssociationsInput struct {",
          "4247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "4185: func (s *ListResolverEndpointsInput) SetFilters(v []*Filter) *ListResolverEndpointsInput {",
          "4191: func (s *ListResolverEndpointsInput) SetMaxResults(v int64) *ListResolverEndpointsInput {",
          "4197: func (s *ListResolverEndpointsInput) SetNextToken(v string) *ListResolverEndpointsInput {",
          "4202: type ListResolverEndpointsOutput struct {",
          "4203:  _ struct{} `type:\"structure\"`",
          "4206:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "4215:  ResolverEndpoints []*ResolverEndpoint `type:\"list\"`",
          "4219: func (s ListResolverEndpointsOutput) String() string {",
          "4224: func (s ListResolverEndpointsOutput) GoString() string {",
          "4229: func (s *ListResolverEndpointsOutput) SetMaxResults(v int64) *ListResolverEndpointsOutput {",
          "4230:  s.MaxResults = &v",
          "4235: func (s *ListResolverEndpointsOutput) SetNextToken(v string) *ListResolverEndpointsOutput {",
          "4236:  s.NextToken = &v",
          "4241: func (s *ListResolverEndpointsOutput) SetResolverEndpoints(v []*ResolverEndpoint) *ListResolverEndpointsOutput {",
          "4242:  s.ResolverEndpoints = v",
          "",
          "[Added Lines]",
          "6560: func (s *ListResolverQueryLogConfigsInput) SetFilters(v []*Filter) *ListResolverQueryLogConfigsInput {",
          "6566: func (s *ListResolverQueryLogConfigsInput) SetMaxResults(v int64) *ListResolverQueryLogConfigsInput {",
          "6572: func (s *ListResolverQueryLogConfigsInput) SetNextToken(v string) *ListResolverQueryLogConfigsInput {",
          "6578: func (s *ListResolverQueryLogConfigsInput) SetSortBy(v string) *ListResolverQueryLogConfigsInput {",
          "6579:  s.SortBy = &v",
          "6580:  return s",
          "6581: }",
          "6584: func (s *ListResolverQueryLogConfigsInput) SetSortOrder(v string) *ListResolverQueryLogConfigsInput {",
          "6585:  s.SortOrder = &v",
          "6586:  return s",
          "6587: }",
          "6589: type ListResolverQueryLogConfigsOutput struct {",
          "6590:  _ struct{} `type:\"structure\"`",
          "6599:  ResolverQueryLogConfigs []*ResolverQueryLogConfig `type:\"list\"`",
          "6605:  TotalCount *int64 `type:\"integer\"`",
          "6612:  TotalFilteredCount *int64 `type:\"integer\"`",
          "6616: func (s ListResolverQueryLogConfigsOutput) String() string {",
          "6621: func (s ListResolverQueryLogConfigsOutput) GoString() string {",
          "6626: func (s *ListResolverQueryLogConfigsOutput) SetNextToken(v string) *ListResolverQueryLogConfigsOutput {",
          "6627:  s.NextToken = &v",
          "6632: func (s *ListResolverQueryLogConfigsOutput) SetResolverQueryLogConfigs(v []*ResolverQueryLogConfig) *ListResolverQueryLogConfigsOutput {",
          "6633:  s.ResolverQueryLogConfigs = v",
          "6638: func (s *ListResolverQueryLogConfigsOutput) SetTotalCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6639:  s.TotalCount = &v",
          "6640:  return s",
          "6641: }",
          "6644: func (s *ListResolverQueryLogConfigsOutput) SetTotalFilteredCount(v int64) *ListResolverQueryLogConfigsOutput {",
          "6645:  s.TotalFilteredCount = &v",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4539:  return s",
          "4540: }",
          "4545:  return s",
          "4546: }",
          "4551:  return s",
          "4552: }",
          "4555:  _ struct{} `type:\"structure\"`",
          "4565: }",
          "4569:  return awsutil.Prettify(s)",
          "4570: }",
          "4574:  return s.String()",
          "4575: }",
          "4586:  return s",
          "4587: }",
          "4589: type PutResolverRulePolicyInput struct {",
          "4590:  _ struct{} `type:\"structure\"`",
          "4596:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "4602:  ResolverRulePolicy *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "4543: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "4544:  s.NextToken = &v",
          "4549: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "4550:  s.ResourceArn = &v",
          "4554: type ListTagsForResourceOutput struct {",
          "4560:  NextToken *string `type:\"string\"`",
          "4564:  Tags []*Tag `type:\"list\"`",
          "4568: func (s ListTagsForResourceOutput) String() string {",
          "4573: func (s ListTagsForResourceOutput) GoString() string {",
          "4578: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "4579:  s.NextToken = &v",
          "4580:  return s",
          "4581: }",
          "4584: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "4585:  s.Tags = v",
          "",
          "[Added Lines]",
          "6946: func (s *ListTagsForResourceInput) SetNextToken(v string) *ListTagsForResourceInput {",
          "6947:  s.NextToken = &v",
          "6948:  return s",
          "6949: }",
          "6952: func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {",
          "6953:  s.ResourceArn = &v",
          "6954:  return s",
          "6955: }",
          "6957: type ListTagsForResourceOutput struct {",
          "6958:  _ struct{} `type:\"structure\"`",
          "6963:  NextToken *string `type:\"string\"`",
          "6967:  Tags []*Tag `type:\"list\"`",
          "6968: }",
          "6971: func (s ListTagsForResourceOutput) String() string {",
          "6972:  return awsutil.Prettify(s)",
          "6973: }",
          "6976: func (s ListTagsForResourceOutput) GoString() string {",
          "6977:  return s.String()",
          "6978: }",
          "6981: func (s *ListTagsForResourceOutput) SetNextToken(v string) *ListTagsForResourceOutput {",
          "6982:  s.NextToken = &v",
          "6983:  return s",
          "6984: }",
          "6987: func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {",
          "6988:  s.Tags = v",
          "6989:  return s",
          "6990: }",
          "6992: type PutResolverQueryLogConfigPolicyInput struct {",
          "6993:  _ struct{} `type:\"structure\"`",
          "6999:  Arn *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7019:  ResolverQueryLogConfigPolicy *string `type:\"string\" required:\"true\"`",
          "7020: }",
          "7023: func (s PutResolverQueryLogConfigPolicyInput) String() string {",
          "7024:  return awsutil.Prettify(s)",
          "7025: }",
          "7028: func (s PutResolverQueryLogConfigPolicyInput) GoString() string {",
          "7029:  return s.String()",
          "7030: }",
          "7033: func (s *PutResolverQueryLogConfigPolicyInput) Validate() error {",
          "7034:  invalidParams := request.ErrInvalidParams{Context: \"PutResolverQueryLogConfigPolicyInput\"}",
          "7035:  if s.Arn == nil {",
          "7036:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "7037:  }",
          "7038:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "7039:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "7040:  }",
          "7041:  if s.ResolverQueryLogConfigPolicy == nil {",
          "7042:   invalidParams.Add(request.NewErrParamRequired(\"ResolverQueryLogConfigPolicy\"))",
          "7043:  }",
          "7045:  if invalidParams.Len() > 0 {",
          "7046:   return invalidParams",
          "7047:  }",
          "7048:  return nil",
          "7049: }",
          "7052: func (s *PutResolverQueryLogConfigPolicyInput) SetArn(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7053:  s.Arn = &v",
          "7058: func (s *PutResolverQueryLogConfigPolicyInput) SetResolverQueryLogConfigPolicy(v string) *PutResolverQueryLogConfigPolicyInput {",
          "7059:  s.ResolverQueryLogConfigPolicy = &v",
          "7064: type PutResolverQueryLogConfigPolicyOutput struct {",
          "7068:  ReturnValue *bool `type:\"boolean\"`",
          "7072: func (s PutResolverQueryLogConfigPolicyOutput) String() string {",
          "7077: func (s PutResolverQueryLogConfigPolicyOutput) GoString() string {",
          "7082: func (s *PutResolverQueryLogConfigPolicyOutput) SetReturnValue(v bool) *PutResolverQueryLogConfigPolicyOutput {",
          "7083:  s.ReturnValue = &v",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4804:  return s",
          "4805: }",
          "4811: type ResolverRule struct {",
          "4812:  _ struct{} `type:\"structure\"`",
          "4815:  Arn *string `min:\"1\" type:\"string\"`",
          "4820:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "4826:  DomainName *string `min:\"1\" type:\"string\"`",
          "4829:  Id *string `min:\"1\" type:\"string\"`",
          "4833:  Name *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7362: type ResolverQueryLogConfig struct {",
          "7363:  _ struct{} `type:\"structure\"`",
          "7366:  Arn *string `min:\"1\" type:\"string\"`",
          "7369:  AssociationCount *int64 `type:\"integer\"`",
          "7373:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7378:  CreatorRequestId *string `min:\"1\" type:\"string\"`",
          "7383:  DestinationArn *string `min:\"1\" type:\"string\"`",
          "7386:  Id *string `min:\"1\" type:\"string\"`",
          "7389:  Name *string `min:\"1\" type:\"string\"`",
          "7392:  OwnerId *string `min:\"12\" type:\"string\"`",
          "7397:  ShareStatus *string `type:\"string\" enum:\"ShareStatus\"`",
          "7413:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigStatus\"`",
          "7414: }",
          "7417: func (s ResolverQueryLogConfig) String() string {",
          "7418:  return awsutil.Prettify(s)",
          "7419: }",
          "7422: func (s ResolverQueryLogConfig) GoString() string {",
          "7423:  return s.String()",
          "7424: }",
          "7427: func (s *ResolverQueryLogConfig) SetArn(v string) *ResolverQueryLogConfig {",
          "7428:  s.Arn = &v",
          "7429:  return s",
          "7430: }",
          "7433: func (s *ResolverQueryLogConfig) SetAssociationCount(v int64) *ResolverQueryLogConfig {",
          "7434:  s.AssociationCount = &v",
          "7435:  return s",
          "7436: }",
          "7439: func (s *ResolverQueryLogConfig) SetCreationTime(v string) *ResolverQueryLogConfig {",
          "7440:  s.CreationTime = &v",
          "7441:  return s",
          "7442: }",
          "7445: func (s *ResolverQueryLogConfig) SetCreatorRequestId(v string) *ResolverQueryLogConfig {",
          "7446:  s.CreatorRequestId = &v",
          "7447:  return s",
          "7448: }",
          "7451: func (s *ResolverQueryLogConfig) SetDestinationArn(v string) *ResolverQueryLogConfig {",
          "7452:  s.DestinationArn = &v",
          "7453:  return s",
          "7454: }",
          "7457: func (s *ResolverQueryLogConfig) SetId(v string) *ResolverQueryLogConfig {",
          "7458:  s.Id = &v",
          "7459:  return s",
          "7460: }",
          "7463: func (s *ResolverQueryLogConfig) SetName(v string) *ResolverQueryLogConfig {",
          "7464:  s.Name = &v",
          "7465:  return s",
          "7466: }",
          "7469: func (s *ResolverQueryLogConfig) SetOwnerId(v string) *ResolverQueryLogConfig {",
          "7470:  s.OwnerId = &v",
          "7471:  return s",
          "7472: }",
          "7475: func (s *ResolverQueryLogConfig) SetShareStatus(v string) *ResolverQueryLogConfig {",
          "7476:  s.ShareStatus = &v",
          "7477:  return s",
          "7478: }",
          "7481: func (s *ResolverQueryLogConfig) SetStatus(v string) *ResolverQueryLogConfig {",
          "7482:  s.Status = &v",
          "7483:  return s",
          "7484: }",
          "7492: type ResolverQueryLogConfigAssociation struct {",
          "7493:  _ struct{} `type:\"structure\"`",
          "7497:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7507:  Error *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationError\"`",
          "7511:  ErrorMessage *string `type:\"string\"`",
          "7514:  Id *string `min:\"1\" type:\"string\"`",
          "7517:  ResolverQueryLogConfigId *string `min:\"1\" type:\"string\"`",
          "7520:  ResourceId *string `min:\"1\" type:\"string\"`",
          "7536:  Status *string `type:\"string\" enum:\"ResolverQueryLogConfigAssociationStatus\"`",
          "7537: }",
          "7540: func (s ResolverQueryLogConfigAssociation) String() string {",
          "7541:  return awsutil.Prettify(s)",
          "7542: }",
          "7545: func (s ResolverQueryLogConfigAssociation) GoString() string {",
          "7546:  return s.String()",
          "7547: }",
          "7550: func (s *ResolverQueryLogConfigAssociation) SetCreationTime(v string) *ResolverQueryLogConfigAssociation {",
          "7551:  s.CreationTime = &v",
          "7552:  return s",
          "7553: }",
          "7556: func (s *ResolverQueryLogConfigAssociation) SetError(v string) *ResolverQueryLogConfigAssociation {",
          "7557:  s.Error = &v",
          "7558:  return s",
          "7559: }",
          "7562: func (s *ResolverQueryLogConfigAssociation) SetErrorMessage(v string) *ResolverQueryLogConfigAssociation {",
          "7563:  s.ErrorMessage = &v",
          "7564:  return s",
          "7565: }",
          "7568: func (s *ResolverQueryLogConfigAssociation) SetId(v string) *ResolverQueryLogConfigAssociation {",
          "7569:  s.Id = &v",
          "7570:  return s",
          "7571: }",
          "7574: func (s *ResolverQueryLogConfigAssociation) SetResolverQueryLogConfigId(v string) *ResolverQueryLogConfigAssociation {",
          "7575:  s.ResolverQueryLogConfigId = &v",
          "7576:  return s",
          "7577: }",
          "7580: func (s *ResolverQueryLogConfigAssociation) SetResourceId(v string) *ResolverQueryLogConfigAssociation {",
          "7581:  s.ResourceId = &v",
          "7582:  return s",
          "7583: }",
          "7586: func (s *ResolverQueryLogConfigAssociation) SetStatus(v string) *ResolverQueryLogConfigAssociation {",
          "7587:  s.Status = &v",
          "7588:  return s",
          "7589: }",
          "7607:  CreationTime *string `min:\"20\" type:\"string\"`",
          "7625:  ModificationTime *string `min:\"20\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4873:  return s",
          "4874: }",
          "4877: func (s *ResolverRule) SetCreatorRequestId(v string) *ResolverRule {",
          "4878:  s.CreatorRequestId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7688: func (s *ResolverRule) SetCreationTime(v string) *ResolverRule {",
          "7689:  s.CreationTime = &v",
          "7690:  return s",
          "7691: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4891:  return s",
          "4892: }",
          "4895: func (s *ResolverRule) SetName(v string) *ResolverRule {",
          "4896:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7712: func (s *ResolverRule) SetModificationTime(v string) *ResolverRule {",
          "7713:  s.ModificationTime = &v",
          "7714:  return s",
          "7715: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "5342: }",
          "",
          "[Removed Lines]",
          "5337:  Key *string `type:\"string\"`",
          "5341:  Value *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "8166:  Key *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8172:  Value *string `type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "5351:  return s.String()",
          "5352: }",
          "5355: func (s *Tag) SetKey(v string) *Tag {",
          "5356:  s.Key = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8186: func (s *Tag) Validate() error {",
          "8187:  invalidParams := request.ErrInvalidParams{Context: \"Tag\"}",
          "8188:  if s.Key == nil {",
          "8189:   invalidParams.Add(request.NewErrParamRequired(\"Key\"))",
          "8190:  }",
          "8191:  if s.Key != nil && len(*s.Key) < 1 {",
          "8192:   invalidParams.Add(request.NewErrParamMinLen(\"Key\", 1))",
          "8193:  }",
          "8194:  if s.Value == nil {",
          "8195:   invalidParams.Add(request.NewErrParamRequired(\"Value\"))",
          "8196:  }",
          "8198:  if invalidParams.Len() > 0 {",
          "8199:   return invalidParams",
          "8200:  }",
          "8201:  return nil",
          "8202: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "5412:  if s.Tags == nil {",
          "5413:   invalidParams.Add(request.NewErrParamRequired(\"Tags\"))",
          "5414:  }",
          "5416:  if invalidParams.Len() > 0 {",
          "5417:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8265:  if s.Tags != nil {",
          "8266:   for i, v := range s.Tags {",
          "8267:    if v == nil {",
          "8268:     continue",
          "8269:    }",
          "8270:    if err := v.Validate(); err != nil {",
          "8271:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "8272:    }",
          "8273:   }",
          "8274:  }",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "5944:  }",
          "5945: }",
          "5947: const (",
          "5949:  ResolverRuleAssociationStatusCreating = \"CREATING\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8807: const (",
          "8809:  ResolverQueryLogConfigAssociationErrorNone = \"NONE\"",
          "8812:  ResolverQueryLogConfigAssociationErrorDestinationNotFound = \"DESTINATION_NOT_FOUND\"",
          "8815:  ResolverQueryLogConfigAssociationErrorAccessDenied = \"ACCESS_DENIED\"",
          "8818:  ResolverQueryLogConfigAssociationErrorInternalServiceError = \"INTERNAL_SERVICE_ERROR\"",
          "8819: )",
          "8822: func ResolverQueryLogConfigAssociationError_Values() []string {",
          "8823:  return []string{",
          "8824:   ResolverQueryLogConfigAssociationErrorNone,",
          "8825:   ResolverQueryLogConfigAssociationErrorDestinationNotFound,",
          "8826:   ResolverQueryLogConfigAssociationErrorAccessDenied,",
          "8827:   ResolverQueryLogConfigAssociationErrorInternalServiceError,",
          "8828:  }",
          "8829: }",
          "8831: const (",
          "8833:  ResolverQueryLogConfigAssociationStatusCreating = \"CREATING\"",
          "8836:  ResolverQueryLogConfigAssociationStatusActive = \"ACTIVE\"",
          "8839:  ResolverQueryLogConfigAssociationStatusActionNeeded = \"ACTION_NEEDED\"",
          "8842:  ResolverQueryLogConfigAssociationStatusDeleting = \"DELETING\"",
          "8845:  ResolverQueryLogConfigAssociationStatusFailed = \"FAILED\"",
          "8846: )",
          "8849: func ResolverQueryLogConfigAssociationStatus_Values() []string {",
          "8850:  return []string{",
          "8851:   ResolverQueryLogConfigAssociationStatusCreating,",
          "8852:   ResolverQueryLogConfigAssociationStatusActive,",
          "8853:   ResolverQueryLogConfigAssociationStatusActionNeeded,",
          "8854:   ResolverQueryLogConfigAssociationStatusDeleting,",
          "8855:   ResolverQueryLogConfigAssociationStatusFailed,",
          "8856:  }",
          "8857: }",
          "8859: const (",
          "8861:  ResolverQueryLogConfigStatusCreating = \"CREATING\"",
          "8864:  ResolverQueryLogConfigStatusCreated = \"CREATED\"",
          "8867:  ResolverQueryLogConfigStatusDeleting = \"DELETING\"",
          "8870:  ResolverQueryLogConfigStatusFailed = \"FAILED\"",
          "8871: )",
          "8874: func ResolverQueryLogConfigStatus_Values() []string {",
          "8875:  return []string{",
          "8876:   ResolverQueryLogConfigStatusCreating,",
          "8877:   ResolverQueryLogConfigStatusCreated,",
          "8878:   ResolverQueryLogConfigStatusDeleting,",
          "8879:   ResolverQueryLogConfigStatusFailed,",
          "8880:  }",
          "8881: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "6035:   ShareStatusSharedByMe,",
          "6036:  }",
          "6037: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8975: const (",
          "8977:  SortOrderAscending = \"ASCENDING\"",
          "8980:  SortOrderDescending = \"DESCENDING\"",
          "8981: )",
          "8984: func SortOrder_Values() []string {",
          "8985:  return []string{",
          "8986:   SortOrderAscending,",
          "8987:   SortOrderDescending,",
          "8988:  }",
          "8989: }",
          "",
          "---------------"
        ],
        "service/route53resolver/doc.go||service/route53resolver/doc.go": [
          "File: service/route53resolver/doc.go -> service/route53resolver/doc.go"
        ],
        "service/route53resolver/errors.go||service/route53resolver/errors.go": [
          "File: service/route53resolver/errors.go -> service/route53resolver/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  ErrCodeAccessDeniedException = \"AccessDeniedException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88: )",
          "90: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "91:  \"InternalServiceErrorException\": newErrorInternalServiceErrorException,",
          "92:  \"InvalidNextTokenException\":     newErrorInvalidNextTokenException,",
          "93:  \"InvalidParameterException\":     newErrorInvalidParameterException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:  \"AccessDeniedException\":         newErrorAccessDeniedException,",
          "",
          "---------------"
        ],
        "service/route53resolver/route53resolveriface/interface.go||service/route53resolver/route53resolveriface/interface.go": [
          "File: service/route53resolver/route53resolveriface/interface.go -> service/route53resolver/route53resolveriface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  AssociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.AssociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.AssociateResolverEndpointIpAddressOutput, error)",
          "65:  AssociateResolverEndpointIpAddressRequest(*route53resolver.AssociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.AssociateResolverEndpointIpAddressOutput)",
          "67:  AssociateResolverRule(*route53resolver.AssociateResolverRuleInput) (*route53resolver.AssociateResolverRuleOutput, error)",
          "68:  AssociateResolverRuleWithContext(aws.Context, *route53resolver.AssociateResolverRuleInput, ...request.Option) (*route53resolver.AssociateResolverRuleOutput, error)",
          "69:  AssociateResolverRuleRequest(*route53resolver.AssociateResolverRuleInput) (*request.Request, *route53resolver.AssociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  AssociateResolverQueryLogConfig(*route53resolver.AssociateResolverQueryLogConfigInput) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "68:  AssociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.AssociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.AssociateResolverQueryLogConfigOutput, error)",
          "69:  AssociateResolverQueryLogConfigRequest(*route53resolver.AssociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.AssociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:  CreateResolverEndpointWithContext(aws.Context, *route53resolver.CreateResolverEndpointInput, ...request.Option) (*route53resolver.CreateResolverEndpointOutput, error)",
          "73:  CreateResolverEndpointRequest(*route53resolver.CreateResolverEndpointInput) (*request.Request, *route53resolver.CreateResolverEndpointOutput)",
          "75:  CreateResolverRule(*route53resolver.CreateResolverRuleInput) (*route53resolver.CreateResolverRuleOutput, error)",
          "76:  CreateResolverRuleWithContext(aws.Context, *route53resolver.CreateResolverRuleInput, ...request.Option) (*route53resolver.CreateResolverRuleOutput, error)",
          "77:  CreateResolverRuleRequest(*route53resolver.CreateResolverRuleInput) (*request.Request, *route53resolver.CreateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:  CreateResolverQueryLogConfig(*route53resolver.CreateResolverQueryLogConfigInput) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "80:  CreateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.CreateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.CreateResolverQueryLogConfigOutput, error)",
          "81:  CreateResolverQueryLogConfigRequest(*route53resolver.CreateResolverQueryLogConfigInput) (*request.Request, *route53resolver.CreateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "80:  DeleteResolverEndpointWithContext(aws.Context, *route53resolver.DeleteResolverEndpointInput, ...request.Option) (*route53resolver.DeleteResolverEndpointOutput, error)",
          "81:  DeleteResolverEndpointRequest(*route53resolver.DeleteResolverEndpointInput) (*request.Request, *route53resolver.DeleteResolverEndpointOutput)",
          "83:  DeleteResolverRule(*route53resolver.DeleteResolverRuleInput) (*route53resolver.DeleteResolverRuleOutput, error)",
          "84:  DeleteResolverRuleWithContext(aws.Context, *route53resolver.DeleteResolverRuleInput, ...request.Option) (*route53resolver.DeleteResolverRuleOutput, error)",
          "85:  DeleteResolverRuleRequest(*route53resolver.DeleteResolverRuleInput) (*request.Request, *route53resolver.DeleteResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  DeleteResolverQueryLogConfig(*route53resolver.DeleteResolverQueryLogConfigInput) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "92:  DeleteResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DeleteResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DeleteResolverQueryLogConfigOutput, error)",
          "93:  DeleteResolverQueryLogConfigRequest(*route53resolver.DeleteResolverQueryLogConfigInput) (*request.Request, *route53resolver.DeleteResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:  DisassociateResolverEndpointIpAddressWithContext(aws.Context, *route53resolver.DisassociateResolverEndpointIpAddressInput, ...request.Option) (*route53resolver.DisassociateResolverEndpointIpAddressOutput, error)",
          "89:  DisassociateResolverEndpointIpAddressRequest(*route53resolver.DisassociateResolverEndpointIpAddressInput) (*request.Request, *route53resolver.DisassociateResolverEndpointIpAddressOutput)",
          "91:  DisassociateResolverRule(*route53resolver.DisassociateResolverRuleInput) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "92:  DisassociateResolverRuleWithContext(aws.Context, *route53resolver.DisassociateResolverRuleInput, ...request.Option) (*route53resolver.DisassociateResolverRuleOutput, error)",
          "93:  DisassociateResolverRuleRequest(*route53resolver.DisassociateResolverRuleInput) (*request.Request, *route53resolver.DisassociateResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  DisassociateResolverQueryLogConfig(*route53resolver.DisassociateResolverQueryLogConfigInput) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "104:  DisassociateResolverQueryLogConfigWithContext(aws.Context, *route53resolver.DisassociateResolverQueryLogConfigInput, ...request.Option) (*route53resolver.DisassociateResolverQueryLogConfigOutput, error)",
          "105:  DisassociateResolverQueryLogConfigRequest(*route53resolver.DisassociateResolverQueryLogConfigInput) (*request.Request, *route53resolver.DisassociateResolverQueryLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96:  GetResolverEndpointWithContext(aws.Context, *route53resolver.GetResolverEndpointInput, ...request.Option) (*route53resolver.GetResolverEndpointOutput, error)",
          "97:  GetResolverEndpointRequest(*route53resolver.GetResolverEndpointInput) (*request.Request, *route53resolver.GetResolverEndpointOutput)",
          "99:  GetResolverRule(*route53resolver.GetResolverRuleInput) (*route53resolver.GetResolverRuleOutput, error)",
          "100:  GetResolverRuleWithContext(aws.Context, *route53resolver.GetResolverRuleInput, ...request.Option) (*route53resolver.GetResolverRuleOutput, error)",
          "101:  GetResolverRuleRequest(*route53resolver.GetResolverRuleInput) (*request.Request, *route53resolver.GetResolverRuleOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:  GetResolverQueryLogConfig(*route53resolver.GetResolverQueryLogConfigInput) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "116:  GetResolverQueryLogConfigWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigOutput, error)",
          "117:  GetResolverQueryLogConfigRequest(*route53resolver.GetResolverQueryLogConfigInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigOutput)",
          "119:  GetResolverQueryLogConfigAssociation(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "120:  GetResolverQueryLogConfigAssociationWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigAssociationInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigAssociationOutput, error)",
          "121:  GetResolverQueryLogConfigAssociationRequest(*route53resolver.GetResolverQueryLogConfigAssociationInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigAssociationOutput)",
          "123:  GetResolverQueryLogConfigPolicy(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "124:  GetResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.GetResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.GetResolverQueryLogConfigPolicyOutput, error)",
          "125:  GetResolverQueryLogConfigPolicyRequest(*route53resolver.GetResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.GetResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "122:  ListResolverEndpointsPages(*route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool) error",
          "123:  ListResolverEndpointsPagesWithContext(aws.Context, *route53resolver.ListResolverEndpointsInput, func(*route53resolver.ListResolverEndpointsOutput, bool) bool, ...request.Option) error",
          "125:  ListResolverRuleAssociations(*route53resolver.ListResolverRuleAssociationsInput) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "126:  ListResolverRuleAssociationsWithContext(aws.Context, *route53resolver.ListResolverRuleAssociationsInput, ...request.Option) (*route53resolver.ListResolverRuleAssociationsOutput, error)",
          "127:  ListResolverRuleAssociationsRequest(*route53resolver.ListResolverRuleAssociationsInput) (*request.Request, *route53resolver.ListResolverRuleAssociationsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  ListResolverQueryLogConfigAssociations(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "154:  ListResolverQueryLogConfigAssociationsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigAssociationsOutput, error)",
          "155:  ListResolverQueryLogConfigAssociationsRequest(*route53resolver.ListResolverQueryLogConfigAssociationsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigAssociationsOutput)",
          "157:  ListResolverQueryLogConfigAssociationsPages(*route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool) error",
          "158:  ListResolverQueryLogConfigAssociationsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigAssociationsInput, func(*route53resolver.ListResolverQueryLogConfigAssociationsOutput, bool) bool, ...request.Option) error",
          "160:  ListResolverQueryLogConfigs(*route53resolver.ListResolverQueryLogConfigsInput) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "161:  ListResolverQueryLogConfigsWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, ...request.Option) (*route53resolver.ListResolverQueryLogConfigsOutput, error)",
          "162:  ListResolverQueryLogConfigsRequest(*route53resolver.ListResolverQueryLogConfigsInput) (*request.Request, *route53resolver.ListResolverQueryLogConfigsOutput)",
          "164:  ListResolverQueryLogConfigsPages(*route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool) error",
          "165:  ListResolverQueryLogConfigsPagesWithContext(aws.Context, *route53resolver.ListResolverQueryLogConfigsInput, func(*route53resolver.ListResolverQueryLogConfigsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "140:  ListTagsForResourceWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, ...request.Option) (*route53resolver.ListTagsForResourceOutput, error)",
          "141:  ListTagsForResourceRequest(*route53resolver.ListTagsForResourceInput) (*request.Request, *route53resolver.ListTagsForResourceOutput)",
          "143:  PutResolverRulePolicy(*route53resolver.PutResolverRulePolicyInput) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "144:  PutResolverRulePolicyWithContext(aws.Context, *route53resolver.PutResolverRulePolicyInput, ...request.Option) (*route53resolver.PutResolverRulePolicyOutput, error)",
          "145:  PutResolverRulePolicyRequest(*route53resolver.PutResolverRulePolicyInput) (*request.Request, *route53resolver.PutResolverRulePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185:  ListTagsForResourcePages(*route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool) error",
          "186:  ListTagsForResourcePagesWithContext(aws.Context, *route53resolver.ListTagsForResourceInput, func(*route53resolver.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "188:  PutResolverQueryLogConfigPolicy(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "189:  PutResolverQueryLogConfigPolicyWithContext(aws.Context, *route53resolver.PutResolverQueryLogConfigPolicyInput, ...request.Option) (*route53resolver.PutResolverQueryLogConfigPolicyOutput, error)",
          "190:  PutResolverQueryLogConfigPolicyRequest(*route53resolver.PutResolverQueryLogConfigPolicyInput) (*request.Request, *route53resolver.PutResolverQueryLogConfigPolicyOutput)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
      "candidate_info": {
        "commit_hash": "4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/4c5542381f28b8a14a6e0341bcb8e577fdddc3f6",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/docdb/2014-10-31/api-2.json",
          "models/apis/docdb/2014-10-31/docs-2.json",
          "models/apis/docdb/2014-10-31/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/managedblockchain/2018-09-24/api-2.json",
          "models/apis/managedblockchain/2018-09-24/docs-2.json",
          "models/apis/states/2016-11-23/api-2.json",
          "models/apis/states/2016-11-23/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/docdb/api.go",
          "service/docdb/docdbiface/interface.go",
          "service/ec2/api.go",
          "service/managedblockchain/api.go",
          "service/sfn/api.go",
          "service/sfn/errors.go"
        ],
        "message": "Release v1.34.23 (2020-09-14) ===\n\n### Service Client Updates\n* `service/docdb`: Updates service API, documentation, and paginators\n  * Updated API documentation and added paginators for DescribeCertificates, DescribeDBClusterParameterGroups, DescribeDBClusterParameters, DescribeDBClusterSnapshots and DescribePendingMaintenanceActions\n* `service/ec2`: Updates service API\n  * This release adds support for the T4G instance family to the EC2 ModifyDefaultCreditSpecification and GetDefaultCreditSpecification APIs.\n* `service/managedblockchain`: Updates service API and documentation\n* `service/states`: Updates service API and documentation\n  * This release of the AWS Step Functions SDK introduces support for AWS X-Ray.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/docdb/api.go||service/docdb/api.go",
          "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/managedblockchain/api.go||service/managedblockchain/api.go",
          "service/sfn/api.go||service/sfn/api.go",
          "service/sfn/errors.go||service/sfn/errors.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2705:     Protocols: []string{\"https\"},",
          "2706:    },",
          "2707:    Endpoints: endpoints{",
          "2708:     \"ap-east-1\":      endpoint{},",
          "2709:     \"ap-northeast-1\": endpoint{},",
          "2710:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2708:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2714:     \"ca-central-1\":   endpoint{},",
          "2715:     \"eu-central-1\":   endpoint{},",
          "2716:     \"eu-north-1\":     endpoint{},",
          "2717:     \"eu-west-1\":      endpoint{},",
          "2718:     \"eu-west-2\":      endpoint{},",
          "2719:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2718:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8524:    },",
          "8525:    Endpoints: endpoints{",
          "8526:     \"fips-us-gov-west-1\": endpoint{",
          "8528:      CredentialScope: credentialScope{",
          "8529:       Region: \"us-gov-west-1\",",
          "8530:      },",
          "",
          "[Removed Lines]",
          "8527:      Hostname: \"s3-fips-us-gov-west-1.amazonaws.com\",",
          "",
          "[Added Lines]",
          "8529:      Hostname: \"s3-fips.us-gov-west-1.amazonaws.com\",",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.22\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.23\"",
          "",
          "---------------"
        ],
        "service/docdb/api.go||service/docdb/api.go": [
          "File: service/docdb/api.go -> service/docdb/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:   Name:       opDescribeCertificates,",
          "1396:   HTTPMethod: \"POST\",",
          "1397:   HTTPPath:   \"/\",",
          "1398:  }",
          "1400:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1395:   Paginator: &request.Paginator{",
          "1396:    InputTokens:     []string{\"Marker\"},",
          "1397:    OutputTokens:    []string{\"Marker\"},",
          "1398:    LimitToken:      \"MaxRecords\",",
          "1399:    TruncationToken: \"\",",
          "1400:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1444:  return out, req.Send()",
          "1445: }",
          "1447: const opDescribeDBClusterParameterGroups = \"DescribeDBClusterParameterGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1467: func (c *DocDB) DescribeCertificatesPages(input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool) error {",
          "1468:  return c.DescribeCertificatesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1469: }",
          "1478: func (c *DocDB) DescribeCertificatesPagesWithContext(ctx aws.Context, input *DescribeCertificatesInput, fn func(*DescribeCertificatesOutput, bool) bool, opts ...request.Option) error {",
          "1479:  p := request.Pagination{",
          "1480:   NewRequest: func() (*request.Request, error) {",
          "1481:    var inCpy *DescribeCertificatesInput",
          "1482:    if input != nil {",
          "1483:     tmp := *input",
          "1484:     inCpy = &tmp",
          "1485:    }",
          "1486:    req, _ := c.DescribeCertificatesRequest(inCpy)",
          "1487:    req.SetContext(ctx)",
          "1488:    req.ApplyOptions(opts...)",
          "1489:    return req, nil",
          "1490:   },",
          "1491:  }",
          "1493:  for p.Next() {",
          "1494:   if !fn(p.Page().(*DescribeCertificatesOutput), !p.HasNextPage()) {",
          "1495:    break",
          "1496:   }",
          "1497:  }",
          "1499:  return p.Err()",
          "1500: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1475:   Name:       opDescribeDBClusterParameterGroups,",
          "1476:   HTTPMethod: \"POST\",",
          "1477:   HTTPPath:   \"/\",",
          "1478:  }",
          "1480:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1533:   Paginator: &request.Paginator{",
          "1534:    InputTokens:     []string{\"Marker\"},",
          "1535:    OutputTokens:    []string{\"Marker\"},",
          "1536:    LimitToken:      \"MaxRecords\",",
          "1537:    TruncationToken: \"\",",
          "1538:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1525:  return out, req.Send()",
          "1526: }",
          "1528: const opDescribeDBClusterParameters = \"DescribeDBClusterParameters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1606: func (c *DocDB) DescribeDBClusterParameterGroupsPages(input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool) error {",
          "1607:  return c.DescribeDBClusterParameterGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1608: }",
          "1617: func (c *DocDB) DescribeDBClusterParameterGroupsPagesWithContext(ctx aws.Context, input *DescribeDBClusterParameterGroupsInput, fn func(*DescribeDBClusterParameterGroupsOutput, bool) bool, opts ...request.Option) error {",
          "1618:  p := request.Pagination{",
          "1619:   NewRequest: func() (*request.Request, error) {",
          "1620:    var inCpy *DescribeDBClusterParameterGroupsInput",
          "1621:    if input != nil {",
          "1622:     tmp := *input",
          "1623:     inCpy = &tmp",
          "1624:    }",
          "1625:    req, _ := c.DescribeDBClusterParameterGroupsRequest(inCpy)",
          "1626:    req.SetContext(ctx)",
          "1627:    req.ApplyOptions(opts...)",
          "1628:    return req, nil",
          "1629:   },",
          "1630:  }",
          "1632:  for p.Next() {",
          "1633:   if !fn(p.Page().(*DescribeDBClusterParameterGroupsOutput), !p.HasNextPage()) {",
          "1634:    break",
          "1635:   }",
          "1636:  }",
          "1638:  return p.Err()",
          "1639: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1556:   Name:       opDescribeDBClusterParameters,",
          "1557:   HTTPMethod: \"POST\",",
          "1558:   HTTPPath:   \"/\",",
          "1559:  }",
          "1561:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1672:   Paginator: &request.Paginator{",
          "1673:    InputTokens:     []string{\"Marker\"},",
          "1674:    OutputTokens:    []string{\"Marker\"},",
          "1675:    LimitToken:      \"MaxRecords\",",
          "1676:    TruncationToken: \"\",",
          "1677:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1604:  return out, req.Send()",
          "1605: }",
          "1607: const opDescribeDBClusterSnapshotAttributes = \"DescribeDBClusterSnapshotAttributes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1743: func (c *DocDB) DescribeDBClusterParametersPages(input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool) error {",
          "1744:  return c.DescribeDBClusterParametersPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1745: }",
          "1754: func (c *DocDB) DescribeDBClusterParametersPagesWithContext(ctx aws.Context, input *DescribeDBClusterParametersInput, fn func(*DescribeDBClusterParametersOutput, bool) bool, opts ...request.Option) error {",
          "1755:  p := request.Pagination{",
          "1756:   NewRequest: func() (*request.Request, error) {",
          "1757:    var inCpy *DescribeDBClusterParametersInput",
          "1758:    if input != nil {",
          "1759:     tmp := *input",
          "1760:     inCpy = &tmp",
          "1761:    }",
          "1762:    req, _ := c.DescribeDBClusterParametersRequest(inCpy)",
          "1763:    req.SetContext(ctx)",
          "1764:    req.ApplyOptions(opts...)",
          "1765:    return req, nil",
          "1766:   },",
          "1767:  }",
          "1769:  for p.Next() {",
          "1770:   if !fn(p.Page().(*DescribeDBClusterParametersOutput), !p.HasNextPage()) {",
          "1771:    break",
          "1772:   }",
          "1773:  }",
          "1775:  return p.Err()",
          "1776: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1721:   Name:       opDescribeDBClusterSnapshots,",
          "1722:   HTTPMethod: \"POST\",",
          "1723:   HTTPPath:   \"/\",",
          "1724:  }",
          "1726:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1895:   Paginator: &request.Paginator{",
          "1896:    InputTokens:     []string{\"Marker\"},",
          "1897:    OutputTokens:    []string{\"Marker\"},",
          "1898:    LimitToken:      \"MaxRecords\",",
          "1899:    TruncationToken: \"\",",
          "1900:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1770:  return out, req.Send()",
          "1771: }",
          "1773: const opDescribeDBClusters = \"DescribeDBClusters\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1967: func (c *DocDB) DescribeDBClusterSnapshotsPages(input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool) error {",
          "1968:  return c.DescribeDBClusterSnapshotsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1969: }",
          "1978: func (c *DocDB) DescribeDBClusterSnapshotsPagesWithContext(ctx aws.Context, input *DescribeDBClusterSnapshotsInput, fn func(*DescribeDBClusterSnapshotsOutput, bool) bool, opts ...request.Option) error {",
          "1979:  p := request.Pagination{",
          "1980:   NewRequest: func() (*request.Request, error) {",
          "1981:    var inCpy *DescribeDBClusterSnapshotsInput",
          "1982:    if input != nil {",
          "1983:     tmp := *input",
          "1984:     inCpy = &tmp",
          "1985:    }",
          "1986:    req, _ := c.DescribeDBClusterSnapshotsRequest(inCpy)",
          "1987:    req.SetContext(ctx)",
          "1988:    req.ApplyOptions(opts...)",
          "1989:    return req, nil",
          "1990:   },",
          "1991:  }",
          "1993:  for p.Next() {",
          "1994:   if !fn(p.Page().(*DescribeDBClusterSnapshotsOutput), !p.HasNextPage()) {",
          "1995:    break",
          "1996:   }",
          "1997:  }",
          "1999:  return p.Err()",
          "2000: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2767:   Name:       opDescribePendingMaintenanceActions,",
          "2768:   HTTPMethod: \"POST\",",
          "2769:   HTTPPath:   \"/\",",
          "2770:  }",
          "2772:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2999:   Paginator: &request.Paginator{",
          "3000:    InputTokens:     []string{\"Marker\"},",
          "3001:    OutputTokens:    []string{\"Marker\"},",
          "3002:    LimitToken:      \"MaxRecords\",",
          "3003:    TruncationToken: \"\",",
          "3004:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2816:  return out, req.Send()",
          "2817: }",
          "2819: const opFailoverDBCluster = \"FailoverDBCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3071: func (c *DocDB) DescribePendingMaintenanceActionsPages(input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool) error {",
          "3072:  return c.DescribePendingMaintenanceActionsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3073: }",
          "3082: func (c *DocDB) DescribePendingMaintenanceActionsPagesWithContext(ctx aws.Context, input *DescribePendingMaintenanceActionsInput, fn func(*DescribePendingMaintenanceActionsOutput, bool) bool, opts ...request.Option) error {",
          "3083:  p := request.Pagination{",
          "3084:   NewRequest: func() (*request.Request, error) {",
          "3085:    var inCpy *DescribePendingMaintenanceActionsInput",
          "3086:    if input != nil {",
          "3087:     tmp := *input",
          "3088:     inCpy = &tmp",
          "3089:    }",
          "3090:    req, _ := c.DescribePendingMaintenanceActionsRequest(inCpy)",
          "3091:    req.SetContext(ctx)",
          "3092:    req.ApplyOptions(opts...)",
          "3093:    return req, nil",
          "3094:   },",
          "3095:  }",
          "3097:  for p.Next() {",
          "3098:   if !fn(p.Page().(*DescribePendingMaintenanceActionsOutput), !p.HasNextPage()) {",
          "3099:    break",
          "3100:   }",
          "3101:  }",
          "3103:  return p.Err()",
          "3104: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4967:  Port *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5258:  PreSignedUrl *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5116:  return s",
          "5117: }",
          "5120: func (s *CreateDBClusterInput) SetPreferredBackupWindow(v string) *CreateDBClusterInput {",
          "5121:  s.PreferredBackupWindow = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5411: func (s *CreateDBClusterInput) SetPreSignedUrl(v string) *CreateDBClusterInput {",
          "5412:  s.PreSignedUrl = &v",
          "5413:  return s",
          "5414: }",
          "",
          "---------------"
        ],
        "service/docdb/docdbiface/interface.go||service/docdb/docdbiface/interface.go": [
          "File: service/docdb/docdbiface/interface.go -> service/docdb/docdbiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  DescribeCertificatesWithContext(aws.Context, *docdb.DescribeCertificatesInput, ...request.Option) (*docdb.DescribeCertificatesOutput, error)",
          "121:  DescribeCertificatesRequest(*docdb.DescribeCertificatesInput) (*request.Request, *docdb.DescribeCertificatesOutput)",
          "123:  DescribeDBClusterParameterGroups(*docdb.DescribeDBClusterParameterGroupsInput) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "124:  DescribeDBClusterParameterGroupsWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, ...request.Option) (*docdb.DescribeDBClusterParameterGroupsOutput, error)",
          "125:  DescribeDBClusterParameterGroupsRequest(*docdb.DescribeDBClusterParameterGroupsInput) (*request.Request, *docdb.DescribeDBClusterParameterGroupsOutput)",
          "127:  DescribeDBClusterParameters(*docdb.DescribeDBClusterParametersInput) (*docdb.DescribeDBClusterParametersOutput, error)",
          "128:  DescribeDBClusterParametersWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, ...request.Option) (*docdb.DescribeDBClusterParametersOutput, error)",
          "129:  DescribeDBClusterParametersRequest(*docdb.DescribeDBClusterParametersInput) (*request.Request, *docdb.DescribeDBClusterParametersOutput)",
          "131:  DescribeDBClusterSnapshotAttributes(*docdb.DescribeDBClusterSnapshotAttributesInput) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "132:  DescribeDBClusterSnapshotAttributesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotAttributesInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotAttributesOutput, error)",
          "133:  DescribeDBClusterSnapshotAttributesRequest(*docdb.DescribeDBClusterSnapshotAttributesInput) (*request.Request, *docdb.DescribeDBClusterSnapshotAttributesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  DescribeCertificatesPages(*docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool) error",
          "124:  DescribeCertificatesPagesWithContext(aws.Context, *docdb.DescribeCertificatesInput, func(*docdb.DescribeCertificatesOutput, bool) bool, ...request.Option) error",
          "130:  DescribeDBClusterParameterGroupsPages(*docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool) error",
          "131:  DescribeDBClusterParameterGroupsPagesWithContext(aws.Context, *docdb.DescribeDBClusterParameterGroupsInput, func(*docdb.DescribeDBClusterParameterGroupsOutput, bool) bool, ...request.Option) error",
          "137:  DescribeDBClusterParametersPages(*docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool) error",
          "138:  DescribeDBClusterParametersPagesWithContext(aws.Context, *docdb.DescribeDBClusterParametersInput, func(*docdb.DescribeDBClusterParametersOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:  DescribeDBClusterSnapshotsWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, ...request.Option) (*docdb.DescribeDBClusterSnapshotsOutput, error)",
          "137:  DescribeDBClusterSnapshotsRequest(*docdb.DescribeDBClusterSnapshotsInput) (*request.Request, *docdb.DescribeDBClusterSnapshotsOutput)",
          "139:  DescribeDBClusters(*docdb.DescribeDBClustersInput) (*docdb.DescribeDBClustersOutput, error)",
          "140:  DescribeDBClustersWithContext(aws.Context, *docdb.DescribeDBClustersInput, ...request.Option) (*docdb.DescribeDBClustersOutput, error)",
          "141:  DescribeDBClustersRequest(*docdb.DescribeDBClustersInput) (*request.Request, *docdb.DescribeDBClustersOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "148:  DescribeDBClusterSnapshotsPages(*docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool) error",
          "149:  DescribeDBClusterSnapshotsPagesWithContext(aws.Context, *docdb.DescribeDBClusterSnapshotsInput, func(*docdb.DescribeDBClusterSnapshotsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "190:  DescribePendingMaintenanceActionsWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, ...request.Option) (*docdb.DescribePendingMaintenanceActionsOutput, error)",
          "191:  DescribePendingMaintenanceActionsRequest(*docdb.DescribePendingMaintenanceActionsInput) (*request.Request, *docdb.DescribePendingMaintenanceActionsOutput)",
          "193:  FailoverDBCluster(*docdb.FailoverDBClusterInput) (*docdb.FailoverDBClusterOutput, error)",
          "194:  FailoverDBClusterWithContext(aws.Context, *docdb.FailoverDBClusterInput, ...request.Option) (*docdb.FailoverDBClusterOutput, error)",
          "195:  FailoverDBClusterRequest(*docdb.FailoverDBClusterInput) (*request.Request, *docdb.FailoverDBClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:  DescribePendingMaintenanceActionsPages(*docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool) error",
          "206:  DescribePendingMaintenanceActionsPagesWithContext(aws.Context, *docdb.DescribePendingMaintenanceActionsInput, func(*docdb.DescribePendingMaintenanceActionsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120070:  UnlimitedSupportedInstanceFamilyT3a = \"t3a\"",
          "120071: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120073:  UnlimitedSupportedInstanceFamilyT4g = \"t4g\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120076:   UnlimitedSupportedInstanceFamilyT2,",
          "120077:   UnlimitedSupportedInstanceFamilyT3,",
          "120078:   UnlimitedSupportedInstanceFamilyT3a,",
          "120079:  }",
          "120080: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120082:   UnlimitedSupportedInstanceFamilyT4g,",
          "",
          "---------------"
        ],
        "service/managedblockchain/api.go||service/managedblockchain/api.go": [
          "File: service/managedblockchain/api.go -> service/managedblockchain/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5324:  NetworkId *string `min:\"1\" type:\"string\"`",
          "5327:  Status *string `type:\"string\" enum:\"NodeStatus\"`",
          "5328: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5327:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5385:  return s",
          "5386: }",
          "5389: func (s *Node) SetStatus(v string) *Node {",
          "5390:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5392: func (s *Node) SetStateDB(v string) *Node {",
          "5393:  s.StateDB = &v",
          "5394:  return s",
          "5395: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5410:  LogPublishingConfiguration *NodeLogPublishingConfiguration `type:\"structure\"`",
          "5411: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5424:  StateDB *string `type:\"string\" enum:\"StateDBType\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5454:  return s",
          "5455: }",
          "5459: type NodeFabricAttributes struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5472: func (s *NodeConfiguration) SetStateDB(v string) *NodeConfiguration {",
          "5473:  s.StateDB = &v",
          "5474:  return s",
          "5475: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6887:  }",
          "6888: }",
          "6890: const (",
          "6892:  ThresholdComparatorGreaterThan = \"GREATER_THAN\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6910: const (",
          "6912:  StateDBTypeLevelDb = \"LevelDB\"",
          "6915:  StateDBTypeCouchDb = \"CouchDB\"",
          "6916: )",
          "6919: func StateDBType_Values() []string {",
          "6920:  return []string{",
          "6921:   StateDBTypeLevelDb,",
          "6922:   StateDBTypeCouchDb,",
          "6923:  }",
          "6924: }",
          "",
          "---------------"
        ],
        "service/sfn/api.go||service/sfn/api.go": [
          "File: service/sfn/api.go -> service/sfn/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2968:  Tags []*Tag `locationName:\"tags\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2980:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3056:  return s",
          "3057: }",
          "3060: func (s *CreateStateMachineInput) SetType(v string) *CreateStateMachineInput {",
          "3061:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3072: func (s *CreateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *CreateStateMachineInput {",
          "3073:  s.TracingConfiguration = v",
          "3074:  return s",
          "3075: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3414:  StopDate *time.Time `locationName:\"stopDate\" type:\"timestamp\"`",
          "3415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3435:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3484:  return s",
          "3485: }",
          "3487: type DescribeStateMachineForExecutionInput struct {",
          "3488:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3509: func (s *DescribeExecutionOutput) SetTraceHeader(v string) *DescribeExecutionOutput {",
          "3510:  s.TraceHeader = &v",
          "3511:  return s",
          "3512: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3555:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3585:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3601:  return s",
          "3602: }",
          "3605: func (s *DescribeStateMachineForExecutionOutput) SetUpdateDate(v time.Time) *DescribeStateMachineForExecutionOutput {",
          "3606:  s.UpdateDate = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3635: func (s *DescribeStateMachineForExecutionOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineForExecutionOutput {",
          "3636:  s.TracingConfiguration = v",
          "3637:  return s",
          "3638: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3701:  Status *string `locationName:\"status\" type:\"string\" enum:\"StateMachineStatus\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3740:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3758:  return s",
          "3759: }",
          "3762: func (s *DescribeStateMachineOutput) SetType(v string) *DescribeStateMachineOutput {",
          "3763:  s.Type = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3801: func (s *DescribeStateMachineOutput) SetTracingConfiguration(v *TracingConfiguration) *DescribeStateMachineOutput {",
          "3802:  s.TracingConfiguration = v",
          "3803:  return s",
          "3804: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5190:  return s.RespMetadata.RequestID",
          "5191: }",
          "5194: type LambdaFunctionFailedEventDetails struct {",
          "5195:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5240: type InvalidTracingConfiguration struct {",
          "5241:  _            struct{}                  `type:\"structure\"`",
          "5242:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5244:  Message_ *string `locationName:\"message\" type:\"string\"`",
          "5245: }",
          "5248: func (s InvalidTracingConfiguration) String() string {",
          "5249:  return awsutil.Prettify(s)",
          "5250: }",
          "5253: func (s InvalidTracingConfiguration) GoString() string {",
          "5254:  return s.String()",
          "5255: }",
          "5257: func newErrorInvalidTracingConfiguration(v protocol.ResponseMetadata) error {",
          "5258:  return &InvalidTracingConfiguration{",
          "5259:   RespMetadata: v,",
          "5260:  }",
          "5261: }",
          "5264: func (s *InvalidTracingConfiguration) Code() string {",
          "5265:  return \"InvalidTracingConfiguration\"",
          "5266: }",
          "5269: func (s *InvalidTracingConfiguration) Message() string {",
          "5270:  if s.Message_ != nil {",
          "5271:   return *s.Message_",
          "5272:  }",
          "5273:  return \"\"",
          "5274: }",
          "5277: func (s *InvalidTracingConfiguration) OrigErr() error {",
          "5278:  return nil",
          "5279: }",
          "5281: func (s *InvalidTracingConfiguration) Error() string {",
          "5282:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5283: }",
          "5286: func (s *InvalidTracingConfiguration) StatusCode() int {",
          "5287:  return s.RespMetadata.StatusCode",
          "5288: }",
          "5291: func (s *InvalidTracingConfiguration) RequestID() string {",
          "5292:  return s.RespMetadata.RequestID",
          "5293: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6300:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "6301: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6406:  TraceHeader *string `locationName:\"traceHeader\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6347:  return s",
          "6348: }",
          "6350: type StartExecutionOutput struct {",
          "6351:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6457: func (s *StartExecutionInput) SetTraceHeader(v string) *StartExecutionInput {",
          "6458:  s.TraceHeader = &v",
          "6459:  return s",
          "6460: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7680:  return s.RespMetadata.RequestID",
          "7681: }",
          "7683: type UntagResourceInput struct {",
          "7684:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7797: type TracingConfiguration struct {",
          "7798:  _ struct{} `type:\"structure\"`",
          "7801:  Enabled *bool `locationName:\"enabled\" type:\"boolean\"`",
          "7802: }",
          "7805: func (s TracingConfiguration) String() string {",
          "7806:  return awsutil.Prettify(s)",
          "7807: }",
          "7810: func (s TracingConfiguration) GoString() string {",
          "7811:  return s.String()",
          "7812: }",
          "7815: func (s *TracingConfiguration) SetEnabled(v bool) *TracingConfiguration {",
          "7816:  s.Enabled = &v",
          "7817:  return s",
          "7818: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7768:  StateMachineArn *string `locationName:\"stateMachineArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "7769: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7908:  TracingConfiguration *TracingConfiguration `locationName:\"tracingConfiguration\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7829:  return s",
          "7830: }",
          "7832: type UpdateStateMachineOutput struct {",
          "7833:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7973: func (s *UpdateStateMachineInput) SetTracingConfiguration(v *TracingConfiguration) *UpdateStateMachineInput {",
          "7974:  s.TracingConfiguration = v",
          "7975:  return s",
          "7976: }",
          "",
          "---------------"
        ],
        "service/sfn/errors.go||service/sfn/errors.go": [
          "File: service/sfn/errors.go -> service/sfn/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:  ErrCodeInvalidToken = \"InvalidToken\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:  ErrCodeInvalidTracingConfiguration = \"InvalidTracingConfiguration\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:  \"InvalidName\":                  newErrorInvalidName,",
          "165:  \"InvalidOutput\":                newErrorInvalidOutput,",
          "166:  \"InvalidToken\":                 newErrorInvalidToken,",
          "167:  \"MissingRequiredParameter\":     newErrorMissingRequiredParameter,",
          "168:  \"ResourceNotFound\":             newErrorResourceNotFound,",
          "169:  \"StateMachineAlreadyExists\":    newErrorStateMachineAlreadyExists,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174:  \"InvalidTracingConfiguration\":  newErrorInvalidTracingConfiguration,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "533662cdfefcf595d426bb25511e2bf39b62fca5",
      "candidate_info": {
        "commit_hash": "533662cdfefcf595d426bb25511e2bf39b62fca5",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/533662cdfefcf595d426bb25511e2bf39b62fca5",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/backup/2018-11-15/docs-2.json",
          "models/apis/cloudfront/2020-05-31/api-2.json",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/sqs/2012-11-05/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/backup/api.go",
          "service/cloudfront/api.go",
          "service/cloudfront/cloudfrontiface/interface.go",
          "service/cloudfront/errors.go",
          "service/ec2/api.go",
          "service/sqs/api.go",
          "service/sqs/doc.go"
        ],
        "message": "Release v1.34.14 (2020-08-31) ===\n\n### Service Client Updates\n* `service/backup`: Updates service documentation\n* `service/cloudfront`: Updates service API and documentation\n  * CloudFront now supports real-time logging for CloudFront distributions. CloudFront real-time logs are more detailed, configurable, and are available in real time.\n* `service/ec2`: Updates service API and documentation\n  * Amazon EC2 and Spot Fleet now support modification of launch template configs for a running fleet enabling instance type, instance weight, AZ, and AMI updates without losing the current fleet ID.\n* `service/sqs`: Updates service documentation\n  * Documentation updates for SQS.\n\n### SDK Bugs\n* `aws/ec2metadata`: Add support for EC2 IMDS endpoint from environment variable ([#3504](https://github.com/aws/aws-sdk-go/pull/3504))\n  * Adds support for specifying a custom EC2 IMDS endpoint from the environment variable, `AWS_EC2_METADATA_SERVICE_ENDPOINT`.\n  * The `aws/session#Options` struct also has a new field, `EC2IMDSEndpoint`. This field can be used to configure the custom endpoint of the EC2 IMDS client. The option only applies to EC2 IMDS clients created after the Session with `EC2IMDSEndpoint` is specified.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/backup/api.go||service/backup/api.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/cloudfront/cloudfrontiface/interface.go||service/cloudfront/cloudfrontiface/interface.go",
          "service/cloudfront/errors.go||service/cloudfront/errors.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/sqs/api.go||service/sqs/api.go",
          "service/sqs/doc.go||service/sqs/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:     Protocols: []string{\"https\"},",
          "293:    },",
          "294:    Endpoints: endpoints{",
          "295:     \"ap-east-1\":      endpoint{},",
          "296:     \"ap-northeast-1\": endpoint{},",
          "297:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:     \"ca-central-1\":   endpoint{},",
          "302:     \"eu-central-1\":   endpoint{},",
          "303:     \"eu-north-1\":     endpoint{},",
          "304:     \"eu-west-1\":      endpoint{},",
          "305:     \"eu-west-2\":      endpoint{},",
          "306:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3718:     \"ap-northeast-2\": endpoint{},",
          "3719:     \"ap-southeast-1\": endpoint{},",
          "3720:     \"eu-west-1\":      endpoint{},",
          "3722:     \"us-east-1\":      endpoint{},",
          "3723:    },",
          "3724:   },",
          "",
          "[Removed Lines]",
          "3721:     \"eu-west-2\":      endpoint{},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7899:    Endpoints: endpoints{",
          "7900:     \"fips-us-gov-east-1\": endpoint{",
          "7902:      CredentialScope: credentialScope{",
          "7903:       Region: \"us-gov-east-1\",",
          "7904:      },",
          "7905:     },",
          "7906:     \"fips-us-gov-west-1\": endpoint{",
          "7908:      CredentialScope: credentialScope{",
          "7909:       Region: \"us-gov-west-1\",",
          "7910:      },",
          "",
          "[Removed Lines]",
          "7901:      Hostname: \"elasticloadbalancing-fips.us-gov-east-1.amazonaws.com\",",
          "7907:      Hostname: \"elasticloadbalancing-fips.us-gov-west-1.amazonaws.com\",",
          "",
          "[Added Lines]",
          "7902:      Hostname: \"elasticloadbalancing.us-gov-east-1.amazonaws.com\",",
          "7908:      Hostname: \"elasticloadbalancing.us-gov-west-1.amazonaws.com\",",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.13\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.14\"",
          "",
          "---------------"
        ],
        "service/backup/api.go||service/backup/api.go": [
          "File: service/backup/api.go -> service/backup/api.go"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1368:  return out, req.Send()",
          "1369: }",
          "1371: const opCreateStreamingDistribution = \"CreateStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1371: const opCreateRealtimeLogConfig = \"CreateRealtimeLogConfig2020_05_31\"",
          "1397: func (c *CloudFront) CreateRealtimeLogConfigRequest(input *CreateRealtimeLogConfigInput) (req *request.Request, output *CreateRealtimeLogConfigOutput) {",
          "1398:  op := &request.Operation{",
          "1399:   Name:       opCreateRealtimeLogConfig,",
          "1400:   HTTPMethod: \"POST\",",
          "1401:   HTTPPath:   \"/2020-05-31/realtime-log-config\",",
          "1402:  }",
          "1404:  if input == nil {",
          "1405:   input = &CreateRealtimeLogConfigInput{}",
          "1406:  }",
          "1408:  output = &CreateRealtimeLogConfigOutput{}",
          "1409:  req = c.newRequest(op, input, output)",
          "1410:  return",
          "1411: }",
          "1446: func (c *CloudFront) CreateRealtimeLogConfig(input *CreateRealtimeLogConfigInput) (*CreateRealtimeLogConfigOutput, error) {",
          "1447:  req, out := c.CreateRealtimeLogConfigRequest(input)",
          "1448:  return out, req.Send()",
          "1449: }",
          "1460: func (c *CloudFront) CreateRealtimeLogConfigWithContext(ctx aws.Context, input *CreateRealtimeLogConfigInput, opts ...request.Option) (*CreateRealtimeLogConfigOutput, error) {",
          "1461:  req, out := c.CreateRealtimeLogConfigRequest(input)",
          "1462:  req.SetContext(ctx)",
          "1463:  req.ApplyOptions(opts...)",
          "1464:  return out, req.Send()",
          "1465: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2388:  return out, req.Send()",
          "2389: }",
          "2391: const opDeleteStreamingDistribution = \"DeleteStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2487: const opDeleteRealtimeLogConfig = \"DeleteRealtimeLogConfig2020_05_31\"",
          "2513: func (c *CloudFront) DeleteRealtimeLogConfigRequest(input *DeleteRealtimeLogConfigInput) (req *request.Request, output *DeleteRealtimeLogConfigOutput) {",
          "2514:  op := &request.Operation{",
          "2515:   Name:       opDeleteRealtimeLogConfig,",
          "2516:   HTTPMethod: \"POST\",",
          "2517:   HTTPPath:   \"/2020-05-31/delete-realtime-log-config/\",",
          "2518:  }",
          "2520:  if input == nil {",
          "2521:   input = &DeleteRealtimeLogConfigInput{}",
          "2522:  }",
          "2524:  output = &DeleteRealtimeLogConfigOutput{}",
          "2525:  req = c.newRequest(op, input, output)",
          "2526:  req.Handlers.Unmarshal.Swap(restxml.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2527:  return",
          "2528: }",
          "2562: func (c *CloudFront) DeleteRealtimeLogConfig(input *DeleteRealtimeLogConfigInput) (*DeleteRealtimeLogConfigOutput, error) {",
          "2563:  req, out := c.DeleteRealtimeLogConfigRequest(input)",
          "2564:  return out, req.Send()",
          "2565: }",
          "2576: func (c *CloudFront) DeleteRealtimeLogConfigWithContext(ctx aws.Context, input *DeleteRealtimeLogConfigInput, opts ...request.Option) (*DeleteRealtimeLogConfigOutput, error) {",
          "2577:  req, out := c.DeleteRealtimeLogConfigRequest(input)",
          "2578:  req.SetContext(ctx)",
          "2579:  req.ApplyOptions(opts...)",
          "2580:  return out, req.Send()",
          "2581: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3865:  return out, req.Send()",
          "3866: }",
          "3868: const opGetStreamingDistribution = \"GetStreamingDistribution2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4060: const opGetRealtimeLogConfig = \"GetRealtimeLogConfig2020_05_31\"",
          "4086: func (c *CloudFront) GetRealtimeLogConfigRequest(input *GetRealtimeLogConfigInput) (req *request.Request, output *GetRealtimeLogConfigOutput) {",
          "4087:  op := &request.Operation{",
          "4088:   Name:       opGetRealtimeLogConfig,",
          "4089:   HTTPMethod: \"POST\",",
          "4090:   HTTPPath:   \"/2020-05-31/get-realtime-log-config/\",",
          "4091:  }",
          "4093:  if input == nil {",
          "4094:   input = &GetRealtimeLogConfigInput{}",
          "4095:  }",
          "4097:  output = &GetRealtimeLogConfigOutput{}",
          "4098:  req = c.newRequest(op, input, output)",
          "4099:  return",
          "4100: }",
          "4126: func (c *CloudFront) GetRealtimeLogConfig(input *GetRealtimeLogConfigInput) (*GetRealtimeLogConfigOutput, error) {",
          "4127:  req, out := c.GetRealtimeLogConfigRequest(input)",
          "4128:  return out, req.Send()",
          "4129: }",
          "4140: func (c *CloudFront) GetRealtimeLogConfigWithContext(ctx aws.Context, input *GetRealtimeLogConfigInput, opts ...request.Option) (*GetRealtimeLogConfigOutput, error) {",
          "4141:  req, out := c.GetRealtimeLogConfigRequest(input)",
          "4142:  req.SetContext(ctx)",
          "4143:  req.ApplyOptions(opts...)",
          "4144:  return out, req.Send()",
          "4145: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4582:  return out, req.Send()",
          "4583: }",
          "4585: const opListDistributionsByWebACLId = \"ListDistributionsByWebACLId2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4864: const opListDistributionsByRealtimeLogConfig = \"ListDistributionsByRealtimeLogConfig2020_05_31\"",
          "4890: func (c *CloudFront) ListDistributionsByRealtimeLogConfigRequest(input *ListDistributionsByRealtimeLogConfigInput) (req *request.Request, output *ListDistributionsByRealtimeLogConfigOutput) {",
          "4891:  op := &request.Operation{",
          "4892:   Name:       opListDistributionsByRealtimeLogConfig,",
          "4893:   HTTPMethod: \"POST\",",
          "4894:   HTTPPath:   \"/2020-05-31/distributionsByRealtimeLogConfig/\",",
          "4895:  }",
          "4897:  if input == nil {",
          "4898:   input = &ListDistributionsByRealtimeLogConfigInput{}",
          "4899:  }",
          "4901:  output = &ListDistributionsByRealtimeLogConfigOutput{}",
          "4902:  req = c.newRequest(op, input, output)",
          "4903:  return",
          "4904: }",
          "4934: func (c *CloudFront) ListDistributionsByRealtimeLogConfig(input *ListDistributionsByRealtimeLogConfigInput) (*ListDistributionsByRealtimeLogConfigOutput, error) {",
          "4935:  req, out := c.ListDistributionsByRealtimeLogConfigRequest(input)",
          "4936:  return out, req.Send()",
          "4937: }",
          "4948: func (c *CloudFront) ListDistributionsByRealtimeLogConfigWithContext(ctx aws.Context, input *ListDistributionsByRealtimeLogConfigInput, opts ...request.Option) (*ListDistributionsByRealtimeLogConfigOutput, error) {",
          "4949:  req, out := c.ListDistributionsByRealtimeLogConfigRequest(input)",
          "4950:  req.SetContext(ctx)",
          "4951:  req.ApplyOptions(opts...)",
          "4952:  return out, req.Send()",
          "4953: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5143:  return out, req.Send()",
          "5144: }",
          "5146: const opListStreamingDistributions = \"ListStreamingDistributions2020_05_31\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5516: const opListRealtimeLogConfigs = \"ListRealtimeLogConfigs2020_05_31\"",
          "5542: func (c *CloudFront) ListRealtimeLogConfigsRequest(input *ListRealtimeLogConfigsInput) (req *request.Request, output *ListRealtimeLogConfigsOutput) {",
          "5543:  op := &request.Operation{",
          "5544:   Name:       opListRealtimeLogConfigs,",
          "5545:   HTTPMethod: \"GET\",",
          "5546:   HTTPPath:   \"/2020-05-31/realtime-log-config\",",
          "5547:  }",
          "5549:  if input == nil {",
          "5550:   input = &ListRealtimeLogConfigsInput{}",
          "5551:  }",
          "5553:  output = &ListRealtimeLogConfigsOutput{}",
          "5554:  req = c.newRequest(op, input, output)",
          "5555:  return",
          "5556: }",
          "5575: func (c *CloudFront) ListRealtimeLogConfigs(input *ListRealtimeLogConfigsInput) (*ListRealtimeLogConfigsOutput, error) {",
          "5576:  req, out := c.ListRealtimeLogConfigsRequest(input)",
          "5577:  return out, req.Send()",
          "5578: }",
          "5589: func (c *CloudFront) ListRealtimeLogConfigsWithContext(ctx aws.Context, input *ListRealtimeLogConfigsInput, opts ...request.Option) (*ListRealtimeLogConfigsOutput, error) {",
          "5590:  req, out := c.ListRealtimeLogConfigsRequest(input)",
          "5591:  req.SetContext(ctx)",
          "5592:  req.ApplyOptions(opts...)",
          "5593:  return out, req.Send()",
          "5594: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6472:  op := &request.Operation{",
          "6474:   HTTPMethod: \"PUT\",",
          "6476:  }",
          "6478:  if input == nil {",
          "6480:  }",
          "6483:  req = c.newRequest(op, input, output)",
          "6484:  return",
          "6485: }",
          "6525:  return out, req.Send()",
          "6526: }",
          "6539:  req.SetContext(ctx)",
          "6540:  req.ApplyOptions(opts...)",
          "6541:  return out, req.Send()",
          "",
          "[Removed Lines]",
          "6471: func (c *CloudFront) UpdatePublicKeyRequest(input *UpdatePublicKeyInput) (req *request.Request, output *UpdatePublicKeyOutput) {",
          "6473:   Name:       opUpdatePublicKey,",
          "6475:   HTTPPath:   \"/2020-05-31/public-key/{Id}/config\",",
          "6479:   input = &UpdatePublicKeyInput{}",
          "6482:  output = &UpdatePublicKeyOutput{}",
          "6523: func (c *CloudFront) UpdatePublicKey(input *UpdatePublicKeyInput) (*UpdatePublicKeyOutput, error) {",
          "6524:  req, out := c.UpdatePublicKeyRequest(input)",
          "6537: func (c *CloudFront) UpdatePublicKeyWithContext(ctx aws.Context, input *UpdatePublicKeyInput, opts ...request.Option) (*UpdatePublicKeyOutput, error) {",
          "6538:  req, out := c.UpdatePublicKeyRequest(input)",
          "",
          "[Added Lines]",
          "6921: func (c *CloudFront) UpdatePublicKeyRequest(input *UpdatePublicKeyInput) (req *request.Request, output *UpdatePublicKeyOutput) {",
          "6922:  op := &request.Operation{",
          "6923:   Name:       opUpdatePublicKey,",
          "6924:   HTTPMethod: \"PUT\",",
          "6925:   HTTPPath:   \"/2020-05-31/public-key/{Id}/config\",",
          "6926:  }",
          "6928:  if input == nil {",
          "6929:   input = &UpdatePublicKeyInput{}",
          "6930:  }",
          "6932:  output = &UpdatePublicKeyOutput{}",
          "6933:  req = c.newRequest(op, input, output)",
          "6934:  return",
          "6935: }",
          "6973: func (c *CloudFront) UpdatePublicKey(input *UpdatePublicKeyInput) (*UpdatePublicKeyOutput, error) {",
          "6974:  req, out := c.UpdatePublicKeyRequest(input)",
          "6975:  return out, req.Send()",
          "6976: }",
          "6987: func (c *CloudFront) UpdatePublicKeyWithContext(ctx aws.Context, input *UpdatePublicKeyInput, opts ...request.Option) (*UpdatePublicKeyOutput, error) {",
          "6988:  req, out := c.UpdatePublicKeyRequest(input)",
          "6989:  req.SetContext(ctx)",
          "6990:  req.ApplyOptions(opts...)",
          "6991:  return out, req.Send()",
          "6992: }",
          "6994: const opUpdateRealtimeLogConfig = \"UpdateRealtimeLogConfig2020_05_31\"",
          "7020: func (c *CloudFront) UpdateRealtimeLogConfigRequest(input *UpdateRealtimeLogConfigInput) (req *request.Request, output *UpdateRealtimeLogConfigOutput) {",
          "7022:   Name:       opUpdateRealtimeLogConfig,",
          "7024:   HTTPPath:   \"/2020-05-31/realtime-log-config/\",",
          "7028:   input = &UpdateRealtimeLogConfigInput{}",
          "7031:  output = &UpdateRealtimeLogConfigOutput{}",
          "7070: func (c *CloudFront) UpdateRealtimeLogConfig(input *UpdateRealtimeLogConfigInput) (*UpdateRealtimeLogConfigOutput, error) {",
          "7071:  req, out := c.UpdateRealtimeLogConfigRequest(input)",
          "7084: func (c *CloudFront) UpdateRealtimeLogConfigWithContext(ctx aws.Context, input *UpdateRealtimeLogConfigInput, opts ...request.Option) (*UpdateRealtimeLogConfigOutput, error) {",
          "7085:  req, out := c.UpdateRealtimeLogConfigRequest(input)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7090:  PathPattern *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7643:  RealtimeLogConfigArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7270:  return s",
          "7271: }",
          "7274: func (s *CacheBehavior) SetSmoothStreaming(v bool) *CacheBehavior {",
          "7275:  s.SmoothStreaming = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7827: func (s *CacheBehavior) SetRealtimeLogConfigArn(v string) *CacheBehavior {",
          "7828:  s.RealtimeLogConfigArn = &v",
          "7829:  return s",
          "7830: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "9127:  return s",
          "9128: }",
          "9131: type CreateStreamingDistributionInput struct {",
          "9132:  _ struct{} `locationName:\"CreateStreamingDistributionRequest\" type:\"structure\" payload:\"StreamingDistributionConfig\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9689: type CreateRealtimeLogConfigInput struct {",
          "9690:  _ struct{} `locationName:\"CreateRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "9696:  EndPoints []*EndPoint `type:\"list\" required:\"true\"`",
          "9705:  Fields []*string `locationNameList:\"Field\" type:\"list\" required:\"true\"`",
          "9710:  Name *string `type:\"string\" required:\"true\"`",
          "9717:  SamplingRate *int64 `type:\"long\" required:\"true\"`",
          "9718: }",
          "9721: func (s CreateRealtimeLogConfigInput) String() string {",
          "9722:  return awsutil.Prettify(s)",
          "9723: }",
          "9726: func (s CreateRealtimeLogConfigInput) GoString() string {",
          "9727:  return s.String()",
          "9728: }",
          "9731: func (s *CreateRealtimeLogConfigInput) Validate() error {",
          "9732:  invalidParams := request.ErrInvalidParams{Context: \"CreateRealtimeLogConfigInput\"}",
          "9733:  if s.EndPoints == nil {",
          "9734:   invalidParams.Add(request.NewErrParamRequired(\"EndPoints\"))",
          "9735:  }",
          "9736:  if s.Fields == nil {",
          "9737:   invalidParams.Add(request.NewErrParamRequired(\"Fields\"))",
          "9738:  }",
          "9739:  if s.Name == nil {",
          "9740:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "9741:  }",
          "9742:  if s.SamplingRate == nil {",
          "9743:   invalidParams.Add(request.NewErrParamRequired(\"SamplingRate\"))",
          "9744:  }",
          "9745:  if s.EndPoints != nil {",
          "9746:   for i, v := range s.EndPoints {",
          "9747:    if v == nil {",
          "9748:     continue",
          "9749:    }",
          "9750:    if err := v.Validate(); err != nil {",
          "9751:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EndPoints\", i), err.(request.ErrInvalidParams))",
          "9752:    }",
          "9753:   }",
          "9754:  }",
          "9756:  if invalidParams.Len() > 0 {",
          "9757:   return invalidParams",
          "9758:  }",
          "9759:  return nil",
          "9760: }",
          "9763: func (s *CreateRealtimeLogConfigInput) SetEndPoints(v []*EndPoint) *CreateRealtimeLogConfigInput {",
          "9764:  s.EndPoints = v",
          "9765:  return s",
          "9766: }",
          "9769: func (s *CreateRealtimeLogConfigInput) SetFields(v []*string) *CreateRealtimeLogConfigInput {",
          "9770:  s.Fields = v",
          "9771:  return s",
          "9772: }",
          "9775: func (s *CreateRealtimeLogConfigInput) SetName(v string) *CreateRealtimeLogConfigInput {",
          "9776:  s.Name = &v",
          "9777:  return s",
          "9778: }",
          "9781: func (s *CreateRealtimeLogConfigInput) SetSamplingRate(v int64) *CreateRealtimeLogConfigInput {",
          "9782:  s.SamplingRate = &v",
          "9783:  return s",
          "9784: }",
          "9786: type CreateRealtimeLogConfigOutput struct {",
          "9787:  _ struct{} `type:\"structure\"`",
          "9790:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "9791: }",
          "9794: func (s CreateRealtimeLogConfigOutput) String() string {",
          "9795:  return awsutil.Prettify(s)",
          "9796: }",
          "9799: func (s CreateRealtimeLogConfigOutput) GoString() string {",
          "9800:  return s.String()",
          "9801: }",
          "9804: func (s *CreateRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *CreateRealtimeLogConfigOutput {",
          "9805:  s.RealtimeLogConfig = v",
          "9806:  return s",
          "9807: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "9806:  OriginRequestPolicyId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10491:  RealtimeLogConfigArn *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9977:  return s",
          "9978: }",
          "9981: func (s *DefaultCacheBehavior) SetSmoothStreaming(v bool) *DefaultCacheBehavior {",
          "9982:  s.SmoothStreaming = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10666: func (s *DefaultCacheBehavior) SetRealtimeLogConfigArn(v string) *DefaultCacheBehavior {",
          "10667:  s.RealtimeLogConfigArn = &v",
          "10668:  return s",
          "10669: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10551:  return s.String()",
          "10552: }",
          "10555: type DeleteStreamingDistributionInput struct {",
          "10556:  _ struct{} `locationName:\"DeleteStreamingDistributionRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11245: type DeleteRealtimeLogConfigInput struct {",
          "11246:  _ struct{} `locationName:\"DeleteRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "11249:  ARN *string `type:\"string\"`",
          "11252:  Name *string `type:\"string\"`",
          "11253: }",
          "11256: func (s DeleteRealtimeLogConfigInput) String() string {",
          "11257:  return awsutil.Prettify(s)",
          "11258: }",
          "11261: func (s DeleteRealtimeLogConfigInput) GoString() string {",
          "11262:  return s.String()",
          "11263: }",
          "11266: func (s *DeleteRealtimeLogConfigInput) SetARN(v string) *DeleteRealtimeLogConfigInput {",
          "11267:  s.ARN = &v",
          "11268:  return s",
          "11269: }",
          "11272: func (s *DeleteRealtimeLogConfigInput) SetName(v string) *DeleteRealtimeLogConfigInput {",
          "11273:  s.Name = &v",
          "11274:  return s",
          "11275: }",
          "11277: type DeleteRealtimeLogConfigOutput struct {",
          "11278:  _ struct{} `type:\"structure\"`",
          "11279: }",
          "11282: func (s DeleteRealtimeLogConfigOutput) String() string {",
          "11283:  return awsutil.Prettify(s)",
          "11284: }",
          "11287: func (s DeleteRealtimeLogConfigOutput) GoString() string {",
          "11288:  return s.String()",
          "11289: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11730:  return s",
          "11731: }",
          "11735: type FieldLevelEncryption struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12472: type EndPoint struct {",
          "12473:  _ struct{} `type:\"structure\"`",
          "12477:  KinesisStreamConfig *KinesisStreamConfig `type:\"structure\"`",
          "12483:  StreamType *string `type:\"string\" required:\"true\"`",
          "12484: }",
          "12487: func (s EndPoint) String() string {",
          "12488:  return awsutil.Prettify(s)",
          "12489: }",
          "12492: func (s EndPoint) GoString() string {",
          "12493:  return s.String()",
          "12494: }",
          "12497: func (s *EndPoint) Validate() error {",
          "12498:  invalidParams := request.ErrInvalidParams{Context: \"EndPoint\"}",
          "12499:  if s.StreamType == nil {",
          "12500:   invalidParams.Add(request.NewErrParamRequired(\"StreamType\"))",
          "12501:  }",
          "12502:  if s.KinesisStreamConfig != nil {",
          "12503:   if err := s.KinesisStreamConfig.Validate(); err != nil {",
          "12504:    invalidParams.AddNested(\"KinesisStreamConfig\", err.(request.ErrInvalidParams))",
          "12505:   }",
          "12506:  }",
          "12508:  if invalidParams.Len() > 0 {",
          "12509:   return invalidParams",
          "12510:  }",
          "12511:  return nil",
          "12512: }",
          "12515: func (s *EndPoint) SetKinesisStreamConfig(v *KinesisStreamConfig) *EndPoint {",
          "12516:  s.KinesisStreamConfig = v",
          "12517:  return s",
          "12518: }",
          "12521: func (s *EndPoint) SetStreamType(v string) *EndPoint {",
          "12522:  s.StreamType = &v",
          "12523:  return s",
          "12524: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "13761:  return s",
          "13762: }",
          "13765: type GetStreamingDistributionConfigInput struct {",
          "13766:  _ struct{} `locationName:\"GetStreamingDistributionConfigRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14557: type GetRealtimeLogConfigInput struct {",
          "14558:  _ struct{} `locationName:\"GetRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "14561:  ARN *string `type:\"string\"`",
          "14564:  Name *string `type:\"string\"`",
          "14565: }",
          "14568: func (s GetRealtimeLogConfigInput) String() string {",
          "14569:  return awsutil.Prettify(s)",
          "14570: }",
          "14573: func (s GetRealtimeLogConfigInput) GoString() string {",
          "14574:  return s.String()",
          "14575: }",
          "14578: func (s *GetRealtimeLogConfigInput) SetARN(v string) *GetRealtimeLogConfigInput {",
          "14579:  s.ARN = &v",
          "14580:  return s",
          "14581: }",
          "14584: func (s *GetRealtimeLogConfigInput) SetName(v string) *GetRealtimeLogConfigInput {",
          "14585:  s.Name = &v",
          "14586:  return s",
          "14587: }",
          "14589: type GetRealtimeLogConfigOutput struct {",
          "14590:  _ struct{} `type:\"structure\"`",
          "14593:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "14594: }",
          "14597: func (s GetRealtimeLogConfigOutput) String() string {",
          "14598:  return awsutil.Prettify(s)",
          "14599: }",
          "14602: func (s GetRealtimeLogConfigOutput) GoString() string {",
          "14603:  return s.String()",
          "14604: }",
          "14607: func (s *GetRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *GetRealtimeLogConfigOutput {",
          "14608:  s.RealtimeLogConfig = v",
          "14609:  return s",
          "14610: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "14272:  return s",
          "14273: }",
          "14276: type LambdaFunctionAssociation struct {",
          "14277:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15125: type KinesisStreamConfig struct {",
          "15126:  _ struct{} `type:\"structure\"`",
          "15137:  RoleARN *string `type:\"string\" required:\"true\"`",
          "15143:  StreamARN *string `type:\"string\" required:\"true\"`",
          "15144: }",
          "15147: func (s KinesisStreamConfig) String() string {",
          "15148:  return awsutil.Prettify(s)",
          "15149: }",
          "15152: func (s KinesisStreamConfig) GoString() string {",
          "15153:  return s.String()",
          "15154: }",
          "15157: func (s *KinesisStreamConfig) Validate() error {",
          "15158:  invalidParams := request.ErrInvalidParams{Context: \"KinesisStreamConfig\"}",
          "15159:  if s.RoleARN == nil {",
          "15160:   invalidParams.Add(request.NewErrParamRequired(\"RoleARN\"))",
          "15161:  }",
          "15162:  if s.StreamARN == nil {",
          "15163:   invalidParams.Add(request.NewErrParamRequired(\"StreamARN\"))",
          "15164:  }",
          "15166:  if invalidParams.Len() > 0 {",
          "15167:   return invalidParams",
          "15168:  }",
          "15169:  return nil",
          "15170: }",
          "15173: func (s *KinesisStreamConfig) SetRoleARN(v string) *KinesisStreamConfig {",
          "15174:  s.RoleARN = &v",
          "15175:  return s",
          "15176: }",
          "15179: func (s *KinesisStreamConfig) SetStreamARN(v string) *KinesisStreamConfig {",
          "15180:  s.StreamARN = &v",
          "15181:  return s",
          "15182: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "14730:  return s",
          "14731: }",
          "14735: type ListDistributionsByWebACLIdInput struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15642: type ListDistributionsByRealtimeLogConfigInput struct {",
          "15643:  _ struct{} `locationName:\"ListDistributionsByRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "15649:  Marker *string `type:\"string\"`",
          "15652:  MaxItems *int64 `type:\"integer\"`",
          "15656:  RealtimeLogConfigArn *string `type:\"string\"`",
          "15660:  RealtimeLogConfigName *string `type:\"string\"`",
          "15661: }",
          "15664: func (s ListDistributionsByRealtimeLogConfigInput) String() string {",
          "15665:  return awsutil.Prettify(s)",
          "15666: }",
          "15669: func (s ListDistributionsByRealtimeLogConfigInput) GoString() string {",
          "15670:  return s.String()",
          "15671: }",
          "15674: func (s *ListDistributionsByRealtimeLogConfigInput) SetMarker(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15675:  s.Marker = &v",
          "15676:  return s",
          "15677: }",
          "15680: func (s *ListDistributionsByRealtimeLogConfigInput) SetMaxItems(v int64) *ListDistributionsByRealtimeLogConfigInput {",
          "15681:  s.MaxItems = &v",
          "15682:  return s",
          "15683: }",
          "15686: func (s *ListDistributionsByRealtimeLogConfigInput) SetRealtimeLogConfigArn(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15687:  s.RealtimeLogConfigArn = &v",
          "15688:  return s",
          "15689: }",
          "15692: func (s *ListDistributionsByRealtimeLogConfigInput) SetRealtimeLogConfigName(v string) *ListDistributionsByRealtimeLogConfigInput {",
          "15693:  s.RealtimeLogConfigName = &v",
          "15694:  return s",
          "15695: }",
          "15697: type ListDistributionsByRealtimeLogConfigOutput struct {",
          "15698:  _ struct{} `type:\"structure\" payload:\"DistributionList\"`",
          "15701:  DistributionList *DistributionList `type:\"structure\"`",
          "15702: }",
          "15705: func (s ListDistributionsByRealtimeLogConfigOutput) String() string {",
          "15706:  return awsutil.Prettify(s)",
          "15707: }",
          "15710: func (s ListDistributionsByRealtimeLogConfigOutput) GoString() string {",
          "15711:  return s.String()",
          "15712: }",
          "15715: func (s *ListDistributionsByRealtimeLogConfigOutput) SetDistributionList(v *DistributionList) *ListDistributionsByRealtimeLogConfigOutput {",
          "15716:  s.DistributionList = v",
          "15717:  return s",
          "15718: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "15230:  return s",
          "15231: }",
          "15234: type ListStreamingDistributionsInput struct {",
          "15235:  _ struct{} `locationName:\"ListStreamingDistributionsRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16220: type ListRealtimeLogConfigsInput struct {",
          "16221:  _ struct{} `locationName:\"ListRealtimeLogConfigsRequest\" type:\"structure\"`",
          "16228:  Marker *string `location:\"querystring\" locationName:\"Marker\" type:\"string\"`",
          "16231:  MaxItems *int64 `location:\"querystring\" locationName:\"MaxItems\" type:\"integer\"`",
          "16232: }",
          "16235: func (s ListRealtimeLogConfigsInput) String() string {",
          "16236:  return awsutil.Prettify(s)",
          "16237: }",
          "16240: func (s ListRealtimeLogConfigsInput) GoString() string {",
          "16241:  return s.String()",
          "16242: }",
          "16245: func (s *ListRealtimeLogConfigsInput) SetMarker(v string) *ListRealtimeLogConfigsInput {",
          "16246:  s.Marker = &v",
          "16247:  return s",
          "16248: }",
          "16251: func (s *ListRealtimeLogConfigsInput) SetMaxItems(v int64) *ListRealtimeLogConfigsInput {",
          "16252:  s.MaxItems = &v",
          "16253:  return s",
          "16254: }",
          "16256: type ListRealtimeLogConfigsOutput struct {",
          "16257:  _ struct{} `type:\"structure\" payload:\"RealtimeLogConfigs\"`",
          "16260:  RealtimeLogConfigs *RealtimeLogConfigs `type:\"structure\"`",
          "16261: }",
          "16264: func (s ListRealtimeLogConfigsOutput) String() string {",
          "16265:  return awsutil.Prettify(s)",
          "16266: }",
          "16269: func (s ListRealtimeLogConfigsOutput) GoString() string {",
          "16270:  return s.String()",
          "16271: }",
          "16274: func (s *ListRealtimeLogConfigsOutput) SetRealtimeLogConfigs(v *RealtimeLogConfigs) *ListRealtimeLogConfigsOutput {",
          "16275:  s.RealtimeLogConfigs = v",
          "16276:  return s",
          "16277: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "17608:  return s",
          "17609: }",
          "17612: type RealtimeMetricsSubscriptionConfig struct {",
          "17613:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18658: type RealtimeLogConfig struct {",
          "18659:  _ struct{} `type:\"structure\"`",
          "18664:  ARN *string `type:\"string\" required:\"true\"`",
          "18670:  EndPoints []*EndPoint `type:\"list\" required:\"true\"`",
          "18681:  Fields []*string `locationNameList:\"Field\" type:\"list\" required:\"true\"`",
          "18686:  Name *string `type:\"string\" required:\"true\"`",
          "18693:  SamplingRate *int64 `type:\"long\" required:\"true\"`",
          "18694: }",
          "18697: func (s RealtimeLogConfig) String() string {",
          "18698:  return awsutil.Prettify(s)",
          "18699: }",
          "18702: func (s RealtimeLogConfig) GoString() string {",
          "18703:  return s.String()",
          "18704: }",
          "18707: func (s *RealtimeLogConfig) SetARN(v string) *RealtimeLogConfig {",
          "18708:  s.ARN = &v",
          "18709:  return s",
          "18710: }",
          "18713: func (s *RealtimeLogConfig) SetEndPoints(v []*EndPoint) *RealtimeLogConfig {",
          "18714:  s.EndPoints = v",
          "18715:  return s",
          "18716: }",
          "18719: func (s *RealtimeLogConfig) SetFields(v []*string) *RealtimeLogConfig {",
          "18720:  s.Fields = v",
          "18721:  return s",
          "18722: }",
          "18725: func (s *RealtimeLogConfig) SetName(v string) *RealtimeLogConfig {",
          "18726:  s.Name = &v",
          "18727:  return s",
          "18728: }",
          "18731: func (s *RealtimeLogConfig) SetSamplingRate(v int64) *RealtimeLogConfig {",
          "18732:  s.SamplingRate = &v",
          "18733:  return s",
          "18734: }",
          "18737: type RealtimeLogConfigs struct {",
          "18738:  _ struct{} `type:\"structure\"`",
          "18744:  IsTruncated *bool `type:\"boolean\" required:\"true\"`",
          "18747:  Items []*RealtimeLogConfig `type:\"list\"`",
          "18754:  Marker *string `type:\"string\" required:\"true\"`",
          "18759:  MaxItems *int64 `type:\"integer\" required:\"true\"`",
          "18765:  NextMarker *string `type:\"string\"`",
          "18766: }",
          "18769: func (s RealtimeLogConfigs) String() string {",
          "18770:  return awsutil.Prettify(s)",
          "18771: }",
          "18774: func (s RealtimeLogConfigs) GoString() string {",
          "18775:  return s.String()",
          "18776: }",
          "18779: func (s *RealtimeLogConfigs) SetIsTruncated(v bool) *RealtimeLogConfigs {",
          "18780:  s.IsTruncated = &v",
          "18781:  return s",
          "18782: }",
          "18785: func (s *RealtimeLogConfigs) SetItems(v []*RealtimeLogConfig) *RealtimeLogConfigs {",
          "18786:  s.Items = v",
          "18787:  return s",
          "18788: }",
          "18791: func (s *RealtimeLogConfigs) SetMarker(v string) *RealtimeLogConfigs {",
          "18792:  s.Marker = &v",
          "18793:  return s",
          "18794: }",
          "18797: func (s *RealtimeLogConfigs) SetMaxItems(v int64) *RealtimeLogConfigs {",
          "18798:  s.MaxItems = &v",
          "18799:  return s",
          "18800: }",
          "18803: func (s *RealtimeLogConfigs) SetNextMarker(v string) *RealtimeLogConfigs {",
          "18804:  s.NextMarker = &v",
          "18805:  return s",
          "18806: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "19639:  return s",
          "19640: }",
          "19643: type UpdateStreamingDistributionInput struct {",
          "19644:  _ struct{} `locationName:\"UpdateStreamingDistributionRequest\" type:\"structure\" payload:\"StreamingDistributionConfig\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20839: type UpdateRealtimeLogConfigInput struct {",
          "20840:  _ struct{} `locationName:\"UpdateRealtimeLogConfigRequest\" type:\"structure\" xmlURI:\"http://cloudfront.amazonaws.com/doc/2020-05-31/\"`",
          "20843:  ARN *string `type:\"string\"`",
          "20847:  EndPoints []*EndPoint `type:\"list\"`",
          "20854:  Fields []*string `locationNameList:\"Field\" type:\"list\"`",
          "20857:  Name *string `type:\"string\"`",
          "20862:  SamplingRate *int64 `type:\"long\"`",
          "20863: }",
          "20866: func (s UpdateRealtimeLogConfigInput) String() string {",
          "20867:  return awsutil.Prettify(s)",
          "20868: }",
          "20871: func (s UpdateRealtimeLogConfigInput) GoString() string {",
          "20872:  return s.String()",
          "20873: }",
          "20876: func (s *UpdateRealtimeLogConfigInput) Validate() error {",
          "20877:  invalidParams := request.ErrInvalidParams{Context: \"UpdateRealtimeLogConfigInput\"}",
          "20878:  if s.EndPoints != nil {",
          "20879:   for i, v := range s.EndPoints {",
          "20880:    if v == nil {",
          "20881:     continue",
          "20882:    }",
          "20883:    if err := v.Validate(); err != nil {",
          "20884:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"EndPoints\", i), err.(request.ErrInvalidParams))",
          "20885:    }",
          "20886:   }",
          "20887:  }",
          "20889:  if invalidParams.Len() > 0 {",
          "20890:   return invalidParams",
          "20891:  }",
          "20892:  return nil",
          "20893: }",
          "20896: func (s *UpdateRealtimeLogConfigInput) SetARN(v string) *UpdateRealtimeLogConfigInput {",
          "20897:  s.ARN = &v",
          "20898:  return s",
          "20899: }",
          "20902: func (s *UpdateRealtimeLogConfigInput) SetEndPoints(v []*EndPoint) *UpdateRealtimeLogConfigInput {",
          "20903:  s.EndPoints = v",
          "20904:  return s",
          "20905: }",
          "20908: func (s *UpdateRealtimeLogConfigInput) SetFields(v []*string) *UpdateRealtimeLogConfigInput {",
          "20909:  s.Fields = v",
          "20910:  return s",
          "20911: }",
          "20914: func (s *UpdateRealtimeLogConfigInput) SetName(v string) *UpdateRealtimeLogConfigInput {",
          "20915:  s.Name = &v",
          "20916:  return s",
          "20917: }",
          "20920: func (s *UpdateRealtimeLogConfigInput) SetSamplingRate(v int64) *UpdateRealtimeLogConfigInput {",
          "20921:  s.SamplingRate = &v",
          "20922:  return s",
          "20923: }",
          "20925: type UpdateRealtimeLogConfigOutput struct {",
          "20926:  _ struct{} `type:\"structure\"`",
          "20929:  RealtimeLogConfig *RealtimeLogConfig `type:\"structure\"`",
          "20930: }",
          "20933: func (s UpdateRealtimeLogConfigOutput) String() string {",
          "20934:  return awsutil.Prettify(s)",
          "20935: }",
          "20938: func (s UpdateRealtimeLogConfigOutput) GoString() string {",
          "20939:  return s.String()",
          "20940: }",
          "20943: func (s *UpdateRealtimeLogConfigOutput) SetRealtimeLogConfig(v *RealtimeLogConfig) *UpdateRealtimeLogConfigOutput {",
          "20944:  s.RealtimeLogConfig = v",
          "20945:  return s",
          "20946: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "20356:  SSLSupportMethodVip = \"vip\"",
          "20357: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21670:  SSLSupportMethodStaticIp = \"static-ip\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "20361:  return []string{",
          "20362:   SSLSupportMethodSniOnly,",
          "20363:   SSLSupportMethodVip,",
          "20364:  }",
          "20365: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21678:   SSLSupportMethodStaticIp,",
          "",
          "---------------"
        ],
        "service/cloudfront/cloudfrontiface/interface.go||service/cloudfront/cloudfrontiface/interface.go": [
          "File: service/cloudfront/cloudfrontiface/interface.go -> service/cloudfront/cloudfrontiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:  CreatePublicKeyWithContext(aws.Context, *cloudfront.CreatePublicKeyInput, ...request.Option) (*cloudfront.CreatePublicKeyOutput, error)",
          "101:  CreatePublicKeyRequest(*cloudfront.CreatePublicKeyInput) (*request.Request, *cloudfront.CreatePublicKeyOutput)",
          "103:  CreateStreamingDistribution(*cloudfront.CreateStreamingDistributionInput) (*cloudfront.CreateStreamingDistributionOutput, error)",
          "104:  CreateStreamingDistributionWithContext(aws.Context, *cloudfront.CreateStreamingDistributionInput, ...request.Option) (*cloudfront.CreateStreamingDistributionOutput, error)",
          "105:  CreateStreamingDistributionRequest(*cloudfront.CreateStreamingDistributionInput) (*request.Request, *cloudfront.CreateStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  CreateRealtimeLogConfig(*cloudfront.CreateRealtimeLogConfigInput) (*cloudfront.CreateRealtimeLogConfigOutput, error)",
          "104:  CreateRealtimeLogConfigWithContext(aws.Context, *cloudfront.CreateRealtimeLogConfigInput, ...request.Option) (*cloudfront.CreateRealtimeLogConfigOutput, error)",
          "105:  CreateRealtimeLogConfigRequest(*cloudfront.CreateRealtimeLogConfigInput) (*request.Request, *cloudfront.CreateRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:  DeletePublicKeyWithContext(aws.Context, *cloudfront.DeletePublicKeyInput, ...request.Option) (*cloudfront.DeletePublicKeyOutput, error)",
          "141:  DeletePublicKeyRequest(*cloudfront.DeletePublicKeyInput) (*request.Request, *cloudfront.DeletePublicKeyOutput)",
          "143:  DeleteStreamingDistribution(*cloudfront.DeleteStreamingDistributionInput) (*cloudfront.DeleteStreamingDistributionOutput, error)",
          "144:  DeleteStreamingDistributionWithContext(aws.Context, *cloudfront.DeleteStreamingDistributionInput, ...request.Option) (*cloudfront.DeleteStreamingDistributionOutput, error)",
          "145:  DeleteStreamingDistributionRequest(*cloudfront.DeleteStreamingDistributionInput) (*request.Request, *cloudfront.DeleteStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  DeleteRealtimeLogConfig(*cloudfront.DeleteRealtimeLogConfigInput) (*cloudfront.DeleteRealtimeLogConfigOutput, error)",
          "148:  DeleteRealtimeLogConfigWithContext(aws.Context, *cloudfront.DeleteRealtimeLogConfigInput, ...request.Option) (*cloudfront.DeleteRealtimeLogConfigOutput, error)",
          "149:  DeleteRealtimeLogConfigRequest(*cloudfront.DeleteRealtimeLogConfigInput) (*request.Request, *cloudfront.DeleteRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:  GetPublicKeyConfigWithContext(aws.Context, *cloudfront.GetPublicKeyConfigInput, ...request.Option) (*cloudfront.GetPublicKeyConfigOutput, error)",
          "209:  GetPublicKeyConfigRequest(*cloudfront.GetPublicKeyConfigInput) (*request.Request, *cloudfront.GetPublicKeyConfigOutput)",
          "211:  GetStreamingDistribution(*cloudfront.GetStreamingDistributionInput) (*cloudfront.GetStreamingDistributionOutput, error)",
          "212:  GetStreamingDistributionWithContext(aws.Context, *cloudfront.GetStreamingDistributionInput, ...request.Option) (*cloudfront.GetStreamingDistributionOutput, error)",
          "213:  GetStreamingDistributionRequest(*cloudfront.GetStreamingDistributionInput) (*request.Request, *cloudfront.GetStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "219:  GetRealtimeLogConfig(*cloudfront.GetRealtimeLogConfigInput) (*cloudfront.GetRealtimeLogConfigOutput, error)",
          "220:  GetRealtimeLogConfigWithContext(aws.Context, *cloudfront.GetRealtimeLogConfigInput, ...request.Option) (*cloudfront.GetRealtimeLogConfigOutput, error)",
          "221:  GetRealtimeLogConfigRequest(*cloudfront.GetRealtimeLogConfigInput) (*request.Request, *cloudfront.GetRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "242:  ListDistributionsByOriginRequestPolicyIdWithContext(aws.Context, *cloudfront.ListDistributionsByOriginRequestPolicyIdInput, ...request.Option) (*cloudfront.ListDistributionsByOriginRequestPolicyIdOutput, error)",
          "243:  ListDistributionsByOriginRequestPolicyIdRequest(*cloudfront.ListDistributionsByOriginRequestPolicyIdInput) (*request.Request, *cloudfront.ListDistributionsByOriginRequestPolicyIdOutput)",
          "245:  ListDistributionsByWebACLId(*cloudfront.ListDistributionsByWebACLIdInput) (*cloudfront.ListDistributionsByWebACLIdOutput, error)",
          "246:  ListDistributionsByWebACLIdWithContext(aws.Context, *cloudfront.ListDistributionsByWebACLIdInput, ...request.Option) (*cloudfront.ListDistributionsByWebACLIdOutput, error)",
          "247:  ListDistributionsByWebACLIdRequest(*cloudfront.ListDistributionsByWebACLIdInput) (*request.Request, *cloudfront.ListDistributionsByWebACLIdOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:  ListDistributionsByRealtimeLogConfig(*cloudfront.ListDistributionsByRealtimeLogConfigInput) (*cloudfront.ListDistributionsByRealtimeLogConfigOutput, error)",
          "258:  ListDistributionsByRealtimeLogConfigWithContext(aws.Context, *cloudfront.ListDistributionsByRealtimeLogConfigInput, ...request.Option) (*cloudfront.ListDistributionsByRealtimeLogConfigOutput, error)",
          "259:  ListDistributionsByRealtimeLogConfigRequest(*cloudfront.ListDistributionsByRealtimeLogConfigInput) (*request.Request, *cloudfront.ListDistributionsByRealtimeLogConfigOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "269:  ListPublicKeysWithContext(aws.Context, *cloudfront.ListPublicKeysInput, ...request.Option) (*cloudfront.ListPublicKeysOutput, error)",
          "270:  ListPublicKeysRequest(*cloudfront.ListPublicKeysInput) (*request.Request, *cloudfront.ListPublicKeysOutput)",
          "272:  ListStreamingDistributions(*cloudfront.ListStreamingDistributionsInput) (*cloudfront.ListStreamingDistributionsOutput, error)",
          "273:  ListStreamingDistributionsWithContext(aws.Context, *cloudfront.ListStreamingDistributionsInput, ...request.Option) (*cloudfront.ListStreamingDistributionsOutput, error)",
          "274:  ListStreamingDistributionsRequest(*cloudfront.ListStreamingDistributionsInput) (*request.Request, *cloudfront.ListStreamingDistributionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:  ListRealtimeLogConfigs(*cloudfront.ListRealtimeLogConfigsInput) (*cloudfront.ListRealtimeLogConfigsOutput, error)",
          "289:  ListRealtimeLogConfigsWithContext(aws.Context, *cloudfront.ListRealtimeLogConfigsInput, ...request.Option) (*cloudfront.ListRealtimeLogConfigsOutput, error)",
          "290:  ListRealtimeLogConfigsRequest(*cloudfront.ListRealtimeLogConfigsInput) (*request.Request, *cloudfront.ListRealtimeLogConfigsOutput)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "316:  UpdatePublicKeyWithContext(aws.Context, *cloudfront.UpdatePublicKeyInput, ...request.Option) (*cloudfront.UpdatePublicKeyOutput, error)",
          "317:  UpdatePublicKeyRequest(*cloudfront.UpdatePublicKeyInput) (*request.Request, *cloudfront.UpdatePublicKeyOutput)",
          "319:  UpdateStreamingDistribution(*cloudfront.UpdateStreamingDistributionInput) (*cloudfront.UpdateStreamingDistributionOutput, error)",
          "320:  UpdateStreamingDistributionWithContext(aws.Context, *cloudfront.UpdateStreamingDistributionInput, ...request.Option) (*cloudfront.UpdateStreamingDistributionOutput, error)",
          "321:  UpdateStreamingDistributionRequest(*cloudfront.UpdateStreamingDistributionInput) (*request.Request, *cloudfront.UpdateStreamingDistributionOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "339:  UpdateRealtimeLogConfig(*cloudfront.UpdateRealtimeLogConfigInput) (*cloudfront.UpdateRealtimeLogConfigOutput, error)",
          "340:  UpdateRealtimeLogConfigWithContext(aws.Context, *cloudfront.UpdateRealtimeLogConfigInput, ...request.Option) (*cloudfront.UpdateRealtimeLogConfigOutput, error)",
          "341:  UpdateRealtimeLogConfigRequest(*cloudfront.UpdateRealtimeLogConfigInput) (*request.Request, *cloudfront.UpdateRealtimeLogConfigOutput)",
          "",
          "---------------"
        ],
        "service/cloudfront/errors.go||service/cloudfront/errors.go": [
          "File: service/cloudfront/errors.go -> service/cloudfront/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:  ErrCodeNoSuchPublicKey = \"NoSuchPublicKey\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:  ErrCodeNoSuchRealtimeLogConfig = \"NoSuchRealtimeLogConfig\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "388:  ErrCodeQueryArgProfileEmpty = \"QueryArgProfileEmpty\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:  ErrCodeRealtimeLogConfigAlreadyExists = \"RealtimeLogConfigAlreadyExists\"",
          "408:  ErrCodeRealtimeLogConfigInUse = \"RealtimeLogConfigInUse\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:  ErrCodeTooManyQueryStringsInOriginRequestPolicy = \"TooManyQueryStringsInOriginRequestPolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:  ErrCodeTooManyRealtimeLogConfigs = \"TooManyRealtimeLogConfigs\"",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "89527:  FleetId *string `type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89530:  LaunchTemplateConfigs []*FleetLaunchTemplateConfigRequest `locationName:\"LaunchTemplateConfig\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89551:  if s.TargetCapacitySpecification == nil {",
          "89552:   invalidParams.Add(request.NewErrParamRequired(\"TargetCapacitySpecification\"))",
          "89553:  }",
          "89554:  if s.TargetCapacitySpecification != nil {",
          "89555:   if err := s.TargetCapacitySpecification.Validate(); err != nil {",
          "89556:    invalidParams.AddNested(\"TargetCapacitySpecification\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89557:  if s.LaunchTemplateConfigs != nil {",
          "89558:   for i, v := range s.LaunchTemplateConfigs {",
          "89559:    if v == nil {",
          "89560:     continue",
          "89561:    }",
          "89562:    if err := v.Validate(); err != nil {",
          "89563:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"LaunchTemplateConfigs\", i), err.(request.ErrInvalidParams))",
          "89564:    }",
          "89565:   }",
          "89566:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89581:  return s",
          "89582: }",
          "89585: func (s *ModifyFleetInput) SetTargetCapacitySpecification(v *TargetCapacitySpecificationRequest) *ModifyFleetInput {",
          "89586:  s.TargetCapacitySpecification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89598: func (s *ModifyFleetInput) SetLaunchTemplateConfigs(v []*FleetLaunchTemplateConfigRequest) *ModifyFleetInput {",
          "89599:  s.LaunchTemplateConfigs = v",
          "89600:  return s",
          "89601: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91497:  ExcessCapacityTerminationPolicy *string `locationName:\"excessCapacityTerminationPolicy\" type:\"string\" enum:\"ExcessCapacityTerminationPolicy\"`",
          "91500:  OnDemandTargetCapacity *int64 `type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91522:  LaunchTemplateConfigs []*LaunchTemplateConfig `locationName:\"LaunchTemplateConfig\" locationNameList:\"item\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "91524:  if s.SpotFleetRequestId == nil {",
          "91525:   invalidParams.Add(request.NewErrParamRequired(\"SpotFleetRequestId\"))",
          "91526:  }",
          "91528:  if invalidParams.Len() > 0 {",
          "91529:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91552:  if s.LaunchTemplateConfigs != nil {",
          "91553:   for i, v := range s.LaunchTemplateConfigs {",
          "91554:    if v == nil {",
          "91555:     continue",
          "91556:    }",
          "91557:    if err := v.Validate(); err != nil {",
          "91558:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"LaunchTemplateConfigs\", i), err.(request.ErrInvalidParams))",
          "91559:    }",
          "91560:   }",
          "91561:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "91537:  return s",
          "91538: }",
          "91541: func (s *ModifySpotFleetRequestInput) SetOnDemandTargetCapacity(v int64) *ModifySpotFleetRequestInput {",
          "91542:  s.OnDemandTargetCapacity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91576: func (s *ModifySpotFleetRequestInput) SetLaunchTemplateConfigs(v []*LaunchTemplateConfig) *ModifySpotFleetRequestInput {",
          "91577:  s.LaunchTemplateConfigs = v",
          "91578:  return s",
          "91579: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "118890:  ResourceTypeDhcpOptions = \"dhcp-options\"",
          "118893:  ResourceTypeElasticIp = \"elastic-ip\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118934:  ResourceTypeEgressOnlyInternetGateway = \"egress-only-internet-gateway\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "119014:   ResourceTypeCustomerGateway,",
          "119015:   ResourceTypeDedicatedHost,",
          "119016:   ResourceTypeDhcpOptions,",
          "119017:   ResourceTypeElasticIp,",
          "119018:   ResourceTypeElasticGpu,",
          "119019:   ResourceTypeExportImageTask,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119061:   ResourceTypeEgressOnlyInternetGateway,",
          "",
          "---------------"
        ],
        "service/sqs/api.go||service/sqs/api.go": [
          "File: service/sqs/api.go -> service/sqs/api.go"
        ],
        "service/sqs/doc.go||service/sqs/doc.go": [
          "File: service/sqs/doc.go -> service/sqs/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "561f3c452a7b60ad35330a554dc30dca77a5fa1c",
      "candidate_info": {
        "commit_hash": "561f3c452a7b60ad35330a554dc30dca77a5fa1c",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/561f3c452a7b60ad35330a554dc30dca77a5fa1c",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/ivs/2020-07-14/api-2.json",
          "models/apis/ivs/2020-07-14/docs-2.json",
          "models/apis/ivs/2020-07-14/paginators-1.json",
          "models/apis/lakeformation/2017-03-31/api-2.json",
          "models/apis/lakeformation/2017-03-31/docs-2.json",
          "models/apis/organizations/2016-11-28/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/storagegateway/2013-06-30/api-2.json",
          "models/apis/storagegateway/2013-06-30/docs-2.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/ivs/api.go",
          "service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go",
          "service/organizations/api.go",
          "service/servicecatalog/api.go",
          "service/storagegateway/api.go",
          "service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.34.8 (2020-08-19) ===\n\n### Service Client Updates\n* `service/ivs`: Updates service API, documentation, and paginators\n* `service/lakeformation`: Updates service API and documentation\n* `service/organizations`: Updates service documentation\n  * Minor documentation updates for AWS Organizations\n* `service/servicecatalog`: Updates service API and documentation\n  * Enhance SearchProvisionedProducts API to allow queries using productName and provisioningArtifactName. Added lastProvisioningRecordId and lastSuccessfulRecordId to Read ProvisionedProduct APIs\n* `service/storagegateway`: Updates service API and documentation\n  * Added WORM, tape retention lock, and custom pool features for virtual tapes.\n* `service/transcribe-streaming`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/ivs/api.go||service/ivs/api.go",
          "service/ivs/doc.go||service/ivs/doc.go",
          "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go",
          "service/lakeformation/api.go||service/lakeformation/api.go",
          "service/organizations/api.go||service/organizations/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/storagegateway/api.go||service/storagegateway/api.go",
          "service/storagegateway/doc.go||service/storagegateway/doc.go",
          "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/organizations/api.go||service/organizations/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5316:     Protocols: []string{\"https\"},",
          "5317:    },",
          "5318:    Endpoints: endpoints{",
          "5319:     \"ap-east-1\":      endpoint{},",
          "5320:     \"ap-northeast-1\": endpoint{},",
          "5321:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5319:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5325:     \"ca-central-1\":   endpoint{},",
          "5326:     \"eu-central-1\":   endpoint{},",
          "5327:     \"eu-north-1\":     endpoint{},",
          "5328:     \"eu-west-1\":      endpoint{},",
          "5329:     \"eu-west-2\":      endpoint{},",
          "5330:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5329:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.7\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.8\"",
          "",
          "---------------"
        ],
        "service/ivs/api.go||service/ivs/api.go": [
          "File: service/ivs/api.go -> service/ivs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:  return out, req.Send()",
          "425: }",
          "427: const opDeleteStreamKey = \"DeleteStreamKey\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "427: const opDeletePlaybackKeyPair = \"DeletePlaybackKeyPair\"",
          "453: func (c *IVS) DeletePlaybackKeyPairRequest(input *DeletePlaybackKeyPairInput) (req *request.Request, output *DeletePlaybackKeyPairOutput) {",
          "454:  op := &request.Operation{",
          "455:   Name:       opDeletePlaybackKeyPair,",
          "456:   HTTPMethod: \"POST\",",
          "457:   HTTPPath:   \"/DeletePlaybackKeyPair\",",
          "458:  }",
          "460:  if input == nil {",
          "461:   input = &DeletePlaybackKeyPairInput{}",
          "462:  }",
          "464:  output = &DeletePlaybackKeyPairOutput{}",
          "465:  req = c.newRequest(op, input, output)",
          "466:  req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "467:  return",
          "468: }",
          "492: func (c *IVS) DeletePlaybackKeyPair(input *DeletePlaybackKeyPairInput) (*DeletePlaybackKeyPairOutput, error) {",
          "493:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "494:  return out, req.Send()",
          "495: }",
          "506: func (c *IVS) DeletePlaybackKeyPairWithContext(ctx aws.Context, input *DeletePlaybackKeyPairInput, opts ...request.Option) (*DeletePlaybackKeyPairOutput, error) {",
          "507:  req, out := c.DeletePlaybackKeyPairRequest(input)",
          "508:  req.SetContext(ctx)",
          "509:  req.ApplyOptions(opts...)",
          "510:  return out, req.Send()",
          "511: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "592:  return out, req.Send()",
          "593: }",
          "595: const opGetStream = \"GetStream\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "681: const opGetPlaybackKeyPair = \"GetPlaybackKeyPair\"",
          "707: func (c *IVS) GetPlaybackKeyPairRequest(input *GetPlaybackKeyPairInput) (req *request.Request, output *GetPlaybackKeyPairOutput) {",
          "708:  op := &request.Operation{",
          "709:   Name:       opGetPlaybackKeyPair,",
          "710:   HTTPMethod: \"POST\",",
          "711:   HTTPPath:   \"/GetPlaybackKeyPair\",",
          "712:  }",
          "714:  if input == nil {",
          "715:   input = &GetPlaybackKeyPairInput{}",
          "716:  }",
          "718:  output = &GetPlaybackKeyPairOutput{}",
          "719:  req = c.newRequest(op, input, output)",
          "720:  return",
          "721: }",
          "744: func (c *IVS) GetPlaybackKeyPair(input *GetPlaybackKeyPairInput) (*GetPlaybackKeyPairOutput, error) {",
          "745:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "746:  return out, req.Send()",
          "747: }",
          "758: func (c *IVS) GetPlaybackKeyPairWithContext(ctx aws.Context, input *GetPlaybackKeyPairInput, opts ...request.Option) (*GetPlaybackKeyPairOutput, error) {",
          "759:  req, out := c.GetPlaybackKeyPairRequest(input)",
          "760:  req.SetContext(ctx)",
          "761:  req.ApplyOptions(opts...)",
          "762:  return out, req.Send()",
          "763: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "758:  return out, req.Send()",
          "759: }",
          "761: const opListChannels = \"ListChannels\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "931: const opImportPlaybackKeyPair = \"ImportPlaybackKeyPair\"",
          "957: func (c *IVS) ImportPlaybackKeyPairRequest(input *ImportPlaybackKeyPairInput) (req *request.Request, output *ImportPlaybackKeyPairOutput) {",
          "958:  op := &request.Operation{",
          "959:   Name:       opImportPlaybackKeyPair,",
          "960:   HTTPMethod: \"POST\",",
          "961:   HTTPPath:   \"/ImportPlaybackKeyPair\",",
          "962:  }",
          "964:  if input == nil {",
          "965:   input = &ImportPlaybackKeyPairInput{}",
          "966:  }",
          "968:  output = &ImportPlaybackKeyPairOutput{}",
          "969:  req = c.newRequest(op, input, output)",
          "970:  return",
          "971: }",
          "998: func (c *IVS) ImportPlaybackKeyPair(input *ImportPlaybackKeyPairInput) (*ImportPlaybackKeyPairOutput, error) {",
          "999:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1000:  return out, req.Send()",
          "1001: }",
          "1012: func (c *IVS) ImportPlaybackKeyPairWithContext(ctx aws.Context, input *ImportPlaybackKeyPairInput, opts ...request.Option) (*ImportPlaybackKeyPairOutput, error) {",
          "1013:  req, out := c.ImportPlaybackKeyPairRequest(input)",
          "1014:  req.SetContext(ctx)",
          "1015:  req.ApplyOptions(opts...)",
          "1016:  return out, req.Send()",
          "1017: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "898:  return p.Err()",
          "899: }",
          "901: const opListStreamKeys = \"ListStreamKeys\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1159: const opListPlaybackKeyPairs = \"ListPlaybackKeyPairs\"",
          "1185: func (c *IVS) ListPlaybackKeyPairsRequest(input *ListPlaybackKeyPairsInput) (req *request.Request, output *ListPlaybackKeyPairsOutput) {",
          "1186:  op := &request.Operation{",
          "1187:   Name:       opListPlaybackKeyPairs,",
          "1188:   HTTPMethod: \"POST\",",
          "1189:   HTTPPath:   \"/ListPlaybackKeyPairs\",",
          "1190:   Paginator: &request.Paginator{",
          "1191:    InputTokens:     []string{\"nextToken\"},",
          "1192:    OutputTokens:    []string{\"nextToken\"},",
          "1193:    LimitToken:      \"maxResults\",",
          "1194:    TruncationToken: \"\",",
          "1195:   },",
          "1196:  }",
          "1198:  if input == nil {",
          "1199:   input = &ListPlaybackKeyPairsInput{}",
          "1200:  }",
          "1202:  output = &ListPlaybackKeyPairsOutput{}",
          "1203:  req = c.newRequest(op, input, output)",
          "1204:  return",
          "1205: }",
          "1224: func (c *IVS) ListPlaybackKeyPairs(input *ListPlaybackKeyPairsInput) (*ListPlaybackKeyPairsOutput, error) {",
          "1225:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1226:  return out, req.Send()",
          "1227: }",
          "1238: func (c *IVS) ListPlaybackKeyPairsWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, opts ...request.Option) (*ListPlaybackKeyPairsOutput, error) {",
          "1239:  req, out := c.ListPlaybackKeyPairsRequest(input)",
          "1240:  req.SetContext(ctx)",
          "1241:  req.ApplyOptions(opts...)",
          "1242:  return out, req.Send()",
          "1243: }",
          "1262: func (c *IVS) ListPlaybackKeyPairsPages(input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool) error {",
          "1263:  return c.ListPlaybackKeyPairsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1264: }",
          "1273: func (c *IVS) ListPlaybackKeyPairsPagesWithContext(ctx aws.Context, input *ListPlaybackKeyPairsInput, fn func(*ListPlaybackKeyPairsOutput, bool) bool, opts ...request.Option) error {",
          "1274:  p := request.Pagination{",
          "1275:   NewRequest: func() (*request.Request, error) {",
          "1276:    var inCpy *ListPlaybackKeyPairsInput",
          "1277:    if input != nil {",
          "1278:     tmp := *input",
          "1279:     inCpy = &tmp",
          "1280:    }",
          "1281:    req, _ := c.ListPlaybackKeyPairsRequest(inCpy)",
          "1282:    req.SetContext(ctx)",
          "1283:    req.ApplyOptions(opts...)",
          "1284:    return req, nil",
          "1285:   },",
          "1286:  }",
          "1288:  for p.Next() {",
          "1289:   if !fn(p.Page().(*ListPlaybackKeyPairsOutput), !p.HasNextPage()) {",
          "1290:    break",
          "1291:   }",
          "1292:  }",
          "1294:  return p.Err()",
          "1295: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2001:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2005:  IngestEndpoint *string `locationName:\"ingestEndpoint\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2400:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2049:  return s",
          "2050: }",
          "2053: func (s *Channel) SetIngestEndpoint(v string) *Channel {",
          "2054:  s.IngestEndpoint = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2452: func (s *Channel) SetAuthorized(v bool) *Channel {",
          "2453:  s.Authorized = &v",
          "2454:  return s",
          "2455: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2151:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "2154:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2559:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2176:  return s",
          "2177: }",
          "2180: func (s *ChannelSummary) SetLatencyMode(v string) *ChannelSummary {",
          "2181:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2588: func (s *ChannelSummary) SetAuthorized(v bool) *ChannelSummary {",
          "2589:  s.Authorized = &v",
          "2590:  return s",
          "2591: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2255: type CreateChannelInput struct {",
          "2256:  _ struct{} `type:\"structure\"`",
          "2259:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2673:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2291:  return s.String()",
          "2292: }",
          "2295: func (s *CreateChannelInput) SetLatencyMode(v string) *CreateChannelInput {",
          "2296:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: func (s *CreateChannelInput) SetAuthorized(v bool) *CreateChannelInput {",
          "2713:  s.Authorized = &v",
          "2714:  return s",
          "2715: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2420:  return s",
          "2421: }",
          "2424:  _ struct{} `type:\"structure\"`",
          "2429:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2430: }",
          "2434:  return awsutil.Prettify(s)",
          "2435: }",
          "2439:  return s.String()",
          "2440: }",
          "2445:  if s.Arn == nil {",
          "2446:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2447:  }",
          "",
          "[Removed Lines]",
          "2423: type DeleteChannelInput struct {",
          "2433: func (s DeleteChannelInput) String() string {",
          "2438: func (s DeleteChannelInput) GoString() string {",
          "2443: func (s *DeleteChannelInput) Validate() error {",
          "2444:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "",
          "[Added Lines]",
          "2846: type DeleteChannelInput struct {",
          "2847:  _ struct{} `type:\"structure\"`",
          "2852:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "2853: }",
          "2856: func (s DeleteChannelInput) String() string {",
          "2857:  return awsutil.Prettify(s)",
          "2858: }",
          "2861: func (s DeleteChannelInput) GoString() string {",
          "2862:  return s.String()",
          "2863: }",
          "2866: func (s *DeleteChannelInput) Validate() error {",
          "2867:  invalidParams := request.ErrInvalidParams{Context: \"DeleteChannelInput\"}",
          "2868:  if s.Arn == nil {",
          "2869:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "2870:  }",
          "2871:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "2872:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "2873:  }",
          "2875:  if invalidParams.Len() > 0 {",
          "2876:   return invalidParams",
          "2877:  }",
          "2878:  return nil",
          "2879: }",
          "2882: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2883:  s.Arn = &v",
          "2884:  return s",
          "2885: }",
          "2887: type DeleteChannelOutput struct {",
          "2888:  _ struct{} `type:\"structure\"`",
          "2889: }",
          "2892: func (s DeleteChannelOutput) String() string {",
          "2893:  return awsutil.Prettify(s)",
          "2894: }",
          "2897: func (s DeleteChannelOutput) GoString() string {",
          "2898:  return s.String()",
          "2899: }",
          "2901: type DeletePlaybackKeyPairInput struct {",
          "2911: func (s DeletePlaybackKeyPairInput) String() string {",
          "2916: func (s DeletePlaybackKeyPairInput) GoString() string {",
          "2921: func (s *DeletePlaybackKeyPairInput) Validate() error {",
          "2922:  invalidParams := request.ErrInvalidParams{Context: \"DeletePlaybackKeyPairInput\"}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2456: }",
          "2460:  s.Arn = &v",
          "2461:  return s",
          "2462: }",
          "2465:  _ struct{} `type:\"structure\"`",
          "2466: }",
          "2470:  return awsutil.Prettify(s)",
          "2471: }",
          "2475:  return s.String()",
          "2476: }",
          "",
          "[Removed Lines]",
          "2459: func (s *DeleteChannelInput) SetArn(v string) *DeleteChannelInput {",
          "2464: type DeleteChannelOutput struct {",
          "2469: func (s DeleteChannelOutput) String() string {",
          "2474: func (s DeleteChannelOutput) GoString() string {",
          "",
          "[Added Lines]",
          "2937: func (s *DeletePlaybackKeyPairInput) SetArn(v string) *DeletePlaybackKeyPairInput {",
          "2942: type DeletePlaybackKeyPairOutput struct {",
          "2947: func (s DeletePlaybackKeyPairOutput) String() string {",
          "2952: func (s DeletePlaybackKeyPairOutput) GoString() string {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2594:  return s",
          "2595: }",
          "2597: type GetStreamInput struct {",
          "2598:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3075: type GetPlaybackKeyPairInput struct {",
          "3076:  _ struct{} `type:\"structure\"`",
          "3081:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3082: }",
          "3085: func (s GetPlaybackKeyPairInput) String() string {",
          "3086:  return awsutil.Prettify(s)",
          "3087: }",
          "3090: func (s GetPlaybackKeyPairInput) GoString() string {",
          "3091:  return s.String()",
          "3092: }",
          "3095: func (s *GetPlaybackKeyPairInput) Validate() error {",
          "3096:  invalidParams := request.ErrInvalidParams{Context: \"GetPlaybackKeyPairInput\"}",
          "3097:  if s.Arn == nil {",
          "3098:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "3099:  }",
          "3100:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "3101:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "3102:  }",
          "3104:  if invalidParams.Len() > 0 {",
          "3105:   return invalidParams",
          "3106:  }",
          "3107:  return nil",
          "3108: }",
          "3111: func (s *GetPlaybackKeyPairInput) SetArn(v string) *GetPlaybackKeyPairInput {",
          "3112:  s.Arn = &v",
          "3113:  return s",
          "3114: }",
          "3116: type GetPlaybackKeyPairOutput struct {",
          "3117:  _ struct{} `type:\"structure\"`",
          "3120:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3121: }",
          "3124: func (s GetPlaybackKeyPairOutput) String() string {",
          "3125:  return awsutil.Prettify(s)",
          "3126: }",
          "3129: func (s GetPlaybackKeyPairOutput) GoString() string {",
          "3130:  return s.String()",
          "3131: }",
          "3134: func (s *GetPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *GetPlaybackKeyPairOutput {",
          "3135:  s.KeyPair = v",
          "3136:  return s",
          "3137: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2722:  return s",
          "2723: }",
          "2725: type InternalServerException struct {",
          "2726:  _            struct{}                  `type:\"structure\"`",
          "2727:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3267: type ImportPlaybackKeyPairInput struct {",
          "3268:  _ struct{} `type:\"structure\"`",
          "3272:  Name *string `locationName:\"name\" type:\"string\"`",
          "3277:  PublicKeyMaterial *string `locationName:\"publicKeyMaterial\" type:\"string\" required:\"true\"`",
          "3280:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3281: }",
          "3284: func (s ImportPlaybackKeyPairInput) String() string {",
          "3285:  return awsutil.Prettify(s)",
          "3286: }",
          "3289: func (s ImportPlaybackKeyPairInput) GoString() string {",
          "3290:  return s.String()",
          "3291: }",
          "3294: func (s *ImportPlaybackKeyPairInput) Validate() error {",
          "3295:  invalidParams := request.ErrInvalidParams{Context: \"ImportPlaybackKeyPairInput\"}",
          "3296:  if s.PublicKeyMaterial == nil {",
          "3297:   invalidParams.Add(request.NewErrParamRequired(\"PublicKeyMaterial\"))",
          "3298:  }",
          "3300:  if invalidParams.Len() > 0 {",
          "3301:   return invalidParams",
          "3302:  }",
          "3303:  return nil",
          "3304: }",
          "3307: func (s *ImportPlaybackKeyPairInput) SetName(v string) *ImportPlaybackKeyPairInput {",
          "3308:  s.Name = &v",
          "3309:  return s",
          "3310: }",
          "3313: func (s *ImportPlaybackKeyPairInput) SetPublicKeyMaterial(v string) *ImportPlaybackKeyPairInput {",
          "3314:  s.PublicKeyMaterial = &v",
          "3315:  return s",
          "3316: }",
          "3319: func (s *ImportPlaybackKeyPairInput) SetTags(v map[string]*string) *ImportPlaybackKeyPairInput {",
          "3320:  s.Tags = v",
          "3321:  return s",
          "3322: }",
          "3324: type ImportPlaybackKeyPairOutput struct {",
          "3325:  _ struct{} `type:\"structure\"`",
          "3328:  KeyPair *PlaybackKeyPair `locationName:\"keyPair\" type:\"structure\"`",
          "3329: }",
          "3332: func (s ImportPlaybackKeyPairOutput) String() string {",
          "3333:  return awsutil.Prettify(s)",
          "3334: }",
          "3337: func (s ImportPlaybackKeyPairOutput) GoString() string {",
          "3338:  return s.String()",
          "3339: }",
          "3342: func (s *ImportPlaybackKeyPairOutput) SetKeyPair(v *PlaybackKeyPair) *ImportPlaybackKeyPairOutput {",
          "3343:  s.KeyPair = v",
          "3344:  return s",
          "3345: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2870:  return s",
          "2871: }",
          "2873: type ListStreamKeysInput struct {",
          "2874:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3495: type ListPlaybackKeyPairsInput struct {",
          "3496:  _ struct{} `type:\"structure\"`",
          "3500:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "3503:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3504: }",
          "3507: func (s ListPlaybackKeyPairsInput) String() string {",
          "3508:  return awsutil.Prettify(s)",
          "3509: }",
          "3512: func (s ListPlaybackKeyPairsInput) GoString() string {",
          "3513:  return s.String()",
          "3514: }",
          "3517: func (s *ListPlaybackKeyPairsInput) Validate() error {",
          "3518:  invalidParams := request.ErrInvalidParams{Context: \"ListPlaybackKeyPairsInput\"}",
          "3519:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "3520:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "3521:  }",
          "3523:  if invalidParams.Len() > 0 {",
          "3524:   return invalidParams",
          "3525:  }",
          "3526:  return nil",
          "3527: }",
          "3530: func (s *ListPlaybackKeyPairsInput) SetMaxResults(v int64) *ListPlaybackKeyPairsInput {",
          "3531:  s.MaxResults = &v",
          "3532:  return s",
          "3533: }",
          "3536: func (s *ListPlaybackKeyPairsInput) SetNextToken(v string) *ListPlaybackKeyPairsInput {",
          "3537:  s.NextToken = &v",
          "3538:  return s",
          "3539: }",
          "3541: type ListPlaybackKeyPairsOutput struct {",
          "3542:  _ struct{} `type:\"structure\"`",
          "3547:  KeyPairs []*PlaybackKeyPairSummary `locationName:\"keyPairs\" type:\"list\" required:\"true\"`",
          "3551:  NextToken *string `locationName:\"nextToken\" type:\"string\"`",
          "3552: }",
          "3555: func (s ListPlaybackKeyPairsOutput) String() string {",
          "3556:  return awsutil.Prettify(s)",
          "3557: }",
          "3560: func (s ListPlaybackKeyPairsOutput) GoString() string {",
          "3561:  return s.String()",
          "3562: }",
          "3565: func (s *ListPlaybackKeyPairsOutput) SetKeyPairs(v []*PlaybackKeyPairSummary) *ListPlaybackKeyPairsOutput {",
          "3566:  s.KeyPairs = v",
          "3567:  return s",
          "3568: }",
          "3571: func (s *ListPlaybackKeyPairsOutput) SetNextToken(v string) *ListPlaybackKeyPairsOutput {",
          "3572:  s.NextToken = &v",
          "3573:  return s",
          "3574: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3203:  return s.RespMetadata.RequestID",
          "3204: }",
          "3206: type PutMetadataInput struct {",
          "3207:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3910: type PlaybackKeyPair struct {",
          "3911:  _ struct{} `type:\"structure\"`",
          "3914:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3917:  Fingerprint *string `locationName:\"fingerprint\" type:\"string\"`",
          "3920:  Name *string `locationName:\"name\" type:\"string\"`",
          "3923:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3924: }",
          "3927: func (s PlaybackKeyPair) String() string {",
          "3928:  return awsutil.Prettify(s)",
          "3929: }",
          "3932: func (s PlaybackKeyPair) GoString() string {",
          "3933:  return s.String()",
          "3934: }",
          "3937: func (s *PlaybackKeyPair) SetArn(v string) *PlaybackKeyPair {",
          "3938:  s.Arn = &v",
          "3939:  return s",
          "3940: }",
          "3943: func (s *PlaybackKeyPair) SetFingerprint(v string) *PlaybackKeyPair {",
          "3944:  s.Fingerprint = &v",
          "3945:  return s",
          "3946: }",
          "3949: func (s *PlaybackKeyPair) SetName(v string) *PlaybackKeyPair {",
          "3950:  s.Name = &v",
          "3951:  return s",
          "3952: }",
          "3955: func (s *PlaybackKeyPair) SetTags(v map[string]*string) *PlaybackKeyPair {",
          "3956:  s.Tags = v",
          "3957:  return s",
          "3958: }",
          "3961: type PlaybackKeyPairSummary struct {",
          "3962:  _ struct{} `type:\"structure\"`",
          "3965:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\"`",
          "3968:  Name *string `locationName:\"name\" type:\"string\"`",
          "3971:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "3972: }",
          "3975: func (s PlaybackKeyPairSummary) String() string {",
          "3976:  return awsutil.Prettify(s)",
          "3977: }",
          "3980: func (s PlaybackKeyPairSummary) GoString() string {",
          "3981:  return s.String()",
          "3982: }",
          "3985: func (s *PlaybackKeyPairSummary) SetArn(v string) *PlaybackKeyPairSummary {",
          "3986:  s.Arn = &v",
          "3987:  return s",
          "3988: }",
          "3991: func (s *PlaybackKeyPairSummary) SetName(v string) *PlaybackKeyPairSummary {",
          "3992:  s.Name = &v",
          "3993:  return s",
          "3994: }",
          "3997: func (s *PlaybackKeyPairSummary) SetTags(v map[string]*string) *PlaybackKeyPairSummary {",
          "3998:  s.Tags = v",
          "3999:  return s",
          "4000: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3930:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "3933:  LatencyMode *string `locationName:\"latencyMode\" type:\"string\" enum:\"ChannelLatencyMode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4729:  Authorized *bool `locationName:\"authorized\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3984:  return s",
          "3985: }",
          "3988: func (s *UpdateChannelInput) SetLatencyMode(v string) *UpdateChannelInput {",
          "3989:  s.LatencyMode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4787: func (s *UpdateChannelInput) SetAuthorized(v bool) *UpdateChannelInput {",
          "4788:  s.Authorized = &v",
          "4789:  return s",
          "4790: }",
          "",
          "---------------"
        ],
        "service/ivs/doc.go||service/ivs/doc.go": [
          "File: service/ivs/doc.go -> service/ivs/doc.go"
        ],
        "service/ivs/ivsiface/interface.go||service/ivs/ivsiface/interface.go": [
          "File: service/ivs/ivsiface/interface.go -> service/ivs/ivsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  DeleteChannelWithContext(aws.Context, *ivs.DeleteChannelInput, ...request.Option) (*ivs.DeleteChannelOutput, error)",
          "81:  DeleteChannelRequest(*ivs.DeleteChannelInput) (*request.Request, *ivs.DeleteChannelOutput)",
          "83:  DeleteStreamKey(*ivs.DeleteStreamKeyInput) (*ivs.DeleteStreamKeyOutput, error)",
          "84:  DeleteStreamKeyWithContext(aws.Context, *ivs.DeleteStreamKeyInput, ...request.Option) (*ivs.DeleteStreamKeyOutput, error)",
          "85:  DeleteStreamKeyRequest(*ivs.DeleteStreamKeyInput) (*request.Request, *ivs.DeleteStreamKeyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  DeletePlaybackKeyPair(*ivs.DeletePlaybackKeyPairInput) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "84:  DeletePlaybackKeyPairWithContext(aws.Context, *ivs.DeletePlaybackKeyPairInput, ...request.Option) (*ivs.DeletePlaybackKeyPairOutput, error)",
          "85:  DeletePlaybackKeyPairRequest(*ivs.DeletePlaybackKeyPairInput) (*request.Request, *ivs.DeletePlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  GetChannelWithContext(aws.Context, *ivs.GetChannelInput, ...request.Option) (*ivs.GetChannelOutput, error)",
          "89:  GetChannelRequest(*ivs.GetChannelInput) (*request.Request, *ivs.GetChannelOutput)",
          "91:  GetStream(*ivs.GetStreamInput) (*ivs.GetStreamOutput, error)",
          "92:  GetStreamWithContext(aws.Context, *ivs.GetStreamInput, ...request.Option) (*ivs.GetStreamOutput, error)",
          "93:  GetStreamRequest(*ivs.GetStreamInput) (*request.Request, *ivs.GetStreamOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:  GetPlaybackKeyPair(*ivs.GetPlaybackKeyPairInput) (*ivs.GetPlaybackKeyPairOutput, error)",
          "96:  GetPlaybackKeyPairWithContext(aws.Context, *ivs.GetPlaybackKeyPairInput, ...request.Option) (*ivs.GetPlaybackKeyPairOutput, error)",
          "97:  GetPlaybackKeyPairRequest(*ivs.GetPlaybackKeyPairInput) (*request.Request, *ivs.GetPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:  GetStreamKeyWithContext(aws.Context, *ivs.GetStreamKeyInput, ...request.Option) (*ivs.GetStreamKeyOutput, error)",
          "97:  GetStreamKeyRequest(*ivs.GetStreamKeyInput) (*request.Request, *ivs.GetStreamKeyOutput)",
          "99:  ListChannels(*ivs.ListChannelsInput) (*ivs.ListChannelsOutput, error)",
          "100:  ListChannelsWithContext(aws.Context, *ivs.ListChannelsInput, ...request.Option) (*ivs.ListChannelsOutput, error)",
          "101:  ListChannelsRequest(*ivs.ListChannelsInput) (*request.Request, *ivs.ListChannelsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:  ImportPlaybackKeyPair(*ivs.ImportPlaybackKeyPairInput) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "108:  ImportPlaybackKeyPairWithContext(aws.Context, *ivs.ImportPlaybackKeyPairInput, ...request.Option) (*ivs.ImportPlaybackKeyPairOutput, error)",
          "109:  ImportPlaybackKeyPairRequest(*ivs.ImportPlaybackKeyPairInput) (*request.Request, *ivs.ImportPlaybackKeyPairOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103:  ListChannelsPages(*ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool) error",
          "104:  ListChannelsPagesWithContext(aws.Context, *ivs.ListChannelsInput, func(*ivs.ListChannelsOutput, bool) bool, ...request.Option) error",
          "106:  ListStreamKeys(*ivs.ListStreamKeysInput) (*ivs.ListStreamKeysOutput, error)",
          "107:  ListStreamKeysWithContext(aws.Context, *ivs.ListStreamKeysInput, ...request.Option) (*ivs.ListStreamKeysOutput, error)",
          "108:  ListStreamKeysRequest(*ivs.ListStreamKeysInput) (*request.Request, *ivs.ListStreamKeysOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  ListPlaybackKeyPairs(*ivs.ListPlaybackKeyPairsInput) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "119:  ListPlaybackKeyPairsWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, ...request.Option) (*ivs.ListPlaybackKeyPairsOutput, error)",
          "120:  ListPlaybackKeyPairsRequest(*ivs.ListPlaybackKeyPairsInput) (*request.Request, *ivs.ListPlaybackKeyPairsOutput)",
          "122:  ListPlaybackKeyPairsPages(*ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool) error",
          "123:  ListPlaybackKeyPairsPagesWithContext(aws.Context, *ivs.ListPlaybackKeyPairsInput, func(*ivs.ListPlaybackKeyPairsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/lakeformation/api.go||service/lakeformation/api.go": [
          "File: service/lakeformation/api.go -> service/lakeformation/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2157:  return s",
          "2158: }",
          "2161: type EntityNotFoundException struct {",
          "2162:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2165: type DetailsMap struct {",
          "2166:  _ struct{} `type:\"structure\"`",
          "2170:  ResourceShare []*string `type:\"list\"`",
          "2171: }",
          "2174: func (s DetailsMap) String() string {",
          "2175:  return awsutil.Prettify(s)",
          "2176: }",
          "2179: func (s DetailsMap) GoString() string {",
          "2180:  return s.String()",
          "2181: }",
          "2184: func (s *DetailsMap) SetResourceShare(v []*string) *DetailsMap {",
          "2185:  s.ResourceShare = v",
          "2186:  return s",
          "2187: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3035: type PrincipalResourcePermissions struct {",
          "3036:  _ struct{} `type:\"structure\"`",
          "3039:  Permissions []*string `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3069:  AdditionalDetails *DetailsMap `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3059:  return s.String()",
          "3060: }",
          "3063: func (s *PrincipalResourcePermissions) SetPermissions(v []*string) *PrincipalResourcePermissions {",
          "3064:  s.Permissions = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3096: func (s *PrincipalResourcePermissions) SetAdditionalDetails(v *DetailsMap) *PrincipalResourcePermissions {",
          "3097:  s.AdditionalDetails = v",
          "3098:  return s",
          "3099: }",
          "",
          "---------------"
        ],
        "service/organizations/api.go||service/organizations/api.go": [
          "File: service/organizations/api.go -> service/organizations/api.go"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16547:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16550:  LastRecordId *string `min:\"1\" type:\"string\"`",
          "16553:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16559:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16574:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16560:  ProductId *string `min:\"1\" type:\"string\"`",
          "16563:  ProvisioningArtifactId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16587:  ProductName *string `type:\"string\"`",
          "16593:  ProvisioningArtifactName *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16636:  return s",
          "16637: }",
          "16640: func (s *ProvisionedProductAttribute) SetLastRecordId(v string) *ProvisionedProductAttribute {",
          "16641:  s.LastRecordId = &v",
          "16642:  return s",
          "16643: }",
          "16646: func (s *ProvisionedProductAttribute) SetName(v string) *ProvisionedProductAttribute {",
          "16647:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16670: func (s *ProvisionedProductAttribute) SetLastProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16671:  s.LastProvisioningRecordId = &v",
          "16672:  return s",
          "16673: }",
          "16682: func (s *ProvisionedProductAttribute) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductAttribute {",
          "16683:  s.LastSuccessfulProvisioningRecordId = &v",
          "16684:  return s",
          "16685: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16660:  return s",
          "16661: }",
          "16664: func (s *ProvisionedProductAttribute) SetProvisioningArtifactId(v string) *ProvisionedProductAttribute {",
          "16665:  s.ProvisioningArtifactId = &v",
          "16666:  return s",
          "16667: }",
          "16670: func (s *ProvisionedProductAttribute) SetStatus(v string) *ProvisionedProductAttribute {",
          "16671:  s.Status = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16706: func (s *ProvisionedProductAttribute) SetProductName(v string) *ProvisionedProductAttribute {",
          "16707:  s.ProductName = &v",
          "16708:  return s",
          "16709: }",
          "16718: func (s *ProvisionedProductAttribute) SetProvisioningArtifactName(v string) *ProvisionedProductAttribute {",
          "16719:  s.ProvisioningArtifactName = &v",
          "16720:  return s",
          "16721: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "16721:  IdempotencyToken *string `min:\"1\" type:\"string\"`",
          "16724:  LastRecordId *string `type:\"string\"`",
          "16727:  Name *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16787:  LastProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "16802:  LastSuccessfulProvisioningRecordId *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16796:  return s",
          "16797: }",
          "16800: func (s *ProvisionedProductDetail) SetLastRecordId(v string) *ProvisionedProductDetail {",
          "16801:  s.LastRecordId = &v",
          "16802:  return s",
          "16803: }",
          "16806: func (s *ProvisionedProductDetail) SetName(v string) *ProvisionedProductDetail {",
          "16807:  s.Name = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16878: func (s *ProvisionedProductDetail) SetLastProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16879:  s.LastProvisioningRecordId = &v",
          "16880:  return s",
          "16881: }",
          "16890: func (s *ProvisionedProductDetail) SetLastSuccessfulProvisioningRecordId(v string) *ProvisionedProductDetail {",
          "16891:  s.LastSuccessfulProvisioningRecordId = &v",
          "16892:  return s",
          "16893: }",
          "",
          "---------------"
        ],
        "service/storagegateway/api.go||service/storagegateway/api.go": [
          "File: service/storagegateway/api.go -> service/storagegateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1433:  return out, req.Send()",
          "1434: }",
          "1436: const opCreateTapeWithBarcode = \"CreateTapeWithBarcode\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1436: const opCreateTapePool = \"CreateTapePool\"",
          "1462: func (c *StorageGateway) CreateTapePoolRequest(input *CreateTapePoolInput) (req *request.Request, output *CreateTapePoolOutput) {",
          "1463:  op := &request.Operation{",
          "1464:   Name:       opCreateTapePool,",
          "1465:   HTTPMethod: \"POST\",",
          "1466:   HTTPPath:   \"/\",",
          "1467:  }",
          "1469:  if input == nil {",
          "1470:   input = &CreateTapePoolInput{}",
          "1471:  }",
          "1473:  output = &CreateTapePoolOutput{}",
          "1474:  req = c.newRequest(op, input, output)",
          "1475:  return",
          "1476: }",
          "1500: func (c *StorageGateway) CreateTapePool(input *CreateTapePoolInput) (*CreateTapePoolOutput, error) {",
          "1501:  req, out := c.CreateTapePoolRequest(input)",
          "1502:  return out, req.Send()",
          "1503: }",
          "1514: func (c *StorageGateway) CreateTapePoolWithContext(ctx aws.Context, input *CreateTapePoolInput, opts ...request.Option) (*CreateTapePoolOutput, error) {",
          "1515:  req, out := c.CreateTapePoolRequest(input)",
          "1516:  req.SetContext(ctx)",
          "1517:  req.ApplyOptions(opts...)",
          "1518:  return out, req.Send()",
          "1519: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2322:  return out, req.Send()",
          "2323: }",
          "2325: const opDeleteVolume = \"DeleteVolume\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2410: const opDeleteTapePool = \"DeleteTapePool\"",
          "2436: func (c *StorageGateway) DeleteTapePoolRequest(input *DeleteTapePoolInput) (req *request.Request, output *DeleteTapePoolOutput) {",
          "2437:  op := &request.Operation{",
          "2438:   Name:       opDeleteTapePool,",
          "2439:   HTTPMethod: \"POST\",",
          "2440:   HTTPPath:   \"/\",",
          "2441:  }",
          "2443:  if input == nil {",
          "2444:   input = &DeleteTapePoolInput{}",
          "2445:  }",
          "2447:  output = &DeleteTapePoolOutput{}",
          "2448:  req = c.newRequest(op, input, output)",
          "2449:  return",
          "2450: }",
          "2475: func (c *StorageGateway) DeleteTapePool(input *DeleteTapePoolInput) (*DeleteTapePoolOutput, error) {",
          "2476:  req, out := c.DeleteTapePoolRequest(input)",
          "2477:  return out, req.Send()",
          "2478: }",
          "2489: func (c *StorageGateway) DeleteTapePoolWithContext(ctx aws.Context, input *DeleteTapePoolInput, opts ...request.Option) (*DeleteTapePoolOutput, error) {",
          "2490:  req, out := c.DeleteTapePoolRequest(input)",
          "2491:  req.SetContext(ctx)",
          "2492:  req.ApplyOptions(opts...)",
          "2493:  return out, req.Send()",
          "2494: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5109:  return p.Err()",
          "5110: }",
          "5112: const opListTapes = \"ListTapes\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5283: const opListTapePools = \"ListTapePools\"",
          "5309: func (c *StorageGateway) ListTapePoolsRequest(input *ListTapePoolsInput) (req *request.Request, output *ListTapePoolsOutput) {",
          "5310:  op := &request.Operation{",
          "5311:   Name:       opListTapePools,",
          "5312:   HTTPMethod: \"POST\",",
          "5313:   HTTPPath:   \"/\",",
          "5314:  }",
          "5316:  if input == nil {",
          "5317:   input = &ListTapePoolsInput{}",
          "5318:  }",
          "5320:  output = &ListTapePoolsOutput{}",
          "5321:  req = c.newRequest(op, input, output)",
          "5322:  return",
          "5323: }",
          "5354: func (c *StorageGateway) ListTapePools(input *ListTapePoolsInput) (*ListTapePoolsOutput, error) {",
          "5355:  req, out := c.ListTapePoolsRequest(input)",
          "5356:  return out, req.Send()",
          "5357: }",
          "5368: func (c *StorageGateway) ListTapePoolsWithContext(ctx aws.Context, input *ListTapePoolsInput, opts ...request.Option) (*ListTapePoolsOutput, error) {",
          "5369:  req, out := c.ListTapePoolsRequest(input)",
          "5370:  req.SetContext(ctx)",
          "5371:  req.ApplyOptions(opts...)",
          "5372:  return out, req.Send()",
          "5373: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8223: type AssignTapePoolInput struct {",
          "8224:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8496:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8273:  return nil",
          "8274: }",
          "8277: func (s *AssignTapePoolInput) SetPoolId(v string) *AssignTapePoolInput {",
          "8278:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8549: func (s *AssignTapePoolInput) SetBypassGovernanceRetention(v bool) *AssignTapePoolInput {",
          "8550:  s.BypassGovernanceRetention = &v",
          "8551:  return s",
          "8552: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8529:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "8530: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8813:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8594:  return s",
          "8595: }",
          "8598: type CacheAttributes struct {",
          "8599:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8882: func (s *AutomaticTapeCreationRule) SetWorm(v bool) *AutomaticTapeCreationRule {",
          "8883:  s.Worm = &v",
          "8884:  return s",
          "8885: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10390:  return s",
          "10391: }",
          "10394: type CreateTapeWithBarcodeInput struct {",
          "10395:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10683: type CreateTapePoolInput struct {",
          "10684:  _ struct{} `type:\"structure\"`",
          "10689:  PoolName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "10693:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "10700:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "10708:  StorageClass *string `type:\"string\" required:\"true\" enum:\"TapeStorageClass\"`",
          "10717:  Tags []*Tag `type:\"list\"`",
          "10718: }",
          "10721: func (s CreateTapePoolInput) String() string {",
          "10722:  return awsutil.Prettify(s)",
          "10723: }",
          "10726: func (s CreateTapePoolInput) GoString() string {",
          "10727:  return s.String()",
          "10728: }",
          "10731: func (s *CreateTapePoolInput) Validate() error {",
          "10732:  invalidParams := request.ErrInvalidParams{Context: \"CreateTapePoolInput\"}",
          "10733:  if s.PoolName == nil {",
          "10734:   invalidParams.Add(request.NewErrParamRequired(\"PoolName\"))",
          "10735:  }",
          "10736:  if s.PoolName != nil && len(*s.PoolName) < 1 {",
          "10737:   invalidParams.Add(request.NewErrParamMinLen(\"PoolName\", 1))",
          "10738:  }",
          "10739:  if s.StorageClass == nil {",
          "10740:   invalidParams.Add(request.NewErrParamRequired(\"StorageClass\"))",
          "10741:  }",
          "10742:  if s.Tags != nil {",
          "10743:   for i, v := range s.Tags {",
          "10744:    if v == nil {",
          "10745:     continue",
          "10746:    }",
          "10747:    if err := v.Validate(); err != nil {",
          "10748:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Tags\", i), err.(request.ErrInvalidParams))",
          "10749:    }",
          "10750:   }",
          "10751:  }",
          "10753:  if invalidParams.Len() > 0 {",
          "10754:   return invalidParams",
          "10755:  }",
          "10756:  return nil",
          "10757: }",
          "10760: func (s *CreateTapePoolInput) SetPoolName(v string) *CreateTapePoolInput {",
          "10761:  s.PoolName = &v",
          "10762:  return s",
          "10763: }",
          "10766: func (s *CreateTapePoolInput) SetRetentionLockTimeInDays(v int64) *CreateTapePoolInput {",
          "10767:  s.RetentionLockTimeInDays = &v",
          "10768:  return s",
          "10769: }",
          "10772: func (s *CreateTapePoolInput) SetRetentionLockType(v string) *CreateTapePoolInput {",
          "10773:  s.RetentionLockType = &v",
          "10774:  return s",
          "10775: }",
          "10778: func (s *CreateTapePoolInput) SetStorageClass(v string) *CreateTapePoolInput {",
          "10779:  s.StorageClass = &v",
          "10780:  return s",
          "10781: }",
          "10784: func (s *CreateTapePoolInput) SetTags(v []*Tag) *CreateTapePoolInput {",
          "10785:  s.Tags = v",
          "10786:  return s",
          "10787: }",
          "10789: type CreateTapePoolOutput struct {",
          "10790:  _ struct{} `type:\"structure\"`",
          "10795:  PoolARN *string `min:\"50\" type:\"string\"`",
          "10796: }",
          "10799: func (s CreateTapePoolOutput) String() string {",
          "10800:  return awsutil.Prettify(s)",
          "10801: }",
          "10804: func (s CreateTapePoolOutput) GoString() string {",
          "10805:  return s.String()",
          "10806: }",
          "10809: func (s *CreateTapePoolOutput) SetPoolARN(v string) *CreateTapePoolOutput {",
          "10810:  s.PoolARN = &v",
          "10811:  return s",
          "10812: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "10446:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10447: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10871:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "10539:  return s",
          "10540: }",
          "10543: type CreateTapeWithBarcodeOutput struct {",
          "10544:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10968: func (s *CreateTapeWithBarcodeInput) SetWorm(v bool) *CreateTapeWithBarcodeInput {",
          "10969:  s.Worm = &v",
          "10970:  return s",
          "10971: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10634:  TapeSizeInBytes *int64 `type:\"long\" required:\"true\"`",
          "10635: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11069:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10751:  return s",
          "10752: }",
          "10755: type CreateTapesOutput struct {",
          "10756:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11190: func (s *CreateTapesInput) SetWorm(v bool) *CreateTapesInput {",
          "11191:  s.Worm = &v",
          "11192:  return s",
          "11193: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11246: type DeleteTapeArchiveInput struct {",
          "11247:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11694:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11279:  return nil",
          "11280: }",
          "11283: func (s *DeleteTapeArchiveInput) SetTapeARN(v string) *DeleteTapeArchiveInput {",
          "11284:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11730: func (s *DeleteTapeArchiveInput) SetBypassGovernanceRetention(v bool) *DeleteTapeArchiveInput {",
          "11731:  s.BypassGovernanceRetention = &v",
          "11732:  return s",
          "11733: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "11314: type DeleteTapeInput struct {",
          "11315:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11774:  BypassGovernanceRetention *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11359:  return nil",
          "11360: }",
          "11363: func (s *DeleteTapeInput) SetGatewayARN(v string) *DeleteTapeInput {",
          "11364:  s.GatewayARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11822: func (s *DeleteTapeInput) SetBypassGovernanceRetention(v bool) *DeleteTapeInput {",
          "11823:  s.BypassGovernanceRetention = &v",
          "11824:  return s",
          "11825: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "11395:  return s",
          "11396: }",
          "11399: type DeleteVolumeInput struct {",
          "11400:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11863: type DeleteTapePoolInput struct {",
          "11864:  _ struct{} `type:\"structure\"`",
          "11869:  PoolARN *string `min:\"50\" type:\"string\" required:\"true\"`",
          "11870: }",
          "11873: func (s DeleteTapePoolInput) String() string {",
          "11874:  return awsutil.Prettify(s)",
          "11875: }",
          "11878: func (s DeleteTapePoolInput) GoString() string {",
          "11879:  return s.String()",
          "11880: }",
          "11883: func (s *DeleteTapePoolInput) Validate() error {",
          "11884:  invalidParams := request.ErrInvalidParams{Context: \"DeleteTapePoolInput\"}",
          "11885:  if s.PoolARN == nil {",
          "11886:   invalidParams.Add(request.NewErrParamRequired(\"PoolARN\"))",
          "11887:  }",
          "11888:  if s.PoolARN != nil && len(*s.PoolARN) < 50 {",
          "11889:   invalidParams.Add(request.NewErrParamMinLen(\"PoolARN\", 50))",
          "11890:  }",
          "11892:  if invalidParams.Len() > 0 {",
          "11893:   return invalidParams",
          "11894:  }",
          "11895:  return nil",
          "11896: }",
          "11899: func (s *DeleteTapePoolInput) SetPoolARN(v string) *DeleteTapePoolInput {",
          "11900:  s.PoolARN = &v",
          "11901:  return s",
          "11902: }",
          "11904: type DeleteTapePoolOutput struct {",
          "11905:  _ struct{} `type:\"structure\"`",
          "11908:  PoolARN *string `min:\"50\" type:\"string\"`",
          "11909: }",
          "11912: func (s DeleteTapePoolOutput) String() string {",
          "11913:  return awsutil.Prettify(s)",
          "11914: }",
          "11917: func (s DeleteTapePoolOutput) GoString() string {",
          "11918:  return s.String()",
          "11919: }",
          "11922: func (s *DeleteTapePoolOutput) SetPoolARN(v string) *DeleteTapePoolOutput {",
          "11923:  s.PoolARN = &v",
          "11924:  return s",
          "11925: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14675:  return s",
          "14676: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15207: type ListTapePoolsInput struct {",
          "15208:  _ struct{} `type:\"structure\"`",
          "15212:  Limit *int64 `min:\"1\" type:\"integer\"`",
          "15216:  Marker *string `min:\"1\" type:\"string\"`",
          "15221:  PoolARNs []*string `type:\"list\"`",
          "15222: }",
          "15225: func (s ListTapePoolsInput) String() string {",
          "15226:  return awsutil.Prettify(s)",
          "15227: }",
          "15230: func (s ListTapePoolsInput) GoString() string {",
          "15231:  return s.String()",
          "15232: }",
          "15235: func (s *ListTapePoolsInput) Validate() error {",
          "15236:  invalidParams := request.ErrInvalidParams{Context: \"ListTapePoolsInput\"}",
          "15237:  if s.Limit != nil && *s.Limit < 1 {",
          "15238:   invalidParams.Add(request.NewErrParamMinValue(\"Limit\", 1))",
          "15239:  }",
          "15240:  if s.Marker != nil && len(*s.Marker) < 1 {",
          "15241:   invalidParams.Add(request.NewErrParamMinLen(\"Marker\", 1))",
          "15242:  }",
          "15244:  if invalidParams.Len() > 0 {",
          "15245:   return invalidParams",
          "15246:  }",
          "15247:  return nil",
          "15248: }",
          "15251: func (s *ListTapePoolsInput) SetLimit(v int64) *ListTapePoolsInput {",
          "15252:  s.Limit = &v",
          "15253:  return s",
          "15254: }",
          "15257: func (s *ListTapePoolsInput) SetMarker(v string) *ListTapePoolsInput {",
          "15258:  s.Marker = &v",
          "15259:  return s",
          "15260: }",
          "15263: func (s *ListTapePoolsInput) SetPoolARNs(v []*string) *ListTapePoolsInput {",
          "15264:  s.PoolARNs = v",
          "15265:  return s",
          "15266: }",
          "15268: type ListTapePoolsOutput struct {",
          "15269:  _ struct{} `type:\"structure\"`",
          "15275:  Marker *string `min:\"1\" type:\"string\"`",
          "15279:  PoolInfos []*PoolInfo `type:\"list\"`",
          "15280: }",
          "15283: func (s ListTapePoolsOutput) String() string {",
          "15284:  return awsutil.Prettify(s)",
          "15285: }",
          "15288: func (s ListTapePoolsOutput) GoString() string {",
          "15289:  return s.String()",
          "15290: }",
          "15293: func (s *ListTapePoolsOutput) SetMarker(v string) *ListTapePoolsOutput {",
          "15294:  s.Marker = &v",
          "15295:  return s",
          "15296: }",
          "15299: func (s *ListTapePoolsOutput) SetPoolInfos(v []*PoolInfo) *ListTapePoolsOutput {",
          "15300:  s.PoolInfos = v",
          "15301:  return s",
          "15302: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "15487:  return s",
          "15488: }",
          "15491: type RefreshCacheInput struct {",
          "15492:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16117: type PoolInfo struct {",
          "16118:  _ struct{} `type:\"structure\"`",
          "16123:  PoolARN *string `min:\"50\" type:\"string\"`",
          "16127:  PoolName *string `min:\"1\" type:\"string\"`",
          "16130:  PoolStatus *string `type:\"string\" enum:\"PoolStatus\"`",
          "16134:  RetentionLockTimeInDays *int64 `type:\"integer\"`",
          "16141:  RetentionLockType *string `type:\"string\" enum:\"RetentionLockType\"`",
          "16147:  StorageClass *string `type:\"string\" enum:\"TapeStorageClass\"`",
          "16148: }",
          "16151: func (s PoolInfo) String() string {",
          "16152:  return awsutil.Prettify(s)",
          "16153: }",
          "16156: func (s PoolInfo) GoString() string {",
          "16157:  return s.String()",
          "16158: }",
          "16161: func (s *PoolInfo) SetPoolARN(v string) *PoolInfo {",
          "16162:  s.PoolARN = &v",
          "16163:  return s",
          "16164: }",
          "16167: func (s *PoolInfo) SetPoolName(v string) *PoolInfo {",
          "16168:  s.PoolName = &v",
          "16169:  return s",
          "16170: }",
          "16173: func (s *PoolInfo) SetPoolStatus(v string) *PoolInfo {",
          "16174:  s.PoolStatus = &v",
          "16175:  return s",
          "16176: }",
          "16179: func (s *PoolInfo) SetRetentionLockTimeInDays(v int64) *PoolInfo {",
          "16180:  s.RetentionLockTimeInDays = &v",
          "16181:  return s",
          "16182: }",
          "16185: func (s *PoolInfo) SetRetentionLockType(v string) *PoolInfo {",
          "16186:  s.RetentionLockType = &v",
          "16187:  return s",
          "16188: }",
          "16191: func (s *PoolInfo) SetStorageClass(v string) *PoolInfo {",
          "16192:  s.StorageClass = &v",
          "16193:  return s",
          "16194: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "16887:  KMSKey *string `min:\"7\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17596:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16902:  Progress *float64 `type:\"double\"`",
          "16905:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17614:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "16926:  VTLDevice *string `min:\"50\" type:\"string\"`",
          "16927: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17641:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "16942:  return s",
          "16943: }",
          "16946: func (s *Tape) SetPoolId(v string) *Tape {",
          "16947:  s.PoolId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17661: func (s *Tape) SetPoolEntryDate(v time.Time) *Tape {",
          "17662:  s.PoolEntryDate = &v",
          "17663:  return s",
          "17664: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "16954:  return s",
          "16955: }",
          "16958: func (s *Tape) SetTapeARN(v string) *Tape {",
          "16959:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17679: func (s *Tape) SetRetentionStartDate(v time.Time) *Tape {",
          "17680:  s.RetentionStartDate = &v",
          "17681:  return s",
          "17682: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16996:  return s",
          "16997: }",
          "17000: type TapeArchive struct {",
          "17001:  _ struct{} `type:\"structure\"`",
          "17007:  CompletionTime *time.Time `type:\"timestamp\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17727: func (s *Tape) SetWorm(v bool) *Tape {",
          "17728:  s.Worm = &v",
          "17729:  return s",
          "17730: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "17012:  KMSKey *string `min:\"7\" type:\"string\"`",
          "17018:  PoolId *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17751:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "17761:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "17044:  TapeUsedInBytes *int64 `type:\"long\"`",
          "17045: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17790:  Worm *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "17066:  return s",
          "17067: }",
          "17070: func (s *TapeArchive) SetPoolId(v string) *TapeArchive {",
          "17071:  s.PoolId = &v",
          "17072:  return s",
          "17073: }",
          "17076: func (s *TapeArchive) SetRetrievedTo(v string) *TapeArchive {",
          "17077:  s.RetrievedTo = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17816: func (s *TapeArchive) SetPoolEntryDate(v time.Time) *TapeArchive {",
          "17817:  s.PoolEntryDate = &v",
          "17818:  return s",
          "17819: }",
          "17828: func (s *TapeArchive) SetRetentionStartDate(v time.Time) *TapeArchive {",
          "17829:  s.RetentionStartDate = &v",
          "17830:  return s",
          "17831: }",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "17114:  return s",
          "17115: }",
          "17118: type TapeInfo struct {",
          "17119:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17876: func (s *TapeArchive) SetWorm(v bool) *TapeArchive {",
          "17877:  s.Worm = &v",
          "17878:  return s",
          "17879: }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "17123:  GatewayARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17891:  PoolEntryDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "17132:  PoolId *string `min:\"1\" type:\"string\"`",
          "17135:  TapeARN *string `min:\"50\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17903:  RetentionStartDate *time.Time `type:\"timestamp\"`",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "17160:  return s",
          "17161: }",
          "17164: func (s *TapeInfo) SetPoolId(v string) *TapeInfo {",
          "17165:  s.PoolId = &v",
          "17166:  return s",
          "17167: }",
          "17170: func (s *TapeInfo) SetTapeARN(v string) *TapeInfo {",
          "17171:  s.TapeARN = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17935: func (s *TapeInfo) SetPoolEntryDate(v time.Time) *TapeInfo {",
          "17936:  s.PoolEntryDate = &v",
          "17937:  return s",
          "17938: }",
          "17947: func (s *TapeInfo) SetRetentionStartDate(v time.Time) *TapeInfo {",
          "17948:  s.RetentionStartDate = &v",
          "17949:  return s",
          "17950: }",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "19388:  }",
          "19389: }",
          "19391: const (",
          "19393:  SMBSecurityStrategyClientSpecified = \"ClientSpecified\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20174: const (",
          "20176:  PoolStatusActive = \"ACTIVE\"",
          "20179:  PoolStatusDeleted = \"DELETED\"",
          "20180: )",
          "20183: func PoolStatus_Values() []string {",
          "20184:  return []string{",
          "20185:   PoolStatusActive,",
          "20186:   PoolStatusDeleted,",
          "20187:  }",
          "20188: }",
          "20190: const (",
          "20192:  RetentionLockTypeCompliance = \"COMPLIANCE\"",
          "20195:  RetentionLockTypeGovernance = \"GOVERNANCE\"",
          "20198:  RetentionLockTypeNone = \"NONE\"",
          "20199: )",
          "20202: func RetentionLockType_Values() []string {",
          "20203:  return []string{",
          "20204:   RetentionLockTypeCompliance,",
          "20205:   RetentionLockTypeGovernance,",
          "20206:   RetentionLockTypeNone,",
          "20207:  }",
          "20208: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "19407:   SMBSecurityStrategyMandatoryEncryption,",
          "19408:  }",
          "19409: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20230: const (",
          "20232:  TapeStorageClassDeepArchive = \"DEEP_ARCHIVE\"",
          "20235:  TapeStorageClassGlacier = \"GLACIER\"",
          "20236: )",
          "20239: func TapeStorageClass_Values() []string {",
          "20240:  return []string{",
          "20241:   TapeStorageClassDeepArchive,",
          "20242:   TapeStorageClassGlacier,",
          "20243:  }",
          "20244: }",
          "",
          "---------------"
        ],
        "service/storagegateway/doc.go||service/storagegateway/doc.go": [
          "File: service/storagegateway/doc.go -> service/storagegateway/doc.go"
        ],
        "service/storagegateway/storagegatewayiface/interface.go||service/storagegateway/storagegatewayiface/interface.go": [
          "File: service/storagegateway/storagegatewayiface/interface.go -> service/storagegateway/storagegatewayiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  CreateStorediSCSIVolumeWithContext(aws.Context, *storagegateway.CreateStorediSCSIVolumeInput, ...request.Option) (*storagegateway.CreateStorediSCSIVolumeOutput, error)",
          "121:  CreateStorediSCSIVolumeRequest(*storagegateway.CreateStorediSCSIVolumeInput) (*request.Request, *storagegateway.CreateStorediSCSIVolumeOutput)",
          "123:  CreateTapeWithBarcode(*storagegateway.CreateTapeWithBarcodeInput) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "124:  CreateTapeWithBarcodeWithContext(aws.Context, *storagegateway.CreateTapeWithBarcodeInput, ...request.Option) (*storagegateway.CreateTapeWithBarcodeOutput, error)",
          "125:  CreateTapeWithBarcodeRequest(*storagegateway.CreateTapeWithBarcodeInput) (*request.Request, *storagegateway.CreateTapeWithBarcodeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  CreateTapePool(*storagegateway.CreateTapePoolInput) (*storagegateway.CreateTapePoolOutput, error)",
          "124:  CreateTapePoolWithContext(aws.Context, *storagegateway.CreateTapePoolInput, ...request.Option) (*storagegateway.CreateTapePoolOutput, error)",
          "125:  CreateTapePoolRequest(*storagegateway.CreateTapePoolInput) (*request.Request, *storagegateway.CreateTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:  DeleteTapeArchiveWithContext(aws.Context, *storagegateway.DeleteTapeArchiveInput, ...request.Option) (*storagegateway.DeleteTapeArchiveOutput, error)",
          "161:  DeleteTapeArchiveRequest(*storagegateway.DeleteTapeArchiveInput) (*request.Request, *storagegateway.DeleteTapeArchiveOutput)",
          "163:  DeleteVolume(*storagegateway.DeleteVolumeInput) (*storagegateway.DeleteVolumeOutput, error)",
          "164:  DeleteVolumeWithContext(aws.Context, *storagegateway.DeleteVolumeInput, ...request.Option) (*storagegateway.DeleteVolumeOutput, error)",
          "165:  DeleteVolumeRequest(*storagegateway.DeleteVolumeInput) (*request.Request, *storagegateway.DeleteVolumeOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:  DeleteTapePool(*storagegateway.DeleteTapePoolInput) (*storagegateway.DeleteTapePoolOutput, error)",
          "168:  DeleteTapePoolWithContext(aws.Context, *storagegateway.DeleteTapePoolInput, ...request.Option) (*storagegateway.DeleteTapePoolOutput, error)",
          "169:  DeleteTapePoolRequest(*storagegateway.DeleteTapePoolInput) (*request.Request, *storagegateway.DeleteTapePoolOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:  ListTagsForResourcePages(*storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool) error",
          "290:  ListTagsForResourcePagesWithContext(aws.Context, *storagegateway.ListTagsForResourceInput, func(*storagegateway.ListTagsForResourceOutput, bool) bool, ...request.Option) error",
          "292:  ListTapes(*storagegateway.ListTapesInput) (*storagegateway.ListTapesOutput, error)",
          "293:  ListTapesWithContext(aws.Context, *storagegateway.ListTapesInput, ...request.Option) (*storagegateway.ListTapesOutput, error)",
          "294:  ListTapesRequest(*storagegateway.ListTapesInput) (*request.Request, *storagegateway.ListTapesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:  ListTapePools(*storagegateway.ListTapePoolsInput) (*storagegateway.ListTapePoolsOutput, error)",
          "301:  ListTapePoolsWithContext(aws.Context, *storagegateway.ListTapePoolsInput, ...request.Option) (*storagegateway.ListTapePoolsOutput, error)",
          "302:  ListTapePoolsRequest(*storagegateway.ListTapePoolsInput) (*request.Request, *storagegateway.ListTapePoolsOutput)",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "799:  EndTime *float64 `type:\"double\"`",
          "803:  StartTime *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "803:  Speaker *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "835:  return s",
          "836: }",
          "839: func (s *Item) SetStartTime(v float64) *Item {",
          "840:  s.StartTime = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "843: func (s *Item) SetSpeaker(v string) *Item {",
          "844:  s.Speaker = &v",
          "845:  return s",
          "846: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1119:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1132:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1195:  return s",
          "1196: }",
          "1199: func (s *StartStreamTranscriptionInput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionInput {",
          "1200:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1212: func (s *StartStreamTranscriptionInput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionInput {",
          "1213:  s.ShowSpeakerLabel = &v",
          "1214:  return s",
          "1215: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1235:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "1238:  VocabularyFilterMethod *string `location:\"header\" locationName:\"x-amzn-transcribe-vocabulary-filter-method\" type:\"string\" enum:\"VocabularyFilterMethod\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1257:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1284:  return s",
          "1285: }",
          "1288: func (s *StartStreamTranscriptionOutput) SetVocabularyFilterMethod(v string) *StartStreamTranscriptionOutput {",
          "1289:  s.VocabularyFilterMethod = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1310: func (s *StartStreamTranscriptionOutput) SetShowSpeakerLabel(v bool) *StartStreamTranscriptionOutput {",
          "1311:  s.ShowSpeakerLabel = &v",
          "1312:  return s",
          "1313: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:          {",
          "233:           Content:               aws.String(\"string value goes here\"),",
          "234:           EndTime:               aws.Float64(123.45),",
          "235:           StartTime:             aws.Float64(123.45),",
          "236:           Type:                  aws.String(\"string value goes here\"),",
          "237:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:          {",
          "240:           Content:               aws.String(\"string value goes here\"),",
          "241:           EndTime:               aws.Float64(123.45),",
          "242:           StartTime:             aws.Float64(123.45),",
          "243:           Type:                  aws.String(\"string value goes here\"),",
          "244:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "246:          {",
          "247:           Content:               aws.String(\"string value goes here\"),",
          "248:           EndTime:               aws.Float64(123.45),",
          "249:           StartTime:             aws.Float64(123.45),",
          "250:           Type:                  aws.String(\"string value goes here\"),",
          "251:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "251:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:          {",
          "259:           Content:               aws.String(\"string value goes here\"),",
          "260:           EndTime:               aws.Float64(123.45),",
          "261:           StartTime:             aws.Float64(123.45),",
          "262:           Type:                  aws.String(\"string value goes here\"),",
          "263:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:          {",
          "266:           Content:               aws.String(\"string value goes here\"),",
          "267:           EndTime:               aws.Float64(123.45),",
          "268:           StartTime:             aws.Float64(123.45),",
          "269:           Type:                  aws.String(\"string value goes here\"),",
          "270:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "272:          {",
          "273:           Content:               aws.String(\"string value goes here\"),",
          "274:           EndTime:               aws.Float64(123.45),",
          "275:           StartTime:             aws.Float64(123.45),",
          "276:           Type:                  aws.String(\"string value goes here\"),",
          "277:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "284:          {",
          "285:           Content:               aws.String(\"string value goes here\"),",
          "286:           EndTime:               aws.Float64(123.45),",
          "287:           StartTime:             aws.Float64(123.45),",
          "288:           Type:                  aws.String(\"string value goes here\"),",
          "289:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "291:          {",
          "292:           Content:               aws.String(\"string value goes here\"),",
          "293:           EndTime:               aws.Float64(123.45),",
          "294:           StartTime:             aws.Float64(123.45),",
          "295:           Type:                  aws.String(\"string value goes here\"),",
          "296:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "301:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "298:          {",
          "299:           Content:               aws.String(\"string value goes here\"),",
          "300:           EndTime:               aws.Float64(123.45),",
          "301:           StartTime:             aws.Float64(123.45),",
          "302:           Type:                  aws.String(\"string value goes here\"),",
          "303:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "318:          {",
          "319:           Content:               aws.String(\"string value goes here\"),",
          "320:           EndTime:               aws.Float64(123.45),",
          "321:           StartTime:             aws.Float64(123.45),",
          "322:           Type:                  aws.String(\"string value goes here\"),",
          "323:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "325:          {",
          "326:           Content:               aws.String(\"string value goes here\"),",
          "327:           EndTime:               aws.Float64(123.45),",
          "328:           StartTime:             aws.Float64(123.45),",
          "329:           Type:                  aws.String(\"string value goes here\"),",
          "330:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "332:          {",
          "333:           Content:               aws.String(\"string value goes here\"),",
          "334:           EndTime:               aws.Float64(123.45),",
          "335:           StartTime:             aws.Float64(123.45),",
          "336:           Type:                  aws.String(\"string value goes here\"),",
          "337:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "344:          {",
          "345:           Content:               aws.String(\"string value goes here\"),",
          "346:           EndTime:               aws.Float64(123.45),",
          "347:           StartTime:             aws.Float64(123.45),",
          "348:           Type:                  aws.String(\"string value goes here\"),",
          "349:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "359:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "351:          {",
          "352:           Content:               aws.String(\"string value goes here\"),",
          "353:           EndTime:               aws.Float64(123.45),",
          "354:           StartTime:             aws.Float64(123.45),",
          "355:           Type:                  aws.String(\"string value goes here\"),",
          "356:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "358:          {",
          "359:           Content:               aws.String(\"string value goes here\"),",
          "360:           EndTime:               aws.Float64(123.45),",
          "361:           StartTime:             aws.Float64(123.45),",
          "362:           Type:                  aws.String(\"string value goes here\"),",
          "363:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "370:          {",
          "371:           Content:               aws.String(\"string value goes here\"),",
          "372:           EndTime:               aws.Float64(123.45),",
          "373:           StartTime:             aws.Float64(123.45),",
          "374:           Type:                  aws.String(\"string value goes here\"),",
          "375:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "377:          {",
          "378:           Content:               aws.String(\"string value goes here\"),",
          "379:           EndTime:               aws.Float64(123.45),",
          "380:           StartTime:             aws.Float64(123.45),",
          "381:           Type:                  aws.String(\"string value goes here\"),",
          "382:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "384:          {",
          "385:           Content:               aws.String(\"string value goes here\"),",
          "386:           EndTime:               aws.Float64(123.45),",
          "387:           StartTime:             aws.Float64(123.45),",
          "388:           Type:                  aws.String(\"string value goes here\"),",
          "389:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "404:          {",
          "405:           Content:               aws.String(\"string value goes here\"),",
          "406:           EndTime:               aws.Float64(123.45),",
          "407:           StartTime:             aws.Float64(123.45),",
          "408:           Type:                  aws.String(\"string value goes here\"),",
          "409:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "411:          {",
          "412:           Content:               aws.String(\"string value goes here\"),",
          "413:           EndTime:               aws.Float64(123.45),",
          "414:           StartTime:             aws.Float64(123.45),",
          "415:           Type:                  aws.String(\"string value goes here\"),",
          "416:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "433:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "418:          {",
          "419:           Content:               aws.String(\"string value goes here\"),",
          "420:           EndTime:               aws.Float64(123.45),",
          "421:           StartTime:             aws.Float64(123.45),",
          "422:           Type:                  aws.String(\"string value goes here\"),",
          "423:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "441:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "430:          {",
          "431:           Content:               aws.String(\"string value goes here\"),",
          "432:           EndTime:               aws.Float64(123.45),",
          "433:           StartTime:             aws.Float64(123.45),",
          "434:           Type:                  aws.String(\"string value goes here\"),",
          "435:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "437:          {",
          "438:           Content:               aws.String(\"string value goes here\"),",
          "439:           EndTime:               aws.Float64(123.45),",
          "440:           StartTime:             aws.Float64(123.45),",
          "441:           Type:                  aws.String(\"string value goes here\"),",
          "442:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "462:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "444:          {",
          "445:           Content:               aws.String(\"string value goes here\"),",
          "446:           EndTime:               aws.Float64(123.45),",
          "447:           StartTime:             aws.Float64(123.45),",
          "448:           Type:                  aws.String(\"string value goes here\"),",
          "449:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "456:          {",
          "457:           Content:               aws.String(\"string value goes here\"),",
          "458:           EndTime:               aws.Float64(123.45),",
          "459:           StartTime:             aws.Float64(123.45),",
          "460:           Type:                  aws.String(\"string value goes here\"),",
          "461:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "463:          {",
          "464:           Content:               aws.String(\"string value goes here\"),",
          "465:           EndTime:               aws.Float64(123.45),",
          "466:           StartTime:             aws.Float64(123.45),",
          "467:           Type:                  aws.String(\"string value goes here\"),",
          "468:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "470:          {",
          "471:           Content:               aws.String(\"string value goes here\"),",
          "472:           EndTime:               aws.Float64(123.45),",
          "473:           StartTime:             aws.Float64(123.45),",
          "474:           Type:                  aws.String(\"string value goes here\"),",
          "475:           VocabularyFilterMatch: aws.Bool(true),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "499:           Speaker:               aws.String(\"string value goes here\"),",
          "",
          "---------------"
        ]
      }
    }
  ]
}