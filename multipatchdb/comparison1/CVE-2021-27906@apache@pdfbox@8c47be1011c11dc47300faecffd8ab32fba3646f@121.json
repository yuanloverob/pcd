{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "119d24e2f56431e03ddbb211d867ac41da66b755",
      "candidate_info": {
        "commit_hash": "119d24e2f56431e03ddbb211d867ac41da66b755",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/119d24e2f56431e03ddbb211d867ac41da66b755",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java"
        ],
        "message": "PDFBOX-4892: adjust type + remove unneeded code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887095 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:     public COSBase getObject( int index )",
          "187:     {",
          "189:         if( obj instanceof COSObject )",
          "190:         {",
          "191:             obj = ((COSObject)obj).getObject();",
          "",
          "[Removed Lines]",
          "188:         Object obj = objects.get( index );",
          "",
          "[Added Lines]",
          "188:         COSBase obj = objects.get( index );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:         {",
          "195:             obj = null;",
          "196:         }",
          "198:     }",
          "",
          "[Removed Lines]",
          "197:         return (COSBase)obj;",
          "",
          "[Added Lines]",
          "197:         return obj;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "456:     public int indexOfObject(COSBase object)",
          "457:     {",
          "458:         int retval = -1;",
          "460:         {",
          "461:             COSBase item = this.get(i);",
          "462:             if (item.equals(object) ||",
          "",
          "[Removed Lines]",
          "459:         for (int i = 0; retval < 0 && i < this.size(); i++)",
          "",
          "[Added Lines]",
          "459:         for (int i = 0; i < this.size(); i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ac935b615b0abb1376655360ce227a9db644acf",
      "candidate_info": {
        "commit_hash": "2ac935b615b0abb1376655360ce227a9db644acf",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/2ac935b615b0abb1376655360ce227a9db644acf",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ],
        "message": "PDFBOX-5203: disable part of the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890393 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "862:             {",
          "863:                 continue; // not relevant here",
          "864:             }",
          "869:         }",
          "",
          "[Removed Lines]",
          "865:             Assert.assertTrue(\"File '\" + outFile + \"' Root/DSS/VRI/\" + hexSignatureHash +",
          "866:                     \"/Cert array doesn't contain a certificate with subject '\" +",
          "867:                     holder.getSubject() + \"' and serial \" + holder.getSerialNumber(),",
          "868:                     sigCertHolderSetFromVRIArray.contains(holder));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "894:                 }",
          "895:             }",
          "898:         }",
          "",
          "[Removed Lines]",
          "896:             Assert.assertTrue(\"Certificate \" + cert.getSubjectX500Principal() +",
          "897:                     \" not issued by any certificate in the Certs array\", verified);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "713525f7e39286caef64ebae35c59b019a9adcc0",
      "candidate_info": {
        "commit_hash": "713525f7e39286caef64ebae35c59b019a9adcc0",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/713525f7e39286caef64ebae35c59b019a9adcc0",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java"
        ],
        "message": "PDFBOX-4892: avoid NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884683 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:         if (!(base instanceof COSDictionary))",
          "127:         {",
          "128:             throw new IOException(\"Error: Function must be a Dictionary, but is \" +",
          "130:         }",
          "131:         COSDictionary functionDictionary = (COSDictionary) base;",
          "132:         int functionType = functionDictionary.getInt(COSName.FUNCTION_TYPE);",
          "",
          "[Removed Lines]",
          "129:                     base.getClass().getSimpleName());",
          "",
          "[Added Lines]",
          "129:                     (base == null ? \"(null)\" : base.getClass().getSimpleName()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31594427ef59c63ba47f9f98f9f7e3206066ada3",
      "candidate_info": {
        "commit_hash": "31594427ef59c63ba47f9f98f9f7e3206066ada3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/31594427ef59c63ba47f9f98f9f7e3206066ada3",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892505 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/PostScriptTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:             if (maxIndex >= WGL4Names.NUMBER_OF_MAC_GLYPHS)",
          "99:             {",
          "100:                 nameArray = new String[maxIndex - WGL4Names.NUMBER_OF_MAC_GLYPHS + 1];",
          "102:                 {",
          "103:                     int numberOfChars = data.readUnsignedByte();",
          "104:                     try",
          "",
          "[Removed Lines]",
          "101:                 for (int i = 0; i < maxIndex - WGL4Names.NUMBER_OF_MAC_GLYPHS + 1; i++)",
          "",
          "[Added Lines]",
          "101:                 for (int i = 0; i < nameArray.length; i++)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "086d54f9129c2a2e3cf4a7cde035060f63aa98db",
      "candidate_info": {
        "commit_hash": "086d54f9129c2a2e3cf4a7cde035060f63aa98db",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/086d54f9129c2a2e3cf4a7cde035060f63aa98db",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java"
        ],
        "message": "PDFBOX-5078: add simple example\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885551 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java||examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java||examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java -> examples/src/main/java/org/apache/pdfbox/examples/util/SplitBooklet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: import java.io.File;",
          "19: import java.io.IOException;",
          "20: import org.apache.pdfbox.pdmodel.PDDocument;",
          "21: import org.apache.pdfbox.pdmodel.PDPage;",
          "22: import org.apache.pdfbox.pdmodel.common.PDRectangle;",
          "31: public class SplitBooklet",
          "32: {",
          "36:     private SplitBooklet()",
          "37:     {",
          "39:     }",
          "41:     public static void main(String[] args) throws IOException",
          "42:     {",
          "43:         if (args.length < 2)",
          "44:         {",
          "45:             usage();",
          "46:             System.exit(-1);",
          "47:         }",
          "48:         PDDocument document = PDDocument.load(new File(args[0]));",
          "49:         PDDocument outdoc = new PDDocument();",
          "50:         for (PDPage page : document.getPages())",
          "51:         {",
          "52:             PDRectangle cropBoxORIG = page.getCropBox();",
          "55:             PDRectangle cropBoxLEFT = new PDRectangle(cropBoxORIG.getCOSArray());",
          "56:             PDRectangle cropBoxRIGHT = new PDRectangle(cropBoxORIG.getCOSArray());",
          "58:             if (page.getRotation() == 90 || page.getRotation() == 270)",
          "59:             {",
          "60:                 cropBoxLEFT.setUpperRightY(cropBoxORIG.getLowerLeftY() + cropBoxORIG.getHeight() / 2);",
          "61:                 cropBoxRIGHT.setLowerLeftY(cropBoxORIG.getLowerLeftY() + cropBoxORIG.getHeight() / 2);",
          "62:             }",
          "63:             else",
          "64:             {",
          "65:                 cropBoxLEFT.setUpperRightX(cropBoxORIG.getLowerLeftX() + cropBoxORIG.getWidth() / 2);",
          "66:                 cropBoxRIGHT.setLowerLeftX(cropBoxORIG.getLowerLeftX() + cropBoxORIG.getWidth() / 2);",
          "67:             }",
          "69:             if (page.getRotation() == 180 || page.getRotation() == 270)",
          "70:             {",
          "71:                 PDPage pageRIGHT = outdoc.importPage(page);",
          "72:                 pageRIGHT.setCropBox(cropBoxRIGHT);",
          "73:                 PDPage pageLEFT = outdoc.importPage(page);",
          "74:                 pageLEFT.setCropBox(cropBoxLEFT);",
          "75:             }",
          "76:             else",
          "77:             {",
          "78:                 PDPage pageLEFT = outdoc.importPage(page);",
          "79:                 pageLEFT.setCropBox(cropBoxLEFT);",
          "80:                 PDPage pageRIGHT = outdoc.importPage(page);",
          "81:                 pageRIGHT.setCropBox(cropBoxRIGHT);",
          "82:             }",
          "83:         }",
          "85:         outdoc.save(args[1]);",
          "86:         outdoc.close();",
          "87:         document.close(); // must be after saving the destination document",
          "88:     }",
          "90:     private static void usage()",
          "91:     {",
          "92:         System.err.println(\"Usage: java \" + SplitBooklet.class.getName() + \" <input-pdf> <output-pdf>\");",
          "93:     }",
          "95: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}