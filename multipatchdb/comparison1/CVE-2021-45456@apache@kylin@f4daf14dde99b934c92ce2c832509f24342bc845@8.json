{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "44402d3c39cecff9a71dea2edc85bae72b8ab224",
      "candidate_info": {
        "commit_hash": "44402d3c39cecff9a71dea2edc85bae72b8ab224",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/44402d3c39cecff9a71dea2edc85bae72b8ab224",
        "files": [
          "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
        ],
        "message": "KYLIN-4853 QueryPreparedStatementCache invalid in Spark Query Engine. (#1532)",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java||server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java||server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java -> server-base/src/main/java/org/apache/kylin/rest/service/QueryService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "703:                 if (getConfig().isQueryPreparedStatementCacheEnable() && prepareSqlRequest.isEnableStatementCache()) {",
          "704:                     try {",
          "705:                         preparedContext = preparedContextPool.borrowObject(preparedContextKey);",
          "706:                         borrowPrepareContext = true;",
          "707:                     } catch (NoSuchElementException noElementException) {",
          "708:                         borrowPrepareContext = false;",
          "709:                         preparedContext = createPreparedContext(sqlRequest.getProject(), sqlRequest.getSql());",
          "710:                     }",
          "711:                     for (OLAPContext olapContext : preparedContext.olapContexts) {",
          "712:                         resetRealizationInContext(olapContext);",
          "713:                         OLAPContext.registerContext(olapContext);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "708:                         if (preparedContext.olapRel == null) {",
          "709:                             preparedContext.olapRel = QueryContextFacade.current().getOlapRel();",
          "710:                             preparedContext.resultType = (QueryContextFacade.current().getResultType());",
          "711:                         } else {",
          "713:                             QueryContextFacade.current().setOlapRel(preparedContext.olapRel);",
          "714:                             QueryContextFacade.current().setResultType(preparedContext.resultType);",
          "715:                         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1404:         private Connection conn;",
          "1405:         private PreparedStatement preparedStatement;",
          "1406:         private Collection<OLAPContext> olapContexts;",
          "1408:         public PreparedContext(Connection conn, PreparedStatement preparedStatement,",
          "1409:                 Collection<OLAPContext> olapContexts) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1419:         private Object olapRel;",
          "1420:         private Object resultType;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e7a4ea307764ca08ac2d2840c7147ab1c9290cc",
      "candidate_info": {
        "commit_hash": "2e7a4ea307764ca08ac2d2840c7147ab1c9290cc",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/2e7a4ea307764ca08ac2d2840c7147ab1c9290cc",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala"
        ],
        "message": "KYLIN-5027 Add the config of whether to build base cuboid in kylin4",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala||kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ],
          "candidate": [
            "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java"
          ]
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3196:     public double skewPercentageThreshHold() {",
          "3197:         return Double.valueOf(getOptional(\"kylin.dictionary.data.skew.percentage.threshhold\", \"0.05\"));",
          "3198:     }",
          "3199: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3200:     public boolean isBuildBaseCuboid() {",
          "3201:         return Boolean.valueOf(getOptional(\"kylin.engine.cuboid.build.base\", \"true\"));",
          "3202:     }",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala||kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala": [
          "File: kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala -> kylin-spark-project/kylin-spark-metadata/src/main/scala/org/apache/kylin/engine/spark/metadata/MetadataConverter.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     val (columnIndexes, shardByColumnsId, idToColumnMap, measureId) = genIDToColumnMap(cubeInstance)",
          "134:     (cubeInstance.getCuboidsByMode(cuboidMode)",
          "135:       .asScala",
          "136:       .map { long =>",
          "137:         genLayoutEntity(columnIndexes, shardByColumnsId, idToColumnMap, measureId, long)",
          "138:       }.toList, measureId.asScala.toMap)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:       .filter(id => cubeInstance.getConfig.isBuildBaseCuboid || !id.equals(cubeInstance.getCuboidScheduler.getBaseCuboidId))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "41ebf457858a76e4ab005b2f37f9b8fdb1d303ae",
      "candidate_info": {
        "commit_hash": "41ebf457858a76e4ab005b2f37f9b8fdb1d303ae",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/41ebf457858a76e4ab005b2f37f9b8fdb1d303ae",
        "files": [
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala"
        ],
        "message": "KYLIN-4910 Return hostname as Sparder URL address when spark master is set to local",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala||kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala": [
          "File: kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala -> kylin-spark-project/kylin-spark-query/src/main/scala/org/apache/spark/sql/SparderContext.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: import org.apache.commons.io.FileUtils",
          "35: import org.apache.kylin.common.KylinConfig",
          "36: import org.apache.kylin.query.monitor.SparderContextCanary",
          "37: import org.apache.kylin.spark.classloader.ClassLoaderUtils",
          "38: import org.apache.spark.{SparkConf, SparkContext, SparkEnv}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import org.apache.kylin.common.util.ToolUtil",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:               initMonitorEnv()",
          "175:               master match {",
          "176:                 case mode: String if mode.startsWith(\"local\") =>",
          "178:                     .get(\"spark.ui.port\", \"4040\")",
          "179:                 case _ =>",
          "180:                   master_app_url = YarnInfoFetcherUtils.getTrackingUrl(appid)",
          "",
          "[Removed Lines]",
          "177:                   master_app_url = \"http://localhost:\" + sparkSession.sparkContext.getConf",
          "",
          "[Added Lines]",
          "178:                   var hostName = ToolUtil.getHostName",
          "179:                   if (hostName.equals(\"Unknown\")) {",
          "180:                     hostName = \"localhost\"",
          "181:                   }",
          "182:                   master_app_url = \"http://\" + hostName + \":\" + sparkSession.sparkContext.getConf",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf782f6f2c311d5e6acbb5dc86dcbff8acfcbe94",
      "candidate_info": {
        "commit_hash": "cf782f6f2c311d5e6acbb5dc86dcbff8acfcbe94",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/cf782f6f2c311d5e6acbb5dc86dcbff8acfcbe94",
        "files": [
          "query/src/main/java/org/apache/kylin/query/util/QueryUtil.java"
        ],
        "message": "KYLIN-4685 return user friendly msg when stackoverflowerror\n\n(cherry picked from commit 5b2f32fb3cedaa2a72c517953ecb7cadc0614fa8)",
        "before_after_code_files": [
          "query/src/main/java/org/apache/kylin/query/util/QueryUtil.java||query/src/main/java/org/apache/kylin/query/util/QueryUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "query/src/main/java/org/apache/kylin/query/util/QueryUtil.java||query/src/main/java/org/apache/kylin/query/util/QueryUtil.java": [
          "File: query/src/main/java/org/apache/kylin/query/util/QueryUtil.java -> query/src/main/java/org/apache/kylin/query/util/QueryUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "177:                 msg = \"NumberFormatException: \" + cause.getMessage();",
          "178:                 break;",
          "179:             }",
          "180:             cause = cause.getCause();",
          "181:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:             if (cause.getClass().equals(StackOverflowError.class)) {",
          "183:                 msg = \"StackOverflowError maybe caused by that filters have too many elements\";",
          "184:                 break;",
          "185:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4846b3849db5fcc121a79625ae2b3a159fb3e1b6",
      "candidate_info": {
        "commit_hash": "4846b3849db5fcc121a79625ae2b3a159fb3e1b6",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/4846b3849db5fcc121a79625ae2b3a159fb3e1b6",
        "files": [
          "core-common/src/main/java/org/apache/kylin/common/util/Array.java"
        ],
        "message": "minor, if o == null, o instanceof Array will return false\n\n(cherry picked from commit 346b53c705ef48394a53faed1ff1efced7c808e8)",
        "before_after_code_files": [
          "core-common/src/main/java/org/apache/kylin/common/util/Array.java||core-common/src/main/java/org/apache/kylin/common/util/Array.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/1893",
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1865",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core-common/src/main/java/org/apache/kylin/common/util/Array.java||core-common/src/main/java/org/apache/kylin/common/util/Array.java": [
          "File: core-common/src/main/java/org/apache/kylin/common/util/Array.java -> core-common/src/main/java/org/apache/kylin/common/util/Array.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     @Override",
          "38:     public boolean equals(Object o) {",
          "40:             return Arrays.equals(this.data, ((Array<?>) o).data);",
          "41:         }",
          "42:         return false;",
          "",
          "[Removed Lines]",
          "39:         if (o != null && o instanceof Array) {",
          "",
          "[Added Lines]",
          "39:         if (o instanceof Array) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}