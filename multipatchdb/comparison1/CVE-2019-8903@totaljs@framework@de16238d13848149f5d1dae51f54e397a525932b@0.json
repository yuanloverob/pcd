{
  "cve_id": "CVE-2019-8903",
  "cve_desc": "index.js in Total.js Platform before 3.2.3 allows path traversal.",
  "repo": "totaljs/framework",
  "patch_hash": "de16238d13848149f5d1dae51f54e397a525932b",
  "patch_info": {
    "commit_hash": "de16238d13848149f5d1dae51f54e397a525932b",
    "repo": "totaljs/framework",
    "commit_url": "https://github.com/totaljs/framework/commit/de16238d13848149f5d1dae51f54e397a525932b",
    "files": [
      "index.js",
      "package.json"
    ],
    "message": "Fixed again a critical bug with path travel...",
    "before_after_code_files": [
      "index.js||index.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "7393:   }",
      "7395:   F.stats.request.file++;",
      "",
      "[Removed Lines]",
      "7390:   if (req.uri.pathname.indexOf('./') !== -1) {",
      "7391:    req.$total_status(404);",
      "7392:    return;",
      "",
      "[Added Lines]",
      "7390:   for (var i = 0; i < req.uri.pathname.length; i++) {",
      "7391:    var c = req.uri.pathname[i];",
      "7392:    var n = req.uri.pathname[i + 1];",
      "7393:    if ((c === '.' && n === '/') || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
      "7394:     req.$total_status(404);",
      "7395:     return;",
      "7396:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fa6a0d7e3c256ae9b892a30273c5fe77fc99ffb5",
      "candidate_info": {
        "commit_hash": "fa6a0d7e3c256ae9b892a30273c5fe77fc99ffb5",
        "repo": "totaljs/framework",
        "commit_url": "https://github.com/totaljs/framework/commit/fa6a0d7e3c256ae9b892a30273c5fe77fc99ffb5",
        "files": [
          "changes.txt",
          "index.js"
        ],
        "message": "Fixed path traversal vulnerability.",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8087:  response.pipe(this.$res, PROXYOPTIONS);",
          "8088: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8091: const TRAVELCHARS = { e: 1, E: 1 };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8111:   if (!tmp) {",
          "8115:     var c = req.uri.pathname[i];",
          "8116:     var n = req.uri.pathname[i + 1];",
          "8118:      F.temporary.shortcache[req.uri.pathname] = 2;",
          "8119:      req.$total_status(404);",
          "8120:      return;",
          "",
          "[Removed Lines]",
          "8114:    for (var i = 0; i < req.uri.pathname.length; i++) {",
          "8117:     if ((c === '.' && (n === '/' || n === '%')) || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
          "",
          "[Added Lines]",
          "8117:    for (var i = 0; i < req.uri.pathname.length - 1; i++) {",
          "8120:     if ((c === '.' && (n === '/' || n === '%')) || (c === '%' && n === '2' && TRAVELCHARS[req.uri.pathname[i + 2]])) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75f43deecb5d02063e0031021e77d2b5400525f6",
      "candidate_info": {
        "commit_hash": "75f43deecb5d02063e0031021e77d2b5400525f6",
        "repo": "totaljs/framework",
        "commit_url": "https://github.com/totaljs/framework/commit/75f43deecb5d02063e0031021e77d2b5400525f6",
        "files": [
          "index.js"
        ],
        "message": "Improved performance.",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6098:  if (F.routes.merge[uri.pathname]) {",
          "6099:   compile_merge(res);",
          "6101:  }",
          "6103:  fsFileExists(res.options.filename, function(e, size, sfile, stats) {",
          "",
          "[Removed Lines]",
          "6100:   return F;",
          "",
          "[Added Lines]",
          "6100:   return;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7326:  var headers = req.headers;",
          "7327:  req.$protocol = ((req.connection && req.connection.encrypted) || ((headers['x-forwarded-proto'] || ['x-forwarded-protocol']) === 'https')) ? 'https' : 'http';",
          "7342:  req.uri = framework_internal.parseURI(req);",
          "7344:  F.stats.request.request++;",
          "7345:  F.$events.request && EMIT('request', req, res);",
          "",
          "[Removed Lines]",
          "7329:  var beg = 0;",
          "7332:  for (var i = 0; i < req.url.length; i++) {",
          "7333:   if (req.url[i] === '.' && req.url[i + 1] === '/')",
          "7334:    beg = i + 1;",
          "7335:   else if (req.url[i] === '?')",
          "7336:    break;",
          "7337:  }",
          "7339:  if (beg)",
          "7340:   req.url = req.url.substring(beg);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7400:  if (req.isStaticFile) {",
          "7401:   F.stats.request.file++;",
          "7402:   if (F._length_files)",
          "7403:    req.$total_file();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7390:   if (req.uri.pathname.indexOf('./') !== -1) {",
          "7391:    req.$total_status(404);",
          "7392:    return;",
          "7393:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f32863e32b135c4c9dfc8beca6ccc7944f81b1fb",
      "candidate_info": {
        "commit_hash": "f32863e32b135c4c9dfc8beca6ccc7944f81b1fb",
        "repo": "totaljs/framework",
        "commit_url": "https://github.com/totaljs/framework/commit/f32863e32b135c4c9dfc8beca6ccc7944f81b1fb",
        "files": [
          "index.js"
        ],
        "message": "Added `check` for `\\0` chars in the request data.",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1137:  self.temporary = {",
          "1138:   path: {},",
          "1139:   notfound: {},",
          "1140:   processing: {},",
          "1141:   range: {},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1139:   shortcache: {},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5956: F.$onParseQueryUrl = function(req) {",
          "5957:  if (F.onParseQuery.$def) {",
          "5960:  } else",
          "5961:   req._querydata = F.onParseQuery(req.uri.query, req);",
          "5962: };",
          "",
          "[Removed Lines]",
          "5958:   req._querydata = Qs.parse(req.uri.query, null, null, QUERYPARSEROPTIONS);",
          "5959:   F._length_convertors && F.convert(req._querydata);",
          "",
          "[Added Lines]",
          "5959:   if (req.uri.query) {",
          "5960:    req._querydata = Qs.parse(req.uri.query, null, null, QUERYPARSEROPTIONS);",
          "5961:    F._length_convertors && F.convert(req._querydata);",
          "5962:   } else",
          "5963:    req._querydata = {};",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7675:  F.stats.performance.request = F.stats.request.request ? F.stats.request.request / F.temporary.service.request : 0;",
          "7676:  F.stats.performance.file = F.stats.request.file ? F.stats.request.file / F.temporary.service.file : 0;",
          "7679:  F.temporary.notfound = {};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7683:  F.temporary.shortcache = {};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7998:  if (!req || !res || res.headersSent || res.success)",
          "7999:   return;",
          "8002:  if (req.isStaticFile) {",
          "8012:    }",
          "8013:   }",
          "8015:   F.stats.request.file++;",
          "",
          "[Removed Lines]",
          "8006:   for (var i = 0; i < req.uri.pathname.length; i++) {",
          "8007:    var c = req.uri.pathname[i];",
          "8008:    var n = req.uri.pathname[i + 1];",
          "8009:    if ((c === '.' && (n === '/' || n === '%')) || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
          "8010:     req.$total_status(404);",
          "8011:     return;",
          "",
          "[Added Lines]",
          "8009:  var tmp;",
          "8014:   tmp = F.temporary.shortcache[req.uri.pathname];",
          "8016:   if (!tmp) {",
          "8019:    for (var i = 0; i < req.uri.pathname.length; i++) {",
          "8020:     var c = req.uri.pathname[i];",
          "8021:     var n = req.uri.pathname[i + 1];",
          "8022:     if ((c === '.' && (n === '/' || n === '%')) || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
          "8023:      F.temporary.shortcache[req.uri.pathname] = 2;",
          "8024:      req.$total_status(404);",
          "8025:      return;",
          "8026:     }",
          "8028:    F.temporary.shortcache[req.uri.pathname] = 1;",
          "8029:   } else if (tmp === 2) {",
          "8030:    req.$total_status(404);",
          "8031:    return;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8026:   return;",
          "8027:  }",
          "8031:  req.body = EMPTYOBJECT;",
          "8032:  req.files = EMPTYARRAY;",
          "8033:  req.buffer_exceeded = false;",
          "",
          "[Removed Lines]",
          "8029:  F.stats.request.web++;",
          "",
          "[Added Lines]",
          "8048:  if (req.uri.search) {",
          "8049:   tmp = F.temporary.shortcache[req.uri.search];",
          "8051:   if (!tmp) {",
          "8052:    tmp = 1;",
          "8053:    for (var i = 1; i < req.uri.search.length - 2; i++) {",
          "8054:     if (req.uri.search[i] === '%' && req.uri.search[i + 1] === '0' && req.uri.search[i + 2] === '0') {",
          "8055:      tmp = 2;",
          "8056:      break;",
          "8057:     }",
          "8058:    }",
          "8059:    F.temporary.shortcache[req.uri.search] = tmp;",
          "8060:   }",
          "8062:   if (tmp === 2) {",
          "8063:    req.$total_status(404);",
          "8064:    return;",
          "8065:   }",
          "8066:  }",
          "8068:  F.stats.request.web++;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "16479:     this.$total_400('Invalid JSON data.');",
          "16480:     return;",
          "16481:    }",
          "16483:    F.$onParseQueryBody(this);",
          "16485:   route.schema && (this.$total_schema = true);",
          "16486:   this.buffer_data = null;",
          "",
          "[Removed Lines]",
          "16482:   } else",
          "",
          "[Added Lines]",
          "16520:   } else {",
          "16522:    for (var i = 0; i < this.buffer_data.length - 2; i++) {",
          "16523:     if (this.buffer_data[i] === '%' && this.buffer_data[i + 1] === '0' && this.buffer_data[i + 2] === '0') {",
          "16524:      this.buffer_data = null;",
          "16525:      this.$total_400('Not allowed chars in the request body.');",
          "16526:      return;",
          "16527:     }",
          "16528:    }",
          "16531:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d7abbcdc34d6d1287338936f418c1eb1bc41201",
      "candidate_info": {
        "commit_hash": "4d7abbcdc34d6d1287338936f418c1eb1bc41201",
        "repo": "totaljs/framework",
        "commit_url": "https://github.com/totaljs/framework/commit/4d7abbcdc34d6d1287338936f418c1eb1bc41201",
        "files": [
          "index.js"
        ],
        "message": "Fixed critical bug.",
        "before_after_code_files": [
          "index.js||index.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "7390:   for (var i = 0; i < req.uri.pathname.length; i++) {",
          "7391:    var c = req.uri.pathname[i];",
          "7392:    var n = req.uri.pathname[i + 1];",
          "7394:     req.$total_status(404);",
          "7395:     return;",
          "7396:    }",
          "",
          "[Removed Lines]",
          "7393:    if ((c === '.' && n === '/') || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
          "",
          "[Added Lines]",
          "7393:    if ((c === '.' && (n === '/' || n === '%')) || (c === '%' && n === '2' && req.uri.pathname[i + 2] === 'e')) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}