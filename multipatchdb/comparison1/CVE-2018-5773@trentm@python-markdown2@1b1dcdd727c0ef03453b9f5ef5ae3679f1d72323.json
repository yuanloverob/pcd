{
  "cve_id": "CVE-2018-5773",
  "cve_desc": "An issue was discovered in markdown2 (aka python-markdown2) through 2.3.5. The safe_mode feature, which is supposed to sanitize user input against XSS, is flawed and does not escape the input properly. With a crafted payload, XSS can be triggered, as demonstrated by omitting the final '>' character from an IMG tag.",
  "repo": "trentm/python-markdown2",
  "patch_hash": "1b1dcdd727c0ef03453b9f5ef5ae3679f1d72323",
  "patch_info": {
    "commit_hash": "1b1dcdd727c0ef03453b9f5ef5ae3679f1d72323",
    "repo": "trentm/python-markdown2",
    "commit_url": "https://github.com/trentm/python-markdown2/commit/1b1dcdd727c0ef03453b9f5ef5ae3679f1d72323",
    "files": [
      "lib/markdown2.py",
      "test/tm-cases/CVE-2018-5773.html",
      "test/tm-cases/CVE-2018-5773.opts",
      "test/tm-cases/CVE-2018-5773.text",
      "test/tm-cases/basic_safe_mode.html"
    ],
    "message": "Merge pull request #303 from thombashi/fix_cve-2018-5773\n\nFix CVE-2018-5773: #285",
    "before_after_code_files": [
      "lib/markdown2.py||lib/markdown2.py",
      "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html",
      "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts",
      "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text",
      "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html"
    ]
  },
  "patch_diff": {
    "lib/markdown2.py||lib/markdown2.py": [
      "File: lib/markdown2.py -> lib/markdown2.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1203:                 self.html_spans[key] = sanitized",
      "1204:                 tokens.append(key)",
      "1205:             else:",
      "1207:             is_html_markup = not is_html_markup",
      "1208:         return ''.join(tokens)",
      "",
      "[Removed Lines]",
      "1206:                 tokens.append(token)",
      "",
      "[Added Lines]",
      "1206:                 tokens.append(self._encode_incomplete_tags(token))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2140:         text = self._naked_gt_re.sub('&gt;', text)",
      "2141:         return text",
      "2143:     def _encode_backslash_escapes(self, text):",
      "2144:         for ch, escape in list(self._escape_table.items()):",
      "2145:             text = text.replace(\"\\\\\"+ch, escape)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2143:     _incomplete_tags_re = re.compile(\"<(/?\\w+\\s+)\")",
      "2145:     def _encode_incomplete_tags(self, text):",
      "2146:         if self.safe_mode not in (\"replace\", \"escape\"):",
      "2147:             return text",
      "2149:         return self._incomplete_tags_re.sub(\"&lt;\\\\1\", text)",
      "",
      "---------------"
    ],
    "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html": [
      "File: test/tm-cases/CVE-2018-5773.html -> test/tm-cases/CVE-2018-5773.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <p>&lt;img src=\"\" onerror=alert(/XSS/) </p>",
      "3: <p>&lt;/img src=\"\" onerror=alert(/XSS/) </p>",
      "",
      "---------------"
    ],
    "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts": [
      "File: test/tm-cases/CVE-2018-5773.opts -> test/tm-cases/CVE-2018-5773.opts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: {\"safe_mode\": \"replace\"}",
      "",
      "---------------"
    ],
    "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text": [
      "File: test/tm-cases/CVE-2018-5773.text -> test/tm-cases/CVE-2018-5773.text",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <img src=\"\" onerror=alert(/XSS/)",
      "3: </img src=\"\" onerror=alert(/XSS/)",
      "",
      "---------------"
    ],
    "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html": [
      "File: test/tm-cases/basic_safe_mode.html -> test/tm-cases/basic_safe_mode.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: <p><img src=\"http://example.com&gt;[HTML_REMOVED]alert(1)[HTML_REMOVED]\" alt=\"img3\" /></p>",
      "33: <p><img src=\"http://example.com/image.gif?h=200&amp;w=500\" alt=\"ok img\" /></p>",
      "",
      "[Removed Lines]",
      "31: <p><img src=\"javascript:alert(1)\"</p>",
      "",
      "[Added Lines]",
      "31: <p>&lt;img src=\"javascript:alert(1)\"</p>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9fc2a371d174b4f253c6b8985eedd41ce90e42f0",
      "candidate_info": {
        "commit_hash": "9fc2a371d174b4f253c6b8985eedd41ce90e42f0",
        "repo": "trentm/python-markdown2",
        "commit_url": "https://github.com/trentm/python-markdown2/commit/9fc2a371d174b4f253c6b8985eedd41ce90e42f0",
        "files": [
          "lib/markdown2.py",
          "test/tm-cases/CVE-2018-5773.html",
          "test/tm-cases/CVE-2018-5773.opts",
          "test/tm-cases/CVE-2018-5773.text",
          "test/tm-cases/basic_safe_mode.html"
        ],
        "message": "Fix CVE-2018-5773: #285\n\nAdd sanitization for incomplete HTML tags.",
        "before_after_code_files": [
          "lib/markdown2.py||lib/markdown2.py",
          "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html",
          "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts",
          "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text",
          "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/trentm/python-markdown2/pull/303"
        ],
        "olp_code_files": {
          "patch": [
            "lib/markdown2.py||lib/markdown2.py",
            "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html",
            "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts",
            "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text",
            "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html"
          ],
          "candidate": [
            "lib/markdown2.py||lib/markdown2.py",
            "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html",
            "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts",
            "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text",
            "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html"
          ]
        }
      },
      "candidate_diff": {
        "lib/markdown2.py||lib/markdown2.py": [
          "File: lib/markdown2.py -> lib/markdown2.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1203:                 self.html_spans[key] = sanitized",
          "1204:                 tokens.append(key)",
          "1205:             else:",
          "1207:             is_html_markup = not is_html_markup",
          "1208:         return ''.join(tokens)",
          "",
          "[Removed Lines]",
          "1206:                 tokens.append(token)",
          "",
          "[Added Lines]",
          "1206:                 tokens.append(self._encode_incomplete_tags(token))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2140:         text = self._naked_gt_re.sub('&gt;', text)",
          "2141:         return text",
          "2143:     def _encode_backslash_escapes(self, text):",
          "2144:         for ch, escape in list(self._escape_table.items()):",
          "2145:             text = text.replace(\"\\\\\"+ch, escape)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2143:     _incomplete_tags_re = re.compile(\"<(/?\\w+\\s+)\")",
          "2145:     def _encode_incomplete_tags(self, text):",
          "2146:         if self.safe_mode not in (\"replace\", \"escape\"):",
          "2147:             return text",
          "2149:         return self._incomplete_tags_re.sub(\"&lt;\\\\1\", text)",
          "",
          "---------------"
        ],
        "test/tm-cases/CVE-2018-5773.html||test/tm-cases/CVE-2018-5773.html": [
          "File: test/tm-cases/CVE-2018-5773.html -> test/tm-cases/CVE-2018-5773.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <p>&lt;img src=\"\" onerror=alert(/XSS/) </p>",
          "3: <p>&lt;/img src=\"\" onerror=alert(/XSS/) </p>",
          "",
          "---------------"
        ],
        "test/tm-cases/CVE-2018-5773.opts||test/tm-cases/CVE-2018-5773.opts": [
          "File: test/tm-cases/CVE-2018-5773.opts -> test/tm-cases/CVE-2018-5773.opts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {\"safe_mode\": \"replace\"}",
          "",
          "---------------"
        ],
        "test/tm-cases/CVE-2018-5773.text||test/tm-cases/CVE-2018-5773.text": [
          "File: test/tm-cases/CVE-2018-5773.text -> test/tm-cases/CVE-2018-5773.text",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <img src=\"\" onerror=alert(/XSS/)",
          "3: </img src=\"\" onerror=alert(/XSS/)",
          "",
          "---------------"
        ],
        "test/tm-cases/basic_safe_mode.html||test/tm-cases/basic_safe_mode.html": [
          "File: test/tm-cases/basic_safe_mode.html -> test/tm-cases/basic_safe_mode.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: <p><img src=\"http://example.com&gt;[HTML_REMOVED]alert(1)[HTML_REMOVED]\" alt=\"img3\" /></p>",
          "33: <p><img src=\"http://example.com/image.gif?h=200&amp;w=500\" alt=\"ok img\" /></p>",
          "",
          "[Removed Lines]",
          "31: <p><img src=\"javascript:alert(1)\"</p>",
          "",
          "[Added Lines]",
          "31: <p>&lt;img src=\"javascript:alert(1)\"</p>",
          "",
          "---------------"
        ]
      }
    }
  ]
}