{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4168b074322551d8d060fb658a05288385686cef",
      "candidate_info": {
        "commit_hash": "4168b074322551d8d060fb658a05288385686cef",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4168b074322551d8d060fb658a05288385686cef",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ],
        "message": "PDFBOX-4892: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891747 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java"
        ]
      }
    },
    {
      "candidate_hash": "6dc0acacf3cfc75bf98a385365e14ae2d2c78a95",
      "candidate_info": {
        "commit_hash": "6dc0acacf3cfc75bf98a385365e14ae2d2c78a95",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6dc0acacf3cfc75bf98a385365e14ae2d2c78a95",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ],
        "message": "PDFBOX-5193: avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889923 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java||debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java -> debugger/src/main/java/org/apache/pdfbox/debugger/PDFDebugger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "822:     {",
          "823:         Object underneathObject = getUnderneathObject(obj);",
          "824:         return underneathObject instanceof COSDictionary &&",
          "827:     }",
          "829:     private boolean isAnnot(Object obj)",
          "830:     {",
          "831:         Object underneathObject = getUnderneathObject(obj);",
          "832:         return underneathObject instanceof COSDictionary &&",
          "835:     }",
          "837:     private boolean isStream(Object selectedNode)",
          "",
          "[Removed Lines]",
          "825:                 ((COSDictionary) underneathObject).containsKey(COSName.TYPE) &&",
          "826:                 ((COSDictionary) underneathObject).getCOSName(COSName.TYPE).equals(COSName.FONT_DESC);",
          "833:                 ((COSDictionary) underneathObject).containsKey(COSName.TYPE) &&",
          "834:                 ((COSDictionary) underneathObject).getCOSName(COSName.TYPE).equals(COSName.ANNOT);",
          "",
          "[Added Lines]",
          "825:                 COSName.FONT_DESC.equals(((COSDictionary) underneathObject).getCOSName(COSName.TYPE));",
          "832:                 COSName.ANNOT.equals(((COSDictionary) underneathObject).getCOSName(COSName.TYPE));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "849:         selectedNode = getUnderneathObject(selectedNode);",
          "850:         if (selectedNode instanceof COSDictionary)",
          "851:         {",
          "856:         }",
          "857:         return false;",
          "858:     }",
          "860:     private boolean isCIDFont(COSDictionary dic)",
          "861:     {",
          "865:     }",
          "",
          "[Removed Lines]",
          "852:             COSDictionary dic = (COSDictionary)selectedNode;",
          "853:             return dic.containsKey(COSName.TYPE) &&",
          "854:                     dic.getCOSName(COSName.TYPE).equals(COSName.FONT) &&",
          "855:                     !isCIDFont(dic);",
          "862:         return dic.containsKey(COSName.SUBTYPE) &&",
          "863:                 (dic.getCOSName(COSName.SUBTYPE).equals(COSName.CID_FONT_TYPE0)",
          "864:                 || dic.getCOSName(COSName.SUBTYPE).equals(COSName.CID_FONT_TYPE2));",
          "",
          "[Added Lines]",
          "850:             COSDictionary dic = (COSDictionary) selectedNode;",
          "851:             return COSName.FONT.equals(dic.getCOSName(COSName.TYPE)) && !isCIDFont(dic);",
          "858:         return COSName.CID_FONT_TYPE0.equals(dic.getCOSName(COSName.SUBTYPE)) ||",
          "859:                COSName.CID_FONT_TYPE2.equals(dic.getCOSName(COSName.SUBTYPE));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fafdec6689300d0cf40f27905cea3405d48ddc35",
      "candidate_info": {
        "commit_hash": "fafdec6689300d0cf40f27905cea3405d48ddc35",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fafdec6689300d0cf40f27905cea3405d48ddc35",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java"
        ],
        "message": "PDFBOX-5070: improve javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885720 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java||examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java||examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     {",
          "79:         digest.reset();",
          "83:         SecureRandom random = new SecureRandom();",
          "",
          "[Removed Lines]",
          "77:     public byte[] getTimeStampToken(byte[] messageImprint) throws IOException",
          "80:         byte[] hash = digest.digest(messageImprint);",
          "",
          "[Added Lines]",
          "77:     public byte[] getTimeStampToken(byte[] content) throws IOException",
          "80:         byte[] hash = digest.digest(content);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de2adb6fbad765ce69b71ffeba0039338e434713",
      "candidate_info": {
        "commit_hash": "de2adb6fbad765ce69b71ffeba0039338e434713",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/de2adb6fbad765ce69b71ffeba0039338e434713",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java"
        ],
        "message": "PDFBOX-5019: avoid IllegalArgumentException when miter limit is < 1\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883560 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.IOException;",
          "20: import java.util.List;",
          "22: import org.apache.pdfbox.contentstream.operator.MissingOperandException;",
          "23: import org.apache.pdfbox.contentstream.operator.Operator;",
          "24: import org.apache.pdfbox.contentstream.operator.OperatorName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.apache.commons.logging.Log;",
          "23: import org.apache.commons.logging.LogFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: public class SetLineMiterLimit extends OperatorProcessor",
          "35: {",
          "36:     @Override",
          "37:     public void process(Operator operator, List<COSBase> arguments) throws IOException",
          "38:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:     private static final Log LOG = LogFactory.getLog(SetLineMiterLimit.class);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:             throw new MissingOperandException(operator, arguments);",
          "42:         }",
          "43:         COSNumber miterLimit = (COSNumber)arguments.get( 0 );",
          "45:     }",
          "47:     @Override",
          "",
          "[Removed Lines]",
          "44:         context.getGraphicsState().setMiterLimit( miterLimit.floatValue() );",
          "",
          "[Added Lines]",
          "48:         float lim = miterLimit.floatValue();",
          "49:         if (lim < 1)",
          "50:         {",
          "51:             LOG.warn(\"Miter limit must be >= 1, value \" + lim + \" is ignored\");",
          "52:         }",
          "53:         context.getGraphicsState().setMiterLimit(lim);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d95a21be0c04e752f6052e42231035127e31cb8f",
      "candidate_info": {
        "commit_hash": "d95a21be0c04e752f6052e42231035127e31cb8f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d95a21be0c04e752f6052e42231035127e31cb8f",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java"
        ],
        "message": "PDFBOX-4892: avoid NPE, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891926 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSArray.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "437:     {",
          "439:         for (int i = 0; i < size(); i++)",
          "440:         {",
          "442:             {",
          "445:             }",
          "446:         }",
          "448:     }",
          "",
          "[Removed Lines]",
          "436:     public int indexOf( COSBase object )",
          "438:         int retval = -1;",
          "441:             if( get( i ).equals( object ) )",
          "443:                 retval = i;",
          "444:                 break;",
          "447:         return retval;",
          "",
          "[Added Lines]",
          "436:     public int indexOf(COSBase object)",
          "440:             COSBase item = get(i);",
          "441:             if (item == null)",
          "443:                 if (object == null)",
          "444:                 {",
          "445:                     return i;",
          "446:                 }",
          "447:             }",
          "448:             else if (item.equals(object))",
          "449:             {",
          "450:                 return i;",
          "453:         return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "457:     public int indexOfObject(COSBase object)",
          "458:     {",
          "460:         for (int i = 0; i < this.size(); i++)",
          "461:         {",
          "462:             COSBase item = this.get(i);",
          "465:             {",
          "468:             }",
          "469:         }",
          "471:     }",
          "",
          "[Removed Lines]",
          "459:         int retval = -1;",
          "463:             if (item.equals(object) ||",
          "464:                 item instanceof COSObject && ((COSObject) item).getObject().equals(object))",
          "466:                 retval = i;",
          "467:                 break;",
          "470:         return retval;",
          "",
          "[Added Lines]",
          "468:             if (item == null)",
          "470:                 if (item == object)",
          "471:                 {",
          "472:                     return i;",
          "473:                 }",
          "474:             }",
          "475:             else if (item.equals(object)",
          "476:                     || item instanceof COSObject && ((COSObject) item).getObject().equals(object))",
          "477:             {",
          "478:                 return i;",
          "481:         return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}