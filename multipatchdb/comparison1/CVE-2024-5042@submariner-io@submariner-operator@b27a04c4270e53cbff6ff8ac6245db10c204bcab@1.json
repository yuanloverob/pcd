{
  "cve_id": "CVE-2024-5042",
  "cve_desc": "A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.",
  "repo": "submariner-io/submariner-operator",
  "patch_hash": "b27a04c4270e53cbff6ff8ac6245db10c204bcab",
  "patch_info": {
    "commit_hash": "b27a04c4270e53cbff6ff8ac6245db10c204bcab",
    "repo": "submariner-io/submariner-operator",
    "commit_url": "https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab",
    "files": [
      "config/rbac/submariner-operator/cluster_role.yaml",
      "config/rbac/submariner-operator/role.yaml",
      "controllers/submariner/migration_test.go",
      "controllers/submariner/np_syncer_resources.go",
      "pkg/embeddedyamls/yamls.go"
    ],
    "message": "Restrict operator ClusterRole*, ServiceAccount permissions\n\nThese were added for network-plugin syncer removal so retrict the\ndelete permissions to the networkplugin-syncer resource names.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
    "before_after_code_files": [
      "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
      "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
      "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
    ]
  },
  "patch_diff": {
    "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go": [
      "File: controllers/submariner/migration_test.go -> controllers/submariner/migration_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "55:        Name:      submariner.NetworkPluginSyncerComponent,",
      "56:       },",
      "57:      },",
      "58:      &rbacv1.ClusterRoleBinding{",
      "59:       ObjectMeta: metav1.ObjectMeta{",
      "60:        Namespace: t.Namespace,",
      "61:        Name:      submariner.NetworkPluginSyncerComponent,",
      "62:       },",
      "63:      },",
      "64:      &corev1.ServiceAccount{",
      "65:       ObjectMeta: metav1.ObjectMeta{",
      "66:        Namespace: t.Namespace,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:      &rbacv1.ClusterRole{",
      "59:       ObjectMeta: metav1.ObjectMeta{",
      "60:        Namespace: t.Namespace,",
      "61:        Name:      \"ocp-submariner-networkplugin-syncer\",",
      "62:       },",
      "63:      },",
      "70:      &rbacv1.ClusterRoleBinding{",
      "71:       ObjectMeta: metav1.ObjectMeta{",
      "72:        Namespace: t.Namespace,",
      "73:        Name:      \"ocp-submariner-networkplugin-syncer\",",
      "74:       },",
      "75:      },",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:      },",
      "84:     })",
      "86:     t.AssertNoResource(&corev1.ServiceAccount{",
      "87:      ObjectMeta: metav1.ObjectMeta{",
      "88:       Name: submariner.NetworkPluginSyncerComponent,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "98:     t.AssertNoResource(&rbacv1.ClusterRole{",
      "99:      ObjectMeta: metav1.ObjectMeta{",
      "100:       Name: \"ocp-submariner-networkplugin-syncer\",",
      "101:      },",
      "102:     })",
      "104:     t.AssertNoResource(&rbacv1.ClusterRoleBinding{",
      "105:      ObjectMeta: metav1.ObjectMeta{",
      "106:       Name: \"ocp-submariner-networkplugin-syncer\",",
      "107:      },",
      "108:     })",
      "",
      "---------------"
    ],
    "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
      "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:  deleteAll := func(objs ...client.Object) error {",
      "45:   for _, obj := range objs {",
      "47:    obj.SetNamespace(instance.Namespace)",
      "49:    err := r.config.ScopedClient.Delete(ctx, obj)",
      "",
      "[Removed Lines]",
      "46:    obj.SetName(NetworkPluginSyncerComponent)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "59:  return deleteAll(",
      "60:   &appsv1.Deployment{",
      "61:    ObjectMeta: metav1.ObjectMeta{",
      "64:    },",
      "65:   },",
      "66:   &rbacv1.ClusterRole{",
      "67:    ObjectMeta: metav1.ObjectMeta{",
      "70:    },",
      "71:   },",
      "72:   &rbacv1.ClusterRoleBinding{",
      "73:    ObjectMeta: metav1.ObjectMeta{",
      "76:    },",
      "77:   },",
      "78:   &rbacv1.ClusterRole{",
      "79:    ObjectMeta: metav1.ObjectMeta{",
      "82:    },",
      "83:   },",
      "84:   &rbacv1.ClusterRoleBinding{",
      "85:    ObjectMeta: metav1.ObjectMeta{",
      "88:    },",
      "89:   },",
      "90:   &corev1.ServiceAccount{",
      "91:    ObjectMeta: metav1.ObjectMeta{",
      "94:    },",
      "95:   },",
      "96:  )",
      "",
      "[Removed Lines]",
      "62:     Namespace: instance.Namespace,",
      "63:     Name:      NetworkPluginSyncerComponent,",
      "68:     Namespace: instance.Namespace,",
      "69:     Name:      NetworkPluginSyncerComponent,",
      "74:     Namespace: instance.Namespace,",
      "75:     Name:      NetworkPluginSyncerComponent,",
      "80:     Namespace: instance.Namespace,",
      "81:     Name:      \"ocp-submariner-networkplugin-syncer\",",
      "86:     Namespace: instance.Namespace,",
      "87:     Name:      \"ocp-submariner-networkplugin-syncer\",",
      "92:     Namespace: instance.Namespace,",
      "93:     Name:      NetworkPluginSyncerComponent,",
      "",
      "[Added Lines]",
      "61:     Name: NetworkPluginSyncerComponent,",
      "66:     Name: NetworkPluginSyncerComponent,",
      "71:     Name: NetworkPluginSyncerComponent,",
      "76:     Name: \"ocp-submariner-networkplugin-syncer\",",
      "81:     Name: \"ocp-submariner-networkplugin-syncer\",",
      "86:     Name: NetworkPluginSyncerComponent,",
      "",
      "---------------"
    ],
    "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
      "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2519:     resources:",
      "2520:       # Temporarily needed for network-plugin syncer removal",
      "2521:       - serviceaccounts",
      "2522:     verbs:",
      "2523:       - delete",
      "2524:   - apiGroups:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2522:     resourceNames:",
      "2523:       - submariner-networkplugin-syncer",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2666:       # Temporarily needed for network-plugin syncer removal",
      "2667:       - clusterroles",
      "2668:       - clusterrolebindings",
      "2669:     verbs:",
      "2670:       - delete",
      "2671: `",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2671:     resourceNames:",
      "2672:       - ocp-submariner-networkplugin-syncer",
      "2673:       - submariner-networkplugin-syncer",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f29cd9eb9afa1932670ee66afdda841b073c5b41",
      "candidate_info": {
        "commit_hash": "f29cd9eb9afa1932670ee66afdda841b073c5b41",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/f29cd9eb9afa1932670ee66afdda841b073c5b41",
        "files": [
          "controllers/servicediscovery/cleanup.go",
          "controllers/servicediscovery/servicediscovery_controller.go",
          "controllers/servicediscovery/servicediscovery_controller_test.go",
          "controllers/servicediscovery/servicediscovery_suite_test.go",
          "controllers/submariner/cleanup.go",
          "controllers/submariner/gateway_resources.go",
          "controllers/submariner/globalnet_resources.go",
          "controllers/submariner/loadbalancer_resources.go",
          "controllers/submariner/metrics_proxy_resources.go",
          "controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/route_agent_resources.go",
          "controllers/submariner/submariner_controller_test.go",
          "controllers/submariner/submariner_suite_test.go",
          "controllers/uninstall/uninstall.go",
          "pkg/names/names.go",
          "test/e2e/cleanup/submariner.go"
        ],
        "message": "Use component names from admiral\n\nUse admiral/pkg/names/names.go for component names for consistency\nacross all repos/components.\n\nSigned-off-by: Vishal Thapar <5137689+vthapar@users.noreply.github.com>",
        "before_after_code_files": [
          "controllers/servicediscovery/cleanup.go||controllers/servicediscovery/cleanup.go",
          "controllers/servicediscovery/servicediscovery_controller.go||controllers/servicediscovery/servicediscovery_controller.go",
          "controllers/servicediscovery/servicediscovery_controller_test.go||controllers/servicediscovery/servicediscovery_controller_test.go",
          "controllers/servicediscovery/servicediscovery_suite_test.go||controllers/servicediscovery/servicediscovery_suite_test.go",
          "controllers/submariner/cleanup.go||controllers/submariner/cleanup.go",
          "controllers/submariner/gateway_resources.go||controllers/submariner/gateway_resources.go",
          "controllers/submariner/globalnet_resources.go||controllers/submariner/globalnet_resources.go",
          "controllers/submariner/loadbalancer_resources.go||controllers/submariner/loadbalancer_resources.go",
          "controllers/submariner/metrics_proxy_resources.go||controllers/submariner/metrics_proxy_resources.go",
          "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/route_agent_resources.go||controllers/submariner/route_agent_resources.go",
          "controllers/submariner/submariner_controller_test.go||controllers/submariner/submariner_controller_test.go",
          "controllers/submariner/submariner_suite_test.go||controllers/submariner/submariner_suite_test.go",
          "controllers/uninstall/uninstall.go||controllers/uninstall/uninstall.go",
          "pkg/names/names.go||pkg/names/names.go",
          "test/e2e/cleanup/submariner.go||test/e2e/cleanup/submariner.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go"
          ],
          "candidate": [
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/servicediscovery/cleanup.go||controllers/servicediscovery/cleanup.go": [
          "File: controllers/servicediscovery/cleanup.go -> controllers/servicediscovery/cleanup.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"github.com/pkg/errors\"",
          "26:  \"github.com/submariner-io/admiral/pkg/finalizer\"",
          "27:  \"github.com/submariner-io/admiral/pkg/resource\"",
          "28:  \"github.com/submariner-io/admiral/pkg/util\"",
          "29:  operatorv1alpha1 \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "30:  \"github.com/submariner-io/submariner-operator/controllers/uninstall\"",
          "31:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "33:  appsv1 \"k8s.io/api/apps/v1\"",
          "34:  corev1 \"k8s.io/api/core/v1\"",
          "35:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "[Removed Lines]",
          "32:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/submariner-io/admiral/pkg/names\"",
          "33:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: )",
          "41: func (r *Reconciler) doCleanup(ctx context.Context, instance *operatorv1alpha1.ServiceDiscovery) (reconcile.Result, error) {",
          "43:   return reconcile.Result{}, nil",
          "44:  }",
          "",
          "[Removed Lines]",
          "42:  if !finalizer.IsPresent(instance, names.CleanupFinalizer) {",
          "",
          "[Added Lines]",
          "43:  if !finalizer.IsPresent(instance, opnames.CleanupFinalizer) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:      Namespace: instance.Namespace,",
          "74:     },",
          "75:    },",
          "77:   },",
          "78:  }",
          "",
          "[Removed Lines]",
          "76:    UninstallResource: newLighthouseAgent(instance, names.AppendUninstall(names.ServiceDiscoveryComponent)),",
          "",
          "[Added Lines]",
          "77:    UninstallResource: newLighthouseAgent(instance, opnames.AppendUninstall(names.ServiceDiscoveryComponent)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104: func (r *Reconciler) removeFinalizer(ctx context.Context, instance *operatorv1alpha1.ServiceDiscovery) error {",
          "105:  return finalizer.Remove(ctx, resource.ForControllerClient(r.ScopedClient, instance.Namespace, instance),",
          "107: }",
          "109: func (r *Reconciler) removeLighthouseConfigFromCustomDNSConfigMap(ctx context.Context,",
          "",
          "[Removed Lines]",
          "106:   instance, names.CleanupFinalizer)",
          "",
          "[Added Lines]",
          "107:   instance, opnames.CleanupFinalizer)",
          "",
          "---------------"
        ],
        "controllers/servicediscovery/servicediscovery_controller.go||controllers/servicediscovery/servicediscovery_controller.go": [
          "File: controllers/servicediscovery/servicediscovery_controller.go -> controllers/servicediscovery/servicediscovery_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  operatorv1 \"github.com/openshift/api/operator/v1\"",
          "33:  \"github.com/pkg/errors\"",
          "34:  \"github.com/submariner-io/admiral/pkg/finalizer\"",
          "35:  \"github.com/submariner-io/admiral/pkg/resource\"",
          "36:  \"github.com/submariner-io/admiral/pkg/syncer/broker\"",
          "37:  \"github.com/submariner-io/admiral/pkg/util\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:  \"github.com/submariner-io/admiral/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "40:  \"github.com/submariner-io/submariner-operator/controllers/metrics\"",
          "41:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "43:  appsv1 \"k8s.io/api/apps/v1\"",
          "44:  corev1 \"k8s.io/api/core/v1\"",
          "45:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "[Removed Lines]",
          "42:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "43:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:  instance *submarinerv1alpha1.ServiceDiscovery,",
          "182: ) (*submarinerv1alpha1.ServiceDiscovery, error) {",
          "183:  added, err := finalizer.Add(ctx, resource.ForControllerClient(r.ScopedClient, instance.Namespace,",
          "185:  if err != nil {",
          "186:   return nil, err //nolint:wrapcheck // No need to wrap",
          "187:  }",
          "",
          "[Removed Lines]",
          "184:   &submarinerv1alpha1.ServiceDiscovery{}), instance, names.CleanupFinalizer)",
          "",
          "[Added Lines]",
          "185:   &submarinerv1alpha1.ServiceDiscovery{}), instance, opnames.CleanupFinalizer)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "238:      Containers: []corev1.Container{",
          "239:       {",
          "240:        Name:            name,",
          "242:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.ServiceDiscoveryComponent]),",
          "243:        Env: []corev1.EnvVar{",
          "244:         {Name: \"SUBMARINER_NAMESPACE\", Value: cr.Spec.Namespace},",
          "",
          "[Removed Lines]",
          "241:        Image:           getImagePath(cr, names.ServiceDiscoveryImage, names.ServiceDiscoveryComponent),",
          "",
          "[Added Lines]",
          "242:        Image:           getImagePath(cr, opnames.ServiceDiscoveryImage, names.ServiceDiscoveryComponent),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "334:      Containers: []corev1.Container{",
          "335:       {",
          "336:        Name:            names.LighthouseCoreDNSComponent,",
          "338:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.LighthouseCoreDNSComponent]),",
          "339:        Env: []corev1.EnvVar{",
          "340:         {Name: \"SUBMARINER_CLUSTERID\", Value: cr.Spec.ClusterID},",
          "",
          "[Removed Lines]",
          "337:        Image:           getImagePath(cr, names.LighthouseCoreDNSImage, names.LighthouseCoreDNSComponent),",
          "",
          "[Added Lines]",
          "338:        Image:           getImagePath(cr, opnames.LighthouseCoreDNSImage, names.LighthouseCoreDNSComponent),",
          "",
          "---------------"
        ],
        "controllers/servicediscovery/servicediscovery_controller_test.go||controllers/servicediscovery/servicediscovery_controller_test.go": [
          "File: controllers/servicediscovery/servicediscovery_controller_test.go -> controllers/servicediscovery/servicediscovery_controller_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  . \"github.com/onsi/ginkgo/v2\"",
          "26:  . \"github.com/onsi/gomega\"",
          "27:  submariner_v1 \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "29:  corev1 \"k8s.io/api/core/v1\"",
          "30:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "31: )",
          "",
          "[Removed Lines]",
          "28:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/submariner-io/admiral/pkg/names\"",
          "29:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:  t := newTestDriver()",
          "202:  BeforeEach(func() {",
          "205:   now := metav1.Now()",
          "206:   t.serviceDiscovery.SetDeletionTimestamp(&now)",
          "207:  })",
          "209:  JustBeforeEach(func() {",
          "212:   var one int32 = 1",
          "213:   deployment.Spec.Replicas = &one",
          "",
          "[Removed Lines]",
          "203:   t.serviceDiscovery.SetFinalizers([]string{names.CleanupFinalizer})",
          "210:   deployment := t.NewDeployment(names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "[Added Lines]",
          "204:   t.serviceDiscovery.SetFinalizers([]string{opnames.CleanupFinalizer})",
          "211:   deployment := t.NewDeployment(opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "281:  t := newTestDriver()",
          "283:  BeforeEach(func() {",
          "286:   now := metav1.Now()",
          "287:   t.serviceDiscovery.SetDeletionTimestamp(&now)",
          "",
          "[Removed Lines]",
          "284:   t.serviceDiscovery.SetFinalizers([]string{names.CleanupFinalizer})",
          "",
          "[Added Lines]",
          "285:   t.serviceDiscovery.SetFinalizers([]string{opnames.CleanupFinalizer})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "305:    t.AssertReconcileSuccess()",
          "309:    t.awaitServiceDiscoveryDeleted()",
          "311:    t.AssertReconcileSuccess()",
          "313:   })",
          "314:  })",
          "",
          "[Removed Lines]",
          "307:    t.AssertNoDeployment(names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "312:    t.AssertNoDeployment(names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "[Added Lines]",
          "308:    t.AssertNoDeployment(opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "313:    t.AssertNoDeployment(opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "326:    _, err := t.GetDeployment(names.ServiceDiscoveryComponent)",
          "327:    Expect(err).To(Succeed())",
          "331:    t.awaitServiceDiscoveryDeleted()",
          "332:   })",
          "",
          "[Removed Lines]",
          "329:    t.AssertNoDeployment(names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "[Added Lines]",
          "330:    t.AssertNoDeployment(opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "---------------"
        ],
        "controllers/servicediscovery/servicediscovery_suite_test.go||controllers/servicediscovery/servicediscovery_suite_test.go": [
          "File: controllers/servicediscovery/servicediscovery_suite_test.go -> controllers/servicediscovery/servicediscovery_suite_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  . \"github.com/onsi/gomega\"",
          "29:  operatorv1 \"github.com/openshift/api/operator/v1\"",
          "30:  \"github.com/submariner-io/admiral/pkg/log/kzerolog\"",
          "31:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "32:  \"github.com/submariner-io/submariner-operator/controllers/servicediscovery\"",
          "33:  \"github.com/submariner-io/submariner-operator/controllers/test\"",
          "35:  appsv1 \"k8s.io/api/apps/v1\"",
          "36:  corev1 \"k8s.io/api/core/v1\"",
          "37:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "",
          "[Removed Lines]",
          "34:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/submariner-io/admiral/pkg/names\"",
          "35:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104: }",
          "106: func (t *testDriver) awaitFinalizer() {",
          "108: }",
          "110: func (t *testDriver) awaitServiceDiscoveryDeleted() {",
          "",
          "[Removed Lines]",
          "107:  t.AwaitFinalizer(t.serviceDiscovery, names.CleanupFinalizer)",
          "",
          "[Added Lines]",
          "108:  t.AwaitFinalizer(t.serviceDiscovery, opnames.CleanupFinalizer)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112: }",
          "114: func (t *testDriver) assertUninstallServiceDiscoveryDeployment() *appsv1.Deployment {",
          "117:  t.AssertUninstallInitContainer(&deployment.Spec.Template,",
          "120:  return deployment",
          "121: }",
          "",
          "[Removed Lines]",
          "115:  deployment := t.AssertDeployment(names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "118:   fmt.Sprintf(\"%s/%s:%s\", t.serviceDiscovery.Spec.Repository, names.ServiceDiscoveryImage, t.serviceDiscovery.Spec.Version))",
          "",
          "[Added Lines]",
          "116:  deployment := t.AssertDeployment(opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "119:   fmt.Sprintf(\"%s/%s:%s\", t.serviceDiscovery.Spec.Repository, opnames.ServiceDiscoveryImage, t.serviceDiscovery.Spec.Version))",
          "",
          "---------------"
        ],
        "controllers/submariner/cleanup.go||controllers/submariner/cleanup.go": [
          "File: controllers/submariner/cleanup.go -> controllers/submariner/cleanup.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"time\"",
          "25:  \"github.com/submariner-io/admiral/pkg/finalizer\"",
          "26:  \"github.com/submariner-io/admiral/pkg/resource\"",
          "27:  operatorv1alpha1 \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "28:  \"github.com/submariner-io/submariner-operator/controllers/uninstall\"",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "31:  appsv1 \"k8s.io/api/apps/v1\"",
          "32:  corev1 \"k8s.io/api/core/v1\"",
          "33:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "[Removed Lines]",
          "30:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/submariner-io/admiral/pkg/names\"",
          "31:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: )",
          "38: func (r *Reconciler) runComponentCleanup(ctx context.Context, instance *operatorv1alpha1.Submariner) (reconcile.Result, error) {",
          "40:   return reconcile.Result{}, nil",
          "41:  }",
          "",
          "[Removed Lines]",
          "39:  if !finalizer.IsPresent(instance, names.CleanupFinalizer) {",
          "",
          "[Added Lines]",
          "40:  if !finalizer.IsPresent(instance, opnames.CleanupFinalizer) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:  components := []*uninstall.Component{",
          "55:   {",
          "56:    Resource:          newDaemonSet(names.GatewayComponent, instance.Namespace),",
          "58:   },",
          "59:   {",
          "60:    Resource:          newDaemonSet(names.RouteAgentComponent, instance.Namespace),",
          "62:   },",
          "63:   {",
          "64:    Resource:          newDaemonSet(names.GlobalnetComponent, instance.Namespace),",
          "66:    CheckInstalled: func() bool {",
          "67:     return instance.Spec.GlobalCIDR != \"\"",
          "68:    },",
          "",
          "[Removed Lines]",
          "57:    UninstallResource: newGatewayDaemonSet(instance, names.AppendUninstall(names.GatewayComponent)),",
          "61:    UninstallResource: newRouteAgentDaemonSet(instance, clusterNetwork, names.AppendUninstall(names.RouteAgentComponent)),",
          "65:    UninstallResource: newGlobalnetDaemonSet(instance, names.AppendUninstall(names.GlobalnetComponent)),",
          "",
          "[Added Lines]",
          "58:    UninstallResource: newGatewayDaemonSet(instance, opnames.AppendUninstall(names.GatewayComponent)),",
          "62:    UninstallResource: newRouteAgentDaemonSet(instance, clusterNetwork, opnames.AppendUninstall(names.RouteAgentComponent)),",
          "66:    UninstallResource: newGlobalnetDaemonSet(instance, opnames.AppendUninstall(names.GlobalnetComponent)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:   {",
          "71:    Resource: newDeployment(names.NetworkPluginSyncerComponent, instance.Namespace),",
          "72:    UninstallResource: newNetworkPluginSyncerDeployment(instance, clusterNetwork,",
          "74:    CheckInstalled: func() bool {",
          "75:     return needsNetworkPluginSyncer(instance)",
          "76:    },",
          "",
          "[Removed Lines]",
          "73:     names.AppendUninstall(names.NetworkPluginSyncerComponent)),",
          "",
          "[Added Lines]",
          "74:     opnames.AppendUninstall(names.NetworkPluginSyncerComponent)),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "108: func (r *Reconciler) removeFinalizer(ctx context.Context, instance *operatorv1alpha1.Submariner) error {",
          "109:  return finalizer.Remove(ctx, resource.ForControllerClient(r.config.ScopedClient, instance.Namespace, &operatorv1alpha1.Submariner{}),",
          "111: }",
          "113: func (r *Reconciler) ensureServiceDiscoveryDeleted(ctx context.Context, namespace string) bool {",
          "",
          "[Removed Lines]",
          "110:   instance, names.CleanupFinalizer)",
          "",
          "[Added Lines]",
          "111:   instance, opnames.CleanupFinalizer)",
          "",
          "---------------"
        ],
        "controllers/submariner/gateway_resources.go||controllers/submariner/gateway_resources.go": [
          "File: controllers/submariner/gateway_resources.go -> controllers/submariner/gateway_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"github.com/go-logr/logr\"",
          "27:  \"github.com/pkg/errors\"",
          "28:  \"github.com/submariner-io/admiral/pkg/syncer/broker\"",
          "29:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "30:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "31:  \"github.com/submariner-io/submariner-operator/controllers/metrics\"",
          "32:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "34:  submarinerv1 \"github.com/submariner-io/submariner/pkg/apis/submariner.io/v1\"",
          "35:  \"github.com/submariner-io/submariner/pkg/port\"",
          "36:  appsv1 \"k8s.io/api/apps/v1\"",
          "",
          "[Removed Lines]",
          "33:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/submariner-io/admiral/pkg/names\"",
          "34:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:    Containers: []corev1.Container{",
          "149:     {",
          "150:      Name:            name,",
          "152:      ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.GatewayComponent]),",
          "153:      Command:         []string{\"submariner.sh\"},",
          "154:      SecurityContext: &corev1.SecurityContext{",
          "",
          "[Removed Lines]",
          "151:      Image:           getImagePath(cr, names.GatewayImage, names.GatewayComponent),",
          "",
          "[Added Lines]",
          "152:      Image:           getImagePath(cr, opnames.GatewayImage, names.GatewayComponent),",
          "",
          "---------------"
        ],
        "controllers/submariner/globalnet_resources.go||controllers/submariner/globalnet_resources.go": [
          "File: controllers/submariner/globalnet_resources.go -> controllers/submariner/globalnet_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:  \"context\"",
          "24:  \"github.com/go-logr/logr\"",
          "25:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "26:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "27:  \"github.com/submariner-io/submariner-operator/controllers/metrics\"",
          "28:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "30:  appsv1 \"k8s.io/api/apps/v1\"",
          "31:  corev1 \"k8s.io/api/core/v1\"",
          "32:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/submariner-io/admiral/pkg/names\"",
          "30:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:      Containers: []corev1.Container{",
          "78:       {",
          "79:        Name:            name,",
          "81:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.GlobalnetComponent]),",
          "82:        SecurityContext: &corev1.SecurityContext{",
          "83:         Capabilities:             &corev1.Capabilities{Add: []corev1.Capability{\"ALL\"}},",
          "",
          "[Removed Lines]",
          "80:        Image:           getImagePath(cr, names.GlobalnetImage, names.GlobalnetComponent),",
          "",
          "[Added Lines]",
          "81:        Image:           getImagePath(cr, opnames.GlobalnetImage, names.GlobalnetComponent),",
          "",
          "---------------"
        ],
        "controllers/submariner/loadbalancer_resources.go||controllers/submariner/loadbalancer_resources.go": [
          "File: controllers/submariner/loadbalancer_resources.go -> controllers/submariner/loadbalancer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"github.com/go-logr/logr\"",
          "26:  configv1 \"github.com/openshift/api/config/v1\"",
          "27:  \"github.com/pkg/errors\"",
          "28:  \"github.com/submariner-io/admiral/pkg/resource\"",
          "29:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "30:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "32:  submv1 \"github.com/submariner-io/submariner/pkg/apis/submariner.io/v1\"",
          "33:  \"github.com/submariner-io/submariner/pkg/port\"",
          "34:  corev1 \"k8s.io/api/core/v1\"",
          "",
          "[Removed Lines]",
          "31:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "28:  \"github.com/submariner-io/admiral/pkg/names\"",
          "",
          "---------------"
        ],
        "controllers/submariner/metrics_proxy_resources.go||controllers/submariner/metrics_proxy_resources.go": [
          "File: controllers/submariner/metrics_proxy_resources.go -> controllers/submariner/metrics_proxy_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"fmt\"",
          "25:  \"github.com/go-logr/logr\"",
          "26:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "27:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "28:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "30:  appsv1 \"k8s.io/api/apps/v1\"",
          "31:  corev1 \"k8s.io/api/core/v1\"",
          "32:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/submariner-io/admiral/pkg/names\"",
          "30:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: func metricProxyContainer(cr *v1alpha1.Submariner, name, hostPort, podPort string) *corev1.Container {",
          "83:  return &corev1.Container{",
          "84:   Name:            name,",
          "86:   ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.MetricsProxyComponent]),",
          "87:   Env: []corev1.EnvVar{",
          "88:    {Name: \"NODE_IP\", ValueFrom: &corev1.EnvVarSource{",
          "",
          "[Removed Lines]",
          "85:   Image:           getImagePath(cr, names.MetricsProxyImage, names.MetricsProxyComponent),",
          "",
          "[Added Lines]",
          "86:   Image:           getImagePath(cr, opnames.MetricsProxyImage, names.MetricsProxyComponent),",
          "",
          "---------------"
        ],
        "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
          "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"strconv\"",
          "25:  \"github.com/go-logr/logr\"",
          "26:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "27:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "28:  \"github.com/submariner-io/submariner-operator/pkg/discovery/network\"",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "31:  \"github.com/submariner-io/submariner/pkg/cni\"",
          "32:  appsv1 \"k8s.io/api/apps/v1\"",
          "33:  corev1 \"k8s.io/api/core/v1\"",
          "",
          "[Removed Lines]",
          "30:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/submariner-io/admiral/pkg/names\"",
          "31:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:      Containers: []corev1.Container{",
          "85:       {",
          "86:        Name:            name,",
          "88:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.NetworkPluginSyncerComponent]),",
          "89:        Command:         []string{\"submariner-networkplugin-syncer.sh\"},",
          "90:        Env: []corev1.EnvVar{",
          "",
          "[Removed Lines]",
          "87:        Image:           getImagePath(cr, names.NetworkPluginSyncerImage, names.NetworkPluginSyncerComponent),",
          "",
          "[Added Lines]",
          "88:        Image:           getImagePath(cr, opnames.NetworkPluginSyncerImage, names.NetworkPluginSyncerComponent),",
          "",
          "---------------"
        ],
        "controllers/submariner/route_agent_resources.go||controllers/submariner/route_agent_resources.go": [
          "File: controllers/submariner/route_agent_resources.go -> controllers/submariner/route_agent_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"strconv\"",
          "25:  \"github.com/go-logr/logr\"",
          "26:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "27:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "28:  \"github.com/submariner-io/submariner-operator/pkg/discovery/network\"",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "31:  appsv1 \"k8s.io/api/apps/v1\"",
          "32:  corev1 \"k8s.io/api/core/v1\"",
          "33:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "",
          "[Removed Lines]",
          "30:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/submariner-io/admiral/pkg/names\"",
          "31:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:      Containers: []corev1.Container{",
          "93:       {",
          "94:        Name:            name,",
          "96:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.RouteAgentComponent]),",
          "98:        Command: []string{\"submariner-route-agent.sh\"},",
          "",
          "[Removed Lines]",
          "95:        Image:           getImagePath(cr, names.RouteAgentImage, names.RouteAgentComponent),",
          "",
          "[Added Lines]",
          "96:        Image:           getImagePath(cr, opnames.RouteAgentImage, names.RouteAgentComponent),",
          "",
          "---------------"
        ],
        "controllers/submariner/submariner_controller_test.go||controllers/submariner/submariner_controller_test.go": [
          "File: controllers/submariner/submariner_controller_test.go -> controllers/submariner/submariner_controller_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  . \"github.com/onsi/gomega\"",
          "27:  v1config \"github.com/openshift/api/config/v1\"",
          "28:  \"github.com/submariner-io/admiral/pkg/fake\"",
          "29:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "30:  \"github.com/submariner-io/submariner-operator/controllers/test\"",
          "31:  \"github.com/submariner-io/submariner-operator/controllers/uninstall\"",
          "33:  \"github.com/submariner-io/submariner/pkg/cni\"",
          "34:  appsv1 \"k8s.io/api/apps/v1\"",
          "35:  corev1 \"k8s.io/api/core/v1\"",
          "",
          "[Removed Lines]",
          "32:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/submariner-io/admiral/pkg/names\"",
          "33:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:    t.AssertReconcileSuccess()",
          "218:    serviceDiscovery := &v1alpha1.ServiceDiscovery{}",
          "220:     serviceDiscovery)",
          "221:    Expect(err).To(Succeed())",
          "",
          "[Removed Lines]",
          "219:    err := t.ScopedClient.Get(context.TODO(), types.NamespacedName{Name: names.ServiceDiscoveryCrName, Namespace: submarinerNamespace},",
          "",
          "[Added Lines]",
          "220:    err := t.ScopedClient.Get(context.TODO(), types.NamespacedName{Name: opnames.ServiceDiscoveryCrName, Namespace: submarinerNamespace},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "350:  var deletionTimestamp metav1.Time",
          "352:  BeforeEach(func() {",
          "355:   deletionTimestamp = metav1.Now()",
          "356:   t.submariner.SetDeletionTimestamp(&deletionTimestamp)",
          "",
          "[Removed Lines]",
          "353:   t.submariner.SetFinalizers([]string{names.CleanupFinalizer})",
          "",
          "[Added Lines]",
          "354:   t.submariner.SetFinalizers([]string{opnames.CleanupFinalizer})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "406:    t.AssertReconcileSuccess()",
          "413:    t.awaitSubmarinerDeleted()",
          "415:    t.AssertReconcileSuccess()",
          "417:   })",
          "418:  })",
          "",
          "[Removed Lines]",
          "408:    t.AssertNoDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "409:    t.AssertNoDaemonSet(names.AppendUninstall(names.RouteAgentComponent))",
          "410:    t.AssertNoDaemonSet(names.AppendUninstall(names.GlobalnetComponent))",
          "411:    t.AssertNoDeployment(names.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "416:    t.AssertNoDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "",
          "[Added Lines]",
          "409:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "410:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.RouteAgentComponent))",
          "411:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GlobalnetComponent))",
          "412:    t.AssertNoDeployment(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "417:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "433:    t.UpdateDaemonSetToReady(t.assertUninstallGatewayDaemonSet())",
          "434:    t.UpdateDaemonSetToReady(t.assertUninstallRouteAgentDaemonSet())",
          "439:    t.AssertReconcileSuccess()",
          "444:    t.awaitSubmarinerDeleted()",
          "445:   })",
          "",
          "[Removed Lines]",
          "436:    t.AssertNoDaemonSet(names.AppendUninstall(names.GlobalnetComponent))",
          "437:    t.AssertNoDaemonSet(names.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "441:    t.AssertNoDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "442:    t.AssertNoDaemonSet(names.AppendUninstall(names.RouteAgentComponent))",
          "",
          "[Added Lines]",
          "437:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GlobalnetComponent))",
          "438:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "442:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "443:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.RouteAgentComponent))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "487:    t.AssertReconcileSuccess()",
          "492:    t.awaitSubmarinerDeleted()",
          "493:   })",
          "",
          "[Removed Lines]",
          "489:    t.AssertNoDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "490:    t.AssertNoDaemonSet(names.AppendUninstall(names.RouteAgentComponent))",
          "",
          "[Added Lines]",
          "490:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "491:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.RouteAgentComponent))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "507:    _, err := t.GetDaemonSet(names.GatewayComponent)",
          "508:    Expect(err).To(Succeed())",
          "512:    t.awaitSubmarinerDeleted()",
          "513:   })",
          "",
          "[Removed Lines]",
          "510:    t.AssertNoDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "",
          "[Added Lines]",
          "511:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "522:     &v1alpha1.ServiceDiscovery{",
          "523:      ObjectMeta: metav1.ObjectMeta{",
          "524:       Namespace: submarinerNamespace,",
          "526:      },",
          "527:     })",
          "528:   })",
          "",
          "[Removed Lines]",
          "525:       Name:      names.ServiceDiscoveryCrName,",
          "",
          "[Added Lines]",
          "526:       Name:      opnames.ServiceDiscoveryCrName,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "536:    t.AssertReconcileSuccess()",
          "538:    serviceDiscovery := &v1alpha1.ServiceDiscovery{}",
          "540:     serviceDiscovery)",
          "541:    Expect(errors.IsNotFound(err)).To(BeTrue(), \"ServiceDiscovery still exists\")",
          "",
          "[Removed Lines]",
          "539:    err := t.ScopedClient.Get(context.TODO(), types.NamespacedName{Name: names.ServiceDiscoveryCrName, Namespace: submarinerNamespace},",
          "",
          "[Added Lines]",
          "540:    err := t.ScopedClient.Get(context.TODO(), types.NamespacedName{Name: opnames.ServiceDiscoveryCrName, Namespace: submarinerNamespace},",
          "",
          "---------------"
        ],
        "controllers/submariner/submariner_suite_test.go||controllers/submariner/submariner_suite_test.go": [
          "File: controllers/submariner/submariner_suite_test.go -> controllers/submariner/submariner_suite_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  . \"github.com/onsi/gomega\"",
          "29:  configv1 \"github.com/openshift/api/config/v1\"",
          "30:  \"github.com/submariner-io/admiral/pkg/log/kzerolog\"",
          "31:  \"github.com/submariner-io/admiral/pkg/syncer/broker\"",
          "32:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "33:  submarinerController \"github.com/submariner-io/submariner-operator/controllers/submariner\"",
          "34:  \"github.com/submariner-io/submariner-operator/controllers/test\"",
          "35:  \"github.com/submariner-io/submariner-operator/pkg/discovery/network\"",
          "37:  submarinerv1 \"github.com/submariner-io/submariner/pkg/apis/submariner.io/v1\"",
          "38:  appsv1 \"k8s.io/api/apps/v1\"",
          "39:  apiextensions \"k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1\"",
          "",
          "[Removed Lines]",
          "36:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/submariner-io/admiral/pkg/names\"",
          "37:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100: }",
          "102: func (t *testDriver) awaitFinalizer() {",
          "104: }",
          "106: func (t *testDriver) awaitSubmarinerDeleted() {",
          "",
          "[Removed Lines]",
          "103:  t.AwaitFinalizer(t.submariner, names.CleanupFinalizer)",
          "",
          "[Added Lines]",
          "104:  t.AwaitFinalizer(t.submariner, opnames.CleanupFinalizer)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "121:  Expect(daemonSet.Spec.Template.Spec.Containers).To(HaveLen(1))",
          "122:  Expect(daemonSet.Spec.Template.Spec.Containers[0].Image).To(",
          "125:  t.assertRouteAgentDaemonSetEnv(t.withNetworkDiscovery(), test.EnvMapFrom(daemonSet))",
          "126: }",
          "128: func (t *testDriver) assertUninstallRouteAgentDaemonSet() *appsv1.DaemonSet {",
          "131:  envMap := t.AssertUninstallInitContainer(&daemonSet.Spec.Template,",
          "133:  t.assertRouteAgentDaemonSetEnv(t.withNetworkDiscovery(), envMap)",
          "135:  return daemonSet",
          "",
          "[Removed Lines]",
          "123:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.RouteAgentImage, t.submariner.Spec.Version)))",
          "129:  daemonSet := t.AssertDaemonSet(names.AppendUninstall(names.RouteAgentComponent))",
          "132:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.RouteAgentImage, t.submariner.Spec.Version))",
          "",
          "[Added Lines]",
          "124:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.RouteAgentImage, t.submariner.Spec.Version)))",
          "130:  daemonSet := t.AssertDaemonSet(opnames.AppendUninstall(names.RouteAgentComponent))",
          "133:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.RouteAgentImage, t.submariner.Spec.Version))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "151:  Expect(daemonSet.Spec.Template.Spec.Containers).To(HaveLen(1))",
          "152:  Expect(daemonSet.Spec.Template.Spec.Containers[0].Image).To(",
          "155:  t.assertGatewayDaemonSetEnv(t.withNetworkDiscovery(), test.EnvMapFrom(daemonSet))",
          "156: }",
          "158: func (t *testDriver) assertUninstallGatewayDaemonSet() *appsv1.DaemonSet {",
          "160:  assertGatewayNodeSelector(daemonSet)",
          "162:  envMap := t.AssertUninstallInitContainer(&daemonSet.Spec.Template,",
          "164:  t.assertGatewayDaemonSetEnv(t.withNetworkDiscovery(), envMap)",
          "166:  return daemonSet",
          "",
          "[Removed Lines]",
          "153:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.GatewayImage, t.submariner.Spec.Version)))",
          "159:  daemonSet := t.AssertDaemonSet(names.AppendUninstall(names.GatewayComponent))",
          "163:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.GatewayImage, t.submariner.Spec.Version))",
          "",
          "[Added Lines]",
          "154:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.GatewayImage, t.submariner.Spec.Version)))",
          "160:  daemonSet := t.AssertDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "164:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.GatewayImage, t.submariner.Spec.Version))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "193:  Expect(daemonSet.Spec.Template.Spec.Containers).To(HaveLen(1))",
          "194:  Expect(daemonSet.Spec.Template.Spec.Containers[0].Image).To(",
          "197:  t.assertGlobalnetDaemonSetEnv(t.withNetworkDiscovery(), test.EnvMapFrom(daemonSet))",
          "198: }",
          "200: func (t *testDriver) assertUninstallGlobalnetDaemonSet() *appsv1.DaemonSet {",
          "202:  assertGatewayNodeSelector(daemonSet)",
          "204:  envMap := t.AssertUninstallInitContainer(&daemonSet.Spec.Template,",
          "206:  t.assertGlobalnetDaemonSetEnv(t.withNetworkDiscovery(), envMap)",
          "208:  return daemonSet",
          "",
          "[Removed Lines]",
          "195:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.GlobalnetImage, t.submariner.Spec.Version)))",
          "201:  daemonSet := t.AssertDaemonSet(names.AppendUninstall(names.GlobalnetComponent))",
          "205:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.GlobalnetImage, t.submariner.Spec.Version))",
          "",
          "[Added Lines]",
          "196:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.GlobalnetImage, t.submariner.Spec.Version)))",
          "202:  daemonSet := t.AssertDaemonSet(opnames.AppendUninstall(names.GlobalnetComponent))",
          "206:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.GlobalnetImage, t.submariner.Spec.Version))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "219:  Expect(deployment.Spec.Template.Spec.Containers).To(HaveLen(1))",
          "220:  Expect(deployment.Spec.Template.Spec.Containers[0].Image).To(",
          "223:  t.assertNetworkPluginSyncerDeploymentEnv(t.withNetworkDiscovery(),",
          "224:   test.EnvMapFromVars(deployment.Spec.Template.Spec.Containers[0].Env))",
          "225: }",
          "227: func (t *testDriver) assertUninstallNetworkPluginSyncerDeployment() *appsv1.Deployment {",
          "230:  envMap := t.AssertUninstallInitContainer(&deployment.Spec.Template,",
          "232:  t.assertNetworkPluginSyncerDeploymentEnv(t.withNetworkDiscovery(), envMap)",
          "234:  return deployment",
          "",
          "[Removed Lines]",
          "221:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.NetworkPluginSyncerImage, t.submariner.Spec.Version)))",
          "228:  deployment := t.AssertDeployment(names.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "231:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, names.NetworkPluginSyncerImage, t.submariner.Spec.Version))",
          "",
          "[Added Lines]",
          "222:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.NetworkPluginSyncerImage, t.submariner.Spec.Version)))",
          "229:  deployment := t.AssertDeployment(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "232:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.NetworkPluginSyncerImage, t.submariner.Spec.Version))",
          "",
          "---------------"
        ],
        "controllers/uninstall/uninstall.go||controllers/uninstall/uninstall.go": [
          "File: controllers/uninstall/uninstall.go -> controllers/uninstall/uninstall.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"github.com/coreos/go-semver/semver\"",
          "27:  \"github.com/go-logr/logr\"",
          "28:  \"github.com/pkg/errors\"",
          "30:  appsv1 \"k8s.io/api/apps/v1\"",
          "31:  corev1 \"k8s.io/api/core/v1\"",
          "32:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/submariner-io/admiral/pkg/names\"",
          "30:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:  podSpec.InitContainers = podSpec.Containers",
          "319:  podSpec.InitContainers[0].Env = append(podSpec.InitContainers[0].Env, corev1.EnvVar{Name: ContainerEnvVar, Value: \"true\"})",
          "323:  podSpec.Containers = []corev1.Container{",
          "324:   {",
          "",
          "[Removed Lines]",
          "321:  image, pullPolicy := i.GetImageInfo(names.NettestImage, names.NettestComponent)",
          "",
          "[Added Lines]",
          "322:  image, pullPolicy := i.GetImageInfo(opnames.NettestImage, names.NettestComponent)",
          "",
          "---------------"
        ],
        "pkg/names/names.go||pkg/names/names.go": [
          "File: pkg/names/names.go -> pkg/names/names.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import \"fmt\"",
          "24: const (",
          "37: )",
          "",
          "[Removed Lines]",
          "25:  NetworkPluginSyncerComponent = \"submariner-networkplugin-syncer\"",
          "26:  RouteAgentComponent          = \"submariner-routeagent\"",
          "27:  GatewayComponent             = \"submariner-gateway\"",
          "28:  GlobalnetComponent           = \"submariner-globalnet\"",
          "29:  ServiceDiscoveryComponent    = \"submariner-lighthouse-agent\"",
          "30:  LighthouseCoreDNSComponent   = \"submariner-lighthouse-coredns\"",
          "31:  OperatorComponent            = \"submariner-operator\"",
          "32:  ServiceDiscoveryCrName       = \"service-discovery\"",
          "33:  SubmarinerCrName             = \"submariner\"",
          "34:  MetricsProxyComponent        = \"submariner-metrics-proxy\"",
          "35:  NettestComponent             = \"submariner-nettest\"",
          "36:  CleanupFinalizer             = \"controllers.submariner.io/cleanup\"",
          "",
          "[Added Lines]",
          "25:  ServiceDiscoveryCrName = \"service-discovery\"",
          "26:  SubmarinerCrName       = \"submariner\"",
          "27:  CleanupFinalizer       = \"controllers.submariner.io/cleanup\"",
          "",
          "---------------"
        ],
        "test/e2e/cleanup/submariner.go||test/e2e/cleanup/submariner.go": [
          "File: test/e2e/cleanup/submariner.go -> test/e2e/cleanup/submariner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:  . \"github.com/onsi/ginkgo/v2\"",
          "30:  . \"github.com/onsi/gomega\"",
          "31:  \"github.com/submariner-io/admiral/pkg/watcher\"",
          "32:  \"github.com/submariner-io/shipyard/test/e2e/framework\"",
          "33:  operatorv1alpha1 \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "34:  \"github.com/submariner-io/submariner-operator/controllers/uninstall\"",
          "36:  submarinerclientset \"github.com/submariner-io/submariner/pkg/client/clientset/versioned\"",
          "37:  corev1 \"k8s.io/api/core/v1\"",
          "38:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "",
          "[Removed Lines]",
          "35:  \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "[Added Lines]",
          "31:  \"github.com/submariner-io/admiral/pkg/names\"",
          "36:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:    context.TODO(),",
          "76:    client.ObjectKey{",
          "77:     Namespace: framework.TestContext.SubmarinerNamespace,",
          "79:    },",
          "80:    submariner)",
          "81:   Expect(err).To(Succeed())",
          "",
          "[Removed Lines]",
          "78:     Name:      names.SubmarinerCrName,",
          "",
          "[Added Lines]",
          "79:     Name:      opnames.SubmarinerCrName,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:   brokerRestConfig = getBrokerRestConfig(submariner.Spec.BrokerK8sRemoteNamespace)",
          "84:   Expect(brokerRestConfig).ToNot(BeNil(), \"No broker located\")",
          "89:   if framework.TestContext.GlobalnetEnabled {",
          "91:   }",
          "93:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "94:    names.NetworkPluginSyncerComponent, metav1.GetOptions{})",
          "95:   if err == nil {",
          "97:   }",
          "99:   if submariner.Spec.ServiceDiscoveryEnabled {",
          "101:   }",
          "102:  })",
          "",
          "[Removed Lines]",
          "86:   routeAgentPodMonitor = startPodMonitor(names.AppendUninstall(names.RouteAgentComponent), stopCh)",
          "87:   gatewayPodMonitor = startPodMonitor(names.AppendUninstall(names.GatewayComponent), stopCh)",
          "90:    globalnetPodMonitor = startPodMonitor(names.AppendUninstall(names.GlobalnetComponent), stopCh)",
          "96:    networkPluginSyncerPodMonitor = startPodMonitor(names.AppendUninstall(names.NetworkPluginSyncerComponent), stopCh)",
          "100:    lhAgentAgentPodMonitor = startPodMonitor(names.AppendUninstall(names.ServiceDiscoveryComponent), stopCh)",
          "",
          "[Added Lines]",
          "87:   routeAgentPodMonitor = startPodMonitor(opnames.AppendUninstall(names.RouteAgentComponent), stopCh)",
          "88:   gatewayPodMonitor = startPodMonitor(opnames.AppendUninstall(names.GatewayComponent), stopCh)",
          "91:    globalnetPodMonitor = startPodMonitor(opnames.AppendUninstall(names.GlobalnetComponent), stopCh)",
          "97:    networkPluginSyncerPodMonitor = startPodMonitor(opnames.AppendUninstall(names.NetworkPluginSyncerComponent), stopCh)",
          "101:    lhAgentAgentPodMonitor = startPodMonitor(opnames.AppendUninstall(names.ServiceDiscoveryComponent), stopCh)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "132:     context.TODO(),",
          "133:     client.ObjectKey{",
          "134:      Namespace: framework.TestContext.SubmarinerNamespace,",
          "136:     },",
          "137:     submariner)",
          "138:    return apierrors.IsNotFound(err)",
          "",
          "[Removed Lines]",
          "135:      Name:      names.SubmarinerCrName,",
          "",
          "[Added Lines]",
          "136:      Name:      opnames.SubmarinerCrName,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "146:    context.TODO(),",
          "147:    client.ObjectKey{",
          "148:     Namespace: framework.TestContext.SubmarinerNamespace,",
          "150:    },",
          "151:    serviceDiscovery)",
          "154:   lhAgentAgentPodMonitor.assertUninstallPodsCompleted()",
          "155:   routeAgentPodMonitor.assertUninstallPodsCompleted()",
          "",
          "[Removed Lines]",
          "149:     Name:      names.ServiceDiscoveryCrName,",
          "152:   assertIsNotFound(err, \"ServiceDiscovery\", names.ServiceDiscoveryCrName)",
          "",
          "[Added Lines]",
          "150:     Name:      opnames.ServiceDiscoveryCrName,",
          "153:   assertIsNotFound(err, \"ServiceDiscovery\", opnames.ServiceDiscoveryCrName)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158:   networkPluginSyncerPodMonitor.assertUninstallPodsCompleted()",
          "160:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().DaemonSets(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "164:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().DaemonSets(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "168:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().DaemonSets(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "172:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "176:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "180:   assertNoClusterResources(brokerRestConfig, submariner.Spec.BrokerK8sRemoteNamespace)",
          "181:   assertNoEndpointResources(brokerRestConfig, submariner.Spec.BrokerK8sRemoteNamespace)",
          "",
          "[Removed Lines]",
          "161:    names.AppendUninstall(names.GatewayComponent), metav1.GetOptions{})",
          "162:   assertIsNotFound(err, \"DaemonSet\", names.AppendUninstall(names.GatewayComponent))",
          "165:    names.AppendUninstall(names.RouteAgentComponent), metav1.GetOptions{})",
          "166:   assertIsNotFound(err, \"DaemonSet\", names.AppendUninstall(names.RouteAgentComponent))",
          "169:    names.AppendUninstall(names.GlobalnetComponent), metav1.GetOptions{})",
          "170:   assertIsNotFound(err, \"DaemonSet\", names.AppendUninstall(names.GlobalnetComponent))",
          "173:    names.AppendUninstall(names.NetworkPluginSyncerComponent), metav1.GetOptions{})",
          "174:   assertIsNotFound(err, \"Deployment\", names.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "177:    names.AppendUninstall(names.ServiceDiscoveryComponent), metav1.GetOptions{})",
          "178:   assertIsNotFound(err, \"Deployment\", names.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "[Added Lines]",
          "162:    opnames.AppendUninstall(names.GatewayComponent), metav1.GetOptions{})",
          "163:   assertIsNotFound(err, \"DaemonSet\", opnames.AppendUninstall(names.GatewayComponent))",
          "166:    opnames.AppendUninstall(names.RouteAgentComponent), metav1.GetOptions{})",
          "167:   assertIsNotFound(err, \"DaemonSet\", opnames.AppendUninstall(names.RouteAgentComponent))",
          "170:    opnames.AppendUninstall(names.GlobalnetComponent), metav1.GetOptions{})",
          "171:   assertIsNotFound(err, \"DaemonSet\", opnames.AppendUninstall(names.GlobalnetComponent))",
          "174:    opnames.AppendUninstall(names.NetworkPluginSyncerComponent), metav1.GetOptions{})",
          "175:   assertIsNotFound(err, \"Deployment\", opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "178:    opnames.AppendUninstall(names.ServiceDiscoveryComponent), metav1.GetOptions{})",
          "179:   assertIsNotFound(err, \"Deployment\", opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94716b9cee5ed450f5aa2e5af06bc4128d443967",
      "candidate_info": {
        "commit_hash": "94716b9cee5ed450f5aa2e5af06bc4128d443967",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/94716b9cee5ed450f5aa2e5af06bc4128d443967",
        "files": [
          "config/rbac/submariner-operator/cluster_role.yaml",
          "config/rbac/submariner-operator/role.yaml",
          "controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go",
          "pkg/embeddedyamls/yamls.go"
        ],
        "message": "Restrict operator ClusterRole*, ServiceAccount permissions\n\nThese were added for network-plugin syncer removal so retrict the\ndelete permissions to the networkplugin-syncer resource names.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go": [
          "File: controllers/submariner/migration_test.go -> controllers/submariner/migration_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:        Name:      submariner.NetworkPluginSyncerComponent,",
          "56:       },",
          "57:      },",
          "58:      &rbacv1.ClusterRoleBinding{",
          "59:       ObjectMeta: metav1.ObjectMeta{",
          "60:        Namespace: t.Namespace,",
          "61:        Name:      submariner.NetworkPluginSyncerComponent,",
          "62:       },",
          "63:      },",
          "64:      &corev1.ServiceAccount{",
          "65:       ObjectMeta: metav1.ObjectMeta{",
          "66:        Namespace: t.Namespace,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:      &rbacv1.ClusterRole{",
          "59:       ObjectMeta: metav1.ObjectMeta{",
          "60:        Namespace: t.Namespace,",
          "61:        Name:      \"ocp-submariner-networkplugin-syncer\",",
          "62:       },",
          "63:      },",
          "70:      &rbacv1.ClusterRoleBinding{",
          "71:       ObjectMeta: metav1.ObjectMeta{",
          "72:        Namespace: t.Namespace,",
          "73:        Name:      \"ocp-submariner-networkplugin-syncer\",",
          "74:       },",
          "75:      },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:      },",
          "84:     })",
          "86:     t.AssertNoResource(&corev1.ServiceAccount{",
          "87:      ObjectMeta: metav1.ObjectMeta{",
          "88:       Name: submariner.NetworkPluginSyncerComponent,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     t.AssertNoResource(&rbacv1.ClusterRole{",
          "99:      ObjectMeta: metav1.ObjectMeta{",
          "100:       Name: \"ocp-submariner-networkplugin-syncer\",",
          "101:      },",
          "102:     })",
          "104:     t.AssertNoResource(&rbacv1.ClusterRoleBinding{",
          "105:      ObjectMeta: metav1.ObjectMeta{",
          "106:       Name: \"ocp-submariner-networkplugin-syncer\",",
          "107:      },",
          "108:     })",
          "",
          "---------------"
        ],
        "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
          "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:  deleteAll := func(objs ...client.Object) error {",
          "45:   for _, obj := range objs {",
          "47:    obj.SetNamespace(instance.Namespace)",
          "49:    err := r.config.ScopedClient.Delete(ctx, obj)",
          "",
          "[Removed Lines]",
          "46:    obj.SetName(NetworkPluginSyncerComponent)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:  return deleteAll(",
          "60:   &appsv1.Deployment{",
          "61:    ObjectMeta: metav1.ObjectMeta{",
          "64:    },",
          "65:   },",
          "66:   &rbacv1.ClusterRole{",
          "67:    ObjectMeta: metav1.ObjectMeta{",
          "70:    },",
          "71:   },",
          "72:   &rbacv1.ClusterRoleBinding{",
          "73:    ObjectMeta: metav1.ObjectMeta{",
          "76:    },",
          "77:   },",
          "78:   &rbacv1.ClusterRole{",
          "79:    ObjectMeta: metav1.ObjectMeta{",
          "82:    },",
          "83:   },",
          "84:   &rbacv1.ClusterRoleBinding{",
          "85:    ObjectMeta: metav1.ObjectMeta{",
          "88:    },",
          "89:   },",
          "90:   &corev1.ServiceAccount{",
          "91:    ObjectMeta: metav1.ObjectMeta{",
          "94:    },",
          "95:   },",
          "96:  )",
          "",
          "[Removed Lines]",
          "62:     Namespace: instance.Namespace,",
          "63:     Name:      NetworkPluginSyncerComponent,",
          "68:     Namespace: instance.Namespace,",
          "69:     Name:      NetworkPluginSyncerComponent,",
          "74:     Namespace: instance.Namespace,",
          "75:     Name:      NetworkPluginSyncerComponent,",
          "80:     Namespace: instance.Namespace,",
          "81:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "86:     Namespace: instance.Namespace,",
          "87:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "92:     Namespace: instance.Namespace,",
          "93:     Name:      NetworkPluginSyncerComponent,",
          "",
          "[Added Lines]",
          "61:     Name: NetworkPluginSyncerComponent,",
          "66:     Name: NetworkPluginSyncerComponent,",
          "71:     Name: NetworkPluginSyncerComponent,",
          "76:     Name: \"ocp-submariner-networkplugin-syncer\",",
          "81:     Name: \"ocp-submariner-networkplugin-syncer\",",
          "86:     Name: NetworkPluginSyncerComponent,",
          "",
          "---------------"
        ],
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2622:     resources:",
          "2623:       # Temporarily needed for network-plugin syncer removal",
          "2624:       - serviceaccounts",
          "2625:     verbs:",
          "2626:       - delete",
          "2627:   - apiGroups:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2625:     resourceNames:",
          "2626:       - submariner-networkplugin-syncer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2769:       # Temporarily needed for network-plugin syncer removal",
          "2770:       - clusterroles",
          "2771:       - clusterrolebindings",
          "2772:     verbs:",
          "2773:       - delete",
          "2774: `",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2774:     resourceNames:",
          "2775:       - ocp-submariner-networkplugin-syncer",
          "2776:       - submariner-networkplugin-syncer",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c5eb0ffc7db8d8c0e9e3c52354a55b6e8d5dbfb",
      "candidate_info": {
        "commit_hash": "7c5eb0ffc7db8d8c0e9e3c52354a55b6e8d5dbfb",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/7c5eb0ffc7db8d8c0e9e3c52354a55b6e8d5dbfb",
        "files": [
          "config/rbac/submariner-operator/cluster_role.yaml",
          "config/rbac/submariner-operator/role.yaml",
          "controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go",
          "pkg/embeddedyamls/yamls.go"
        ],
        "message": "Restrict operator ClusterRole*, ServiceAccount permissions\n\nThese were added for network-plugin syncer removal so retrict the\ndelete permissions to the networkplugin-syncer resource names.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go": [
          "File: controllers/submariner/migration_test.go -> controllers/submariner/migration_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:        Name:      submariner.NetworkPluginSyncerComponent,",
          "56:       },",
          "57:      },",
          "58:      &rbacv1.ClusterRoleBinding{",
          "59:       ObjectMeta: metav1.ObjectMeta{",
          "60:        Namespace: t.Namespace,",
          "61:        Name:      submariner.NetworkPluginSyncerComponent,",
          "62:       },",
          "63:      },",
          "64:      &corev1.ServiceAccount{",
          "65:       ObjectMeta: metav1.ObjectMeta{",
          "66:        Namespace: t.Namespace,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:      &rbacv1.ClusterRole{",
          "59:       ObjectMeta: metav1.ObjectMeta{",
          "60:        Namespace: t.Namespace,",
          "61:        Name:      \"ocp-submariner-networkplugin-syncer\",",
          "62:       },",
          "63:      },",
          "70:      &rbacv1.ClusterRoleBinding{",
          "71:       ObjectMeta: metav1.ObjectMeta{",
          "72:        Namespace: t.Namespace,",
          "73:        Name:      \"ocp-submariner-networkplugin-syncer\",",
          "74:       },",
          "75:      },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:      },",
          "84:     })",
          "86:     t.AssertNoResource(&corev1.ServiceAccount{",
          "87:      ObjectMeta: metav1.ObjectMeta{",
          "88:       Name: submariner.NetworkPluginSyncerComponent,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:     t.AssertNoResource(&rbacv1.ClusterRole{",
          "99:      ObjectMeta: metav1.ObjectMeta{",
          "100:       Name: \"ocp-submariner-networkplugin-syncer\",",
          "101:      },",
          "102:     })",
          "104:     t.AssertNoResource(&rbacv1.ClusterRoleBinding{",
          "105:      ObjectMeta: metav1.ObjectMeta{",
          "106:       Name: \"ocp-submariner-networkplugin-syncer\",",
          "107:      },",
          "108:     })",
          "",
          "---------------"
        ],
        "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
          "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:  deleteAll := func(objs ...client.Object) error {",
          "45:   for _, obj := range objs {",
          "47:    obj.SetNamespace(instance.Namespace)",
          "49:    err := r.config.ScopedClient.Delete(ctx, obj)",
          "",
          "[Removed Lines]",
          "46:    obj.SetName(NetworkPluginSyncerComponent)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:  return deleteAll(",
          "60:   &appsv1.Deployment{",
          "61:    ObjectMeta: metav1.ObjectMeta{",
          "64:    },",
          "65:   },",
          "66:   &rbacv1.ClusterRole{",
          "67:    ObjectMeta: metav1.ObjectMeta{",
          "70:    },",
          "71:   },",
          "72:   &rbacv1.ClusterRoleBinding{",
          "73:    ObjectMeta: metav1.ObjectMeta{",
          "76:    },",
          "77:   },",
          "78:   &rbacv1.ClusterRole{",
          "79:    ObjectMeta: metav1.ObjectMeta{",
          "82:    },",
          "83:   },",
          "84:   &rbacv1.ClusterRoleBinding{",
          "85:    ObjectMeta: metav1.ObjectMeta{",
          "88:    },",
          "89:   },",
          "90:   &corev1.ServiceAccount{",
          "91:    ObjectMeta: metav1.ObjectMeta{",
          "94:    },",
          "95:   },",
          "96:  )",
          "",
          "[Removed Lines]",
          "62:     Namespace: instance.Namespace,",
          "63:     Name:      NetworkPluginSyncerComponent,",
          "68:     Namespace: instance.Namespace,",
          "69:     Name:      NetworkPluginSyncerComponent,",
          "74:     Namespace: instance.Namespace,",
          "75:     Name:      NetworkPluginSyncerComponent,",
          "80:     Namespace: instance.Namespace,",
          "81:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "86:     Namespace: instance.Namespace,",
          "87:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "92:     Namespace: instance.Namespace,",
          "93:     Name:      NetworkPluginSyncerComponent,",
          "",
          "[Added Lines]",
          "61:     Name: NetworkPluginSyncerComponent,",
          "66:     Name: NetworkPluginSyncerComponent,",
          "71:     Name: NetworkPluginSyncerComponent,",
          "76:     Name: \"ocp-submariner-networkplugin-syncer\",",
          "81:     Name: \"ocp-submariner-networkplugin-syncer\",",
          "86:     Name: NetworkPluginSyncerComponent,",
          "",
          "---------------"
        ],
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2610:     resources:",
          "2611:       # Temporarily needed for network-plugin syncer removal",
          "2612:       - serviceaccounts",
          "2613:     verbs:",
          "2614:       - delete",
          "2615:   - apiGroups:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2613:     resourceNames:",
          "2614:       - submariner-networkplugin-syncer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2757:       # Temporarily needed for network-plugin syncer removal",
          "2758:       - clusterroles",
          "2759:       - clusterrolebindings",
          "2760:     verbs:",
          "2761:       - delete",
          "2762: `",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2762:     resourceNames:",
          "2763:       - ocp-submariner-networkplugin-syncer",
          "2764:       - submariner-networkplugin-syncer",
          "",
          "---------------"
        ]
      }
    }
  ]
}