{
  "cve_id": "CVE-2016-8749",
  "cve_desc": "Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.",
  "repo": "apache/camel",
  "patch_hash": "235036d2396ae45b6809b72a1983dee33b5ba326",
  "patch_info": {
    "commit_hash": "235036d2396ae45b6809b72a1983dee33b5ba326",
    "repo": "apache/camel",
    "commit_url": "https://github.com/apache/camel/commit/235036d2396ae45b6809b72a1983dee33b5ba326",
    "files": [
      "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
      "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ],
    "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
    "before_after_code_files": [
      "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
      "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ]
  },
  "patch_diff": {
    "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java": [
      "File: components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java -> components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     private String disableFeatures;",
      "70:     private boolean enableJacksonTypeConverter;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     private boolean allowJacksonUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "161:         Class<?> clazz = unmarshalType;",
      "163:         if (type == null && isAllowJmsType()) {",
      "164:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
      "165:         }",
      "",
      "[Removed Lines]",
      "162:         String type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
      "",
      "[Added Lines]",
      "163:         String type = null;",
      "164:         if (allowJacksonUnmarshallType) {",
      "165:             type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
      "166:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "323:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
      "324:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
      "325:     }",
      "327:     public String getEnableFeatures() {",
      "328:         return enableFeatures;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331:     public boolean isAllowJacksonUnmarshallType() {",
      "332:         return allowJacksonUnmarshallType;",
      "333:     }",
      "340:     public void setAllowJacksonUnmarshallType(boolean allowJacksonUnmarshallType) {",
      "341:         this.allowJacksonUnmarshallType = allowJacksonUnmarshallType;",
      "342:     }",
      "",
      "---------------"
    ],
    "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
      "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.camel.component.jackson;",
      "19: import java.util.LinkedHashMap;",
      "21: import org.apache.camel.builder.RouteBuilder;",
      "22: import org.apache.camel.component.mock.MockEndpoint;",
      "23: import org.apache.camel.test.junit4.CamelTestSupport;",
      "24: import org.junit.Test;",
      "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
      "28:     @Test",
      "29:     public void testUnmarshalPojo() throws Exception {",
      "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
      "31:         mock.expectedMessageCount(1);",
      "32:         mock.message(0).body().isInstanceOf(LinkedHashMap.class);",
      "34:         String json = \"{\\\"name\\\":\\\"Camel\\\"}\";",
      "35:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
      "37:         assertMockEndpointsSatisfied();",
      "38:     }",
      "40:     @Override",
      "41:     protected RouteBuilder createRouteBuilder() throws Exception {",
      "42:         return new RouteBuilder() {",
      "44:             @Override",
      "45:             public void configure() throws Exception {",
      "46:                 JacksonDataFormat format = new JacksonDataFormat();",
      "48:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "50:             }",
      "51:         };",
      "52:     }",
      "54: }",
      "",
      "---------------"
    ],
    "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java": [
      "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             @Override",
      "47:             public void configure() throws Exception {",
      "48:                 JacksonDataFormat format = new JacksonDataFormat();",
      "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:                 format.setAllowJacksonUnmarshallType(true);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57d01e2fc8923263df896e9810329ee5b7f9b69e",
      "candidate_info": {
        "commit_hash": "57d01e2fc8923263df896e9810329ee5b7f9b69e",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/57d01e2fc8923263df896e9810329ee5b7f9b69e",
        "files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java": [
          "File: components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java -> components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "71:     private boolean allowJacksonUnmarshallType;",
          "",
          "[Added Lines]",
          "71:     private boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:         Class<?> clazz = unmarshalType;",
          "163:         String type = null;",
          "165:             type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "166:         }",
          "167:         if (type == null && isAllowJmsType()) {",
          "",
          "[Removed Lines]",
          "164:         if (allowJacksonUnmarshallType) {",
          "",
          "[Added Lines]",
          "164:         if (allowUnmarshallType) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "328:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "329:     }",
          "333:     }",
          "",
          "[Removed Lines]",
          "331:     public boolean isAllowJacksonUnmarshallType() {",
          "332:         return allowJacksonUnmarshallType;",
          "",
          "[Added Lines]",
          "331:     public boolean isAllowUnmarshallType() {",
          "332:         return allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "342:     }",
          "344:     public String getEnableFeatures() {",
          "",
          "[Removed Lines]",
          "340:     public void setAllowJacksonUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "341:         this.allowJacksonUnmarshallType = allowJacksonUnmarshallType;",
          "",
          "[Added Lines]",
          "340:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "341:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonDataFormat format = new JacksonDataFormat();",
          "51:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "49:                 format.setAllowJacksonUnmarshallType(true);",
          "",
          "[Added Lines]",
          "49:                 format.setAllowUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10f552643d7e4565104d142bbc160db5a30f9f7e",
      "candidate_info": {
        "commit_hash": "10f552643d7e4565104d142bbc160db5a30f9f7e",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/10f552643d7e4565104d142bbc160db5a30f9f7e",
        "files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java": [
          "File: components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java -> components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowJacksonUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:         Class<?> clazz = unmarshalType;",
          "162:         if (type == null && isAllowJmsType()) {",
          "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "164:         }",
          "",
          "[Removed Lines]",
          "161:         String type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "162:         String type = null;",
          "163:         if (allowJacksonUnmarshallType) {",
          "164:             type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "328:     }",
          "330:     public String getEnableFeatures() {",
          "331:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     public boolean isAllowJacksonUnmarshallType() {",
          "335:         return allowJacksonUnmarshallType;",
          "336:     }",
          "343:     public void setAllowJacksonUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "344:         this.allowJacksonUnmarshallType = allowJacksonUnmarshallType;",
          "345:     }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jackson;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "32:         mock.message(0).body().isInstanceOf(LinkedHashMap.class);",
          "34:         String json = \"{\\\"name\\\":\\\"Camel\\\"}\";",
          "35:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "37:         assertMockEndpointsSatisfied();",
          "38:     }",
          "40:     @Override",
          "41:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "42:         return new RouteBuilder() {",
          "44:             @Override",
          "45:             public void configure() throws Exception {",
          "46:                 JacksonDataFormat format = new JacksonDataFormat();",
          "48:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "50:             }",
          "51:         };",
          "52:     }",
          "54: }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonDataFormat format = new JacksonDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowJacksonUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "abb45b2c2ada2bbb34138230540b37d259c1e98d",
      "candidate_info": {
        "commit_hash": "abb45b2c2ada2bbb34138230540b37d259c1e98d",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/abb45b2c2ada2bbb34138230540b37d259c1e98d",
        "files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java": [
          "File: components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java -> components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowJacksonUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:         Class<?> clazz = unmarshalType;",
          "162:         if (type == null && isAllowJmsType()) {",
          "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "164:         }",
          "",
          "[Removed Lines]",
          "161:         String type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "162:         String type = null;",
          "163:         if (allowJacksonUnmarshallType) {",
          "164:             type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "328:     }",
          "330:     public String getEnableFeatures() {",
          "331:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     public boolean isAllowJacksonUnmarshallType() {",
          "335:         return allowJacksonUnmarshallType;",
          "336:     }",
          "343:     public void setAllowJacksonUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "344:         this.allowJacksonUnmarshallType = allowJacksonUnmarshallType;",
          "345:     }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jackson;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "32:         mock.message(0).body().isInstanceOf(LinkedHashMap.class);",
          "34:         String json = \"{\\\"name\\\":\\\"Camel\\\"}\";",
          "35:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "37:         assertMockEndpointsSatisfied();",
          "38:     }",
          "40:     @Override",
          "41:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "42:         return new RouteBuilder() {",
          "44:             @Override",
          "45:             public void configure() throws Exception {",
          "46:                 JacksonDataFormat format = new JacksonDataFormat();",
          "48:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "50:             }",
          "51:         };",
          "52:     }",
          "54: }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonDataFormat format = new JacksonDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowJacksonUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7567488f844f01d72840f7ab6ca18114a11f20d8",
      "candidate_info": {
        "commit_hash": "7567488f844f01d72840f7ab6ca18114a11f20d8",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/7567488f844f01d72840f7ab6ca18114a11f20d8",
        "files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ],
          "candidate": [
            "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
            "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java"
          ]
        }
      },
      "candidate_diff": {
        "components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java||components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java": [
          "File: components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java -> components/camel-jackson/src/main/java/org/apache/camel/component/jackson/JacksonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     private String enableFeatures;",
          "69:     private String disableFeatures;",
          "70:     private boolean enableJacksonTypeConverter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     private boolean allowJacksonUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:         Class<?> clazz = unmarshalType;",
          "162:         if (type == null && isAllowJmsType()) {",
          "163:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
          "164:         }",
          "",
          "[Removed Lines]",
          "161:         String type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "",
          "[Added Lines]",
          "162:         String type = null;",
          "163:         if (allowJacksonUnmarshallType) {",
          "164:             type = exchange.getIn().getHeader(JacksonConstants.UNMARSHAL_TYPE, String.class);",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "326:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
          "327:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
          "328:     }",
          "330:     public String getEnableFeatures() {",
          "331:         return enableFeatures;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:     public boolean isAllowJacksonUnmarshallType() {",
          "335:         return allowJacksonUnmarshallType;",
          "336:     }",
          "343:     public void setAllowJacksonUnmarshallType(boolean allowJacksonUnmarshallType) {",
          "344:         this.allowJacksonUnmarshallType = allowJacksonUnmarshallType;",
          "345:     }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.camel.component.jackson;",
          "19: import java.util.LinkedHashMap;",
          "21: import org.apache.camel.builder.RouteBuilder;",
          "22: import org.apache.camel.component.mock.MockEndpoint;",
          "23: import org.apache.camel.test.junit4.CamelTestSupport;",
          "24: import org.junit.Test;",
          "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
          "28:     @Test",
          "29:     public void testUnmarshalPojo() throws Exception {",
          "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
          "31:         mock.expectedMessageCount(1);",
          "32:         mock.message(0).body().isInstanceOf(LinkedHashMap.class);",
          "34:         String json = \"{\\\"name\\\":\\\"Camel\\\"}\";",
          "35:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
          "37:         assertMockEndpointsSatisfied();",
          "38:     }",
          "40:     @Override",
          "41:     protected RouteBuilder createRouteBuilder() throws Exception {",
          "42:         return new RouteBuilder() {",
          "44:             @Override",
          "45:             public void configure() throws Exception {",
          "46:                 JacksonDataFormat format = new JacksonDataFormat();",
          "48:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "50:             }",
          "51:         };",
          "52:     }",
          "54: }",
          "",
          "---------------"
        ],
        "components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java": [
          "File: components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jackson/src/test/java/org/apache/camel/component/jackson/JacksonMarshalUnmarshalTypeHeaderTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             @Override",
          "47:             public void configure() throws Exception {",
          "48:                 JacksonDataFormat format = new JacksonDataFormat();",
          "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:                 format.setAllowJacksonUnmarshallType(true);",
          "",
          "---------------"
        ]
      }
    }
  ]
}