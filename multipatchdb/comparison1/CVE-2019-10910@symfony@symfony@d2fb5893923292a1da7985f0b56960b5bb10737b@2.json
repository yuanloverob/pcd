{
  "cve_id": "CVE-2019-10910",
  "cve_desc": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, when service ids allow user input, this could allow for SQL Injection and remote code execution. This is related to symfony/dependency-injection.",
  "repo": "symfony/symfony",
  "patch_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
  "patch_info": {
    "commit_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/d2fb5893923292a1da7985f0b56960b5bb10737b",
    "files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ],
    "message": "[DI] Check service IDs are valid",
    "before_after_code_files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
      "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "58:         $instantiation = 'return';",
      "60:         if ($definition->isShared()) {",
      "62:         }",
      "64:         if (null === $factoryCode) {",
      "",
      "[Removed Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[\\'%s\\'] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', $id);",
      "",
      "[Added Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[%s] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', var_export($id, true));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
      "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "868:     {",
      "869:         $alias = $this->normalizeId($alias);",
      "871:         if (\\is_string($id)) {",
      "872:             $id = new Alias($this->normalizeId($id));",
      "873:         } elseif (!$id instanceof Alias) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "871:         if ('' === $alias || '\\\\' === substr($alias, -1) || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
      "872:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
      "873:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1022:         $id = $this->normalizeId($id);",
      "1024:         unset($this->aliasDefinitions[$id], $this->removedIds[$id]);",
      "1026:         return $this->definitions[$id] = $definition;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1028:         if ('' === $id || '\\\\' === substr($id, -1) || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
      "1029:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
      "1030:         }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
      "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "483:         $instantiation = '';",
      "485:         if (!$isProxyCandidate && $definition->isShared()) {",
      "487:         } elseif (!$isSimpleInstance) {",
      "488:             $instantiation = '$instance';",
      "489:         }",
      "",
      "[Removed Lines]",
      "486:             $instantiation = \"\\$this->services['$id'] = \".($isSimpleInstance ? '' : '$instance');",
      "",
      "[Added Lines]",
      "486:             $instantiation = sprintf('$this->services[%s] = %s', $this->doExport($id), $isSimpleInstance ? '' : '$instance');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "683:     protected function {$methodName}($lazyInitialization)",
      "684:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "682: EOF;",
      "683:             $code = str_replace('*/', ' ', $code).<<<EOF",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "694:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
      "695:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
      "697:         }",
      "699:         if ($definition->isDeprecated()) {",
      "",
      "[Removed Lines]",
      "696:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
      "",
      "[Added Lines]",
      "699:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "768:         $code .= sprintf(<<<'EOTXT'",
      "772:         }",
      "774: EOTXT",
      "775:             ,",
      "776:             'services',",
      "778:         );",
      "780:         return $code;",
      "",
      "[Removed Lines]",
      "770:         if (isset($this->%s['%s'])) {",
      "771:             return $this->%1$s['%2$s'];",
      "777:             $id",
      "",
      "[Added Lines]",
      "773:         if (isset($this->%s[%s])) {",
      "774:             return $this->%1$s[%2$s];",
      "780:             $this->doExport($id)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1530:             if (!$this->container->hasDefinition($service)) {",
      "1531:                 return 'false';",
      "1532:             }",
      "1534:         }",
      "1535:         foreach (ContainerBuilder::getServiceConditionals($value) as $service) {",
      "1536:             if ($this->container->hasDefinition($service) && !$this->container->getDefinition($service)->isPublic()) {",
      "1537:                 continue;",
      "1538:             }",
      "1541:         }",
      "1543:         if (!$conditions) {",
      "",
      "[Removed Lines]",
      "1533:             $conditions[] = sprintf(\"isset(\\$this->services['%s'])\", $service);",
      "1540:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
      "",
      "[Added Lines]",
      "1536:             $conditions[] = sprintf('isset($this->services[%s])', $this->doExport($service));",
      "1543:             $conditions[] = sprintf('$this->has(%s)', $this->doExport($service));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1777:     private function dumpParameter($name)",
      "1778:     {",
      "1779:         if ($this->container->isCompiled() && $this->container->hasParameter($name)) {",
      "1780:             $value = $this->container->getParameter($name);",
      "1781:             $dumpedValue = $this->dumpValue($value, false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1782:         $name = (string) $name;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1785:             }",
      "1787:             if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {",
      "1789:             }",
      "1790:         }",
      "1793:     }",
      "",
      "[Removed Lines]",
      "1788:                 return sprintf(\"\\$this->parameters['%s']\", $name);",
      "1792:         return sprintf(\"\\$this->getParameter('%s')\", $name);",
      "",
      "[Added Lines]",
      "1793:                 return sprintf('$this->parameters[%s]', $this->doExport($name));",
      "1797:         return sprintf('$this->getParameter(%s)', $this->doExport($name));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1814:         if ($this->container->hasDefinition($id) && $definition = $this->container->getDefinition($id)) {",
      "1815:             if ($definition->isSynthetic()) {",
      "1817:             } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1818:                 $code = 'null';",
      "1819:                 if (!$definition->isShared()) {",
      "",
      "[Removed Lines]",
      "1816:                 $code = sprintf('$this->get(\\'%s\\'%s)', $id, null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "[Added Lines]",
      "1821:                 $code = sprintf('$this->get(%s%s)', $this->doExport($id), null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1822:             } elseif ($this->isTrivialInstance($definition)) {",
      "1823:                 $code = substr($this->addNewInstance($definition, '', '', $id), 8, -2);",
      "1824:                 if ($definition->isShared()) {",
      "1826:                 }",
      "1827:                 $code = \"($code)\";",
      "1828:             } elseif ($this->asFiles && $definition->isShared() && !$this->isHotPath($definition)) {",
      "",
      "[Removed Lines]",
      "1825:                     $code = sprintf('$this->services[\\'%s\\'] = %s', $id, $code);",
      "",
      "[Added Lines]",
      "1830:                     $code = sprintf('$this->services[%s] = %s', $this->doExport($id), $code);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1833:         } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1834:             return 'null';",
      "1835:         } elseif (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE !== $reference->getInvalidBehavior()) {",
      "1837:         } else {",
      "1839:         }",
      "1844:     }",
      "",
      "[Removed Lines]",
      "1836:             $code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1838:             $code = sprintf('$this->get(\\'%s\\')', $id);",
      "1843:         return \"\\${(\\$_ = isset(\\$this->services['$id']) ? \\$this->services['$id'] : $code) && false ?: '_'}\";",
      "",
      "[Added Lines]",
      "1841:             $code = sprintf('$this->get(%s, /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $this->doExport($id), ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1843:             $code = sprintf('$this->get(%s)', $this->doExport($id));",
      "1848:         return sprintf(\"\\${(\\$_ = isset(\\$this->services[%s]) ? \\$this->services[%1\\$s] : %s) && false ?: '_'}\", $this->doExport($id), $code);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "195:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
      "196:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "202:     public function testBadAliasId($id)",
      "203:     {",
      "204:         $builder = new ContainerBuilder();",
      "205:         $builder->setAlias($id, 'foo');",
      "206:     }",
      "212:     public function testBadDefinitionId($id)",
      "213:     {",
      "214:         $builder = new ContainerBuilder();",
      "215:         $builder->setDefinition($id, new Definition('Foo'));",
      "216:     }",
      "218:     public function provideBadId()",
      "219:     {",
      "220:         return [",
      "221:             [''],",
      "222:             [\"\\0\"],",
      "223:             [\"\\r\"],",
      "224:             [\"\\n\"],",
      "225:             [\"'\"],",
      "226:             ['ab\\\\'],",
      "227:         ];",
      "228:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:     {",
      "235:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
      "236:         $container = new ContainerBuilder();",
      "237:         $container->register('bar$', 'FooClass')->setPublic(true);",
      "238:         $container->register('bar$!', 'FooClass')->setPublic(true);",
      "239:         $container->compile();",
      "240:         $dumper = new PhpDumper($container);",
      "243:         $this->assertTrue(method_exists($class, 'getBarService'));",
      "244:         $this->assertTrue(method_exists($class, 'getBar2Service'));",
      "245:     }",
      "",
      "[Removed Lines]",
      "241:         eval('?>'.$dumper->dump(['class' => $class]));",
      "",
      "[Added Lines]",
      "237:         $container->setParameter(\"'\", 'oh-no');",
      "238:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
      "244:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_unsupported_characters.php', $dumper->dump(['class' => $class]));",
      "246:         require_once self::$fixturesPath.'/php/services_unsupported_characters.php';",
      "248:         $this->assertTrue(method_exists($class, 'getFooOhNoService'));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:     protected function getFooService()",
      "68:     {",
      "70:     }",
      "",
      "[Removed Lines]",
      "69:         return $this->services['Bar\\Foo'] = new \\Bar\\Foo();",
      "",
      "[Added Lines]",
      "69:         return $this->services['Bar\\\\Foo'] = new \\Bar\\Foo();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:     protected function getFoo2Service()",
      "78:     {",
      "80:     }",
      "81: }",
      "",
      "[Removed Lines]",
      "79:         return $this->services['Foo\\Foo'] = new \\Foo\\Foo();",
      "",
      "[Added Lines]",
      "79:         return $this->services['Foo\\\\Foo'] = new \\Foo\\Foo();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:     protected function getBusService()",
      "90:     {",
      "96:         return $instance;",
      "97:     }",
      "",
      "[Removed Lines]",
      "91:         $this->services['App\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\Handler1']) ? $this->services['App\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\Handler2']) ? $this->services['App\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "91:         $this->services['App\\\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\\\Handler1']) ? $this->services['App\\\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\\\Handler2']) ? $this->services['App\\\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "104:     protected function getDbService()",
      "105:     {",
      "110:         return $instance;",
      "111:     }",
      "",
      "[Removed Lines]",
      "106:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "106:         $this->services['App\\\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "118:     protected function getHandler1Service()",
      "119:     {",
      "124:         }",
      "127:     }",
      "",
      "[Removed Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\Handler1'])) {",
      "123:             return $this->services['App\\Handler1'];",
      "126:         return $this->services['App\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\\\Handler1'])) {",
      "123:             return $this->services['App\\\\Handler1'];",
      "126:         return $this->services['App\\\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "134:     protected function getHandler2Service()",
      "135:     {",
      "140:         }",
      "143:     }",
      "",
      "[Removed Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\Handler2'])) {",
      "139:             return $this->services['App\\Handler2'];",
      "142:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\\\Handler2'])) {",
      "139:             return $this->services['App\\\\Handler2'];",
      "142:         return $this->services['App\\\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:     protected function getProcessorService()",
      "151:     {",
      "156:         }",
      "159:     }",
      "",
      "[Removed Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\Registry']) ? $this->services['App\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\Processor'])) {",
      "155:             return $this->services['App\\Processor'];",
      "158:         return $this->services['App\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "[Added Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\\\Registry']) ? $this->services['App\\\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\\\Processor'])) {",
      "155:             return $this->services['App\\\\Processor'];",
      "158:         return $this->services['App\\\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "166:     protected function getRegistryService()",
      "167:     {",
      "172:         return $instance;",
      "173:     }",
      "",
      "[Removed Lines]",
      "168:         $this->services['App\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\Bus']) ? $this->services['App\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "[Added Lines]",
      "168:         $this->services['App\\\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\\\Bus']) ? $this->services['App\\\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "180:     protected function getSchemaService()",
      "181:     {",
      "186:         }",
      "189:     }",
      "190: }",
      "",
      "[Removed Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\Schema'])) {",
      "185:             return $this->services['App\\Schema'];",
      "188:         return $this->services['App\\Schema'] = new \\App\\Schema($a);",
      "",
      "[Added Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\\\Schema'])) {",
      "185:             return $this->services['App\\\\Schema'];",
      "188:         return $this->services['App\\\\Schema'] = new \\App\\Schema($a);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "88:     protected function getParentNotExistsService()",
      "89:     {",
      "91:     }",
      "",
      "[Removed Lines]",
      "90:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "[Added Lines]",
      "90:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:     protected function getC1Service()",
      "99:     {",
      "101:     }",
      "",
      "[Removed Lines]",
      "100:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "[Added Lines]",
      "100:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "110:         include_once $this->targetDirs[1].'/includes/HotPath/C2.php';",
      "111:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "114:     }",
      "",
      "[Removed Lines]",
      "113:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "113:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "122:     {",
      "123:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "126:     }",
      "128:     public function getParameter($name)",
      "",
      "[Removed Lines]",
      "125:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "[Added Lines]",
      "125:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:         $b = new \\App\\Baz($a);",
      "70:         $b->bar = $a;",
      "74:         $a->foo = $instance;",
      "",
      "[Removed Lines]",
      "72:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "[Added Lines]",
      "72:         $this->services['App\\\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     protected function getRot13EnvVarProcessorService()",
      "69:     {",
      "71:     }",
      "",
      "[Removed Lines]",
      "70:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "[Added Lines]",
      "70:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78:     protected function getContainer_EnvVarProcessorsLocatorService()",
      "79:     {",
      "80:         return $this->services['container.env_var_processors_locator'] = new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['rot13' => function () {",
      "82:         }]);",
      "83:     }",
      "",
      "[Removed Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "[Added Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     protected function getTestServiceSubscriberService()",
      "75:     {",
      "77:     }",
      "",
      "[Removed Lines]",
      "76:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "[Added Lines]",
      "76:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:     protected function getFooServiceService()",
      "85:     {",
      "86:         return $this->services['foo_service'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber((new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition' => function () {",
      "88:         }, 'Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber' => function () {",
      "90:         }, 'bar' => function () {",
      "92:         }, 'baz' => function () {",
      "94:         }]))->withContext('foo_service', $this));",
      "95:     }",
      "",
      "[Removed Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "102:     protected function getCustomDefinitionService()",
      "103:     {",
      "105:     }",
      "106: }",
      "",
      "[Removed Lines]",
      "104:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "[Added Lines]",
      "104:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
      "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
      "5: use Symfony\\Component\\DependencyInjection\\Container;",
      "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
      "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
      "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
      "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
      "17: class Symfony_DI_PhpDumper_Test_Unsupported_Characters extends Container",
      "18: {",
      "19:     private $parameters;",
      "20:     private $targetDirs = [];",
      "22:     public function __construct()",
      "23:     {",
      "24:         $this->parameters = $this->getDefaultParameters();",
      "26:         $this->services = [];",
      "27:         $this->methodMap = [",
      "28:             'bar$' => 'getBarService',",
      "29:             'bar$!' => 'getBar2Service',",
      "30:             'foo*/oh-no' => 'getFooohnoService',",
      "31:         ];",
      "33:         $this->aliases = [];",
      "34:     }",
      "36:     public function getRemovedIds()",
      "37:     {",
      "38:         return [",
      "39:             'Psr\\\\Container\\\\ContainerInterface' => true,",
      "40:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
      "41:         ];",
      "42:     }",
      "44:     public function compile()",
      "45:     {",
      "46:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
      "47:     }",
      "49:     public function isCompiled()",
      "50:     {",
      "51:         return true;",
      "52:     }",
      "54:     public function isFrozen()",
      "55:     {",
      "56:         @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);",
      "58:         return true;",
      "59:     }",
      "66:     protected function getBarService()",
      "67:     {",
      "68:         return $this->services['bar$'] = new \\FooClass();",
      "69:     }",
      "76:     protected function getBar2Service()",
      "77:     {",
      "78:         return $this->services['bar$!'] = new \\FooClass();",
      "79:     }",
      "86:     protected function getFooohnoService()",
      "87:     {",
      "88:         return $this->services['foo*/oh-no'] = new \\FooClass();",
      "89:     }",
      "91:     public function getParameter($name)",
      "92:     {",
      "93:         $name = (string) $name;",
      "94:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "95:             $name = $this->normalizeParameterName($name);",
      "97:             if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "98:                 throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
      "99:             }",
      "100:         }",
      "101:         if (isset($this->loadedDynamicParameters[$name])) {",
      "102:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "103:         }",
      "105:         return $this->parameters[$name];",
      "106:     }",
      "108:     public function hasParameter($name)",
      "109:     {",
      "110:         $name = (string) $name;",
      "111:         $name = $this->normalizeParameterName($name);",
      "113:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
      "114:     }",
      "116:     public function setParameter($name, $value)",
      "117:     {",
      "118:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
      "119:     }",
      "121:     public function getParameterBag()",
      "122:     {",
      "123:         if (null === $this->parameterBag) {",
      "124:             $parameters = $this->parameters;",
      "125:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
      "126:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "127:             }",
      "128:             $this->parameterBag = new FrozenParameterBag($parameters);",
      "129:         }",
      "131:         return $this->parameterBag;",
      "132:     }",
      "134:     private $loadedDynamicParameters = [];",
      "135:     private $dynamicParameters = [];",
      "146:     private function getDynamicParameter($name)",
      "147:     {",
      "148:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
      "149:     }",
      "151:     private $normalizedParameterNames = [];",
      "153:     private function normalizeParameterName($name)",
      "154:     {",
      "155:         if (isset($this->normalizedParameterNames[$normalizedName = strtolower($name)]) || isset($this->parameters[$normalizedName]) || array_key_exists($normalizedName, $this->parameters)) {",
      "156:             $normalizedName = isset($this->normalizedParameterNames[$normalizedName]) ? $this->normalizedParameterNames[$normalizedName] : $normalizedName;",
      "157:             if ((string) $name !== $normalizedName) {",
      "158:                 @trigger_error(sprintf('Parameter names will be made case sensitive in Symfony 4.0. Using \"%s\" instead of \"%s\" is deprecated since Symfony 3.4.', $name, $normalizedName), E_USER_DEPRECATED);",
      "159:             }",
      "160:         } else {",
      "161:             $normalizedName = $this->normalizedParameterNames[$normalizedName] = (string) $name;",
      "162:         }",
      "164:         return $normalizedName;",
      "165:     }",
      "172:     protected function getDefaultParameters()",
      "173:     {",
      "174:         return [",
      "175:             '\\'' => 'oh-no',",
      "176:         ];",
      "177:     }",
      "178: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "98d4dfdadb077e7e8c9959cfa73906487991a78b",
      "candidate_info": {
        "commit_hash": "98d4dfdadb077e7e8c9959cfa73906487991a78b",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/98d4dfdadb077e7e8c9959cfa73906487991a78b",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_non_shared_lazy_as_files.txt"
        ],
        "message": "[DependencyInjection] fix #29930 add $lazyLoad flag to the generated factory code for lazy non-shared services\n\n| Q             | A\n| ------------- | ---\n| Branch?       | 4.1\n| Bug fix?      | yes\n| New feature?  | no\n| BC breaks?    | no\n| Deprecations? | no\n| Tests pass?   | yes\n| Fixed tickets | #29930\n| License       | MIT\n| Doc PR        | n/a\n\nFix #29930  by adding $lazyLoad context to the generated code for lazy non-shared service by PhpDumper",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "687:         $code .= $this->addServiceInclude($id, $definition);",
          "689:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "692:         }",
          "694:         if ($definition->isDeprecated()) {",
          "",
          "[Removed Lines]",
          "690:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
          "691:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
          "",
          "[Added Lines]",
          "690:             $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : \"\\$this->factories['%2$s'](false)\") : '$this->%s(false)';",
          "691:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->export($id)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "862:                     }",
          "863:                     $code[1] = implode(\"\\n\", array_map(function ($line) { return $line ? '    '.$line : $line; }, explode(\"\\n\", $code[1])));",
          "864:                     $factory = sprintf('$this->factories%s[\\'%s\\']', $definition->isPublic() ? '' : \"['service_container']\", $id);",
          "866:                     $code = $code[0].$code[1];",
          "867:                 }",
          "",
          "[Removed Lines]",
          "865:                     $code[1] = sprintf(\"%s = function () {\\n%s};\\n\\nreturn %1\\$s();\\n\", $factory, $code[1]);",
          "",
          "[Added Lines]",
          "865:                     $lazyloadInitialization = $definition->isLazy() ? '$lazyLoad = true' : '';",
          "867:                     $code[1] = sprintf(\"%s = function (%s) {\\n%s};\\n\\nreturn %1\\$s();\\n\", $factory, $lazyloadInitialization, $code[1]);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:         $this->assertStringMatchesFormatFile(self::$fixturesPath.'/php/services9_as_files.txt', $dump);",
          "231:     }",
          "233:     public function testServicesWithAnonymousFactories()",
          "234:     {",
          "235:         $container = include self::$fixturesPath.'/containers/container19.php';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:     public function testNonSharedLazyDumpAsFiles()",
          "234:     {",
          "235:         $container = include self::$fixturesPath.'/containers/container_non_shared_lazy.php';",
          "236:         $container->register('non_shared_foo', \\Bar\\FooLazyClass::class)",
          "237:             ->setFile(realpath(self::$fixturesPath.'/includes/foo_lazy.php'))",
          "238:             ->setShared(false)",
          "239:             ->setPublic(true)",
          "240:             ->setLazy(true);",
          "241:         $container->compile();",
          "242:         $dumper = new PhpDumper($container);",
          "243:         $dump = print_r($dumper->dump(['as_files' => true, 'file' => __DIR__]), true);",
          "245:         if ('\\\\' === \\DIRECTORY_SEPARATOR) {",
          "246:             $dump = str_replace('\\\\\\\\Fixtures\\\\\\\\includes\\\\\\\\foo_lazy.php', '/Fixtures/includes/foo_lazy.php', $dump);",
          "247:         }",
          "248:         $this->assertStringMatchesFormatFile(self::$fixturesPath.'/php/services_non_shared_lazy_as_files.txt', $dump);",
          "249:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container_non_shared_lazy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "5: return new ContainerBuilder();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/includes/foo_lazy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: namespace Bar;",
          "5: class FooLazyClass",
          "6: {",
          "7: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "817992833640d8518f4eba673a792dab634059e9",
      "candidate_info": {
        "commit_hash": "817992833640d8518f4eba673a792dab634059e9",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/817992833640d8518f4eba673a792dab634059e9",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php"
        ],
        "message": "[DI] fix dumping errored definitions",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "794: EOF;",
          "795:         }",
          "812:         if ($asFile) {",
          "813:             $code = implode(\"\\n\", array_map(function ($line) { return $line ? substr($line, 8) : $line; }, explode(\"\\n\", $code)));",
          "",
          "[Removed Lines]",
          "797:         $this->serviceCalls = [];",
          "798:         $this->inlinedDefinitions = $this->getDefinitionsFromArguments([$definition], null, $this->serviceCalls);",
          "800:         if ($definition->isDeprecated()) {",
          "801:             $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "802:         }",
          "804:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "805:             $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : '$this->factories[%2$s](false)') : '$this->%s(false)';",
          "806:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "807:         }",
          "809:         $code .= $this->addServiceInclude($id, $definition);",
          "810:         $code .= $this->addInlineService($id, $definition);",
          "",
          "[Added Lines]",
          "797:         if ($definition->hasErrors() && $e = $definition->getErrors()) {",
          "798:             $this->addThrow = true;",
          "800:             $code .= sprintf(\"        \\$this->throw(%s);\\n\", $this->export(reset($e)));",
          "801:         } else {",
          "802:             $this->serviceCalls = [];",
          "803:             $this->inlinedDefinitions = $this->getDefinitionsFromArguments([$definition], null, $this->serviceCalls);",
          "805:             if ($definition->isDeprecated()) {",
          "806:                 $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "807:             }",
          "809:             if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "810:                 $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : '$this->factories[%2$s](false)') : '$this->%s(false)';",
          "811:                 $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "812:             }",
          "814:             $code .= $this->addServiceInclude($id, $definition);",
          "815:             $code .= $this->addInlineService($id, $definition);",
          "816:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     protected function getFoo4Service()",
          "122:     {",
          "124:     }",
          "125: }",
          "",
          "[Removed Lines]",
          "123:         return $this->privates['foo4'] = new \\stdClass();",
          "",
          "[Added Lines]",
          "123:         $this->throw('BOOM');",
          "124:     }",
          "126:     protected function throw($message)",
          "127:     {",
          "128:         throw new RuntimeException($message);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da50fdb8e2cf4f7714d0dce3c90cb4ddc1ed4d46",
      "candidate_info": {
        "commit_hash": "da50fdb8e2cf4f7714d0dce3c90cb4ddc1ed4d46",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/da50fdb8e2cf4f7714d0dce3c90cb4ddc1ed4d46",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php"
        ],
        "message": "[DI] Deprecate dumping an uncompiled container",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     public function __construct(ContainerBuilder $container)",
          "74:     {",
          "75:         parent::__construct($container);",
          "77:         $this->inlinedDefinitions = new \\SplObjectStorage();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         if (!$container->isFrozen()) {",
          "76:             @trigger_error('Dumping an uncompiled ContainerBuilder is deprecated since version 3.3 and will not be supported anymore in 4.0. Compile the container beforehand.', E_USER_DEPRECATED);",
          "77:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     public function testDump()",
          "37:     {",
          "40:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services1.php', $dumper->dump(), '->dump() dumps an empty container as an empty PHP class');",
          "41:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services1-1.php', $dumper->dump(array('class' => 'Container', 'base_class' => 'AbstractContainer', 'namespace' => 'Symfony\\Component\\DependencyInjection\\Dump')), '->dump() takes a class and a base_class options');",
          "43:         $container = new ContainerBuilder();",
          "44:         new PhpDumper($container);",
          "45:     }",
          "",
          "[Removed Lines]",
          "38:         $dumper = new PhpDumper($container = new ContainerBuilder());",
          "",
          "[Added Lines]",
          "38:         $container = new ContainerBuilder();",
          "39:         $container->compile();",
          "40:         $dumper = new PhpDumper($container);",
          "46:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:     public function testExportParameters($parameters)",
          "99:     {",
          "101:         $dumper->dump();",
          "102:     }",
          "",
          "[Removed Lines]",
          "100:         $dumper = new PhpDumper(new ContainerBuilder(new ParameterBag($parameters)));",
          "",
          "[Added Lines]",
          "103:         $container = new ContainerBuilder(new ParameterBag($parameters));",
          "104:         $container->compile();",
          "105:         $dumper = new PhpDumper($container);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:     public function testAddParameters()",
          "115:     {",
          "116:         $container = include self::$fixturesPath.'/containers/container8.php';",
          "117:         $dumper = new PhpDumper($container);",
          "118:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services8.php', $dumper->dump(), '->dump() dumps parameters');",
          "119:     }",
          "122:     {",
          "124:         $container = include self::$fixturesPath.'/containers/container9.php';",
          "125:         $dumper = new PhpDumper($container);",
          "126:         $this->assertEquals(str_replace('%path%', str_replace('\\\\', '\\\\\\\\', self::$fixturesPath.DIRECTORY_SEPARATOR.'includes'.DIRECTORY_SEPARATOR), file_get_contents(self::$fixturesPath.'/php/services9.php')), $dumper->dump(), '->dump() dumps services');",
          "129:         $container = include self::$fixturesPath.'/containers/container9.php';",
          "130:         $container->compile();",
          "131:         $dumper = new PhpDumper($container);",
          "132:         $this->assertEquals(str_replace('%path%', str_replace('\\\\', '\\\\\\\\', self::$fixturesPath.DIRECTORY_SEPARATOR.'includes'.DIRECTORY_SEPARATOR), file_get_contents(self::$fixturesPath.'/php/services9_compiled.php')), $dumper->dump(), '->dump() dumps services');",
          "135:         $container->register('foo', 'FooClass')->addArgument(new \\stdClass());",
          "136:         try {",
          "137:             $dumper->dump();",
          "138:             $this->fail('->dump() throws a RuntimeException if the container to be dumped has reference to objects or resources');",
          "",
          "[Removed Lines]",
          "121:     public function testAddService()",
          "134:         $dumper = new PhpDumper($container = new ContainerBuilder());",
          "",
          "[Added Lines]",
          "122:         $container->compile();",
          "131:     public function testAddServiceWithoutCompilation()",
          "136:     }",
          "138:     public function testAddService()",
          "139:     {",
          "145:         $container = new ContainerBuilder();",
          "147:         $container->compile();",
          "148:         $dumper = new PhpDumper($container);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145:     public function testServicesWithAnonymousFactories()",
          "146:     {",
          "147:         $container = include self::$fixturesPath.'/containers/container19.php';",
          "148:         $dumper = new PhpDumper($container);",
          "150:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services19.php', $dumper->dump(), '->dump() dumps services with anonymous factories');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "156:         $container = new ContainerBuilder();",
          "157:         $container->register('bar$', 'FooClass');",
          "158:         $container->register('bar$!', 'FooClass');",
          "159:         $dumper = new PhpDumper($container);",
          "160:         eval('?>'.$dumper->dump(array('class' => $class)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "173:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "169:         $container = new ContainerBuilder();",
          "170:         $container->register('foo_bar', 'FooClass');",
          "171:         $container->register('foobar', 'FooClass');",
          "172:         $dumper = new PhpDumper($container);",
          "173:         eval('?>'.$dumper->dump(array('class' => $class)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "182:         $container = new ContainerBuilder();",
          "183:         $container->register('bar', 'FooClass');",
          "184:         $container->register('foo_bar', 'FooClass');",
          "185:         $dumper = new PhpDumper($container);",
          "186:         eval('?>'.$dumper->dump(array(",
          "187:             'class' => $class,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "203:         $def = new Definition('stdClass');",
          "204:         $def->setFactory($factory);",
          "205:         $container->setDefinition('bar', $def);",
          "206:         $dumper = new PhpDumper($container);",
          "207:         $dumper->dump();",
          "208:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:         $container->compile();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "285:     public function testDumpAutowireData()",
          "286:     {",
          "287:         $container = include self::$fixturesPath.'/containers/container24.php';",
          "288:         $dumper = new PhpDumper($container);",
          "290:         $this->assertEquals(file_get_contents(self::$fixturesPath.'/php/services24.php'), $dumper->dump());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306:         $container->compile();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1-1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "",
          "[Removed Lines]",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "",
          "[Added Lines]",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:     public function __construct()",
          "26:     {",
          "28:     }",
          "29: }",
          "",
          "[Removed Lines]",
          "27:         parent::__construct();",
          "",
          "[Added Lines]",
          "27:         $this->services = array();",
          "29:         $this->aliases = array();",
          "30:     }",
          "35:     public function compile()",
          "36:     {",
          "37:         throw new LogicException('You cannot compile a dumped frozen container.');",
          "38:     }",
          "43:     public function isFrozen()",
          "44:     {",
          "45:         return true;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "",
          "[Removed Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "",
          "[Added Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public function __construct()",
          "25:     {",
          "27:     }",
          "28: }",
          "",
          "[Removed Lines]",
          "26:         parent::__construct();",
          "",
          "[Added Lines]",
          "26:         $this->services = array();",
          "28:         $this->aliases = array();",
          "29:     }",
          "34:     public function compile()",
          "35:     {",
          "36:         throw new LogicException('You cannot compile a dumped frozen container.');",
          "37:     }",
          "42:     public function isFrozen()",
          "43:     {",
          "44:         return true;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "",
          "[Removed Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "",
          "[Added Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public function __construct()",
          "25:     {",
          "27:         $this->methodMap = array(",
          "28:             'service_from_anonymous_factory' => 'getServiceFromAnonymousFactoryService',",
          "29:             'service_with_method_call_and_factory' => 'getServiceWithMethodCallAndFactoryService',",
          "30:         );",
          "31:     }",
          "",
          "[Removed Lines]",
          "26:         parent::__construct();",
          "",
          "[Added Lines]",
          "26:         $this->services = array();",
          "32:         $this->aliases = array();",
          "33:     }",
          "38:     public function compile()",
          "39:     {",
          "40:         throw new LogicException('You cannot compile a dumped frozen container.');",
          "41:     }",
          "46:     public function isFrozen()",
          "47:     {",
          "48:         return true;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services24.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "",
          "[Removed Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "",
          "[Added Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public function __construct()",
          "25:     {",
          "27:         $this->methodMap = array(",
          "28:             'foo' => 'getFooService',",
          "29:         );",
          "30:     }",
          "",
          "[Removed Lines]",
          "26:         parent::__construct();",
          "",
          "[Added Lines]",
          "26:         $this->services = array();",
          "31:         $this->aliases = array();",
          "32:     }",
          "37:     public function compile()",
          "38:     {",
          "39:         throw new LogicException('You cannot compile a dumped frozen container.');",
          "40:     }",
          "45:     public function isFrozen()",
          "46:     {",
          "47:         return true;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services8.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "",
          "[Removed Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "",
          "[Added Lines]",
          "8: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public function __construct()",
          "25:     {",
          "27:     }",
          "",
          "[Removed Lines]",
          "26:         parent::__construct(new ParameterBag($this->getDefaultParameters()));",
          "",
          "[Added Lines]",
          "26:         $this->parameters = $this->getDefaultParameters();",
          "28:         $this->services = array();",
          "30:         $this->aliases = array();",
          "31:     }",
          "36:     public function compile()",
          "37:     {",
          "38:         throw new LogicException('You cannot compile a dumped frozen container.');",
          "39:     }",
          "44:     public function isFrozen()",
          "45:     {",
          "46:         return true;",
          "47:     }",
          "52:     public function getParameter($name)",
          "53:     {",
          "54:         $name = strtolower($name);",
          "56:         if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]))) {",
          "57:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "58:         }",
          "59:         if (isset($this->loadedDynamicParameters[$name])) {",
          "60:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "61:         }",
          "63:         return $this->parameters[$name];",
          "64:     }",
          "69:     public function hasParameter($name)",
          "70:     {",
          "71:         $name = strtolower($name);",
          "73:         return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters) || isset($this->loadedDynamicParameters[$name]);",
          "74:     }",
          "79:     public function setParameter($name, $value)",
          "80:     {",
          "81:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
          "82:     }",
          "87:     public function getParameterBag()",
          "88:     {",
          "89:         if (null === $this->parameterBag) {",
          "90:             $parameters = $this->parameters;",
          "91:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
          "92:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "93:             }",
          "94:             $this->parameterBag = new FrozenParameterBag($parameters);",
          "95:         }",
          "97:         return $this->parameterBag;",
          "98:     }",
          "100:     private $loadedDynamicParameters = array();",
          "101:     private $dynamicParameters = array();",
          "112:     private function getDynamicParameter($name)",
          "113:     {",
          "114:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:     protected function getDefaultParameters()",
          "35:     {",
          "36:         return array(",
          "38:             'baz' => 'bar',",
          "40:             'escape' => '@escapeme',",
          "41:             'values' => array(",
          "42:                 0 => true,",
          "",
          "[Removed Lines]",
          "37:             'foo' => '%baz%',",
          "39:             'bar' => 'foo is %%foo bar',",
          "",
          "[Added Lines]",
          "125:             'foo' => 'bar',",
          "127:             'bar' => 'foo is %foo bar',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a854b0a01cedb5299c32e962ece55cf326de03e7",
      "candidate_info": {
        "commit_hash": "a854b0a01cedb5299c32e962ece55cf326de03e7",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/a854b0a01cedb5299c32e962ece55cf326de03e7",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/yaml/services_adawson.yml"
        ],
        "message": "[DI] fix dumping inline services again",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "503:             }",
          "504:         }",
          "510:         return true;",
          "511:     }",
          "",
          "[Removed Lines]",
          "506:         if (false !== strpos($this->dumpLiteralClass($this->dumpValue($definition->getClass())), '$')) {",
          "507:             return false;",
          "508:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "598:         $return = array();",
          "600:         if ($class = $definition->getClass()) {",
          "602:             $return[] = sprintf(0 === strpos($class, '%') ? '@return object A %1$s instance' : '@return \\%s', ltrim($class, '\\\\'));",
          "603:         } elseif ($definition->getFactory()) {",
          "604:             $factory = $definition->getFactory();",
          "605:             if (\\is_string($factory)) {",
          "606:                 $return[] = sprintf('@return object An instance returned by %s()', $factory);",
          "607:             } elseif (\\is_array($factory) && (\\is_string($factory[0]) || $factory[0] instanceof Definition || $factory[0] instanceof Reference)) {",
          "613:             }",
          "614:         }",
          "",
          "[Removed Lines]",
          "601:             $class = $this->container->resolveEnvPlaceholders($class);",
          "608:                 if (\\is_string($factory[0]) || $factory[0] instanceof Reference) {",
          "609:                     $return[] = sprintf('@return object An instance returned by %s::%s()', (string) $factory[0], $factory[1]);",
          "610:                 } elseif ($factory[0] instanceof Definition) {",
          "611:                     $return[] = sprintf('@return object An instance returned by %s::%s()', $factory[0]->getClass(), $factory[1]);",
          "612:                 }",
          "",
          "[Added Lines]",
          "597:             $class = $class instanceof Parameter ? '%'.$class.'%' : $this->container->resolveEnvPlaceholders($class);",
          "604:                 $class = $factory[0] instanceof Definition ? $factory[0]->getClass() : (string) $factory[0];",
          "605:                 $class = $class instanceof Parameter ? '%'.$class.'%' : $this->container->resolveEnvPlaceholders($class);",
          "606:                 $return[] = sprintf('@return object An instance returned by %s::%s()', $class, $factory[1]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "704:             if (\\is_array($argument)) {",
          "705:                 $hasSelfRef = $this->addInlineVariables($head, $tail, $id, $argument, $forConstructor) || $hasSelfRef;",
          "706:             } elseif ($argument instanceof Reference) {",
          "708:             } elseif ($argument instanceof Definition) {",
          "709:                 $hasSelfRef = $this->addInlineService($head, $tail, $id, $argument, $forConstructor) || $hasSelfRef;",
          "710:             }",
          "",
          "[Removed Lines]",
          "707:                 $hasSelfRef = $this->addInlineReference($head, $tail, $id, $this->container->normalizeId($argument), $forConstructor) || $hasSelfRef;",
          "",
          "[Added Lines]",
          "701:                 $hasSelfRef = $this->addInlineReference($head, $id, $this->container->normalizeId($argument), $forConstructor) || $hasSelfRef;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "713:         return $hasSelfRef;",
          "714:     }",
          "717:     {",
          "718:         if ('service_container' === $targetId || isset($this->referenceVariables[$targetId])) {",
          "720:         }",
          "722:         list($callCount, $behavior) = $this->serviceCalls[$targetId];",
          "726:         }",
          "728:         $name = $this->getNextVariableName();",
          "729:         $this->referenceVariables[$targetId] = new Variable($name);",
          "731:         $reference = ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE >= $behavior ? new Reference($targetId, $behavior) : null;",
          "744:         }",
          "748:         if (isset($this->%s['%s'])) {",
          "749:             return $this->%1$s['%2$s'];",
          "",
          "[Removed Lines]",
          "716:     private function addInlineReference(&$head, &$tail, $id, $targetId, $forConstructor)",
          "719:             return isset($this->circularReferences[$id][$targetId]);",
          "724:         if (2 > $callCount && (!$forConstructor || !isset($this->circularReferences[$id][$targetId]))) {",
          "725:             return isset($this->circularReferences[$id][$targetId]);",
          "732:         $code = sprintf(\"        \\$%s = %s;\\n\", $name, $this->getServiceCall($targetId, $reference));",
          "734:         if (!isset($this->circularReferences[$id][$targetId])) {",
          "735:             $head .= $code;",
          "737:             return false;",
          "738:         }",
          "740:         if (!$forConstructor) {",
          "741:             $tail .= $code;",
          "743:             return true;",
          "746:         $head .= $code.sprintf(<<<'EOTXT'",
          "",
          "[Added Lines]",
          "710:     private function addInlineReference(&$code, $id, $targetId, $forConstructor)",
          "712:         $hasSelfRef = isset($this->circularReferences[$id][$targetId]);",
          "715:             return $hasSelfRef;",
          "720:         if (2 > $callCount && (!$hasSelfRef || !$forConstructor)) {",
          "721:             return $hasSelfRef;",
          "728:         $code .= sprintf(\"        \\$%s = %s;\\n\", $name, $this->getServiceCall($targetId, $reference));",
          "730:         if (!$hasSelfRef || !$forConstructor) {",
          "731:             return $hasSelfRef;",
          "734:         $code .= sprintf(<<<'EOTXT'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "767:         $arguments = array($definition->getArguments(), $definition->getFactory());",
          "770:             return $this->addInlineVariables($head, $tail, $id, $arguments, $forConstructor);",
          "771:         }",
          "",
          "[Removed Lines]",
          "769:         if (2 > $this->inlinedDefinitions[$definition] && !$definition->getMethodCalls() && !$definition->getProperties() && !$definition->getConfigurator() && false === strpos($this->dumpValue($definition->getClass()), '$')) {",
          "",
          "[Added Lines]",
          "757:         if (2 > $this->inlinedDefinitions[$definition] && !$definition->getMethodCalls() && !$definition->getProperties() && !$definition->getConfigurator()) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "774:         $this->definitionVariables[$definition] = new Variable($name);",
          "776:         $code = '';",
          "778:         $code .= $this->addNewInstance($definition, '$'.$name, ' = ', $id);",
          "781:         $code = '';",
          "782:         $arguments = array($definition->getProperties(), $definition->getMethodCalls(), $definition->getConfigurator());",
          "",
          "[Removed Lines]",
          "777:         $hasSelfRef = $this->addInlineVariables($code, $tail, $id, $arguments, $forConstructor);",
          "779:         $hasSelfRef ? $tail .= ('' !== $tail ? \"\\n\" : '').$code : $head .= ('' !== $head ? \"\\n\" : '').$code;",
          "",
          "[Added Lines]",
          "765:         if ($forConstructor) {",
          "766:             $hasSelfRef = $this->addInlineVariables($code, $tail, $id, $arguments, $forConstructor);",
          "767:         } else {",
          "768:             $hasSelfRef = $this->addInlineVariables($code, $code, $id, $arguments, $forConstructor);",
          "769:         }",
          "771:         $hasSelfRef && !$forConstructor ? $tail .= ('' !== $tail ? \"\\n\" : '').$code : $head .= ('' !== $head ? \"\\n\" : '').$code;",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:         $this->assertEquals((object) array('p2' => (object) array('p3' => (object) array())), $container->get('foo')->bClone);",
          "864:     }",
          "866:     public function testHotPathOptimizations()",
          "867:     {",
          "868:         $container = include self::$fixturesPath.'/containers/container_inline_requires.php';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "866:     public function testInlineSelfRef()",
          "867:     {",
          "868:         $container = new ContainerBuilder();",
          "870:         $bar = (new Definition('App\\Bar'))",
          "871:             ->setProperty('foo', new Reference('App\\Foo'));",
          "873:         $baz = (new Definition('App\\Baz'))",
          "874:             ->setProperty('bar', $bar)",
          "875:             ->addArgument($bar);",
          "877:         $container->register('App\\Foo')",
          "878:             ->setPublic(true)",
          "879:             ->addArgument($baz);",
          "881:         $passConfig = $container->getCompiler()->getPassConfig();",
          "882:         $container->compile();",
          "884:         $dumper = new PhpDumper($container);",
          "885:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_inline_self_ref.php', $dumper->dump(array('class' => 'Symfony_DI_PhpDumper_Test_Inline_Self_Ref')));",
          "886:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "940:         $this->assertEquals((object) array('foo' => (object) array(123)), $container->get('bar'));",
          "941:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "965:     public function testAdawsonContainer()",
          "966:     {",
          "967:         $container = new ContainerBuilder();",
          "968:         $loader = new YamlFileLoader($container, new FileLocator(self::$fixturesPath.'/yaml'));",
          "969:         $loader->load('services_adawson.yml');",
          "970:         $container->compile();",
          "972:         $dumper = new PhpDumper($container);",
          "973:         $dump = $dumper->dump();",
          "974:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_adawson.php', $dumper->dump());",
          "975:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container19.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: $container = new ContainerBuilder();",
          "10: $container",
          "13:     ->setPublic(true)",
          "14: ;",
          "",
          "[Removed Lines]",
          "11:     ->register('service_from_anonymous_factory', 'Bar\\FooClass')",
          "12:     ->setFactory(array(new Definition('Bar\\FooClass'), 'getInstance'))",
          "",
          "[Added Lines]",
          "10: $container->setParameter('env(FOO)', 'Bar\\FaooClass');",
          "11: $container->setParameter('foo', '%env(FOO)%');",
          "14:     ->register('service_from_anonymous_factory', '%foo%')",
          "15:     ->setFactory(array(new Definition('%foo%'), 'getInstance'))",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services19.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     public function __construct()",
          "23:     {",
          "24:         $this->services = array();",
          "25:         $this->methodMap = array(",
          "26:             'service_from_anonymous_factory' => 'getServiceFromAnonymousFactoryService',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:         $this->parameters = $this->getDefaultParameters();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     protected function getServiceFromAnonymousFactoryService()",
          "64:     {",
          "66:     }",
          "",
          "[Removed Lines]",
          "65:         return $this->services['service_from_anonymous_factory'] = (new \\Bar\\FooClass())->getInstance();",
          "",
          "[Added Lines]",
          "67:         return $this->services['service_from_anonymous_factory'] = (new ${($_ = $this->getEnv('FOO')) && false ?: \"_\"}())->getInstance();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:         return $instance;",
          "80:     }",
          "81: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:     public function getParameter($name)",
          "85:     {",
          "86:         $name = (string) $name;",
          "87:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "88:             $name = $this->normalizeParameterName($name);",
          "90:             if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "91:                 throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "92:             }",
          "93:         }",
          "94:         if (isset($this->loadedDynamicParameters[$name])) {",
          "95:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "96:         }",
          "98:         return $this->parameters[$name];",
          "99:     }",
          "101:     public function hasParameter($name)",
          "102:     {",
          "103:         $name = (string) $name;",
          "104:         $name = $this->normalizeParameterName($name);",
          "106:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "107:     }",
          "109:     public function setParameter($name, $value)",
          "110:     {",
          "111:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
          "112:     }",
          "114:     public function getParameterBag()",
          "115:     {",
          "116:         if (null === $this->parameterBag) {",
          "117:             $parameters = $this->parameters;",
          "118:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
          "119:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "120:             }",
          "121:             $this->parameterBag = new FrozenParameterBag($parameters);",
          "122:         }",
          "124:         return $this->parameterBag;",
          "125:     }",
          "127:     private $loadedDynamicParameters = array(",
          "128:         'foo' => false,",
          "129:     );",
          "130:     private $dynamicParameters = array();",
          "141:     private function getDynamicParameter($name)",
          "142:     {",
          "143:         switch ($name) {",
          "144:             case 'foo': $value = $this->getEnv('FOO'); break;",
          "145:             default: throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
          "146:         }",
          "147:         $this->loadedDynamicParameters[$name] = true;",
          "149:         return $this->dynamicParameters[$name] = $value;",
          "150:     }",
          "152:     private $normalizedParameterNames = array(",
          "153:         'env(foo)' => 'env(FOO)',",
          "154:     );",
          "156:     private function normalizeParameterName($name)",
          "157:     {",
          "158:         if (isset($this->normalizedParameterNames[$normalizedName = strtolower($name)]) || isset($this->parameters[$normalizedName]) || array_key_exists($normalizedName, $this->parameters)) {",
          "159:             $normalizedName = isset($this->normalizedParameterNames[$normalizedName]) ? $this->normalizedParameterNames[$normalizedName] : $normalizedName;",
          "160:             if ((string) $name !== $normalizedName) {",
          "161:                 @trigger_error(sprintf('Parameter names will be made case sensitive in Symfony 4.0. Using \"%s\" instead of \"%s\" is deprecated since Symfony 3.4.', $name, $normalizedName), E_USER_DEPRECATED);",
          "162:             }",
          "163:         } else {",
          "164:             $normalizedName = $this->normalizedParameterNames[$normalizedName] = (string) $name;",
          "165:         }",
          "167:         return $normalizedName;",
          "168:     }",
          "175:     protected function getDefaultParameters()",
          "176:     {",
          "177:         return array(",
          "178:             'env(FOO)' => 'Bar\\\\FaooClass',",
          "179:         );",
          "180:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
          "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "5: use Symfony\\Component\\DependencyInjection\\Container;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "17: class ProjectServiceContainer extends Container",
          "18: {",
          "19:     private $parameters;",
          "20:     private $targetDirs = array();",
          "22:     public function __construct()",
          "23:     {",
          "24:         $this->services = array();",
          "25:         $this->normalizedIds = array(",
          "26:             'app\\\\bus' => 'App\\\\Bus',",
          "27:             'app\\\\db' => 'App\\\\Db',",
          "28:             'app\\\\handler1' => 'App\\\\Handler1',",
          "29:             'app\\\\handler2' => 'App\\\\Handler2',",
          "30:             'app\\\\processor' => 'App\\\\Processor',",
          "31:             'app\\\\registry' => 'App\\\\Registry',",
          "32:             'app\\\\schema' => 'App\\\\Schema',",
          "33:         );",
          "34:         $this->methodMap = array(",
          "35:             'App\\\\Bus' => 'getBusService',",
          "36:             'App\\\\Db' => 'getDbService',",
          "37:             'App\\\\Handler1' => 'getHandler1Service',",
          "38:             'App\\\\Handler2' => 'getHandler2Service',",
          "39:             'App\\\\Processor' => 'getProcessorService',",
          "40:             'App\\\\Registry' => 'getRegistryService',",
          "41:             'App\\\\Schema' => 'getSchemaService',",
          "42:         );",
          "43:         $this->privates = array(",
          "44:             'App\\\\Handler1' => true,",
          "45:             'App\\\\Handler2' => true,",
          "46:             'App\\\\Processor' => true,",
          "47:             'App\\\\Registry' => true,",
          "48:             'App\\\\Schema' => true,",
          "49:         );",
          "51:         $this->aliases = array();",
          "52:     }",
          "54:     public function getRemovedIds()",
          "55:     {",
          "56:         return array(",
          "57:             'App\\\\Handler1' => true,",
          "58:             'App\\\\Handler2' => true,",
          "59:             'App\\\\Processor' => true,",
          "60:             'App\\\\Registry' => true,",
          "61:             'App\\\\Schema' => true,",
          "62:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "63:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "64:         );",
          "65:     }",
          "67:     public function compile()",
          "68:     {",
          "69:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
          "70:     }",
          "72:     public function isCompiled()",
          "73:     {",
          "74:         return true;",
          "75:     }",
          "77:     public function isFrozen()",
          "78:     {",
          "79:         @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);",
          "81:         return true;",
          "82:     }",
          "89:     protected function getBusService()",
          "90:     {",
          "91:         $this->services['App\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
          "93:         $instance->handler1 = ${($_ = isset($this->services['App\\Handler1']) ? $this->services['App\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
          "94:         $instance->handler2 = ${($_ = isset($this->services['App\\Handler2']) ? $this->services['App\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
          "96:         return $instance;",
          "97:     }",
          "104:     protected function getDbService()",
          "105:     {",
          "106:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
          "108:         $instance->schema = ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
          "110:         return $instance;",
          "111:     }",
          "118:     protected function getHandler1Service()",
          "119:     {",
          "120:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
          "122:         if (isset($this->services['App\\Handler1'])) {",
          "123:             return $this->services['App\\Handler1'];",
          "124:         }",
          "126:         return $this->services['App\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
          "127:     }",
          "134:     protected function getHandler2Service()",
          "135:     {",
          "136:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'});",
          "137:     }",
          "144:     protected function getProcessorService()",
          "145:     {",
          "146:         $a = ${($_ = isset($this->services['App\\Registry']) ? $this->services['App\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
          "148:         if (isset($this->services['App\\Processor'])) {",
          "149:             return $this->services['App\\Processor'];",
          "150:         }",
          "152:         return $this->services['App\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
          "153:     }",
          "160:     protected function getRegistryService()",
          "161:     {",
          "162:         $this->services['App\\Registry'] = $instance = new \\App\\Registry();",
          "164:         $instance->processor = array(0 => ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\Bus']) ? $this->services['App\\Bus'] : $this->getBusService()) && false ?: '_'});",
          "166:         return $instance;",
          "167:     }",
          "174:     protected function getSchemaService()",
          "175:     {",
          "176:         $a = ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'};",
          "178:         if (isset($this->services['App\\Schema'])) {",
          "179:             return $this->services['App\\Schema'];",
          "180:         }",
          "182:         return $this->services['App\\Schema'] = new \\App\\Schema($a);",
          "183:     }",
          "184: }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
          "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "5: use Symfony\\Component\\DependencyInjection\\Container;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "17: class Symfony_DI_PhpDumper_Test_Inline_Self_Ref extends Container",
          "18: {",
          "19:     private $parameters;",
          "20:     private $targetDirs = array();",
          "22:     public function __construct()",
          "23:     {",
          "24:         $this->services = array();",
          "25:         $this->normalizedIds = array(",
          "26:             'app\\\\foo' => 'App\\\\Foo',",
          "27:         );",
          "28:         $this->methodMap = array(",
          "29:             'App\\\\Foo' => 'getFooService',",
          "30:         );",
          "32:         $this->aliases = array();",
          "33:     }",
          "35:     public function getRemovedIds()",
          "36:     {",
          "37:         return array(",
          "38:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "39:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "40:         );",
          "41:     }",
          "43:     public function compile()",
          "44:     {",
          "45:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
          "46:     }",
          "48:     public function isCompiled()",
          "49:     {",
          "50:         return true;",
          "51:     }",
          "53:     public function isFrozen()",
          "54:     {",
          "55:         @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);",
          "57:         return true;",
          "58:     }",
          "65:     protected function getFooService()",
          "66:     {",
          "67:         $b = new \\App\\Bar();",
          "68:         $a = new \\App\\Baz($b);",
          "70:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($a);",
          "72:         $b->foo = $instance;",
          "74:         $a->bar = $b;",
          "76:         return $instance;",
          "77:     }",
          "78: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f10413cf34c1cd5eb915a0f8814ac016b1567833",
      "candidate_info": {
        "commit_hash": "f10413cf34c1cd5eb915a0f8814ac016b1567833",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/f10413cf34c1cd5eb915a0f8814ac016b1567833",
        "files": [
          "UPGRADE-5.1.md",
          "UPGRADE-6.0.md",
          "src/Symfony/Component/DependencyInjection/Alias.php",
          "src/Symfony/Component/DependencyInjection/CHANGELOG.md",
          "src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Definition.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php",
          "src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php",
          "src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php",
          "src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php",
          "src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php",
          "src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd",
          "src/Symfony/Component/DependencyInjection/Tests/AliasTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.expected.yml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.expected.yml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_as_files.txt",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_inlined_factories.txt",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/xml/deprecated_alias_definitions.xml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/xml/deprecated_alias_definitions_without_package_and_version.xml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/xml/services9.xml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/xml/services_deprecated.xml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/xml/services_deprecated_without_package_and_version.xml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/yaml/deprecated_alias_definitions.yml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/yaml/deprecated_alias_definitions_without_package_and_version.yml",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/yaml/services9.yml",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php"
        ],
        "message": "[DependencyInjection] improve the deprecation features by handling package+version info",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Alias.php||src/Symfony/Component/DependencyInjection/Alias.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php||src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php",
          "src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php||src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Definition.php||src/Symfony/Component/DependencyInjection/Definition.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php||src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php",
          "src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php||src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php",
          "src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php||src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php",
          "src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php||src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php",
          "src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php||src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php",
          "src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd||src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd",
          "src/Symfony/Component/DependencyInjection/Tests/AliasTest.php||src/Symfony/Component/DependencyInjection/Tests/AliasTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php||src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Alias.php||src/Symfony/Component/DependencyInjection/Alias.php": [
          "File: src/Symfony/Component/DependencyInjection/Alias.php -> src/Symfony/Component/DependencyInjection/Alias.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     private $id;",
          "19:     private $public;",
          "20:     private $private;",
          "24:     private static $defaultDeprecationTemplate = 'The \"%alias_id%\" service alias is deprecated. You should stop using it, as it will be removed in the future.';",
          "",
          "[Removed Lines]",
          "21:     private $deprecated;",
          "22:     private $deprecationTemplate;",
          "",
          "[Added Lines]",
          "21:     private $deprecation = [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:         $this->id = $id;",
          "29:         $this->public = $public;",
          "30:         $this->private = 2 > \\func_num_args();",
          "32:     }",
          "",
          "[Removed Lines]",
          "31:         $this->deprecated = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:     {",
          "99:                 throw new InvalidArgumentException('Invalid characters found in deprecation template.');",
          "100:             }",
          "103:                 throw new InvalidArgumentException('The deprecation template must contain the \"%alias_id%\" placeholder.');",
          "104:             }",
          "107:         }",
          "111:         return $this;",
          "112:     }",
          "114:     public function isDeprecated(): bool",
          "115:     {",
          "117:     }",
          "119:     public function getDeprecationMessage(string $id): string",
          "120:     {",
          "122:     }",
          "",
          "[Removed Lines]",
          "95:     public function setDeprecated(bool $status = true, string $template = null)",
          "97:         if (null !== $template) {",
          "98:             if (preg_match('#[\\r\\n]|\\*/#', $template)) {",
          "102:             if (false === strpos($template, '%alias_id%')) {",
          "106:             $this->deprecationTemplate = $template;",
          "109:         $this->deprecated = $status;",
          "116:         return $this->deprecated;",
          "121:         return str_replace('%alias_id%', $id, $this->deprecationTemplate ?: self::$defaultDeprecationTemplate);",
          "",
          "[Added Lines]",
          "94:     public function setDeprecated(/* string $package, string $version, string $message */)",
          "96:         $args = \\func_get_args();",
          "98:         if (\\func_num_args() < 3) {",
          "99:             trigger_deprecation('symfony/dependency-injection', '5.1', 'The signature of method \"%s()\" requires 3 arguments: \"string $package, string $version, string $message\", not defining them is deprecated.', __METHOD__);",
          "101:             $status = $args[0] ?? true;",
          "103:             if (!$status) {",
          "104:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Passing a null message to un-deprecate a node is deprecated.');",
          "105:             }",
          "107:             $message = (string) ($args[1] ?? null);",
          "108:             $package = $version = '';",
          "109:         } else {",
          "110:             $status = true;",
          "111:             $package = (string) $args[0];",
          "112:             $version = (string) $args[1];",
          "113:             $message = (string) $args[2];",
          "114:         }",
          "116:         if ('' !== $message) {",
          "117:             if (preg_match('#[\\r\\n]|\\*/#', $message)) {",
          "121:             if (false === strpos($message, '%alias_id%')) {",
          "126:         $this->deprecation = $status ? ['package' => $package, 'version' => $version, 'message' => $message ?: self::$defaultDeprecationTemplate] : [];",
          "133:         return (bool) $this->deprecation;",
          "141:         trigger_deprecation('symfony/dependency-injection', '5.1', 'The \"%s()\" method is deprecated, use \"getDeprecation()\" instead.', __METHOD__);",
          "143:         return $this->getDeprecation($id)['message'];",
          "144:     }",
          "149:     public function getDeprecation(string $id): array",
          "150:     {",
          "151:         return [",
          "152:             'package' => $this->deprecation['package'],",
          "153:             'version' => $this->deprecation['version'],",
          "154:             'message' => str_replace('%alias_id%', $id, $this->deprecation['message']),",
          "155:         ];",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php||src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php": [
          "File: src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php -> src/Symfony/Component/DependencyInjection/Compiler/ResolveChildDefinitionsPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:         $def->setMethodCalls($parentDef->getMethodCalls());",
          "103:         $def->setProperties($parentDef->getProperties());",
          "104:         if ($parentDef->isDeprecated()) {",
          "106:         }",
          "107:         $def->setFactory($parentDef->getFactory());",
          "108:         $def->setConfigurator($parentDef->getConfigurator());",
          "",
          "[Removed Lines]",
          "105:             $def->setDeprecated(true, $parentDef->getDeprecationMessage('%service_id%'));",
          "",
          "[Added Lines]",
          "105:             $deprecation = $parentDef->getDeprecation('%service_id%');",
          "106:             $def->setDeprecated($deprecation['package'], $deprecation['version'], $deprecation['message']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:             $def->setLazy($definition->isLazy());",
          "138:         }",
          "139:         if (isset($changes['deprecated'])) {",
          "141:         }",
          "142:         if (isset($changes['autowired'])) {",
          "143:             $def->setAutowired($definition->isAutowired());",
          "",
          "[Removed Lines]",
          "140:             $def->setDeprecated($definition->isDeprecated(), $definition->getDeprecationMessage('%service_id%'));",
          "",
          "[Added Lines]",
          "141:             if ($definition->isDeprecated()) {",
          "142:                 $deprecation = $definition->getDeprecation('%service_id%');",
          "143:                 $def->setDeprecated($deprecation['package'], $deprecation['version'], $deprecation['message']);",
          "144:             } else {",
          "145:                 $def->setDeprecated(false);",
          "146:             }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php||src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php": [
          "File: src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php -> src/Symfony/Component/DependencyInjection/Compiler/ResolveReferencesToAliasesPass.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         $alias = $container->getAlias($id);",
          "64:         if ($alias->isDeprecated()) {",
          "66:         }",
          "68:         $seen = [];",
          "",
          "[Removed Lines]",
          "65:             trigger_deprecation('', '', '%s. It is being referenced by the \"%s\" %s.', rtrim($alias->getDeprecationMessage($id), '. '), $this->currentId, $container->hasDefinition($this->currentId) ? 'service' : 'alias');",
          "",
          "[Added Lines]",
          "65:             $deprecation = $alias->getDeprecation($id);",
          "66:             trigger_deprecation($deprecation['package'], $deprecation['version'], rtrim($deprecation['message'], '. ').'. It is being referenced by the \"%s\" '.($container->hasDefinition($this->currentId) ? 'service.' : 'alias.'), rtrim($deprecation['message'], '. '), $this->currentId);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
          "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "568:             $alias = $this->aliasDefinitions[$id];",
          "570:             if ($alias->isDeprecated()) {",
          "572:             }",
          "574:             return $this->doGet((string) $alias, $invalidBehavior, $inlineServices, $isConstructorArgument);",
          "",
          "[Removed Lines]",
          "571:                 trigger_deprecation('', '', $alias->getDeprecationMessage($id));",
          "",
          "[Added Lines]",
          "571:                 $deprecation = $alias->getDeprecation($id);",
          "572:                 trigger_deprecation($deprecation['package'], $deprecation['version'], $deprecation['message']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1037:         }",
          "1039:         if ($definition->isDeprecated()) {",
          "1041:         }",
          "1043:         if ($tryProxy && $definition->isLazy() && !$tryProxy = !($proxy = $this->proxyInstantiator) || $proxy instanceof RealServiceInstantiator) {",
          "",
          "[Removed Lines]",
          "1040:             trigger_deprecation('', '', $definition->getDeprecationMessage($id));",
          "",
          "[Added Lines]",
          "1041:             $deprecation = $definition->getDeprecation($id);",
          "1042:             trigger_deprecation($deprecation['package'], $deprecation['version'], $deprecation['message']);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Definition.php||src/Symfony/Component/DependencyInjection/Definition.php": [
          "File: src/Symfony/Component/DependencyInjection/Definition.php -> src/Symfony/Component/DependencyInjection/Definition.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     private $file;",
          "27:     private $factory;",
          "28:     private $shared = true;",
          "31:     private $properties = [];",
          "32:     private $calls = [];",
          "33:     private $instanceof = [];",
          "",
          "[Removed Lines]",
          "29:     private $deprecated = false;",
          "30:     private $deprecationTemplate;",
          "",
          "[Added Lines]",
          "29:     private $deprecation = [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "715:     {",
          "718:                 throw new InvalidArgumentException('Invalid characters found in deprecation template.');",
          "719:             }",
          "722:                 throw new InvalidArgumentException('The deprecation template must contain the \"%service_id%\" placeholder.');",
          "723:             }",
          "726:         }",
          "728:         $this->changes['deprecated'] = true;",
          "732:         return $this;",
          "733:     }",
          "",
          "[Removed Lines]",
          "714:     public function setDeprecated(bool $status = true, string $template = null)",
          "716:         if (null !== $template) {",
          "717:             if (preg_match('#[\\r\\n]|\\*/#', $template)) {",
          "721:             if (false === strpos($template, '%service_id%')) {",
          "725:             $this->deprecationTemplate = $template;",
          "730:         $this->deprecated = $status;",
          "",
          "[Added Lines]",
          "715:     public function setDeprecated(/* string $package, string $version, string $message */)",
          "717:         $args = \\func_get_args();",
          "719:         if (\\func_num_args() < 3) {",
          "720:             trigger_deprecation('symfony/dependency-injection', '5.1', 'The signature of method \"%s()\" requires 3 arguments: \"string $package, string $version, string $message\", not defining them is deprecated.', __METHOD__);",
          "722:             $status = $args[0] ?? true;",
          "724:             if (!$status) {",
          "725:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Passing a null message to un-deprecate a node is deprecated.');",
          "726:             }",
          "728:             $message = (string) ($args[1] ?? null);",
          "729:             $package = $version = '';",
          "730:         } else {",
          "731:             $status = true;",
          "732:             $package = (string) $args[0];",
          "733:             $version = (string) $args[1];",
          "734:             $message = (string) $args[2];",
          "735:         }",
          "737:         if ('' !== $message) {",
          "738:             if (preg_match('#[\\r\\n]|\\*/#', $message)) {",
          "742:             if (false === strpos($message, '%service_id%')) {",
          "748:         $this->deprecation = $status ? ['package' => $package, 'version' => $version, 'message' => $message ?: self::$defaultDeprecationTemplate] : [];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "741:     public function isDeprecated()",
          "742:     {",
          "744:     }",
          "753:     public function getDeprecationMessage(string $id)",
          "754:     {",
          "756:     }",
          "",
          "[Removed Lines]",
          "743:         return $this->deprecated;",
          "755:         return str_replace('%service_id%', $id, $this->deprecationTemplate ?: self::$defaultDeprecationTemplate);",
          "",
          "[Added Lines]",
          "761:         return (bool) $this->deprecation;",
          "775:         trigger_deprecation('symfony/dependency-injection', '5.1', 'The \"%s()\" method is deprecated, use \"getDeprecation()\" instead.', __METHOD__);",
          "777:         return $this->getDeprecation($id)['message'];",
          "778:     }",
          "783:     public function getDeprecation(string $id): array",
          "784:     {",
          "785:         return [",
          "786:             'package' => $this->deprecation['package'],",
          "787:             'version' => $this->deprecation['version'],",
          "788:             'message' => str_replace('%service_id%', $id, $this->deprecation['message']),",
          "789:         ];",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "786:                 $return[] = '';",
          "787:             }",
          "790:         }",
          "792:         $return = str_replace(\"\\n     * \\n\", \"\\n     *\\n\", implode(\"\\n     * \", $return));",
          "",
          "[Removed Lines]",
          "789:             $return[] = sprintf('@deprecated %s', $definition->getDeprecationMessage($id));",
          "",
          "[Added Lines]",
          "789:             $deprecation = $definition->getDeprecation($id);",
          "790:             $return[] = sprintf('@deprecated %s', ($deprecation['package'] || $deprecation['version'] ? \"Since {$deprecation['package']} {$deprecation['version']}: \" : '').$deprecation['message']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "835:             $this->inlinedDefinitions = $this->getDefinitionsFromArguments([$definition], null, $this->serviceCalls);",
          "837:             if ($definition->isDeprecated()) {",
          "839:             } else {",
          "840:                 foreach ($this->inlinedDefinitions as $def) {",
          "841:                     foreach ($this->getClasses($def) as $class) {",
          "",
          "[Removed Lines]",
          "838:                 $code .= sprintf(\"        trigger_deprecation('', '', %s);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "",
          "[Added Lines]",
          "839:                 $deprecation = $definition->getDeprecation($id);",
          "840:                 $code .= sprintf(\"        trigger_deprecation(%s, %s, %s);\\n\\n\", $this->export($deprecation['package']), $this->export($deprecation['version']), $this->export($deprecation['message']));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1341:             $id = (string) $definition;",
          "1342:             $methodNameAlias = $this->generateMethodName($alias);",
          "1343:             $idExported = $this->export($id);",
          "1345:             $code .= <<<EOF",
          "",
          "[Removed Lines]",
          "1344:             $messageExported = $this->export($definition->getDeprecationMessage($alias));",
          "",
          "[Added Lines]",
          "1346:             $deprecation = $definition->getDeprecation($alias);",
          "1347:             $packageExported = $this->export($deprecation['package']);",
          "1348:             $versionExported = $this->export($deprecation['version']);",
          "1349:             $messageExported = $this->export($deprecation['message']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1352:     protected function {$methodNameAlias}()",
          "1353:     {",
          "1356:         return \\$this->get($idExported);",
          "1357:     }",
          "",
          "[Removed Lines]",
          "1354:         trigger_deprecation('', '', $messageExported);",
          "",
          "[Added Lines]",
          "1359:         trigger_deprecation($packageExported, $versionExported, $messageExported);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php||src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/XmlDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         }",
          "181:         if ($definition->isDeprecated()) {",
          "182:             $deprecated = $this->document->createElement('deprecated');",
          "185:             $service->appendChild($deprecated);",
          "186:         }",
          "",
          "[Removed Lines]",
          "183:             $deprecated->appendChild($this->document->createTextNode($definition->getDeprecationMessage('%service_id%')));",
          "",
          "[Added Lines]",
          "182:             $deprecation = $definition->getDeprecation('%service_id%');",
          "184:             $deprecated->appendChild($this->document->createTextNode($definition->getDeprecation('%service_id%')['message']));",
          "185:             $deprecated->setAttribute('package', $deprecation['package']);",
          "186:             $deprecated->setAttribute('version', $deprecation['version']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:         }",
          "227:         if ($id->isDeprecated()) {",
          "228:             $deprecated = $this->document->createElement('deprecated');",
          "231:             $service->appendChild($deprecated);",
          "232:         }",
          "",
          "[Removed Lines]",
          "229:             $deprecated->appendChild($this->document->createTextNode($id->getDeprecationMessage('%alias_id%')));",
          "",
          "[Added Lines]",
          "231:             $deprecation = $id->getDeprecation('%alias_id%');",
          "233:             $deprecated->setAttribute('message', $deprecation['message']);",
          "234:             $deprecated->setAttribute('package', $deprecation['package']);",
          "235:             $deprecated->setAttribute('version', $deprecation['version']);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php||src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/YamlDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:         }",
          "99:         if ($definition->isDeprecated()) {",
          "101:         }",
          "103:         if ($definition->isAutowired()) {",
          "",
          "[Removed Lines]",
          "100:             $code .= sprintf(\"        deprecated: %s\\n\", $this->dumper->dump($definition->getDeprecationMessage('%service_id%')));",
          "",
          "[Added Lines]",
          "100:             $code .= \"        deprecated:\\n\";",
          "101:             foreach ($definition->getDeprecation('%service_id%') as $key => $value) {",
          "102:                 if ('' !== $value) {",
          "103:                     $code .= sprintf(\"            %s: %s\\n\", $key, $this->dumper->dump($value));",
          "104:                 }",
          "105:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:     private function addServiceAlias(string $alias, Alias $id): string",
          "164:     {",
          "167:         if ($id->isPrivate()) {",
          "168:             return sprintf(\"    %s: '@%s'\\n%s\", $alias, $id, $deprecated);",
          "",
          "[Removed Lines]",
          "165:         $deprecated = $id->isDeprecated() ? sprintf(\"        deprecated: %s\\n\", $id->getDeprecationMessage('%alias_id%')) : '';",
          "",
          "[Added Lines]",
          "170:         $deprecated = '';",
          "172:         if ($id->isDeprecated()) {",
          "173:             $deprecated = \"        deprecated:\\n\";",
          "175:             foreach ($id->getDeprecation('%alias_id%') as $key => $value) {",
          "176:                 if ('' !== $value) {",
          "177:                     $deprecated .= sprintf(\"            %s: %s\\n\", $key, $value);",
          "178:                 }",
          "179:             }",
          "180:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php||src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php": [
          "File: src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php -> src/Symfony/Component/DependencyInjection/Loader/Configurator/Traits/DeprecateTrait.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     {",
          "31:         return $this;",
          "32:     }",
          "",
          "[Removed Lines]",
          "27:     final public function deprecate(string $template = null): self",
          "29:         $this->definition->setDeprecated(true, $template);",
          "",
          "[Added Lines]",
          "29:     final public function deprecate(/* string $package, string $version, string $message */): self",
          "31:         $args = \\func_get_args();",
          "32:         $package = $version = $message = '';",
          "34:         if (\\func_num_args() < 3) {",
          "35:             trigger_deprecation('symfony/dependency-injection', '5.1', 'The signature of method \"%s()\" requires 3 arguments: \"string $package, string $version, string $message\", not defining them is deprecated.', __METHOD__);",
          "37:             $message = (string) ($args[0] ?? null);",
          "38:         } else {",
          "39:             $package = (string) $args[0];",
          "40:             $version = (string) $args[1];",
          "41:             $message = (string) $args[2];",
          "42:         }",
          "44:         $this->definition->setDeprecated($package, $version, $message);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php||src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php": [
          "File: src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php -> src/Symfony/Component/DependencyInjection/Loader/XmlFileLoader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:             }",
          "207:             if ($deprecated = $this->getChildren($service, 'deprecated')) {",
          "209:             }",
          "211:             return null;",
          "",
          "[Removed Lines]",
          "208:                 $alias->setDeprecated(true, $deprecated[0]->nodeValue ?: null);",
          "",
          "[Added Lines]",
          "208:                 $message = $deprecated[0]->nodeValue ?: '';",
          "209:                 $package = $deprecated[0]->getAttribute('package') ?: '';",
          "210:                 $version = $deprecated[0]->getAttribute('version') ?: '';",
          "212:                 if (!$deprecated[0]->hasAttribute('package')) {",
          "213:                     trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"package\" of the node \"deprecated\" is deprecated.');",
          "214:                 }",
          "216:                 if (!$deprecated[0]->hasAttribute('version')) {",
          "217:                     trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"version\" of the node \"deprecated\" is deprecated.');",
          "218:                 }",
          "220:                 $alias->setDeprecated($package, $version, $message);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "284:         }",
          "286:         if ($deprecated = $this->getChildren($service, 'deprecated')) {",
          "288:         }",
          "290:         $definition->setArguments($this->getArgumentsAsPhp($service, 'argument', $file, $definition instanceof ChildDefinition));",
          "",
          "[Removed Lines]",
          "287:             $definition->setDeprecated(true, $deprecated[0]->nodeValue ?: null);",
          "",
          "[Added Lines]",
          "299:             $message = $deprecated[0]->nodeValue ?: '';",
          "300:             $package = $deprecated[0]->getAttribute('package') ?: '';",
          "301:             $version = $deprecated[0]->getAttribute('version') ?: '';",
          "303:             if ('' === $package) {",
          "304:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"package\" of the node \"deprecated\" is deprecated.');",
          "305:             }",
          "307:             if ('' === $version) {",
          "308:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"version\" of the node \"deprecated\" is deprecated.');",
          "309:             }",
          "311:             $definition->setDeprecated($package, $version, $message);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php||src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php": [
          "File: src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php -> src/Symfony/Component/DependencyInjection/Loader/YamlFileLoader.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:                 }",
          "360:                 if ('deprecated' === $key) {",
          "362:                 }",
          "363:             }",
          "",
          "[Removed Lines]",
          "361:                     $alias->setDeprecated(true, $value);",
          "",
          "[Added Lines]",
          "361:                     $deprecation = \\is_array($value) ? $value : ['message' => $value];",
          "363:                     if (!isset($deprecation['package'])) {",
          "364:                         trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"package\" of the \"deprecated\" option is deprecated.');",
          "365:                     }",
          "367:                     if (!isset($deprecation['version'])) {",
          "368:                         trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"version\" of the \"deprecated\" option is deprecated.');",
          "369:                     }",
          "371:                     $alias->setDeprecated($deprecation['package'] ?? '', $deprecation['version'] ?? '', $deprecation['message']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "435:         }",
          "437:         if (\\array_key_exists('deprecated', $service)) {",
          "439:         }",
          "441:         if (isset($service['factory'])) {",
          "",
          "[Removed Lines]",
          "438:             $definition->setDeprecated(true, $service['deprecated']);",
          "",
          "[Added Lines]",
          "448:             $deprecation = \\is_array($service['deprecated']) ? $service['deprecated'] : ['message' => $service['deprecated']];",
          "450:             if (!isset($deprecation['package'])) {",
          "451:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"package\" of the \"deprecated\" option is deprecated.');",
          "452:             }",
          "454:             if (!isset($deprecation['version'])) {",
          "455:                 trigger_deprecation('symfony/dependency-injection', '5.1', 'Not setting the attribute \"version\" of the \"deprecated\" option is deprecated.');",
          "456:             }",
          "458:             $definition->setDeprecated($deprecation['package'] ?? '', $deprecation['version'] ?? '', $deprecation['message']);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd||src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd": [
          "File: src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd -> src/Symfony/Component/DependencyInjection/Loader/schema/dic/services/services-1.0.xsd",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:       <xsd:element name=\"argument\" type=\"argument\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "114:       <xsd:element name=\"configurator\" type=\"callable\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "115:       <xsd:element name=\"factory\" type=\"callable\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "117:       <xsd:element name=\"call\" type=\"call\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "118:       <xsd:element name=\"tag\" type=\"tag\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "119:       <xsd:element name=\"property\" type=\"property\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "",
          "[Removed Lines]",
          "116:       <xsd:element name=\"deprecated\" type=\"xsd:string\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "",
          "[Added Lines]",
          "116:       <xsd:element name=\"deprecated\" type=\"deprecated\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:       <xsd:element name=\"argument\" type=\"argument\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "158:       <xsd:element name=\"configurator\" type=\"callable\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "159:       <xsd:element name=\"factory\" type=\"callable\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "161:       <xsd:element name=\"call\" type=\"call\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "162:       <xsd:element name=\"tag\" type=\"tag\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "163:       <xsd:element name=\"property\" type=\"property\" minOccurs=\"0\" maxOccurs=\"unbounded\" />",
          "",
          "[Removed Lines]",
          "160:       <xsd:element name=\"deprecated\" type=\"xsd:string\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "",
          "[Added Lines]",
          "160:       <xsd:element name=\"deprecated\" type=\"deprecated\" minOccurs=\"0\" maxOccurs=\"1\" />",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:     <xsd:anyAttribute namespace=\"##any\" processContents=\"lax\" />",
          "182:   </xsd:complexType>",
          "184:   <xsd:complexType name=\"parameters\">",
          "185:     <xsd:choice minOccurs=\"1\" maxOccurs=\"unbounded\">",
          "186:       <xsd:element name=\"parameter\" type=\"parameter\" />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184:   <xsd:complexType name=\"deprecated\">",
          "185:     <xsd:simpleContent>",
          "186:       <xsd:extension base=\"xsd:string\">",
          "187:         <!-- In Symfony 6, make these attributes required -->",
          "188:         <xsd:attribute name=\"package\" type=\"xsd:string\" />",
          "189:         <xsd:attribute name=\"version\" type=\"xsd:string\" />",
          "190:       </xsd:extension>",
          "191:     </xsd:simpleContent>",
          "192:   </xsd:complexType>",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/AliasTest.php||src/Symfony/Component/DependencyInjection/Tests/AliasTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/AliasTest.php -> src/Symfony/Component/DependencyInjection/Tests/AliasTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public function testCanDeprecateAnAlias()",
          "53:     {",
          "54:         $alias = new Alias('foo', false);",
          "57:         $this->assertTrue($alias->isDeprecated());",
          "58:     }",
          "60:     public function testItHasADefaultDeprecationMessage()",
          "61:     {",
          "62:         $alias = new Alias('foo', false);",
          "63:         $alias->setDeprecated();",
          "65:         $expectedMessage = 'The \"foo\" service alias is deprecated. You should stop using it, as it will be removed in the future.';",
          "67:     }",
          "70:     {",
          "71:         $alias = new Alias('foo', false);",
          "76:     }",
          "78:     public function testCanOverrideDeprecation()",
          "79:     {",
          "80:         $alias = new Alias('foo', false);",
          "82:         $this->assertTrue($alias->isDeprecated());",
          "84:         $alias->setDeprecated(false);",
          "",
          "[Removed Lines]",
          "55:         $alias->setDeprecated(true, 'The %alias_id% service is deprecated.');",
          "66:         $this->assertEquals($expectedMessage, $alias->getDeprecationMessage('foo'));",
          "69:     public function testReturnsCorrectDeprecationMessage()",
          "72:         $alias->setDeprecated(true, 'The \"%alias_id%\" is deprecated.');",
          "74:         $expectedMessage = 'The \"foo\" is deprecated.';",
          "75:         $this->assertEquals($expectedMessage, $alias->getDeprecationMessage('foo'));",
          "81:         $alias->setDeprecated();",
          "",
          "[Added Lines]",
          "55:         $alias->setDeprecated('vendor/package', '1.1', 'The %alias_id% service is deprecated.');",
          "70:         $this->assertEquals($expectedMessage, $alias->getDeprecation('foo')['message']);",
          "77:     public function testSetDeprecatedWithoutPackageAndVersion()",
          "78:     {",
          "79:         $def = new Alias('stdClass');",
          "80:         $def->setDeprecated(true, '%alias_id%');",
          "82:         $deprecation = $def->getDeprecation('deprecated_alias');",
          "83:         $this->assertSame('deprecated_alias', $deprecation['message']);",
          "84:         $this->assertSame('', $deprecation['package']);",
          "85:         $this->assertSame('', $deprecation['version']);",
          "86:     }",
          "88:     public function testReturnsCorrectDeprecation()",
          "91:         $alias->setDeprecated('vendor/package', '1.1', 'The \"%alias_id%\" is deprecated.');",
          "93:         $deprecation = $alias->getDeprecation('foo');",
          "94:         $this->assertEquals('The \"foo\" is deprecated.', $deprecation['message']);",
          "95:         $this->assertEquals('vendor/package', $deprecation['package']);",
          "96:         $this->assertEquals('1.1', $deprecation['version']);",
          "107:         $alias->setDeprecated('vendor/package', '1.1', 'The \"%alias_id%\" is deprecated.');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:     {",
          "93:         $this->expectException('Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException');",
          "94:         $def = new Alias('foo');",
          "96:     }",
          "98:     public function invalidDeprecationMessageProvider()",
          "",
          "[Removed Lines]",
          "95:         $def->setDeprecated(true, $message);",
          "",
          "[Added Lines]",
          "121:         $def->setDeprecated('package', '1.1', $message);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php -> src/Symfony/Component/DependencyInjection/Tests/Compiler/AutowirePassTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "679:     public function testProcessDoesNotTriggerDeprecations()",
          "680:     {",
          "681:         $container = new ContainerBuilder();",
          "683:         $container->register('foo', Foo::class);",
          "684:         $container->register('bar', Bar::class)->setAutowired(true);",
          "",
          "[Removed Lines]",
          "682:         $container->register('deprecated', 'Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\DeprecatedClass')->setDeprecated(true);",
          "",
          "[Added Lines]",
          "682:         $container->register('deprecated', 'Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\DeprecatedClass')->setDeprecated('vendor/package', '1.1', '%service_id%');",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php -> src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveChildDefinitionsPassTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     {",
          "299:         $container = new ContainerBuilder();",
          "300:         $container->register('deprecated_parent')",
          "302:         ;",
          "304:         $container->setDefinition('decorated_deprecated_parent', new ChildDefinition('deprecated_parent'));",
          "",
          "[Removed Lines]",
          "301:             ->setDeprecated(true)",
          "",
          "[Added Lines]",
          "301:             ->setDeprecated('vendor/package', '1.1', '%service_id%')",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php||src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php -> src/Symfony/Component/DependencyInjection/Tests/Compiler/ResolveHotPathPassTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:             ->addArgument(new Reference('lazy'))",
          "42:             ->addArgument(new Reference('lazy'));",
          "43:         $container->register('buz');",
          "47:         (new ResolveHotPathPass())->process($container);",
          "",
          "[Removed Lines]",
          "44:         $container->register('deprec_with_tag')->setDeprecated()->addTag('container.hot_path');",
          "45:         $container->register('deprec_ref_notag')->setDeprecated();",
          "",
          "[Added Lines]",
          "44:         $container->register('deprec_with_tag')->setDeprecated('vendor/package', '1.1', '%service_id%')->addTag('container.hot_path');",
          "45:         $container->register('deprec_ref_notag')->setDeprecated('vendor/package', '1.1', '%service_id%');",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php||src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php -> src/Symfony/Component/DependencyInjection/Tests/DefinitionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:     {",
          "175:         $def = new Definition('stdClass');",
          "176:         $this->assertFalse($def->isDeprecated(), '->isDeprecated() returns false by default');",
          "178:         $this->assertTrue($def->isDeprecated(), '->isDeprecated() returns true if the instance should not be used anymore.');",
          "180:         $def->setDeprecated(true, '%service_id%');",
          "182:     }",
          "",
          "[Removed Lines]",
          "177:         $this->assertSame($def, $def->setDeprecated(true), '->setDeprecated() implements a fluent interface');",
          "181:         $this->assertSame('deprecated_service', $def->getDeprecationMessage('deprecated_service'), '->getDeprecationMessage() should return given formatted message template');",
          "",
          "[Added Lines]",
          "177:         $this->assertSame($def, $def->setDeprecated('vendor/package', '1.1', '%service_id%'), '->setDeprecated() implements a fluent interface');",
          "180:         $deprecation = $def->getDeprecation('deprecated_service');",
          "181:         $this->assertSame('deprecated_service', $deprecation['message'], '->getDeprecation() should return an array with the formatted message template');",
          "182:         $this->assertSame('vendor/package', $deprecation['package']);",
          "183:         $this->assertSame('1.1', $deprecation['version']);",
          "184:     }",
          "190:     public function testSetDeprecatedWithoutPackageAndVersion()",
          "191:     {",
          "192:         $def = new Definition('stdClass');",
          "195:         $deprecation = $def->getDeprecation('deprecated_service');",
          "196:         $this->assertSame('deprecated_service', $deprecation['message']);",
          "197:         $this->assertSame('', $deprecation['package']);",
          "198:         $this->assertSame('', $deprecation['version']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:     {",
          "189:         $this->expectException('Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException');",
          "190:         $def = new Definition('stdClass');",
          "192:     }",
          "194:     public function invalidDeprecationMessageProvider()",
          "",
          "[Removed Lines]",
          "191:         $def->setDeprecated(false, $message);",
          "",
          "[Added Lines]",
          "208:         $def->setDeprecated('vendor/package', '1.1', $message);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "341:         $def->setAutowired(true);",
          "342:         $def->setConfigurator('configuration_func');",
          "343:         $def->setDecoratedService(null);",
          "345:         $def->setFactory('factory_func');",
          "346:         $def->setFile('foo.php');",
          "347:         $def->setLazy(true);",
          "",
          "[Removed Lines]",
          "344:         $def->setDeprecated(true);",
          "",
          "[Added Lines]",
          "361:         $def->setDeprecated('vendor/package', '1.1', '%service_id%');",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/deprecated_without_package_version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: namespace Symfony\\Component\\DependencyInjection\\Loader\\Configurator;",
          "5: return function (ContainerConfigurator $c) {",
          "6:     $c->services()",
          "7:         ->set('foo', 'stdClass')",
          "8:         ->deprecate('%service_id%')",
          "9:     ;",
          "10: };",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:         ->autoconfigure()",
          "12:         ->exclude('../Prototype/{OtherDir,BadClasses,SinglyImplementedInterface}')",
          "13:         ->factory('f')",
          "15:         ->args([0])",
          "16:         ->args([1])",
          "17:         ->autoconfigure(false)",
          "",
          "[Removed Lines]",
          "14:         ->deprecate('%service_id%')",
          "",
          "[Added Lines]",
          "14:         ->deprecate('vendor/package', '1.1', '%service_id%')",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/prototype_array.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:         ->autoconfigure()",
          "12:         ->exclude(['../Prototype/OtherDir', '../Prototype/BadClasses', '../Prototype/SinglyImplementedInterface'])",
          "13:         ->factory('f')",
          "15:         ->args([0])",
          "16:         ->args([1])",
          "17:         ->autoconfigure(false)",
          "",
          "[Removed Lines]",
          "14:         ->deprecate('%service_id%')",
          "",
          "[Added Lines]",
          "14:         ->deprecate('vendor/package', '1.1', '%service_id%')",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/config/services9.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         ->decorate('decorated', 'decorated.pif-pouf');",
          "90:     $s->set('deprecated_service', 'stdClass')",
          "93:     $s->set('new_factory', 'FactoryClass')",
          "94:         ->property('foo', 'bar')",
          "",
          "[Removed Lines]",
          "91:         ->deprecate();",
          "",
          "[Added Lines]",
          "91:         ->deprecate('vendor/package', '1.1', 'The \"%service_id%\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:         ->factory(['Bar\\FooClass', 'getInstance']);",
          "107:     $s->set('factory_simple', 'SimpleFactoryClass')",
          "109:         ->args(['foo'])",
          "110:         ->private();",
          "",
          "[Removed Lines]",
          "108:         ->deprecate()",
          "",
          "[Added Lines]",
          "108:         ->deprecate('vendor/package', '1.1', 'The \"%service_id%\" service is deprecated. You should stop using it, as it will be removed in the future.')",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/containers/container9.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: ;",
          "116: $container",
          "117:     ->register('deprecated_service', 'stdClass')",
          "119:     ->setPublic(true)",
          "120: ;",
          "121: $container",
          "",
          "[Removed Lines]",
          "118:     ->setDeprecated(true)",
          "",
          "[Added Lines]",
          "118:     ->setDeprecated('vendor/package', '1.1', 'The \"%service_id%\" service is deprecated. You should stop using it, as it will be removed in the future.')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142: $container",
          "143:     ->register('factory_simple', 'SimpleFactoryClass')",
          "144:     ->addArgument('foo')",
          "146:     ->setPublic(false)",
          "147: ;",
          "148: $container",
          "",
          "[Removed Lines]",
          "145:     ->setDeprecated(true)",
          "",
          "[Added Lines]",
          "145:     ->setDeprecated('vendor/package', '1.1', 'The \"%service_id%\" service is deprecated. You should stop using it, as it will be removed in the future.')",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services9_compiled.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:     protected function getDeprecatedServiceService()",
          "209:     {",
          "212:         return $this->services['deprecated_service'] = new \\stdClass();",
          "213:     }",
          "",
          "[Removed Lines]",
          "210:         trigger_deprecation('', '', 'The \"deprecated_service\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "[Added Lines]",
          "210:         trigger_deprecation('vendor/package', '1.1', 'The \"deprecated_service\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "402:     protected function getFactorySimpleService()",
          "403:     {",
          "406:         return new \\SimpleFactoryClass('foo');",
          "407:     }",
          "",
          "[Removed Lines]",
          "404:         trigger_deprecation('', '', 'The \"factory_simple\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "[Added Lines]",
          "404:         trigger_deprecation('vendor/package', '1.1', 'The \"factory_simple\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_errored_definition.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:     protected function getDeprecatedServiceService()",
          "209:     {",
          "212:         return $this->services['deprecated_service'] = new \\stdClass();",
          "213:     }",
          "",
          "[Removed Lines]",
          "210:         trigger_deprecation('', '', 'The \"deprecated_service\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "[Added Lines]",
          "210:         trigger_deprecation('vendor/package', '1.1', 'The \"deprecated_service\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "402:     protected function getFactorySimpleService()",
          "403:     {",
          "406:         return new \\SimpleFactoryClass('foo');",
          "407:     }",
          "",
          "[Removed Lines]",
          "404:         trigger_deprecation('', '', 'The \"factory_simple\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "[Added Lines]",
          "404:         trigger_deprecation('vendor/package', '1.1', 'The \"factory_simple\" service is deprecated. You should stop using it, as it will be removed in the future.');",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     public function getRemovedIds(): array",
          "45:     {",
          "46:         return [",
          "48:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "49:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "50:         ];",
          "",
          "[Removed Lines]",
          "47:             '.service_locator.ZZqL6HL' => true,",
          "",
          "[Added Lines]",
          "47:             '.service_locator.PnIy5ic' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     public function getRemovedIds(): array",
          "46:     {",
          "47:         return [",
          "49:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "50:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "51:             'foo2' => true,",
          "",
          "[Removed Lines]",
          "48:             '.service_locator.iSxuxv5' => true,",
          "",
          "[Added Lines]",
          "48:             '.service_locator.VAwNRfI' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public function getRemovedIds(): array",
          "43:     {",
          "44:         return [",
          "47:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "48:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "49:             'Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition' => true,",
          "",
          "[Removed Lines]",
          "45:             '.service_locator.2Wk0Efb' => true,",
          "46:             '.service_locator.2Wk0Efb.foo_service' => true,",
          "",
          "[Added Lines]",
          "45:             '.service_locator.Csd_kfL' => true,",
          "46:             '.service_locator.Csd_kfL.foo_service' => true,",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php -> src/Symfony/Component/DependencyInjection/Tests/Loader/PhpFileLoaderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $loader->load($fixtures.'/config/factory_short_notation.php');",
          "101:         $container->compile();",
          "102:     }",
          "103: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     public function testDeprecatedWithoutPackageAndVersion()",
          "109:     {",
          "110:         $fixtures = realpath(__DIR__.'/../Fixtures');",
          "111:         $loader = new PhpFileLoader($container = new ContainerBuilder(), new FileLocator());",
          "112:         $loader->load($fixtures.'/config/deprecated_without_package_version.php');",
          "113:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php -> src/Symfony/Component/DependencyInjection/Tests/Loader/XmlFileLoaderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:         $this->assertTrue($container->getDefinition('foo')->isDeprecated());",
          "396:         $message = 'The \"foo\" service is deprecated. You should stop using it, as it will be removed in the future.';",
          "399:         $this->assertTrue($container->getDefinition('bar')->isDeprecated());",
          "400:         $message = 'The \"bar\" service is deprecated.';",
          "402:     }",
          "404:     public function testDeprecatedAliases()",
          "",
          "[Removed Lines]",
          "397:         $this->assertSame($message, $container->getDefinition('foo')->getDeprecationMessage('foo'));",
          "401:         $this->assertSame($message, $container->getDefinition('bar')->getDeprecationMessage('bar'));",
          "",
          "[Added Lines]",
          "397:         $this->assertSame($message, $container->getDefinition('foo')->getDeprecation('foo')['message']);",
          "401:         $this->assertSame($message, $container->getDefinition('bar')->getDeprecation('bar')['message']);",
          "402:     }",
          "408:     public function testDeprecatedWithoutPackageAndVersion()",
          "409:     {",
          "410:         $container = new ContainerBuilder();",
          "411:         $loader = new XmlFileLoader($container, new FileLocator(self::$fixturesPath.'/xml'));",
          "412:         $loader->load('services_deprecated_without_package_and_version.xml');",
          "414:         $this->assertTrue($container->getDefinition('foo')->isDeprecated());",
          "415:         $deprecation = $container->getDefinition('foo')->getDeprecation('foo');",
          "416:         $this->assertSame('The \"foo\" service is deprecated.', $deprecation['message']);",
          "417:         $this->assertSame('', $deprecation['package']);",
          "418:         $this->assertSame('', $deprecation['version']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:         $this->assertTrue($container->getAlias('alias_for_foo')->isDeprecated());",
          "411:         $message = 'The \"alias_for_foo\" service alias is deprecated. You should stop using it, as it will be removed in the future.';",
          "414:         $this->assertTrue($container->getAlias('alias_for_foobar')->isDeprecated());",
          "415:         $message = 'The \"alias_for_foobar\" service alias is deprecated.';",
          "417:     }",
          "419:     public function testConvertDomElementToArray()",
          "",
          "[Removed Lines]",
          "412:         $this->assertSame($message, $container->getAlias('alias_for_foo')->getDeprecationMessage('alias_for_foo'));",
          "416:         $this->assertSame($message, $container->getAlias('alias_for_foobar')->getDeprecationMessage('alias_for_foobar'));",
          "",
          "[Added Lines]",
          "429:         $this->assertSame($message, $container->getAlias('alias_for_foo')->getDeprecation('alias_for_foo')['message']);",
          "433:         $this->assertSame($message, $container->getAlias('alias_for_foobar')->getDeprecation('alias_for_foobar')['message']);",
          "434:     }",
          "440:     public function testDeprecatedAliaseWithoutPackageAndVersion()",
          "441:     {",
          "442:         $container = new ContainerBuilder();",
          "443:         $loader = new XmlFileLoader($container, new FileLocator(self::$fixturesPath.'/xml'));",
          "444:         $loader->load('deprecated_alias_definitions_without_package_and_version.xml');",
          "446:         $this->assertTrue($container->getAlias('alias_for_foo')->isDeprecated());",
          "447:         $deprecation = $container->getAlias('alias_for_foo')->getDeprecation('alias_for_foo');",
          "448:         $this->assertSame('The \"alias_for_foo\" service alias is deprecated. You should stop using it, as it will be removed in the future.', $deprecation['message']);",
          "449:         $this->assertSame('', $deprecation['package']);",
          "450:         $this->assertSame('', $deprecation['version']);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php||src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php -> src/Symfony/Component/DependencyInjection/Tests/Loader/YamlFileLoaderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:         $this->assertTrue($container->getAlias('alias_for_foobar')->isDeprecated());",
          "215:         $message = 'The \"alias_for_foobar\" service alias is deprecated.';",
          "217:     }",
          "219:     public function testFactorySyntaxError()",
          "",
          "[Removed Lines]",
          "216:         $this->assertSame($message, $container->getAlias('alias_for_foobar')->getDeprecationMessage('alias_for_foobar'));",
          "",
          "[Added Lines]",
          "216:         $deprecation = $container->getAlias('alias_for_foobar')->getDeprecation('alias_for_foobar');",
          "217:         $this->assertSame($message, $deprecation['message']);",
          "218:         $this->assertSame('vendor/package', $deprecation['package']);",
          "219:         $this->assertSame('1.1', $deprecation['version']);",
          "220:     }",
          "227:     public function testDeprecatedAliasesWithoutPackageAndVersion()",
          "228:     {",
          "229:         $container = new ContainerBuilder();",
          "230:         $loader = new YamlFileLoader($container, new FileLocator(self::$fixturesPath.'/yaml'));",
          "231:         $loader->load('deprecated_alias_definitions_without_package_and_version.yml');",
          "233:         $this->assertTrue($container->getAlias('alias_for_foobar')->isDeprecated());",
          "234:         $message = 'The \"alias_for_foobar\" service alias is deprecated.';",
          "235:         $deprecation = $container->getAlias('alias_for_foobar')->getDeprecation('alias_for_foobar');",
          "236:         $this->assertSame($message, $deprecation['message']);",
          "237:         $this->assertSame('', $deprecation['package']);",
          "238:         $this->assertSame('', $deprecation['version']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "376:         $this->assertEquals([new IteratorArgument(['k1' => new Reference('foo.baz'), 'k2' => new Reference('service_container')]), new IteratorArgument([])], $lazyDefinition->getArguments(), '->load() parses lazy arguments');",
          "378:         $message = 'The \"deprecated_service\" service is deprecated. You should stop using it, as it will be removed in the future.';",
          "380:     }",
          "382:     public function testAutowire()",
          "",
          "[Removed Lines]",
          "379:         $this->assertSame($message, $container->getDefinition('deprecated_service')->getDeprecationMessage('deprecated_service'));",
          "",
          "[Added Lines]",
          "401:         $this->assertSame($message, $container->getDefinition('deprecated_service')->getDeprecation('deprecated_service')['message']);",
          "",
          "---------------"
        ]
      }
    }
  ]
}