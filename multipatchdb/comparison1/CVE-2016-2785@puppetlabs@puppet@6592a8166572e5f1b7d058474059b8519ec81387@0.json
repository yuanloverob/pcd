{
  "cve_id": "CVE-2016-2785",
  "cve_desc": "Puppet Server before 2.3.2 and Ruby puppetmaster in Puppet 4.x before 4.4.2 and in Puppet Agent before 1.4.2 might allow remote attackers to bypass intended auth.conf access restrictions by leveraging incorrect URL decoding.",
  "repo": "puppetlabs/puppet",
  "patch_hash": "6592a8166572e5f1b7d058474059b8519ec81387",
  "patch_info": {
    "commit_hash": "6592a8166572e5f1b7d058474059b8519ec81387",
    "repo": "puppetlabs/puppet",
    "commit_url": "https://github.com/puppetlabs/puppet/commit/6592a8166572e5f1b7d058474059b8519ec81387",
    "files": [
      "lib/puppet/indirector/catalog/compiler.rb",
      "lib/puppet/network/http/api/indirected_routes.rb",
      "lib/puppet/network/http/rack/rest.rb",
      "spec/unit/indirector/catalog/compiler_spec.rb",
      "spec/unit/network/http/api/indirected_routes_spec.rb",
      "spec/unit/network/http/rack/rest_spec.rb"
    ],
    "message": "Merge pull request #4921 from underscorgan/merge-cve-to-stable\n\n(maint) merge-back for work for CVE-2016-2785",
    "before_after_code_files": [
      "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb",
      "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb",
      "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb",
      "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb",
      "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb",
      "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb"
    ]
  },
  "patch_diff": {
    "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb": [
      "File: lib/puppet/indirector/catalog/compiler.rb -> lib/puppet/indirector/catalog/compiler.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "254:       raise Puppet::Error, \"Unable to find a common checksum type between agent '#{options[:checksum_type]}' and master '#{known_checksum_types}'.\" unless checksum_type",
      "255:     end",
      "258:     str += \" in environment #{node.environment}\" if node.environment",
      "259:     config = nil",
      "",
      "[Removed Lines]",
      "257:     str = \"Compiled %s for #{node.name}\" % [checksum_type ? 'static catalog' : 'catalog']",
      "",
      "[Added Lines]",
      "257:     str = \"Compiled %s for \" % [checksum_type ? 'static catalog' : 'catalog']",
      "258:     str += node.name",
      "",
      "---------------"
    ],
    "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb": [
      "File: lib/puppet/network/http/api/indirected_routes.rb -> lib/puppet/network/http/api/indirected_routes.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "104:       raise ArgumentError, \"No request key specified in #{uri}\"",
      "105:     end",
      "109:     [indirection, method, key, params]",
      "110:   end",
      "",
      "[Removed Lines]",
      "107:     key = URI.unescape(key)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb": [
      "File: lib/puppet/network/http/rack/rest.rb -> lib/puppet/network/http/rack/rest.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: require 'cgi'",
      "3: require 'puppet/network/http/handler'",
      "4: require 'puppet/util/ssl'",
      "6: class Puppet::Network::HTTP::RackREST",
      "7:   include Puppet::Network::HTTP::Handler",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: require 'uri'",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "80:   # what path was requested? (this is, without any query parameters)",
      "81:   def path(request)",
      "83:   end",
      "85:   # return the request body",
      "",
      "[Removed Lines]",
      "82:     request.path",
      "",
      "[Added Lines]",
      "83:     # The value that Passenger provides for 'path' is escaped",
      "84:     # (URL percent-encoded), see",
      "85:     # https://github.com/phusion/passenger/blob/release-5.0.26/src/apache2_module/Hooks.cpp#L885",
      "86:     # for the implementation as hooked up to an Apache web server.  Code",
      "87:     # in the indirector / HTTP layer which consumes this path, however, assumes",
      "88:     # that it has already been unescaped, so it is unescaped here.",
      "89:     if request.path",
      "90:       URI.unescape(request.path)",
      "91:     end",
      "",
      "---------------"
    ],
    "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb": [
      "File: spec/unit/indirector/catalog/compiler_spec.rb -> spec/unit/indirector/catalog/compiler_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:       @compiler.find(@request)",
      "95:     end",
      "97:     it \"should extract and save any facts from the request\" do",
      "98:       Puppet::Node.indirection.expects(:find).with(@name, anything).returns @node",
      "99:       @compiler.expects(:extract_facts_from_request).with(@request)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97:     it \"should pass node containing percent character to the compiler\" do",
      "98:       node_with_percent_character = Puppet::Node.new \"%6de\"",
      "99:       Puppet::Node.indirection.stubs(:find).returns(node_with_percent_character)",
      "100:       Puppet::Parser::Compiler.expects(:compile).with(node_with_percent_character, anything)",
      "101:       @compiler.find(@request)",
      "102:     end",
      "",
      "---------------"
    ],
    "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb": [
      "File: spec/unit/network/http/api/indirected_routes_spec.rb -> spec/unit/network/http/api/indirected_routes_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:       expect(lambda { handler.uri2indirection(\"UPDATE\", \"#{master_url_prefix}/node/bar\", params) }).to raise_error(ArgumentError)",
      "128:     end",
      "131:       escaped = URI.escape(\"foo bar\")",
      "134:     end",
      "146:     end",
      "148:     it \"should not pass through an environment to check_authorization and fail if the environment is unknown\" do",
      "",
      "[Removed Lines]",
      "130:     it \"should URI unescape the indirection key\" do",
      "132:       indirection, method, key, final_params = handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/#{escaped}\", params)",
      "133:       expect(key).to eq(\"foo bar\")",
      "136:     it \"should pass through a proper environment param in a call to check_authorization\" do",
      "137:       handler.expects(:check_authorization).with(anything,",
      "138:                                                  anything,",
      "139:                                                  all_of(",
      "140:                                                    has_entry(:environment,",
      "141:                                                              is_a(Puppet::Node::Environment)),",
      "142:                                                    has_entry(:environment,",
      "143:                                                              responds_with(:name,",
      "144:                                                                            :env))))",
      "145:       handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/bar\", params)",
      "",
      "[Added Lines]",
      "130:     it \"should not URI unescape the indirection key\" do",
      "132:       indirection, _, key, _ = handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/#{escaped}\", params)",
      "133:       expect(key).to eq(escaped)",
      "136:     it \"should not unescape the URI passed through in a call to check_authorization\" do",
      "137:       key_escaped = URI.escape(\"foo bar\")",
      "138:       uri_escaped = \"#{master_url_prefix}/node/#{key_escaped}\"",
      "139:       handler.expects(:check_authorization).with(anything, uri_escaped, anything)",
      "140:       indirection, _, _, _ = handler.uri2indirection(\"GET\", uri_escaped, params)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "153:                                               \"#{master_url_prefix}/node/bar\",",
      "154:                                               {:environment => 'bogus'}) }).to raise_error(ArgumentError)",
      "155:     end",
      "156:   end",
      "158:   describe \"when converting a request into a URI\" do",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "152:     it \"should not URI unescape the indirection key as passed through to a call to check_authorization\" do",
      "153:       handler.expects(:check_authorization).with(anything,",
      "154:                                                  anything,",
      "155:                                                  all_of(",
      "156:                                                      has_entry(:environment,",
      "157:                                                                is_a(Puppet::Node::Environment)),",
      "158:                                                      has_entry(:environment,",
      "159:                                                                responds_with(:name,",
      "160:                                                                              :env))))",
      "161:       handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/bar\", params)",
      "162:     end",
      "",
      "---------------"
    ],
    "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb": [
      "File: spec/unit/network/http/rack/rest_spec.rb -> spec/unit/network/http/rack/rest_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "65:         expect(@handler.path(req)).to eq(\"/foo/bar\")",
      "66:       end",
      "68:       it \"should return the request body as the body\" do",
      "69:         req = mk_req('/foo/bar', :input => 'mybody')",
      "70:         expect(@handler.body(req)).to eq(\"mybody\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "68:       it \"should return the unescaped path for an escaped request path\" do",
      "69:         unescaped_path = '/foo/bar baz'",
      "70:         escaped_path = URI.escape(unescaped_path)",
      "71:         req = mk_req(escaped_path)",
      "72:         expect(@handler.path(req)).to eq(unescaped_path)",
      "73:       end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2af179b96e8a7145ddc7b959fed00fb3ded626dc",
      "candidate_info": {
        "commit_hash": "2af179b96e8a7145ddc7b959fed00fb3ded626dc",
        "repo": "puppetlabs/puppet",
        "commit_url": "https://github.com/puppetlabs/puppet/commit/2af179b96e8a7145ddc7b959fed00fb3ded626dc",
        "files": [
          "lib/puppet/indirector/catalog/compiler.rb",
          "spec/unit/indirector/catalog/compiler_spec.rb"
        ],
        "message": "(PUP-6086) Avoid interpolation error for percent in node catalog name\n\nThis commit changes the profiler message formatted for a catalog\ncompile to concatenate in the node name rather than inserting it into a\nformatted string.  The previous implementation would cause a catalog\ncompilation error to be thrown because the percent character from the\nnode name was being interpolated.",
        "before_after_code_files": [
          "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb",
          "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/puppetlabs/puppet/pull/4921"
        ],
        "olp_code_files": {
          "patch": [
            "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb",
            "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb"
          ],
          "candidate": [
            "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb",
            "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puppet/indirector/catalog/compiler.rb||lib/puppet/indirector/catalog/compiler.rb": [
          "File: lib/puppet/indirector/catalog/compiler.rb -> lib/puppet/indirector/catalog/compiler.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:       raise Puppet::Error, \"Unable to find a common checksum type between agent '#{options[:checksum_type]}' and master '#{known_checksum_types}'.\" unless checksum_type",
          "255:     end",
          "258:     str += \" in environment #{node.environment}\" if node.environment",
          "259:     config = nil",
          "",
          "[Removed Lines]",
          "257:     str = \"Compiled %s for #{node.name}\" % [checksum_type ? 'static catalog' : 'catalog']",
          "",
          "[Added Lines]",
          "257:     str = \"Compiled %s for \" % [checksum_type ? 'static catalog' : 'catalog']",
          "258:     str += node.name",
          "",
          "---------------"
        ],
        "spec/unit/indirector/catalog/compiler_spec.rb||spec/unit/indirector/catalog/compiler_spec.rb": [
          "File: spec/unit/indirector/catalog/compiler_spec.rb -> spec/unit/indirector/catalog/compiler_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       @compiler.find(@request)",
          "95:     end",
          "97:     it \"should extract and save any facts from the request\" do",
          "98:       Puppet::Node.indirection.expects(:find).with(@name, anything).returns @node",
          "99:       @compiler.expects(:extract_facts_from_request).with(@request)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     it \"should pass node containing percent character to the compiler\" do",
          "98:       node_with_percent_character = Puppet::Node.new \"%6de\"",
          "99:       Puppet::Node.indirection.stubs(:find).returns(node_with_percent_character)",
          "100:       Puppet::Parser::Compiler.expects(:compile).with(node_with_percent_character, anything)",
          "101:       @compiler.find(@request)",
          "102:     end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2249c93a35006d016bfc9f5dd77d45fbbaaf38e7",
      "candidate_info": {
        "commit_hash": "2249c93a35006d016bfc9f5dd77d45fbbaaf38e7",
        "repo": "puppetlabs/puppet",
        "commit_url": "https://github.com/puppetlabs/puppet/commit/2249c93a35006d016bfc9f5dd77d45fbbaaf38e7",
        "files": [
          "lib/puppet/network/http/api/indirected_routes.rb",
          "spec/unit/network/http/api/indirected_routes_spec.rb"
        ],
        "message": "(PUP-6086) Remove URI unescape for indirector key\n\nThis commit removes the unescape that was done for the indirector key in\nuri2indirection().  The previous logic to unescape was problematic for 2\nreasons:\n\n1) The unescape was done after a check_authorization() call was made.\n   Because of that, it would be possible for the result of the\n   check_authorization() call to be an allow but that the unescaped key\n   would produce a value that would have been denied if it had\n   previously been evaluated by check_authorization().\n\n2) Web server handlers already percent-decode the URI path component\n   at a higher-level before it is passed via a request into\n   uri2indirection().  For cases where the original URI had\n   percent-encoded a percent character, the extra unescape at this\n   level could corrupt the original value in the request.  For example,\n   if the original URI at the client were to include \"%61bcd\" and were\n   percent-encoded for HTTP transmission as \"%2561bcd\", the first decode\n   done by the web server would produce \"%61bcd\".  The second decode\n   previously done by uri2indirection() here would produce a value of\n   \"abcd\" whereas the value that the client intended to be used was\n   \"%61bcd\".",
        "before_after_code_files": [
          "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb",
          "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/puppetlabs/puppet/pull/4921"
        ],
        "olp_code_files": {
          "patch": [
            "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb",
            "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb"
          ],
          "candidate": [
            "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb",
            "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puppet/network/http/api/indirected_routes.rb||lib/puppet/network/http/api/indirected_routes.rb": [
          "File: lib/puppet/network/http/api/indirected_routes.rb -> lib/puppet/network/http/api/indirected_routes.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:       raise ArgumentError, \"No request key specified in #{uri}\"",
          "105:     end",
          "109:     [indirection, method, key, params]",
          "110:   end",
          "",
          "[Removed Lines]",
          "107:     key = URI.unescape(key)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "spec/unit/network/http/api/indirected_routes_spec.rb||spec/unit/network/http/api/indirected_routes_spec.rb": [
          "File: spec/unit/network/http/api/indirected_routes_spec.rb -> spec/unit/network/http/api/indirected_routes_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:       expect(lambda { handler.uri2indirection(\"UPDATE\", \"#{master_url_prefix}/node/bar\", params) }).to raise_error(ArgumentError)",
          "128:     end",
          "131:       escaped = URI.escape(\"foo bar\")",
          "134:     end",
          "146:     end",
          "148:     it \"should not pass through an environment to check_authorization and fail if the environment is unknown\" do",
          "",
          "[Removed Lines]",
          "130:     it \"should URI unescape the indirection key\" do",
          "132:       indirection, method, key, final_params = handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/#{escaped}\", params)",
          "133:       expect(key).to eq(\"foo bar\")",
          "136:     it \"should pass through a proper environment param in a call to check_authorization\" do",
          "137:       handler.expects(:check_authorization).with(anything,",
          "138:                                                  anything,",
          "139:                                                  all_of(",
          "140:                                                    has_entry(:environment,",
          "141:                                                              is_a(Puppet::Node::Environment)),",
          "142:                                                    has_entry(:environment,",
          "143:                                                              responds_with(:name,",
          "144:                                                                            :env))))",
          "145:       handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/bar\", params)",
          "",
          "[Added Lines]",
          "130:     it \"should not URI unescape the indirection key\" do",
          "132:       indirection, _, key, _ = handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/#{escaped}\", params)",
          "133:       expect(key).to eq(escaped)",
          "136:     it \"should not unescape the URI passed through in a call to check_authorization\" do",
          "137:       key_escaped = URI.escape(\"foo bar\")",
          "138:       uri_escaped = \"#{master_url_prefix}/node/#{key_escaped}\"",
          "139:       handler.expects(:check_authorization).with(anything, uri_escaped, anything)",
          "140:       indirection, _, _, _ = handler.uri2indirection(\"GET\", uri_escaped, params)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:                                               \"#{master_url_prefix}/node/bar\",",
          "154:                                               {:environment => 'bogus'}) }).to raise_error(ArgumentError)",
          "155:     end",
          "156:   end",
          "158:   describe \"when converting a request into a URI\" do",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "152:     it \"should not URI unescape the indirection key as passed through to a call to check_authorization\" do",
          "153:       handler.expects(:check_authorization).with(anything,",
          "154:                                                  anything,",
          "155:                                                  all_of(",
          "156:                                                      has_entry(:environment,",
          "157:                                                                is_a(Puppet::Node::Environment)),",
          "158:                                                      has_entry(:environment,",
          "159:                                                                responds_with(:name,",
          "160:                                                                              :env))))",
          "161:       handler.uri2indirection(\"GET\", \"#{master_url_prefix}/node/bar\", params)",
          "162:     end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c36398bc4122ab426f28fc34ec0d7730cc73dd7",
      "candidate_info": {
        "commit_hash": "3c36398bc4122ab426f28fc34ec0d7730cc73dd7",
        "repo": "puppetlabs/puppet",
        "commit_url": "https://github.com/puppetlabs/puppet/commit/3c36398bc4122ab426f28fc34ec0d7730cc73dd7",
        "files": [
          "lib/puppet/network/http/rack/rest.rb",
          "spec/unit/network/http/rack/rest_spec.rb"
        ],
        "message": "(PUP-6086) Restore uri unescaping to rack handler\n\nThis commit unescapes the URI path as returned from the Rack HTTP\nhandler.  Other web server handlers - including the WEBrick one -\nreturn an unescaped URI path and a prior commit removed the\nsecond unescape that was previously done in indirected_routes.rb.\nRequests received from Passenger, however, have an escaped path.  This\ncommit ensures that downstream code - e.g., in the indirector HTTP layer\n- receives an unescaped path as is done for the other web server\nhandlers.",
        "before_after_code_files": [
          "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb",
          "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/puppetlabs/puppet/pull/4921"
        ],
        "olp_code_files": {
          "patch": [
            "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb",
            "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb"
          ],
          "candidate": [
            "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb",
            "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/puppet/network/http/rack/rest.rb||lib/puppet/network/http/rack/rest.rb": [
          "File: lib/puppet/network/http/rack/rest.rb -> lib/puppet/network/http/rack/rest.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: require 'cgi'",
          "3: require 'puppet/network/http/handler'",
          "4: require 'puppet/util/ssl'",
          "6: class Puppet::Network::HTTP::RackREST",
          "7:   include Puppet::Network::HTTP::Handler",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: require 'uri'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:   # what path was requested? (this is, without any query parameters)",
          "81:   def path(request)",
          "83:   end",
          "85:   # return the request body",
          "",
          "[Removed Lines]",
          "82:     request.path",
          "",
          "[Added Lines]",
          "83:     # The value that Passenger provides for 'path' is escaped",
          "84:     # (URL percent-encoded), see",
          "85:     # https://github.com/phusion/passenger/blob/release-5.0.26/src/apache2_module/Hooks.cpp#L885",
          "86:     # for the implementation as hooked up to an Apache web server.  Code",
          "87:     # in the indirector / HTTP layer which consumes this path, however, assumes",
          "88:     # that it has already been unescaped, so it is unescaped here.",
          "89:     if request.path",
          "90:       URI.unescape(request.path)",
          "91:     end",
          "",
          "---------------"
        ],
        "spec/unit/network/http/rack/rest_spec.rb||spec/unit/network/http/rack/rest_spec.rb": [
          "File: spec/unit/network/http/rack/rest_spec.rb -> spec/unit/network/http/rack/rest_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:         expect(@handler.path(req)).to eq(\"/foo/bar\")",
          "66:       end",
          "68:       it \"should return the request body as the body\" do",
          "69:         req = mk_req('/foo/bar', :input => 'mybody')",
          "70:         expect(@handler.body(req)).to eq(\"mybody\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:       it \"should return the unescaped path for an escaped request path\" do",
          "69:         unescaped_path = '/foo/bar baz'",
          "70:         escaped_path = URI.escape(unescaped_path)",
          "71:         req = mk_req(escaped_path)",
          "72:         expect(@handler.path(req)).to eq(unescaped_path)",
          "73:       end",
          "",
          "---------------"
        ]
      }
    }
  ]
}