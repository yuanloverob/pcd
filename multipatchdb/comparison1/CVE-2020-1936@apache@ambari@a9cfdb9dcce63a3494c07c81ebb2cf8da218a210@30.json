{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c8d5b9f7dd6e9d60a43dfdd15f7c6bf0753726a2",
      "candidate_info": {
        "commit_hash": "c8d5b9f7dd6e9d60a43dfdd15f7c6bf0753726a2",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c8d5b9f7dd6e9d60a43dfdd15f7c6bf0753726a2",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java"
        ],
        "message": "AMBARI-24319. Reverting previous changes until we did not find out what's happening with BP installations",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: import com.google.common.collect.ImmutableMap;",
          "140: import com.google.common.collect.ImmutableSet;",
          "141: import com.google.common.collect.Sets;",
          "142: import com.google.gson.JsonArray;",
          "143: import com.google.gson.JsonObject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: import com.google.common.collect.Lists;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1867:                   String uniqueKey = String.format(\"%s|%s\", principal, (keytabFile == null) ? \"\" : keytabFile);",
          "1870:                     KerberosPrincipalType principalType = principalDescriptor.getType();",
          "",
          "[Removed Lines]",
          "1869:                   if (!hostActiveIdentities.containsKey(uniqueKey) || (StringUtils.isNotBlank(hostActiveIdentities.get(uniqueKey).getReference()) && StringUtils.isBlank(identity.getReference()))) {",
          "",
          "[Added Lines]",
          "1870:                   if (!hostActiveIdentities.containsKey(uniqueKey)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2467:       handler.createStages(cluster,",
          "2468:         clusterHostInfoJson, hostParamsJson, event, roleCommandOrder, kerberosDetails,",
          "2469:         dataDirectory, requestStageContainer, serviceComponentHostsToProcess,",
          "2473:       handler.addFinalizeOperationStage(cluster, clusterHostInfoJson, hostParamsJson, event,",
          "",
          "[Removed Lines]",
          "2470:         null, null, Sets.newHashSet(principal), hostsWithValidKerberosClient);",
          "",
          "[Added Lines]",
          "2471:         Collections.singletonMap(\"KERBEROS\", Lists.newArrayList(\"KERBEROS_CLIENT\")),",
          "2472:         null, Sets.newHashSet(principal), hostsWithValidKerberosClient);",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java||ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java -> ambari-server/src/main/java/org/apache/ambari/server/serveraction/kerberos/KerberosServerAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.File;",
          "22: import java.io.IOException;",
          "23: import java.lang.reflect.Type;",
          "25: import java.util.Collection;",
          "26: import java.util.HashMap;",
          "27: import java.util.Map;",
          "",
          "[Removed Lines]",
          "24: import java.util.ArrayList;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: import org.apache.ambari.server.serveraction.kerberos.stageutils.ResolvedKerberosPrincipal;",
          "43: import org.apache.ambari.server.state.Cluster;",
          "44: import org.apache.ambari.server.state.Clusters;",
          "46: import org.apache.ambari.server.utils.StageUtils;",
          "47: import org.apache.commons.io.FileUtils;",
          "48: import org.apache.commons.lang.StringUtils;",
          "",
          "[Removed Lines]",
          "45: import org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:   @Inject",
          "180:   private KerberosOperationHandlerFactory kerberosOperationHandlerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:   @Inject",
          "184:   private KerberosIdentityDataFileReaderFactory kerberosIdentityDataFileReaderFactory;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "451:       }",
          "453:       try {",
          "457:           for (ResolvedKerberosPrincipal principal : rkk.getPrincipals()) {",
          "465:             }",
          "466:           }",
          "467:         }",
          "",
          "[Removed Lines]",
          "454:         final Map<String, Collection<String>> serviceComponentFilter = (Map<String, Collection<String>>) getServiceComponentFilter();",
          "455:         final Collection<KerberosIdentityDescriptor> serviceIdentities = serviceComponentFilter == null ? null : calculateServiceIdentities(getClusterName(), serviceComponentFilter);",
          "456:         for (ResolvedKerberosKeytab rkk : kerberosKeytabController.getFilteredKeytabs(serviceComponentFilter, getHostFilter(), getIdentityFilter())) {",
          "458:             if (isRelevantIdentity(serviceIdentities, principal)) {",
          "459:               commandReport = processIdentity(principal, handler, kerberosConfiguration, requestSharedDataContext);",
          "462:               if (commandReport != null) {",
          "463:                 break;",
          "464:               }",
          "",
          "[Added Lines]",
          "458:         for (ResolvedKerberosKeytab rkk : kerberosKeytabController.getFilteredKeytabs((Map<String, Collection<String>>) getServiceComponentFilter(), getHostFilter(), getIdentityFilter())) {",
          "460:             commandReport = processIdentity(principal, handler, kerberosConfiguration, requestSharedDataContext);",
          "463:             if (commandReport != null) {",
          "464:               break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487:         : commandReport;",
          "488:   }",
          "",
          "[Removed Lines]",
          "490:   private boolean isRelevantIdentity(Collection<KerberosIdentityDescriptor> serviceIdentities, ResolvedKerberosPrincipal principal) {",
          "491:     if (serviceIdentities != null) {",
          "492:       boolean hasValidIdentity = false;",
          "493:       for (KerberosIdentityDescriptor serviceIdentity : serviceIdentities) {",
          "494:         if (principal.getPrincipal().equals(serviceIdentity.getPrincipalDescriptor().getName()) && StringUtils.isBlank(serviceIdentity.getReference())) {",
          "495:           hasValidIdentity = true;",
          "496:           break;",
          "497:         }",
          "498:       }",
          "499:       return hasValidIdentity;",
          "500:     }",
          "502:     return true;",
          "503:   }",
          "505:   private Collection<KerberosIdentityDescriptor> calculateServiceIdentities(String clusterName, Map<String, Collection<String>> serviceComponentFilter)",
          "506:       throws AmbariException {",
          "507:     final Collection<KerberosIdentityDescriptor> serviceIdentities = new ArrayList<>();",
          "508:     for (String service : serviceComponentFilter.keySet()) {",
          "509:       for (Collection<KerberosIdentityDescriptor> activeIdentities : kerberosHelper.getActiveIdentities(clusterName, null, service, null, true).values()) {",
          "510:         serviceIdentities.addAll(activeIdentities);",
          "511:       }",
          "512:     }",
          "513:     return serviceIdentities;",
          "514:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0108addcb41f4d185293d347003e62ee8f687ce",
      "candidate_info": {
        "commit_hash": "c0108addcb41f4d185293d347003e62ee8f687ce",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c0108addcb41f4d185293d347003e62ee8f687ce",
        "files": [
          "ambari-web/app/messages.js",
          "ambari-web/app/templates/common/host_progress_popup.hbs",
          "ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs",
          "ambari-web/app/templates/main/alerts/definition_details.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs",
          "ambari-web/app/templates/main/host/logs.hbs",
          "ambari-web/app/templates/main/service/info/summary.hbs"
        ],
        "message": "AMBARI-24628. Fix possible \"Phishing by Navigating Browser Tabs\" vulnerability (akovalenko)",
        "before_after_code_files": [
          "ambari-web/app/messages.js||ambari-web/app/messages.js",
          "ambari-web/app/templates/common/host_progress_popup.hbs||ambari-web/app/templates/common/host_progress_popup.hbs",
          "ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs||ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs",
          "ambari-web/app/templates/main/alerts/definition_details.hbs||ambari-web/app/templates/main/alerts/definition_details.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs||ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs||ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs",
          "ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs||ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs",
          "ambari-web/app/templates/main/host/logs.hbs||ambari-web/app/templates/main/host/logs.hbs",
          "ambari-web/app/templates/main/service/info/summary.hbs||ambari-web/app/templates/main/service/info/summary.hbs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/messages.js||ambari-web/app/messages.js": [
          "File: ambari-web/app/messages.js -> ambari-web/app/messages.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:   'app.redirectIssuePopup.header': 'Login Redirect Issue',",
          "30:   'app.redirectIssuePopup.body': 'For single sign-on, make sure that Knox Gateway and Ambari Server are located on the same host or subdomain.' +",
          "31:     '<br/>Alternatively login as an Ambari local user using the local login page.<br />' +",
          "34:   'app.loadingPlaceholder': 'Loading...',",
          "35:   'app.versionMismatchAlert.title': 'Ambari Server / Web Client Version Mismatch',",
          "",
          "[Removed Lines]",
          "32:     '<a href=\"{0}\" target=\"_blank\">{0}</a>',",
          "",
          "[Added Lines]",
          "32:     '<a rel=\"noopener noreferrer\" href=\"{0}\" target=\"_blank\">{0}</a>',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2349:   'services.service.config.configHistory.makeCurrent.message': 'Created from service config version {0}',",
          "2350:   'services.service.config.configHistory.comparing': 'Comparing Changes in',",
          "2351:   'services.service.config.setRecommendedValue': 'Set Recommended',",
          "2353:     'download the {4} from {0}</a>. Once downloaded to the Ambari Server host, run: <br/>' +",
          "2354:     '<b>ambari-server setup --jdbc-db={1} --jdbc-driver=/path/to/{1}/{2}</b>',",
          "",
          "[Removed Lines]",
          "2352:   'services.service.config.database.msg.jdbcSetup.detailed': 'To use {0} with {6}, you must <a href=\"{3}\" target=\"_blank\">' +",
          "",
          "[Added Lines]",
          "2352:   'services.service.config.database.msg.jdbcSetup.detailed': 'To use {0} with {6}, you must <a rel=\"noopener noreferrer\" href=\"{3}\" target=\"_blank\">' +",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/host_progress_popup.hbs||ambari-web/app/templates/common/host_progress_popup.hbs": [
          "File: ambari-web/app/templates/common/host_progress_popup.hbs -> ambari-web/app/templates/common/host_progress_popup.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:                     <strong class=\"muted\">{{hostLog.fileName}}</strong>",
          "344:                     {{#view App.LogSearchUILinkView linkQueryParamsBinding=\"hostLog.linkTail\" tagName=\"span\"}}",
          "345:                       <a {{bindAttr href=\"view.formatedLink\" class=\":pull-right view.isLodaded::disabled\"}}",
          "347:                         <i class=\"icon-external-link\"></i>",
          "348:                         {{t popup.logTail.openInLogSearch}}</a>",
          "349:                     {{/view}}",
          "",
          "[Removed Lines]",
          "346:                               target=\"_blank\">",
          "",
          "[Added Lines]",
          "346:                               target=\"_blank\" rel=\"noopener noreferrer\">",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs||ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs": [
          "File: ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs -> ambari-web/app/templates/common/modal_popups/log_tail_popup.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:         <i class=\"icon-external-link\"></i>",
          "30:         {{t common.open}}",
          "31:       </a>",
          "33:         <i class=\"icon-external-link\"></i>",
          "34:         {{t popup.logTail.openInLogSearch}}",
          "35:       </a>",
          "",
          "[Removed Lines]",
          "32:       <a class=\"open-in-log-search\" {{bindAttr href=\"view.logSearchUrl\"}} target=\"_blank\">",
          "",
          "[Added Lines]",
          "32:       <a class=\"open-in-log-search\" {{bindAttr href=\"view.logSearchUrl\"}} target=\"_blank\" rel=\"noopener noreferrer\">",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/alerts/definition_details.hbs||ambari-web/app/templates/main/alerts/definition_details.hbs": [
          "File: ambari-web/app/templates/main/alerts/definition_details.hbs -> ambari-web/app/templates/main/alerts/definition_details.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:           {{#if controller.content.hasHelpUrl}}",
          "194:             <div class=\"row\">",
          "195:               <div class=\"col-md-5 property-name\">{{t alerts.table.header.helpUrl}}:</div>",
          "197:             </div>",
          "198:           {{/if}}",
          "199:         </div>",
          "",
          "[Removed Lines]",
          "196:               <div class=\"col-md-7\"><label for=\"\"><a {{bindAttr href=\"controller.content.helpUrl\"}} target=\"_blank\">{{t common.link}}</a></label></div>",
          "",
          "[Added Lines]",
          "196:               <div class=\"col-md-7\"><label for=\"\"><a {{bindAttr href=\"controller.content.helpUrl\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{t common.link}}</a></label></div>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs||ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs": [
          "File: ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs -> ambari-web/app/templates/main/dashboard/widgets/hbase_links.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:               <td>",
          "55:                 {{#if view.activeMaster}}",
          "56:                   <a {{bindAttr href=\"view.hbaseMasterWebUrl\"}}",
          "58:                 {{else}}",
          "59:                   {{t services.service.summary.notAvailable}}",
          "60:                 {{/if}}",
          "",
          "[Removed Lines]",
          "57:                           target=\"_blank\">{{t dashboard.services.hbase.masterWebUI}}</a>",
          "",
          "[Added Lines]",
          "57:                           target=\"_blank\" rel=\"noopener noreferrer\">{{t dashboard.services.hbase.masterWebUI}}</a>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:                             <a href=\"javascript:void(null)\">{{quickLinks.publicHostNameLabel}} &nbsp;</a>",
          "82:                             <ul class=\"dropdown-menu\">",
          "83:                               {{#each quickLinks}}",
          "85:                               {{/each}}",
          "86:                             </ul>",
          "87:                           </li>",
          "",
          "[Removed Lines]",
          "84:                                 <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "84:                                 <li><a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a></li>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:                       {{/each}}",
          "90:                     {{else}}",
          "91:                       {{#each view.quickLinks}}",
          "93:                       {{/each}}",
          "94:                     {{/if}}",
          "95:                   {{else}}",
          "",
          "[Removed Lines]",
          "92:                         <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "92:                         <li><a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a></li>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs||ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs": [
          "File: ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs -> ambari-web/app/templates/main/dashboard/widgets/hdfs_links.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:                           <a href=\"javascript:void(null)\">{{quickLinks.publicHostNameLabel}} &nbsp;</a>",
          "102:                           <ul class=\"dropdown-menu\">",
          "103:                             {{#each quickLinks}}",
          "105:                             {{/each}}",
          "106:                           </ul>",
          "107:                         </li>",
          "",
          "[Removed Lines]",
          "104:                               <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "104:                               <li><a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a></li>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:                     {{/each}}",
          "110:                   {{else}}",
          "111:                     {{#each view.quickLinks}}",
          "113:                     {{/each}}",
          "114:                   {{/if}}",
          "115:                 {{else}}",
          "",
          "[Removed Lines]",
          "112:                       <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "112:                       <li><a {{bindAttr href=\"url\"}} target=\"_blank rel=\"noopener noreferrer\"\">{{label}}</a></li>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs||ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs": [
          "File: ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs -> ambari-web/app/templates/main/dashboard/widgets/yarn_links.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:                             <a href=\"javascript:void(null)\">{{quickLinks.publicHostNameLabel}} &nbsp;</a>",
          "67:                             <ul class=\"dropdown-menu\">",
          "68:                               {{#each quickLinks}}",
          "70:                               {{/each}}",
          "71:                             </ul>",
          "72:                           </li>",
          "",
          "[Removed Lines]",
          "69:                                 <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "69:                                 <li><a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a></li>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:                       {{/each}}",
          "75:                     {{else}}",
          "76:                       {{#each view.quickLinks}}",
          "78:                       {{/each}}",
          "79:                     {{/if}}",
          "80:                   {{else}}",
          "",
          "[Removed Lines]",
          "77:                         <li><a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a></li>",
          "",
          "[Added Lines]",
          "77:                         <li><a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a></li>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/host/logs.hbs||ambari-web/app/templates/main/host/logs.hbs": [
          "File: ambari-web/app/templates/main/host/logs.hbs -> ambari-web/app/templates/main/host/logs.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:               <div>",
          "44:                 <a {{action openLogFile row file.filePath target=\"view.parentView\"}} href=\"#\" rel=\"log-file-name-tooltip\" {{bindAttr data-original-title=\"file.filePath\"}}>{{file.fileName}}</a>",
          "45:                 {{#view App.LogSearchUILinkView linkQueryParamsBinding=\"file.linkTail\" tagName=\"span\"}}",
          "47:                     <i class=\"icon-external-link\"></i>",
          "48:                     {{t popup.logTail.openInLogSearch}}",
          "49:                   </a>",
          "",
          "[Removed Lines]",
          "46:                   <a {{bindAttr href=\"view.formatedLink\"}} target=\"_blank\" rel=\"log-file-name-tooltip\" {{translateAttr title=\"popup.logTail.openInLogSearch\"}} class=\"pull-right external-link\">",
          "",
          "[Added Lines]",
          "46:                   <a {{bindAttr href=\"view.formatedLink\"}} target=\"_blank\" rel=\"log-file-name-tooltip noopener noreferrer\" {{translateAttr title=\"popup.logTail.openInLogSearch\"}} class=\"pull-right external-link\">",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/service/info/summary.hbs||ambari-web/app/templates/main/service/info/summary.hbs": [
          "File: ambari-web/app/templates/main/service/info/summary.hbs -> ambari-web/app/templates/main/service/info/summary.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:                     {{#each quickLinks in group.links}}",
          "99:                       <h6>{{quickLinks.publicHostNameLabel}}</h6>",
          "100:                       {{#each quickLinks}}",
          "102:                       {{/each}}",
          "103:                     {{/each}}",
          "104:                   </div>",
          "",
          "[Removed Lines]",
          "101:                         <a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a>",
          "",
          "[Added Lines]",
          "101:                         <a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:               {{else}}",
          "107:                 {{#if view.quickLinks}}",
          "108:                   {{#each view.quickLinks}}",
          "110:                   {{/each}}",
          "111:                 {{else}}",
          "112:                   <div class=\"alert alert-danger\">",
          "",
          "[Removed Lines]",
          "109:                     <a {{bindAttr href=\"url\"}} target=\"_blank\">{{label}}</a>",
          "",
          "[Added Lines]",
          "109:                     <a {{bindAttr href=\"url\"}} target=\"_blank\" rel=\"noopener noreferrer\">{{label}}</a>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fde00bb409fcdd908e13b33d5852fd45f871daa5",
      "candidate_info": {
        "commit_hash": "fde00bb409fcdd908e13b33d5852fd45f871daa5",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/fde00bb409fcdd908e13b33d5852fd45f871daa5",
        "files": [
          "ambari-web/app/views/main/host/details.js"
        ],
        "message": "AMBARI-24612 Host Level Maintenance mode is not working through Ambari UI",
        "before_after_code_files": [
          "ambari-web/app/views/main/host/details.js||ambari-web/app/views/main/host/details.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/views/main/host/details.js||ambari-web/app/views/main/host/details.js": [
          "File: ambari-web/app/views/main/host/details.js -> ambari-web/app/views/main/host/details.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   hasManyClientsWithConfigs: Em.computed.gt('clientsWithConfigs.length', 1),",
          "41:   maintenance: function () {",
          "43:     var result = [];",
          "44:     if (App.isAuthorized(\"SERVICE.START_STOP\")) {",
          "45:       result = result.concat([",
          "",
          "[Removed Lines]",
          "42:     var onOff = this.get('controller.content.isActive') ? \"On\" : \"Off\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:         action: 'onOffPassiveModeForHost',",
          "75:         liClass: '',",
          "76:         cssClass: 'icon-medkit',",
          "79:       });",
          "80:     }",
          "81:     if (App.get('isKerberosEnabled') && App.get('supports.regenerateKeytabsOnSingleHost')){",
          "",
          "[Removed Lines]",
          "77:         active: this.get('isActive'),",
          "78:         label: this.t('passiveState.turn' + onOff)",
          "",
          "[Added Lines]",
          "76:         active: this.get('controller.content.isActive'),",
          "77:         label: this.t('passiveState.turn' + (this.get('controller.content.isActive') ? \"On\" : \"Off\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f31631eae6cfbd638d6903a5a8ccee27bc90de06",
      "candidate_info": {
        "commit_hash": "f31631eae6cfbd638d6903a5a8ccee27bc90de06",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/f31631eae6cfbd638d6903a5a8ccee27bc90de06",
        "files": [
          "ambari-agent/src/test/python/ambari_agent/dummy_files/stomp/alert_definitions.json",
          "ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java",
          "ambari-server/src/main/resources/common-services/HDFS/2.1.0.2.0/alerts.json",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java"
        ],
        "message": "AMBARI-25363. Daily Namenode Heap Usage alert does not work. (#3071)\n\n* AMBARI-25363. Daily Namenode Heap Usage alert does not work. (mpapirkovskyy)\n\nChange-Id: Ice66a5435f3eec5ce817e8cc57f463e718d83e79\n\n* AMBARI-25363. Daily Namenode Heap Usage alert does not work. (mpapirkovskyy)\n\nChange-Id: I8485e9024a7249f3c4fb984d85a7f61e0ac2040c",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java||ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java||ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java -> ambari-server/src/main/java/org/apache/ambari/server/state/alert/ParameterizedSource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:       return m_threshold;",
          "170:     }",
          "172:     @Override",
          "173:     public int hashCode() {",
          "174:       return Objects.hash(m_description, m_displayName, m_name, m_threshold, m_type, m_units, m_value, m_visibility);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     public void setValue(Object value) {",
          "173:       this.m_value = value;",
          "174:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog274.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.upgrade;",
          "20: import java.sql.SQLException;",
          "22: import javax.persistence.Table;",
          "24: import org.apache.ambari.server.AmbariException;",
          "25: import org.apache.ambari.server.orm.DBAccessor;",
          "26: import org.apache.ambari.server.orm.entities.AmbariConfigurationEntity;",
          "27: import org.slf4j.Logger;",
          "28: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.util.List;",
          "22: import java.util.Map;",
          "27: import org.apache.ambari.server.controller.AmbariManagementController;",
          "29: import org.apache.ambari.server.orm.dao.AlertDefinitionDAO;",
          "30: import org.apache.ambari.server.orm.entities.AlertDefinitionEntity;",
          "32: import org.apache.ambari.server.state.Cluster;",
          "33: import org.apache.ambari.server.state.Clusters;",
          "34: import org.apache.ambari.server.state.alert.AlertDefinition;",
          "35: import org.apache.ambari.server.state.alert.AlertDefinitionFactory;",
          "36: import org.apache.ambari.server.state.alert.ParameterizedSource;",
          "37: import org.apache.ambari.server.state.alert.ScriptSource;",
          "38: import org.apache.ambari.server.state.alert.SourceType;",
          "39: import org.apache.commons.collections.MapUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:   static final String AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN = UpgradeCatalog270.AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN;",
          "41:   static final Integer AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN_LEN = 4000;",
          "44:   @Inject",
          "45:   public UpgradeCatalog274(Injector injector) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   static final String HDFS_SERVICE_NAME = \"HDFS\";",
          "57:   static final String NAMENODE_COMPONENT_NAME = \"NAMENODE\";",
          "58:   static final String APPID_PROPERTY_NAME = \"appId\";",
          "59:   static final String NAMENODE_APP_ID = NAMENODE_COMPONENT_NAME.toLowerCase();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:   @Override",
          "88:   protected void executeDMLUpdates() throws AmbariException, SQLException {",
          "89:     addNewConfigurationsFromXml();",
          "90:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     updateNameNodeAlertsAppId();",
          "109:   }",
          "111:   protected void updateNameNodeAlertsAppId() {",
          "112:     AlertDefinitionDAO alertDefinitionDAO = injector.getInstance(AlertDefinitionDAO.class);",
          "113:     AmbariManagementController ambariManagementController = injector.getInstance(AmbariManagementController.class);",
          "114:     AlertDefinitionFactory alertDefinitionFactory = injector.getInstance(AlertDefinitionFactory.class);",
          "116:     Clusters clusters = ambariManagementController.getClusters();",
          "117:     if (clusters != null) {",
          "118:       Map<String, Cluster> clusterMap = clusters.getClusters();",
          "119:       if (MapUtils.isNotEmpty(clusterMap)) {",
          "120:         for (final Cluster cluster : clusterMap.values()) {",
          "121:           if (cluster.getServices().containsKey(HDFS_SERVICE_NAME)) {",
          "122:             List<AlertDefinitionEntity> alertDefinitions =",
          "123:                 alertDefinitionDAO.findByServiceComponent(cluster.getClusterId(), HDFS_SERVICE_NAME, NAMENODE_COMPONENT_NAME);",
          "124:             for (AlertDefinitionEntity alertDefinitionEntity : alertDefinitions) {",
          "125:               if (SourceType.SCRIPT.equals(alertDefinitionEntity.getSourceType())) {",
          "126:                 AlertDefinition databaseDefinition = alertDefinitionFactory.coerce(alertDefinitionEntity);",
          "127:                 ScriptSource scriptSource = (ScriptSource) databaseDefinition.getSource();",
          "128:                 for (ParameterizedSource.AlertParameter scriptParameter : scriptSource.getParameters()) {",
          "129:                   if (APPID_PROPERTY_NAME.equals(scriptParameter.getName())) {",
          "130:                     String value = (String) scriptParameter.getValue();",
          "131:                     if (value.equalsIgnoreCase(NAMENODE_APP_ID) && !value.equals(NAMENODE_APP_ID)) {",
          "132:                       scriptParameter.setValue(NAMENODE_APP_ID);",
          "133:                     }",
          "134:                   }",
          "135:                 }",
          "136:                 alertDefinitionEntity = alertDefinitionFactory.mergeSource(scriptSource, alertDefinitionEntity);",
          "137:                 alertDefinitionDAO.merge(alertDefinitionEntity);",
          "138:               }",
          "139:             }",
          "140:           }",
          "141:         }",
          "142:       }",
          "143:     }",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java -> ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog274Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN;",
          "21: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.AMBARI_CONFIGURATION_PROPERTY_VALUE_COLUMN_LEN;",
          "22: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.AMBARI_CONFIGURATION_TABLE;",
          "23: import static org.easymock.EasyMock.capture;",
          "24: import static org.easymock.EasyMock.eq;",
          "25: import static org.easymock.EasyMock.expectLastCall;",
          "26: import static org.easymock.EasyMock.newCapture;",
          "27: import static org.easymock.EasyMock.replay;",
          "28: import static org.easymock.EasyMock.verify;",
          "30: import org.apache.ambari.server.orm.DBAccessor;",
          "31: import org.easymock.Capture;",
          "32: import org.easymock.CaptureType;",
          "33: import org.easymock.EasyMockSupport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.APPID_PROPERTY_NAME;",
          "24: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.HDFS_SERVICE_NAME;",
          "25: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.NAMENODE_APP_ID;",
          "26: import static org.apache.ambari.server.upgrade.UpgradeCatalog274.NAMENODE_COMPONENT_NAME;",
          "28: import static org.easymock.EasyMock.createMock;",
          "30: import static org.easymock.EasyMock.expect;",
          "36: import java.util.ArrayList;",
          "37: import java.util.HashMap;",
          "38: import java.util.List;",
          "40: import org.apache.ambari.server.controller.AmbariManagementController;",
          "42: import org.apache.ambari.server.orm.dao.AlertDefinitionDAO;",
          "43: import org.apache.ambari.server.orm.entities.AlertDefinitionEntity;",
          "44: import org.apache.ambari.server.state.Cluster;",
          "45: import org.apache.ambari.server.state.Clusters;",
          "46: import org.apache.ambari.server.state.alert.AlertDefinitionFactory;",
          "47: import org.apache.ambari.server.state.alert.ParameterizedSource;",
          "48: import org.apache.ambari.server.state.alert.ScriptSource;",
          "49: import org.apache.ambari.server.state.alert.Source;",
          "50: import org.apache.ambari.server.state.alert.SourceType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     verify(dbAccessor);",
          "76:   }",
          "77: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:   @Test",
          "99:   public void testUpdateNameNodeAlertsAppId() {",
          "100:     AlertDefinitionDAO alertDefinitionDAO = createMock(AlertDefinitionDAO.class);",
          "101:     AmbariManagementController ambariManagementController = createMock(AmbariManagementController.class);",
          "102:     AlertDefinitionFactory alertDefinitionFactory = new AlertDefinitionFactory();",
          "103:     Clusters clusters = createMock(Clusters.class);",
          "104:     Cluster cluster = createMock(Cluster.class);",
          "106:     expect(injector.getInstance(AlertDefinitionDAO.class)).andReturn(alertDefinitionDAO);",
          "107:     expect(injector.getInstance(AmbariManagementController.class)).andReturn(ambariManagementController);",
          "108:     expect(injector.getInstance(AlertDefinitionFactory.class)).andReturn(alertDefinitionFactory);",
          "110:     String sourceJson1 = \"{\\\"path\\\":\\\"file.py\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"appId\\\",\\\"value\\\":\\\"NAMENODE\\\"},{\\\"name\\\":\\\"metricName\\\",\\\"value\\\":\\\"jvm.JvmMetrics.MemHeapUsedM\\\"}],\\\"type\\\":\\\"SCRIPT\\\"}\";",
          "111:     String sourceJson2 = \"{\\\"path\\\":\\\"file.py\\\",\\\"parameters\\\":[{\\\"name\\\":\\\"appId\\\",\\\"value\\\":\\\"Namenode\\\"},{\\\"name\\\":\\\"metricName\\\",\\\"value\\\":\\\"jvm.JvmMetrics.MemHeapUsedM\\\"}],\\\"type\\\":\\\"SCRIPT\\\"}\";",
          "113:     AlertDefinitionEntity alertDefinitionEntity1 = new AlertDefinitionEntity();",
          "114:     alertDefinitionEntity1.setSource(sourceJson1);",
          "115:     alertDefinitionEntity1.setSourceType(SourceType.SCRIPT);",
          "116:     alertDefinitionEntity1.setClusterId(1L);",
          "117:     alertDefinitionEntity1.setDefinitionId(1L);",
          "118:     alertDefinitionEntity1.setScheduleInterval(1);",
          "120:     AlertDefinitionEntity alertDefinitionEntity2 = new AlertDefinitionEntity();",
          "121:     alertDefinitionEntity2.setSource(sourceJson2);",
          "122:     alertDefinitionEntity2.setSourceType(SourceType.SCRIPT);",
          "123:     alertDefinitionEntity2.setClusterId(1L);",
          "124:     alertDefinitionEntity2.setDefinitionId(1L);",
          "125:     alertDefinitionEntity2.setScheduleInterval(1);",
          "127:     expect(ambariManagementController.getClusters()).andReturn(clusters);",
          "128:     expect(clusters.getClusters()).andReturn(new HashMap(){{put(\"cl1\", cluster);}});",
          "129:     expect(cluster.getClusterId()).andReturn(1L);",
          "130:     expect(cluster.getServices()).andReturn(new HashMap(){{put(\"HDFS\", null);}});",
          "131:     expect(alertDefinitionDAO.findByServiceComponent(1L, HDFS_SERVICE_NAME, NAMENODE_COMPONENT_NAME))",
          "132:         .andReturn(new ArrayList(){{add(alertDefinitionEntity1); add(alertDefinitionEntity2);}});",
          "134:     Capture<AlertDefinitionEntity> alertDefinitionEntityCapture = newCapture(CaptureType.ALL);",
          "135:     expect(alertDefinitionDAO.merge(capture(alertDefinitionEntityCapture))).andReturn(new AlertDefinitionEntity()).times(2);",
          "137:     replay(alertDefinitionDAO,ambariManagementController, clusters, cluster, injector);",
          "138:     UpgradeCatalog274 upgradeCatalog274 = new UpgradeCatalog274(injector);",
          "139:     upgradeCatalog274.updateNameNodeAlertsAppId();",
          "141:     verify(alertDefinitionDAO,ambariManagementController, clusters, cluster, injector);",
          "143:     Assert.assertTrue(alertDefinitionEntityCapture.hasCaptured());",
          "144:     List<AlertDefinitionEntity> resultAlertDefinitionEntities = alertDefinitionEntityCapture.getValues();",
          "145:     Assert.assertEquals(2, resultAlertDefinitionEntities.size());",
          "146:     for (AlertDefinitionEntity resultAlertDefinitionEntity : resultAlertDefinitionEntities) {",
          "147:       String resultSource = resultAlertDefinitionEntity.getSource();",
          "148:       Assert.assertNotNull(resultSource);",
          "150:       ScriptSource resultScriptSource = (ScriptSource) alertDefinitionFactory.getGson().fromJson(resultSource, Source.class);",
          "151:       boolean checked =  false;",
          "152:       for (ParameterizedSource.AlertParameter alertParameter : resultScriptSource.getParameters()) {",
          "153:         if (APPID_PROPERTY_NAME.equals(alertParameter.getName())) {",
          "154:           Assert.assertEquals(NAMENODE_APP_ID, alertParameter.getValue());",
          "155:           checked = true;",
          "156:         }",
          "157:       }",
          "158:       Assert.assertTrue(\"No property with appropriate name (appId) was found\", checked);",
          "159:     }",
          "160:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "055103e237f99ee583cdd2a90a77624ac93f4b87",
      "candidate_info": {
        "commit_hash": "055103e237f99ee583cdd2a90a77624ac93f4b87",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/055103e237f99ee583cdd2a90a77624ac93f4b87",
        "files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java"
        ],
        "message": "[AMBARI-24652] Ambari metrics collector failed to show data for custom metrics (apappu) (#2893)",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java||ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java": [
          "File: ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java -> ambari-metrics/ambari-metrics-timelineservice/src/main/java/org/apache/ambari/metrics/core/timeline/discovery/TimelineMetricMetadataManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:     Set<String> sanitizedHostNames = getSanitizedHostnames(hostnames);",
          "658:     if (CollectionUtils.isNotEmpty(sanitizedHostNames)) {",
          "659:       if (CollectionUtils.isNotEmpty(sanitizedMetricNames)) {",
          "",
          "[Removed Lines]",
          "655:     if ( StringUtils.isNotEmpty(appId) && !(appId.equals(\"HOST\") || appId.equals(\"FLUME_HANDLER\"))) { //HACK.. Why??",
          "656:       appId = appId.toLowerCase();",
          "657:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}