{
  "cve_id": "CVE-2023-28458",
  "cve_desc": "pretalx 2.3.1 before 2.3.2 allows path traversal in HTML export (a non-default feature). Organizers can trigger the overwriting (with the standard pretalx 404 page content) of an arbitrary file.",
  "repo": "pretalx/pretalx",
  "patch_hash": "60722c43cf975f319e94102e6bff320723776890",
  "patch_info": {
    "commit_hash": "60722c43cf975f319e94102e6bff320723776890",
    "repo": "pretalx/pretalx",
    "commit_url": "https://github.com/pretalx/pretalx/commit/60722c43cf975f319e94102e6bff320723776890",
    "files": [
      "src/pretalx/agenda/management/commands/export_schedule_html.py"
    ],
    "message": "Fix path traversal in static HTML export\n\nThis vulnerability was discovered by Sonar,\nhttps://www.sonarsource.com/, who provided a detailled description of\nthe vulnerability, and also the fix as it is applied here.\n\nThe fix will be backported to the last release, v2.3.1, and released as\nv2.3.2. A blog post will be published on pretalx.com.",
    "before_after_code_files": [
      "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py"
    ]
  },
  "patch_diff": {
    "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py": [
      "File: src/pretalx/agenda/management/commands/export_schedule_html.py -> src/pretalx/agenda/management/commands/export_schedule_html.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "115:     if path.endswith(\"/\"):",
      "116:         path = path + \"index.html\"",
      "119:     path.parent.mkdir(parents=True, exist_ok=True)",
      "121:     with open(path, \"wb\") as f:",
      "",
      "[Removed Lines]",
      "118:     path = Path(destination) / path.lstrip(\"/\")",
      "",
      "[Added Lines]",
      "118:     path = (Path(destination) / path.lstrip(\"/\")).resolve()",
      "119:     if not Path(destination) in path.parents:",
      "120:         raise CommandError(\"Path traversal detected, aborting.\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:     else:",
      "132:         raise FileNotFoundError()",
      "134:     with open(local_path, \"rb\") as f:",
      "135:         return f.read()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:     # Prevent directory traversal, make sure the path is inside the media or static root",
      "137:     local_path = local_path.resolve(strict=True)",
      "138:     if not any(",
      "139:         path in local_path.parents",
      "140:         for path in (settings.MEDIA_ROOT, settings.STATIC_ROOT)",
      "141:     ):",
      "142:         raise FileNotFoundError()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1f58cdd6b200db2418991928936e4dfcdd3d882e",
      "candidate_info": {
        "commit_hash": "1f58cdd6b200db2418991928936e4dfcdd3d882e",
        "repo": "pretalx/pretalx",
        "commit_url": "https://github.com/pretalx/pretalx/commit/1f58cdd6b200db2418991928936e4dfcdd3d882e",
        "files": [
          "src/pretalx/agenda/management/commands/export_schedule_html.py"
        ],
        "message": "Fix path traversal in static HTML export\n\nThis vulnerability was discovered by Sonar,\nhttps://www.sonarsource.com/, who provided a detailled description of\nthe vulnerability, and also the fix as it is applied here.\n\nThe fix will be backported to the last release, v2.3.1, and released as\nv2.3.2. A blog post will be published on pretalx.com.",
        "before_after_code_files": [
          "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py"
          ],
          "candidate": [
            "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py"
          ]
        }
      },
      "candidate_diff": {
        "src/pretalx/agenda/management/commands/export_schedule_html.py||src/pretalx/agenda/management/commands/export_schedule_html.py": [
          "File: src/pretalx/agenda/management/commands/export_schedule_html.py -> src/pretalx/agenda/management/commands/export_schedule_html.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     if path.endswith(\"/\"):",
          "115:         path = path + \"index.html\"",
          "118:     path.parent.mkdir(parents=True, exist_ok=True)",
          "120:     with open(path, \"wb\") as f:",
          "",
          "[Removed Lines]",
          "117:     path = Path(destination) / path.lstrip(\"/\")",
          "",
          "[Added Lines]",
          "117:     path = (Path(destination) / path.lstrip(\"/\")).resolve()",
          "118:     if not Path(destination) in path.parents:",
          "119:         raise CommandError(\"Path traversal detected, aborting.\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     else:",
          "131:         raise FileNotFoundError()",
          "133:     with open(local_path, \"rb\") as f:",
          "134:         return f.read()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     # Prevent directory traversal, make sure the path is inside the media or static root",
          "136:     local_path = local_path.resolve(strict=True)",
          "137:     if not any(",
          "138:         path in local_path.parents",
          "139:         for path in (settings.MEDIA_ROOT, settings.STATIC_ROOT)",
          "140:     ):",
          "141:         raise FileNotFoundError()",
          "",
          "---------------"
        ]
      }
    }
  ]
}