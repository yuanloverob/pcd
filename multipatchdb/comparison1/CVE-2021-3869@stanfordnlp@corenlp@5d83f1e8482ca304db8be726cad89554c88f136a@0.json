{
  "cve_id": "CVE-2021-3869",
  "cve_desc": "corenlp is vulnerable to Improper Restriction of XML External Entity Reference",
  "repo": "stanfordnlp/corenlp",
  "patch_hash": "5d83f1e8482ca304db8be726cad89554c88f136a",
  "patch_info": {
    "commit_hash": "5d83f1e8482ca304db8be726cad89554c88f136a",
    "repo": "stanfordnlp/corenlp",
    "commit_url": "https://github.com/stanfordnlp/corenlp/commit/5d83f1e8482ca304db8be726cad89554c88f136a",
    "files": [
      "src/edu/stanford/nlp/time/XMLUtils.java",
      "src/edu/stanford/nlp/util/XMLUtils.java"
    ],
    "message": "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes",
    "before_after_code_files": [
      "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
      "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
    ]
  },
  "patch_diff": {
    "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java": [
      "File: src/edu/stanford/nlp/time/XMLUtils.java -> src/edu/stanford/nlp/time/XMLUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package edu.stanford.nlp.time;",
      "3: import edu.stanford.nlp.io.StringOutputStream;",
      "4: import org.w3c.dom.*;",
      "6: import javax.xml.parsers.DocumentBuilder;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: import static edu.stanford.nlp.util.XMLUtils.safeDocumentBuilderFactory;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "64:   public static Document createDocument() {",
      "65:     try {",
      "67:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
      "68:       Document doc = docBuilder.newDocument();",
      "69:       return doc;",
      "",
      "[Removed Lines]",
      "66:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "67:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "83:   public static Element parseElement(String xml) {",
      "84:     try {",
      "86:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
      "87:       Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));",
      "88:       return doc.getDocumentElement();",
      "",
      "[Removed Lines]",
      "85:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "86:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
      "",
      "---------------"
    ],
    "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java": [
      "File: src/edu/stanford/nlp/util/XMLUtils.java -> src/edu/stanford/nlp/util/XMLUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "40:   private XMLUtils() {} // only static methods",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42:   public static DocumentBuilderFactory safeDocumentBuilderFactory() {",
      "43:     DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "44:     try {",
      "45:       dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);",
      "46:       dbf.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
      "47:       dbf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);",
      "48:       dbf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);",
      "49:       dbf.setFeature(\"http://apache.org/xml/features/dom/create-entity-ref-nodes\", false);",
      "50:       dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
      "51:     } catch (ParserConfigurationException e) {",
      "52:       log.warn(e);",
      "53:     }",
      "54:     return dbf;",
      "55:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "68:           File f, String tag) throws SAXException {",
      "69:     List<String> sents = Generics.newArrayList();",
      "70:     try {",
      "72:       DocumentBuilder db = dbf.newDocumentBuilder();",
      "73:       Document doc = db.parse(f);",
      "74:       doc.getDocumentElement().normalize();",
      "",
      "[Removed Lines]",
      "71:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "87:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "129:           File f, String tag) throws SAXException {",
      "130:     List<Element> sents = Generics.newArrayList();",
      "131:     try {",
      "133:       DocumentBuilder db = dbf.newDocumentBuilder();",
      "134:       Document doc = db.parse(f);",
      "135:       doc.getDocumentElement().normalize();",
      "",
      "[Removed Lines]",
      "132:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "148:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "207:       File f, String tag, int numIncludedSiblings) throws SAXException {",
      "208:     List<Triple<String, Element, String>> sents = Generics.newArrayList();",
      "209:     try {",
      "211:       DocumentBuilder db = dbf.newDocumentBuilder();",
      "212:       Document doc = db.parse(f);",
      "213:       doc.getDocumentElement().normalize();",
      "",
      "[Removed Lines]",
      "210:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "226:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "251:   public static DocumentBuilder getXmlParser() {",
      "252:     DocumentBuilder db = null;",
      "253:     try {",
      "255:       dbf.setValidating(false);",
      "",
      "[Removed Lines]",
      "254:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "270:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "283:   public static DocumentBuilder getValidatingXmlParser(File schemaFile) {",
      "284:     DocumentBuilder db = null;",
      "285:     try {",
      "288:       SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
      "289:       Schema schema = factory.newSchema(schemaFile);",
      "",
      "[Removed Lines]",
      "286:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "302:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1207:   public static Document readDocumentFromFile(String filename) throws Exception {",
      "1208:     InputSource in = new InputSource(new FileReader(filename));",
      "1210:     factory.setNamespaceAware(false);",
      "1211:     DocumentBuilder db = factory.newDocumentBuilder();",
      "1212:     db.setErrorHandler(new SAXErrorHandler());",
      "",
      "[Removed Lines]",
      "1209:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "1225:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1257:   public static Document readDocumentFromString(String s) throws Exception {",
      "1258:     InputSource in = new InputSource(new StringReader(s));",
      "1260:     factory.setNamespaceAware(false);",
      "1261:     return factory.newDocumentBuilder().parse(in);",
      "1262:   }",
      "",
      "[Removed Lines]",
      "1259:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "1276:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5cc447c9fdb6b8271badb360ade79fe5fd490762",
      "candidate_info": {
        "commit_hash": "5cc447c9fdb6b8271badb360ade79fe5fd490762",
        "repo": "stanfordnlp/corenlp",
        "commit_url": "https://github.com/stanfordnlp/corenlp/commit/5cc447c9fdb6b8271badb360ade79fe5fd490762",
        "files": [
          "src/edu/stanford/nlp/time/XMLUtils.java",
          "src/edu/stanford/nlp/util/XMLUtils.java"
        ],
        "message": "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes",
        "before_after_code_files": [
          "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
          "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
            "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
          ],
          "candidate": [
            "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
            "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
          ]
        }
      },
      "candidate_diff": {
        "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java": [
          "File: src/edu/stanford/nlp/time/XMLUtils.java -> src/edu/stanford/nlp/time/XMLUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package edu.stanford.nlp.time;",
          "3: import edu.stanford.nlp.io.StringOutputStream;",
          "4: import org.w3c.dom.*;",
          "6: import javax.xml.parsers.DocumentBuilder;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import static edu.stanford.nlp.util.XMLUtils.safeDocumentBuilderFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   public static Document createDocument() {",
          "65:     try {",
          "67:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
          "68:       Document doc = docBuilder.newDocument();",
          "69:       return doc;",
          "",
          "[Removed Lines]",
          "66:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "67:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:   public static Element parseElement(String xml) {",
          "84:     try {",
          "86:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
          "87:       Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));",
          "88:       return doc.getDocumentElement();",
          "",
          "[Removed Lines]",
          "85:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "86:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
          "",
          "---------------"
        ],
        "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java": [
          "File: src/edu/stanford/nlp/util/XMLUtils.java -> src/edu/stanford/nlp/util/XMLUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   private XMLUtils() {} // only static methods",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:   public static DocumentBuilderFactory safeDocumentBuilderFactory() {",
          "43:     DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "44:     try {",
          "45:       dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);",
          "46:       dbf.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
          "47:       dbf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);",
          "48:       dbf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);",
          "49:       dbf.setFeature(\"http://apache.org/xml/features/dom/create-entity-ref-nodes\", false);",
          "50:       dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "51:     } catch (ParserConfigurationException e) {",
          "52:       log.warn(e);",
          "53:     }",
          "54:     return dbf;",
          "55:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:           File f, String tag) throws SAXException {",
          "69:     List<String> sents = Generics.newArrayList();",
          "70:     try {",
          "72:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "73:       Document doc = db.parse(f);",
          "74:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "71:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "87:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:           File f, String tag) throws SAXException {",
          "130:     List<Element> sents = Generics.newArrayList();",
          "131:     try {",
          "133:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "134:       Document doc = db.parse(f);",
          "135:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "132:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "148:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "207:       File f, String tag, int numIncludedSiblings) throws SAXException {",
          "208:     List<Triple<String, Element, String>> sents = Generics.newArrayList();",
          "209:     try {",
          "211:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "212:       Document doc = db.parse(f);",
          "213:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "210:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "226:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "251:   public static DocumentBuilder getXmlParser() {",
          "252:     DocumentBuilder db = null;",
          "253:     try {",
          "255:       dbf.setValidating(false);",
          "",
          "[Removed Lines]",
          "254:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "270:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "283:   public static DocumentBuilder getValidatingXmlParser(File schemaFile) {",
          "284:     DocumentBuilder db = null;",
          "285:     try {",
          "288:       SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
          "289:       Schema schema = factory.newSchema(schemaFile);",
          "",
          "[Removed Lines]",
          "286:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "302:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1207:   public static Document readDocumentFromFile(String filename) throws Exception {",
          "1208:     InputSource in = new InputSource(new FileReader(filename));",
          "1210:     factory.setNamespaceAware(false);",
          "1211:     DocumentBuilder db = factory.newDocumentBuilder();",
          "1212:     db.setErrorHandler(new SAXErrorHandler());",
          "",
          "[Removed Lines]",
          "1209:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "1225:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1257:   public static Document readDocumentFromString(String s) throws Exception {",
          "1258:     InputSource in = new InputSource(new StringReader(s));",
          "1260:     factory.setNamespaceAware(false);",
          "1261:     return factory.newDocumentBuilder().parse(in);",
          "1262:   }",
          "",
          "[Removed Lines]",
          "1259:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "1276:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56edac6ddec1ba53a9671a4683783f245aeb8fe9",
      "candidate_info": {
        "commit_hash": "56edac6ddec1ba53a9671a4683783f245aeb8fe9",
        "repo": "stanfordnlp/corenlp",
        "commit_url": "https://github.com/stanfordnlp/corenlp/commit/56edac6ddec1ba53a9671a4683783f245aeb8fe9",
        "files": [
          "src/edu/stanford/nlp/time/XMLUtils.java",
          "src/edu/stanford/nlp/util/XMLUtils.java"
        ],
        "message": "Attempt to prevent external document attacks by wrapping DocumentBuilderFactory with a bunch of attribute changes",
        "before_after_code_files": [
          "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
          "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
            "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
          ],
          "candidate": [
            "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java",
            "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java"
          ]
        }
      },
      "candidate_diff": {
        "src/edu/stanford/nlp/time/XMLUtils.java||src/edu/stanford/nlp/time/XMLUtils.java": [
          "File: src/edu/stanford/nlp/time/XMLUtils.java -> src/edu/stanford/nlp/time/XMLUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package edu.stanford.nlp.time;",
          "3: import edu.stanford.nlp.io.StringOutputStream;",
          "4: import org.w3c.dom.*;",
          "6: import javax.xml.parsers.DocumentBuilder;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import static edu.stanford.nlp.util.XMLUtils.safeDocumentBuilderFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   public static Document createDocument() {",
          "65:     try {",
          "67:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
          "68:       Document doc = docBuilder.newDocument();",
          "69:       return doc;",
          "",
          "[Removed Lines]",
          "66:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "67:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:   public static Element parseElement(String xml) {",
          "84:     try {",
          "86:       DocumentBuilder docBuilder = dbFactory.newDocumentBuilder();",
          "87:       Document doc = docBuilder.parse(new ByteArrayInputStream(xml.getBytes()));",
          "88:       return doc.getDocumentElement();",
          "",
          "[Removed Lines]",
          "85:       DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "86:       DocumentBuilderFactory dbFactory = safeDocumentBuilderFactory();",
          "",
          "---------------"
        ],
        "src/edu/stanford/nlp/util/XMLUtils.java||src/edu/stanford/nlp/util/XMLUtils.java": [
          "File: src/edu/stanford/nlp/util/XMLUtils.java -> src/edu/stanford/nlp/util/XMLUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   private XMLUtils() {} // only static methods",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:   public static DocumentBuilderFactory safeDocumentBuilderFactory() {",
          "43:     DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "44:     try {",
          "45:       dbf.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true);",
          "46:       dbf.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);",
          "47:       dbf.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);",
          "48:       dbf.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);",
          "49:       dbf.setFeature(\"http://apache.org/xml/features/dom/create-entity-ref-nodes\", false);",
          "50:       dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "51:     } catch (ParserConfigurationException e) {",
          "52:       log.warn(e);",
          "53:     }",
          "54:     return dbf;",
          "55:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:           File f, String tag) throws SAXException {",
          "69:     List<String> sents = Generics.newArrayList();",
          "70:     try {",
          "72:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "73:       Document doc = db.parse(f);",
          "74:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "71:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "87:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:           File f, String tag) throws SAXException {",
          "130:     List<Element> sents = Generics.newArrayList();",
          "131:     try {",
          "133:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "134:       Document doc = db.parse(f);",
          "135:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "132:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "148:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "207:       File f, String tag, int numIncludedSiblings) throws SAXException {",
          "208:     List<Triple<String, Element, String>> sents = Generics.newArrayList();",
          "209:     try {",
          "211:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "212:       Document doc = db.parse(f);",
          "213:       doc.getDocumentElement().normalize();",
          "",
          "[Removed Lines]",
          "210:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "226:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "251:   public static DocumentBuilder getXmlParser() {",
          "252:     DocumentBuilder db = null;",
          "253:     try {",
          "255:       dbf.setValidating(false);",
          "",
          "[Removed Lines]",
          "254:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "270:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "283:   public static DocumentBuilder getValidatingXmlParser(File schemaFile) {",
          "284:     DocumentBuilder db = null;",
          "285:     try {",
          "288:       SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
          "289:       Schema schema = factory.newSchema(schemaFile);",
          "",
          "[Removed Lines]",
          "286:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "302:       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1207:   public static Document readDocumentFromFile(String filename) throws Exception {",
          "1208:     InputSource in = new InputSource(new FileReader(filename));",
          "1210:     factory.setNamespaceAware(false);",
          "1211:     DocumentBuilder db = factory.newDocumentBuilder();",
          "1212:     db.setErrorHandler(new SAXErrorHandler());",
          "",
          "[Removed Lines]",
          "1209:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "1225:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1257:   public static Document readDocumentFromString(String s) throws Exception {",
          "1258:     InputSource in = new InputSource(new StringReader(s));",
          "1260:     factory.setNamespaceAware(false);",
          "1261:     return factory.newDocumentBuilder().parse(in);",
          "1262:   }",
          "",
          "[Removed Lines]",
          "1259:     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "1276:     DocumentBuilderFactory factory = safeDocumentBuilderFactory();",
          "",
          "---------------"
        ]
      }
    }
  ]
}