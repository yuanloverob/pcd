{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1461d6c4eb4162bf240353c727bdc4770d583bd5",
      "candidate_info": {
        "commit_hash": "1461d6c4eb4162bf240353c727bdc4770d583bd5",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/1461d6c4eb4162bf240353c727bdc4770d583bd5",
        "files": [
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue",
          "src/resources/js/pages/database-management/edit.vue",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "update alert",
        "before_after_code_files": [
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue",
          "src/resources/js/pages/database-management/edit.vue||src/resources/js/pages/database-management/edit.vue",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1041:           \"Pastikan tabel belum dibuat dengan CRUD Management jika ingin mengedit atau menghapus tabel.\",",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk. {0} untuk mengunjungi dokumentasi\",",
          "1048:         visitDocs: \"Klik Disini\",",
          "1049:       },",
          "1050:       error: {",
          "",
          "[Removed Lines]",
          "1044: <<<<<<< HEAD",
          "1045: =======",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed. {0} to visit docs.\",",
          "1047: >>>>>>> a1a682b8a68046ebfeefbace1e9846355b266667",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue": [
          "File: src/resources/js/pages/database-management/add.vue -> src/resources/js/pages/database-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "468: </template>",
          "470: <script>",
          "472: import {",
          "473:   required,",
          "474:   requiredIf,",
          "475:   maxLength,",
          "476:   helpers,",
          "477: } from \"vuelidate/lib/validators\";",
          "479: const alphaNumAndUnderscoreValidator = helpers.regex(",
          "480:   \"alphaNumAndDot\",",
          "481:   /^[a-zA-Z\\d_]*$/i",
          "",
          "[Removed Lines]",
          "471: import { Link } from \"@inertiajs/inertia-vue\";",
          "478: import { hrefToUrl } from \"@inertiajs/inertia\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/edit.vue||src/resources/js/pages/database-management/edit.vue": [
          "File: src/resources/js/pages/database-management/edit.vue -> src/resources/js/pages/database-management/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "740:             if (error.errors.table) {",
          "741:               message = error.errors.table[0];",
          "742:             }",
          "744:               this.$vs.notify({",
          "755:             }",
          "756:           });",
          "757:       } else {",
          "",
          "[Removed Lines]",
          "743:             if(error.errors.code.indexOf(\"HY000\") == 0){",
          "745:               title: this.$t(\"alert.danger\"),",
          "746:               text : this.$t('database.edit.warning.fieldAttUnsigned'),",
          "747:               color: \"danger\",",
          "748:             });",
          "749:             }else{",
          "750:             this.$vs.notify({",
          "751:               title: this.$t(\"alert.danger\"),",
          "752:               text : message ? message : this.$t('database.warning.errorOnRequest'),",
          "753:               color: \"danger\",",
          "754:             });",
          "",
          "[Added Lines]",
          "743:              if (error.errors.code.indexOf(\"HY000\") == 0) {",
          "745:                 title: this.$t(\"alert.danger\"),",
          "746:                 text: this.$t(\"database.edit.warning.fieldAttUnsigned\", {",
          "747:                   0: `<b><a href=\"https://badaso-docs.uatech.co.id/core-concept/database-management#create-relationship-table\" target=\"_blank\">${this.$t(",
          "748:                     \"database.edit.warning.visitDocs\"",
          "749:                   )}</a></b>`,",
          "750:                 }),",
          "751:                 color: \"danger\",",
          "752:               });",
          "753:             } else {",
          "754:               this.$vs.notify({",
          "755:                 title: this.$t(\"alert.danger\"),",
          "756:                 text: message",
          "757:                   ? message",
          "758:                   : this.$t(\"database.warning.errorOnRequest\"),",
          "759:                 color: \"danger\",",
          "760:               });",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: use Tests\\TestCase;",
          "10: use Uasoft\\Badaso\\Helpers\\CallHelperTest;",
          "11: use Uasoft\\Badaso\\Models\\DataType;",
          "13: class BadasoApiCrudManagementTest extends TestCase",
          "14: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: use Uasoft\\Badaso\\Models\\Migration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "939:         $data_types = DataType::whereIn('name', $tables)->get();",
          "940:         $this->assertEmpty($data_types);",
          "941:     }",
          "943:     public function testFinish()",
          "944:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "947:     public function testRollbackMigration()",
          "948:     {",
          "950:          $table_1 = [",
          "951:             \"table\" => \"tests_table_12\",",
          "952:             \"rows\" => [",
          "953:                     [",
          "954:                         \"id\" => \"id\",",
          "955:                         \"fieldName\" => \"id\",",
          "956:                         \"fieldType\" => \"bigint\",",
          "957:                         \"fieldLength\" => null,",
          "958:                         \"fieldNull\" => false,",
          "959:                         \"fieldAttribute\" => true,",
          "960:                         \"fieldIncrement\" => true,",
          "961:                         \"fieldIndex\" => \"primary\",",
          "962:                         \"fieldDefault\" => null,",
          "963:                         \"undeletable\" => true",
          "964:                     ],",
          "965:                     [",
          "966:                         \"fieldName\" => \"created_at\",",
          "967:                         \"fieldType\" => \"timestamp\",",
          "968:                         \"fieldLength\" => null,",
          "969:                         \"fieldNull\" => true,",
          "970:                         \"fieldAttribute\" => false,",
          "971:                         \"fieldIncrement\" => false,",
          "972:                         \"fieldIndex\" => null,",
          "973:                         \"fieldDefault\" => null,",
          "974:                         \"undeletable\" => true,",
          "975:                         \"indexes\" => true",
          "976:                     ],",
          "977:                     [",
          "978:                         \"fieldName\" => \"updated_at\",",
          "979:                         \"fieldType\" => \"timestamp\",",
          "980:                         \"fieldLength\" => null,",
          "981:                         \"fieldNull\" => true,",
          "982:                         \"fieldAttribute\" => false,",
          "983:                         \"fieldIncrement\" => false,",
          "984:                         \"fieldIndex\" => null,",
          "985:                         \"fieldDefault\" => null,",
          "986:                         \"undeletable\" => true",
          "987:                         ]",
          "988:                 ],",
          "989:             \"relations\" => []",
          "990:             ];",
          "993:         $table_2 = [",
          "994:             \"table\" => \"tests_table_13\",",
          "995:             \"rows\" => [",
          "996:                     [",
          "997:                         \"id\" => \"id\",",
          "998:                         \"fieldName\" => \"id\",",
          "999:                         \"fieldType\" => \"bigint\",",
          "1000:                         \"fieldLength\" => null,",
          "1001:                         \"fieldNull\" => false,",
          "1002:                         \"fieldAttribute\" => true,",
          "1003:                         \"fieldIncrement\" => true,",
          "1004:                         \"fieldIndex\" => \"primary\",",
          "1005:                         \"fieldDefault\" => null,",
          "1006:                         \"undeletable\" => true",
          "1007:                     ],",
          "1008:                     [",
          "1009:                         \"id\" => \"f8fe0661-d861-41e7-83df-65c09b5d2e7a\",",
          "1010:                         \"fieldName\" => \"table_12_id\",",
          "1011:                         \"fieldType\" => \"bigint\",",
          "1012:                         \"fieldLength\" => null,",
          "1013:                         \"fieldNull\" => false,",
          "1014:                         \"fieldAttribute\" => true,",
          "1015:                         \"fieldIncrement\" => false,",
          "1016:                         \"fieldIndex\" => \"foreign\",",
          "1017:                         \"fieldDefault\" => \"\"",
          "1018:                         ],",
          "1019:                     [",
          "1020:                         \"id\" => \"f769fad7-d192-44d2-9845-86ce55596551\",",
          "1021:                         \"fieldName\" => \"f2\",",
          "1022:                         \"fieldType\" => \"varchar\",",
          "1023:                         \"fieldLength\" => \"255\",",
          "1024:                         \"fieldNull\" => false,",
          "1025:                         \"fieldAttribute\" => false,",
          "1026:                         \"fieldIncrement\" => false,",
          "1027:                         \"fieldIndex\" => null,",
          "1028:                         \"fieldDefault\" => \"\"",
          "1029:                         ],",
          "1030:                         [",
          "1031:                         \"fieldName\" => \"created_at\",",
          "1032:                         \"fieldType\" => \"timestamp\",",
          "1033:                         \"fieldLength\" => null,",
          "1034:                         \"fieldNull\" => true,",
          "1035:                         \"fieldAttribute\" => false,",
          "1036:                         \"fieldIncrement\" => false,",
          "1037:                         \"fieldIndex\" => null,",
          "1038:                         \"fieldDefault\" => null,",
          "1039:                         \"undeletable\" => true,",
          "1040:                         \"indexes\" => true",
          "1041:                         ],",
          "1042:                         [",
          "1043:                         \"fieldName\" => \"updated_at\",",
          "1044:                         \"fieldType\" => \"timestamp\",",
          "1045:                         \"fieldLength\" => null,",
          "1046:                         \"fieldNull\" => true,",
          "1047:                         \"fieldAttribute\" => false,",
          "1048:                         \"fieldIncrement\" => false,",
          "1049:                         \"fieldIndex\" => null,",
          "1050:                         \"fieldDefault\" => null,",
          "1051:                         \"undeletable\" => true",
          "1052:                         ]",
          "1053:                     ],",
          "1054:             \"relations\" => [",
          "1055:                            \"f8fe0661-d861-41e7-83df-65c09b5d2e7a\" => [",
          "1056:                               \"sourceField\" => \"table_12_id\",",
          "1057:                               \"targetTable\" => \"tests_table_12\",",
          "1058:                               \"targetField\" => \"id\",",
          "1059:                               \"onDelete\" => \"cascade\",",
          "1060:                               \"onUpdate\" => \"restrict\"",
          "1061:                            ]",
          "1062:                         ]",
          "1063:             ];",
          "1065:         $list_table = [$table_1, $table_2];",
          "1068:         foreach ($list_table as $key => $value) {",
          "1069:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "1070:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/add'), $value);",
          "1071:         $response->assertSuccessful();",
          "1072:         }",
          "1075:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "1076:             ->json('GET', CallHelperTest::getUrlApiV1Prefix('/database/migration/browse'));",
          "1077:         $response = $response->json('data');",
          "1078:         $migration_name = [];",
          "1079:         for ($i=count($response)-2; $i < count($response); $i++) {",
          "1080:             $migration_name[] = $response[$i]['migration'];",
          "1081:         }",
          "1084:          $response = CallHelperTest::withAuthorizeBearer($this)",
          "1085:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/rollback'), [",
          "1086:                 'step' => 2,",
          "1087:             ]);",
          "1088:         $response->assertSuccessful();",
          "1091:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "1092:             ->json('POST', CallHelperTest::getUrlApiV1Prefix('/database/migration/delete'), [",
          "1093:                 'file_name' => $migration_name",
          "1094:             ]);",
          "1095:         $response->assertSuccessful();",
          "1096:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52b2980da305c9d95c64c789c821b689ba5134b0",
      "candidate_info": {
        "commit_hash": "52b2980da305c9d95c64c789c821b689ba5134b0",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/52b2980da305c9d95c64c789c821b689ba5134b0",
        "files": [
          "src/Seeder/Configurations/FixedMenuItemSeeder.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php": [
          "File: src/Seeder/Configurations/FixedMenuItemSeeder.php -> src/Seeder/Configurations/FixedMenuItemSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:                     'url' => '/#',",
          "143:                     'target' => '_self',",
          "144:                     'icon_class' => 'folder_open',",
          "147:                     'order' => 10,",
          "148:                     'is_expand' => 1,",
          "150:                 ],",
          "151:                 11 => [",
          "152:                     'menu_id' => $menu_core,",
          "",
          "[Removed Lines]",
          "145:                     'color' => NULL,",
          "146:                     'parent_id' => NULL,",
          "149:                     'permissions' => NULL,",
          "",
          "[Added Lines]",
          "145:                     'color' => null,",
          "146:                     'parent_id' => null,",
          "149:                     'permissions' => null,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "202881af702bf21fcf6faed89902ccbb7db7ef31",
      "candidate_info": {
        "commit_hash": "202881af702bf21fcf6faed89902ccbb7db7ef31",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/202881af702bf21fcf6faed89902ccbb7db7ef31",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php",
          "src/resources/js/components/BadasoWidget.vue",
          "src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue",
          "src/resources/js/pages/crud-generated/read.vue"
        ],
        "message": "commit",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php",
          "src/resources/js/components/BadasoWidget.vue||src/resources/js/components/BadasoWidget.vue",
          "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue",
          "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue",
          "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php": [
          "File: src/Controllers/BadasoCRUDController.php -> src/Controllers/BadasoCRUDController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:             $tables_with_crud_data = [];",
          "52:             foreach ($tables as $key => $value) {",
          "55:                     $config_watch_tables->addWatchTable($key);",
          "",
          "[Removed Lines]",
          "53:                 if (! in_array($key, $protected_tables)) {",
          "",
          "[Added Lines]",
          "53:                 if (!in_array($key, $protected_tables)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:             foreach ($table_fields as $key => $column) {",
          "87:                 $field = $key;",
          "88:                 $column = collect($column)->toArray();",
          "90:                     $data_row['data_type_id'] = $data_type->id;",
          "91:                     $data_row['field'] = $key;",
          "92:                     $data_row['type'] = DataTypeToComponent::convert($column['type']);",
          "",
          "[Removed Lines]",
          "89:                 if (! in_array($field, $generated_fields)) {",
          "",
          "[Added Lines]",
          "90:                 if (!in_array($field, $generated_fields)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:                     'required',",
          "148:                     \"unique:Uasoft\\Badaso\\Models\\DataType,name,{$request->id}\",",
          "149:                     function ($attribute, $value, $fail) {",
          "151:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "152:                         }",
          "153:                     },",
          "",
          "[Removed Lines]",
          "150:                         if (! Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "152:                         if (!Schema::hasTable($value)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "156:                 'rows.*.field' => [",
          "157:                     'required',",
          "158:                     function ($attribute, $value, $fail) use ($request) {",
          "160:                             $split_attribute = explode('.', $attribute);",
          "161:                             $split_attribute[2] = 'relation_type';",
          "162:                             $field_to_relation = join('.', $split_attribute);",
          "164:                                 $request->{$attribute} == $value ? $value : $fail(__('badaso::validation.crud.table_column_not_found', ['table_column' => \"$request->name.{$value}\"]));",
          "165:                             }",
          "166:                         } else {",
          "167:                             $table_fields = SchemaManager::describeTable($request->name);",
          "168:                             $field = collect($table_fields)->where('field', $value)->first();",
          "169:                             $row = collect($request->rows)->where('field', $value)->first();",
          "171:                                 $fail(__('badaso::validation.crud.table_column_not_have_default_value', ['table_column' => \"$request->name.{$value}\"]));",
          "172:                             } elseif ($row['field'] != 'id' && $field['key'] == 'PRI') {",
          "173:                                 $fail(__('badaso::validation.crud.id_table_wrong', ['table_column' => \"$request->name.{$value}\"]));",
          "",
          "[Removed Lines]",
          "159:                         if (! Schema::hasColumn($request->name, $value)) {",
          "163:                             if (! $field_to_relation == 'belongs_to_many') {",
          "170:                             if (! $row['add'] && ! $field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "[Added Lines]",
          "161:                         if (!Schema::hasColumn($request->name, $value)) {",
          "165:                             if (!$field_to_relation == 'belongs_to_many') {",
          "172:                             if (!$row['add'] && !$field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "181:                 'notification.*.event' => ['in:onCreate,onRead,onUpdate,onDelete'],",
          "182:                 'create_soft_delete' => ['required', 'boolean', function ($att, $val, $failed) use ($request) {",
          "183:                     if (isset($request->name) && $val) {",
          "185:                             $failed(__('badaso::validation.crud.table_deleted_at_not_exists', [",
          "186:                                 'table_name' => $request->name,",
          "187:                             ]));",
          "",
          "[Removed Lines]",
          "184:                         if (! Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "[Added Lines]",
          "186:                         if (!Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "282:                 ])",
          "283:                 ->performedOn($data_type)",
          "284:                 ->event('updated')",
          "287:             return ApiResponse::success($data_type);",
          "288:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "285:                 ->log('CRUD table '.$data_type->slug.' has been updated');",
          "",
          "[Added Lines]",
          "287:                 ->log('CRUD table ' . $data_type->slug . ' has been updated');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "304:                     'required',",
          "305:                     'unique:Uasoft\\Badaso\\Models\\DataType',",
          "306:                     function ($attribute, $value, $fail) {",
          "308:                             $fail(__('badaso::validation.crud.table_not_found', ['table' => $value]));",
          "309:                         }",
          "310:                     },",
          "",
          "[Removed Lines]",
          "307:                         if (! Schema::hasTable($value)) {",
          "",
          "[Added Lines]",
          "309:                         if (!Schema::hasTable($value)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "314:                 'rows.*.field' => [",
          "315:                     'required',",
          "316:                     function ($attribute, $value, $fail) use ($request) {",
          "318:                             $split_attribute = explode('.', $attribute);",
          "319:                             $split_attribute[2] = 'relation_type';",
          "320:                             $field_to_relation = join('.', $split_attribute);",
          "322:                                 $fail(__('badaso::validation.crud.table_column_not_found', ['table_column' => \"$request->name.{$value}\"]));",
          "323:                             }",
          "324:                         } else {",
          "325:                             $table_fields = SchemaManager::describeTable($request->name);",
          "326:                             $field = collect($table_fields)->where('field', $value)->first();",
          "327:                             $row = collect($request->rows)->where('field', $value)->first();",
          "329:                                 $fail(__('badaso::validation.crud.table_column_not_have_default_value', ['table_column' => \"$request->name.{$value}\"]));",
          "330:                             } elseif ($row['field'] != 'id' && $field['key'] == 'PRI') {",
          "331:                                 $fail(__('badaso::validation.crud.id_table_wrong', ['table_column' => \"$request->name.{$value}\"]));",
          "",
          "[Removed Lines]",
          "317:                         if (! Schema::hasColumn($request->name, $value)) {",
          "321:                             if (! $field_to_relation == 'belongs_to_many') {",
          "328:                             if (! $row['add'] && ! $field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "[Added Lines]",
          "319:                         if (!Schema::hasColumn($request->name, $value)) {",
          "323:                             if (!$field_to_relation == 'belongs_to_many') {",
          "330:                             if (!$row['add'] && !$field['autoincrement'] && $field['notnull'] && is_null($field['default'])) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "339:                 'notification.*.event' => ['in:onCreate,onRead,onUpdate,onDelete'],",
          "340:                 'create_soft_delete' => ['required', 'boolean', function ($att, $val, $failed) use ($request) {",
          "341:                     if (isset($request->name) && $val) {",
          "343:                             $failed(__('badaso::validation.crud.table_deleted_at_not_exists', [",
          "344:                                 'table_name' => $request->name,",
          "345:                             ]));",
          "",
          "[Removed Lines]",
          "342:                         if (! Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "[Added Lines]",
          "344:                         if (!Schema::hasColumn($request->name, 'deleted_at')) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "427:                 ->withProperties(['attributes' => $new_data_type])",
          "428:                 ->performedOn($new_data_type)",
          "429:                 ->event('created')",
          "432:             return ApiResponse::success($new_data_type);",
          "433:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "430:                 ->log('CRUD table '.$new_data_type->slug.' has been created');",
          "",
          "[Added Lines]",
          "432:                 ->log('CRUD table ' . $new_data_type->slug . ' has been created');",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "461:             DB::commit();",
          "463:             activity('CRUD')",
          "470:             return ApiResponse::success();",
          "471:         } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "464:             ->causedBy(auth()->user() ?? null)",
          "465:             ->withProperties(['attributes' => $data_type])",
          "466:             ->performedOn($data_type)",
          "467:             ->event('deleted')",
          "468:             ->log('CRUD table '.$data_type->slug.' has been deleted');",
          "",
          "[Added Lines]",
          "466:                 ->causedBy(auth()->user() ?? null)",
          "467:                 ->withProperties(['attributes' => $data_type])",
          "468:                 ->performedOn($data_type)",
          "469:                 ->event('deleted')",
          "470:                 ->log('CRUD table ' . $data_type->slug . ' has been deleted');",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "479:     {",
          "480:         $menu_key = config('badaso.default_menu');",
          "481:         $menu = Menu::where('key', $menu_key)->first();",
          "484:         if (is_null($menu)) {",
          "485:             $menu = new Menu();",
          "",
          "[Removed Lines]",
          "482:         $url = '/'.$menu_key.'/'.$data_type->slug;",
          "",
          "[Added Lines]",
          "484:         $url = '/' . $menu_key . '/' . $data_type->slug;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "500:             $menu_item->icon_class = $data_type->icon;",
          "501:             $menu_item->color = null;",
          "502:             $menu_item->parent_id = null;",
          "504:             $menu_item->save();",
          "505:         } else {",
          "506:             $menu_item = new MenuItem();",
          "",
          "[Removed Lines]",
          "503:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_'.$data_type->name : null;",
          "",
          "[Added Lines]",
          "505:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_' . $data_type->name : null;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "511:             $menu_item->icon_class = $data_type->icon;",
          "512:             $menu_item->color = null;",
          "513:             $menu_item->parent_id = null;",
          "515:             $menu_item->order = $menu_item->highestOrderMenuItem();",
          "516:             $menu_item->save();",
          "517:         }",
          "",
          "[Removed Lines]",
          "514:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_'.$data_type->name : null;",
          "",
          "[Added Lines]",
          "516:             $menu_item->permissions = $data_type->generate_permissions ? 'browse_' . $data_type->name : null;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "520:     private function deleteMenuItem($data_type)",
          "521:     {",
          "522:         $menu_key = config('badaso.default_menu');",
          "524:         MenuItem::where('url', $url)->delete();",
          "525:     }",
          "",
          "[Removed Lines]",
          "523:         $url = '/'.$menu_key.'/'.$data_type->slug;",
          "",
          "[Added Lines]",
          "525:         $url = '/' . $menu_key . '/' . $data_type->slug;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "529:         $filesystem = new LaravelFileSystem();",
          "530:         $file_path = ApiDocs::getFilePath($table_name);",
          "531:         $stub = ApiDocs::getStub($table_name, $data_rows, $data_type);",
          "533:             return false;",
          "534:         }",
          "",
          "[Removed Lines]",
          "532:         if (! $filesystem->put($file_path, $stub)) {",
          "",
          "[Added Lines]",
          "534:         if (!$filesystem->put($file_path, $stub)) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "566:                         'undeletable' => true,",
          "567:                     ],",
          "568:                     1 => [",
          "571:                         'field_type' => 'bigint',",
          "572:                         'field_length' => null,",
          "573:                         'field_null' => false,",
          "",
          "[Removed Lines]",
          "569:                         'id' => $request['name'].'_id',",
          "570:                         'field_name' => $request['name'].'_id',",
          "",
          "[Added Lines]",
          "571:                         'id' => $request['name'] . '_id',",
          "572:                         'field_name' => $request['name'] . '_id',",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "577:                         'field_default' => null,",
          "578:                     ],",
          "579:                     2 => [",
          "582:                         'field_type' => 'bigint',",
          "583:                         'field_length' => null,",
          "584:                         'field_null' => false,",
          "",
          "[Removed Lines]",
          "580:                         'id' => $value['destination_table'].'_id',",
          "581:                         'field_name' => $value['destination_table'].'_id',",
          "",
          "[Added Lines]",
          "582:                         'id' => $value['destination_table'] . '_id',",
          "583:                         'field_name' => $value['destination_table'] . '_id',",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "613:                 ];",
          "615:                 $relations = [",
          "618:                         'target_table' => $request['name'],",
          "619:                         'target_field' => 'id',",
          "620:                         'on_delete' => 'cascade',",
          "621:                         'on_update' => 'restrict',",
          "622:                     ],",
          "625:                         'target_table' => $value['destination_table'],",
          "626:                         'target_field' => 'id',",
          "627:                         'on_delete' => 'cascade',",
          "628:                         'on_update' => 'restrict',",
          "629:                     ],",
          "630:                 ];",
          "632:                     $this->file_name = $this->file_generator->generateBDOMigrationFile($table, 'create', $rows, $relations);",
          "633:                     $exitCode = Artisan::call('migrate', [",
          "634:                         '--path' => 'database/migrations/badaso/',",
          "",
          "[Removed Lines]",
          "616:                     $request['name'].'_id' => [",
          "617:                         'source_field' => $request['name'].'_id',",
          "623:                     $value['destination_table'].'_id' => [",
          "624:                         'source_field' => $value['destination_table'].'_id',",
          "631:                 if (! Schema::hasTable($table)) {",
          "",
          "[Added Lines]",
          "618:                     $request['name'] . '_id' => [",
          "619:                         'source_field' => $request['name'] . '_id',",
          "625:                     $value['destination_table'] . '_id' => [",
          "626:                         'source_field' => $value['destination_table'] . '_id',",
          "633:                 if (!Schema::hasTable($table)) {",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoWidget.vue||src/resources/js/components/BadasoWidget.vue": [
          "File: src/resources/js/components/BadasoWidget.vue -> src/resources/js/components/BadasoWidget.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <vs-col class=\"badaso-widget__container\">",
          "3:     <vs-row>",
          "4:       <vs-col",
          "5:         v-for=\"(data, index) in dashboardData\"",
          "6:         :key=\"index\"",
          "7:         :vs-lg=\"col\"",
          "8:         vs-xs=\"12\"",
          "9:       >",
          "10:         <vs-card class=\"widget__content\">",
          "11:           <div class=\"widget__icon-container\">",
          "12:             <vs-icon",
          "13:               v-if=\"data.icon\"",
          "14:               class=\"widget__icon\"",
          "15:               :icon=\"data.icon\"",
          "16:             ></vs-icon>",
          "17:             <template v-if=\"data.delimiter == ','\">",
          "18:               <vs-row v-if=\"!data.prefixValue\">",
          "19:                 <h4 class=\"mb-1\">{{ setDelimiterComa(data.value) }}</h4>",
          "20:               </vs-row>",
          "21:               <vs-row v-else>",
          "22:                 <h4>{{ data.prefixValue }}</h4>",
          "23:                 <h4 class=\"mb-1\">",
          "24:                   {{ setDelimiterComa(data.value) }}",
          "25:                 </h4>",
          "26:               </vs-row>",
          "27:             </template>",
          "29:             <template v-else-if=\"data.delimiter == '.'\">",
          "30:               <vs-row v-if=\"!data.prefixValue\">",
          "31:                 <h4 class=\"mb-1\">{{ setDelimiterPoint(data.value) }}</h4>",
          "32:               </vs-row>",
          "33:               <vs-row v-else>",
          "34:                 <h4>{{ data.prefixValue }}</h4>",
          "35:                 <h4 class=\"mb-1\">",
          "36:                   {{ setDelimiterPoint(data.value) }}",
          "37:                 </h4>",
          "38:               </vs-row>",
          "39:             </template>",
          "41:             <template v-else>",
          "42:               <vs-row v-if=\"!data.prefixValue\">",
          "43:                 <h4 class=\"mb-1\">{{ data.value }}</h4>",
          "44:               </vs-row>",
          "45:               <vs-row v-else>",
          "46:                 <h4>{{ data.prefixValue }}</h4>",
          "47:                 <h4 class=\"mb-1\">",
          "48:                   {{ data.value }}",
          "49:                 </h4>",
          "50:               </vs-row>",
          "51:             </template>",
          "52:             <span>{{ data.label }}</span>",
          "53:           </div>",
          "54:           <vs-progress",
          "55:             class=\"widget__progress-bar\"",
          "56:             :percent=\"getPercent(data.value, data.max)\"",
          "57:             :color=\"getProgressBarColor(data.value, data.max)\"",
          "58:             >primary</vs-progress",
          "59:           >",
          "60:         </vs-card>",
          "61:       </vs-col>",
          "62:     </vs-row>",
          "63:   </vs-col>",
          "64: </template>",
          "66: <script>",
          "67: export default {",
          "68:   name: \"BadasoWidget\",",
          "69:   components: {},",
          "70:   data: () => ({}),",
          "71:   props: {",
          "72:     icon: {",
          "73:       type: String,",
          "74:       default: \"\",",
          "75:     },",
          "76:     value: {",
          "77:       type: String,",
          "78:       default: \"\",",
          "79:     },",
          "80:     label: {",
          "81:       type: String,",
          "82:       default: \"\",",
          "83:     },",
          "84:     delimiter: {",
          "85:       type: String,",
          "86:       default: \"\",",
          "87:     },",
          "88:     prefixValue: {",
          "89:       type: String,",
          "90:       default: \"\",",
          "91:     },",
          "92:   },",
          "93: };",
          "94: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/add.vue||src/resources/js/pages/crud-generated/add.vue": [
          "File: src/resources/js/pages/crud-generated/add.vue -> src/resources/js/pages/crud-generated/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:                       errors[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "322:                     \"",
          "323:                   ></badaso-text>",
          "325:                     v-if=\"dataRow.type == 'relation' &&",
          "327:                     :label=\"dataRow.displayName\"",
          "331:                     :alert=\"",
          "332:                       errors[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "334:                     :items=\"",
          "335:                       relationData[",
          "336:                         $caseConvert.stringSnakeToCamel(",
          "",
          "[Removed Lines]",
          "324:                   <badaso-select-multiple",
          "326:                     dataRow.relation.relationType == 'belongs_to_many'\"",
          "328:                     :placeholder=\"dataRow.displayName\"",
          "329:                     v-model=\"dataRow.value\"",
          "330:                     size=\"12\"",
          "333:                     \"",
          "",
          "[Added Lines]",
          "324:                   <badaso-select-multiple",
          "326:                     dataRow.relation.relationType == 'belongs_to_many'\"",
          "328:                     :placeholder=\"dataRow.displayName\"",
          "329:                     v-model=\"dataRow.value\"",
          "330:                     size=\"12\"",
          "333:                     \"",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/edit.vue||src/resources/js/pages/crud-generated/edit.vue": [
          "File: src/resources/js/pages/crud-generated/edit.vue -> src/resources/js/pages/crud-generated/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:                 <template v-if=\"dataRow.edit && dataRow.type !== 'hidden'\">",
          "27:                   <!-- <input type=\"text\" v-model=\"dataRow.value\"> -->",
          "28:                   <!-- <vs-input type=\"text\" v-model=\"dataRow.value\"></vs-input> -->",
          "29:                   <badaso-text",
          "30:                     v-if=\"dataRow.type == 'text'\"",
          "31:                     :label=\"dataRow.displayName\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:                   {{ dataRow.value }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:                       ]",
          "305:                     \"",
          "306:                   ></badaso-select>",
          "308:                     v-if=\"dataRow.type == 'relation' &&",
          "310:                     :label=\"dataRow.displayName\"",
          "314:                     :alert=\"",
          "315:                         errors[$caseConvert.stringSnakeToCamel(dataRow.field)]",
          "317:                     :items=\"",
          "318:                       relationData[",
          "319:                         $caseConvert.stringSnakeToCamel(",
          "",
          "[Removed Lines]",
          "307:                   <badaso-select-multiple",
          "309:                     dataRow.relation.relationType == 'belongs_to_many'\"",
          "311:                     :placeholder=\"dataRow.displayName\"",
          "312:                     v-model=\"dataRow.value\"",
          "313:                     size=\"12\"",
          "316:                       \"",
          "",
          "[Added Lines]",
          "308:                   <badaso-select-multiple",
          "310:                     dataRow.relation.relationType == 'belongs_to_many'\"",
          "312:                     :placeholder=\"dataRow.displayName\"",
          "313:                     v-model=\"dataRow.value\"",
          "314:                     size=\"12\"",
          "317:                       \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "534:               } else if (data.type == \"relation\" && data.relation.relationType == 'belongs_to_many'){",
          "535:                   let record = this.record[this.$caseConvert.stringSnakeToCamel(data.field)]",
          "536:                   let destinationTableId = data.relation.destinationTable + 'Id'",
          "538:                   Object.entries(record).filter(function (item,key) {",
          "539:                     return data.value[key] = item[1][destinationTableId];",
          "540:               });",
          "541:             } else {",
          "542:               data.value =",
          "543:                 this.record[this.$caseConvert.stringSnakeToCamel(data.field)];",
          "544:             }",
          "545:           } catch (error) {}",
          "546:           return data;",
          "547:         });",
          "548:         this.dataType.dataRows = JSON.parse(JSON.stringify(dataRows));",
          "549:       } catch (error) {",
          "550:         if (error.status == 503) {",
          "551:           this.isMaintenance = true;",
          "",
          "[Removed Lines]",
          "537:                   data.value = []",
          "",
          "[Added Lines]",
          "539:                   data.value = []",
          "551:         console.log(dataRows,'data');",
          "555:         console.log(this.dataType.dataRows,'result');",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-generated/read.vue||src/resources/js/pages/crud-generated/read.vue": [
          "File: src/resources/js/pages/crud-generated/read.vue -> src/resources/js/pages/crud-generated/read.vue"
        ]
      }
    },
    {
      "candidate_hash": "60bac5c70d3730650e69d4b7d306df3178128bee",
      "candidate_info": {
        "commit_hash": "60bac5c70d3730650e69d4b7d306df3178128bee",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/60bac5c70d3730650e69d4b7d306df3178128bee",
        "files": [
          "src/Seeder/Configurations/ConfigurationsSeeder.php"
        ],
        "message": "update configuration seeder",
        "before_after_code_files": [
          "src/Seeder/Configurations/ConfigurationsSeeder.php||src/Seeder/Configurations/ConfigurationsSeeder.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Seeder/Configurations/ConfigurationsSeeder.php||src/Seeder/Configurations/ConfigurationsSeeder.php": [
          "File: src/Seeder/Configurations/ConfigurationsSeeder.php -> src/Seeder/Configurations/ConfigurationsSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:                     'group' => 'adminPanel',",
          "131:                     'can_delete' => 0,",
          "132:                 ],",
          "133:             ];",
          "135:             foreach ($settings as $key => $value) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:                 11 => [",
          "134:                     'key' => 'defaultRoleRegistration',",
          "135:                     'display_name' => 'Default Role Registration',",
          "136:                     'value' => 'customer',",
          "137:                     'details' => '{\"items\":[]}',",
          "138:                     'type' => 'select',",
          "139:                     'order' => 1,",
          "140:                     'group' => 'adminPanel',",
          "141:                     'can_delete' => 0,",
          "142:                 ],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25b56b27096a617b52dd4b78bef0e7f1eefc2832",
      "candidate_info": {
        "commit_hash": "25b56b27096a617b52dd4b78bef0e7f1eefc2832",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/25b56b27096a617b52dd4b78bef0e7f1eefc2832",
        "files": [
          "src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoUserController.php",
          "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php",
          "src/Models/User.php",
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/auth/register.vue",
          "src/resources/js/pages/user-management/add.vue",
          "src/resources/js/pages/user-management/edit.vue",
          "src/resources/js/pages/user-management/read.vue",
          "src/resources/js/pages/user/profile.vue"
        ],
        "message": "add field address",
        "before_after_code_files": [
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php",
          "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php||src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php",
          "src/Models/User.php||src/Models/User.php",
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/auth/register.vue||src/resources/js/pages/auth/register.vue",
          "src/resources/js/pages/user-management/add.vue||src/resources/js/pages/user-management/add.vue",
          "src/resources/js/pages/user-management/edit.vue||src/resources/js/pages/user-management/edit.vue",
          "src/resources/js/pages/user-management/read.vue||src/resources/js/pages/user-management/read.vue",
          "src/resources/js/pages/user/profile.vue||src/resources/js/pages/user/profile.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:                 'phone'    => 'required|numeric|min:6',",
          "176:                 'email'    => 'required|string|email|max:255|unique:Uasoft\\Badaso\\Models\\User',",
          "177:                 'password' => 'required|string|min:6|confirmed',",
          "178:             ]);",
          "180:             $user = User::create([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:                 'address'  => 'nullable',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "183:                 'phone' => $request->get('phone'),",
          "184:                 'email'    => $request->get('email'),",
          "185:                 'password' => Hash::make($request->get('password')),",
          "186:             ]);",
          "188:             $role = $this->getCustomerRole();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:                 'address'  => $request->get('address'),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "540:                 'name'      => 'required|string|max:255',",
          "541:                 'username'  => \"required|string|max:255|alpha_num|unique:Uasoft\\Badaso\\Models\\User,username,{$user_id}\",",
          "542:                 'avatar'    => 'nullable',",
          "543:             ]);",
          "545:             $user = User::find($user->id);",
          "547:             $user->name = $request->name;",
          "548:             $user->username = $request->username;",
          "549:             $user->avatar = $request->avatar;",
          "550:             $user->additional_info = $request->additional_info;",
          "551:             $user->save();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545:                 'phone'     => 'nullable',",
          "546:                 'address'     => 'nullable',",
          "553:             $user->phone = $request->phone;",
          "554:             $user->address = $request->address;",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoUserController.php||src/Controllers/BadasoUserController.php": [
          "File: src/Controllers/BadasoUserController.php -> src/Controllers/BadasoUserController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:                 'username'  => \"required|string|max:255|alpha_num|unique:Uasoft\\Badaso\\Models\\User,username,{$request->id}\",",
          "58:                 'name'      => 'required',",
          "59:                 'avatar'    => 'nullable',",
          "60:             ]);",
          "62:             $user = User::find($request->id);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:                 'phone'    => 'nullable',",
          "61:                 'address'    => 'nullable',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:             $user->name = $request->name;",
          "66:             $user->email = $request->email;",
          "67:             $user->avatar = $request->avatar;",
          "68:             $user->additional_info = $request->additional_info;",
          "69:             if ($request->password && $request->password != '') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:             $user->phone = $request->phone;",
          "70:             $user->address = $request->address;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:                 'name'      => 'required|string|max:255',",
          "105:                 'username'  => 'required|string|max:255|alpha_num|unique:Uasoft\\Badaso\\Models\\User,username',",
          "106:                 'avatar'    => 'nullable',",
          "107:             ]);",
          "109:             $user = new User();",
          "110:             $user->name = $request->name;",
          "111:             $user->username = $request->username;",
          "112:             $user->email = $request->email;",
          "113:             $user->avatar = $request->avatar;",
          "114:             $user->additional_info = $request->additional_info;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:                 'phone'     => 'required|numeric|min:6',",
          "112:                 'address'   => 'nullable',",
          "118:             $user->phone = $request->phone;",
          "119:             $user->address = $request->address;",
          "",
          "---------------"
        ],
        "src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php||src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php": [
          "File: src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php -> src/Migrations/2023_09_22_084333_add_address_to_badaso_users_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Illuminate\\Database\\Migrations\\Migration;",
          "4: use Illuminate\\Database\\Schema\\Blueprint;",
          "5: use Illuminate\\Support\\Facades\\Schema;",
          "7: class AddAddressToBadasoUsersTable extends Migration",
          "8: {",
          "14:     public function up()",
          "15:     {",
          "16:         Schema::table(config('badaso.database.prefix') . 'users', function (Blueprint $table) {",
          "17:             $table->text('address')->nullable()->after('phone');",
          "18:         });",
          "19:     }",
          "26:     public function down()",
          "27:     {",
          "28:         Schema::table(config('badaso.database.prefix') . 'users', function (Blueprint $table) {",
          "29:             $table->dropColumn('address');",
          "30:         });",
          "31:     }",
          "32: }",
          "",
          "---------------"
        ],
        "src/Models/User.php||src/Models/User.php": [
          "File: src/Models/User.php -> src/Models/User.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         'email',",
          "40:         'password',",
          "41:         'avatar',",
          "42:         'additional_info',",
          "43:         'last_sent_token_at',",
          "44:     ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:         'address',",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     field: {",
          "41:       name: \"Name\",",
          "42:       username: \"Username\",",
          "44:       email: \"Email\",",
          "45:       password: \"Password\",",
          "46:       passwordConfirmation: \"Password Confirmation\",",
          "",
          "[Removed Lines]",
          "43:       phone:\"Phone\",",
          "",
          "[Added Lines]",
          "43:       phone: \"Phone\",",
          "44:       address: \"Address\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "125:     newPasswordConfirmation: \"New Password Confirmation\",",
          "126:     name: \"Name\",",
          "127:     avatar: \"Avatar\",",
          "128:     additionalInfo: \"Additional info(optional)\",",
          "129:     token: \"Verification Code\",",
          "130:     buttons: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     phone: \"Phone Number\",",
          "130:     address: \"Address\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:     edit: {",
          "252:       multiple: \"Update Configurations\",",
          "253:     },",
          "255:   },",
          "257:   crud: {",
          "",
          "[Removed Lines]",
          "254:     maintenanceMode: \"Maintenance setting is readonly.\"",
          "",
          "[Added Lines]",
          "257:     maintenanceMode: \"Maintenance setting is readonly.\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "666:           title: \"Username\",",
          "667:           placeholder: \"Username\",",
          "668:         },",
          "669:         email: {",
          "670:           title: \"Email\",",
          "671:           placeholder: \"Email\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "672:         phone: {",
          "673:           title: \"Phone Number\",",
          "674:           placeholder: \"Phone Number\",",
          "675:         },",
          "676:         address: {",
          "677:           title: \"Address\",",
          "678:           placeholder: \"Address\",",
          "679:         },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "701:           title: \"Username\",",
          "702:           placeholder: \"Username\",",
          "703:         },",
          "704:         email: {",
          "705:           title: \"Email\",",
          "706:           placeholder: \"Email\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "715:         phone: {",
          "716:           title: \"Phone Number\",",
          "717:           placeholder: \"Phone Number\",",
          "718:         },",
          "719:         address: {",
          "720:           title: \"Address\",",
          "721:           placeholder: \"Address\",",
          "722:         },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "730:       avatar: \"Avatar\",",
          "731:       name: \"Name\",",
          "732:       username: \"Username\",",
          "733:       email: \"Email\",",
          "734:       additionalInfo: \"Additional Info\",",
          "735:       emailVerified: \"Is Email Verified\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "752:       phone: \"Phone Number\",",
          "753:       address: \"Address\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "850:       isPublic: \"Is Public\",",
          "851:       action: \"Action\",",
          "852:       rolesCanSeeAllData: \"Roles Can See All Data\",",
          "854:     },",
          "855:     footer: {",
          "856:       descriptionTitle: \"Registries\",",
          "",
          "[Removed Lines]",
          "853:       fieldIdentifyRelatedUser: \"Field Identify Related User\"",
          "",
          "[Added Lines]",
          "874:       fieldIdentifyRelatedUser: \"Field Identify Related User\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "901:         fieldIdentifyRelatedUser: {",
          "902:           title: \"Column for identify user related data\",",
          "903:           placeholder: \"Column for identify user related data\",",
          "905:       },",
          "906:       button: \"Save\",",
          "907:     },",
          "",
          "[Removed Lines]",
          "904:         }",
          "",
          "[Added Lines]",
          "925:         },",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "922:       },",
          "923:       button: \"Edit\",",
          "924:       rolesCanSeeAllData: \"Roles Can See All Data\",",
          "926:     },",
          "927:   },",
          "",
          "[Removed Lines]",
          "925:       fieldIdentifyRelatedUser: \"Field Identify Related User\"",
          "",
          "[Added Lines]",
          "946:       fieldIdentifyRelatedUser: \"Field Identify Related User\",",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     field: {",
          "41:       name: \"Nama\",",
          "42:       username: \"Username\",",
          "44:       email: \"Email\",",
          "45:       password: \"Kata sandi\",",
          "46:       passwordConfirmation: \"Konfirmasi kata sandi\",",
          "",
          "[Removed Lines]",
          "43:       phone: \"Phone\",",
          "",
          "[Added Lines]",
          "43:       phone: \"No Telp/Hp\",",
          "44:       address: \"Alamat\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "125:     newPasswordConfirmation: \"New Password Confirmation\",",
          "126:     name: \"Name\",",
          "127:     avatar: \"Avatar\",",
          "128:     additionalInfo: \"Additional info(optional)\",",
          "129:     token: \"Verification Code\",",
          "130:     buttons: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:     phone: \"No Telp/Hp\",",
          "130:     address: \"Alamat\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:     edit: {",
          "252:       multiple: \"Simpan Konfigurasi\",",
          "253:     },",
          "255:   },",
          "257:   crud: {",
          "",
          "[Removed Lines]",
          "254:     maintenanceMode: \"Pengaturan maintenance hanya readonly.\"",
          "",
          "[Added Lines]",
          "257:     maintenanceMode: \"Pengaturan maintenance hanya readonly.\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "650:           title: \"Username\",",
          "651:           placeholder: \"Username\",",
          "652:         },",
          "653:         password: {",
          "654:           title: \"Kata sandi\",",
          "655:           placeholder: \"Kata sandi\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "656:         phone: {",
          "657:           title: \"No Telp/Hp\",",
          "658:           placeholder: \"No Telp/Hp\",",
          "659:         },",
          "660:         address: {",
          "661:           title: \"Alamat\",",
          "662:           placeholder: \"Alamat\",",
          "663:         },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "681:           title: \"Username\",",
          "682:           placeholder: \"Username\",",
          "683:         },",
          "684:         email: {",
          "685:           title: \"Email\",",
          "686:           placeholder: \"Email\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "695:         phone: {",
          "696:           title: \"No Telp/Hp\",",
          "697:           placeholder: \"No Telp/Hp\",",
          "698:         },",
          "699:         address: {",
          "700:           title: \"Alamat\",",
          "701:           placeholder: \"Alamat\",",
          "702:         },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "710:       avatar: \"Avatar\",",
          "711:       name: \"Nama\",",
          "712:       username: \"Username\",",
          "713:       email: \"Email\",",
          "714:       additionalInfo: \"Info Tambahan\",",
          "715:       emailVerified: \"Email Diverifikasi\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "732:       phone: \"No Telp/Hp\",",
          "733:       address: \"Alamat\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "825:       isPublic: \"Publik\",",
          "826:       action: \"Aksi\",",
          "827:       rolesCanSeeAllData: \"Role yang dapat melihat semua data\",",
          "829:     },",
          "830:     help: {",
          "831:       alwaysAllow:",
          "",
          "[Removed Lines]",
          "828:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\"",
          "",
          "[Added Lines]",
          "849:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "881:         fieldIdentifyRelatedUser: {",
          "882:           title: \"Kolom relasi untuk identifikasi data user\",",
          "883:           placeholder: \"Kolom relasi untuk identifikasi data user\",",
          "885:       },",
          "886:       button: \"Simpan\",",
          "887:     },",
          "",
          "[Removed Lines]",
          "884:         }",
          "",
          "[Added Lines]",
          "905:         },",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "902:       },",
          "903:       button: \"Ubah\",",
          "904:       rolesCanSeeAllData: \"Role yang dapat melihat semua data\",",
          "906:     },",
          "907:   },",
          "",
          "[Removed Lines]",
          "905:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\"",
          "",
          "[Added Lines]",
          "926:       fieldIdentifyRelatedUser: \"Kolom relasi untuk identifikasi data user\",",
          "",
          "---------------"
        ],
        "src/resources/js/pages/auth/register.vue||src/resources/js/pages/auth/register.vue": [
          "File: src/resources/js/pages/auth/register.vue -> src/resources/js/pages/auth/register.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:               <span class=\"register__input--error\" v-html=\"errors.email\"></span>",
          "99:             </div>",
          "100:           </div>",
          "101:           <vs-input",
          "102:             icon=\"lock\"",
          "103:             type=\"password\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:         <vs-input",
          "103:             icon=\"maps\"",
          "104:             icon-after",
          "105:             size=\"default\"",
          "106:             :placeholder=\"$t('register.field.address')\"",
          "107:             v-model=\"address\"",
          "108:             class=\"register__input\"",
          "109:           />",
          "110:           <div v-if=\"errors.address\" class=\"register__error-container\">",
          "111:             <div v-if=\"$helper.isArray(errors.address)\">",
          "112:               <span",
          "113:                 class=\"register__input--error\"",
          "114:                 v-for=\"(info, index) in errors.address\"",
          "115:                 :key=\"index\"",
          "116:               >",
          "117:                 {{ info }}",
          "118:               </span>",
          "119:             </div>",
          "120:             <div v-else>",
          "121:               <span class=\"register__input--error\" v-html=\"errors.address\"></span>",
          "122:             </div>",
          "123:           </div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     name: \"\",",
          "161:     username: \"\",",
          "162:     phone:\"\",",
          "163:     email: \"\",",
          "164:     password: \"\",",
          "165:     passwordConfirmation: \"\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187:     address:\"\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "175:           name: this.name,",
          "176:           username: this.username,",
          "177:           phone:this.phone,",
          "178:           email: this.email,",
          "179:           password: this.password,",
          "180:           passwordConfirmation: this.passwordConfirmation,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:           address:this.address,",
          "",
          "---------------"
        ],
        "src/resources/js/pages/user-management/add.vue||src/resources/js/pages/user-management/add.vue": [
          "File: src/resources/js/pages/user-management/add.vue -> src/resources/js/pages/user-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:               offLabel=\"No\"",
          "47:               :tooltip=\"$t('user.help.emailVerified')\"",
          "48:             ></badaso-switch>",
          "49:             <badaso-upload-image",
          "50:               v-model=\"user.avatar\"",
          "51:               size=\"12\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:             <badaso-text",
          "50:               v-model=\"user.phone\"",
          "51:               size=\"6\"",
          "52:               :label=\"$t('user.add.field.phone.title')\"",
          "53:               :placeholder=\"$t('user.add.field.phone.placeholder')\"",
          "54:               :alert=\"errors.phone\"",
          "55:             ></badaso-text>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:               :placeholder=\"$t('user.add.field.avatar.placeholder')\"",
          "54:               :alert=\"errors.avatar\"",
          "55:             ></badaso-upload-image>",
          "56:             <vs-col vs-lg=\"12\">",
          "57:               <badaso-code-editor",
          "58:                 v-model=\"user.additionalInfo\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:             <badaso-textarea",
          "64:                v-model=\"user.address\"",
          "65:                size=\"12\"",
          "66:               :label=\"$t('user.add.field.address.title')\"",
          "67:               :placeholder=\"$t('user.add.field.address.placeholder')\"",
          "68:               :alert=\"errors.address\"",
          "69:             ></badaso-textarea>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:       email: \"\",",
          "91:       name: \"\",",
          "92:       username: \"\",",
          "93:       avatar: \"\",",
          "94:       password: \"\",",
          "95:       emailVerified: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:       phone: \"\",",
          "108:       address: \"\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "110:             email: this.user.email,",
          "111:             name: this.user.name,",
          "112:             username: this.user.username,",
          "113:             avatar: this.user.avatar,",
          "114:             password: this.user.password,",
          "115:             emailVerified: this.user.emailVerified,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:             phone: this.user.phone,",
          "130:             address: this.user.address,",
          "",
          "---------------"
        ],
        "src/resources/js/pages/user-management/edit.vue||src/resources/js/pages/user-management/edit.vue": [
          "File: src/resources/js/pages/user-management/edit.vue -> src/resources/js/pages/user-management/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:               offLabel=\"No\"",
          "47:               :tooltip=\"$t('user.help.emailVerified')\"",
          "48:             ></badaso-switch>",
          "49:             <badaso-upload-image",
          "50:               v-model=\"user.avatar\"",
          "51:               size=\"12\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:             <badaso-text",
          "50:               v-model=\"user.phone\"",
          "51:               size=\"6\"",
          "52:               :label=\"$t('user.edit.field.phone.title')\"",
          "53:               :placeholder=\"$t('user.edit.field.phone.placeholder')\"",
          "54:               :alert=\"errors.phone\"",
          "55:             ></badaso-text>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:               :placeholder=\"$t('user.edit.field.avatar.placeholder')\"",
          "54:               :alert=\"errors.avatar\"",
          "55:             ></badaso-upload-image>",
          "56:             <vs-col vs-lg=\"12\">",
          "57:               <badaso-code-editor",
          "58:                 v-model=\"user.additionalInfo\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:             <badaso-textarea",
          "64:                v-model=\"user.address\"",
          "65:                size=\"12\"",
          "66:               :label=\"$t('user.edit.field.address.title')\"",
          "67:               :placeholder=\"$t('user.edit.field.address.placeholder')\"",
          "68:               :alert=\"errors.address\"",
          "69:             ></badaso-textarea>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:       email: \"\",",
          "91:       name: \"\",",
          "92:       username: \"\",",
          "93:       avatar: \"\",",
          "94:       password: \"\",",
          "95:       emailVerified: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:       phone: \"\",",
          "108:       address:\"\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "140:           email: this.user.email,",
          "141:           name: this.user.name,",
          "142:           username: this.user.username,",
          "143:           avatar: this.user.avatar ? this.user.avatar.base64 : null,",
          "144:           password: this.user.password,",
          "145:           emailVerified: this.user.emailVerified,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:           phone: this.user.phone,",
          "160:           address: this.user.address,",
          "",
          "---------------"
        ],
        "src/resources/js/pages/user-management/read.vue||src/resources/js/pages/user-management/read.vue": [
          "File: src/resources/js/pages/user-management/read.vue -> src/resources/js/pages/user-management/read.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:             <tr>",
          "43:               <th>{{ $t(\"user.detail.username\") }}</th>",
          "44:               <td>{{ user.username }}</td>",
          "45:             </tr>",
          "46:             <tr>",
          "47:               <th>{{ $t(\"user.detail.email\") }}</th>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:             </tr>",
          "46:              <tr>",
          "47:               <th>{{ $t(\"user.detail.phone\") }}</th>",
          "48:               <td>{{ user.phone }}</td>",
          "49:             </tr>",
          "50:              <tr>",
          "51:               <th>{{ $t(\"user.detail.address\") }}</th>",
          "52:               <td>{{ user.address }}</td>",
          "",
          "---------------"
        ],
        "src/resources/js/pages/user/profile.vue||src/resources/js/pages/user/profile.vue": [
          "File: src/resources/js/pages/user/profile.vue -> src/resources/js/pages/user/profile.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:                   :label=\"$t('myProfile.username')\"",
          "21:                   :placeholder=\"$t('myProfile.username')\"",
          "22:                   :alert=\"errors.username\"",
          "23:                 ></badaso-text>",
          "24:                 <badaso-upload-image",
          "25:                   v-model=\"user.avatar\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:                 ></badaso-text>",
          "24:                  <badaso-text",
          "25:                   v-model=\"user.phone\"",
          "26:                   size=\"12\"",
          "27:                   :label=\"$t('myProfile.phone')\"",
          "28:                   :placeholder=\"$t('myProfile.phone')\"",
          "29:                   :alert=\"errors.phone\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:                   :placeholder=\"$t('myProfile.avatar')\"",
          "29:                   :alert=\"errors.avatar\"",
          "30:                 ></badaso-upload-image>",
          "31:                 <vs-col vs-lg=\"12\">",
          "32:                   <badaso-code-editor",
          "33:                     v-model=\"user.additionalInfo\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:                 <badaso-textarea",
          "39:                   v-model=\"user.address\"",
          "40:                   size=\"12\"",
          "41:                   :label=\"$t('myProfile.address')\"",
          "42:                   :placeholder=\"$t('myProfile.address')\"",
          "43:                   :alert=\"errors.address\"",
          "44:                 ></badaso-textarea>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "134:       name: \"\",",
          "135:       username: \"\",",
          "136:       avatar: \"\",",
          "137:       additionalInfo: \"\",",
          "138:       oldPassword: \"\",",
          "139:       newPassword: \"\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:       phone:\"\",",
          "152:       address:\"\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "183:           name: this.user.name,",
          "184:           username: this.user.username,",
          "185:           avatar: this.user.avatar,",
          "186:           additionalInfo:",
          "187:             this.user.additionalInfo !== \"\"",
          "188:               ? JSON.stringify(this.user.additionalInfo)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:           phone: this.user.phone,",
          "203:           address: this.user.address,",
          "",
          "---------------"
        ]
      }
    }
  ]
}