{
  "cve_id": "CVE-2013-6430",
  "cve_desc": "The JavaScriptUtils.javaScriptEscape method in web/util/JavaScriptUtils.java in Spring MVC in Spring Framework before 3.2.2 does not properly escape certain characters, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a (1) line separator or (2) paragraph separator Unicode character or (3) left or (4) right angle bracket.",
  "repo": "spring-projects/spring-framework",
  "patch_hash": "7a7df6637478607bef0277bf52a4e0a03e20a248",
  "patch_info": {
    "commit_hash": "7a7df6637478607bef0277bf52a4e0a03e20a248",
    "repo": "spring-projects/spring-framework",
    "commit_url": "https://github.com/spring-projects/spring-framework/commit/7a7df6637478607bef0277bf52a4e0a03e20a248",
    "files": [
      "org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
      "org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java"
    ],
    "message": "Update JavaScriptUtils\n\nAdd escaping for <, >, and PS/LS line terminators\n\nIssue: SPR-9983",
    "before_after_code_files": [
      "org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java||org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
      "org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java||org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java"
    ]
  },
  "patch_diff": {
    "org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java||org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java": [
      "File: org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java -> org.springframework.web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:    else if (c == '\\f') {",
      "74:     filtered.append(\"\\\\f\");",
      "75:    }",
      "76:    else {",
      "77:     filtered.append(c);",
      "78:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:    else if (c == '\\b') {",
      "77:     filtered.append(\"\\\\b\");",
      "78:    }",
      "80:    else if (c == '\\013') {",
      "81:     filtered.append(\"\\\\v\");",
      "82:    }",
      "83:    else if (c == '<') {",
      "84:     filtered.append(\"\\\\u003C\");",
      "85:    }",
      "86:    else if (c == '>') {",
      "87:     filtered.append(\"\\\\u003E\");",
      "88:    }",
      "90:    else if (c == '\\u2028') {",
      "91:     filtered.append(\"\\\\u2028\");",
      "92:    }",
      "94:    else if (c == '\\u2029') {",
      "95:     filtered.append(\"\\\\u2029\");",
      "96:    }",
      "",
      "---------------"
    ],
    "org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java||org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java": [
      "File: org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java -> org.springframework.web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.springframework.web.util;",
      "19: import static org.junit.Assert.*;",
      "21: import java.io.UnsupportedEncodingException;",
      "23: import org.junit.Test;",
      "30: public class JavaScriptUtilsTests {",
      "32:  @Test",
      "33:  public void escape() {",
      "34:   StringBuilder sb = new StringBuilder();",
      "35:   sb.append('\"');",
      "36:   sb.append(\"'\");",
      "37:   sb.append(\"\\\\\");",
      "38:   sb.append(\"/\");",
      "39:   sb.append(\"\\t\");",
      "40:   sb.append(\"\\n\");",
      "41:   sb.append(\"\\r\");",
      "42:   sb.append(\"\\f\");",
      "43:   sb.append(\"\\b\");",
      "44:   sb.append(\"\\013\");",
      "45:   assertEquals(\"\\\\\\\"\\\\'\\\\\\\\\\\\/\\\\t\\\\n\\\\n\\\\f\\\\b\\\\v\", JavaScriptUtils.javaScriptEscape(sb.toString()));",
      "46:  }",
      "50:  @Test",
      "51:  public void escapePsLsLineTerminators() {",
      "52:   StringBuilder sb = new StringBuilder();",
      "53:   sb.append('\\u2028');",
      "54:   sb.append('\\u2029');",
      "55:   String result = JavaScriptUtils.javaScriptEscape(sb.toString());",
      "57:   assertEquals(\"\\\\u2028\\\\u2029\", result);",
      "58:  }",
      "62:  @Test",
      "63:  public void escapeLessThanGreaterThanSigns() throws UnsupportedEncodingException {",
      "64:   assertEquals(\"\\\\u003C\\\\u003E\", JavaScriptUtils.javaScriptEscape(\"<>\"));",
      "65:  }",
      "67: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f5c9fe69a444607af667911bd4c5074b5b073e7b",
      "candidate_info": {
        "commit_hash": "f5c9fe69a444607af667911bd4c5074b5b073e7b",
        "repo": "spring-projects/spring-framework",
        "commit_url": "https://github.com/spring-projects/spring-framework/commit/f5c9fe69a444607af667911bd4c5074b5b073e7b",
        "files": [
          "spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
          "spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java"
        ],
        "message": "Update JavaScriptUtils\n\nAdd escaping for <, >, and PS/LS line terminators\n\nIssue: SPR-9983",
        "before_after_code_files": [
          "spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java||spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
          "spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java||spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java||spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java": [
          "File: spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java -> spring-web/src/main/java/org/springframework/web/util/JavaScriptUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:    else if (c == '\\013') {",
          "81:     filtered.append(\"\\\\v\");",
          "82:    }",
          "83:    else {",
          "84:     filtered.append(c);",
          "85:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:    else if (c == '<') {",
          "84:     filtered.append(\"\\\\u003C\");",
          "85:    }",
          "86:    else if (c == '>') {",
          "87:     filtered.append(\"\\\\u003E\");",
          "88:    }",
          "90:    else if (c == '\\u2028') {",
          "91:     filtered.append(\"\\\\u2028\");",
          "92:    }",
          "94:    else if (c == '\\u2029') {",
          "95:     filtered.append(\"\\\\u2029\");",
          "96:    }",
          "",
          "---------------"
        ],
        "spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java||spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java": [
          "File: spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java -> spring-web/src/test/java/org/springframework/web/util/JavaScriptUtilsTests.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.springframework.web.util;",
          "19: import static org.junit.Assert.*;",
          "21: import java.io.UnsupportedEncodingException;",
          "23: import org.junit.Test;",
          "30: public class JavaScriptUtilsTests {",
          "32:  @Test",
          "33:  public void escape() {",
          "34:   StringBuilder sb = new StringBuilder();",
          "35:   sb.append('\"');",
          "36:   sb.append(\"'\");",
          "37:   sb.append(\"\\\\\");",
          "38:   sb.append(\"/\");",
          "39:   sb.append(\"\\t\");",
          "40:   sb.append(\"\\n\");",
          "41:   sb.append(\"\\r\");",
          "42:   sb.append(\"\\f\");",
          "43:   sb.append(\"\\b\");",
          "44:   sb.append(\"\\013\");",
          "45:   assertEquals(\"\\\\\\\"\\\\'\\\\\\\\\\\\/\\\\t\\\\n\\\\n\\\\f\\\\b\\\\v\", JavaScriptUtils.javaScriptEscape(sb.toString()));",
          "46:  }",
          "50:  @Test",
          "51:  public void escapePsLsLineTerminators() {",
          "52:   StringBuilder sb = new StringBuilder();",
          "53:   sb.append('\\u2028');",
          "54:   sb.append('\\u2029');",
          "55:   String result = JavaScriptUtils.javaScriptEscape(sb.toString());",
          "57:   assertEquals(\"\\\\u2028\\\\u2029\", result);",
          "58:  }",
          "62:  @Test",
          "63:  public void escapeLessThanGreaterThanSigns() throws UnsupportedEncodingException {",
          "64:   assertEquals(\"\\\\u003C\\\\u003E\", JavaScriptUtils.javaScriptEscape(\"<>\"));",
          "65:  }",
          "67: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}