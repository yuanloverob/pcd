{
  "cve_id": "CVE-2024-7042",
  "cve_desc": "A vulnerability in the GraphCypherQAChain class of langchain-ai/langchainjs versions 0.2.5 and all versions with this class allows for prompt injection, leading to SQL injection. This vulnerability permits unauthorized data manipulation, data exfiltration, denial of service (DoS) by deleting all data, breaches in multi-tenant security environments, and data integrity issues. Attackers can create, update, or delete nodes and relationships without proper authorization, extract sensitive data, disrupt services, access data across different tenants, and compromise the integrity of the database.",
  "repo": "langchain-ai/langchainjs",
  "patch_hash": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
  "patch_info": {
    "commit_hash": "615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
    "repo": "langchain-ai/langchainjs",
    "commit_url": "https://github.com/langchain-ai/langchainjs/commit/615b9d9ab30a2d23a2f95fb8d7acfdf4b41ad7a6",
    "files": [
      "examples/package.json",
      "examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "libs/langchain-community/package.json",
      "libs/langchain-community/src/vectorstores/lancedb.ts",
      "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "yarn.lock"
    ],
    "message": "feat(community): Remove required param from LanceDB integration (#6706)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
    "before_after_code_files": [
      "examples/src/indexes/vector_stores/lancedb/fromDocs.ts||examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "examples/src/indexes/vector_stores/lancedb/fromTexts.ts||examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "libs/langchain-community/src/vectorstores/lancedb.ts||libs/langchain-community/src/vectorstores/lancedb.ts",
      "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts||libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "examples/src/indexes/vector_stores/lancedb/fromDocs.ts||examples/src/indexes/vector_stores/lancedb/fromDocs.ts": [
      "File: examples/src/indexes/vector_stores/lancedb/fromDocs.ts -> examples/src/indexes/vector_stores/lancedb/fromDocs.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: import fs from \"node:fs/promises\";",
      "5: import path from \"node:path\";",
      "6: import os from \"node:os\";",
      "10: const loader = new TextLoader(\"src/document_loaders/example_data/example.txt\");",
      "11: const docs = await loader.load();",
      "13: export const run = async () => {",
      "14:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "26:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "27:   console.log(resultOne);",
      "",
      "[Removed Lines]",
      "7: import { connect } from \"vectordb\";",
      "15:   const db = await connect(dir);",
      "16:   const table = await db.createTable(\"vectors\", [",
      "17:     { vector: Array(1536), text: \"sample\", source: \"a\" },",
      "18:   ]);",
      "20:   const vectorStore = await LanceDB.fromDocuments(",
      "21:     docs,",
      "22:     new OpenAIEmbeddings(),",
      "23:     { table }",
      "24:   );",
      "",
      "[Added Lines]",
      "13:   const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());",
      "15:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "16:   console.log(resultOne);",
      "24: };",
      "26: export const run_with_existing_table = async () => {",
      "29:   const vectorStore = await LanceDB.fromDocuments(docs, new OpenAIEmbeddings());",
      "",
      "---------------"
    ],
    "examples/src/indexes/vector_stores/lancedb/fromTexts.ts||examples/src/indexes/vector_stores/lancedb/fromTexts.ts": [
      "File: examples/src/indexes/vector_stores/lancedb/fromTexts.ts -> examples/src/indexes/vector_stores/lancedb/fromTexts.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import { LanceDB } from \"@langchain/community/vectorstores/lancedb\";",
      "2: import { OpenAIEmbeddings } from \"@langchain/openai\";",
      "4: import * as fs from \"node:fs/promises\";",
      "5: import * as path from \"node:path\";",
      "6: import os from \"node:os\";",
      "8: export const run = async () => {",
      "15:   const vectorStore = await LanceDB.fromTexts(",
      "16:     [\"Hello world\", \"Bye bye\", \"hello nice world\"],",
      "17:     [{ id: 2 }, { id: 1 }, { id: 3 }],",
      "20:   );",
      "22:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "",
      "[Removed Lines]",
      "3: import { connect } from \"vectordb\";",
      "9:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "10:   const db = await connect(dir);",
      "11:   const table = await db.createTable(\"vectors\", [",
      "12:     { vector: Array(1536), text: \"sample\", id: 1 },",
      "13:   ]);",
      "18:     new OpenAIEmbeddings(),",
      "19:     { table }",
      "",
      "[Added Lines]",
      "8:   const vectorStore = await LanceDB.fromTexts(",
      "9:     [\"Hello world\", \"Bye bye\", \"hello nice world\"],",
      "10:     [{ id: 2 }, { id: 1 }, { id: 3 }],",
      "11:     new OpenAIEmbeddings()",
      "12:   );",
      "14:   const resultOne = await vectorStore.similaritySearch(\"hello world\", 1);",
      "15:   console.log(resultOne);",
      "17: };",
      "19: export const run_with_existing_table = async () => {",
      "20:   const dir = await fs.mkdtemp(path.join(os.tmpdir(), \"lancedb-\"));",
      "24:     new OpenAIEmbeddings()",
      "",
      "---------------"
    ],
    "libs/langchain-community/src/vectorstores/lancedb.ts||libs/langchain-community/src/vectorstores/lancedb.ts": [
      "File: libs/langchain-community/src/vectorstores/lancedb.ts -> libs/langchain-community/src/vectorstores/lancedb.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: import type { EmbeddingsInterface } from \"@langchain/core/embeddings\";",
      "3: import { VectorStore } from \"@langchain/core/vectorstores\";",
      "4: import { Document } from \"@langchain/core/documents\";",
      "",
      "[Removed Lines]",
      "1: import { Table } from \"vectordb\";",
      "",
      "[Added Lines]",
      "1: import { connect, Table, Connection, WriteMode } from \"vectordb\";",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10: export type LanceDBArgs = {",
      "12:   textKey?: string;",
      "13: };",
      "",
      "[Removed Lines]",
      "11:   table: Table;",
      "",
      "[Added Lines]",
      "11:   table?: Table;",
      "13:   uri?: string;",
      "14:   tableName?: string;",
      "15:   mode?: WriteMode;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "20: export class LanceDB extends VectorStore {",
      "23:   private textKey: string;",
      "28:     this.embeddings = embeddings;",
      "30:   }",
      "",
      "[Removed Lines]",
      "21:   private table: Table;",
      "25:   constructor(embeddings: EmbeddingsInterface, args: LanceDBArgs) {",
      "26:     super(embeddings, args);",
      "27:     this.table = args.table;",
      "29:     this.textKey = args.textKey || \"text\";",
      "",
      "[Added Lines]",
      "24:   private table?: Table;",
      "28:   private uri: string;",
      "30:   private tableName: string;",
      "32:   private mode?: WriteMode;",
      "34:   constructor(embeddings: EmbeddingsInterface, args?: LanceDBArgs) {",
      "35:     super(embeddings, args || {});",
      "36:     this.table = args?.table;",
      "38:     this.textKey = args?.textKey || \"text\";",
      "39:     this.uri = args?.uri || \"~/lancedb\";",
      "40:     this.tableName = args?.tableName || \"langchain\";",
      "41:     this.mode = args?.mode || WriteMode.Overwrite;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "71:       });",
      "72:       data.push(record);",
      "73:     }",
      "74:     await this.table.add(data);",
      "75:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "86:     if (!this.table) {",
      "87:       const db: Connection = await connect(this.uri);",
      "88:       this.table = await db.createTable(this.tableName, data, {",
      "89:         writeMode: this.mode,",
      "90:       });",
      "92:       return;",
      "93:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "85:     query: number[],",
      "86:     k: number",
      "87:   ): Promise<[Document, number][]> {",
      "88:     const results = await this.table.search(query).limit(k).execute();",
      "90:     const docsAndScore: [Document, number][] = [];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:     if (!this.table) {",
      "109:       throw new Error(",
      "110:         \"Table not found. Please add vectors to the table first.\"",
      "111:       );",
      "112:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "119:     texts: string[],",
      "120:     metadatas: object[] | object,",
      "121:     embeddings: EmbeddingsInterface,",
      "123:   ): Promise<LanceDB> {",
      "124:     const docs: Document[] = [];",
      "125:     for (let i = 0; i < texts.length; i += 1) {",
      "",
      "[Removed Lines]",
      "122:     dbConfig: LanceDBArgs",
      "",
      "[Added Lines]",
      "147:     dbConfig?: LanceDBArgs",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "143:   static async fromDocuments(",
      "144:     docs: Document[],",
      "145:     embeddings: EmbeddingsInterface,",
      "147:   ): Promise<LanceDB> {",
      "148:     const instance = new this(embeddings, dbConfig);",
      "149:     await instance.addDocuments(docs);",
      "",
      "[Removed Lines]",
      "146:     dbConfig: LanceDBArgs",
      "",
      "[Added Lines]",
      "171:     dbConfig?: LanceDBArgs",
      "",
      "---------------"
    ],
    "libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts||libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts": [
      "File: libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts -> libs/langchain-community/src/vectorstores/tests/lancedb.int.test.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:     expect(resultsTwo.length).toBe(5);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49: describe(\"LanceDB empty schema\", () => {",
      "50:   test(\"Test fromTexts + addDocuments\", async () => {",
      "51:     const embeddings = new OpenAIEmbeddings();",
      "52:     const vectorStore = await LanceDB.fromTexts(",
      "53:       [\"hello bye\", \"hello world\", \"bye bye\"],",
      "54:       [{ id: 1 }, { id: 2 }, { id: 3 }],",
      "55:       embeddings",
      "56:     );",
      "58:     const results = await vectorStore.similaritySearch(\"hello bye\", 10);",
      "59:     expect(results.length).toBe(3);",
      "61:     await vectorStore.addDocuments([",
      "62:       new Document({",
      "63:         pageContent: \"a new world\",",
      "64:         metadata: { id: 4 },",
      "65:       }),",
      "66:     ]);",
      "68:     const resultsTwo = await vectorStore.similaritySearch(\"hello bye\", 10);",
      "69:     expect(resultsTwo.length).toBe(4);",
      "70:   });",
      "71: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "251:   languageName: node",
      "252:   linkType: hard",
      "272: \"@apify/consts@npm:^2.13.0, @apify/consts@npm:^2.9.0\":",
      "273:   version: 2.13.0",
      "274:   resolution: \"@apify/consts@npm:2.13.0\"",
      "",
      "[Removed Lines]",
      "254: \"@apache-arrow/ts@npm:^12.0.0\":",
      "255:   version: 12.0.0",
      "256:   resolution: \"@apache-arrow/ts@npm:12.0.0\"",
      "257:   dependencies:",
      "258:     \"@types/command-line-args\": 5.2.0",
      "259:     \"@types/command-line-usage\": 5.0.2",
      "260:     \"@types/node\": 18.14.5",
      "261:     \"@types/pad-left\": 2.1.1",
      "262:     command-line-args: 5.2.1",
      "263:     command-line-usage: 6.1.3",
      "264:     flatbuffers: 23.3.3",
      "265:     json-bignum: ^0.0.3",
      "266:     pad-left: ^2.1.0",
      "267:     tslib: ^2.5.0",
      "268:   checksum: 67b2791e14d5377b1d160a0d8390decc386e013c517713f8b9c100737a0e478a394086d91a8c846848d4e30289070a119d8e65191998f4c2555b18a29564df50",
      "269:   languageName: node",
      "270:   linkType: hard",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11112:   languageName: node",
      "11113:   linkType: hard",
      "11115: \"@langchain/anthropic@*, @langchain/anthropic@workspace:*, @langchain/anthropic@workspace:libs/langchain-anthropic\":",
      "11116:   version: 0.0.0-use.local",
      "11117:   resolution: \"@langchain/anthropic@workspace:libs/langchain-anthropic\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11097: \"@lancedb/vectordb-darwin-arm64@npm:0.4.20\":",
      "11098:   version: 0.4.20",
      "11099:   resolution: \"@lancedb/vectordb-darwin-arm64@npm:0.4.20\"",
      "11100:   conditions: os=darwin & cpu=arm64",
      "11101:   languageName: node",
      "11102:   linkType: hard",
      "11104: \"@lancedb/vectordb-darwin-x64@npm:0.4.20\":",
      "11105:   version: 0.4.20",
      "11106:   resolution: \"@lancedb/vectordb-darwin-x64@npm:0.4.20\"",
      "11107:   conditions: os=darwin & cpu=x64",
      "11108:   languageName: node",
      "11109:   linkType: hard",
      "11111: \"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\":",
      "11112:   version: 0.4.20",
      "11113:   resolution: \"@lancedb/vectordb-linux-arm64-gnu@npm:0.4.20\"",
      "11114:   conditions: os=linux & cpu=arm64",
      "11115:   languageName: node",
      "11116:   linkType: hard",
      "11118: \"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\":",
      "11119:   version: 0.4.20",
      "11120:   resolution: \"@lancedb/vectordb-linux-x64-gnu@npm:0.4.20\"",
      "11121:   conditions: os=linux & cpu=x64",
      "11122:   languageName: node",
      "11123:   linkType: hard",
      "11125: \"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\":",
      "11126:   version: 0.4.20",
      "11127:   resolution: \"@lancedb/vectordb-win32-x64-msvc@npm:0.4.20\"",
      "11128:   conditions: os=win32 & cpu=x64",
      "11129:   languageName: node",
      "11130:   linkType: hard",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "11577:     typesense: ^1.5.3",
      "11578:     usearch: ^1.1.1",
      "11579:     uuid: ^10.0.0",
      "11581:     voy-search: 0.6.2",
      "11582:     weaviate-ts-client: ^1.4.0",
      "11583:     web-auth-library: ^1.0.3",
      "",
      "[Removed Lines]",
      "11580:     vectordb: ^0.1.4",
      "",
      "[Added Lines]",
      "11597:     vectordb: ^0.9.0",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "13039:   languageName: node",
      "13040:   linkType: hard",
      "13042: \"@neondatabase/serverless@npm:0.6.0\":",
      "13043:   version: 0.6.0",
      "13044:   resolution: \"@neondatabase/serverless@npm:0.6.0\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13059: \"@neon-rs/load@npm:^0.0.74\":",
      "13060:   version: 0.0.74",
      "13061:   resolution: \"@neon-rs/load@npm:0.0.74\"",
      "13062:   checksum: d26ec9b08cdf1a7c5aeefe98f77112d205d11b4005a7934b21fe8fd27528847e08e4749e7e6c3fc05ae9f701175a58c11a095ae6af449634df3991a2c82e1dfa",
      "13063:   languageName: node",
      "13064:   linkType: hard",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "20774:   languageName: node",
      "20775:   linkType: hard",
      "20797: \"apache-arrow@npm:^12.0.1\":",
      "20798:   version: 12.0.1",
      "20799:   resolution: \"apache-arrow@npm:12.0.1\"",
      "",
      "[Removed Lines]",
      "20777: \"apache-arrow@npm:^12.0.0\":",
      "20778:   version: 12.0.0",
      "20779:   resolution: \"apache-arrow@npm:12.0.0\"",
      "20780:   dependencies:",
      "20781:     \"@types/command-line-args\": 5.2.0",
      "20782:     \"@types/command-line-usage\": 5.0.2",
      "20783:     \"@types/node\": 18.14.5",
      "20784:     \"@types/pad-left\": 2.1.1",
      "20785:     command-line-args: 5.2.1",
      "20786:     command-line-usage: 6.1.3",
      "20787:     flatbuffers: 23.3.3",
      "20788:     json-bignum: ^0.0.3",
      "20789:     pad-left: ^2.1.0",
      "20790:     tslib: ^2.5.0",
      "20791:   bin:",
      "20792:     arrow2csv: bin/arrow2csv.js",
      "20793:   checksum: 3285189517c2b298cda42852321ce127754918513116eade6e4914c57983f68b6ba96605cfaa2202796d3d6e14755d3b3758f76c1374492affa3d95714eaca40",
      "20794:   languageName: node",
      "20795:   linkType: hard",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "27133:     typescript: ~5.1.6",
      "27134:     typesense: ^1.5.3",
      "27135:     uuid: ^10.0.0",
      "27137:     voy-search: 0.6.2",
      "27138:     weaviate-ts-client: ^2.0.0",
      "27139:     zod: ^3.22.4",
      "",
      "[Removed Lines]",
      "27136:     vectordb: ^0.1.4",
      "",
      "[Added Lines]",
      "27140:     vectordb: ^0.9.0",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "42444:   languageName: node",
      "42445:   linkType: hard",
      "42454:   languageName: node",
      "42455:   linkType: hard",
      "",
      "[Removed Lines]",
      "42447: \"vectordb@npm:^0.1.4\":",
      "42448:   version: 0.1.4",
      "42449:   resolution: \"vectordb@npm:0.1.4\"",
      "42450:   dependencies:",
      "42451:     \"@apache-arrow/ts\": ^12.0.0",
      "42452:     apache-arrow: ^12.0.0",
      "42453:   checksum: 8a40abf4466479b0b9e61687416b5ab232458401917bf9a1d5f3d8ea8c8320ecc5691174f4d4c0cfef0bb6c16328a9088419fd90ac85fd7267dbccdd1f9e55d7",
      "",
      "[Added Lines]",
      "42451: \"vectordb@npm:^0.9.0\":",
      "42452:   version: 0.9.0",
      "42453:   resolution: \"vectordb@npm:0.9.0\"",
      "42454:   dependencies:",
      "42455:     \"@lancedb/vectordb-darwin-arm64\": 0.4.20",
      "42456:     \"@lancedb/vectordb-darwin-x64\": 0.4.20",
      "42457:     \"@lancedb/vectordb-linux-arm64-gnu\": 0.4.20",
      "42458:     \"@lancedb/vectordb-linux-x64-gnu\": 0.4.20",
      "42459:     \"@lancedb/vectordb-win32-x64-msvc\": 0.4.20",
      "42460:     \"@neon-rs/load\": ^0.0.74",
      "42461:     axios: ^1.4.0",
      "42462:   peerDependencies:",
      "42463:     \"@apache-arrow/ts\": ^14.0.2",
      "42464:     apache-arrow: ^14.0.2",
      "42465:   dependenciesMeta:",
      "42466:     \"@lancedb/vectordb-darwin-arm64\":",
      "42467:       optional: true",
      "42468:     \"@lancedb/vectordb-darwin-x64\":",
      "42469:       optional: true",
      "42470:     \"@lancedb/vectordb-linux-arm64-gnu\":",
      "42471:       optional: true",
      "42472:     \"@lancedb/vectordb-linux-x64-gnu\":",
      "42473:       optional: true",
      "42474:     \"@lancedb/vectordb-win32-x64-msvc\":",
      "42475:       optional: true",
      "42476:   conditions: (os=darwin | os=linux | os=win32) & (cpu=x64 | cpu=arm64)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1cb4e29596baea747a6501f712aa8accb9299c08",
      "candidate_info": {
        "commit_hash": "1cb4e29596baea747a6501f712aa8accb9299c08",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/1cb4e29596baea747a6501f712aa8accb9299c08",
        "files": [
          "yarn.lock"
        ],
        "message": "fix(ci): Update lock (#7591)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "12968:   languageName: unknown",
          "12969:   linkType: soft",
          "12972:   version: 0.0.0-use.local",
          "12973:   resolution: \"@langchain/openai@workspace:libs/langchain-openai\"",
          "12974:   dependencies:",
          "",
          "[Removed Lines]",
          "12971: \"@langchain/openai@>=0.1.0 <0.5.0, @langchain/openai@>=0.2.0 <0.5.0, @langchain/openai@workspace:*, @langchain/openai@workspace:^, @langchain/openai@workspace:libs/langchain-openai, @langchain/openai@~0.3.0\":",
          "",
          "[Added Lines]",
          "12971: \"@langchain/openai@>=0.1.0 <0.5.0, @langchain/openai@>=0.2.0 <0.5.0, @langchain/openai@workspace:*, @langchain/openai@workspace:^, @langchain/openai@workspace:libs/langchain-openai\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13003:   languageName: unknown",
          "13004:   linkType: soft",
          "13006: \"@langchain/pinecone@workspace:*, @langchain/pinecone@workspace:libs/langchain-pinecone\":",
          "13007:   version: 0.0.0-use.local",
          "13008:   resolution: \"@langchain/pinecone@workspace:libs/langchain-pinecone\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13006: \"@langchain/openai@npm:~0.3.0\":",
          "13007:   version: 0.3.17",
          "13008:   resolution: \"@langchain/openai@npm:0.3.17\"",
          "13009:   dependencies:",
          "13010:     js-tiktoken: ^1.0.12",
          "13011:     openai: ^4.77.0",
          "13012:     zod: ^3.22.4",
          "13013:     zod-to-json-schema: ^3.22.3",
          "13014:   peerDependencies:",
          "13015:     \"@langchain/core\": \">=0.3.29 <0.4.0\"",
          "13016:   checksum: af88894dcfa8381c0b0df924e085796995f5d5ba2a2657ea72b4181b35c5d92b0040c5cf305378c1f48a8f1f04d4a3b0b29ba1d84f80cedf5dab8bc46d7d5c6c",
          "13017:   languageName: node",
          "13018:   linkType: hard",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14afbb20bb75156e912820ada6b9aa14a9fa5fe2",
      "candidate_info": {
        "commit_hash": "14afbb20bb75156e912820ada6b9aa14a9fa5fe2",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/14afbb20bb75156e912820ada6b9aa14a9fa5fe2",
        "files": [
          "libs/langchain-google-common/package.json",
          "libs/langchain-google-gauth/package.json",
          "libs/langchain-google-vertexai-web/package.json",
          "libs/langchain-google-vertexai/package.json",
          "libs/langchain-google-webauth/package.json",
          "yarn.lock"
        ],
        "message": "release(google-vertexai): 0.1.7 (#7500)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "12499:   languageName: unknown",
          "12500:   linkType: soft",
          "12503:   version: 0.0.0-use.local",
          "12504:   resolution: \"@langchain/google-common@workspace:libs/langchain-google-common\"",
          "12505:   dependencies:",
          "",
          "[Removed Lines]",
          "12502: \"@langchain/google-common@^0.1.0, @langchain/google-common@workspace:*, @langchain/google-common@workspace:libs/langchain-google-common, @langchain/google-common@~0.1.6\":",
          "",
          "[Added Lines]",
          "12502: \"@langchain/google-common@^0.1.0, @langchain/google-common@workspace:*, @langchain/google-common@workspace:libs/langchain-google-common, @langchain/google-common@~0.1.7\":",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12534:   languageName: unknown",
          "12535:   linkType: soft",
          "12538:   version: 0.0.0-use.local",
          "12539:   resolution: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth\"",
          "12540:   dependencies:",
          "12541:     \"@jest/globals\": ^29.5.0",
          "12542:     \"@langchain/core\": \"workspace:*\"",
          "12544:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12545:     \"@swc/core\": ^1.3.90",
          "12546:     \"@swc/jest\": ^0.2.29",
          "",
          "[Removed Lines]",
          "12537: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth, @langchain/google-gauth@~0.1.6\":",
          "12543:     \"@langchain/google-common\": ~0.1.6",
          "",
          "[Added Lines]",
          "12537: \"@langchain/google-gauth@workspace:libs/langchain-google-gauth, @langchain/google-gauth@~0.1.7\":",
          "12543:     \"@langchain/google-common\": ~0.1.7",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12613:     \"@jest/globals\": ^29.5.0",
          "12614:     \"@langchain/core\": \"workspace:*\"",
          "12615:     \"@langchain/google-common\": ^0.1.0",
          "12617:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12618:     \"@langchain/standard-tests\": 0.0.0",
          "12619:     \"@swc/core\": ^1.3.90",
          "",
          "[Removed Lines]",
          "12616:     \"@langchain/google-webauth\": ~0.1.6",
          "",
          "[Added Lines]",
          "12616:     \"@langchain/google-webauth\": ~0.1.7",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12649:     \"@jest/globals\": ^29.5.0",
          "12650:     \"@langchain/core\": \"workspace:*\"",
          "12651:     \"@langchain/google-common\": ^0.1.0",
          "12653:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12654:     \"@langchain/standard-tests\": 0.0.0",
          "12655:     \"@swc/core\": ^1.3.90",
          "",
          "[Removed Lines]",
          "12652:     \"@langchain/google-gauth\": ~0.1.6",
          "",
          "[Added Lines]",
          "12652:     \"@langchain/google-gauth\": ~0.1.7",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12678:   languageName: unknown",
          "12679:   linkType: soft",
          "12682:   version: 0.0.0-use.local",
          "12683:   resolution: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth\"",
          "12684:   dependencies:",
          "12685:     \"@jest/globals\": ^29.5.0",
          "12686:     \"@langchain/core\": \"workspace:*\"",
          "12688:     \"@langchain/scripts\": \">=0.1.0 <0.2.0\"",
          "12689:     \"@swc/core\": ^1.3.90",
          "12690:     \"@swc/jest\": ^0.2.29",
          "",
          "[Removed Lines]",
          "12681: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth, @langchain/google-webauth@~0.1.6\":",
          "12687:     \"@langchain/google-common\": ~0.1.6",
          "",
          "[Added Lines]",
          "12681: \"@langchain/google-webauth@workspace:libs/langchain-google-webauth, @langchain/google-webauth@~0.1.7\":",
          "12687:     \"@langchain/google-common\": ~0.1.7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8822ad2d75a7701d4ce75c2495c9aa6dd39ab5f",
      "candidate_info": {
        "commit_hash": "e8822ad2d75a7701d4ce75c2495c9aa6dd39ab5f",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/e8822ad2d75a7701d4ce75c2495c9aa6dd39ab5f",
        "files": [
          "examples/src/memory/azure_cosmosdb_nosql.ts",
          "libs/langchain-azure-cosmosdb/package.json",
          "libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts",
          "libs/langchain-azure-cosmosdb/src/chat_histories.ts",
          "libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts",
          "libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts",
          "yarn.lock"
        ],
        "message": "feat(azure-cosmosdb): add session context and retrieve all sessions for a user (#7242)\n\nCo-authored-by: Jacob Lee <jacoblee93@gmail.com>",
        "before_after_code_files": [
          "examples/src/memory/azure_cosmosdb_nosql.ts||examples/src/memory/azure_cosmosdb_nosql.ts",
          "libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts||libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts",
          "libs/langchain-azure-cosmosdb/src/chat_histories.ts||libs/langchain-azure-cosmosdb/src/chat_histories.ts",
          "libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts||libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts",
          "libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts||libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/src/memory/azure_cosmosdb_nosql.ts||examples/src/memory/azure_cosmosdb_nosql.ts": [
          "File: examples/src/memory/azure_cosmosdb_nosql.ts -> examples/src/memory/azure_cosmosdb_nosql.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: );",
          "45: console.log({ res1 });",
          "50: const res2 = await chainWithHistory.invoke(",
          "",
          "[Removed Lines]",
          "47: { res1: 'Hi Jim! How can I assist you today?' }",
          "",
          "[Added Lines]",
          "47:  { res1: 'Hi Jim! How can I assist you today?' }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:   { configurable: { sessionId: \"langchain-test-session\" } }",
          "53: );",
          "54: console.log({ res2 });",
          "57:  { res2: { response: 'You said your name was Jim.' }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: const chatHistory = (await chainWithHistory.getMessageHistory(",
          "61:   \"langchain-test-session\"",
          "62: )) as AzureCosmsosDBNoSQLChatMessageHistory;",
          "64: await chatHistory.setContext({ title: \"Introducing Jim\" });",
          "67: const sessions = await chatHistory.getAllSessions();",
          "69: console.log(sessions);",
          "71:  [",
          "72:   { sessionId: 'langchain-test-session', context: { title: \"Introducing Jim\"  } }",
          "73:  ]",
          "",
          "---------------"
        ],
        "libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts||libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts": [
          "File: libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts -> libs/langchain-azure-cosmosdb/src/azure_cosmosdb_nosql.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   IndexingPolicy,",
          "16:   SqlParameter,",
          "17:   SqlQuerySpec,",
          "18:   VectorEmbeddingPolicy,",
          "19: } from \"@azure/cosmos\";",
          "20: import { DefaultAzureCredential, TokenCredential } from \"@azure/identity\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:   VectorEmbedding,",
          "20:   VectorIndex,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:           distanceFunction: \"cosine\",",
          "188:           dimensions: 0,",
          "190:       ];",
          "191:     }",
          "",
          "[Removed Lines]",
          "189:         },",
          "",
          "[Added Lines]",
          "191:         } as VectorEmbedding,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "195:         {",
          "196:           path: \"/vector\",",
          "197:           type: \"quantizedFlat\",",
          "199:       ];",
          "200:     }",
          "",
          "[Removed Lines]",
          "198:         },",
          "",
          "[Added Lines]",
          "200:         } as VectorIndex,",
          "",
          "---------------"
        ],
        "libs/langchain-azure-cosmosdb/src/chat_histories.ts||libs/langchain-azure-cosmosdb/src/chat_histories.ts": [
          "File: libs/langchain-azure-cosmosdb/src/chat_histories.ts -> libs/langchain-azure-cosmosdb/src/chat_histories.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { DefaultAzureCredential, TokenCredential } from \"@azure/identity\";",
          "3: import { BaseListChatMessageHistory } from \"@langchain/core/chat_history\";",
          "4: import {",
          "",
          "[Removed Lines]",
          "1: import { Container, CosmosClient, CosmosClientOptions } from \"@azure/cosmos\";",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   Container,",
          "3:   CosmosClient,",
          "4:   CosmosClientOptions,",
          "5:   ErrorResponse,",
          "6: } from \"@azure/cosmos\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: const DEFAULT_DATABASE_NAME = \"chatHistoryDB\";",
          "13: const DEFAULT_CONTAINER_NAME = \"chatHistoryContainer\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: export type ChatSession = {",
          "24:   id: string;",
          "25:   context: Record<string, unknown>;",
          "26: };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:   private initPromise?: Promise<void>;",
          "93:   constructor(chatHistoryInput: AzureCosmosDBNoSQLChatMessageHistoryInput) {",
          "94:     super();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:   private context: Record<string, unknown> = {};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "175:     this.messageList = await this.getMessages();",
          "176:     this.messageList.push(message);",
          "177:     const messages = mapChatMessagesToStoredMessages(this.messageList);",
          "178:     await this.container.items.upsert({",
          "179:       id: this.sessionId,",
          "180:       userId: this.userId,",
          "181:       messages,",
          "182:     });",
          "183:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:     const context = await this.getContext();",
          "196:       context,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "188:     await this.container.item(this.sessionId, this.userId).delete();",
          "189:   }",
          "192:     await this.initializeContainer();",
          "193:     const query = {",
          "194:       query: \"SELECT c.id FROM c WHERE c.userId = @userId\",",
          "196:     };",
          "197:     const { resources: userSessions } = await this.container.items",
          "198:       .query(query)",
          "199:       .fetchAll();",
          "200:     for (const userSession of userSessions) {",
          "202:     }",
          "203:   }",
          "204: }",
          "",
          "[Removed Lines]",
          "191:   async clearAllSessionsForUser(userId: string) {",
          "195:       parameters: [{ name: \"@userId\", value: userId }],",
          "201:       await this.container.item(userSession.id, userId).delete();",
          "",
          "[Added Lines]",
          "207:   async clearAllSessions() {",
          "211:       parameters: [{ name: \"@userId\", value: this.userId }],",
          "217:       await this.container.item(userSession.id, this.userId).delete();",
          "218:     }",
          "219:   }",
          "221:   async getAllSessions(): Promise<ChatSession[]> {",
          "222:     await this.initializeContainer();",
          "223:     const query = {",
          "224:       query: \"SELECT c.id, c.context FROM c WHERE c.userId = @userId\",",
          "225:       parameters: [{ name: \"@userId\", value: this.userId }],",
          "226:     };",
          "227:     const { resources: userSessions } = await this.container.items",
          "228:       .query(query)",
          "229:       .fetchAll();",
          "230:     return userSessions ?? [];",
          "231:   }",
          "233:   async getContext(): Promise<Record<string, unknown>> {",
          "234:     const document = await this.container",
          "235:       .item(this.sessionId, this.userId)",
          "236:       .read();",
          "237:     this.context = document.resource?.context || this.context;",
          "238:     return this.context;",
          "239:   }",
          "241:   async setContext(context: Record<string, unknown>): Promise<void> {",
          "242:     await this.initializeContainer();",
          "243:     this.context = context || {};",
          "244:     try {",
          "245:       await this.container",
          "246:         .item(this.sessionId, this.userId)",
          "247:         .patch([{ op: \"replace\", path: \"/context\", value: this.context }]);",
          "248:     } catch (_error: unknown) {",
          "249:       const error = _error as ErrorResponse;",
          "251:       if (error?.code !== 404) {",
          "252:         throw error;",
          "253:       }",
          "",
          "---------------"
        ],
        "libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts||libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts": [
          "File: libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts -> libs/langchain-azure-cosmosdb/src/tests/caches.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import {",
          "5:   CosmosClient,",
          "6:   IndexingMode,",
          "7:   VectorEmbeddingPolicy,",
          "8: } from \"@azure/cosmos\";",
          "9: import { DefaultAzureCredential } from \"@azure/identity\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:   VectorEmbedding,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:         dataType: \"float32\",",
          "34:         distanceFunction,",
          "35:         dimensions: dimension,",
          "37:     ],",
          "38:   };",
          "39: }",
          "",
          "[Removed Lines]",
          "36:       },",
          "",
          "[Added Lines]",
          "37:       } as VectorEmbedding,",
          "",
          "---------------"
        ],
        "libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts||libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts": [
          "File: libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts -> libs/langchain-azure-cosmosdb/src/tests/chat_histories.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:   const result2 = await chatHistory1.getMessages();",
          "160:   expect(result2).toEqual(expectedMessages);",
          "164:   const deletedResult1 = await chatHistory1.getMessages();",
          "165:   const deletedResult2 = await chatHistory2.getMessages();",
          "166:   expect(deletedResult1).toStrictEqual([]);",
          "167:   expect(deletedResult2).toStrictEqual([]);",
          "168: });",
          "",
          "[Removed Lines]",
          "162:   await chatHistory1.clearAllSessionsForUser(\"user1\");",
          "",
          "[Added Lines]",
          "162:   await chatHistory1.clearAllSessions();",
          "170: test(\"Test set context and get all sessions for a user\", async () => {",
          "171:   const session1 = {",
          "172:     userId: \"user1\",",
          "173:     databaseName: DATABASE_NAME,",
          "174:     containerName: CONTAINER_NAME,",
          "175:     sessionId: new ObjectId().toString(),",
          "176:   };",
          "177:   const context1 = { title: \"Best vocalist\" };",
          "178:   const chatHistory1 = new AzureCosmsosDBNoSQLChatMessageHistory(session1);",
          "180:   await chatHistory1.setContext(context1);",
          "181:   await chatHistory1.addUserMessage(\"Who is the best vocalist?\");",
          "182:   await chatHistory1.addAIMessage(\"Ozzy Osbourne\");",
          "184:   const chatHistory2 = new AzureCosmsosDBNoSQLChatMessageHistory({",
          "185:     ...session1,",
          "186:     sessionId: new ObjectId().toString(),",
          "187:   });",
          "188:   const context2 = { title: \"Best guitarist\" };",
          "190:   await chatHistory2.addUserMessage(\"Who is the best guitarist?\");",
          "191:   await chatHistory2.addAIMessage(\"Jimi Hendrix\");",
          "192:   await chatHistory2.setContext(context2);",
          "194:   const sessions = await chatHistory1.getAllSessions();",
          "196:   expect(sessions.length).toBe(2);",
          "197:   expect(sessions[0].context).toEqual(context1);",
          "198:   expect(sessions[1].context).toEqual(context2);",
          "199: });",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "6032:   languageName: node",
          "6033:   linkType: hard",
          "6035: \"@azure/core-client@npm:^1.3.0\":",
          "6036:   version: 1.7.3",
          "6037:   resolution: \"@azure/core-client@npm:1.7.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6035: \"@azure/core-auth@npm:^1.7.1, @azure/core-auth@npm:^1.8.0, @azure/core-auth@npm:^1.9.0\":",
          "6036:   version: 1.9.0",
          "6037:   resolution: \"@azure/core-auth@npm:1.9.0\"",
          "6038:   dependencies:",
          "6039:     \"@azure/abort-controller\": ^2.0.0",
          "6040:     \"@azure/core-util\": ^1.11.0",
          "6041:     tslib: ^2.6.2",
          "6042:   checksum: 4050112188db093c5e01caca0175708c767054c0cea4202430ff43ee42a16430235752ccc0002caea1796c8f01b4f6369c878762bf4c1b2f61af1b7ac13182fc",
          "6043:   languageName: node",
          "6044:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6132:   languageName: node",
          "6133:   linkType: hard",
          "6138:   dependencies:",
          "6139:     \"@azure/abort-controller\": ^2.0.0",
          "6141:     \"@azure/core-tracing\": ^1.0.1",
          "6143:     \"@azure/logger\": ^1.0.0",
          "6144:     http-proxy-agent: ^7.0.0",
          "6145:     https-proxy-agent: ^7.0.0",
          "6146:     tslib: ^2.6.2",
          "6148:   languageName: node",
          "6149:   linkType: hard",
          "",
          "[Removed Lines]",
          "6135: \"@azure/core-rest-pipeline@npm:^1.2.0\":",
          "6136:   version: 1.16.2",
          "6137:   resolution: \"@azure/core-rest-pipeline@npm:1.16.2\"",
          "6140:     \"@azure/core-auth\": ^1.4.0",
          "6142:     \"@azure/core-util\": ^1.9.0",
          "6147:   checksum: b30bfdb7c49435c5f7c9493be8cd39d2d7a5bc24de4e7a772336f14f607517866d4bd0c97d15672f6aa2b630d27bd22b3561933cde1c415aa2e63ba6c18289b1",
          "",
          "[Added Lines]",
          "6146: \"@azure/core-rest-pipeline@npm:^1.15.1, @azure/core-rest-pipeline@npm:^1.17.0\":",
          "6147:   version: 1.18.0",
          "6148:   resolution: \"@azure/core-rest-pipeline@npm:1.18.0\"",
          "6151:     \"@azure/core-auth\": ^1.8.0",
          "6153:     \"@azure/core-util\": ^1.11.0",
          "6158:   checksum: 4c8e6572938fd693494ec44477b58afa7c16aed7ea8ef061fcc0cf8a8e602d7ea07676f46b8c850d38e04e5ac4ab10888f88bce8ffac6db1bd3b77bf07a07f29",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6176:   languageName: node",
          "6177:   linkType: hard",
          "6179: \"@azure/core-util@npm:^1.0.0, @azure/core-util@npm:^1.1.0, @azure/core-util@npm:^1.3.0, @azure/core-util@npm:^1.4.0\":",
          "6180:   version: 1.6.1",
          "6181:   resolution: \"@azure/core-util@npm:1.6.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6190: \"@azure/core-tracing@npm:^1.1.1\":",
          "6191:   version: 1.2.0",
          "6192:   resolution: \"@azure/core-tracing@npm:1.2.0\"",
          "6193:   dependencies:",
          "6194:     tslib: ^2.6.2",
          "6195:   checksum: 202ebf411a3076bd2c48b7a4c1b63335f53be6dd97f7d53500e3191b7ed0fdad25de219f422e777fde824031fd5c67087654de0304a5c0cd67c38cdcab96117c",
          "6196:   languageName: node",
          "6197:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6196:   languageName: node",
          "6197:   linkType: hard",
          "6200:   version: 1.9.2",
          "6201:   resolution: \"@azure/core-util@npm:1.9.2\"",
          "6202:   dependencies:",
          "",
          "[Removed Lines]",
          "6199: \"@azure/core-util@npm:^1.6.1, @azure/core-util@npm:^1.9.0\":",
          "",
          "[Added Lines]",
          "6219: \"@azure/core-util@npm:^1.11.0, @azure/core-util@npm:^1.8.1\":",
          "6220:   version: 1.11.0",
          "6221:   resolution: \"@azure/core-util@npm:1.11.0\"",
          "6222:   dependencies:",
          "6223:     \"@azure/abort-controller\": ^2.0.0",
          "6224:     tslib: ^2.6.2",
          "6225:   checksum: 91e3ec329d9eddaa66be5efb1785dad68dcb48dd779fca36e39db041673230510158ff5ca9ccef9f19c3e4d8e9af29f66a367cfc31a7b94d2541f80ef94ec797",
          "6226:   languageName: node",
          "6227:   linkType: hard",
          "6229: \"@azure/core-util@npm:^1.6.1\":",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6206:   languageName: node",
          "6207:   linkType: hard",
          "6212:   dependencies:",
          "6218:     fast-json-stable-stringify: ^2.1.0",
          "6221:     priorityqueuejs: ^2.0.0",
          "6227:   languageName: node",
          "6228:   linkType: hard",
          "6231:   version: 4.4.1",
          "6232:   resolution: \"@azure/identity@npm:4.4.1\"",
          "6233:   dependencies:",
          "",
          "[Removed Lines]",
          "6209: \"@azure/cosmos@npm:4.0.1-beta.3\":",
          "6210:   version: 4.0.1-beta.3",
          "6211:   resolution: \"@azure/cosmos@npm:4.0.1-beta.3\"",
          "6213:     \"@azure/abort-controller\": ^1.0.0",
          "6214:     \"@azure/core-auth\": ^1.3.0",
          "6215:     \"@azure/core-rest-pipeline\": ^1.2.0",
          "6216:     \"@azure/core-tracing\": ^1.0.0",
          "6217:     debug: ^4.1.1",
          "6219:     jsbi: ^3.1.3",
          "6220:     node-abort-controller: ^3.0.0",
          "6222:     semaphore: ^1.0.5",
          "6223:     tslib: ^2.2.0",
          "6224:     universal-user-agent: ^6.0.0",
          "6225:     uuid: ^8.3.0",
          "6226:   checksum: 5223ba77195030898a3aa201f7dbf2c5d99be4f63cefa93c3542c4122d1ad36f3bab22a4113dba961b3c878d7b2b63ee52a269ada35473ebcd2c42c7643ca5a8",
          "6230: \"@azure/identity@npm:^4.2.0, @azure/identity@npm:^4.2.1\":",
          "",
          "[Added Lines]",
          "6239: \"@azure/cosmos@npm:^4.2.0\":",
          "6240:   version: 4.2.0",
          "6241:   resolution: \"@azure/cosmos@npm:4.2.0\"",
          "6243:     \"@azure/abort-controller\": ^2.0.0",
          "6244:     \"@azure/core-auth\": ^1.7.1",
          "6245:     \"@azure/core-rest-pipeline\": ^1.15.1",
          "6246:     \"@azure/core-tracing\": ^1.1.1",
          "6247:     \"@azure/core-util\": ^1.8.1",
          "6249:     jsbi: ^4.3.0",
          "6251:     semaphore: ^1.1.0",
          "6252:     tslib: ^2.6.2",
          "6253:   checksum: b571f5a99b12520a2128b8ed0eb61cd66c432e21f533e778cd54a508e89b8bd57e8e05eedc1dcfdb4417c91a675bdb63d6c1cfcd9a21895d444e51de80288f33",
          "6257: \"@azure/identity@npm:^4.2.1\":",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6249:   languageName: node",
          "6250:   linkType: hard",
          "6252: \"@azure/logger@npm:^1.0.0, @azure/logger@npm:^1.0.3\":",
          "6253:   version: 1.0.4",
          "6254:   resolution: \"@azure/logger@npm:1.0.4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6279: \"@azure/identity@npm:^4.5.0\":",
          "6280:   version: 4.5.0",
          "6281:   resolution: \"@azure/identity@npm:4.5.0\"",
          "6282:   dependencies:",
          "6283:     \"@azure/abort-controller\": ^2.0.0",
          "6284:     \"@azure/core-auth\": ^1.9.0",
          "6285:     \"@azure/core-client\": ^1.9.2",
          "6286:     \"@azure/core-rest-pipeline\": ^1.17.0",
          "6287:     \"@azure/core-tracing\": ^1.0.0",
          "6288:     \"@azure/core-util\": ^1.11.0",
          "6289:     \"@azure/logger\": ^1.0.0",
          "6290:     \"@azure/msal-browser\": ^3.26.1",
          "6291:     \"@azure/msal-node\": ^2.15.0",
          "6292:     events: ^3.0.0",
          "6293:     jws: ^4.0.0",
          "6294:     open: ^8.0.0",
          "6295:     stoppable: ^1.1.0",
          "6296:     tslib: ^2.2.0",
          "6297:   checksum: 07d15898f194a220376d8d9c0ee891c93c6da188e44e76810fb781bf3bb7424498a6c1fa5b92c5a4d31f62b7398953f8a5bcf0f0ed57ed72239ce1c4f594b355",
          "6298:   languageName: node",
          "6299:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6267:   languageName: node",
          "6268:   linkType: hard",
          "6270: \"@azure/msal-common@npm:14.14.0\":",
          "6271:   version: 14.14.0",
          "6272:   resolution: \"@azure/msal-common@npm:14.14.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6319: \"@azure/msal-browser@npm:^3.26.1\":",
          "6320:   version: 3.27.0",
          "6321:   resolution: \"@azure/msal-browser@npm:3.27.0\"",
          "6322:   dependencies:",
          "6323:     \"@azure/msal-common\": 14.16.0",
          "6324:   checksum: 22c7d087380405f87139a7dfa579b8a49a17d5493e748e1e609f5733bb7549dd5b8558d709f81500f8faa3feebbc2245f8978adc96dc2ce84c54825b37301465",
          "6325:   languageName: node",
          "6326:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6274:   languageName: node",
          "6275:   linkType: hard",
          "6277: \"@azure/msal-node@npm:^2.9.2\":",
          "6278:   version: 2.12.0",
          "6279:   resolution: \"@azure/msal-node@npm:2.12.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6335: \"@azure/msal-common@npm:14.16.0\":",
          "6336:   version: 14.16.0",
          "6337:   resolution: \"@azure/msal-common@npm:14.16.0\"",
          "6338:   checksum: 01ec26e22243c5c435b97db085e96f5488733336c142b65a118ee6e523a548d3f17d013147810948cceaee7bdc339362bb9b2799fc9ea53c9d4c9aa10d8987e3",
          "6339:   languageName: node",
          "6340:   linkType: hard",
          "6342: \"@azure/msal-node@npm:^2.15.0\":",
          "6343:   version: 2.16.2",
          "6344:   resolution: \"@azure/msal-node@npm:2.16.2\"",
          "6345:   dependencies:",
          "6346:     \"@azure/msal-common\": 14.16.0",
          "6347:     jsonwebtoken: ^9.0.0",
          "6348:     uuid: ^8.3.0",
          "6349:   checksum: 3676972cf7e1e91ea60773d7054275534239d209989da4c4c1aa790790ba309a2da58d6c593b6465feb1c7028772fce77757227e7ac9631b3a79e4f5a0a81aab",
          "6350:   languageName: node",
          "6351:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11471:   version: 0.0.0-use.local",
          "11472:   resolution: \"@langchain/azure-cosmosdb@workspace:libs/langchain-azure-cosmosdb\"",
          "11473:   dependencies:",
          "11476:     \"@jest/globals\": ^29.5.0",
          "11477:     \"@langchain/core\": \"workspace:*\"",
          "11478:     \"@langchain/openai\": \"workspace:^\"",
          "",
          "[Removed Lines]",
          "11474:     \"@azure/cosmos\": 4.0.1-beta.3",
          "11475:     \"@azure/identity\": ^4.2.0",
          "",
          "[Added Lines]",
          "11550:     \"@azure/cosmos\": ^4.2.0",
          "11551:     \"@azure/identity\": ^4.5.0",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11492:     eslint-plugin-prettier: ^4.2.1",
          "11493:     jest: ^29.5.0",
          "11494:     jest-environment-node: ^29.6.4",
          "11496:     prettier: ^2.8.3",
          "11497:     release-it: ^15.10.1",
          "11498:     rollup: ^4.5.2",
          "",
          "[Removed Lines]",
          "11495:     mongodb: ^6.8.0",
          "",
          "[Added Lines]",
          "11571:     mongodb: ^6.10.0",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "32857:   languageName: node",
          "32858:   linkType: hard",
          "32864:   languageName: node",
          "32865:   linkType: hard",
          "",
          "[Removed Lines]",
          "32860: \"jsbi@npm:^3.1.3\":",
          "32861:   version: 3.2.5",
          "32862:   resolution: \"jsbi@npm:3.2.5\"",
          "32863:   checksum: 642d1bb139ad1c1e96c4907eb159565e980a0d168487626b493d0d0b7b341da0e43001089d3b21703fe17b18a7a6c0f42c92026f71d54471ed0a0d1b3015ec0f",
          "",
          "[Added Lines]",
          "32936: \"jsbi@npm:^4.3.0\":",
          "32937:   version: 4.3.0",
          "32938:   resolution: \"jsbi@npm:4.3.0\"",
          "32939:   checksum: 27c4f178eb7fd9d1756144066fdebc62f4a0176e877f55e646e8ce84075c13551bd575a316b9959ccdcca9d5dc05a81c9907cfa09f0cfeb43c9777797e36b0e9",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "34972:   languageName: node",
          "34973:   linkType: hard",
          "34978:   dependencies:",
          "34981:     mongodb-connection-string-url: ^3.0.0",
          "34982:   peerDependencies:",
          "34983:     \"@aws-sdk/credential-providers\": ^3.188.0",
          "",
          "[Removed Lines]",
          "34975: \"mongodb@npm:^6.3.0\":",
          "34976:   version: 6.3.0",
          "34977:   resolution: \"mongodb@npm:6.3.0\"",
          "34979:     \"@mongodb-js/saslprep\": ^1.1.0",
          "34980:     bson: ^6.2.0",
          "",
          "[Added Lines]",
          "35051: \"mongodb@npm:^6.10.0\":",
          "35052:   version: 6.10.0",
          "35053:   resolution: \"mongodb@npm:6.10.0\"",
          "35055:     \"@mongodb-js/saslprep\": ^1.1.5",
          "35056:     bson: ^6.7.0",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "35002:       optional: true",
          "35003:     socks:",
          "35004:       optional: true",
          "35006:   languageName: node",
          "35007:   linkType: hard",
          "35012:   dependencies:",
          "35015:     mongodb-connection-string-url: ^3.0.0",
          "35016:   peerDependencies:",
          "35017:     \"@aws-sdk/credential-providers\": ^3.188.0",
          "",
          "[Removed Lines]",
          "35005:   checksum: ebc5d9dbd1299321b6873e86eb4ea635316f97450644811db24ce2b01432b1c641def864facf2eab6f0c0c5c360c318108ea5555142f55177ca4c33991c6d7c4",
          "35009: \"mongodb@npm:^6.8.0\":",
          "35010:   version: 6.8.0",
          "35011:   resolution: \"mongodb@npm:6.8.0\"",
          "35013:     \"@mongodb-js/saslprep\": ^1.1.5",
          "35014:     bson: ^6.7.0",
          "",
          "[Added Lines]",
          "35081:   checksum: b8e7ab9fb84181cb020b5fef5fedd90a5fc12140e688fa12ba588d523a958bb9f8790bfaceeca9f594171794eda0f56be855d7d0588705db82b3de7bf5e2352c",
          "35085: \"mongodb@npm:^6.3.0\":",
          "35086:   version: 6.3.0",
          "35087:   resolution: \"mongodb@npm:6.3.0\"",
          "35089:     \"@mongodb-js/saslprep\": ^1.1.0",
          "35090:     bson: ^6.2.0",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "35036:       optional: true",
          "35037:     socks:",
          "35038:       optional: true",
          "35040:   languageName: node",
          "35041:   linkType: hard",
          "",
          "[Removed Lines]",
          "35039:   checksum: 5a744e9bf0f21a6f639d935b807ea4c4502f6c38719413e7c6dbed2323786c347a877e905bfd711259f552b21774a5d9d8a9271c97ed1634804f97f10addd440",
          "",
          "[Added Lines]",
          "35115:   checksum: ebc5d9dbd1299321b6873e86eb4ea635316f97450644811db24ce2b01432b1c641def864facf2eab6f0c0c5c360c318108ea5555142f55177ca4c33991c6d7c4",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "35331:   languageName: node",
          "35332:   linkType: hard",
          "35341: \"node-addon-api@npm:^3.0.0\":",
          "35342:   version: 3.2.1",
          "35343:   resolution: \"node-addon-api@npm:3.2.1\"",
          "",
          "[Removed Lines]",
          "35334: \"node-abort-controller@npm:^3.0.0\":",
          "35335:   version: 3.1.1",
          "35336:   resolution: \"node-abort-controller@npm:3.1.1\"",
          "35337:   checksum: 2c340916af9710328b11c0828223fc65ba320e0d082214a211311bf64c2891028e42ef276b9799188c4ada9e6e1c54cf7a0b7c05dd9d59fcdc8cd633304c8047",
          "35338:   languageName: node",
          "35339:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "40028:   languageName: node",
          "40029:   linkType: hard",
          "40032:   version: 1.1.0",
          "40033:   resolution: \"semaphore@npm:1.1.0\"",
          "40034:   checksum: d2445d232ad9959048d4748ef54eb01bc7b60436be2b42fb7de20c4cffacf70eafeeecd3772c1baf408cfdce3805fa6618a4389590335671f18cde54ef3cfae4",
          "",
          "[Removed Lines]",
          "40031: \"semaphore@npm:^1.0.5\":",
          "",
          "[Added Lines]",
          "40100: \"semaphore@npm:^1.1.0\":",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de7bcda54a32f97438f3bdd3dbc347fbcd10da12",
      "candidate_info": {
        "commit_hash": "de7bcda54a32f97438f3bdd3dbc347fbcd10da12",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/de7bcda54a32f97438f3bdd3dbc347fbcd10da12",
        "files": [
          "docs/core_docs/docs/integrations/tools/stagehand.mdx",
          "examples/package.json",
          "examples/src/agents/stagehand_ai_web_browser.ts",
          "libs/langchain-community/langchain.config.js",
          "libs/langchain-community/package.json",
          "libs/langchain-community/src/agents/toolkits/stagehand.ts",
          "libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts",
          "yarn.lock"
        ],
        "message": "feat(community): Stagehand tools integration (#7177)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
        "before_after_code_files": [
          "examples/src/agents/stagehand_ai_web_browser.ts||examples/src/agents/stagehand_ai_web_browser.ts",
          "libs/langchain-community/langchain.config.js||libs/langchain-community/langchain.config.js",
          "libs/langchain-community/src/agents/toolkits/stagehand.ts||libs/langchain-community/src/agents/toolkits/stagehand.ts",
          "libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts||libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/src/agents/stagehand_ai_web_browser.ts||examples/src/agents/stagehand_ai_web_browser.ts": [
          "File: examples/src/agents/stagehand_ai_web_browser.ts -> examples/src/agents/stagehand_ai_web_browser.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Stagehand } from \"@browserbasehq/stagehand\";",
          "2: import {",
          "3:   StagehandActTool,",
          "4:   StagehandNavigateTool,",
          "5: } from \"@langchain/community/agents/toolkits/stagehand\";",
          "6: import { ChatOpenAI } from \"@langchain/openai\";",
          "7: import { createReactAgent } from \"@langchain/langgraph/prebuilt\";",
          "9: async function main() {",
          "11:   const stagehand = new Stagehand({",
          "12:     env: \"LOCAL\",",
          "13:     enableCaching: true,",
          "14:   });",
          "16:   const actTool = new StagehandActTool(stagehand);",
          "17:   const navigateTool = new StagehandNavigateTool(stagehand);",
          "20:   const model = new ChatOpenAI({",
          "21:     modelName: \"gpt-4\",",
          "22:     temperature: 0,",
          "23:   });",
          "26:   const agent = createReactAgent({",
          "27:     llm: model,",
          "28:     tools: [actTool, navigateTool],",
          "29:   });",
          "32:   const inputs1 = {",
          "33:     messages: [",
          "34:       {",
          "35:         role: \"user\",",
          "36:         content: \"Navigate to https://www.google.com\",",
          "37:       },",
          "38:     ],",
          "39:   };",
          "41:   const stream1 = await agent.stream(inputs1, {",
          "42:     streamMode: \"values\",",
          "43:   });",
          "45:   for await (const { messages } of stream1) {",
          "46:     const msg =",
          "47:       messages && messages.length > 0",
          "48:         ? messages[messages.length - 1]",
          "49:         : undefined;",
          "50:     if (msg?.content) {",
          "51:       console.log(msg.content);",
          "52:     } else if (msg?.tool_calls && msg.tool_calls.length > 0) {",
          "53:       console.log(msg.tool_calls);",
          "54:     } else {",
          "55:       console.log(msg);",
          "56:     }",
          "57:   }",
          "59:   const inputs2 = {",
          "60:     messages: [",
          "61:       {",
          "62:         role: \"user\",",
          "63:         content: \"Search for 'OpenAI'\",",
          "64:       },",
          "65:     ],",
          "66:   };",
          "68:   const stream2 = await agent.stream(inputs2, {",
          "69:     streamMode: \"values\",",
          "70:   });",
          "72:   for await (const { messages } of stream2) {",
          "73:     const msg =",
          "74:       messages && messages.length > 0",
          "75:         ? messages[messages.length - 1]",
          "76:         : undefined;",
          "77:     if (msg?.content) {",
          "78:       console.log(msg.content);",
          "79:     } else if (msg?.tool_calls && msg.tool_calls.length > 0) {",
          "80:       console.log(msg.tool_calls);",
          "81:     } else {",
          "82:       console.log(msg);",
          "83:     }",
          "84:   }",
          "85: }",
          "87: main();",
          "",
          "---------------"
        ],
        "libs/langchain-community/langchain.config.js||libs/langchain-community/langchain.config.js": [
          "File: libs/langchain-community/langchain.config.js -> libs/langchain-community/langchain.config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     \"agents/toolkits/aws_sfn\": \"agents/toolkits/aws_sfn\",",
          "66:     \"agents/toolkits/base\": \"agents/toolkits/base\",",
          "67:     \"agents/toolkits/connery\": \"agents/toolkits/connery/index\",",
          "69:     \"embeddings/alibaba_tongyi\": \"embeddings/alibaba_tongyi\",",
          "70:     \"embeddings/baidu_qianfan\": \"embeddings/baidu_qianfan\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     \"agents/toolkits/stagehand\": \"agents/toolkits/stagehand\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336:     \"tools/gmail\",",
          "337:     \"tools/google_calendar\",",
          "338:     \"agents/toolkits/aws_sfn\",",
          "339:     \"callbacks/handlers/llmonitor\",",
          "340:     \"callbacks/handlers/lunary\",",
          "341:     \"callbacks/handlers/upstash_ratelimit\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340:     \"agents/toolkits/stagehand\",",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/agents/toolkits/stagehand.ts||libs/langchain-community/src/agents/toolkits/stagehand.ts": [
          "File: libs/langchain-community/src/agents/toolkits/stagehand.ts -> libs/langchain-community/src/agents/toolkits/stagehand.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   Tool,",
          "3:   BaseToolkit as Toolkit,",
          "4:   ToolInterface,",
          "5:   StructuredTool,",
          "6: } from \"@langchain/core/tools\";",
          "7: import { Stagehand } from \"@browserbasehq/stagehand\";",
          "8: import { AnyZodObject, z } from \"zod\";",
          "13: abstract class StagehandToolBase extends Tool {",
          "14:   protected stagehand?: Stagehand;",
          "16:   private localStagehand?: Stagehand;",
          "18:   constructor(stagehandInstance?: Stagehand) {",
          "19:     super();",
          "20:     this.stagehand = stagehandInstance;",
          "21:   }",
          "23:   protected async getStagehand(): Promise<Stagehand> {",
          "24:     if (this.stagehand) return this.stagehand;",
          "26:     if (!this.localStagehand) {",
          "27:       this.localStagehand = new Stagehand({",
          "28:         env: \"LOCAL\",",
          "29:         enableCaching: true,",
          "30:       });",
          "31:       await this.localStagehand.init();",
          "32:     }",
          "33:     return this.localStagehand;",
          "34:   }",
          "35: }",
          "37: function isErrorWithMessage(error: unknown): error is { message: string } {",
          "38:   return (",
          "39:     typeof error === \"object\" &&",
          "40:     error !== null &&",
          "41:     \"message\" in error &&",
          "42:     typeof (error as { message: unknown }).message === \"string\"",
          "43:   );",
          "44: }",
          "46: export class StagehandNavigateTool extends StagehandToolBase {",
          "47:   name = \"stagehand_navigate\";",
          "49:   description =",
          "50:     \"Use this tool to navigate to a specific URL using Stagehand. The input should be a valid URL as a string.\";",
          "52:   async _call(input: string): Promise<string> {",
          "53:     const stagehand = await this.getStagehand();",
          "54:     try {",
          "55:       await stagehand.page.goto(input);",
          "56:       return `Successfully navigated to ${input}.`;",
          "57:     } catch (error: unknown) {",
          "58:       const message = isErrorWithMessage(error) ? error.message : String(error);",
          "59:       return `Failed to navigate: ${message}`;",
          "60:     }",
          "61:   }",
          "62: }",
          "64: export class StagehandActTool extends StagehandToolBase {",
          "65:   name = \"stagehand_act\";",
          "67:   description =",
          "68:     \"Use this tool to perform an action on the current web page using Stagehand. The input should be a string describing the action to perform.\";",
          "70:   async _call(input: string): Promise<string> {",
          "71:     const stagehand = await this.getStagehand();",
          "72:     const result = await stagehand.act({ action: input });",
          "73:     if (result.success) {",
          "74:       return `Action performed successfully: ${result.message}`;",
          "75:     } else {",
          "76:       return `Failed to perform action: ${result.message}`;",
          "77:     }",
          "78:   }",
          "79: }",
          "81: export class StagehandExtractTool extends StructuredTool {",
          "82:   name = \"stagehand_extract\";",
          "84:   description =",
          "85:     \"Use this tool to extract structured information from the current web page using Stagehand. The input should include an 'instruction' string and a 'schema' object representing the extraction schema in JSON Schema format.\";",
          "88:   schema = z.object({",
          "89:     instruction: z.string().describe(\"Instruction on what to extract\"),",
          "90:     schema: z",
          "91:       .record(z.any())",
          "92:       .describe(\"Extraction schema in JSON Schema format\"),",
          "93:   });",
          "95:   private stagehand?: Stagehand;",
          "97:   constructor(stagehandInstance?: Stagehand) {",
          "98:     super();",
          "99:     this.stagehand = stagehandInstance;",
          "100:   }",
          "102:   async _call(input: {",
          "103:     instruction: string;",
          "104:     schema: AnyZodObject;",
          "105:   }): Promise<string> {",
          "106:     const stagehand = await this.getStagehand();",
          "107:     const { instruction, schema } = input;",
          "109:     try {",
          "110:       const result = await stagehand.extract({",
          "111:         instruction,",
          "112:         schema, // Assuming Stagehand accepts the schema in JSON Schema format",
          "113:       });",
          "114:       return JSON.stringify(result);",
          "115:     } catch (error: unknown) {",
          "116:       const message = isErrorWithMessage(error) ? error.message : String(error);",
          "117:       return `Failed to extract information: ${message}`;",
          "118:     }",
          "119:   }",
          "121:   protected async getStagehand(): Promise<Stagehand> {",
          "122:     if (this.stagehand) return this.stagehand;",
          "125:     this.stagehand = new Stagehand({",
          "126:       env: \"LOCAL\",",
          "127:       enableCaching: true,",
          "128:     });",
          "129:     await this.stagehand.init();",
          "130:     return this.stagehand;",
          "131:   }",
          "132: }",
          "134: export class StagehandObserveTool extends StagehandToolBase {",
          "135:   name = \"stagehand_observe\";",
          "137:   description =",
          "138:     \"Use this tool to observe the current web page and retrieve possible actions using Stagehand. The input can be an optional instruction string.\";",
          "140:   async _call(input: string): Promise<string> {",
          "141:     const stagehand = await this.getStagehand();",
          "142:     const instruction = input || undefined;",
          "144:     try {",
          "145:       const result = await stagehand.observe({ instruction });",
          "146:       return JSON.stringify(result);",
          "147:     } catch (error: unknown) {",
          "148:       const message = isErrorWithMessage(error) ? error.message : String(error);",
          "149:       return `Failed to observe: ${message}`;",
          "150:     }",
          "151:   }",
          "152: }",
          "154: export class StagehandToolkit extends Toolkit {",
          "155:   tools: ToolInterface[];",
          "157:   stagehand?: Stagehand;",
          "159:   constructor(stagehand?: Stagehand) {",
          "160:     super();",
          "161:     this.stagehand = stagehand;",
          "162:     this.tools = this.initializeTools();",
          "163:   }",
          "165:   private initializeTools(): ToolInterface[] {",
          "166:     return [",
          "167:       new StagehandNavigateTool(this.stagehand),",
          "168:       new StagehandActTool(this.stagehand),",
          "169:       new StagehandExtractTool(this.stagehand),",
          "170:       new StagehandObserveTool(this.stagehand),",
          "171:     ];",
          "172:   }",
          "174:   static async fromStagehand(stagehand: Stagehand): Promise<StagehandToolkit> {",
          "175:     return new StagehandToolkit(stagehand);",
          "176:   }",
          "177: }",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts||libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts": [
          "File: libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts -> libs/langchain-community/src/agents/toolkits/tests/stagehand.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { expect, describe, test, beforeEach, afterEach } from \"@jest/globals\";",
          "2: import { Stagehand } from \"@browserbasehq/stagehand\";",
          "3: import { z } from \"zod\";",
          "4: import { ChatOpenAI } from \"@langchain/openai\";",
          "6: import { StagehandToolkit } from \"../stagehand.js\";",
          "8: describe(\"StagehandToolkit Integration Tests\", () => {",
          "9:   let stagehand: Stagehand;",
          "10:   let toolkit: StagehandToolkit;",
          "12:   beforeEach(async () => {",
          "13:     stagehand = new Stagehand({",
          "14:       env: \"LOCAL\",",
          "15:       headless: false,",
          "16:       verbose: 2,",
          "17:       debugDom: true,",
          "18:       enableCaching: false,",
          "19:     });",
          "20:     await stagehand.init({ modelName: \"gpt-4o-mini\" });",
          "21:     toolkit = await StagehandToolkit.fromStagehand(stagehand);",
          "22:   });",
          "24:   afterEach(async () => {",
          "25:     await stagehand.context.close().catch(() => {});",
          "26:   });",
          "28:   test(\"should perform basic navigation and search\", async () => {",
          "29:     const navigateTool = toolkit.tools.find(",
          "30:       (t) => t.name === \"stagehand_navigate\"",
          "31:     );",
          "32:     if (!navigateTool) {",
          "33:       throw new Error(\"Navigate tool not found\");",
          "34:     }",
          "35:     await navigateTool.invoke(\"https://www.google.com\");",
          "37:     const actionTool = toolkit.tools.find((t) => t.name === \"stagehand_act\");",
          "38:     if (!actionTool) {",
          "39:       throw new Error(\"Action tool not found\");",
          "40:     }",
          "41:     await actionTool.invoke('Search for \"OpenAI\"');",
          "43:     const currentUrl = stagehand.page.url();",
          "44:     expect(currentUrl).toContain(\"google.com/search?q=OpenAI\");",
          "45:   });",
          "47:   test(\"should extract structured data from webpage\", async () => {",
          "48:     const navigateTool = toolkit.tools.find(",
          "49:       (t) => t.name === \"stagehand_navigate\"",
          "50:     );",
          "51:     if (!navigateTool) {",
          "52:       throw new Error(\"Navigate tool not found\");",
          "53:     }",
          "54:     await navigateTool.invoke(",
          "55:       \"https://github.com/facebook/react/graphs/contributors\"",
          "56:     );",
          "58:     const extractTool = toolkit.tools.find(",
          "59:       (t) => t.name === \"stagehand_extract\"",
          "60:     );",
          "61:     if (!extractTool) {",
          "62:       throw new Error(\"Extract tool not found\");",
          "63:     }",
          "64:     const input = {",
          "65:       instruction: \"extract the top contributor\",",
          "66:       schema: z.object({",
          "67:         username: z.string(),",
          "68:         url: z.string(),",
          "69:       }),",
          "70:     };",
          "71:     const result = await extractTool.invoke(input);",
          "72:     const parsedResult = JSON.parse(result);",
          "73:     const { username, url } = parsedResult;",
          "74:     expect(username).toBeDefined();",
          "75:     expect(url).toBeDefined();",
          "76:   });",
          "78:   test(\"should handle tab navigation\", async () => {",
          "79:     const navigateTool = toolkit.tools.find(",
          "80:       (t) => t.name === \"stagehand_navigate\"",
          "81:     );",
          "82:     if (!navigateTool) {",
          "83:       throw new Error(\"Navigate tool not found\");",
          "84:     }",
          "85:     await navigateTool.invoke(\"https://www.google.com/\");",
          "87:     const actionTool = toolkit.tools.find((t) => t.name === \"stagehand_act\");",
          "88:     if (!actionTool) {",
          "89:       throw new Error(\"Action tool not found\");",
          "90:     }",
          "91:     await actionTool.invoke(\"click on the about page\");",
          "93:     const currentUrl = stagehand.page.url();",
          "94:     expect(currentUrl).toContain(\"about\");",
          "95:   });",
          "97:   test(\"should use observe tool to get page information\", async () => {",
          "98:     await stagehand.page.goto(\"https://github.com/browserbase/stagehand\");",
          "100:     const observeTool = toolkit.tools.find(",
          "101:       (t) => t.name === \"stagehand_observe\"",
          "102:     );",
          "103:     if (!observeTool) {",
          "104:       throw new Error(\"Observe tool not found\");",
          "105:     }",
          "106:     const result = await observeTool.invoke(",
          "107:       \"What actions can be performed on the repository page?\"",
          "108:     );",
          "110:     const observations = JSON.parse(result);",
          "112:     expect(Array.isArray(observations)).toBe(true);",
          "113:     expect(observations.length).toBeGreaterThan(0);",
          "114:     expect(observations[0]).toHaveProperty(\"description\");",
          "115:     expect(observations[0]).toHaveProperty(\"selector\");",
          "116:     expect(typeof observations[0].description).toBe(\"string\");",
          "117:     expect(typeof observations[0].selector).toBe(\"string\");",
          "118:   });",
          "120:   test(\"should perform navigation and search using llm with tools\", async () => {",
          "121:     const llm = new ChatOpenAI({ temperature: 0 });",
          "123:     if (!llm.bindTools) {",
          "124:       throw new Error(\"Language model does not support tools.\");",
          "125:     }",
          "128:     const llmWithTools = llm.bindTools(toolkit.tools);",
          "131:     const result = await llmWithTools.invoke(",
          "132:       \"Navigate to https://www.google.com\"",
          "133:     );",
          "135:     expect(result.tool_calls).toBeDefined();",
          "136:     expect(result.tool_calls?.length).toBe(1);",
          "137:     const toolCall = result.tool_calls?.[0];",
          "138:     expect(toolCall?.name).toBe(\"stagehand_navigate\");",
          "140:     const navigateTool = toolkit.tools.find(",
          "141:       (t) => t.name === \"stagehand_navigate\"",
          "142:     );",
          "143:     if (!navigateTool) {",
          "144:       throw new Error(\"Navigate tool not found\");",
          "145:     }",
          "146:     const navigateResult = await navigateTool?.invoke(toolCall?.args?.input);",
          "147:     expect(navigateResult).toContain(\"Successfully navigated\");",
          "149:     const result2 = await llmWithTools.invoke('Search for \"OpenAI\"');",
          "150:     expect(result2.tool_calls).toBeDefined();",
          "151:     expect(result2.tool_calls?.length).toBe(1);",
          "152:     const actionToolCall = result2.tool_calls?.[0];",
          "153:     expect(actionToolCall?.name).toBe(\"stagehand_act\");",
          "154:     expect(actionToolCall?.args?.input).toBe(\"search for OpenAI\");",
          "156:     const actionTool = toolkit.tools.find((t) => t.name === \"stagehand_act\");",
          "157:     if (!actionTool) {",
          "158:       throw new Error(\"Action tool not found\");",
          "159:     }",
          "160:     const actionResult = await actionTool.invoke(actionToolCall?.args?.input);",
          "161:     expect(actionResult).toContain(\"successfully\");",
          "164:     const currentUrl = stagehand.page.url();",
          "165:     expect(currentUrl).toContain(\"google.com/search?q=OpenAI\");",
          "166:   });",
          "242: });",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "8565:   languageName: node",
          "8566:   linkType: hard",
          "8568: \"@chainsafe/is-ip@npm:^2.0.1\":",
          "8569:   version: 2.0.2",
          "8570:   resolution: \"@chainsafe/is-ip@npm:2.0.2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8568: \"@browserbasehq/sdk@npm:^2.0.0\":",
          "8569:   version: 2.0.0",
          "8570:   resolution: \"@browserbasehq/sdk@npm:2.0.0\"",
          "8571:   dependencies:",
          "8572:     \"@types/node\": ^18.11.18",
          "8573:     \"@types/node-fetch\": ^2.6.4",
          "8574:     abort-controller: ^3.0.0",
          "8575:     agentkeepalive: ^4.2.1",
          "8576:     form-data-encoder: 1.7.2",
          "8577:     formdata-node: ^4.3.2",
          "8578:     node-fetch: ^2.6.7",
          "8579:   checksum: f3ef62ff6817e5095ba1d2477b3ffcbfd7accf9cc1692b8d047803d4c854ad68521724c12af7df584589b9c04eb2fe95ec6f0a20114d1515363b814aa9d8b34e",
          "8580:   languageName: node",
          "8581:   linkType: hard",
          "8583: \"@browserbasehq/stagehand@npm:^1.0.0, @browserbasehq/stagehand@npm:^1.3.0\":",
          "8584:   version: 1.3.0",
          "8585:   resolution: \"@browserbasehq/stagehand@npm:1.3.0\"",
          "8586:   dependencies:",
          "8587:     \"@anthropic-ai/sdk\": ^0.27.3",
          "8588:     \"@browserbasehq/sdk\": ^2.0.0",
          "8589:     anthropic: ^0.0.0",
          "8590:     anthropic-ai: ^0.0.10",
          "8591:     sharp: ^0.33.5",
          "8592:     zod-to-json-schema: ^3.23.3",
          "8593:   peerDependencies:",
          "8594:     \"@playwright/test\": ^1.42.1",
          "8595:     deepmerge: ^4.3.1",
          "8596:     dotenv: ^16.4.5",
          "8597:     openai: ^4.62.1",
          "8598:     zod: ^3.23.8",
          "8599:   checksum: 16962b3a95af92f3d435b5ceca84a5f0728334c5b3ac327f862b09501a5ecc6465d305ce20856fdc5d83606c26f884b69676347e4524a38a5e20795ee3d4d30e",
          "8600:   languageName: node",
          "8601:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9401:   languageName: node",
          "9402:   linkType: hard",
          "9404: \"@esbuild-kit/cjs-loader@npm:^2.4.2\":",
          "9405:   version: 2.4.2",
          "9406:   resolution: \"@esbuild-kit/cjs-loader@npm:2.4.2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9439: \"@emnapi/runtime@npm:^1.2.0\":",
          "9440:   version: 1.3.1",
          "9441:   resolution: \"@emnapi/runtime@npm:1.3.1\"",
          "9442:   dependencies:",
          "9443:     tslib: ^2.4.0",
          "9444:   checksum: 9a16ae7905a9c0e8956cf1854ef74e5087fbf36739abdba7aa6b308485aafdc993da07c19d7af104cd5f8e425121120852851bb3a0f78e2160e420a36d47f42f",
          "9445:   languageName: node",
          "9446:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10504:   languageName: node",
          "10505:   linkType: hard",
          "10507: \"@inquirer/figures@npm:^1.0.3\":",
          "10508:   version: 1.0.5",
          "10509:   resolution: \"@inquirer/figures@npm:1.0.5\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10551: \"@img/sharp-darwin-arm64@npm:0.33.5\":",
          "10552:   version: 0.33.5",
          "10553:   resolution: \"@img/sharp-darwin-arm64@npm:0.33.5\"",
          "10554:   dependencies:",
          "10555:     \"@img/sharp-libvips-darwin-arm64\": 1.0.4",
          "10556:   dependenciesMeta:",
          "10557:     \"@img/sharp-libvips-darwin-arm64\":",
          "10558:       optional: true",
          "10559:   conditions: os=darwin & cpu=arm64",
          "10560:   languageName: node",
          "10561:   linkType: hard",
          "10563: \"@img/sharp-darwin-x64@npm:0.33.5\":",
          "10564:   version: 0.33.5",
          "10565:   resolution: \"@img/sharp-darwin-x64@npm:0.33.5\"",
          "10566:   dependencies:",
          "10567:     \"@img/sharp-libvips-darwin-x64\": 1.0.4",
          "10568:   dependenciesMeta:",
          "10569:     \"@img/sharp-libvips-darwin-x64\":",
          "10570:       optional: true",
          "10571:   conditions: os=darwin & cpu=x64",
          "10572:   languageName: node",
          "10573:   linkType: hard",
          "10575: \"@img/sharp-libvips-darwin-arm64@npm:1.0.4\":",
          "10576:   version: 1.0.4",
          "10577:   resolution: \"@img/sharp-libvips-darwin-arm64@npm:1.0.4\"",
          "10578:   conditions: os=darwin & cpu=arm64",
          "10579:   languageName: node",
          "10580:   linkType: hard",
          "10582: \"@img/sharp-libvips-darwin-x64@npm:1.0.4\":",
          "10583:   version: 1.0.4",
          "10584:   resolution: \"@img/sharp-libvips-darwin-x64@npm:1.0.4\"",
          "10585:   conditions: os=darwin & cpu=x64",
          "10586:   languageName: node",
          "10587:   linkType: hard",
          "10589: \"@img/sharp-libvips-linux-arm64@npm:1.0.4\":",
          "10590:   version: 1.0.4",
          "10591:   resolution: \"@img/sharp-libvips-linux-arm64@npm:1.0.4\"",
          "10592:   conditions: os=linux & cpu=arm64 & libc=glibc",
          "10593:   languageName: node",
          "10594:   linkType: hard",
          "10596: \"@img/sharp-libvips-linux-arm@npm:1.0.5\":",
          "10597:   version: 1.0.5",
          "10598:   resolution: \"@img/sharp-libvips-linux-arm@npm:1.0.5\"",
          "10599:   conditions: os=linux & cpu=arm & libc=glibc",
          "10600:   languageName: node",
          "10601:   linkType: hard",
          "10603: \"@img/sharp-libvips-linux-s390x@npm:1.0.4\":",
          "10604:   version: 1.0.4",
          "10605:   resolution: \"@img/sharp-libvips-linux-s390x@npm:1.0.4\"",
          "10606:   conditions: os=linux & cpu=s390x & libc=glibc",
          "10607:   languageName: node",
          "10608:   linkType: hard",
          "10610: \"@img/sharp-libvips-linux-x64@npm:1.0.4\":",
          "10611:   version: 1.0.4",
          "10612:   resolution: \"@img/sharp-libvips-linux-x64@npm:1.0.4\"",
          "10613:   conditions: os=linux & cpu=x64 & libc=glibc",
          "10614:   languageName: node",
          "10615:   linkType: hard",
          "10617: \"@img/sharp-libvips-linuxmusl-arm64@npm:1.0.4\":",
          "10618:   version: 1.0.4",
          "10619:   resolution: \"@img/sharp-libvips-linuxmusl-arm64@npm:1.0.4\"",
          "10620:   conditions: os=linux & cpu=arm64 & libc=musl",
          "10621:   languageName: node",
          "10622:   linkType: hard",
          "10624: \"@img/sharp-libvips-linuxmusl-x64@npm:1.0.4\":",
          "10625:   version: 1.0.4",
          "10626:   resolution: \"@img/sharp-libvips-linuxmusl-x64@npm:1.0.4\"",
          "10627:   conditions: os=linux & cpu=x64 & libc=musl",
          "10628:   languageName: node",
          "10629:   linkType: hard",
          "10631: \"@img/sharp-linux-arm64@npm:0.33.5\":",
          "10632:   version: 0.33.5",
          "10633:   resolution: \"@img/sharp-linux-arm64@npm:0.33.5\"",
          "10634:   dependencies:",
          "10635:     \"@img/sharp-libvips-linux-arm64\": 1.0.4",
          "10636:   dependenciesMeta:",
          "10637:     \"@img/sharp-libvips-linux-arm64\":",
          "10638:       optional: true",
          "10639:   conditions: os=linux & cpu=arm64 & libc=glibc",
          "10640:   languageName: node",
          "10641:   linkType: hard",
          "10643: \"@img/sharp-linux-arm@npm:0.33.5\":",
          "10644:   version: 0.33.5",
          "10645:   resolution: \"@img/sharp-linux-arm@npm:0.33.5\"",
          "10646:   dependencies:",
          "10647:     \"@img/sharp-libvips-linux-arm\": 1.0.5",
          "10648:   dependenciesMeta:",
          "10649:     \"@img/sharp-libvips-linux-arm\":",
          "10650:       optional: true",
          "10651:   conditions: os=linux & cpu=arm & libc=glibc",
          "10652:   languageName: node",
          "10653:   linkType: hard",
          "10655: \"@img/sharp-linux-s390x@npm:0.33.5\":",
          "10656:   version: 0.33.5",
          "10657:   resolution: \"@img/sharp-linux-s390x@npm:0.33.5\"",
          "10658:   dependencies:",
          "10659:     \"@img/sharp-libvips-linux-s390x\": 1.0.4",
          "10660:   dependenciesMeta:",
          "10661:     \"@img/sharp-libvips-linux-s390x\":",
          "10662:       optional: true",
          "10663:   conditions: os=linux & cpu=s390x & libc=glibc",
          "10664:   languageName: node",
          "10665:   linkType: hard",
          "10667: \"@img/sharp-linux-x64@npm:0.33.5\":",
          "10668:   version: 0.33.5",
          "10669:   resolution: \"@img/sharp-linux-x64@npm:0.33.5\"",
          "10670:   dependencies:",
          "10671:     \"@img/sharp-libvips-linux-x64\": 1.0.4",
          "10672:   dependenciesMeta:",
          "10673:     \"@img/sharp-libvips-linux-x64\":",
          "10674:       optional: true",
          "10675:   conditions: os=linux & cpu=x64 & libc=glibc",
          "10676:   languageName: node",
          "10677:   linkType: hard",
          "10679: \"@img/sharp-linuxmusl-arm64@npm:0.33.5\":",
          "10680:   version: 0.33.5",
          "10681:   resolution: \"@img/sharp-linuxmusl-arm64@npm:0.33.5\"",
          "10682:   dependencies:",
          "10683:     \"@img/sharp-libvips-linuxmusl-arm64\": 1.0.4",
          "10684:   dependenciesMeta:",
          "10685:     \"@img/sharp-libvips-linuxmusl-arm64\":",
          "10686:       optional: true",
          "10687:   conditions: os=linux & cpu=arm64 & libc=musl",
          "10688:   languageName: node",
          "10689:   linkType: hard",
          "10691: \"@img/sharp-linuxmusl-x64@npm:0.33.5\":",
          "10692:   version: 0.33.5",
          "10693:   resolution: \"@img/sharp-linuxmusl-x64@npm:0.33.5\"",
          "10694:   dependencies:",
          "10695:     \"@img/sharp-libvips-linuxmusl-x64\": 1.0.4",
          "10696:   dependenciesMeta:",
          "10697:     \"@img/sharp-libvips-linuxmusl-x64\":",
          "10698:       optional: true",
          "10699:   conditions: os=linux & cpu=x64 & libc=musl",
          "10700:   languageName: node",
          "10701:   linkType: hard",
          "10703: \"@img/sharp-wasm32@npm:0.33.5\":",
          "10704:   version: 0.33.5",
          "10705:   resolution: \"@img/sharp-wasm32@npm:0.33.5\"",
          "10706:   dependencies:",
          "10707:     \"@emnapi/runtime\": ^1.2.0",
          "10708:   conditions: cpu=wasm32",
          "10709:   languageName: node",
          "10710:   linkType: hard",
          "10712: \"@img/sharp-win32-ia32@npm:0.33.5\":",
          "10713:   version: 0.33.5",
          "10714:   resolution: \"@img/sharp-win32-ia32@npm:0.33.5\"",
          "10715:   conditions: os=win32 & cpu=ia32",
          "10716:   languageName: node",
          "10717:   linkType: hard",
          "10719: \"@img/sharp-win32-x64@npm:0.33.5\":",
          "10720:   version: 0.33.5",
          "10721:   resolution: \"@img/sharp-win32-x64@npm:0.33.5\"",
          "10722:   conditions: os=win32 & cpu=x64",
          "10723:   languageName: node",
          "10724:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "11484:     \"@azure/search-documents\": ^12.0.0",
          "11485:     \"@azure/storage-blob\": ^12.15.0",
          "11486:     \"@browserbasehq/sdk\": ^1.1.5",
          "11487:     \"@clickhouse/client\": ^0.2.5",
          "11488:     \"@cloudflare/ai\": 1.0.12",
          "11489:     \"@cloudflare/workers-types\": ^4.20230922.0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11706:     \"@browserbasehq/stagehand\": ^1.0.0",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "11515:     \"@notionhq/client\": ^2.2.10",
          "11516:     \"@opensearch-project/opensearch\": ^2.2.0",
          "11517:     \"@planetscale/database\": ^1.8.0",
          "11518:     \"@premai/prem-sdk\": ^0.3.25",
          "11519:     \"@qdrant/js-client-rest\": ^1.8.2",
          "11520:     \"@raycast/api\": ^1.83.1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11738:     \"@playwright/test\": ^1.48.2",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11619:     node-llama-cpp: 3.1.1",
          "11620:     notion-to-md: ^3.1.0",
          "11621:     officeparser: ^4.0.4",
          "11622:     pdf-parse: 1.1.1",
          "11623:     pg: ^8.11.0",
          "11624:     pg-copy-streams: ^6.0.5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11843:     openai: \"*\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11662:     \"@azure/search-documents\": ^12.0.0",
          "11663:     \"@azure/storage-blob\": ^12.15.0",
          "11664:     \"@browserbasehq/sdk\": \"*\"",
          "11665:     \"@clickhouse/client\": ^0.2.5",
          "11666:     \"@cloudflare/ai\": \"*\"",
          "11667:     \"@datastax/astra-db-ts\": ^1.0.0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11887:     \"@browserbasehq/stagehand\": ^1.0.0",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11750:     neo4j-driver: \"*\"",
          "11751:     notion-to-md: ^3.1.0",
          "11752:     officeparser: ^4.0.4",
          "11753:     pdf-parse: 1.1.1",
          "11754:     pg: ^8.11.0",
          "11755:     pg-copy-streams: ^6.0.5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11976:     openai: \"*\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "14136:   languageName: node",
          "14137:   linkType: hard",
          "14139: \"@pnpm/config.env-replace@npm:^1.0.0\":",
          "14140:   version: 1.0.0",
          "14141:   resolution: \"@pnpm/config.env-replace@npm:1.0.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14363: \"@playwright/test@npm:^1.48.2\":",
          "14364:   version: 1.49.0",
          "14365:   resolution: \"@playwright/test@npm:1.49.0\"",
          "14366:   dependencies:",
          "14367:     playwright: 1.49.0",
          "14368:   bin:",
          "14369:     playwright: cli.js",
          "14370:   checksum: f8477aa61d59fd22c6161c48221ab246340dc37bbe2804e1a7d1be8cbd0fd861747fcb7ca559f4bc7328226ff2c90ccb7efa588a7d7d7829f3e57902b28fe39a",
          "14371:   languageName: node",
          "14372:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "21058:   languageName: node",
          "21059:   linkType: hard",
          "21061: \"any-promise@npm:^1.0.0\":",
          "21062:   version: 1.3.0",
          "21063:   resolution: \"any-promise@npm:1.3.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21296: \"anthropic-ai@npm:^0.0.10\":",
          "21297:   version: 0.0.10",
          "21298:   resolution: \"anthropic-ai@npm:0.0.10\"",
          "21299:   checksum: aee9204f298475c6ab7c34c9cada7ba1dbe0337ce331aea4cd4feffd34e3f491ff3cd64b572ceb5a81b6304c3fbb783b4e7c3a1d8837ce0ad1dca80796dca8f5",
          "21300:   languageName: node",
          "21301:   linkType: hard",
          "21303: \"anthropic@npm:^0.0.0\":",
          "21304:   version: 0.0.0",
          "21305:   resolution: \"anthropic@npm:0.0.0\"",
          "21306:   checksum: 67e0d17815883edd7acf967848a4c5d15d36f827c7cc0191c84381d8c04838f2f22b363c299b92bd6d50ff398bfa417279554398b197a72b301ebc4b1888df08",
          "21307:   languageName: node",
          "21308:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "25260:   languageName: node",
          "25261:   linkType: hard",
          "25263: \"detect-newline@npm:^3.0.0\":",
          "25264:   version: 3.1.0",
          "25265:   resolution: \"detect-newline@npm:3.1.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25512: \"detect-libc@npm:^2.0.3\":",
          "25513:   version: 2.0.3",
          "25514:   resolution: \"detect-libc@npm:2.0.3\"",
          "25515:   checksum: 2ba6a939ae55f189aea996ac67afceb650413c7a34726ee92c40fb0deb2400d57ef94631a8a3f052055eea7efb0f99a9b5e6ce923415daa3e68221f963cfc27d",
          "25516:   languageName: node",
          "25517:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "27339:   resolution: \"examples@workspace:examples\"",
          "27340:   dependencies:",
          "27341:     \"@azure/identity\": ^4.2.1",
          "27342:     \"@clickhouse/client\": ^0.2.5",
          "27343:     \"@elastic/elasticsearch\": ^8.4.0",
          "27344:     \"@faker-js/faker\": ^8.4.1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27598:     \"@browserbasehq/stagehand\": ^1.3.0",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "35905:   languageName: node",
          "35906:   linkType: hard",
          "35908: \"openai@npm:^4.32.1\":",
          "35909:   version: 4.47.1",
          "35910:   resolution: \"openai@npm:4.47.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36165: \"openai@npm:*\":",
          "36166:   version: 4.73.0",
          "36167:   resolution: \"openai@npm:4.73.0\"",
          "36168:   dependencies:",
          "36169:     \"@types/node\": ^18.11.18",
          "36170:     \"@types/node-fetch\": ^2.6.4",
          "36171:     abort-controller: ^3.0.0",
          "36172:     agentkeepalive: ^4.2.1",
          "36173:     form-data-encoder: 1.7.2",
          "36174:     formdata-node: ^4.3.2",
          "36175:     node-fetch: ^2.6.7",
          "36176:   peerDependencies:",
          "36177:     zod: ^3.23.8",
          "36178:   peerDependenciesMeta:",
          "36179:     zod:",
          "36180:       optional: true",
          "36181:   bin:",
          "36182:     openai: bin/cli",
          "36183:   checksum: 499f20048a15e777a943c8eefc2ae1e1195a88ec2a61337d98233ae7f2c2cba3ff4f473e08bce25af38d24da3a3da2b3db077919ac104ff2449e246e895b5b62",
          "36184:   languageName: node",
          "36185:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "36959:   languageName: node",
          "36960:   linkType: hard",
          "36962: \"playwright@npm:^1.32.1\":",
          "36963:   version: 1.32.1",
          "36964:   resolution: \"playwright@npm:1.32.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37241: \"playwright-core@npm:1.49.0\":",
          "37242:   version: 1.49.0",
          "37243:   resolution: \"playwright-core@npm:1.49.0\"",
          "37244:   bin:",
          "37245:     playwright-core: cli.js",
          "37246:   checksum: d8423ad0cab2e672856529bf6b98b406e7e605da098b847b9b54ee8ebd8d716ed8880a9afff4b38f0a2e3f59b95661c74589116ce3ff2b5e0ae3561507086c94",
          "37247:   languageName: node",
          "37248:   linkType: hard",
          "37250: \"playwright@npm:1.49.0\":",
          "37251:   version: 1.49.0",
          "37252:   resolution: \"playwright@npm:1.49.0\"",
          "37253:   dependencies:",
          "37254:     fsevents: 2.3.2",
          "37255:     playwright-core: 1.49.0",
          "37256:   dependenciesMeta:",
          "37257:     fsevents:",
          "37258:       optional: true",
          "37259:   bin:",
          "37260:     playwright: cli.js",
          "37261:   checksum: f1bfb2fff65cad2ce996edab74ec231dfd21aeb5961554b765ce1eaec27efb87eaba37b00e91ecd27727b82861e5d8c230abe4960e93f6ada8be5ad1020df306",
          "37262:   languageName: node",
          "37263:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "40006:   languageName: node",
          "40007:   linkType: hard",
          "40009: \"shebang-command@npm:^2.0.0\":",
          "40010:   version: 2.0.0",
          "40011:   resolution: \"shebang-command@npm:2.0.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40312: \"sharp@npm:^0.33.5\":",
          "40313:   version: 0.33.5",
          "40314:   resolution: \"sharp@npm:0.33.5\"",
          "40315:   dependencies:",
          "40316:     \"@img/sharp-darwin-arm64\": 0.33.5",
          "40317:     \"@img/sharp-darwin-x64\": 0.33.5",
          "40318:     \"@img/sharp-libvips-darwin-arm64\": 1.0.4",
          "40319:     \"@img/sharp-libvips-darwin-x64\": 1.0.4",
          "40320:     \"@img/sharp-libvips-linux-arm\": 1.0.5",
          "40321:     \"@img/sharp-libvips-linux-arm64\": 1.0.4",
          "40322:     \"@img/sharp-libvips-linux-s390x\": 1.0.4",
          "40323:     \"@img/sharp-libvips-linux-x64\": 1.0.4",
          "40324:     \"@img/sharp-libvips-linuxmusl-arm64\": 1.0.4",
          "40325:     \"@img/sharp-libvips-linuxmusl-x64\": 1.0.4",
          "40326:     \"@img/sharp-linux-arm\": 0.33.5",
          "40327:     \"@img/sharp-linux-arm64\": 0.33.5",
          "40328:     \"@img/sharp-linux-s390x\": 0.33.5",
          "40329:     \"@img/sharp-linux-x64\": 0.33.5",
          "40330:     \"@img/sharp-linuxmusl-arm64\": 0.33.5",
          "40331:     \"@img/sharp-linuxmusl-x64\": 0.33.5",
          "40332:     \"@img/sharp-wasm32\": 0.33.5",
          "40333:     \"@img/sharp-win32-ia32\": 0.33.5",
          "40334:     \"@img/sharp-win32-x64\": 0.33.5",
          "40335:     color: ^4.2.3",
          "40336:     detect-libc: ^2.0.3",
          "40337:     semver: ^7.6.3",
          "40338:   dependenciesMeta:",
          "40339:     \"@img/sharp-darwin-arm64\":",
          "40340:       optional: true",
          "40341:     \"@img/sharp-darwin-x64\":",
          "40342:       optional: true",
          "40343:     \"@img/sharp-libvips-darwin-arm64\":",
          "40344:       optional: true",
          "40345:     \"@img/sharp-libvips-darwin-x64\":",
          "40346:       optional: true",
          "40347:     \"@img/sharp-libvips-linux-arm\":",
          "40348:       optional: true",
          "40349:     \"@img/sharp-libvips-linux-arm64\":",
          "40350:       optional: true",
          "40351:     \"@img/sharp-libvips-linux-s390x\":",
          "40352:       optional: true",
          "40353:     \"@img/sharp-libvips-linux-x64\":",
          "40354:       optional: true",
          "40355:     \"@img/sharp-libvips-linuxmusl-arm64\":",
          "40356:       optional: true",
          "40357:     \"@img/sharp-libvips-linuxmusl-x64\":",
          "40358:       optional: true",
          "40359:     \"@img/sharp-linux-arm\":",
          "40360:       optional: true",
          "40361:     \"@img/sharp-linux-arm64\":",
          "40362:       optional: true",
          "40363:     \"@img/sharp-linux-s390x\":",
          "40364:       optional: true",
          "40365:     \"@img/sharp-linux-x64\":",
          "40366:       optional: true",
          "40367:     \"@img/sharp-linuxmusl-arm64\":",
          "40368:       optional: true",
          "40369:     \"@img/sharp-linuxmusl-x64\":",
          "40370:       optional: true",
          "40371:     \"@img/sharp-wasm32\":",
          "40372:       optional: true",
          "40373:     \"@img/sharp-win32-ia32\":",
          "40374:       optional: true",
          "40375:     \"@img/sharp-win32-x64\":",
          "40376:       optional: true",
          "40377:   checksum: 04beae89910ac65c5f145f88de162e8466bec67705f497ace128de849c24d168993e016f33a343a1f3c30b25d2a90c3e62b017a9a0d25452371556f6cd2471e4",
          "40378:   languageName: node",
          "40379:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "44368:   languageName: node",
          "44369:   linkType: hard",
          "44371: \"zod@npm:3.23.8\":",
          "44372:   version: 3.23.8",
          "44373:   resolution: \"zod@npm:3.23.8\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44743: \"zod-to-json-schema@npm:^3.23.3\":",
          "44744:   version: 3.23.5",
          "44745:   resolution: \"zod-to-json-schema@npm:3.23.5\"",
          "44746:   peerDependencies:",
          "44747:     zod: ^3.23.3",
          "44748:   checksum: 3ac37128d1b989b027e55684201e1da90237f0955dc9bb40da013bc60f2ed23c57026df2fdc14da187be4d53873daad08210807c28c0dde4375c9df0e5fe7901",
          "44749:   languageName: node",
          "44750:   linkType: hard",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d92af4469ca0d933f108cdb52cace162c8495ae0",
      "candidate_info": {
        "commit_hash": "d92af4469ca0d933f108cdb52cace162c8495ae0",
        "repo": "langchain-ai/langchainjs",
        "commit_url": "https://github.com/langchain-ai/langchainjs/commit/d92af4469ca0d933f108cdb52cace162c8495ae0",
        "files": [
          "deno.json",
          "docs/core_docs/docs/integrations/document_loaders/web_loaders/youtube.mdx",
          "libs/langchain-community/package.json",
          "libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts",
          "libs/langchain-community/src/document_loaders/web/youtube.ts",
          "yarn.lock"
        ],
        "message": "fix(community): update YoutubeLoader implementation (#7477)\n\nCo-authored-by: jacoblee93 <jacoblee93@gmail.com>",
        "before_after_code_files": [
          "libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts||libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts",
          "libs/langchain-community/src/document_loaders/web/youtube.ts||libs/langchain-community/src/document_loaders/web/youtube.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts||libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts": [
          "File: libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts -> libs/langchain-community/src/document_loaders/tests/youtube.int.test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { test, expect } from \"@jest/globals\";",
          "2: import { YoutubeLoader } from \"../web/youtube.js\";",
          "4: test(\"Test Youtube loader\", async () => {",
          "5:   const videoUrl = \"https://www.youtube.com/watch?v=FZhbJZEgKQ4\";",
          "6:   const loader = YoutubeLoader.createFromUrl(videoUrl, {",
          "7:     language: \"en\",",
          "8:     addVideoInfo: true,",
          "9:   });",
          "10:   const docs = await loader.load();",
          "12:   expect(docs.length).toBe(1);",
          "13:   expect(docs[0].pageContent).toContain(",
          "14:     \"One year ago, at the dawn of a new age,\"",
          "15:   );",
          "16:   expect(docs[0].metadata).toMatchObject({",
          "17:     author: \"Microsoft\",",
          "18:     source: \"FZhbJZEgKQ4\",",
          "19:     title: \"Full Keynote: Satya Nadella at Microsoft Ignite 2023\",",
          "20:   });",
          "21: });",
          "",
          "---------------"
        ],
        "libs/langchain-community/src/document_loaders/web/youtube.ts||libs/langchain-community/src/document_loaders/web/youtube.ts": [
          "File: libs/langchain-community/src/document_loaders/web/youtube.ts -> libs/langchain-community/src/document_loaders/web/youtube.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { Innertube } from \"youtubei.js\";",
          "3: import { Document } from \"@langchain/core/documents\";",
          "4: import { BaseDocumentLoader } from \"@langchain/core/document_loaders/base\";",
          "",
          "[Removed Lines]",
          "1: import { TranscriptResponse, YoutubeTranscript } from \"youtube-transcript\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:   async load(): Promise<Document[]> {",
          "96:     const metadata: VideoMetadata = {",
          "97:       source: this.videoId,",
          "98:     };",
          "99:     try {",
          "101:         lang: this.language,",
          "102:       });",
          "103:       if (transcript === undefined) {",
          "104:         throw new Error(\"Transcription not found\");",
          "105:       }",
          "106:       if (this.addVideoInfo) {",
          "113:       }",
          "114:     } catch (e: unknown) {",
          "115:       throw new Error(",
          "",
          "[Removed Lines]",
          "95:     let transcript: TranscriptResponse[] | undefined;",
          "100:       transcript = await YoutubeTranscript.fetchTranscript(this.videoId, {",
          "107:         const youtube = await Innertube.create();",
          "108:         const info = (await youtube.getBasicInfo(this.videoId)).basic_info;",
          "109:         metadata.description = info.short_description;",
          "110:         metadata.title = info.title;",
          "111:         metadata.view_count = info.view_count;",
          "112:         metadata.author = info.author;",
          "",
          "[Added Lines]",
          "92:     let transcript: string | undefined;",
          "97:       const youtube = await Innertube.create({",
          "99:         retrieve_player: false,",
          "101:       const info = await youtube.getInfo(this.videoId);",
          "102:       const transcriptData = await info.getTranscript();",
          "103:       transcript =",
          "104:         transcriptData.transcript.content?.body?.initial_segments",
          "105:           .map((segment) => segment.snippet.text)",
          "106:           .join(\" \") ?? \"\";",
          "111:         const basicInfo = info.basic_info;",
          "112:         metadata.description = basicInfo.short_description;",
          "113:         metadata.title = basicInfo.title;",
          "114:         metadata.view_count = basicInfo.view_count;",
          "115:         metadata.author = basicInfo.author;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "117:       );",
          "118:     }",
          "119:     const document = new Document({",
          "121:       metadata,",
          "122:     });",
          "",
          "[Removed Lines]",
          "120:       pageContent: transcript.map((item) => item.text).join(\" \"),",
          "",
          "[Added Lines]",
          "123:       pageContent: transcript,",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "8691:   languageName: node",
          "8692:   linkType: hard",
          "8694: \"@cerebras/cerebras_cloud_sdk@npm:^1.15.0\":",
          "8695:   version: 1.15.0",
          "8696:   resolution: \"@cerebras/cerebras_cloud_sdk@npm:1.15.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8694: \"@bufbuild/protobuf@npm:^2.0.0\":",
          "8695:   version: 2.2.3",
          "8696:   resolution: \"@bufbuild/protobuf@npm:2.2.3\"",
          "8697:   checksum: 567ca0497669a8944fe84a9fdfa236e4a91d5879190c0ec0c8727d5220cbc21a85d06a114ac1eb35387fc5cb1dcbb7adc583c4d4f6a2ecb34fbe61dcaa7e7e9b",
          "8698:   languageName: node",
          "8699:   linkType: hard",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12040:     weaviate-ts-client: ^1.4.0",
          "12041:     web-auth-library: ^1.0.3",
          "12042:     word-extractor: ^1.0.4",
          "12045:     zod: ^3.22.3",
          "12046:     zod-to-json-schema: ^3.22.5",
          "12047:   peerDependencies:",
          "",
          "[Removed Lines]",
          "12043:     youtube-transcript: ^1.0.6",
          "12044:     youtubei.js: ^9.1.0",
          "",
          "[Added Lines]",
          "12050:     youtubei.js: ^12.2.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12170:     web-auth-library: ^1.0.3",
          "12171:     word-extractor: \"*\"",
          "12172:     ws: ^8.14.2",
          "12175:   peerDependenciesMeta:",
          "12176:     \"@arcjet/redact\":",
          "12177:       optional: true",
          "",
          "[Removed Lines]",
          "12173:     youtube-transcript: ^1.0.6",
          "12174:     youtubei.js: ^9.1.0",
          "",
          "[Added Lines]",
          "12179:     youtubei.js: \"*\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12413:       optional: true",
          "12414:     ws:",
          "12415:       optional: true",
          "12418:     youtubei.js:",
          "12419:       optional: true",
          "12420:   languageName: unknown",
          "",
          "[Removed Lines]",
          "12416:     youtube-transcript:",
          "12417:       optional: true",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "23126:   languageName: node",
          "23127:   linkType: hard",
          "23136: \"chalk@npm:5.2.0, chalk@npm:^5.0.0, chalk@npm:^5.2.0\":",
          "23137:   version: 5.2.0",
          "23138:   resolution: \"chalk@npm:5.2.0\"",
          "",
          "[Removed Lines]",
          "23129: \"centra@npm:^2.6.0\":",
          "23130:   version: 2.6.0",
          "23131:   resolution: \"centra@npm:2.6.0\"",
          "23132:   checksum: 3b4d44762bceb9e20f7e45d01ffb9e462523cf8a0186f6710c08863f0455bceabfbcb754d6b01ea095c3bdee09c4ebef912669dc2b391a9af400e9ba7e398bc5",
          "23133:   languageName: node",
          "23134:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "32880:   languageName: node",
          "32881:   linkType: hard",
          "32886:   dependencies:",
          "32887:     acorn: ^8.8.0",
          "32889:   languageName: node",
          "32890:   linkType: hard",
          "",
          "[Removed Lines]",
          "32883: \"jintr@npm:^1.1.0\":",
          "32884:   version: 1.1.0",
          "32885:   resolution: \"jintr@npm:1.1.0\"",
          "32888:   checksum: b61269ff80a46c71e837e893a4754fc2d0a941e3d577dc6307f0e67cebebf81e66f646c86bf6159fe7d851d829595d7a9e9e26392b9ede7b6b39d9664f1d090d",
          "",
          "[Added Lines]",
          "32879: \"jintr@npm:^3.2.0\":",
          "32880:   version: 3.2.0",
          "32881:   resolution: \"jintr@npm:3.2.0\"",
          "32884:   checksum: 8f526719fd77d6f7cd52c47c06c86573cb37a15e22ce8129a228ff605d7ea3d662d7c8ef37cad7b4df767f53ca11418ffa49ad4aa8776f62d94362aba8317ff3",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "37265:   languageName: node",
          "37266:   linkType: hard",
          "37277: \"pickleparser@npm:^0.2.1\":",
          "37278:   version: 0.2.1",
          "37279:   resolution: \"pickleparser@npm:0.2.1\"",
          "",
          "[Removed Lines]",
          "37268: \"phin@npm:^3.5.0\":",
          "37269:   version: 3.7.0",
          "37270:   resolution: \"phin@npm:3.7.0\"",
          "37271:   dependencies:",
          "37272:     centra: ^2.6.0",
          "37273:   checksum: b0a35e943615c40a3ccd7d6a2dd062568258e6b36dceed3150d13d28cad906e9028e756ad6efe66963b43937879e8a3593f986d17aac968d42982b4e8702e539",
          "37274:   languageName: node",
          "37275:   linkType: hard",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "44833:   languageName: node",
          "44834:   linkType: hard",
          "44848:   dependencies:",
          "44850:     tslib: ^2.5.0",
          "44851:     undici: ^5.19.1",
          "44853:   languageName: node",
          "44854:   linkType: hard",
          "",
          "[Removed Lines]",
          "44836: \"youtube-transcript@npm:^1.0.6\":",
          "44837:   version: 1.0.6",
          "44838:   resolution: \"youtube-transcript@npm:1.0.6\"",
          "44839:   dependencies:",
          "44840:     phin: ^3.5.0",
          "44841:   checksum: 7ca6a608834d2eb43d2d353ad58bb3fa86663e2f5730146a768c5c3ac423911680451a38c57f827aa7af8fb7df78a4ce3702019d988d87d9ed266f9d81aeb833",
          "44842:   languageName: node",
          "44843:   linkType: hard",
          "44845: \"youtubei.js@npm:^9.1.0\":",
          "44846:   version: 9.1.0",
          "44847:   resolution: \"youtubei.js@npm:9.1.0\"",
          "44849:     jintr: ^1.1.0",
          "44852:   checksum: 7a537d79435c362c3d4f0e101f85edca6b34c584b9cafeee28c4214fdcdcbb6b2ebba2571175e21a984cc5d66d0fe673d761f400dd232ecb16803bce878cb41d",
          "",
          "[Added Lines]",
          "44823: \"youtubei.js@npm:^12.2.0\":",
          "44824:   version: 12.2.0",
          "44825:   resolution: \"youtubei.js@npm:12.2.0\"",
          "44827:     \"@bufbuild/protobuf\": ^2.0.0",
          "44828:     jintr: ^3.2.0",
          "44831:   checksum: 4c89a019c6b94363328e8d0d35b8d8266de1ee3db963a39b655bdaa15e4d899a107876ead53b7a1268837b9a756fecaf53be0b399545a7fe290c6da303010c8f",
          "",
          "---------------"
        ]
      }
    }
  ]
}