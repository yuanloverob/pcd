{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b2b729c10d757bfa9cdfb0cf27d2429d5e5f455a",
      "candidate_info": {
        "commit_hash": "b2b729c10d757bfa9cdfb0cf27d2429d5e5f455a",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/b2b729c10d757bfa9cdfb0cf27d2429d5e5f455a",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ],
        "message": "AMBARI-24383. A NPE occurs if a Kerberos identity descriptor is missing a Keytab specification (amagyar) (#1929) (#1936)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1597:               keytabFileGroupName = variableReplacementHelper.replaceVariables(keytabDescriptor.getGroupName(), configurations);",
          "1598:               keytabFileGroupAccess = variableReplacementHelper.replaceVariables(keytabDescriptor.getGroupAccess(), configurations);",
          "1599:               keytabFileConfiguration = variableReplacementHelper.replaceVariables(keytabDescriptor.getConfiguration(), configurations);",
          "1603:             }",
          "",
          "[Removed Lines]",
          "1600:             }",
          "1601:             if (keytabFileOwnerName == null || keytabFileGroupName == null) {",
          "1602:               LOG.warn(\"Missing owner ({}) or group name ({}) of kerberos descriptor {}\", keytabFileOwnerName, keytabFileGroupName, keytabDescriptor.getName());",
          "",
          "[Added Lines]",
          "1600:               if (keytabFileOwnerName == null || keytabFileGroupName == null) {",
          "1601:                 LOG.warn(\"Missing owner ({}) or group name ({}) of kerberos descriptor {}\", keytabFileOwnerName, keytabFileGroupName, keytabDescriptor.getName());",
          "1602:               }",
          "1603:             } else {",
          "1604:               throw new AmbariException(\"Missing keytab descriptor for \" + identity.getName());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "523cb1111bec0a5755d419dc9516fc6d604b69e9",
      "candidate_info": {
        "commit_hash": "523cb1111bec0a5755d419dc9516fc6d604b69e9",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/523cb1111bec0a5755d419dc9516fc6d604b69e9",
        "files": [
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/configuration/ams-grafana-ini.xml",
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2"
        ],
        "message": "AMBARI-25379 Upgrade AMS Grafana version to 6.3.5\n\nCherry picked: BUG-114430 : Backport newer version of AMS Grafana from Ambari-2.8.0 to Ambari-2.6.2\n\nChange-Id: Icc8dfd459abfafb1b24b895e4763ab5c5fbb048c",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2||ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2 -> ambari-server/src/main/resources/common-services/AMBARI_METRICS/0.1.0/package/templates/metrics_grafana_datasource.json.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: {",
          "20:   \"name\": \"{{ams_datasource_name}}\",",
          "22:   \"access\": \"proxy\",",
          "23:   \"url\": \"{{metric_collector_protocol}}://{{ams_datasource_host}}:{{metric_collector_port}}\",",
          "24:   \"password\": \"\",",
          "",
          "[Removed Lines]",
          "21:   \"type\": \"ambarimetrics\",",
          "",
          "[Added Lines]",
          "21:   \"type\": \"ambari-metrics\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d0406193db4d2f5c1716d49efe9671584e2a461",
      "candidate_info": {
        "commit_hash": "5d0406193db4d2f5c1716d49efe9671584e2a461",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/5d0406193db4d2f5c1716d49efe9671584e2a461",
        "files": [
          "ambari-web/app/routes/main.js"
        ],
        "message": "AMBARI-24885 Ambari Files view not working when User doesnt have access to any group and just have access to Filesview",
        "before_after_code_files": [
          "ambari-web/app/routes/main.js||ambari-web/app/routes/main.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/routes/main.js||ambari-web/app/routes/main.js": [
          "File: ambari-web/app/routes/main.js -> ambari-web/app/routes/main.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:                     });",
          "52:                   } else {",
          "55:                       App.router.transitionTo('main.views.index');",
          "56:                     }",
          "57:                     clusterController.set('isLoaded', true); // hide loading bar",
          "",
          "[Removed Lines]",
          "54:                     if (App.router.currentState.name !== 'viewDetails') {",
          "",
          "[Added Lines]",
          "54:                     if (App.router.currentState.name !== 'viewDetails' && App.router.currentState.name !== 'shortViewDetails') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca79b6d2c634db2eb392af66ad8e2e767497eea7",
      "candidate_info": {
        "commit_hash": "ca79b6d2c634db2eb392af66ad8e2e767497eea7",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/ca79b6d2c634db2eb392af66ad8e2e767497eea7",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ],
        "message": "[AMBARI-25088] Enable Kerberos fails when Ambari server is not on a registered host (#2863)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/KerberosHelperImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1769:     } else {",
          "1770:       Collection<String> hosts;",
          "1771:       String ambariServerHostname = StageUtils.getHostName();",
          "1773:       if (hostName == null) {",
          "1774:         Map<String, Host> hostMap = clusters.getHostsForCluster(clusterName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1772:       boolean ambariServerHostnameIsForced = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1783:           extendedHosts.addAll(hosts);",
          "1784:           extendedHosts.add(ambariServerHostname);",
          "1785:           hosts = extendedHosts;",
          "1786:         }",
          "1787:       } else {",
          "1788:         hosts = Collections.singleton(hostName);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1787:           ambariServerHostnameIsForced = true;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1794:         if (kerberosDescriptor != null) {",
          "1795:           Set<String> existingServices = cluster.getServices().keySet();",
          "1800:             Map<String, Map<String, String>> configurations = calculateConfigurations(cluster,",
          "1807:             Map<String, Object> filterContext = new HashMap<>();",
          "",
          "[Removed Lines]",
          "1797:           for (String hostname : hosts) {",
          "1801:               hostname,",
          "1802:               kerberosDescriptor,",
          "1803:               false,",
          "1804:               false);",
          "",
          "[Added Lines]",
          "1799:           for (String host : hosts) {",
          "1803:                 (ambariServerHostnameIsForced && ambariServerHostname.equals(host)) ? null : host,",
          "1804:                 kerberosDescriptor,",
          "1805:                 false,",
          "1806:                 false);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1812:             Map<String, KerberosIdentityDescriptor> hostActiveIdentities = new HashMap<>();",
          "1814:               serviceName, componentName, kerberosDescriptor, filterContext);",
          "1819:               if (createAmbariIdentities(kerberosEnvConfig.getProperties())) {",
          "",
          "[Removed Lines]",
          "1813:             List<KerberosIdentityDescriptor> identities = getActiveIdentities(cluster, hostname,",
          "1816:             if (hostname.equals(ambariServerHostname)) {",
          "",
          "[Added Lines]",
          "1815:             List<KerberosIdentityDescriptor> identities = getActiveIdentities(cluster, host,",
          "1818:             if (host.equals(ambariServerHostname)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1842:                   }",
          "1844:                   if (replaceHostNames) {",
          "1846:                   }",
          "1848:                   String uniqueKey = String.format(\"%s|%s\", principal, (keytabFile == null) ? \"\" : keytabFile);",
          "",
          "[Removed Lines]",
          "1845:                     principal = principal.replace(\"_HOST\", hostname);",
          "",
          "[Added Lines]",
          "1847:                     principal = principal.replace(\"_HOST\", host);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1889:               }",
          "1890:             }",
          "1893:           }",
          "1894:         }",
          "1895:       }",
          "",
          "[Removed Lines]",
          "1892:             activeIdentities.put(hostname, hostActiveIdentities.values());",
          "",
          "[Added Lines]",
          "1894:             activeIdentities.put(host, hostActiveIdentities.values());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01c6ddee4742603921fc7735af25040311b3c27b",
      "candidate_info": {
        "commit_hash": "01c6ddee4742603921fc7735af25040311b3c27b",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/01c6ddee4742603921fc7735af25040311b3c27b",
        "files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ],
        "message": "AMBARI-24526. Status of components does not become RED if their deamon goes down immediately after successful start (aonishuk)",
        "before_after_code_files": [
          "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py||ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py": [
          "File: ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py -> ambari-agent/src/main/python/ambari_agent/CustomServiceOrchestrator.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   CREDENTIAL_STORE_CLASS_PATH_NAME = 'credentialStoreClassPath'",
          "82:   def __init__(self, initializer_module):",
          "83:     self.configuration_builder = initializer_module.configuration_builder",
          "84:     self.host_level_params_cache = initializer_module.host_level_params_cache",
          "85:     self.config = initializer_module.config",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:     self.initializer_module = initializer_module",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:       except NoOptionError:",
          "411:        log_out_files = None",
          "414:         self.commands_for_component_in_progress[cluster_id][command['role']] += 1",
          "415:         incremented_commands_for_component = True",
          "417:       for py_file, current_base_dir in filtered_py_file_list:",
          "418:         log_info_on_failure = command_name not in self.DONT_DEBUG_FAILURES_FOR_COMMANDS",
          "419:         script_params = [command_name, json_path, current_base_dir, tmpstrucoutfile, logger_level, self.exec_tmp_dir,",
          "",
          "[Removed Lines]",
          "413:       if cluster_id != '-1' and cluster_id != 'null':",
          "",
          "[Added Lines]",
          "414:       if cluster_id != '-1' and cluster_id != 'null' and not is_status_command:",
          "418:         # reset status which was reported, so agent re-reports it after command finished",
          "419:         self.initializer_module.component_status_executor.reported_component_status[cluster_id][command['role']]['STATUS'] = None",
          "",
          "---------------"
        ]
      }
    }
  ]
}