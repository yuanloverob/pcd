{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1fa4b90d34ca1677ee84ef9c95b314169a2aa998",
      "candidate_info": {
        "commit_hash": "1fa4b90d34ca1677ee84ef9c95b314169a2aa998",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1fa4b90d34ca1677ee84ef9c95b314169a2aa998",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java"
        ],
        "message": "PDFBOX-5176: skip values which are valid numbers but out of range\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889915 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java||pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSInteger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     public static final COSInteger THREE = get(3);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     protected static final COSInteger OUT_OF_RANGE_MAX = getInvalid(true);",
          "78:     protected static final COSInteger OUT_OF_RANGE_MIN = getInvalid(false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:             if (STATIC[index] == null)",
          "83:             {",
          "85:             }",
          "86:             return STATIC[index];",
          "87:         }",
          "89:     }",
          "91:     private final long value;",
          "99:     {",
          "100:         value = val;",
          "101:     }",
          "",
          "[Removed Lines]",
          "84:                 STATIC[index] = new COSInteger(val);",
          "88:         return new COSInteger(val);",
          "98:     private COSInteger( long val )",
          "",
          "[Added Lines]",
          "94:                 STATIC[index] = new COSInteger(val, true);",
          "98:         return new COSInteger(val, true);",
          "99:     }",
          "101:     private static COSInteger getInvalid(boolean maxValue)",
          "102:     {",
          "103:         return maxValue ? new COSInteger(Long.MAX_VALUE, false)",
          "104:                 : new COSInteger(Long.MIN_VALUE, false);",
          "108:     private final boolean isValid;",
          "115:     private COSInteger(long val, boolean valid)",
          "118:         isValid = valid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "176:         return value;",
          "177:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:     public boolean isValid()",
          "203:     {",
          "204:         return isValid;",
          "205:     }",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSNumber.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:             {",
          "119:                 throw new IOException(\"Not a number: \" + number);",
          "120:             }",
          "122:         }",
          "123:     }",
          "",
          "[Removed Lines]",
          "121:             return null;",
          "",
          "[Added Lines]",
          "122:             return number.startsWith(\"-\") ? COSInteger.OUT_OF_RANGE_MIN",
          "123:                     : COSInteger.OUT_OF_RANGE_MAX;",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/BaseParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "292:             LOG.warn(\"Bad dictionary declaration at offset \" + seqSource.getPosition());",
          "293:             return false;",
          "294:         }",
          "295:         else",
          "296:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:         else if (value instanceof COSInteger && !((COSInteger)value).isValid())",
          "296:         {",
          "297:             LOG.warn(\"Skipped out of range number value at offset \" + seqSource.getPosition());",
          "298:         }",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java||pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java -> pdfbox/src/test/java/org/apache/pdfbox/cos/TestCOSNumber.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     }",
          "96:     public void testLargeNumber() throws IOException",
          "97:     {",
          "100:     }",
          "102:     public void testInvalidNumber()",
          "",
          "[Removed Lines]",
          "98:         assertNull(COSNumber.get(\"18446744073307448448\"));",
          "99:         assertNull(COSNumber.get(\"-18446744073307448448\"));",
          "",
          "[Added Lines]",
          "99:         COSNumber cosNumber = COSNumber.get(Long.toString(Long.MAX_VALUE));",
          "100:         assertTrue(cosNumber instanceof COSInteger);",
          "101:         COSInteger cosInteger = (COSInteger) cosNumber;",
          "102:         assertTrue(cosInteger.isValid());",
          "104:         cosNumber = COSNumber.get(Long.toString(Long.MIN_VALUE));",
          "105:         assertTrue(cosNumber instanceof COSInteger);",
          "106:         cosInteger = (COSInteger) cosNumber;",
          "107:         assertTrue(cosInteger.isValid());",
          "110:         cosNumber = COSNumber.get(\"18446744073307448448\");",
          "111:         assertTrue(cosNumber instanceof COSInteger);",
          "112:         cosInteger = (COSInteger) cosNumber;",
          "113:         assertFalse(cosInteger.isValid());",
          "115:         cosNumber = COSNumber.get(\"-18446744073307448448\");",
          "116:         assertTrue(cosNumber instanceof COSInteger);",
          "117:         cosInteger = (COSInteger) cosNumber;",
          "118:         assertFalse(cosInteger.isValid());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1108dc1d4d4facee7d5db0e19e865fe0cdbacdef",
      "candidate_info": {
        "commit_hash": "1108dc1d4d4facee7d5db0e19e865fe0cdbacdef",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1108dc1d4d4facee7d5db0e19e865fe0cdbacdef",
        "files": [
          "fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892507 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java||fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java||fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java": [
          "File: fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java -> fontbox/src/test/java/org/apache/fontbox/ttf/TTFSubsetterTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:         File simhei = null;",
          "135:         for (URI uri : files)",
          "136:         {",
          "138:             {",
          "139:                 simhei = new File(uri);",
          "140:             }",
          "141:         }",
          "142:         Assume.assumeTrue(\"SimHei font not available on this machine, test skipped\", simhei != null);",
          "",
          "[Removed Lines]",
          "137:             if (uri.getPath() != null && uri.getPath().toLowerCase(Locale.US).endsWith(\"simhei.ttf\"))",
          "",
          "[Added Lines]",
          "137:             String path = uri.getPath();",
          "138:             if (path != null && path.toLowerCase(Locale.US).endsWith(\"simhei.ttf\"))",
          "141:                 break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05e6e991b0914cd1448ee159a1bb21a0992ba422",
      "candidate_info": {
        "commit_hash": "05e6e991b0914cd1448ee159a1bb21a0992ba422",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/05e6e991b0914cd1448ee159a1bb21a0992ba422",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java"
        ],
        "message": "PDFBOX-5056: remove unused imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884900 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.pdfbox.pdmodel.graphics.color;",
          "20: import java.awt.image.BufferedImage;",
          "21: import java.awt.image.WritableRaster;",
          "22: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "19: import java.awt.color.ColorSpace;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c24444360da92bb53f1c1157bcbb35d7aaf2ece",
      "candidate_info": {
        "commit_hash": "4c24444360da92bb53f1c1157bcbb35d7aaf2ece",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/4c24444360da92bb53f1c1157bcbb35d7aaf2ece",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java"
        ],
        "message": "PDFBOX-4892: optimize / simplify, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890909 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         COSNumber y = (COSNumber) base1;",
          "54:         List<COSBase> args = new ArrayList<COSBase>();",
          "56:         context.processOperator(OperatorName.SET_TEXT_LEADING, args);",
          "57:         context.processOperator(OperatorName.MOVE_TEXT, arguments);",
          "58:     }",
          "",
          "[Removed Lines]",
          "55:         args.add(new COSFloat(-1 * y.floatValue()));",
          "",
          "[Added Lines]",
          "55:         args.add(new COSFloat(-y.floatValue()));",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:         args.add(new COSFloat(0f));",
          "46:         context.processOperator(OperatorName.MOVE_TEXT, args);",
          "47:     }",
          "",
          "[Removed Lines]",
          "44:         args.add(new COSFloat(-1 * context.getGraphicsState().getTextState().getLeading()));",
          "",
          "[Added Lines]",
          "44:         args.add(new COSFloat(-context.getGraphicsState().getTextState().getLeading()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0cb382f6b23f469ec8f6ceedfe904f99a666dd1",
      "candidate_info": {
        "commit_hash": "e0cb382f6b23f469ec8f6ceedfe904f99a666dd1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e0cb382f6b23f469ec8f6ceedfe904f99a666dd1",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java"
        ],
        "message": "PDFBOX-5240: expect a COSName only\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891614 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java||preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java -> preflight/src/main/java/org/apache/pdfbox/preflight/xobject/AbstractXObjValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     protected void checkSMask()",
          "72:     {",
          "77:         {",
          "78:             context.addValidationError(new ValidationError(ERROR_GRAPHIC_TRANSPARENCY_SMASK,",
          "79:                     \"Soft Mask must be null or None [\"+xobject.toString()+\"]\"));",
          "",
          "[Removed Lines]",
          "73:         COSBase smask = xobject.getItem(COSName.SMASK);",
          "74:         if (smask != null",
          "75:                 && !(COSUtils.isString(smask, cosDocument) && TRANSPARENCY_DICTIONARY_VALUE_SOFT_MASK_NONE",
          "76:                         .equals(COSUtils.getAsString(smask, cosDocument))))",
          "",
          "[Added Lines]",
          "73:         COSBase smask = xobject.getDictionaryObject(COSName.SMASK);",
          "74:         if (smask != null && !COSName.NONE.equals(smask))",
          "",
          "---------------"
        ]
      }
    }
  ]
}