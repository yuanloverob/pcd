{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "38a1b4f203c706a3b374d343270ba9202cc17d93",
      "candidate_info": {
        "commit_hash": "38a1b4f203c706a3b374d343270ba9202cc17d93",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/38a1b4f203c706a3b374d343270ba9202cc17d93",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2018121400.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20181214)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2018122000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20181220)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6735197cc2ec37f42da45a37abad41af835a2c82",
      "candidate_info": {
        "commit_hash": "6735197cc2ec37f42da45a37abad41af835a2c82",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6735197cc2ec37f42da45a37abad41af835a2c82",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.8dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '38';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019091300.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190913)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019092000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.8dev (Build: 20190920)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c1115ba0bd0fb1823455fe6e0b5c078f765179d",
      "candidate_info": {
        "commit_hash": "5c1115ba0bd0fb1823455fe6e0b5c078f765179d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5c1115ba0bd0fb1823455fe6e0b5c078f765179d",
        "files": [
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-66551 core_user: remove orphaned calendar subscriptions",
        "before_after_code_files": [
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3390:         upgrade_main_savepoint(true, 2019052001.04);",
          "3391:     }",
          "3393:     return true;",
          "3394: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3393:     if ($oldversion < 2019052001.11) {",
          "3395:         $sql = \"SELECT DISTINCT es.userid",
          "3396:                   FROM {event_subscriptions} es",
          "3397:              LEFT JOIN {user} u ON u.id = es.userid",
          "3398:                  WHERE u.deleted = 1 OR u.id IS NULL\";",
          "3399:         $deletedusers = $DB->get_field_sql($sql);",
          "3400:         if ($deletedusers) {",
          "3401:             list($sql, $params) = $DB->get_in_or_equal($deletedusers);",
          "3404:             $DB->execute(\"DELETE FROM {event_subscriptions} WHERE userid \" . $sql, $params);",
          "3405:         }",
          "3407:         upgrade_main_savepoint(true, 2019052001.11);",
          "3408:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052001.10;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "",
          "[Added Lines]",
          "32: $version  = 2019052001.11;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "525cee739dbe6fa8f9558038e7642d0a21500405",
      "candidate_info": {
        "commit_hash": "525cee739dbe6fa8f9558038e7642d0a21500405",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/525cee739dbe6fa8f9558038e7642d0a21500405",
        "files": [
          "lang/en/moodle.php",
          "lib/classes/analytics/target/course_competencies.php",
          "lib/tests/targets_test.php",
          "version.php"
        ],
        "message": "MDL-64693 analytics: new course_competencies target\n\nAdded new target to predict which students are at risk of not achieving the\ncompetencies assigned to a course.",
        "before_after_code_files": [
          "lang/en/moodle.php||lang/en/moodle.php",
          "lib/classes/analytics/target/course_competencies.php||lib/classes/analytics/target/course_competencies.php",
          "lib/tests/targets_test.php||lib/tests/targets_test.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/moodle.php||lang/en/moodle.php": [
          "File: lang/en/moodle.php -> lang/en/moodle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1972: $string['tags'] = 'Tags';",
          "1973: $string['target:coursecompletion'] = 'Students at risk of not meeting the course completion conditions';",
          "1974: $string['target:coursecompletion_help'] = 'This target describes whether the student is considered at risk of not meeting the course completion conditions.';",
          "1975: $string['target:coursedropout'] = 'Students at risk of dropping out';",
          "1976: $string['target:coursedropout_help'] = 'This target describes whether the student is considered at risk of dropping out.';",
          "1977: $string['target:noteachingactivity'] = 'No teaching';",
          "1978: $string['target:noteachingactivity_help'] = 'This target describes whether courses due to start in the coming week will have teaching activity.';",
          "1979: $string['targetlabelstudentcompletionno'] = 'Student who is likely to meet the course completion conditions';",
          "1980: $string['targetlabelstudentcompletionyes'] = 'Student at risk of not meeting the course completion conditions';",
          "1981: $string['targetlabelstudentdropoutyes'] = 'Student at risk of dropping out';",
          "1982: $string['targetlabelstudentdropoutno'] = 'Not at risk';",
          "1983: $string['targetlabelteachingyes'] = 'Users with teaching capabilities have access to the course';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1975: $string['target:coursecompetencies'] = 'Students at risk of not achieving the competencies assigned to a course';",
          "1976: $string['target:coursecompetencies_help'] = 'This target describes whether a student is at risk of not achieving the competencies assigned to a course. This target considers that all competencies assigned to the course must be achieved by the end of the course.';",
          "1983: $string['targetlabelstudentcompetenciesno'] = 'Student who is likely to achieve the competencies assigned to a course';",
          "1984: $string['targetlabelstudentcompetenciesyes'] = 'Student at risk of not achieving the competencies assigned to a course';",
          "",
          "---------------"
        ],
        "lib/classes/analytics/target/course_competencies.php||lib/classes/analytics/target/course_competencies.php": [
          "File: lib/classes/analytics/target/course_competencies.php -> lib/classes/analytics/target/course_competencies.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace core\\analytics\\target;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "36: class course_competencies extends \\core\\analytics\\target\\course_enrolments {",
          "42:     protected $coursecompetencies = array();",
          "52:     protected function get_num_competencies_in_course ($courseid) {",
          "54:         if (!isset($this->coursecompetencies[$courseid])) {",
          "55:             $ccs = \\core_competency\\api::count_competencies_in_course($courseid);",
          "57:             $this->coursecompetencies[$courseid] = $ccs;",
          "58:         } else {",
          "59:             $ccs = $this->coursecompetencies[$courseid];",
          "60:         }",
          "61:         return $ccs;",
          "62:     }",
          "71:     public static function get_name() : \\lang_string {",
          "72:         return new \\lang_string('target:coursecompetencies');",
          "73:     }",
          "80:     protected static function classes_description() {",
          "81:         return array(",
          "82:             get_string('targetlabelstudentcompetenciesno'),",
          "83:             get_string('targetlabelstudentcompetenciesyes'),",
          "84:         );",
          "85:     }",
          "94:     public function is_valid_analysable(\\core_analytics\\analysable $course, $fortraining = true) {",
          "95:         $isvalid = parent::is_valid_analysable($course, $fortraining);",
          "97:         if (is_string($isvalid)) {",
          "98:             return $isvalid;",
          "99:         }",
          "101:         $ccs = $this->get_num_competencies_in_course($course->get_id());",
          "103:         if (!$ccs) {",
          "104:             return get_string('nocompetenciesincourse', 'tool_lp');",
          "105:         }",
          "107:         return true;",
          "108:     }",
          "119:     protected function calculate_sample($sampleid, \\core_analytics\\analysable $course, $starttime = false, $endtime = false) {",
          "121:         $userenrol = $this->retrieve('user_enrolments', $sampleid);",
          "123:         $key = $course->get_id();",
          "125:         $ccs = $this->get_num_competencies_in_course($key);",
          "127:         $ucs = \\core_competency\\api::count_proficient_competencies_in_course_for_user($key, $userenrol->userid);",
          "130:         if ($ccs == $ucs) {",
          "131:             return 0;",
          "132:         }",
          "134:         return 1;",
          "135:     }",
          "136: }",
          "",
          "---------------"
        ],
        "lib/tests/targets_test.php||lib/tests/targets_test.php": [
          "File: lib/tests/targets_test.php -> lib/tests/targets_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "253:         $this->assertEquals($isvalid, $target->is_valid_sample($sampleid, $analysable));",
          "254:     }",
          "255: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:     protected function setup_competencies_environment() {",
          "260:         $this->resetAfterTest(true);",
          "261:         $now = time();",
          "262:         $this->setAdminUser();",
          "263:         $dg = $this->getDataGenerator();",
          "264:         $lpg = $dg->get_plugin_generator('core_competency');",
          "266:         $course = $dg->create_course(array('startdate' => $now - WEEKSECS, 'enddate' => $now - DAYSECS));",
          "267:         $coursenocompetencies = $dg->create_course(array('startdate' => $now - WEEKSECS, 'enddate' => $now - DAYSECS));",
          "269:         $u1 = $dg->create_user();",
          "270:         $this->getDataGenerator()->enrol_user($u1->id, $course->id);",
          "271:         $this->getDataGenerator()->enrol_user($u1->id, $coursenocompetencies->id);",
          "272:         $f1 = $lpg->create_framework();",
          "273:         $c1 = $lpg->create_competency(array('competencyframeworkid' => $f1->get('id')));",
          "274:         $c2 = $lpg->create_competency(array('competencyframeworkid' => $f1->get('id')));",
          "275:         $c3 = $lpg->create_competency(array('competencyframeworkid' => $f1->get('id')));",
          "276:         $c4 = $lpg->create_competency(array('competencyframeworkid' => $f1->get('id')));",
          "277:         $cc1 = $lpg->create_course_competency(array('competencyid' => $c1->get('id'), 'courseid' => $course->id,",
          "278:             'ruleoutcome' => \\core_competency\\course_competency::OUTCOME_NONE));",
          "279:         $cc2 = $lpg->create_course_competency(array('competencyid' => $c2->get('id'), 'courseid' => $course->id,",
          "280:             'ruleoutcome' => \\core_competency\\course_competency::OUTCOME_EVIDENCE));",
          "281:         $cc3 = $lpg->create_course_competency(array('competencyid' => $c3->get('id'), 'courseid' => $course->id,",
          "282:             'ruleoutcome' => \\core_competency\\course_competency::OUTCOME_RECOMMEND));",
          "283:         $cc4 = $lpg->create_course_competency(array('competencyid' => $c4->get('id'), 'courseid' => $course->id,",
          "284:             'ruleoutcome' => \\core_competency\\course_competency::OUTCOME_COMPLETE));",
          "286:         return array(",
          "287:             'course' => $course,",
          "288:             'coursenocompetencies' => $coursenocompetencies,",
          "289:             'user' => $u1,",
          "290:             'course_competencies' => array($cc1, $cc2, $cc3, $cc4)",
          "291:         );",
          "292:     }",
          "297:     public function test_core_target_course_competencies_analysable() {",
          "299:         $data = $this->setup_competencies_environment();",
          "301:         $analysable = new \\core_analytics\\course($data['course']);",
          "302:         $target = new \\core\\analytics\\target\\course_competencies();",
          "304:         $this->assertTrue($target->is_valid_analysable($analysable));",
          "306:         $analysable = new \\core_analytics\\course($data['coursenocompetencies']);",
          "307:         $this->assertEquals(get_string('nocompetenciesincourse', 'tool_lp'), $target->is_valid_analysable($analysable));",
          "308:     }",
          "313:     public function test_core_target_course_competencies_calculate() {",
          "315:         $data = $this->setup_competencies_environment();",
          "317:         $target = new \\core\\analytics\\target\\course_competencies();",
          "318:         $analyser = new \\core\\analytics\\analyser\\student_enrolments(1, $target, [], [], []);",
          "319:         $analysable = new \\core_analytics\\course($data['course']);",
          "321:         $class = new ReflectionClass('\\core\\analytics\\analyser\\student_enrolments');",
          "322:         $method = $class->getMethod('get_all_samples');",
          "323:         $method->setAccessible(true);",
          "325:         list($sampleids, $samplesdata) = $method->invoke($analyser, $analysable);",
          "326:         $target->add_sample_data($samplesdata);",
          "327:         $sampleid = reset($sampleids);",
          "329:         $class = new ReflectionClass('\\core\\analytics\\target\\course_competencies');",
          "330:         $method = $class->getMethod('calculate_sample');",
          "331:         $method->setAccessible(true);",
          "334:         $this->assertEquals(1, $method->invoke($target, $sampleid, $analysable));",
          "337:         foreach ($data['course_competencies'] as $competency) {",
          "338:             \\core_competency\\api::grade_competency_in_course($data['course']->id, $data['user']->id,",
          "339:                     $competency->get('competencyid'), 3, 'Unit test');",
          "340:         }",
          "342:         $this->assertEquals(0, $method->invoke($target, $sampleid, $analysable));",
          "343:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019040200.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019040200.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34cd75240ec0b188f3032f66dabb730d95ba43c8",
      "candidate_info": {
        "commit_hash": "34cd75240ec0b188f3032f66dabb730d95ba43c8",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/34cd75240ec0b188f3032f66dabb730d95ba43c8",
        "files": [
          "lang/en/role.php",
          "lib/db/access.php",
          "version.php"
        ],
        "message": "MDL-61444 question: add question tagmine and tagall capabilities",
        "before_after_code_files": [
          "lang/en/role.php||lang/en/role.php",
          "lib/db/access.php||lib/db/access.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ],
          "candidate": [
            "lib/db/access.php||lib/db/access.php",
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lang/en/role.php||lang/en/role.php": [
          "File: lang/en/role.php -> lang/en/role.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "343: $string['question:usemine'] = 'Use your own questions';",
          "344: $string['question:viewall'] = 'View all questions';",
          "345: $string['question:viewmine'] = 'View your own questions';",
          "346: $string['rating:rate'] = 'Add ratings to items';",
          "347: $string['rating:view'] = 'View the total rating you received';",
          "348: $string['rating:viewany'] = 'View total ratings that anyone received';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346: $string['question:tagall'] = 'Tag all questions';",
          "347: $string['question:tagmine'] = 'Tag your own questions';",
          "",
          "---------------"
        ],
        "lib/db/access.php||lib/db/access.php": [
          "File: lib/db/access.php -> lib/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1483:         )",
          "1484:     ),",
          "1486:     'moodle/site:doclinks' => array(",
          "1487:         'captype' => 'read',",
          "1488:         'contextlevel' => CONTEXT_SYSTEM,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1487:     'moodle/question:tagmine' => array(",
          "1488:         'captype' => 'write',",
          "1489:         'contextlevel' => CONTEXT_COURSE,",
          "1490:         'archetypes' => array(",
          "1491:             'editingteacher' => CAP_ALLOW,",
          "1492:             'manager' => CAP_ALLOW",
          "1493:         ),",
          "1494:         'clonepermissionsfrom' => 'moodle/question:editmine'",
          "1495:     ),",
          "1498:     'moodle/question:tagall' => array(",
          "1499:         'captype' => 'write',",
          "1500:         'contextlevel' => CONTEXT_COURSE,",
          "1501:         'archetypes' => array(",
          "1502:             'editingteacher' => CAP_ALLOW,",
          "1503:             'manager' => CAP_ALLOW",
          "1504:         ),",
          "1505:         'clonepermissionsfrom' => 'moodle/question:editall'",
          "1506:     ),",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018021600.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018021600.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    }
  ]
}