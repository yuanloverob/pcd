{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f98c40a27eb5b514faac8d210882f6fc832511e8",
      "candidate_info": {
        "commit_hash": "f98c40a27eb5b514faac8d210882f6fc832511e8",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/f98c40a27eb5b514faac8d210882f6fc832511e8",
        "files": [
          ".changelog/24820.txt",
          "command/agent/command.go",
          "command/agent/syslog.go",
          "command/agent/syslog_test.go"
        ],
        "message": "agent: Fixed a bug where syslog error messages marked as notice (#24864)\n\nbackport of commit 8d201a82fd937e21af81e90484ae0f0042455cb9\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "command/agent/command.go||command/agent/command.go",
          "command/agent/syslog.go||command/agent/syslog.go",
          "command/agent/syslog_test.go||command/agent/syslog_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "command/agent/command.go||command/agent/command.go": [
          "File: command/agent/command.go -> command/agent/command.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "573:  writers := []io.Writer{logFilter}",
          "574:  logLevel := strings.ToUpper(config.LogLevel)",
          "582:  if logLevel == \"OFF\" {",
          "583:   config.EnableSyslog = false",
          "584:  }",
          "586:  if config.EnableSyslog {",
          "587:   ui.Output(fmt.Sprintf(\"Config enable_syslog is `true` with log_level=%v\", config.LogLevel))",
          "589:   if err != nil {",
          "590:    ui.Error(fmt.Sprintf(\"Syslog setup failed: %v\", err))",
          "591:    return nil, nil, nil",
          "",
          "[Removed Lines]",
          "575:  logLevelMap := map[string]gsyslog.Priority{",
          "576:   \"ERROR\": gsyslog.LOG_ERR,",
          "577:   \"WARN\":  gsyslog.LOG_WARNING,",
          "578:   \"INFO\":  gsyslog.LOG_INFO,",
          "579:   \"DEBUG\": gsyslog.LOG_DEBUG,",
          "580:   \"TRACE\": gsyslog.LOG_DEBUG,",
          "581:  }",
          "588:   l, err := gsyslog.NewLogger(logLevelMap[logLevel], config.SyslogFacility, \"nomad\")",
          "",
          "[Added Lines]",
          "581:   l, err := gsyslog.NewLogger(getSysLogPriority(logLevel), config.SyslogFacility, \"nomad\")",
          "",
          "---------------"
        ],
        "command/agent/syslog.go||command/agent/syslog.go": [
          "File: command/agent/syslog.go -> command/agent/syslog.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/hashicorp/logutils\"",
          "11: )",
          "15: var levelPriority = map[string]gsyslog.Priority{",
          "16:  \"TRACE\": gsyslog.LOG_DEBUG,",
          "17:  \"DEBUG\": gsyslog.LOG_INFO,",
          "18:  \"INFO\":  gsyslog.LOG_NOTICE,",
          "19:  \"WARN\":  gsyslog.LOG_WARNING,",
          "22: }",
          "",
          "[Removed Lines]",
          "20:  \"ERR\":   gsyslog.LOG_ERR,",
          "21:  \"CRIT\":  gsyslog.LOG_CRIT,",
          "",
          "[Added Lines]",
          "21:  \"ERROR\": gsyslog.LOG_ERR,",
          "22: }",
          "27: func getSysLogPriority(level string) gsyslog.Priority {",
          "28:  priority, ok := levelPriority[level]",
          "29:  if !ok {",
          "30:   priority = gsyslog.LOG_NOTICE",
          "31:  }",
          "32:  return priority",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:   }",
          "49:  }",
          "59:  return len(p), err",
          "60: }",
          "",
          "[Removed Lines]",
          "52:  priority, ok := levelPriority[level]",
          "53:  if !ok {",
          "54:   priority = gsyslog.LOG_NOTICE",
          "55:  }",
          "58:  err := s.l.WriteLevel(priority, afterLevel)",
          "",
          "[Added Lines]",
          "63:  err := s.l.WriteLevel(getSysLogPriority(level), afterLevel)",
          "",
          "---------------"
        ],
        "command/agent/syslog_test.go||command/agent/syslog_test.go": [
          "File: command/agent/syslog_test.go -> command/agent/syslog_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: package agent",
          "6: import (",
          "8:  \"runtime\"",
          "9:  \"testing\"",
          "11:  gsyslog \"github.com/hashicorp/go-syslog\"",
          "13:  \"github.com/hashicorp/nomad/ci\"",
          "14: )",
          "17:  ci.Parallel(t)",
          "18:  if runtime.GOOS == \"windows\" {",
          "19:   t.Skip(\"Syslog not supported on Windows\")",
          "20:  }",
          "23:  }",
          "28:  }",
          "30:  filt := LevelFilter()",
          "33:  s := &SyslogWrapper{l, filt}",
          "34:  n, err := s.Write([]byte(\"[INFO] test\"))",
          "35:  if err != nil {",
          "36:   t.Fatalf(\"err: %s\", err)",
          "37:  }",
          "42:  n, err = s.Write([]byte(\"[DEBUG] test\"))",
          "49: }",
          "",
          "[Removed Lines]",
          "7:  \"os\"",
          "12:  \"github.com/hashicorp/logutils\"",
          "16: func TestSyslogFilter(t *testing.T) {",
          "21:  if os.Getenv(\"TRAVIS\") == \"true\" {",
          "22:   t.Skip(\"Syslog not supported on travis-ci\")",
          "25:  l, err := gsyslog.NewLogger(gsyslog.LOG_NOTICE, \"LOCAL0\", \"consul\")",
          "26:  if err != nil {",
          "27:   t.Fatalf(\"err: %s\", err)",
          "31:  filt.MinLevel = logutils.LogLevel(\"INFO\")",
          "38:  if n == 0 {",
          "39:   t.Fatalf(\"should have logged\")",
          "40:  }",
          "43:  if err != nil {",
          "44:   t.Fatalf(\"err: %s\", err)",
          "45:  }",
          "46:  if n != 0 {",
          "47:   t.Fatalf(\"should not have logged\")",
          "48:  }",
          "",
          "[Added Lines]",
          "12:  \"github.com/shoenig/test/must\"",
          "15: func Test_getSysLogPriority(t *testing.T) {",
          "22:  testCases := []struct {",
          "23:   name                   string",
          "24:   inputLogLevel          string",
          "25:   expectedSyslogPriority gsyslog.Priority",
          "26:  }{",
          "27:   {",
          "28:    name:                   \"trace\",",
          "29:    inputLogLevel:          \"TRACE\",",
          "30:    expectedSyslogPriority: gsyslog.LOG_DEBUG,",
          "31:   },",
          "32:   {",
          "33:    name:                   \"debug\",",
          "34:    inputLogLevel:          \"DEBUG\",",
          "35:    expectedSyslogPriority: gsyslog.LOG_INFO,",
          "36:   },",
          "37:   {",
          "38:    name:                   \"info\",",
          "39:    inputLogLevel:          \"INFO\",",
          "40:    expectedSyslogPriority: gsyslog.LOG_NOTICE,",
          "41:   },",
          "42:   {",
          "43:    name:                   \"warn\",",
          "44:    inputLogLevel:          \"WARN\",",
          "45:    expectedSyslogPriority: gsyslog.LOG_WARNING,",
          "46:   },",
          "47:   {",
          "48:    name:                   \"error\",",
          "49:    inputLogLevel:          \"ERROR\",",
          "50:    expectedSyslogPriority: gsyslog.LOG_ERR,",
          "51:   },",
          "52:   {",
          "53:    name:                   \"unknown\",",
          "54:    inputLogLevel:          \"UNKNOWN\",",
          "55:    expectedSyslogPriority: gsyslog.LOG_NOTICE,",
          "56:   },",
          "59:  for _, tc := range testCases {",
          "60:   t.Run(tc.name, func(t *testing.T) {",
          "61:    actualPriority := getSysLogPriority(tc.inputLogLevel)",
          "62:    must.Eq(t, tc.expectedSyslogPriority, actualPriority)",
          "63:   })",
          "64:  }",
          "65: }",
          "67: func TestSyslogFilter(t *testing.T) {",
          "68:  ci.Parallel(t)",
          "69:  if runtime.GOOS == \"windows\" {",
          "70:   t.Skip(\"Syslog not supported on Windows\")",
          "73:  l, err := gsyslog.NewLogger(gsyslog.LOG_NOTICE, \"LOCAL0\", \"nomad\")",
          "74:  must.NoError(t, err)",
          "77:  filt.MinLevel = \"INFO\"",
          "84:  must.NonZero(t, n)",
          "87:  must.NoError(t, err)",
          "88:  must.Zero(t, n)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e1a880d5281530a2d9591a9429f9ebc62ba56fd2",
      "candidate_info": {
        "commit_hash": "e1a880d5281530a2d9591a9429f9ebc62ba56fd2",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/e1a880d5281530a2d9591a9429f9ebc62ba56fd2",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Backport of chore(deps): bump github.com/shoenig/test from 1.11.0 to 1.12.0 into release/1.9.x (#24633)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:  github.com/shirou/gopsutil/v3 v3.24.5",
          "123:  github.com/shoenig/go-landlock v1.2.2",
          "124:  github.com/shoenig/go-m1cpu v0.1.6",
          "126:  github.com/stretchr/testify v1.10.0",
          "127:  github.com/zclconf/go-cty v1.13.0",
          "128:  github.com/zclconf/go-cty-yaml v1.1.0",
          "",
          "[Removed Lines]",
          "125:  github.com/shoenig/test v1.11.0",
          "",
          "[Added Lines]",
          "125:  github.com/shoenig/test v1.12.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1022: github.com/shoenig/go-landlock v1.2.2/go.mod h1:MLSBZBAUvZh/4flRg+LysngJvz/0OdtpWTEAWuJViSY=",
          "1023: github.com/shoenig/go-m1cpu v0.1.6 h1:nxdKQNcEB6vzgA2E2bvzKIYRuNj7XNJ4S/aRSwKzFtM=",
          "1024: github.com/shoenig/go-m1cpu v0.1.6/go.mod h1:1JJMcUBvfNwpq05QDQVAnx3gUHr9IYF7GNg9SUEw2VQ=",
          "1027: github.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=",
          "1028: github.com/shopspring/decimal v1.3.1 h1:2Usl1nmF/WZucqkFZhnfFYxxxu8LG21F6nPQBE5gKV8=",
          "1029: github.com/shopspring/decimal v1.3.1/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=",
          "",
          "[Removed Lines]",
          "1025: github.com/shoenig/test v1.11.0 h1:NoPa5GIoBwuqzIviCrnUJa+t5Xb4xi5Z+zODJnIDsEQ=",
          "1026: github.com/shoenig/test v1.11.0/go.mod h1:UxJ6u/x2v/TNs/LoLxBNJRV9DiwBBKYxXSyczsBHFoI=",
          "",
          "[Added Lines]",
          "1025: github.com/shoenig/test v1.12.0 h1:5gu0WaxkayLUad6B/VCnBWMi5VR7oVYCw/d34SU1ed0=",
          "1026: github.com/shoenig/test v1.12.0/go.mod h1:UxJ6u/x2v/TNs/LoLxBNJRV9DiwBBKYxXSyczsBHFoI=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9009f125521037a75f0ea600fcca995cb8dea7ff",
      "candidate_info": {
        "commit_hash": "9009f125521037a75f0ea600fcca995cb8dea7ff",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/9009f125521037a75f0ea600fcca995cb8dea7ff",
        "files": [
          ".release/versions.hcl"
        ],
        "message": "build: update versions file for backports (#24174)",
        "before_after_code_files": [
          ".release/versions.hcl||.release/versions.hcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        ".release/versions.hcl||.release/versions.hcl": [
          "File: .release/versions.hcl -> .release/versions.hcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: schema = 1",
          "8: active_versions {",
          "9:   version \"1.8.x\" {",
          "10:     ce_active = true",
          "11:     lts       = true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:   version \"1.9.x\" {",
          "10:     ce_active = true",
          "11:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   version \"1.7.x\" {",
          "14:     ce_active = true",
          "15:   }",
          "19: }",
          "",
          "[Removed Lines]",
          "16:   version \"1.6.x\" {",
          "17:     ce_active = true",
          "18:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32f276db3d691c6d12c587fd7998c1a184e5796b",
      "candidate_info": {
        "commit_hash": "32f276db3d691c6d12c587fd7998c1a184e5796b",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/32f276db3d691c6d12c587fd7998c1a184e5796b",
        "files": [
          "website/content/tools/autoscaling/plugins/strategy/threshold.mdx"
        ],
        "message": "backport of commit 1065769f1e54e75c197cfa02652bc4004e89da80 (#24735)\n\nCo-authored-by: Aimee Ukasick <aimee.ukasick@hashicorp.com>",
        "before_after_code_files": [
          "website/content/tools/autoscaling/plugins/strategy/threshold.mdx||website/content/tools/autoscaling/plugins/strategy/threshold.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "website/content/tools/autoscaling/plugins/strategy/threshold.mdx||website/content/tools/autoscaling/plugins/strategy/threshold.mdx": [
          "File: website/content/tools/autoscaling/plugins/strategy/threshold.mdx -> website/content/tools/autoscaling/plugins/strategy/threshold.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: ```",
          "59: - `lower_bound` `(float: <optional>)` - The minimum value a metric must have",
          "61:   metric with the exact same value as `lower_bound` is considered within",
          "62:   bounds.",
          "",
          "[Removed Lines]",
          "60:   to be considered with bounds. This value is always **inclusive**, meaning a",
          "",
          "[Added Lines]",
          "60:   to be considered within bounds. This value is always **inclusive**, meaning a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ba9255410ceda9e530cbdb1912465080adf5cf9",
      "candidate_info": {
        "commit_hash": "9ba9255410ceda9e530cbdb1912465080adf5cf9",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/9ba9255410ceda9e530cbdb1912465080adf5cf9",
        "files": [
          "ui/package.json",
          "ui/yarn.lock"
        ],
        "message": "backport of commit e48bfeccd7f416a5698da1c91fec2ed293ada216 (#24689)\n\nCo-authored-by: Phil Renaud <phil.renaud@hashicorp.com>",
        "before_after_code_files": [
          "ui/yarn.lock||ui/yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ui/yarn.lock||ui/yarn.lock": [
          "File: ui/yarn.lock -> ui/yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "5917:     parse-json \"^5.2.0\"",
          "5918:     path-type \"^4.0.0\"",
          "5935:   dependencies:",
          "5936:     path-key \"^3.1.0\"",
          "5937:     shebang-command \"^2.0.0\"",
          "",
          "[Removed Lines]",
          "5920: cross-spawn@^6.0.0, cross-spawn@^6.0.5:",
          "5921:   version \"6.0.5\"",
          "5922:   resolved \"https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-6.0.5.tgz#4a5ec7c64dfae22c3a14124dbacdee846d80cbc4\"",
          "5923:   integrity sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",
          "5924:   dependencies:",
          "5925:     nice-try \"^1.0.4\"",
          "5926:     path-key \"^2.0.1\"",
          "5927:     semver \"^5.5.0\"",
          "5928:     shebang-command \"^1.2.0\"",
          "5929:     which \"^1.2.9\"",
          "5931: cross-spawn@^7.0.0, cross-spawn@^7.0.2, cross-spawn@^7.0.3:",
          "5932:   version \"7.0.3\"",
          "5933:   resolved \"https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.3.tgz#f73a85b9d5d41d045551c177e2882d4ac85728a6\"",
          "5934:   integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
          "",
          "[Added Lines]",
          "5920: cross-spawn@7.0.5, cross-spawn@^6.0.0, cross-spawn@^6.0.5, cross-spawn@^7.0.0, cross-spawn@^7.0.2, cross-spawn@^7.0.3:",
          "5921:   version \"7.0.5\"",
          "5922:   resolved \"https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.5.tgz#910aac880ff5243da96b728bc6521a5f6c2f2f82\"",
          "5923:   integrity sha512-ZVJrKKYunU38/76t0RMOulHOnUcbU9GbpWKAOZ0mhjr7CX6FVrH+4FrAapSOekrgFQ3f/8gwMEuIft0aKq6Hug==",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11284:   resolved \"https://registry.yarnpkg.com/neo-async/-/neo-async-2.6.2.tgz#b4aafb93e3aeb2d8174ca53cf163ab7d7308305f\"",
          "11285:   integrity sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==",
          "11292: nise@^4.0.4:",
          "11293:   version \"4.1.0\"",
          "11294:   resolved \"https://registry.yarnpkg.com/nise/-/nise-4.1.0.tgz#8fb75a26e90b99202fa1e63f448f58efbcdedaf6\"",
          "",
          "[Removed Lines]",
          "11287: nice-try@^1.0.4:",
          "11288:   version \"1.0.5\"",
          "11289:   resolved \"https://registry.yarnpkg.com/nice-try/-/nice-try-1.0.5.tgz#a3378a7696ce7d223e88fc9b764bd7ef1089e366\"",
          "11290:   integrity sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11801:   resolved \"https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f\"",
          "11802:   integrity sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
          "11805:   version \"2.0.1\"",
          "11806:   resolved \"https://registry.yarnpkg.com/path-key/-/path-key-2.0.1.tgz#411cadb574c5a140d3a4b1910d40d80cc9f40b40\"",
          "11807:   integrity sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==",
          "",
          "[Removed Lines]",
          "11804: path-key@^2.0.0, path-key@^2.0.1:",
          "",
          "[Added Lines]",
          "11788: path-key@^2.0.0:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12916:   resolved \"https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.2.0.tgz#66c9a24a73f9fc28cbe66b09fed3d33dcaf1b424\"",
          "12917:   integrity sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
          "12926: shebang-command@^2.0.0:",
          "12927:   version \"2.0.0\"",
          "12928:   resolved \"https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea\"",
          "",
          "[Removed Lines]",
          "12919: shebang-command@^1.2.0:",
          "12920:   version \"1.2.0\"",
          "12921:   resolved \"https://registry.yarnpkg.com/shebang-command/-/shebang-command-1.2.0.tgz#44aac65b695b03398968c39f363fee5deafdf1ea\"",
          "12922:   integrity sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==",
          "12923:   dependencies:",
          "12924:     shebang-regex \"^1.0.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "12930:   dependencies:",
          "12931:     shebang-regex \"^3.0.0\"",
          "12938: shebang-regex@^3.0.0:",
          "12939:   version \"3.0.0\"",
          "12940:   resolved \"https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-3.0.0.tgz#ae16f1644d873ecad843b0307b143362d4c42172\"",
          "",
          "[Removed Lines]",
          "12933: shebang-regex@^1.0.0:",
          "12934:   version \"1.0.0\"",
          "12935:   resolved \"https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-1.0.0.tgz#da42f49740c0b42db2ca9728571cb190c98efea3\"",
          "12936:   integrity sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "14441:     gopd \"^1.0.1\"",
          "14442:     has-tostringtag \"^1.0.2\"",
          "14445:   version \"1.3.1\"",
          "14446:   resolved \"https://registry.yarnpkg.com/which/-/which-1.3.1.tgz#a45043d54f5805316da8d62f9f50918d3da70b0a\"",
          "14447:   integrity sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
          "",
          "[Removed Lines]",
          "14444: which@^1.2.14, which@^1.2.9:",
          "",
          "[Added Lines]",
          "14416: which@^1.2.14:",
          "",
          "---------------"
        ]
      }
    }
  ]
}