{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ae2ecf8547d732f9ba8a0724f6ede25bc5371b4",
      "candidate_info": {
        "commit_hash": "9ae2ecf8547d732f9ba8a0724f6ede25bc5371b4",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9ae2ecf8547d732f9ba8a0724f6ede25bc5371b4",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java"
        ],
        "message": "PDFBOX-5164: add constants for collections\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888829 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSName.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:     public static final COSName CH = new COSName(\"Ch\");",
          "131:     public static final COSName CHAR_PROCS = new COSName(\"CharProcs\");",
          "132:     public static final COSName CHAR_SET = new COSName(\"CharSet\");",
          "133:     public static final COSName CICI_SIGNIT = new COSName(\"CICI.SignIt\");",
          "134:     public static final COSName CID_FONT_TYPE0 = new COSName(\"CIDFontType0\");",
          "135:     public static final COSName CID_FONT_TYPE2 = new COSName(\"CIDFontType2\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133:     public static final COSName CI = new COSName(\"CI\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145:     public static final COSName CO = new COSName(\"CO\");",
          "146:     public static final COSName COLOR = new COSName(\"Color\");",
          "147:     public static final COSName COLLECTION = new COSName(\"Collection\");",
          "148:     public static final COSName COLOR_BURN = new COSName(\"ColorBurn\");",
          "149:     public static final COSName COLOR_DODGE = new COSName(\"ColorDodge\");",
          "150:     public static final COSName COLORANTS = new COSName(\"Colorants\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:     public static final COSName COLLECTION_ITEM = new COSName(\"CollectionItem\");",
          "150:     public static final COSName COLLECTION_FIELD = new COSName(\"CollectionField\");",
          "151:     public static final COSName COLLECTION_SCHEMA = new COSName(\"CollectionSchema\");",
          "152:     public static final COSName COLLECTION_SORT = new COSName(\"CollectionSort\");",
          "153:     public static final COSName COLLECTION_SUBITEM = new COSName(\"CollectionSubitem\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5ddd138158cc05e6138316a979e53f4d7210b1d",
      "candidate_info": {
        "commit_hash": "f5ddd138158cc05e6138316a979e53f4d7210b1d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f5ddd138158cc05e6138316a979e53f4d7210b1d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ],
        "message": "PDFBOX-4892: improve performance, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887887 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:         PDResources acroFormResources = field.getAcroForm().getDefaultResources();",
          "147:                     }",
          "148:                 }",
          "149:             }",
          "150:         }",
          "151:     }",
          "",
          "[Removed Lines]",
          "135:         for (PDAnnotationWidget widget : field.getWidgets()) {",
          "136:             if (widget.getNormalAppearanceStream() != null",
          "137:                     && widget.getNormalAppearanceStream().getResources() != null) {",
          "138:                 PDResources widgetResources = widget.getNormalAppearanceStream().getResources();",
          "139:                 for (COSName fontResourceName : widgetResources.getFontNames()) {",
          "140:                     try {",
          "141:                         if (acroFormResources.getFont(fontResourceName) == null) {",
          "142:                             LOG.debug(\"Adding font resource \" + fontResourceName + \" from widget to AcroForm\");",
          "143:                             acroFormResources.put(fontResourceName, widgetResources.getFont(fontResourceName));",
          "144:                         }",
          "145:                     } catch (IOException e) {",
          "146:                         LOG.warn(\"Unable to match field level font with AcroForm font\");",
          "",
          "[Added Lines]",
          "135:         for (PDAnnotationWidget widget : field.getWidgets())",
          "136:         {",
          "137:             PDAppearanceStream stream = widget.getNormalAppearanceStream();",
          "138:             if (stream == null)",
          "139:             {",
          "140:                 continue;",
          "141:             }",
          "142:             PDResources widgetResources = stream.getResources();",
          "143:             if (widgetResources == null)",
          "144:             {",
          "145:                 continue;",
          "146:             }",
          "147:             for (COSName fontResourceName : widgetResources.getFontNames())",
          "148:             {",
          "149:                 try",
          "150:                 {",
          "151:                     if (acroFormResources.getFont(fontResourceName) == null)",
          "152:                     {",
          "153:                         LOG.debug(\"Adding font resource \" + fontResourceName + \" from widget to AcroForm\");",
          "154:                         acroFormResources.put(fontResourceName, widgetResources.getFont(fontResourceName));",
          "157:                 catch (IOException e)",
          "158:                 {",
          "159:                     LOG.warn(\"Unable to match field level font with AcroForm font\");",
          "160:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8c82be8a973dd5fd539467020f270a6737fa3ef",
      "candidate_info": {
        "commit_hash": "b8c82be8a973dd5fd539467020f270a6737fa3ef",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/b8c82be8a973dd5fd539467020f270a6737fa3ef",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java"
        ],
        "message": "PDFBOX-4985: adjust Javadoc to match new acroFormFixup parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883176 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java"
        ]
      }
    },
    {
      "candidate_hash": "87b18e36125e2b59d010bcc1a881449a51d6e752",
      "candidate_info": {
        "commit_hash": "87b18e36125e2b59d010bcc1a881449a51d6e752",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/87b18e36125e2b59d010bcc1a881449a51d6e752",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java"
        ],
        "message": "PDFBOX-5228: add length constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891061 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDPanose.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: public class PDPanose",
          "29: {",
          "30:     private final byte[] bytes;",
          "32:     public PDPanose(byte[] bytes)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     static public final int LENGTH = 12;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "484e5bc6d6398109d8e46ee8ed2409db91417556",
      "candidate_info": {
        "commit_hash": "484e5bc6d6398109d8e46ee8ed2409db91417556",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/484e5bc6d6398109d8e46ee8ed2409db91417556",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java"
        ],
        "message": "PDFBOX-5157: use signing date from timestamp\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888691 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: import org.bouncycastle.cert.ocsp.BasicOCSPResp;",
          "59: import org.bouncycastle.cert.ocsp.OCSPException;",
          "60: import org.bouncycastle.cert.ocsp.OCSPResp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61: import org.bouncycastle.cms.CMSException;",
          "62: import org.bouncycastle.cms.CMSSignedData;",
          "63: import org.bouncycastle.tsp.TSPException;",
          "64: import org.bouncycastle.tsp.TimeStampToken;",
          "65: import org.bouncycastle.tsp.TimeStampTokenInfo;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "145:             {",
          "146:                 certInfo = certInformationHelper.getLastCertInfo(signature, filename);",
          "147:                 signDate = signature.getSignDate();",
          "148:             }",
          "149:         }",
          "150:         catch (CertificateProccessingException e)",
          "151:         {",
          "152:             throw new IOException(\"An Error occurred processing the Signature\", e);",
          "153:         }",
          "154:         if (certInfo == null)",
          "155:         {",
          "156:             throw new IOException(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:                 if (\"ETSI.RFC3161\".equals(signature.getSubFilter()))",
          "154:                 {",
          "155:                     byte[] contents = signature.getContents();",
          "156:                     TimeStampToken timeStampToken = new TimeStampToken(new CMSSignedData(contents));",
          "157:                     TimeStampTokenInfo timeStampInfo = timeStampToken.getTimeStampInfo();",
          "158:                     signDate = Calendar.getInstance();",
          "159:                     signDate.setTime(timeStampInfo.getGenTime());",
          "160:                 }",
          "167:         catch (CMSException e)",
          "168:         {",
          "169:             throw new IOException(\"An Error occurred processing the Signature\", e);",
          "170:         }",
          "171:         catch (TSPException e)",
          "172:         {",
          "173:             throw new IOException(\"An Error occurred processing the Signature\", e);",
          "174:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}