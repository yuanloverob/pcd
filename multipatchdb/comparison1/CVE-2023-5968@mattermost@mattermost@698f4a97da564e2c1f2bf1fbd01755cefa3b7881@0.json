{
  "cve_id": "CVE-2023-5968",
  "cve_desc": "Mattermost fails to properly sanitize the user object when updating the username, resulting in the password hash being included in the response body.\u00a0\n\n",
  "repo": "mattermost/mattermost",
  "patch_hash": "698f4a97da564e2c1f2bf1fbd01755cefa3b7881",
  "patch_info": {
    "commit_hash": "698f4a97da564e2c1f2bf1fbd01755cefa3b7881",
    "repo": "mattermost/mattermost",
    "commit_url": "https://github.com/mattermost/mattermost/commit/698f4a97da564e2c1f2bf1fbd01755cefa3b7881",
    "files": [
      "server/channels/app/user.go",
      "server/channels/app/user_test.go"
    ],
    "message": "Sanitize user in update user response (#24362) (#24566)\n\nAutomatic Merge",
    "before_after_code_files": [
      "server/channels/app/user.go||server/channels/app/user.go",
      "server/channels/app/user_test.go||server/channels/app/user_test.go"
    ]
  },
  "patch_diff": {
    "server/channels/app/user.go||server/channels/app/user.go": [
      "File: server/channels/app/user.go -> server/channels/app/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1285:   }(user.Id)",
      "1286:  }",
      "1288:  return newUser, nil",
      "1289: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1288:  newUser.Sanitize(map[string]bool{})",
      "",
      "---------------"
    ],
    "server/channels/app/user_test.go||server/channels/app/user_test.go": [
      "File: server/channels/app/user_test.go -> server/channels/app/user_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "205:   require.Nil(t, err)",
      "206:   require.NotNil(t, u)",
      "207:   require.Less(t, u.LastPictureUpdate, iLastPictureUpdate)",
      "208:  })",
      "210:  t.Run(\"fails if profile picture is updated when user has custom profile picture and username is changed\", func(t *testing.T) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "208:   require.Empty(t, u.Password)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1731:  })",
      "1733:  t.Run(\"Patch username with a new username\", func(t *testing.T) {",
      "1735:    Username: model.NewString(model.NewId()),",
      "1736:   }, true)",
      "1738:   require.Nil(t, err)",
      "1739:  })",
      "1740: }",
      "",
      "[Removed Lines]",
      "1734:   _, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
      "",
      "[Added Lines]",
      "1735:   u, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
      "1740:   require.Empty(t, u.Password)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f787fd63368ac43ebb242cb9a967372d7cbe7795",
      "candidate_info": {
        "commit_hash": "f787fd63368ac43ebb242cb9a967372d7cbe7795",
        "repo": "mattermost/mattermost",
        "commit_url": "https://github.com/mattermost/mattermost/commit/f787fd63368ac43ebb242cb9a967372d7cbe7795",
        "files": [
          "server/channels/app/user.go",
          "server/channels/app/user_test.go"
        ],
        "message": "Sanitize user in update user response (#24362)",
        "before_after_code_files": [
          "server/channels/app/user.go||server/channels/app/user.go",
          "server/channels/app/user_test.go||server/channels/app/user_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ],
          "candidate": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ]
        }
      },
      "candidate_diff": {
        "server/channels/app/user.go||server/channels/app/user.go": [
          "File: server/channels/app/user.go -> server/channels/app/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1285:   }(user.Id)",
          "1286:  }",
          "1288:  return newUser, nil",
          "1289: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288:  newUser.Sanitize(map[string]bool{})",
          "",
          "---------------"
        ],
        "server/channels/app/user_test.go||server/channels/app/user_test.go": [
          "File: server/channels/app/user_test.go -> server/channels/app/user_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   require.Nil(t, err)",
          "206:   require.NotNil(t, u)",
          "207:   require.Less(t, u.LastPictureUpdate, iLastPictureUpdate)",
          "208:  })",
          "210:  t.Run(\"fails if profile picture is updated when user has custom profile picture and username is changed\", func(t *testing.T) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:   require.Empty(t, u.Password)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1731:  })",
          "1733:  t.Run(\"Patch username with a new username\", func(t *testing.T) {",
          "1735:    Username: model.NewString(model.NewId()),",
          "1736:   }, true)",
          "1738:   require.Nil(t, err)",
          "1739:  })",
          "1740: }",
          "",
          "[Removed Lines]",
          "1734:   _, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "",
          "[Added Lines]",
          "1735:   u, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "1740:   require.Empty(t, u.Password)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "741e0862cfc783ef895129494b8c878faa17397e",
      "candidate_info": {
        "commit_hash": "741e0862cfc783ef895129494b8c878faa17397e",
        "repo": "mattermost/mattermost",
        "commit_url": "https://github.com/mattermost/mattermost/commit/741e0862cfc783ef895129494b8c878faa17397e",
        "files": [
          "app/user.go",
          "app/user_test.go"
        ],
        "message": "Sanitize user in update user response (#24362) (#24574)\n\nAutomatic Merge",
        "before_after_code_files": [
          "app/user.go||app/user.go",
          "app/user_test.go||app/user_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "app/user.go||app/user.go": [
          "File: app/user.go -> app/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1258:  a.InvalidateCacheForUser(user.Id)",
          "1259:  a.onUserProfileChange(user.Id)",
          "1261:  return userUpdate.New, nil",
          "1262: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1261:  userUpdate.New.Sanitize(map[string]bool{})",
          "",
          "---------------"
        ],
        "app/user_test.go||app/user_test.go": [
          "File: app/user_test.go -> app/user_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1702:  })",
          "1704:  t.Run(\"Patch username with a new username\", func(t *testing.T) {",
          "1706:    Username: model.NewString(model.NewId()),",
          "1707:   }, true)",
          "1709:   require.Nil(t, err)",
          "1710:  })",
          "1711: }",
          "",
          "[Removed Lines]",
          "1705:   _, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "",
          "[Added Lines]",
          "1705:   u, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "1710:   require.Empty(t, u.Password)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16d70e16d8f8a4fd5b8b01e4ca19bb11d1158ed2",
      "candidate_info": {
        "commit_hash": "16d70e16d8f8a4fd5b8b01e4ca19bb11d1158ed2",
        "repo": "mattermost/mattermost",
        "commit_url": "https://github.com/mattermost/mattermost/commit/16d70e16d8f8a4fd5b8b01e4ca19bb11d1158ed2",
        "files": [
          "server/channels/app/user.go",
          "server/channels/app/user_test.go"
        ],
        "message": "Sanitize user in update user response (#24362) (#24573)\n\nAutomatic Merge",
        "before_after_code_files": [
          "server/channels/app/user.go||server/channels/app/user.go",
          "server/channels/app/user_test.go||server/channels/app/user_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ],
          "candidate": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ]
        }
      },
      "candidate_diff": {
        "server/channels/app/user.go||server/channels/app/user.go": [
          "File: server/channels/app/user.go -> server/channels/app/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1284:  a.InvalidateCacheForUser(user.Id)",
          "1285:  a.onUserProfileChange(user.Id)",
          "1287:  return newUser, nil",
          "1288: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1287:  newUser.Sanitize(map[string]bool{})",
          "",
          "---------------"
        ],
        "server/channels/app/user_test.go||server/channels/app/user_test.go": [
          "File: server/channels/app/user_test.go -> server/channels/app/user_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   require.Nil(t, err)",
          "206:   require.NotNil(t, u)",
          "207:   require.Less(t, u.LastPictureUpdate, iLastPictureUpdate)",
          "208:  })",
          "210:  t.Run(\"fails if profile picture is updated when user has custom profile picture and username is changed\", func(t *testing.T) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:   require.Empty(t, u.Password)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1731:  })",
          "1733:  t.Run(\"Patch username with a new username\", func(t *testing.T) {",
          "1735:    Username: model.NewString(model.NewId()),",
          "1736:   }, true)",
          "1738:   require.Nil(t, err)",
          "1739:  })",
          "1740: }",
          "",
          "[Removed Lines]",
          "1734:   _, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "",
          "[Added Lines]",
          "1735:   u, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "1740:   require.Empty(t, u.Password)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2377bd340dc52cabfe93e9ed4cbec579d8dadb30",
      "candidate_info": {
        "commit_hash": "2377bd340dc52cabfe93e9ed4cbec579d8dadb30",
        "repo": "mattermost/mattermost",
        "commit_url": "https://github.com/mattermost/mattermost/commit/2377bd340dc52cabfe93e9ed4cbec579d8dadb30",
        "files": [
          "server/channels/app/user.go",
          "server/channels/app/user_test.go"
        ],
        "message": "Sanitize user in update user response (#24362) (#24572)\n\nAutomatic Merge",
        "before_after_code_files": [
          "server/channels/app/user.go||server/channels/app/user.go",
          "server/channels/app/user_test.go||server/channels/app/user_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ],
          "candidate": [
            "server/channels/app/user.go||server/channels/app/user.go",
            "server/channels/app/user_test.go||server/channels/app/user_test.go"
          ]
        }
      },
      "candidate_diff": {
        "server/channels/app/user.go||server/channels/app/user.go": [
          "File: server/channels/app/user.go -> server/channels/app/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1271:  a.InvalidateCacheForUser(user.Id)",
          "1272:  a.onUserProfileChange(user.Id)",
          "1274:  return newUser, nil",
          "1275: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1274:  newUser.Sanitize(map[string]bool{})",
          "",
          "---------------"
        ],
        "server/channels/app/user_test.go||server/channels/app/user_test.go": [
          "File: server/channels/app/user_test.go -> server/channels/app/user_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:   require.Nil(t, err)",
          "206:   require.NotNil(t, u)",
          "207:   require.Less(t, u.LastPictureUpdate, iLastPictureUpdate)",
          "208:  })",
          "210:  t.Run(\"fails if profile picture is updated when user has custom profile picture and username is changed\", func(t *testing.T) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:   require.Empty(t, u.Password)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1731:  })",
          "1733:  t.Run(\"Patch username with a new username\", func(t *testing.T) {",
          "1735:    Username: model.NewString(model.NewId()),",
          "1736:   }, true)",
          "1738:   require.Nil(t, err)",
          "1739:  })",
          "1740: }",
          "",
          "[Removed Lines]",
          "1734:   _, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "",
          "[Added Lines]",
          "1735:   u, err := th.App.PatchUser(th.Context, testUser.Id, &model.UserPatch{",
          "1740:   require.Empty(t, u.Password)",
          "",
          "---------------"
        ]
      }
    }
  ]
}