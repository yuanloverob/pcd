{
  "cve_id": "CVE-2021-21664",
  "cve_desc": "An incorrect permission check in Jenkins XebiaLabs XL Deploy Plugin 10.0.1 and earlier allows attackers with Generic Create permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing Username/password credentials stored in Jenkins.",
  "repo": "jenkinsci/xldeploy-plugin",
  "patch_hash": "79ae204d2ee6cd94badf4c24a150cee13a3bde44",
  "patch_info": {
    "commit_hash": "79ae204d2ee6cd94badf4c24a150cee13a3bde44",
    "repo": "jenkinsci/xldeploy-plugin",
    "commit_url": "https://github.com/jenkinsci/xldeploy-plugin/commit/79ae204d2ee6cd94badf4c24a150cee13a3bde44",
    "files": [
      "repo/pom.xml",
      "src/main/java/com/xebialabs/deployit/ci/Credential.java",
      "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java"
    ],
    "message": "ENG-2021 Addresses SECURITY-1981 and SECURITY-1982. Permission check (#68)\n\n* ENG-2021 Added permission checks\n\n* Updated Credential.java to use Permission",
    "before_after_code_files": [
      "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java",
      "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java"
    ]
  },
  "patch_diff": {
    "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java": [
      "File: src/main/java/com/xebialabs/deployit/ci/Credential.java -> src/main/java/com/xebialabs/deployit/ci/Credential.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: import hudson.model.ItemGroup;",
      "55: import hudson.model.Project;",
      "56: import hudson.security.ACL;",
      "57: import hudson.util.FormValidation;",
      "58: import hudson.util.ListBoxModel;",
      "59: import hudson.util.Secret;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: import hudson.security.Permission;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "319:         }",
      "321:         public FormValidation doValidateCredential(@QueryParameter String deployitServerUrl, @QueryParameter String deployitClientProxyUrl, @QueryParameter String secondaryServerUrl, @QueryParameter String secondaryProxyUrl, @QueryParameter String credentialsId) throws IOException {",
      "322:             try {",
      "324:                 String serverUrl = Strings.isNullOrEmpty(secondaryServerUrl) ? deployitServerUrl : secondaryServerUrl;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:             Jenkins.getInstance().checkPermission(Permission.CREATE);",
      "",
      "---------------"
    ],
    "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java": [
      "File: src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java -> src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "312:         }",
      "314:         public ListBoxModel doFillCredentialsIdItems(@AncestorInPath ItemGroup context) {",
      "315:             List<StandardUsernamePasswordCredentials> creds = lookupCredentials(StandardUsernamePasswordCredentials.class, context,",
      "316:                     ACL.SYSTEM,",
      "317:                     HTTP_SCHEME, HTTPS_SCHEME);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "315:           Jenkins.getInstance().checkPermission(Item.CONFIGURE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "415:             return resolvedValue;",
      "416:         }",
      "417:     }",
      "",
      "[Removed Lines]",
      "418: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f87e502bcb07395d58ef03d66626f3bfde77ba93",
      "candidate_info": {
        "commit_hash": "f87e502bcb07395d58ef03d66626f3bfde77ba93",
        "repo": "jenkinsci/xldeploy-plugin",
        "commit_url": "https://github.com/jenkinsci/xldeploy-plugin/commit/f87e502bcb07395d58ef03d66626f3bfde77ba93",
        "files": [
          "build.gradle",
          "gradle.properties",
          "gradle/wrapper/gradle-wrapper.properties",
          "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java",
          "src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java",
          "src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java",
          "src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java",
          "src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java"
        ],
        "message": "Fixing an issue with NPE + upgrading gradle + adding a bit more logs",
        "before_after_code_files": [
          "build.gradle||build.gradle",
          "gradle.properties||gradle.properties",
          "gradle/wrapper/gradle-wrapper.properties||gradle/wrapper/gradle-wrapper.properties",
          "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java",
          "src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java||src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java",
          "src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java||src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java",
          "src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java||src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java",
          "src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java||src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java"
          ],
          "candidate": [
            "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java"
          ]
        }
      },
      "candidate_diff": {
        "build.gradle||build.gradle": [
          "File: build.gradle -> build.gradle",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: repositories {",
          "41:     mavenCentral()",
          "42:     jcenter()",
          "44:     maven { url \"http://repo.jenkins-ci.org/releases\" }",
          "45:     maven { url \"http://www.knopflerfish.org/maven2\" }",
          "46:     maven { url \"https://dist.xebialabs.com/public/maven2\" }",
          "",
          "[Removed Lines]",
          "43:     maven { url \"http://bits.netbeans.org/maven2\" }",
          "",
          "[Added Lines]",
          "43:     maven { url \"https://plugins.gradle.org/m2/\" }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:         mavenCentral()",
          "55:         jcenter()",
          "57:         maven { url \"http://repo.jenkins-ci.org/releases\" }",
          "58:         maven { url \"http://www.knopflerfish.org/maven2\" }",
          "59:         maven { url \"https://dist.xebialabs.com/public/maven2\" }",
          "60:     }",
          "61:     dependencies {",
          "63:         classpath 'org.bitbucket.grimrose:gradle-obake-plugin:0.5'",
          "64:         classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'",
          "66:     }",
          "67: }",
          "",
          "[Removed Lines]",
          "56:         maven { url \"http://bits.netbeans.org/maven2\" }",
          "62:         classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.18.0'",
          "65:         classpath 'net.researchgate:gradle-release:2.3.4'",
          "",
          "[Added Lines]",
          "56:         maven { url \"https://plugins.gradle.org/m2/\" }",
          "62:         classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.43.0'",
          "65:         classpath 'net.researchgate:gradle-release:2.8.1'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:     provided 'org.slf4j:slf4j-api:1.7.7'",
          "138:     jenkinsPlugins \"org.jenkins-ci.plugins:credentials:1.16.1@jar\"",
          "139:     jenkinsPlugins \"org.jenkins-ci.plugins.workflow:workflow-step-api:1.10@jar\"",
          "141:     compile 'com.google.code.findbugs:jsr305:2.0.2'",
          "142:     compile 'findbugs:annotations:1.0.0'",
          "143:     compile \"com.google.guava:guava:16.0.1\"",
          "145:     testCompile \"junit:junit:4.11\"",
          "146:     testCompile \"org.mockito:mockito-all:1.9.5\"",
          "148:     testCompile \"org.jenkins-ci.main:jenkins-test-harness:2.15\"",
          "149:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-aggregator:1.10@jar\"",
          "150:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-support:1.10@jar\"",
          "152:     testCompile \"org.jenkins-ci.plugins:scm-api:1.1@jar\"",
          "",
          "[Removed Lines]",
          "147:     testCompile \"org.jenkins-ci.plugins:cloudbees-folder:6.0.4@jar\"",
          "151:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-scm-step:1.10@jar\"",
          "",
          "[Added Lines]",
          "140:     compile \"org.jenkins-ci.plugins:credentials:1.16.1@jar\"",
          "141:     compile \"org.jenkins-ci.plugins.workflow:workflow-step-api:1.10@jar\"",
          "149:     testCompile \"org.jenkins-ci.plugins:cloudbees-folder:6.0.4@jar\"",
          "153:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-scm-step:1.10@jar\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "158:     slf4j \"org.slf4j:slf4j-jdk14:1.7.7\"",
          "159:     slf4j \"org.slf4j:slf4j-simple:1.7.7\"",
          "164:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-job:1.10@jar\"",
          "165:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-cps:1.10@jar\"",
          "166:     testCompile \"org.jenkins-ci.plugins.workflow:workflow-api:1.10@jar\"",
          "174: }",
          "",
          "[Removed Lines]",
          "161:     jenkinsTest ('org.jenkins-ci.main:maven-plugin:1.480@hpi') { transitive = true }",
          "162:     jenkinsTest (\"org.jenkins-ci.plugins:credentials:1.16.1@hpi\") { transitive = true }",
          "168:     jenkinsTest (\"org.jenkins-ci.plugins.workflow:workflow-step-api:1.10@hpi\")  { transitive = true }",
          "169:     jenkinsTest (\"org.jenkins-ci.plugins.workflow:workflow-support:1.10@hpi\") { transitive = true }",
          "170:     jenkinsTest (\"org.jenkins-ci.plugins.workflow:workflow-cps:1.10@hpi\") { transitive = true }",
          "171:     jenkinsTest (\"org.jenkins-ci.plugins:git:3.0.1@hpi\") { transitive = true }",
          "172:     jenkinsTest (\"org.jenkins-ci.plugins.workflow:workflow-aggregator:1.10@hpi\") { transitive = true }",
          "",
          "[Added Lines]",
          "163:     jenkinsTest('org.jenkins-ci.main:maven-plugin:1.480@hpi') { transitive = true }",
          "164:     jenkinsTest(\"org.jenkins-ci.plugins:credentials:1.16.1@hpi\") { transitive = true }",
          "170:     jenkinsTest(\"org.jenkins-ci.plugins.workflow:workflow-step-api:1.10@hpi\") { transitive = true }",
          "171:     jenkinsTest(\"org.jenkins-ci.plugins.workflow:workflow-support:1.10@hpi\") { transitive = true }",
          "172:     jenkinsTest(\"org.jenkins-ci.plugins.workflow:workflow-cps:1.10@hpi\") { transitive = true }",
          "173:     jenkinsTest(\"org.jenkins-ci.plugins:git:3.0.1@hpi\") { transitive = true }",
          "174:     jenkinsTest(\"org.jenkins-ci.plugins.workflow:workflow-aggregator:1.10@hpi\") { transitive = true }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "188: task itest(type: Test) {",
          "189:     description = \"Run integration tests\"",
          "191:     classpath = project.sourceSets.test.runtimeClasspath + configurations.slf4j",
          "192: }",
          "",
          "[Removed Lines]",
          "190:     testClassesDir = project.sourceSets.test.output.classesDir",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "196:     def username = project.property('xlDeployIntegration.username')",
          "197:     def password = project.property('xlDeployIntegration.password')",
          "198:     test.systemProperties([",
          "202:     ])",
          "203: }",
          "213:     }",
          "214: }",
          "",
          "[Removed Lines]",
          "199:             \"xlDeployIntegration.host\" : \"$host\",",
          "200:             \"xlDeployIntegration.username\" : \"$username\",",
          "201:             \"xlDeployIntegration.password\" : \"$password\"",
          "205: task checkJavaVersion << {",
          "206:     def majorVersion = project.version.tokenize('.')[0].toInteger()",
          "207:     def message = \"This build must be run with java\"",
          "208:     if(majorVersion < 6 && JavaVersion.current() != JavaVersion.VERSION_1_7) {",
          "209:         throw new GradleException(\"${message} ${JavaVersion.VERSION_1_7}\")",
          "210:     }",
          "211:     if(majorVersion >= 6 && JavaVersion.current() != JavaVersion.VERSION_1_8) {",
          "212:         throw new GradleException(\"${message} ${JavaVersion.VERSION_1_8}\")",
          "216: tasks.checkJavaVersion.execute()",
          "",
          "[Added Lines]",
          "200:             \"xlDeployIntegration.host\"    : \"$host\",",
          "201:             \"xlDeployIntegration.username\": \"$username\",",
          "202:             \"xlDeployIntegration.password\": \"$password\"",
          "206: task checkJavaVersion {",
          "207:     doLast {",
          "208:         def majorVersion = project.version.tokenize('.')[0].toInteger()",
          "209:         def message = \"This build must be run with java\"",
          "210:         if (majorVersion < 6 && JavaVersion.current() != JavaVersion.VERSION_1_7) {",
          "211:             throw new GradleException(\"${message} ${JavaVersion.VERSION_1_7}\")",
          "212:         }",
          "213:         if (majorVersion >= 6 && JavaVersion.current() != JavaVersion.VERSION_1_8) {",
          "214:             throw new GradleException(\"${message} ${JavaVersion.VERSION_1_8}\")",
          "215:         }",
          "",
          "---------------"
        ],
        "gradle.properties||gradle.properties": [
          "File: gradle.properties -> gradle.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: group = com.xebialabs.deployit.ci",
          "2: version = 10.0.1-SNAPSHOT",
          "3: description = Package and deploy your applications from Jenkins with &lt;a href='http://www.xebialabs.com'&gt;XebiaLabs XL Deploy&lt;/a&gt;.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: languageLevel=1.8",
          "",
          "---------------"
        ],
        "gradle/wrapper/gradle-wrapper.properties||gradle/wrapper/gradle-wrapper.properties": [
          "File: gradle/wrapper/gradle-wrapper.properties -> gradle/wrapper/gradle-wrapper.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: distributionPath=wrapper/dists",
          "4: zipStoreBase=GRADLE_USER_HOME",
          "5: zipStorePath=wrapper/dists",
          "",
          "[Removed Lines]",
          "6: distributionUrl=https\\://services.gradle.org/distributions/gradle-2.8-all.zip",
          "",
          "[Added Lines]",
          "6: distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5.1-all.zip",
          "",
          "---------------"
        ],
        "src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java||src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java -> src/main/java/com/xebialabs/deployit/ci/DeployitNotifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import com.cloudbees.plugins.credentials.common.StandardUsernameListBoxModel;",
          "27: import com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials;",
          "28: import com.cloudbees.plugins.credentials.domains.SchemeRequirement;",
          "29: import hudson.Extension;",
          "30: import hudson.Launcher;",
          "31: import hudson.model.*;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import com.google.common.base.Strings;",
          "30: import com.xebialabs.deployit.ci.DeployitPerformer.DeployitPerformerParameters;",
          "31: import com.xebialabs.deployit.ci.server.DeployitDescriptorRegistry;",
          "32: import com.xebialabs.deployit.ci.server.DeployitServer;",
          "33: import com.xebialabs.deployit.ci.server.DeployitServerFactory;",
          "34: import com.xebialabs.deployit.ci.util.PluginLogger;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: import hudson.tasks.Publisher;",
          "37: import hudson.util.FormValidation;",
          "38: import hudson.util.ListBoxModel;",
          "40: import java.io.IOException;",
          "41: import java.lang.ref.SoftReference;",
          "42: import java.net.MalformedURLException;",
          "43: import java.net.URL;",
          "44: import java.util.ArrayList;",
          "46: import java.util.HashMap;",
          "47: import java.util.List;",
          "48: import java.util.Map;",
          "67: import static com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials;",
          "",
          "[Removed Lines]",
          "45: import java.util.Collections;",
          "49: import java.util.logging.Logger;",
          "52: import net.sf.json.JSONObject;",
          "54: import org.kohsuke.stapler.AncestorInPath;",
          "55: import org.kohsuke.stapler.DataBoundConstructor;",
          "56: import org.kohsuke.stapler.QueryParameter;",
          "57: import org.kohsuke.stapler.StaplerRequest;",
          "58: import org.kohsuke.stapler.interceptor.RequirePOST;",
          "60: import com.google.common.base.Strings;",
          "62: import com.xebialabs.deployit.ci.DeployitPerformer.DeployitPerformerParameters;",
          "63: import com.xebialabs.deployit.ci.server.DeployitDescriptorRegistry;",
          "64: import com.xebialabs.deployit.ci.server.DeployitServer;",
          "65: import com.xebialabs.deployit.ci.server.DeployitServerFactory;",
          "68: import static hudson.util.FormValidation.error;",
          "69: import static hudson.util.FormValidation.ok;",
          "70: import static hudson.util.FormValidation.warning;",
          "71: import jenkins.model.Jenkins;",
          "",
          "[Added Lines]",
          "45: import jenkins.model.Jenkins;",
          "46: import net.sf.json.JSONObject;",
          "47: import org.kohsuke.stapler.AncestorInPath;",
          "48: import org.kohsuke.stapler.DataBoundConstructor;",
          "49: import org.kohsuke.stapler.QueryParameter;",
          "50: import org.kohsuke.stapler.StaplerRequest;",
          "51: import org.kohsuke.stapler.interceptor.RequirePOST;",
          "63: import static hudson.util.FormValidation.*;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:     public final String application;",
          "80:     public final String version;",
          "81:     public final JenkinsPackageOptions packageOptions;",
          "83:     public final JenkinsImportOptions importOptions;",
          "84:     public final JenkinsDeploymentOptions deploymentOptions;",
          "85:     public final boolean verbose;",
          "",
          "[Removed Lines]",
          "82:     public List<PackageProperty> packageProperties = Collections.emptyList();",
          "",
          "[Added Lines]",
          "74:     public List<PackageProperty> packageProperties;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:         this.verbose = verbose;",
          "102:         this.packageProperties = packageProperties;",
          "103:         this.overridingCredential = overridingCredential;",
          "104:     }",
          "106:     @Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:         PluginLogger.getInstance().setVerbose(verbose);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124:             DeployitDescriptor descriptor = RepositoryUtils.getDeployitDescriptor();",
          "128:             DeployitPerformerParameters performerParameters = new DeployitPerformerParameters(packageOptions, packageProperties, importOptions, deploymentOptions, application, version, verbose);",
          "132:             return performer.doPerform();",
          "133:         } else {",
          "",
          "[Removed Lines]",
          "126:             DeployitServer deployitServer = descriptor.getDeployitServer(credential, (AbstractProject) build.getProject());",
          "130:             DeployitPerformer performer = new DeployitPerformer(build, launcher, listener, deployitServer, performerParameters);",
          "",
          "[Added Lines]",
          "119:             DeployitServer deployitServer = descriptor.getDeployitServer(credential, build.getProject());",
          "123:             DeployitPerformer performer = new DeployitPerformer(build, listener, deployitServer, performerParameters);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "160:         private static final SchemeRequirement HTTP_SCHEME = new SchemeRequirement(\"http\");",
          "161:         private static final SchemeRequirement HTTPS_SCHEME = new SchemeRequirement(\"https\");",
          "166:         private final transient Map<String, SoftReference<DeployitServer>> credentialServerMap = new HashMap<String, SoftReference<DeployitServer>>();",
          "",
          "[Removed Lines]",
          "163:         private static final Logger LOGGER = Logger.getLogger(Credential.class.getName());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "312:         }",
          "314:         public ListBoxModel doFillCredentialsIdItems(@AncestorInPath ItemGroup context) {",
          "316:             List<StandardUsernamePasswordCredentials> creds = lookupCredentials(StandardUsernamePasswordCredentials.class, context,",
          "317:                     ACL.SYSTEM,",
          "318:                     HTTP_SCHEME, HTTPS_SCHEME);",
          "",
          "[Removed Lines]",
          "315:           Jenkins.getInstance().checkPermission(Item.CONFIGURE);",
          "",
          "[Added Lines]",
          "305:             Jenkins.getInstance().checkPermission(Item.CONFIGURE);",
          "",
          "---------------"
        ],
        "src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java||src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java -> src/main/java/com/xebialabs/deployit/ci/DeployitPerformer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import hudson.EnvVars;",
          "4: import hudson.FilePath;",
          "6: import hudson.model.BuildListener;",
          "7: import hudson.model.AbstractBuild;",
          "",
          "[Removed Lines]",
          "5: import hudson.Launcher;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10: import java.io.IOException;",
          "11: import java.util.List;",
          "13: import com.google.common.base.Joiner;",
          "14: import com.google.common.base.Strings;",
          "15: import com.google.common.collect.Lists;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import org.slf4j.Logger;",
          "13: import org.slf4j.LoggerFactory;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:     private DeployitServer deployitServer;",
          "35:     private DeployitPerformerParameters deploymentParameters;",
          "38:         this.build = build;",
          "39:         this.buildListener = buildListener;",
          "40:         this.deployitServer = deployitServer;",
          "",
          "[Removed Lines]",
          "37:     DeployitPerformer(final AbstractBuild<?, ?> build, Launcher launcher, BuildListener buildListener, DeployitServer deployitServer, DeployitPerformerParameters deploymentParameters) {",
          "",
          "[Added Lines]",
          "39:     DeployitPerformer(final AbstractBuild<?, ?> build, BuildListener buildListener, DeployitServer deployitServer, DeployitPerformerParameters deploymentParameters) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:             this.verbose = verbose;",
          "182:         }",
          "183:     }",
          "",
          "[Removed Lines]",
          "184: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java||src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java -> src/main/java/com/xebialabs/deployit/ci/JenkinsPackageOptions.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package com.xebialabs.deployit.ci;",
          "34: import com.google.common.base.Predicates;",
          "35: import com.google.common.collect.Iterables;",
          "36: import com.google.common.collect.Lists;",
          "38: import com.xebialabs.deployit.ci.server.DeployitDescriptorRegistry;",
          "39: import com.xebialabs.deployit.ci.util.JenkinsDeploymentListener;",
          "40: import com.xebialabs.deployit.plugin.api.udm.Application;",
          "41: import com.xebialabs.deployit.plugin.api.udm.ConfigurationItem;",
          "42: import com.xebialabs.deployit.plugin.api.udm.Deployable;",
          "43: import com.xebialabs.deployit.plugin.api.udm.DeploymentPackage;",
          "46: import hudson.DescriptorExtensionList;",
          "47: import hudson.EnvVars;",
          "48: import hudson.Extension;",
          "",
          "[Removed Lines]",
          "26: import java.util.Collections;",
          "27: import java.util.Comparator;",
          "28: import java.util.List;",
          "29: import java.util.Map;",
          "31: import org.kohsuke.stapler.DataBoundConstructor;",
          "32: import org.kohsuke.stapler.StaplerRequest;",
          "44: import com.xebialabs.deployit.plugin.api.udm.base.BaseConfigurationItem;",
          "",
          "[Added Lines]",
          "31: import com.xebialabs.deployit.ci.util.PluginLogger;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: import hudson.model.Descriptor;",
          "52: import jenkins.model.Jenkins;",
          "53: import net.sf.json.JSONObject;",
          "54: import static com.google.common.base.Strings.nullToEmpty;",
          "55: import static com.google.common.collect.Maps.newHashMap;",
          "56: import static com.xebialabs.deployit.ci.util.Strings2.stripEnclosingQuotes;",
          "58: public class JenkinsPackageOptions implements Describable<JenkinsPackageOptions> {",
          "60:     private final List<DeployableView> deployables;",
          "62:     @DataBoundConstructor",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: import org.kohsuke.stapler.DataBoundConstructor;",
          "45: import org.kohsuke.stapler.StaplerRequest;",
          "47: import java.util.Collections;",
          "48: import java.util.Comparator;",
          "49: import java.util.List;",
          "50: import java.util.Map;",
          "58:     public final PluginLogger pluginLogger = PluginLogger.getInstance();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:         Application application = registry.newInstance(Application.class, applicationName);",
          "78:         DeploymentPackage deploymentPackage = registry.newInstance(DeploymentPackage.class, version);",
          "79:         deploymentPackage.setApplication(application);",
          "81:         if (null == deployables) {",
          "82:             String msg = String.format(\"No deployables defined for deployment package. Application: '%s'.\", applicationName);",
          "83:             throw new DeployitPluginException(msg);",
          "",
          "[Removed Lines]",
          "80:         Map<String,ConfigurationItem> deployablesByFqn = newHashMap();",
          "",
          "[Added Lines]",
          "80:         Map<String, ConfigurationItem> deployablesByFqn = newHashMap();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:         for (DeployableView deployableView : sortedDeployables) {",
          "87:             ConfigurationItem deployable = deployableView.toConfigurationItem(registry, workspace, envVars, listener);",
          "88:             if (deployableView instanceof EmbeddedView) {",
          "90:             } else {",
          "91:                 deploymentPackage.addDeployable((Deployable) deployable);",
          "92:             }",
          "",
          "[Removed Lines]",
          "89:                 linkEmbeddedToParent(deployablesByFqn, deployable, (EmbeddedView)deployableView, registry, listener);",
          "",
          "[Added Lines]",
          "89:                 linkEmbeddedToParent(deployablesByFqn, deployable, (EmbeddedView) deployableView, registry, listener);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "98:             for (NameValuePair pair : packageProperties) {",
          "99:                 String value = stripEnclosingQuotes(nullToEmpty(pair.propertyValue));",
          "100:                 value = envVars.expand(value);",
          "101:                 registry.setProperty(deploymentPackage, pair.propertyName, value);",
          "102:             }",
          "103:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:                 pluginLogger.debug(\"Registering a property for ci = {}, propName = {}, value = {} \", deploymentPackage, pair.propertyName, value);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "107:     private List<DeployableView> sortDeployables(List<DeployableView> deployables) {",
          "108:         List<DeployableView> result = Lists.newArrayList(Iterables.filter(deployables, Predicates.not(Predicates.instanceOf(EmbeddedView.class))));",
          "112:         Collections.sort(embeddeds, new Comparator<EmbeddedView>() {",
          "113:             @Override",
          "",
          "[Removed Lines]",
          "110:                 (List<EmbeddedView>)(Object)Lists.newArrayList(Iterables.filter(deployables, Predicates.instanceOf(EmbeddedView.class)));",
          "",
          "[Added Lines]",
          "111:                 (List<EmbeddedView>) (Object) Lists.newArrayList(Iterables.filter(deployables, Predicates.instanceOf(EmbeddedView.class)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "119:         return result;",
          "120:     }",
          "123:         ConfigurationItem parent = deployablesByFqn.get(embeddedView.getParentName());",
          "124:         if (parent == null) {",
          "125:             listener.error(\"Failed to find parent [\" + embeddedView.getParentName() + \"] that embeds [\" + deployable + \"]\");",
          "",
          "[Removed Lines]",
          "122:     private void linkEmbeddedToParent(Map<String, ConfigurationItem> deployablesByFqn, ConfigurationItem deployable, final EmbeddedView embeddedView,DeployitDescriptorRegistry registry, JenkinsDeploymentListener listener) {",
          "",
          "[Added Lines]",
          "123:     private void linkEmbeddedToParent(Map<String, ConfigurationItem> deployablesByFqn, ConfigurationItem deployable, final EmbeddedView embeddedView, DeployitDescriptorRegistry registry, JenkinsDeploymentListener listener) {",
          "",
          "---------------"
        ],
        "src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java||src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java -> src/main/java/com/xebialabs/deployit/ci/server/DeployCommand.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     }",
          "69:     private void verifyPackageExistInRemoteRepository(String deploymentPackage) {",
          "72:         try {",
          "73:             ConfigurationItem repoPackage = repositoryService.read(deploymentPackage);",
          "74:             foundType = repoPackage.getType();",
          "",
          "[Removed Lines]",
          "70:         boolean found = false;",
          "71:         Type foundType = null;",
          "",
          "[Added Lines]",
          "70:         Type foundType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:             }",
          "265:         }",
          "266:     }",
          "",
          "[Removed Lines]",
          "267: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java||src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java -> src/main/java/com/xebialabs/deployit/ci/server/DeployitDescriptorRegistryImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package com.xebialabs.deployit.ci.server;",
          "37: import com.google.common.base.Function;",
          "38: import com.google.common.base.Predicate;",
          "39: import com.google.common.base.Predicates;",
          "",
          "[Removed Lines]",
          "26: import java.util.Collection;",
          "27: import java.util.List;",
          "28: import java.util.UUID;",
          "30: import javax.annotation.Nullable;",
          "32: import com.xebialabs.deployit.ci.ArtifactView;",
          "33: import com.xebialabs.deployit.ci.util.Strings2;",
          "34: import org.slf4j.Logger;",
          "35: import org.slf4j.LoggerFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: import com.google.common.collect.FluentIterable;",
          "42: import com.google.common.collect.Ordering;",
          "43: import com.google.common.util.concurrent.Monitor;",
          "51: import com.xebialabs.deployit.ci.DeployitPluginException;",
          "62: import com.xebialabs.deployit.plugin.api.udm.artifact.FolderArtifact;",
          "63: import com.xebialabs.deployit.plugin.api.udm.artifact.SourceArtifact;",
          "70: import static com.google.common.collect.Lists.newArrayList;",
          "71: import static com.google.common.collect.Sets.newHashSet;",
          "72: import static com.google.common.collect.Sets.newLinkedHashSet;",
          "74: public class DeployitDescriptorRegistryImpl implements DeployitDescriptorRegistry {",
          "76:     private BooterConfig booterConfig;",
          "78:     private Monitor LOCK = new Monitor();",
          "79:     private Iterable<Descriptor> allDeployableDescriptors;",
          "",
          "[Removed Lines]",
          "45: import com.xebialabs.deployit.booter.remote.BooterConfig;",
          "46: import com.xebialabs.deployit.booter.remote.DeployitCommunicator;",
          "47: import com.xebialabs.deployit.booter.remote.RemoteBooter;",
          "48: import com.xebialabs.deployit.booter.remote.RemoteDescriptor;",
          "49: import com.xebialabs.deployit.booter.remote.RemoteDescriptorRegistry;",
          "50: import com.xebialabs.deployit.booter.remote.RemotePropertyDescriptor;",
          "52: import com.xebialabs.deployit.plugin.api.reflect.Descriptor;",
          "53: import com.xebialabs.deployit.plugin.api.reflect.DescriptorRegistry;",
          "54: import com.xebialabs.deployit.plugin.api.reflect.PropertyDescriptor;",
          "55: import com.xebialabs.deployit.plugin.api.reflect.PropertyKind;",
          "56: import com.xebialabs.deployit.plugin.api.reflect.Type;",
          "57: import com.xebialabs.deployit.plugin.api.udm.ConfigurationItem;",
          "58: import com.xebialabs.deployit.plugin.api.udm.Deployable;",
          "59: import com.xebialabs.deployit.plugin.api.udm.DeploymentPackage;",
          "60: import com.xebialabs.deployit.plugin.api.udm.EmbeddedDeployable;",
          "61: import com.xebialabs.deployit.plugin.api.udm.Version;",
          "64: import com.xebialabs.deployit.plugin.api.udm.base.BaseConfigurationItem;",
          "65: import com.xebialabs.deployit.plugin.api.udm.base.BaseDeployable;",
          "66: import com.xebialabs.deployit.plugin.api.udm.base.BaseDeployableFileArtifact;",
          "67: import com.xebialabs.deployit.plugin.api.udm.base.BaseDeployableFolderArtifact;",
          "68: import com.xebialabs.deployit.plugin.api.udm.base.BaseEmbeddedDeployable;",
          "75:     private static final Logger LOG = LoggerFactory.getLogger(DeployitDescriptorRegistryImpl.class);",
          "",
          "[Added Lines]",
          "33: import com.xebialabs.deployit.booter.remote.*;",
          "34: import com.xebialabs.deployit.ci.ArtifactView;",
          "36: import com.xebialabs.deployit.ci.util.PluginLogger;",
          "37: import com.xebialabs.deployit.ci.util.Strings2;",
          "38: import com.xebialabs.deployit.plugin.api.reflect.*;",
          "39: import com.xebialabs.deployit.plugin.api.udm.*;",
          "42: import com.xebialabs.deployit.plugin.api.udm.base.*;",
          "44: import javax.annotation.Nullable;",
          "45: import java.util.Collection;",
          "46: import java.util.List;",
          "47: import java.util.UUID;",
          "55:     public final PluginLogger pluginLogger = PluginLogger.getInstance();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:             if (null == communicator) {",
          "94:                 try {",
          "95:                     communicator = RemoteBooter.getCommunicator(booterConfig);",
          "97:                 } catch (IllegalStateException ex) {",
          "99:                     DescriptorRegistry.remove(booterConfig);",
          "100:                     communicator = RemoteBooter.boot(booterConfig);",
          "101:                 }",
          "103:                 fixVersionDepl6949();",
          "104:             }",
          "105:         } finally {",
          "",
          "[Removed Lines]",
          "96:                     LOG.debug(\"Reusing existing communicator for config: {}.\", safeBooterConfigKey());",
          "98:                     LOG.debug(\"No communicator found for config: {}. Creating new DeployitCommunicator.\", safeBooterConfigKey());",
          "",
          "[Added Lines]",
          "75:                     pluginLogger.debug(\"Reusing existing communicator for config: {}.\", safeBooterConfigKey());",
          "77:                     pluginLogger.debug(\"No communicator found for config: {}. Creating new DeployitCommunicator.\", safeBooterConfigKey());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "110:     }",
          "112:     private String safeBooterConfigKey() {",
          "114:         return BooterConfig.builder()",
          "124:     }",
          "126:     private RemoteDescriptorRegistry getDescriptorRegistry() {",
          "",
          "[Removed Lines]",
          "113:         String safePassword = booterConfig.getPassword().replaceAll(\".\", \"*\");",
          "115:             .withProtocol(booterConfig.getProtocol())",
          "116:             .withCredentials(booterConfig.getUsername(), safePassword)",
          "117:             .withHost(booterConfig.getHost())",
          "118:             .withPort(booterConfig.getPort())",
          "119:             .withContext(booterConfig.getContext())",
          "120:             .withProxyHost(booterConfig.getProxyHost())",
          "121:             .withProxyPort(booterConfig.getProxyPort())",
          "122:             .build()",
          "123:             .getKey();",
          "",
          "[Added Lines]",
          "91:         String safePassword = booterConfig.getPassword().replaceAll(\"\\\\.\", \"*\");",
          "93:                 .withProtocol(booterConfig.getProtocol())",
          "94:                 .withCredentials(booterConfig.getUsername(), safePassword)",
          "95:                 .withHost(booterConfig.getHost())",
          "96:                 .withPort(booterConfig.getPort())",
          "97:                 .withContext(booterConfig.getContext())",
          "98:                 .withProxyHost(booterConfig.getProxyHost())",
          "99:                 .withProxyPort(booterConfig.getProxyPort())",
          "100:                 .build()",
          "101:                 .getKey();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "244:                     String propertyName = pd.getName();",
          "245:                     if (null == ci.getProperty(propertyName)) {",
          "246:                         switch (pd.getKind()) {",
          "255:                         }",
          "256:                     }",
          "257:                 }",
          "",
          "[Removed Lines]",
          "247:                         case LIST_OF_CI:",
          "248:                             ci.setProperty(propertyName, newArrayList());",
          "249:                             break;",
          "250:                         case SET_OF_CI:",
          "251:                             ci.setProperty(propertyName, newHashSet());",
          "252:                             break;",
          "253:                         default:",
          "254:                             break;",
          "",
          "[Added Lines]",
          "225:                             case LIST_OF_CI:",
          "226:                                 ci.setProperty(propertyName, newArrayList());",
          "227:                                 break;",
          "228:                             case SET_OF_CI:",
          "229:                                 ci.setProperty(propertyName, newHashSet());",
          "230:                                 break;",
          "231:                             default:",
          "232:                                 break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "287:     }",
          "289:     private Object convertValue(String val, PropertyDescriptor pd) {",
          "291:             return null;",
          "292:         }",
          "293:         switch (pd.getKind()) {",
          "",
          "[Removed Lines]",
          "290:         if (val == null) {",
          "",
          "[Added Lines]",
          "268:         if (val == null || pd == null) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "385:         Predicate<PropertyDescriptor> editablePropertyDescriptors = new Predicate<PropertyDescriptor>() {",
          "386:             @Override",
          "387:             public boolean apply(PropertyDescriptor pd) {",
          "390:             }",
          "391:         };",
          "392:         return getPropertiesForDeployableType(type, editablePropertyDescriptors);",
          "",
          "[Removed Lines]",
          "388:                 return !pd.isHidden() && !pd.getName().equals(\"tags\")  && !pd.getName().equals(ArtifactView.FILE_URI_PROPERTY)",
          "389:                   && !isEmbeddedProperty(pd, embeddedDeployableType);",
          "",
          "[Added Lines]",
          "366:                 return !pd.isHidden() && !pd.getName().equals(\"tags\") && !pd.getName().equals(ArtifactView.FILE_URI_PROPERTY)",
          "367:                         && !isEmbeddedProperty(pd, embeddedDeployableType);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "422:     public void reload() {",
          "423:         LOCK.enter();",
          "424:         try {",
          "426:             version = UUID.randomUUID().toString();",
          "427:             getDescriptorRegistry().reboot(getCommunicator());",
          "428:             allDeployableDescriptors = null;",
          "",
          "[Removed Lines]",
          "425:             LOG.warn(\"About to reload descriptor registry for config: {}.\", safeBooterConfigKey());",
          "",
          "[Added Lines]",
          "403:             pluginLogger.warn(\"About to reload descriptor registry for config: {}.\", safeBooterConfigKey());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dbf787f1786cb646a34e7e85d63335d5976800b",
      "candidate_info": {
        "commit_hash": "0dbf787f1786cb646a34e7e85d63335d5976800b",
        "repo": "jenkinsci/xldeploy-plugin",
        "commit_url": "https://github.com/jenkinsci/xldeploy-plugin/commit/0dbf787f1786cb646a34e7e85d63335d5976800b",
        "files": [
          "src/main/java/com/xebialabs/deployit/ci/Credential.java",
          "src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly"
        ],
        "message": "ENG-5651-Permission-Check-Fixes (#76)\n\n* ENG-5651-Permission-Check-Fixes\n\n* ENG-5651-refactored-code\n\n* ENG-5651-review-comment-resolution\n\n* ENG-5651-removed extra spaces\n\nCo-authored-by: nehag83 <ngarg@digital.ai>",
        "before_after_code_files": [
          "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java",
          "src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly||src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java"
          ],
          "candidate": [
            "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/com/xebialabs/deployit/ci/Credential.java||src/main/java/com/xebialabs/deployit/ci/Credential.java": [
          "File: src/main/java/com/xebialabs/deployit/ci/Credential.java -> src/main/java/com/xebialabs/deployit/ci/Credential.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: import org.kohsuke.stapler.AncestorInPath;",
          "48: import org.kohsuke.stapler.DataBoundConstructor;",
          "49: import org.kohsuke.stapler.QueryParameter;",
          "51: import hudson.Extension;",
          "56: import hudson.security.ACL;",
          "58: import hudson.util.FormValidation;",
          "59: import hudson.util.ListBoxModel;",
          "60: import hudson.util.Secret;",
          "",
          "[Removed Lines]",
          "52: import hudson.model.AbstractDescribableImpl;",
          "53: import hudson.model.Descriptor;",
          "54: import hudson.model.ItemGroup;",
          "55: import hudson.model.Project;",
          "57: import hudson.security.Permission;",
          "",
          "[Added Lines]",
          "50: import org.kohsuke.stapler.interceptor.RequirePOST;",
          "52: import hudson.model.*;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:     public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Project context) {",
          "119:         List<StandardUsernamePasswordCredentials> creds = lookupCredentials(StandardUsernamePasswordCredentials.class, context,",
          "120:                 ACL.SYSTEM,",
          "121:                 HTTP_SCHEME, HTTPS_SCHEME);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:         Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:         public ListBoxModel doFillCredentialsIdItems(@AncestorInPath Project context) {",
          "271:             List<StandardUsernamePasswordCredentials> creds = lookupCredentials(StandardUsernamePasswordCredentials.class, context,",
          "272:                     ACL.SYSTEM,",
          "273:                     HTTP_SCHEME, HTTPS_SCHEME);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:             Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "319:             }",
          "320:         }",
          "322:         public FormValidation doValidateCredential(@QueryParameter String deployitServerUrl, @QueryParameter String deployitClientProxyUrl, @QueryParameter String secondaryServerUrl, @QueryParameter String secondaryProxyUrl, @QueryParameter String credentialsId) throws IOException {",
          "324:             try {",
          "326:                 String serverUrl = Strings.isNullOrEmpty(secondaryServerUrl) ? deployitServerUrl : secondaryServerUrl;",
          "",
          "[Removed Lines]",
          "323:             Jenkins.getInstance().checkPermission(Permission.CREATE);",
          "",
          "[Added Lines]",
          "321:         @RequirePOST",
          "323:             Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);",
          "",
          "---------------"
        ],
        "src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly||src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly": [
          "File: src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly -> src/main/resources/com/xebialabs/deployit/ci/Credential/config.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?jelly escape-by-default='true'?>",
          "2: <j:jelly xmlns:j=\"jelly:core\" xmlns:st=\"jelly:stapler\" xmlns:d=\"jelly:define\" xmlns:c=\"/lib/credentials\" xmlns:l=\"/lib/layout\" xmlns:t=\"/lib/hudson\" xmlns:f=\"/lib/form\">",
          "9:             <f:textbox/>",
          "10:         </f:entry>",
          "",
          "[Removed Lines]",
          "3: <f:block>",
          "4:     <f:entry title=\"${%Name}\" field=\"name\">",
          "5:         <f:textbox/>",
          "6:     </f:entry>",
          "7:     <f:optionalBlock field=\"secondaryServerInfo\" title=\"Use non-default XL Deploy Server\" checked=\"${instance.showSecondaryServerSettings()}\">",
          "8:         <f:entry title=\"${%Server Url}\" field=\"secondaryServerUrl\">",
          "11:         <f:entry title=\"${%Proxy Url}\" field=\"secondaryProxyUrl\">",
          "12:             <f:textbox/>",
          "13:         </f:entry>",
          "14:     </f:optionalBlock>",
          "15:     <f:radioBlock inline=\"true\" name=\"useGlobalCredential\" value=\"false\" title=\"Use username/password\" checked=\"${!instance.showGolbalCredentials()}\">",
          "16:         <f:entry title=\"${%Username}\" field=\"username\">",
          "17:             <f:textbox/>",
          "18:         </f:entry>",
          "19:         <f:entry title=\"${%Password}\" field=\"password\">",
          "20:             <f:password/>",
          "21:         </f:entry>",
          "22:         <f:validateButton title=\"${%Test Credential}\" with=\"deployitServerUrl,deployitClientProxyUrl,username,password,secondaryServerUrl,secondaryProxyUrl\"",
          "23:                           method=\"validateUserNamePassword\"/>",
          "24:     </f:radioBlock>",
          "25:     <f:radioBlock inline=\"true\" name=\"useGlobalCredential\" value=\"true\" title=\"Use stored credentials\" checked=\"${instance.showGolbalCredentials()}\">",
          "26:         <f:entry title=\"${%Credentials}\" field=\"credentialsId\">",
          "27:             <c:select/>",
          "28:         </f:entry>",
          "29:         <f:validateButton title=\"${%Test Connection}\" with=\"deployitServerUrl,deployitClientProxyUrl,secondaryServerUrl,secondaryProxyUrl,credentialsId\"",
          "30:                           method=\"validateCredential\"/>",
          "31:     </f:radioBlock>",
          "32:     <f:description><br/></f:description>",
          "33: </f:block>",
          "34: </j:jelly>",
          "",
          "[Added Lines]",
          "3:     <f:block>",
          "4:         <f:entry title=\"${%Name}\" field=\"name\">",
          "7:         <f:optionalBlock field=\"secondaryServerInfo\" title=\"Use non-default XL Deploy Server\" checked=\"${instance.showSecondaryServerSettings()}\">",
          "8:             <f:entry title=\"${%Server Url}\" field=\"secondaryServerUrl\">",
          "9:                 <f:textbox/>",
          "10:             </f:entry>",
          "11:             <f:entry title=\"${%Proxy Url}\" field=\"secondaryProxyUrl\">",
          "12:                 <f:textbox/>",
          "13:             </f:entry>",
          "14:         </f:optionalBlock>",
          "15:         <f:radioBlock inline=\"true\" name=\"useGlobalCredential\" value=\"false\" title=\"Use username/password\" checked=\"${!instance.showGolbalCredentials()}\">",
          "16:             <f:entry title=\"${%Username}\" field=\"username\">",
          "17:                 <f:textbox/>",
          "18:             </f:entry>",
          "19:             <f:entry title=\"${%Password}\" field=\"password\">",
          "20:                 <f:password/>",
          "21:             </f:entry>",
          "22:             <f:validateButton title=\"${%Test Credential}\" with=\"deployitServerUrl,deployitClientProxyUrl,username,password,secondaryServerUrl,secondaryProxyUrl\"",
          "23:                               method=\"validateUserNamePassword\"/>",
          "24:         </f:radioBlock>",
          "25:         <f:radioBlock inline=\"true\" name=\"useGlobalCredential\" value=\"true\" title=\"Use stored credentials\" checked=\"${instance.showGolbalCredentials()}\">",
          "26:             <f:entry title=\"${%Credentials}\" field=\"credentialsId\">",
          "27:                 <c:select/>",
          "28:             </f:entry>",
          "29:             <f:validateButton title=\"${%Test Connection}\" with=\"deployitServerUrl,deployitClientProxyUrl,secondaryServerUrl,secondaryProxyUrl,credentialsId\"",
          "30:                               method=\"validateCredential\"/>",
          "31:         </f:radioBlock>",
          "32:         <f:description><br/></f:description>",
          "33:     </f:block>",
          "34: </j:jelly>",
          "",
          "---------------"
        ]
      }
    }
  ]
}