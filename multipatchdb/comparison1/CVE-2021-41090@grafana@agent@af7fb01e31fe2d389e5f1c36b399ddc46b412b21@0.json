{
  "cve_id": "CVE-2021-41090",
  "cve_desc": "Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. Prior to versions 0.20.1 and 0.21.2, inline secrets defined within a metrics instance config are exposed in plaintext over two endpoints: metrics instance configs defined in the base YAML file are exposed at `/-/config` and metrics instance configs defined for the scraping service are exposed at `/agent/api/v1/configs/:key`. Inline secrets will be exposed to anyone being able to reach these endpoints. If HTTPS with client authentication is not configured, these endpoints are accessible to unauthenticated users. Secrets found in these sections are used for delivering metrics to a Prometheus Remote Write system, authenticating against a system for discovering Prometheus targets, and authenticating against a system for collecting metrics. This does not apply for non-inlined secrets, such as `*_file` based secrets. This issue is patched in Grafana Agent versions 0.20.1 and 0.21.2. A few workarounds are available. Users who cannot upgrade should use non-inline secrets where possible. Users may also desire to restrict API access to Grafana Agent with some combination of restricting the network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block, configuring Grafana Agent to use HTTPS with client authentication, and/or using firewall rules to restrict external access to Grafana Agent's API.",
  "repo": "grafana/agent",
  "patch_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
  "patch_info": {
    "commit_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "repo": "grafana/agent",
    "commit_url": "https://github.com/grafana/agent/commit/af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "files": [
      "CHANGELOG.md",
      "docs/configuration/integrations/node-exporter-config.md",
      "docs/configuration/integrations/process-exporter-config.md",
      "docs/getting-started/_index.md",
      "docs/operator/custom-resource-quickstart.md",
      "docs/operator/getting-started.md",
      "docs/upgrade-guide/_index.md",
      "pkg/operator/defaults.go",
      "production/README.md",
      "production/grafanacloud-install.sh",
      "production/kubernetes/agent-bare.yaml",
      "production/kubernetes/agent-loki.yaml",
      "production/kubernetes/agent-traces.yaml",
      "production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ],
    "message": "announce patch releases for cve-2021-41090 (#1152)",
    "before_after_code_files": [
      "pkg/operator/defaults.go||pkg/operator/defaults.go",
      "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
      "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ]
  },
  "patch_diff": {
    "pkg/operator/defaults.go||pkg/operator/defaults.go": [
      "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:   \"v0.18.4\",",
      "16:   \"v0.19.0\",",
      "17:   \"v0.20.0\",",
      "18:   \"v0.21.0\",",
      "19:   \"v0.21.1\",",
      "22:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18:   \"v0.20.1\",",
      "21:   \"v0.21.2\",",
      "",
      "---------------"
    ],
    "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
      "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "50: #",
      "51: # Global constants.",
      "52: #",
      "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
      "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
      "",
      "[Removed Lines]",
      "53: RELEASE_VERSION=\"0.21.1\"",
      "",
      "[Added Lines]",
      "53: RELEASE_VERSION=\"0.21.2\"",
      "",
      "---------------"
    ],
    "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
      "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 'grafana/agent:v0.21.1'",
      "",
      "[Added Lines]",
      "1: 'grafana/agent:v0.21.2'",
      "",
      "---------------"
    ],
    "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
      "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: check_installed curl",
      "26: check_installed envsubst",
      "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
      "30: NAMESPACE=${NAMESPACE:-default}",
      "",
      "[Removed Lines]",
      "28: MANIFEST_BRANCH=v0.21.1",
      "",
      "[Added Lines]",
      "28: MANIFEST_BRANCH=v0.21.2",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
      "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: (import './lib/traces.libsonnet') +",
      "16: {",
      "17:   _images:: {",
      "20:   },",
      "",
      "[Removed Lines]",
      "18:     agent: 'grafana/agent:v0.21.1',",
      "19:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "18:     agent: 'grafana/agent:v0.21.2',",
      "19:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "10:   local this = self,",
      "12:   _images:: {",
      "15:   },",
      "16:   _config:: {",
      "17:     name: name,",
      "",
      "[Removed Lines]",
      "13:     agent: 'grafana/agent:v0.21.1',",
      "14:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "13:     agent: 'grafana/agent:v0.21.2',",
      "14:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: ) {",
      "15:   local _config = {",
      "16:     api: error 'api must be set',",
      "18:     schedule: '*/5 * * * *',",
      "19:     configs: [],",
      "20:   } + config,",
      "",
      "[Removed Lines]",
      "17:     image: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "17:     image: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0fcdbb8d267c6b671c82df9bcfca8b1adb005476",
      "candidate_info": {
        "commit_hash": "0fcdbb8d267c6b671c82df9bcfca8b1adb005476",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/0fcdbb8d267c6b671c82df9bcfca8b1adb005476",
        "files": [
          ".github/workflows/test.yml",
          "CHANGELOG.md",
          "cmd/agentctl/main.go",
          "docs/user/configuration/dynamic-config.md",
          "docs/user/cookbook/dynamic-configuration/01_Basics/01_Structure.md",
          "docs/user/cookbook/dynamic-configuration/01_Basics/01_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/01_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/01_assets/server-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/01_config.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_Instances.md",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/metrics-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/metrics_instances-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/metrics_instances-2.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_assets/server-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/02_config.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_Integrations.md",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/integrations-node.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/integrations-redis.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/metrics-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/metrics_instances-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/metrics_instances-2.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_assets/server-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/03_config.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_Logs_and_Traces.md",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/integrations-node.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/integrations-redis.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/logs-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/metrics-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/metrics_instances-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/metrics_instances-2.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/server-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_assets/traces-1.yml",
          "docs/user/cookbook/dynamic-configuration/01_Basics/04_config.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/01_Looping.md",
          "docs/user/cookbook/dynamic-configuration/02_Templates/01_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/01_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/01_config.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/02_Datasources.md",
          "docs/user/cookbook/dynamic-configuration/02_Templates/02_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/02_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/02_assets/fruit.json",
          "docs/user/cookbook/dynamic-configuration/02_Templates/02_config.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/03_Datasource_and_Objects.md",
          "docs/user/cookbook/dynamic-configuration/02_Templates/03_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/03_assets/computers.json",
          "docs/user/cookbook/dynamic-configuration/02_Templates/03_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/02_Templates/03_config.yml",
          "docs/user/cookbook/dynamic-configuration/03_Advanced_Datasources/01_AWS.md",
          "docs/user/cookbook/dynamic-configuration/03_Advanced_Datasources/01_assets/agent-1.yml",
          "docs/user/cookbook/dynamic-configuration/03_Advanced_Datasources/01_assets/final.yml",
          "docs/user/cookbook/dynamic-configuration/03_Advanced_Datasources/01_config.yml",
          "docs/user/cookbook/dynamic-configuration/README.md",
          "go.mod",
          "go.sum",
          "pkg/config/config.go",
          "pkg/config/config_test.go",
          "pkg/config/dynamicconfig.go",
          "pkg/config/dynamicloader.go",
          "pkg/config/dynamicloader_configs_test.go",
          "pkg/config/dynamicloader_template_test.go",
          "pkg/config/integrations.go",
          "pkg/integrations/v2/controller.go",
          "pkg/integrations/v2/controller_test.go",
          "pkg/integrations/v2/register.go"
        ],
        "message": "Dev.dynamic configuration (#1429)\n\n* Merge main -> dev.dynamic_configuration (#1270)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\n\n* Main merge dynamic (#1305)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Main merge dynamic (#1307)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* [RFC] Dynamic Documentation (#1308)\n\n* Documentation and feature flag support. Part 1 of many.\n\n* Fix linting\n\n* Documentation\n\n* More documentation\n\n* MOAR documentation\n\n* Update overall readme\n\n* fix typo\n\n* Update docs/configuration/dynamic-config.md\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* fix typos and add additional comments\n\n* Feedback from PR\n\n* Allow overrides of documentation\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Code to support dynamic configuration. (#1360)\n\n* Code to support dynamic configuration.\n\n* Fix linting errors\n\n* Fix issue with examples and add template parse\n\n* Fix windows issues\n\n* Simplify tests\n\n* Respond to PR feedback\n\n* Simplify tests and remove setting default\n\n* Move to unexported configshim\n\n* Export configshims members for testing\n\n* Simplify singleton checking\n\n* Add error around expand var\n\n* sever -> server\n\n* Better error code\n\n* Fix error when unmarshalling yaml which allowed unexporting fields\n\n* Switch to using require.noerror instead of assert.\n\n* Split tests into two sections and remove redundant tests\n\n* Verbiage cleanup and var renaming\n\n* PR feedback\n\n* PR feedback\n\n* Move singleton check to the controller instead\n\n* Cleanup the read file code to MUCH more compact code.\n\n* Remove EOF\n\n* PR feedback from session with rfratto, lots of changes to simplify the code\n\n* Fix misc feedback from PR\n\n* Dyn main merge (#1423)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\n* Use log format in traces subsystem (#1272)\n\n* Use log format in traces subsystem\n\n* Changelog\n\n* Undo unwanted change\n\n* Fix changelog entry\n\n* integrations-next: Add extra_labels to inject extra labels for an integration (#1312)\n\n* integrations-next: Add extra_labels to inject extra labels for an integration.\n\n* separate tests\n\n* Fix anchor link on operator docs (#1302)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* updated config URL (#1304)\n\nThe existing URL returns a 404: https://grafana.com/docs/agent/latest/getting-started/configuration/_index.md \nUpdated to https://grafana.com/docs/agent/latest/configuration/\n\n* Fix typo in node_exporter (#1325)\n\n* Allow remote_write URL credentials (#1329)\n\n* Bypass Prometheus password redaction\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add inline secret in existing test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\n* Add to scrubbed testcase as well\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Stop appending duplicate exemplars (#1316)\n\n* Add memExemplar in stripeSeries as first iteration\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add test for skipped duplicate exemplars; Simplify conditional\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry; discard test errors\n\n* Move changelog entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add Benchmark for AppendExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Discard error on added benchmark\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use original exemplar struct instead of custom memExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Surround benchmark loop with start/stop timers and close test storage\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add comment about prepopulating exemplars on WAL startup\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in the totalAppendedExemplars metric\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make comment more discoverable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make sure we're recording exemplars for non-nil series ref only\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* integrations-next: wait for integrations to exit after stopping them (#1318)\n\n* integrations-next: wait for integrations to exit after stopping them\n\n* fix lint errors\n\n* minor refactor\n\n* integrations-next: stop holding config mutex for entire reload\n\n* make controller.run authoritative over running integrations\n\n* fix log line\n\n* move running integrations into a dedicated worker pool\n\n* operator/hierarchy: stop using field selector when listing Secrets & ConfigMaps (#1340)\n\nThe initial implementation of hierarchy.KeySelector injected a\nFieldSelector when listing Secrets and ConfigMaps to immediately return\nthe single object being queried for.\n\nThis causes a problem with the client generated by the\ncontroller-runtime framework, where the client is wrapped in a cache and\nfield indexer (where only the namespace is indexed by default).\n\nThis commit avoids using the field selector and the index lookup. The\nresulting behavior aligns more closely with discovering other resources\nin the hierarchy (i.e., ServiceMonitors), where the List call is also\ninsufficient and needs post-processing via Matches to find the final\nlist of resources.\n\nGiven the controller-runtime client uses an informer for reads, all\nrelevant Secrets and ConfigMaps are already in-memory anyway, and using\nthe index for a faster List is a bit of an over-optimization at the\nmoment.\n\n* Add dependabot to update go modules and github actions. (#1217)\n\nSigned-off-by: Tom Wilkie <tom.wilkie@gmail.com>\n\n* smoke framework refactor (#1326)\n\n* Agent smoke test (#1291)\n\n* convert smoke script to go program\n\n* update build for agent-smoke\n\n* fix pr comments\n\n* use existing log helper package\n\n* refactor context cancel\n\n* update exit codes\n\n* use ticker\n\n* prefer oklog/run instead of errgroup\n\n* use nop logger\n\n* refactor task interface\n\n* remove functional options\n\n* log.With for task loggers\n\n* move smoke to tools\n\n* build smoke image, push to internal registry\n\n* move crow to tools\n\n* add gcr_admin secret\n\n* fix link to crow\n\n* add smoke libsonnet and use in local k3d smoke test\n\n* add deletePodBySelectorTask\n\n* scale smoke-test replica down after local test\n\n* refactor smoke Options to Config\n\n* update duration usage message\n\n* add some basic unit tests\n\n* newlines\n\n* pass mutation frequency and chaos frequency from smoke script\n\n* pull crow image from gcr\n\n* update smoke script\n\n* move monitoring to smoke libsonnet\n\n* move additional smoke resources needed in deployment tools\n\n* reference libsonnet files from grafana-agent dep\n\n* make drone\n\n* fix images in smoke script\n\n* get rid of extVars\n\n* update k3d example environment to reference etcd from new location\n\n* update smoke docker builds to use go1.17\n\n* use pointer.Int64\n\n* refactor smoke jsonnet (#1296)\n\n* add policy rule for list and delete pods (#1319)\n\n* refactor smoke.new function to take config object (#1327)\n\n* Apply suggestions from code review\n\n* Update production/tanka/grafana-agent/smoke/crow/main.libsonnet\n\n* Update production/tanka/grafana-agent/smoke/main.libsonnet\n\n* Update example/k3d/scripts/smoke-test.bash\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* readme update (#1338)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Correct link to the configuration (#1036)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Add stale check Github Action (#1345)\n\n* Add a stale check GH action to run every 24 hours\n\n* remove old stale.yml file\n\n* add permissions to action\n\n* update the stale message to clarify when the stale label will get\nremoved\n\n* Update .github/workflows/stale.yml\n\n* stale action: fix missing indent (#1346)\n\n* Fix mssql issue (#1351)\n\n* Add K8s Events integration (#1330)\n\n* Add K8s eventhandler integration (#1310)\n* Add docs and sample manifests to eventhandler integration (#1328)\n* Wait for cache to flush before returning\n* Clarify eventhandler docs (#1334)\n* Clarify docs\n* Update CHANGELOG.md\n* Review changes (#1349)\n\n* stale action: fix typo in label exemptions (#1347)\n\n* update withVolumesMixin for agent jsonnet (#1358)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Configure cluster label using logs client external_labels param (#1357)\n\n* Configure cluster label using logs client external_labels param\n* Update CHANGELOG.md\n\n* add password file and basic auth round tripper in crow (#1361)\n\n* add password file and basic auth round tripper in crow\n\n* add ca-certificates in crow image\n\n* add orgID flag\n\n* update help text\n\n* default send_exemplars to true in remote_write (#1352)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update eventhandler labels (#1368)\n\n* Update eventhandler integration labels\n* Update CHANGELOG\n* Remove unnecessary kind label\n\n* update changelog (#1374)\n\nRemove BUGFIX entries that fix a bug introduced by main (i.e., bugs\nwhich were never part of a release)\n\n* Prepare for release of v0.23.0 (#1377)\n\n* Update version references\n\n* Fix fat-fingered delete; Remove mention of upgrade Go\n\n* RFC: Design in the open (#1055)\n\n* rfc: first draft of RFC0001\n\n* add placeholder for PR\n\n* update PR link\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify \"designing in the open\" is best-effort\n\n* update 0001\n\n* fix dead link in production/README.md\n\n* add recommended sections for RFC proposals\n\n* describe the process for approving a proposal\n\n* ignore RFC template in link checker\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* do my nitty 80-char line length limit change\n\n* indent pros/cons to a single section\n\n* document process for superseding RFCs\n\n* remove RFC mutability requirement\n\n* add extra flavor around not recommending google docs\n\n* require Google Doc -> RFC conversion\n\n* move new files\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Add Grafana Labs SECURITY.md (#1356)\n\nSigned-off-by: Richard Hartmann <richih@richih.org>\n\n* Add readiness check to metrics component (#1369)\n\n* PR Base\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix autoscrape's mockInstance\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in atomic readiness check\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Add CHANGELOG.md entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Reference page to download windows installer (#1372)\n\nFixes #1366\n\n* fix typo in node_exporter_config (#1389)\n\nwhich should be `privileged` instead of `priviliged`\n\n* Add option for Operator to pass arguments to GrafanaAgent #1227 (#1248)\n\n* 1250 oauth2 tracing (#1386)\n\n* Add oauth support for trace Otel trace exporter via opentelemetry-collector-contrib oauth2clientauthextension\n\n* start extensions on collector instance startup\n\nfix decoding to otelconfig\n\nbuild extensions\n\nadd oauth extension to service map\n\n* Update traces config documentation\n\n* lint fixes\n\n* fix godoc comments\n\n* pass exporter index directly to exporter name generator\n\n* PR feedback; Update Changelog\n\n* sort extensions when sorting pipelines for testing determinism\n\n* README: Fix link to agent logo (#1396)\n\n* update MAINTAINERS.md (#1402)\n\n* add smoke alerts to mixin; move local alerts into examples dir (#1397)\n\n* add smoke alerts to mixin; move local alerts into examples dir\n\n* add podPrefix for smoke test\n\n* podPrefix in libsonnet config\n\n* [RFC] Integrations in Grafana Agent Operator (#1224)\n\n* rfc: integrations in grafana agent operator\n\nSupersedes #883\n\n* add missing links\n\n* Apply suggestions from code review\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify how many daemonsets/deployments/service/secrets are created\n\n* add example of defining secrets\n\n* try defining integrations\n\n* s/IntegrationsMonitor/IntegrationMonitor/g\n\n* simplify proposal\n\n* add alternatives\n\n* remove old reference to `hasMetrics` field\n\n* document example generated agent configuration file\n\n* assign ID RFC-0002\n\n* add missing PR link\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* add fake rw endpoint to smoke program (#1405)\n\n* fix alerts typo (#1407)\n\n* continuous delivery for smoke images (#1408)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* fix continuous delivery job errors (#1409)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* [operator] - Use _file variants for basic auth credentials. (#1411)\n\n* use password_file alternatives in operator config\n\n* update tests\n\n* reduce smoke alert noise (#1412)\n\n* reduce smoke alert noise\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update production/grafana-agent-mixin/alerts.libsonnet\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* update cpu check comment\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* add minimum load threshold to cpu alert\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Clarify usage of instanceNamespaceSelector (#1413)\n\n* RFC-0001: Add status to RFC (#1391)\n\n* rfc-0001: add rules for when RFC PRs should be merged\n\n* use status field instead of merge to indicating state\n\n* Parametrize logs DaemonSet K8s manifests (#1420)\n\n* Parametrize logs daemonset K8s manifests\n* Update CHANGELOG.md\n\n* Extend linting configuration file (#1421)\n\n* Add depguard linter to reject packages we tend to avoid\n* Replace golint with revive, since golint is deprecated\n* Remove interfacer, which is deprecated with no replacement\n* Add makezero linter to detect misuse of make with append\n* Add tenv to prefer t.Setenv over os.Setenv in tests\n* Add whitespace to report unnecessary blank lines\n* Ignore test files for errcheck\n\nIn addition to the above, the following changes were made:\n\n* Remove settings that just re-set default values, instead pointing to the website to retrieve defaults.\n* Simplify the errcheck rule to only include functions we actually need to ignore.\n\n* Main merge changes\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: melGL <81323402+melgl@users.noreply.github.com>\nCo-authored-by: Tom Wilkie <tomwilkie@users.noreply.github.com>\nCo-authored-by: Joseph Woodward <josephwoodward@xeuse.com>\nCo-authored-by: hanif <hjet@users.noreply.github.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\nCo-authored-by: laiwei <laiwei.ustc@gmail.com>\nCo-authored-by: Sam <shamsalmon@users.noreply.github.com>\nCo-authored-by: Chris Knutson <christopher.knutson@gmail.com>\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Craig Peterson <192540+captncraig@users.noreply.github.com>\n\n* Main merge 2 (#1426)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\n* Use log format in traces subsystem (#1272)\n\n* Use log format in traces subsystem\n\n* Changelog\n\n* Undo unwanted change\n\n* Fix changelog entry\n\n* integrations-next: Add extra_labels to inject extra labels for an integration (#1312)\n\n* integrations-next: Add extra_labels to inject extra labels for an integration.\n\n* separate tests\n\n* Fix anchor link on operator docs (#1302)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* updated config URL (#1304)\n\nThe existing URL returns a 404: https://grafana.com/docs/agent/latest/getting-started/configuration/_index.md \nUpdated to https://grafana.com/docs/agent/latest/configuration/\n\n* Fix typo in node_exporter (#1325)\n\n* Allow remote_write URL credentials (#1329)\n\n* Bypass Prometheus password redaction\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add inline secret in existing test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\n* Add to scrubbed testcase as well\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Stop appending duplicate exemplars (#1316)\n\n* Add memExemplar in stripeSeries as first iteration\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add test for skipped duplicate exemplars; Simplify conditional\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry; discard test errors\n\n* Move changelog entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add Benchmark for AppendExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Discard error on added benchmark\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use original exemplar struct instead of custom memExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Surround benchmark loop with start/stop timers and close test storage\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add comment about prepopulating exemplars on WAL startup\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in the totalAppendedExemplars metric\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make comment more discoverable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make sure we're recording exemplars for non-nil series ref only\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* integrations-next: wait for integrations to exit after stopping them (#1318)\n\n* integrations-next: wait for integrations to exit after stopping them\n\n* fix lint errors\n\n* minor refactor\n\n* integrations-next: stop holding config mutex for entire reload\n\n* make controller.run authoritative over running integrations\n\n* fix log line\n\n* move running integrations into a dedicated worker pool\n\n* operator/hierarchy: stop using field selector when listing Secrets & ConfigMaps (#1340)\n\nThe initial implementation of hierarchy.KeySelector injected a\nFieldSelector when listing Secrets and ConfigMaps to immediately return\nthe single object being queried for.\n\nThis causes a problem with the client generated by the\ncontroller-runtime framework, where the client is wrapped in a cache and\nfield indexer (where only the namespace is indexed by default).\n\nThis commit avoids using the field selector and the index lookup. The\nresulting behavior aligns more closely with discovering other resources\nin the hierarchy (i.e., ServiceMonitors), where the List call is also\ninsufficient and needs post-processing via Matches to find the final\nlist of resources.\n\nGiven the controller-runtime client uses an informer for reads, all\nrelevant Secrets and ConfigMaps are already in-memory anyway, and using\nthe index for a faster List is a bit of an over-optimization at the\nmoment.\n\n* Add dependabot to update go modules and github actions. (#1217)\n\nSigned-off-by: Tom Wilkie <tom.wilkie@gmail.com>\n\n* smoke framework refactor (#1326)\n\n* Agent smoke test (#1291)\n\n* convert smoke script to go program\n\n* update build for agent-smoke\n\n* fix pr comments\n\n* use existing log helper package\n\n* refactor context cancel\n\n* update exit codes\n\n* use ticker\n\n* prefer oklog/run instead of errgroup\n\n* use nop logger\n\n* refactor task interface\n\n* remove functional options\n\n* log.With for task loggers\n\n* move smoke to tools\n\n* build smoke image, push to internal registry\n\n* move crow to tools\n\n* add gcr_admin secret\n\n* fix link to crow\n\n* add smoke libsonnet and use in local k3d smoke test\n\n* add deletePodBySelectorTask\n\n* scale smoke-test replica down after local test\n\n* refactor smoke Options to Config\n\n* update duration usage message\n\n* add some basic unit tests\n\n* newlines\n\n* pass mutation frequency and chaos frequency from smoke script\n\n* pull crow image from gcr\n\n* update smoke script\n\n* move monitoring to smoke libsonnet\n\n* move additional smoke resources needed in deployment tools\n\n* reference libsonnet files from grafana-agent dep\n\n* make drone\n\n* fix images in smoke script\n\n* get rid of extVars\n\n* update k3d example environment to reference etcd from new location\n\n* update smoke docker builds to use go1.17\n\n* use pointer.Int64\n\n* refactor smoke jsonnet (#1296)\n\n* add policy rule for list and delete pods (#1319)\n\n* refactor smoke.new function to take config object (#1327)\n\n* Apply suggestions from code review\n\n* Update production/tanka/grafana-agent/smoke/crow/main.libsonnet\n\n* Update production/tanka/grafana-agent/smoke/main.libsonnet\n\n* Update example/k3d/scripts/smoke-test.bash\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* readme update (#1338)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Correct link to the configuration (#1036)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Add stale check Github Action (#1345)\n\n* Add a stale check GH action to run every 24 hours\n\n* remove old stale.yml file\n\n* add permissions to action\n\n* update the stale message to clarify when the stale label will get\nremoved\n\n* Update .github/workflows/stale.yml\n\n* stale action: fix missing indent (#1346)\n\n* Fix mssql issue (#1351)\n\n* Add K8s Events integration (#1330)\n\n* Add K8s eventhandler integration (#1310)\n* Add docs and sample manifests to eventhandler integration (#1328)\n* Wait for cache to flush before returning\n* Clarify eventhandler docs (#1334)\n* Clarify docs\n* Update CHANGELOG.md\n* Review changes (#1349)\n\n* stale action: fix typo in label exemptions (#1347)\n\n* update withVolumesMixin for agent jsonnet (#1358)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Configure cluster label using logs client external_labels param (#1357)\n\n* Configure cluster label using logs client external_labels param\n* Update CHANGELOG.md\n\n* add password file and basic auth round tripper in crow (#1361)\n\n* add password file and basic auth round tripper in crow\n\n* add ca-certificates in crow image\n\n* add orgID flag\n\n* update help text\n\n* default send_exemplars to true in remote_write (#1352)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update eventhandler labels (#1368)\n\n* Update eventhandler integration labels\n* Update CHANGELOG\n* Remove unnecessary kind label\n\n* update changelog (#1374)\n\nRemove BUGFIX entries that fix a bug introduced by main (i.e., bugs\nwhich were never part of a release)\n\n* Prepare for release of v0.23.0 (#1377)\n\n* Update version references\n\n* Fix fat-fingered delete; Remove mention of upgrade Go\n\n* RFC: Design in the open (#1055)\n\n* rfc: first draft of RFC0001\n\n* add placeholder for PR\n\n* update PR link\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify \"designing in the open\" is best-effort\n\n* update 0001\n\n* fix dead link in production/README.md\n\n* add recommended sections for RFC proposals\n\n* describe the process for approving a proposal\n\n* ignore RFC template in link checker\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* do my nitty 80-char line length limit change\n\n* indent pros/cons to a single section\n\n* document process for superseding RFCs\n\n* remove RFC mutability requirement\n\n* add extra flavor around not recommending google docs\n\n* require Google Doc -> RFC conversion\n\n* move new files\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Add Grafana Labs SECURITY.md (#1356)\n\nSigned-off-by: Richard Hartmann <richih@richih.org>\n\n* Add readiness check to metrics component (#1369)\n\n* PR Base\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix autoscrape's mockInstance\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in atomic readiness check\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Add CHANGELOG.md entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Reference page to download windows installer (#1372)\n\nFixes #1366\n\n* fix typo in node_exporter_config (#1389)\n\nwhich should be `privileged` instead of `priviliged`\n\n* Add option for Operator to pass arguments to GrafanaAgent #1227 (#1248)\n\n* 1250 oauth2 tracing (#1386)\n\n* Add oauth support for trace Otel trace exporter via opentelemetry-collector-contrib oauth2clientauthextension\n\n* start extensions on collector instance startup\n\nfix decoding to otelconfig\n\nbuild extensions\n\nadd oauth extension to service map\n\n* Update traces config documentation\n\n* lint fixes\n\n* fix godoc comments\n\n* pass exporter index directly to exporter name generator\n\n* PR feedback; Update Changelog\n\n* sort extensions when sorting pipelines for testing determinism\n\n* README: Fix link to agent logo (#1396)\n\n* update MAINTAINERS.md (#1402)\n\n* add smoke alerts to mixin; move local alerts into examples dir (#1397)\n\n* add smoke alerts to mixin; move local alerts into examples dir\n\n* add podPrefix for smoke test\n\n* podPrefix in libsonnet config\n\n* [RFC] Integrations in Grafana Agent Operator (#1224)\n\n* rfc: integrations in grafana agent operator\n\nSupersedes #883\n\n* add missing links\n\n* Apply suggestions from code review\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify how many daemonsets/deployments/service/secrets are created\n\n* add example of defining secrets\n\n* try defining integrations\n\n* s/IntegrationsMonitor/IntegrationMonitor/g\n\n* simplify proposal\n\n* add alternatives\n\n* remove old reference to `hasMetrics` field\n\n* document example generated agent configuration file\n\n* assign ID RFC-0002\n\n* add missing PR link\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* add fake rw endpoint to smoke program (#1405)\n\n* fix alerts typo (#1407)\n\n* continuous delivery for smoke images (#1408)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* fix continuous delivery job errors (#1409)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* [operator] - Use _file variants for basic auth credentials. (#1411)\n\n* use password_file alternatives in operator config\n\n* update tests\n\n* reduce smoke alert noise (#1412)\n\n* reduce smoke alert noise\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update production/grafana-agent-mixin/alerts.libsonnet\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* update cpu check comment\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* add minimum load threshold to cpu alert\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Clarify usage of instanceNamespaceSelector (#1413)\n\n* RFC-0001: Add status to RFC (#1391)\n\n* rfc-0001: add rules for when RFC PRs should be merged\n\n* use status field instead of merge to indicating state\n\n* Parametrize logs DaemonSet K8s manifests (#1420)\n\n* Parametrize logs daemonset K8s manifests\n* Update CHANGELOG.md\n\n* Extend linting configuration file (#1421)\n\n* Add depguard linter to reject packages we tend to avoid\n* Replace golint with revive, since golint is deprecated\n* Remove interfacer, which is deprecated with no replacement\n* Add makezero linter to detect misuse of make with append\n* Add tenv to prefer t.Setenv over os.Setenv in tests\n* Add whitespace to report unnecessary blank lines\n* Ignore test files for errcheck\n\nIn addition to the above, the following changes were made:\n\n* Remove settings that just re-set default values, instead pointing to the website to retrieve defaults.\n* Simplify the errcheck rule to only include functions we actually need to ignore.\n\n* Merging again!\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: melGL <81323402+melgl@users.noreply.github.com>\nCo-authored-by: Tom Wilkie <tomwilkie@users.noreply.github.com>\nCo-authored-by: Joseph Woodward <josephwoodward@xeuse.com>\nCo-authored-by: hanif <hjet@users.noreply.github.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\nCo-authored-by: laiwei <laiwei.ustc@gmail.com>\nCo-authored-by: Sam <shamsalmon@users.noreply.github.com>\nCo-authored-by: Chris Knutson <christopher.knutson@gmail.com>\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Craig Peterson <192540+captncraig@users.noreply.github.com>\n\n* Main merge 2 (#1427)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\n* Use log format in traces subsystem (#1272)\n\n* Use log format in traces subsystem\n\n* Changelog\n\n* Undo unwanted change\n\n* Fix changelog entry\n\n* integrations-next: Add extra_labels to inject extra labels for an integration (#1312)\n\n* integrations-next: Add extra_labels to inject extra labels for an integration.\n\n* separate tests\n\n* Fix anchor link on operator docs (#1302)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* updated config URL (#1304)\n\nThe existing URL returns a 404: https://grafana.com/docs/agent/latest/getting-started/configuration/_index.md \nUpdated to https://grafana.com/docs/agent/latest/configuration/\n\n* Fix typo in node_exporter (#1325)\n\n* Allow remote_write URL credentials (#1329)\n\n* Bypass Prometheus password redaction\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add inline secret in existing test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\n* Add to scrubbed testcase as well\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Stop appending duplicate exemplars (#1316)\n\n* Add memExemplar in stripeSeries as first iteration\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add test for skipped duplicate exemplars; Simplify conditional\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry; discard test errors\n\n* Move changelog entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add Benchmark for AppendExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Discard error on added benchmark\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use original exemplar struct instead of custom memExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Surround benchmark loop with start/stop timers and close test storage\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add comment about prepopulating exemplars on WAL startup\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in the totalAppendedExemplars metric\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make comment more discoverable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make sure we're recording exemplars for non-nil series ref only\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* integrations-next: wait for integrations to exit after stopping them (#1318)\n\n* integrations-next: wait for integrations to exit after stopping them\n\n* fix lint errors\n\n* minor refactor\n\n* integrations-next: stop holding config mutex for entire reload\n\n* make controller.run authoritative over running integrations\n\n* fix log line\n\n* move running integrations into a dedicated worker pool\n\n* operator/hierarchy: stop using field selector when listing Secrets & ConfigMaps (#1340)\n\nThe initial implementation of hierarchy.KeySelector injected a\nFieldSelector when listing Secrets and ConfigMaps to immediately return\nthe single object being queried for.\n\nThis causes a problem with the client generated by the\ncontroller-runtime framework, where the client is wrapped in a cache and\nfield indexer (where only the namespace is indexed by default).\n\nThis commit avoids using the field selector and the index lookup. The\nresulting behavior aligns more closely with discovering other resources\nin the hierarchy (i.e., ServiceMonitors), where the List call is also\ninsufficient and needs post-processing via Matches to find the final\nlist of resources.\n\nGiven the controller-runtime client uses an informer for reads, all\nrelevant Secrets and ConfigMaps are already in-memory anyway, and using\nthe index for a faster List is a bit of an over-optimization at the\nmoment.\n\n* Add dependabot to update go modules and github actions. (#1217)\n\nSigned-off-by: Tom Wilkie <tom.wilkie@gmail.com>\n\n* smoke framework refactor (#1326)\n\n* Agent smoke test (#1291)\n\n* convert smoke script to go program\n\n* update build for agent-smoke\n\n* fix pr comments\n\n* use existing log helper package\n\n* refactor context cancel\n\n* update exit codes\n\n* use ticker\n\n* prefer oklog/run instead of errgroup\n\n* use nop logger\n\n* refactor task interface\n\n* remove functional options\n\n* log.With for task loggers\n\n* move smoke to tools\n\n* build smoke image, push to internal registry\n\n* move crow to tools\n\n* add gcr_admin secret\n\n* fix link to crow\n\n* add smoke libsonnet and use in local k3d smoke test\n\n* add deletePodBySelectorTask\n\n* scale smoke-test replica down after local test\n\n* refactor smoke Options to Config\n\n* update duration usage message\n\n* add some basic unit tests\n\n* newlines\n\n* pass mutation frequency and chaos frequency from smoke script\n\n* pull crow image from gcr\n\n* update smoke script\n\n* move monitoring to smoke libsonnet\n\n* move additional smoke resources needed in deployment tools\n\n* reference libsonnet files from grafana-agent dep\n\n* make drone\n\n* fix images in smoke script\n\n* get rid of extVars\n\n* update k3d example environment to reference etcd from new location\n\n* update smoke docker builds to use go1.17\n\n* use pointer.Int64\n\n* refactor smoke jsonnet (#1296)\n\n* add policy rule for list and delete pods (#1319)\n\n* refactor smoke.new function to take config object (#1327)\n\n* Apply suggestions from code review\n\n* Update production/tanka/grafana-agent/smoke/crow/main.libsonnet\n\n* Update production/tanka/grafana-agent/smoke/main.libsonnet\n\n* Update example/k3d/scripts/smoke-test.bash\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* readme update (#1338)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Correct link to the configuration (#1036)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Add stale check Github Action (#1345)\n\n* Add a stale check GH action to run every 24 hours\n\n* remove old stale.yml file\n\n* add permissions to action\n\n* update the stale message to clarify when the stale label will get\nremoved\n\n* Update .github/workflows/stale.yml\n\n* stale action: fix missing indent (#1346)\n\n* Fix mssql issue (#1351)\n\n* Add K8s Events integration (#1330)\n\n* Add K8s eventhandler integration (#1310)\n* Add docs and sample manifests to eventhandler integration (#1328)\n* Wait for cache to flush before returning\n* Clarify eventhandler docs (#1334)\n* Clarify docs\n* Update CHANGELOG.md\n* Review changes (#1349)\n\n* stale action: fix typo in label exemptions (#1347)\n\n* update withVolumesMixin for agent jsonnet (#1358)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Configure cluster label using logs client external_labels param (#1357)\n\n* Configure cluster label using logs client external_labels param\n* Update CHANGELOG.md\n\n* add password file and basic auth round tripper in crow (#1361)\n\n* add password file and basic auth round tripper in crow\n\n* add ca-certificates in crow image\n\n* add orgID flag\n\n* update help text\n\n* default send_exemplars to true in remote_write (#1352)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update eventhandler labels (#1368)\n\n* Update eventhandler integration labels\n* Update CHANGELOG\n* Remove unnecessary kind label\n\n* update changelog (#1374)\n\nRemove BUGFIX entries that fix a bug introduced by main (i.e., bugs\nwhich were never part of a release)\n\n* Prepare for release of v0.23.0 (#1377)\n\n* Update version references\n\n* Fix fat-fingered delete; Remove mention of upgrade Go\n\n* RFC: Design in the open (#1055)\n\n* rfc: first draft of RFC0001\n\n* add placeholder for PR\n\n* update PR link\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify \"designing in the open\" is best-effort\n\n* update 0001\n\n* fix dead link in production/README.md\n\n* add recommended sections for RFC proposals\n\n* describe the process for approving a proposal\n\n* ignore RFC template in link checker\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* do my nitty 80-char line length limit change\n\n* indent pros/cons to a single section\n\n* document process for superseding RFCs\n\n* remove RFC mutability requirement\n\n* add extra flavor around not recommending google docs\n\n* require Google Doc -> RFC conversion\n\n* move new files\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Add Grafana Labs SECURITY.md (#1356)\n\nSigned-off-by: Richard Hartmann <richih@richih.org>\n\n* Add readiness check to metrics component (#1369)\n\n* PR Base\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix autoscrape's mockInstance\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in atomic readiness check\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Add CHANGELOG.md entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Reference page to download windows installer (#1372)\n\nFixes #1366\n\n* fix typo in node_exporter_config (#1389)\n\nwhich should be `privileged` instead of `priviliged`\n\n* Add option for Operator to pass arguments to GrafanaAgent #1227 (#1248)\n\n* 1250 oauth2 tracing (#1386)\n\n* Add oauth support for trace Otel trace exporter via opentelemetry-collector-contrib oauth2clientauthextension\n\n* start extensions on collector instance startup\n\nfix decoding to otelconfig\n\nbuild extensions\n\nadd oauth extension to service map\n\n* Update traces config documentation\n\n* lint fixes\n\n* fix godoc comments\n\n* pass exporter index directly to exporter name generator\n\n* PR feedback; Update Changelog\n\n* sort extensions when sorting pipelines for testing determinism\n\n* README: Fix link to agent logo (#1396)\n\n* update MAINTAINERS.md (#1402)\n\n* add smoke alerts to mixin; move local alerts into examples dir (#1397)\n\n* add smoke alerts to mixin; move local alerts into examples dir\n\n* add podPrefix for smoke test\n\n* podPrefix in libsonnet config\n\n* [RFC] Integrations in Grafana Agent Operator (#1224)\n\n* rfc: integrations in grafana agent operator\n\nSupersedes #883\n\n* add missing links\n\n* Apply suggestions from code review\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify how many daemonsets/deployments/service/secrets are created\n\n* add example of defining secrets\n\n* try defining integrations\n\n* s/IntegrationsMonitor/IntegrationMonitor/g\n\n* simplify proposal\n\n* add alternatives\n\n* remove old reference to `hasMetrics` field\n\n* document example generated agent configuration file\n\n* assign ID RFC-0002\n\n* add missing PR link\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* add fake rw endpoint to smoke program (#1405)\n\n* fix alerts typo (#1407)\n\n* continuous delivery for smoke images (#1408)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* fix continuous delivery job errors (#1409)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* [operator] - Use _file variants for basic auth credentials. (#1411)\n\n* use password_file alternatives in operator config\n\n* update tests\n\n* reduce smoke alert noise (#1412)\n\n* reduce smoke alert noise\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update production/grafana-agent-mixin/alerts.libsonnet\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* update cpu check comment\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* add minimum load threshold to cpu alert\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Clarify usage of instanceNamespaceSelector (#1413)\n\n* RFC-0001: Add status to RFC (#1391)\n\n* rfc-0001: add rules for when RFC PRs should be merged\n\n* use status field instead of merge to indicating state\n\n* Parametrize logs DaemonSet K8s manifests (#1420)\n\n* Parametrize logs daemonset K8s manifests\n* Update CHANGELOG.md\n\n* Extend linting configuration file (#1421)\n\n* Add depguard linter to reject packages we tend to avoid\n* Replace golint with revive, since golint is deprecated\n* Remove interfacer, which is deprecated with no replacement\n* Add makezero linter to detect misuse of make with append\n* Add tenv to prefer t.Setenv over os.Setenv in tests\n* Add whitespace to report unnecessary blank lines\n* Ignore test files for errcheck\n\nIn addition to the above, the following changes were made:\n\n* Remove settings that just re-set default values, instead pointing to the website to retrieve defaults.\n* Simplify the errcheck rule to only include functions we actually need to ignore.\n\n* Merging again!\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: melGL <81323402+melgl@users.noreply.github.com>\nCo-authored-by: Tom Wilkie <tomwilkie@users.noreply.github.com>\nCo-authored-by: Joseph Woodward <josephwoodward@xeuse.com>\nCo-authored-by: hanif <hjet@users.noreply.github.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\nCo-authored-by: laiwei <laiwei.ustc@gmail.com>\nCo-authored-by: Sam <shamsalmon@users.noreply.github.com>\nCo-authored-by: Chris Knutson <christopher.knutson@gmail.com>\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Craig Peterson <192540+captncraig@users.noreply.github.com>\n\n* Merge main 2 (#1428)\n\n* Update node_exporter dependency to v1.3.1 (#1228)\n\n* Add node_exporter to depcheck\n\n* update weaveworks/common dependency\n\n* map current release flags and changed defaults\n\n* documentation\n\n* revert accidental checkin\n\n* print out flags when node_exporter test fails to assist debugging\n\n* oops, i introduced some flags from master by mistake\n\n* Introduce experimental integrations revamp (#1198)\n\n* [dev.multiple-integrations] Enable present integrations by default, deprecate enabled field (#1062)\n\n* integrations: default to enabled by default\n\n* document deprecation of enabled\n\n* pkg/integrations: support *_configs field for integrations (#1130)\n\nCreates the basic code to unmarshal integrations from a YAML field\ncalled <integration name>_configs, which is a slice of that integration.\n\nNote that this is NOT wired up to the integrations manager yet, and\ntrying to run the agent with more than one integration of the same type\nwill likely cause problems.\n\n* [dev.multiple-integrations] Prototype new integrations subsystem (#1142)\n\n* wip: prototype new integrations subsystem\n\n* implement Controller with basic logic for Integration and UpdateIntegration\n\n* Implement HTTPIntegration for Controller\n\n* decouple controller and subsystem\n\n* don't have controller implement integration\n\nslightly less smelly now\n\n* multiplexer integration\n\n* rely on boilerplate for multiplexing for now\n\ngenerics would be nice here\n\n* remove multiplex_integration.go\n\nAlso a little code smelly. Instead of having integrations that run other\nintegrations, I'm going to fall back to having only one controller.\n\n* introduce Subsystem, unexport Controller\n\nstart wiring up things to Subsystem\n\n* introduce v2 agent integration to use for testing\n\n* start wiring metrics integrations\n\n* rename Options to Globals\n\ncall a spade a spade\n\n* add subsystem options to globals\n\n* remove dead code\n\n* metricsutils: calculate self-scraping based on globals\n\n* complete HTTP target API\n\n* working example with agent integration\n\n* appease the linter\n\n* don't return an error when context to cancel an integration is closed\n\n* once again i am asking the linter to forgive my typos\n\n* fix bug where labels from individual targets were getting dropped at the API endpoint\n\n* pkg/config: fix broken test\n\n* finish unit tests for integrations v2 controller\n\n* metricsutil/metricshandler_integration: make job name unique\n\nBefore this change, the job name would have collided when using multiple\ninstances of the same integration.\n\n* ensure that global subsystem labels are injected into targets\n\n* integrations/v2: Infer target hostname from SD API host (#1175)\n\n* [dev.multiple-integrations] integrations/v2: allow shimming between v1 and v2 integrations. (#1179)\n\n* integrations/v2: allow shimming between v1 and v2 integrations.\n\nShimming is done by changing how the integration registration works; a\nnew RegisterDynamic was added that allows for creating Configs at\nruntime. Here be dragons; this should be removed whenever we no longer\nhave a need for it.\n\n* fix lint\n\n* pkg/integrations/v2: use \"RegisterLegacy\" instead of a generic mechanism\n\n* fine, I won't add the deprecation notice if it will make the linter sad\n\n* pkg/integrations: re-align (#1181)\n\nThis commit reverts 69ba2ddfa9483cc8ac6e010dd7abccd319580c80 in favor of\nallowing the new subsystem to handle multiple instances of integrations.\n\nThis commit also removes the wal_truncate_frequency field from\nintegrations as it is the only field from old integrations that does not\nhave a current counterpart.\n\n* [dev.multiple-integrations] Hide integrations/v2 behind a feature flag (#1185)\n\n* feature flag wip\n\n* dynamically switch between integrations v1 and v2\n\ndefault to v1.\n\n* pkg/integrations/versionselector to file in pkg/config\n\n* pkg/config: fix defaults for Integrations\n\n* pkg/config: use more generic way to unmarshal differently based on flag\n\n* add missing godoc comment\n\n* more comments\n\n* switch to deferred unmarshaling\n\n* remove unused Config field\n\n* simplify completeUnmarshal\n\n* do not perform lazy deferred unmarshaling\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\n* Merge main into dev.multiple-integrations (#1184)\n\n* Fix typo (#1141)\n\n* Traces: Improved pod association in PromSD processor (#1137)\n\n* Improve k8s pod association\n\n* Add tests\n\n* Changelog\n\n* typo\n\n* Add prom_sd_pod_association\n\n* Extend tests for pod associations\n\n* Docs for pod association config\n\n* Lint fixes\n\n* Move to unreleased\n\n* Add instrumentation recommendations\n\n* Remove uncessary constants\n\n* Improve tests\n\n* remote config with http(s) provider (#1143)\n\n* sample remote config code with http provider\n\n* use t.TempDir() in unit test\n\n* no need to clean up after T.TempDir()\n\n* use NewClientFromConfig and make caller responsible for calling SetDirectory\n\n* handle nil HTTPClientConfig\n\n* remove blank identifier assignment\n\n* pass basic auth command line flags for remote config\n\n* address pr nits\n\n* add expiremental flag\n\n* set loader inline\n\n* update changelog\n\n* add remote config section in docs\n\n* pr comment updates\n\n* announce patch releases for cve-2021-41090 (#1152)\n\n* Merge patch release to main (#1153)\n\n* Add secret type to sensitive values\n\n* Break out config tests to their own implementation. Also remove username has a sensitive value.\n\n* Update changelog\n\n* Fix failing test\n\n* Scrub secrets when marshaling instance configs\n\n* update for v0.21\n\n* Updated changes from the merge.\n\n* Remove changelog\n\n* Scrub out receivers has ***receivers_scrubber***:null\n\n* obscure etcd/consul credentials\n\n* Update pkg/traces/config_test.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Update pkg/config/config.go\n\n* go fmt\n\n* Change to using custom object and return <secret>\n\n* Fix bad merge\n\n* [v0.21.2] toggle config endpoint (#19)\n\n* disable /-/config endpoint by default\n\n* disable scraping api get endpoint as well\n\n* fix new test\n\n* add test and rename flag\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Update version to v0.21.2\n\n* Update defaults.go\n\n* fix /-/config endpoint\n\n* also fix non-pointer config bug\n\n* temporarily disable linting for release\n\n* fix lint errors\n\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter (#1162)\n\n* Fix POSTGRES_EXPORTER_DATA_SOURCE_NAME usage for postgres_exporter\n\nA recent change broke the usage of POSTGRES_EXPORTER_DATA_SOURCE_NAME for the postgres_exporter.\nAs the incorrect variable was checked in the if clause, it always raises an error.\n\n* changelog: keep feature -> enhancement -> bugfix order\n\n* postgres_exporter: add regression test\n\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix syntax error in Jsonnet logs helper method (#1174)\n\nSigned-off-by: Nick Pillitteri <nick.pillitteri@grafana.com>\n\n* cAdvisor Integration (#1081)\n\n* Add cadvisor module\n\n* Begin creating common config for cadvisor\n\n* Don't export internal state\n\n* Finish config options for cadvisor\n\n* Set config options, and implement cAdvisor collectors\n\n* Linting\n\n* Buildflags for cadvisor only in linux\n\n* I R LEArN Build Tags\n\n* Don't zero value the zero value\n\n* Offload sketchy global var manipulation to the integrations Run func\n\n* Remove unused collectors\n\n* Lint\n\n* Create generic stub integration and use it for cadvisor\n\n* Lint\n\n* Final refactor of cAdvisor config for unsupported platforms. Pared down stub integrations.\n\n* Lint\n\n* Docs for cadvisor config\n\n* Update changelog\n\n* Update pkg/integrations/stub_integration.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Reorder changelog\n\n* Instance key clarity\n\n* Inclusive naming\n\n* Finish name changes\n\nKeep default disable metric list in sync with upstream\n\nIdiomatic golang\n\n* Hardcode disabled metrics for cadvisor\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Remove log-level flag from systemd unit file (#1177)\n\n* Upgrade to OTel v0.40.0 (#1176)\n\n* Upgrade to OTel v0.40.0\n\n* Changelog\n\n* Add factories check\n\n* go mod tidy\n\n* config/features: create package to standardize experimental features (#1170)\n\n* config/features: create package to standardize experiemental features\n\nThis commit introduces a new package, pkg/config/features, which allows\ndefining a set of features and validating whether flags associated with\nthose features are allowed to be set.\n\nCloses #1163\n\n* update documentation\n\n(also s/enabled-features/enable-features)\n\n* Fix typo\n\n* Update pkg/config/features/features.go\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* enable cadvisor by default\n\n* switch to using real feature flag\n\n* fix postgres_exporter\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Revert \"Merge main into dev.multiple-integrations (#1184)\" (#1189)\n\nThis reverts commit ad76ec54f9a781fc83d3e7001808c887f37833ff.\n\n* [dev.multiple-integrations] Revert breaking changes to existing integrations (#1191)\n\n* revert breaking changes to integrations v1\n\nThis commit reverts #1062 in favor of making breaking changes directly\nin integrations-next instead. The part of #1181 to remove\n`wal_truncate_frequency` has also been reverted.\n\nAs part of this change, the enabled field is removed from the v2\ncommon metrics configs, and v2 integrations can no longer be disabled.\nv2 integrations can only be disabled by removing them from the YAML.\n\n* integrations/v2: remove stale reference to ErrDisabled\n\n(fix typo too)\n\n* integrations/v2: bring in common config decoupling\n\n* [dev.multiple-integrations] Introduce autoscraper (#1195)\n\n* pkg/integrations/v2: introduce self-scraping\n\n* linting\n\n* [dev.multiple-integrations] Multiple instances of integrations (#1196)\n\n* multiple instances of integrations\n\nopt in relevant v1 integrations into supporting multiple instances\n\n* shims should check for instance key override\n\n* Document integrations-next (#1197)\n\n* document integrations-next\n\n* remove json tags since they make markdown unhappy\n\n* changelog\n\n* s/Run/RunIntegration\n\n* remove stale comment about integrations.controller purpose\n\n* create dedicated run method for instanceScraper\n\n* s/expoter/exporter/g\n\n* Document why an autoscrape.Scraper manages a set of per-instance scrapers\n\n* spell out prerequisite instead of pre-req\n\n* use go.uber.org/atomic to make the code a little easier to follow\n\n* remove started callback for running integration\n\n* use smaller interface for autoscrape\n\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Matt Durham <mattdurham@ppog.org>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Fix panic when using 'stdout' in automatic logging (#1233)\n\n* integrations-next: fix bug where v2 integrations were not being strictly unmarshaled (#1235)\n\n* Remove jsonnet vendor folders (#1222)\n\n* remove jsonnet vendor\n\nThis adds all vendor folders into .gitignore and removes cached vendor\nfiles from the repository.\n\nCloses #1221\n\n* Update scripts and instructions for jsonnet vendor removal\n\n* `make example-dashboards` will now also run `jb install`\n* k3d environment instructions now include `jb install`\n* smoke-test.bash will now run `jb install` prior to `tk apply`\n\n* Fix link to k3d example in DEVELOPERS.md (#1242)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix node_exporter upgrade docs (#1239)\n\n* Fix panic in automatic logging with stdout backend (#1243)\n\n* pkg/util: support custom yaml.Unmarshaler implementations for util.UnmarshalYAMLMerged (#1244)\n\nIt's common for config types to have implement yaml.Unmarshaler for:\n\n* Applying defaults\n* Applying extra logic post-unmarshal\n\nIf these config types were unmarshaled through util.UnmarshalYAMLMerged,\nthe yaml.Unmarshaler implementation would never complete successfully,\npreventing the post-unmarshal logic from running.\n\nThis issue was introduced in #1192, but went unnoticed until #1228\nimplemented yaml.Unmarshaler to perform field migrations. #1240 reported\nthe issue.\n\nThis commit fixes the bug by performing a second non-strict unmarshal to\nensure that all input values unmarshal successfully, with the exception\nof unmarshal errors unrelated to unrecognized field names.\n\nThis is hacky, but it's worthwhile noting that util.UnmarshalYAMLMerged\nis a temporary workaround needed for the integrations-next migration,\nand will eventually be removed.\n\n* Update k3d example grafana/grafonnet-lib version (#1246)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Create an e2e framework with support for running tests against k8s (#1234)\n\n* e2e: create an e2e framework with support for running tests against a k3d cluster\n\n* add new E2E drone job\n\n* E2E tests should pass when doing a release\n\n* sign drone.yml again\n\n* move e2e lint to different step that has golangci-lint installed\n\n* upgrade golangci-lint and go for e2e test\n\n* e2e: add gcc\n\n* E2E: install build-essential to get a working full gcc env\n\n* :(\n\n* e2e: support running from inside of docker\n\n* fix lint error\n\n* address review feedback\n\n* Operator: fix bug where /-/ready and /-/healthy always returned 404 (#1252)\n\n* operator: fix bug where /-/ready and /-/healthy always returned 404\n\ncontroller-runtime must have at least one ready/healthy check for the endpoints to exist\n\n* fix lint error, use healthz.Ping\n\n* Make scraping-svc use the new `metrics:` key (#1259)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* update prometheus dependency (#1260)\n\n* corrected typo (#1265)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags (#1264)\n\n* Use RELEASE_TAG to choose between `:main` and `:latest` docker tags\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use :main tag for images in smoke test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set IMAGE_BRANCH_TAG env var in drone and actions pipelines\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove quotes from Makefile variable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Remove force_release action\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* prepare for v0.22.0 release (#1266)\n\n* prepare for v0.22.0 release\n\n* remove E2E pipeline\n\n* Add basic testing framework for operator (#1268)\n\n* remove dedicated go.mod for e2e/\n\n* move e2e/k8s to pkg/util/k8s\n\n* Migrate operator tests to pkg/util/k8s\n\n* remove dedicated e2e tests\n\n* allow skipping TestCluster in pkg/util/k8s\n\n* remove e2e/\n\n* fix bad merge\n\n* fix order of make env args for windows\n\n* actually declare referenced docker volume\n\n* introduce pkg/util/subset for asserting subset of objects\n\n* refactor operator so it's testable\n\n* define basic integration test for operator\n\n* fix lint errors\n\n* fix invalid address in operator test config\n\n* Update release-note.md (#1267)\n\n* Set scrape User-Agent header during init (#1274)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Upgrade to Go 1.17 (#1278)\n\n* Upgrade to 1.17.6 in go.mod and Dockerfiles\n\n* Update CHANGELOG.md to mention the update\n\n* Update Go version in drone/actions pipelines\n\n* Update go.mod, go.sum files via\n\n* Re-sign drone.yml\n\n* Remove leading newline causing drone build to fail\n\n* Bump golangci-lint image to a version using Go 1.17\n\n* Re-attempt to solve linter issue with new golangci-lint image\n\n* Remove suffix of exclude rules\n\n* Clean previous Go version before unpacking Go 1.17\n\n* Also clean up previous Go versions in other steps\n\n* fix typo (#1284)\n\n* Use custom Go version in agent-operator Dockerfile (#1286)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* pkg/operator: refactor resource hierarchy discovery (#1271)\n\n* pkg/operator: refactor resource hierarchy discovery\n\nThis commit moves common logic related to discovering the resource\nhierarchy to pkg/operator/hierarchy. This new package requires less\nboilerplate, which the reconciler is updated to take advantage of.\n\n* remove unused code\n\n* test construction of resource hierarchy\n\n* add missing build constraints\n\n* small extra cleanup to use pointer package\n\n* review feedback\n\n* update agent-build-image for go 1.17 (#1287)\n\n(also use a consistent base image tag instead of latest)\n\n* Skip non-ready entries when listing instances (#1289)\n\n* Skip non-ready instances in LoadInstances()\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Fix panic in prom_sd_processor when address is empty (#1279)\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix panic in prom_sd_processor when address is empty\n\n* Fix docs\n\n* Add test case\n\n* Lint\n\n* Move to unreleased\n\n* Operator: generate proxy_url for remote_write (#1298)\n\n* operator: generate proxy_url for remote_write\n\n* fix weird indentation in test\n\n* Use log format in traces subsystem (#1272)\n\n* Use log format in traces subsystem\n\n* Changelog\n\n* Undo unwanted change\n\n* Fix changelog entry\n\n* integrations-next: Add extra_labels to inject extra labels for an integration (#1312)\n\n* integrations-next: Add extra_labels to inject extra labels for an integration.\n\n* separate tests\n\n* Fix anchor link on operator docs (#1302)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* updated config URL (#1304)\n\nThe existing URL returns a 404: https://grafana.com/docs/agent/latest/getting-started/configuration/_index.md \nUpdated to https://grafana.com/docs/agent/latest/configuration/\n\n* Fix typo in node_exporter (#1325)\n\n* Allow remote_write URL credentials (#1329)\n\n* Bypass Prometheus password redaction\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add inline secret in existing test\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry\n\n* Add to scrubbed testcase as well\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Stop appending duplicate exemplars (#1316)\n\n* Add memExemplar in stripeSeries as first iteration\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add test for skipped duplicate exemplars; Simplify conditional\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add changelog entry; discard test errors\n\n* Move changelog entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add Benchmark for AppendExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Discard error on added benchmark\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Use original exemplar struct instead of custom memExemplar\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Surround benchmark loop with start/stop timers and close test storage\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Add comment about prepopulating exemplars on WAL startup\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in the totalAppendedExemplars metric\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make comment more discoverable\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Make sure we're recording exemplars for non-nil series ref only\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* integrations-next: wait for integrations to exit after stopping them (#1318)\n\n* integrations-next: wait for integrations to exit after stopping them\n\n* fix lint errors\n\n* minor refactor\n\n* integrations-next: stop holding config mutex for entire reload\n\n* make controller.run authoritative over running integrations\n\n* fix log line\n\n* move running integrations into a dedicated worker pool\n\n* operator/hierarchy: stop using field selector when listing Secrets & ConfigMaps (#1340)\n\nThe initial implementation of hierarchy.KeySelector injected a\nFieldSelector when listing Secrets and ConfigMaps to immediately return\nthe single object being queried for.\n\nThis causes a problem with the client generated by the\ncontroller-runtime framework, where the client is wrapped in a cache and\nfield indexer (where only the namespace is indexed by default).\n\nThis commit avoids using the field selector and the index lookup. The\nresulting behavior aligns more closely with discovering other resources\nin the hierarchy (i.e., ServiceMonitors), where the List call is also\ninsufficient and needs post-processing via Matches to find the final\nlist of resources.\n\nGiven the controller-runtime client uses an informer for reads, all\nrelevant Secrets and ConfigMaps are already in-memory anyway, and using\nthe index for a faster List is a bit of an over-optimization at the\nmoment.\n\n* Add dependabot to update go modules and github actions. (#1217)\n\nSigned-off-by: Tom Wilkie <tom.wilkie@gmail.com>\n\n* smoke framework refactor (#1326)\n\n* Agent smoke test (#1291)\n\n* convert smoke script to go program\n\n* update build for agent-smoke\n\n* fix pr comments\n\n* use existing log helper package\n\n* refactor context cancel\n\n* update exit codes\n\n* use ticker\n\n* prefer oklog/run instead of errgroup\n\n* use nop logger\n\n* refactor task interface\n\n* remove functional options\n\n* log.With for task loggers\n\n* move smoke to tools\n\n* build smoke image, push to internal registry\n\n* move crow to tools\n\n* add gcr_admin secret\n\n* fix link to crow\n\n* add smoke libsonnet and use in local k3d smoke test\n\n* add deletePodBySelectorTask\n\n* scale smoke-test replica down after local test\n\n* refactor smoke Options to Config\n\n* update duration usage message\n\n* add some basic unit tests\n\n* newlines\n\n* pass mutation frequency and chaos frequency from smoke script\n\n* pull crow image from gcr\n\n* update smoke script\n\n* move monitoring to smoke libsonnet\n\n* move additional smoke resources needed in deployment tools\n\n* reference libsonnet files from grafana-agent dep\n\n* make drone\n\n* fix images in smoke script\n\n* get rid of extVars\n\n* update k3d example environment to reference etcd from new location\n\n* update smoke docker builds to use go1.17\n\n* use pointer.Int64\n\n* refactor smoke jsonnet (#1296)\n\n* add policy rule for list and delete pods (#1319)\n\n* refactor smoke.new function to take config object (#1327)\n\n* Apply suggestions from code review\n\n* Update production/tanka/grafana-agent/smoke/crow/main.libsonnet\n\n* Update production/tanka/grafana-agent/smoke/main.libsonnet\n\n* Update example/k3d/scripts/smoke-test.bash\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\n\n* readme update (#1338)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Correct link to the configuration (#1036)\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* Add stale check Github Action (#1345)\n\n* Add a stale check GH action to run every 24 hours\n\n* remove old stale.yml file\n\n* add permissions to action\n\n* update the stale message to clarify when the stale label will get\nremoved\n\n* Update .github/workflows/stale.yml\n\n* stale action: fix missing indent (#1346)\n\n* Fix mssql issue (#1351)\n\n* Add K8s Events integration (#1330)\n\n* Add K8s eventhandler integration (#1310)\n* Add docs and sample manifests to eventhandler integration (#1328)\n* Wait for cache to flush before returning\n* Clarify eventhandler docs (#1334)\n* Clarify docs\n* Update CHANGELOG.md\n* Review changes (#1349)\n\n* stale action: fix typo in label exemptions (#1347)\n\n* update withVolumesMixin for agent jsonnet (#1358)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Configure cluster label using logs client external_labels param (#1357)\n\n* Configure cluster label using logs client external_labels param\n* Update CHANGELOG.md\n\n* add password file and basic auth round tripper in crow (#1361)\n\n* add password file and basic auth round tripper in crow\n\n* add ca-certificates in crow image\n\n* add orgID flag\n\n* update help text\n\n* default send_exemplars to true in remote_write (#1352)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update eventhandler labels (#1368)\n\n* Update eventhandler integration labels\n* Update CHANGELOG\n* Remove unnecessary kind label\n\n* update changelog (#1374)\n\nRemove BUGFIX entries that fix a bug introduced by main (i.e., bugs\nwhich were never part of a release)\n\n* Prepare for release of v0.23.0 (#1377)\n\n* Update version references\n\n* Fix fat-fingered delete; Remove mention of upgrade Go\n\n* RFC: Design in the open (#1055)\n\n* rfc: first draft of RFC0001\n\n* add placeholder for PR\n\n* update PR link\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify \"designing in the open\" is best-effort\n\n* update 0001\n\n* fix dead link in production/README.md\n\n* add recommended sections for RFC proposals\n\n* describe the process for approving a proposal\n\n* ignore RFC template in link checker\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Update docs/rfcs/0001-designing-in-the-open.md\n\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* do my nitty 80-char line length limit change\n\n* indent pros/cons to a single section\n\n* document process for superseding RFCs\n\n* remove RFC mutability requirement\n\n* add extra flavor around not recommending google docs\n\n* require Google Doc -> RFC conversion\n\n* move new files\n\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\n\n* Add Grafana Labs SECURITY.md (#1356)\n\nSigned-off-by: Richard Hartmann <richih@richih.org>\n\n* Add readiness check to metrics component (#1369)\n\n* PR Base\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Fix autoscrape's mockInstance\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Wire in atomic readiness check\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Add CHANGELOG.md entry\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Reference page to download windows installer (#1372)\n\nFixes #1366\n\n* fix typo in node_exporter_config (#1389)\n\nwhich should be `privileged` instead of `priviliged`\n\n* Add option for Operator to pass arguments to GrafanaAgent #1227 (#1248)\n\n* 1250 oauth2 tracing (#1386)\n\n* Add oauth support for trace Otel trace exporter via opentelemetry-collector-contrib oauth2clientauthextension\n\n* start extensions on collector instance startup\n\nfix decoding to otelconfig\n\nbuild extensions\n\nadd oauth extension to service map\n\n* Update traces config documentation\n\n* lint fixes\n\n* fix godoc comments\n\n* pass exporter index directly to exporter name generator\n\n* PR feedback; Update Changelog\n\n* sort extensions when sorting pipelines for testing determinism\n\n* README: Fix link to agent logo (#1396)\n\n* update MAINTAINERS.md (#1402)\n\n* add smoke alerts to mixin; move local alerts into examples dir (#1397)\n\n* add smoke alerts to mixin; move local alerts into examples dir\n\n* add podPrefix for smoke test\n\n* podPrefix in libsonnet config\n\n* [RFC] Integrations in Grafana Agent Operator (#1224)\n\n* rfc: integrations in grafana agent operator\n\nSupersedes #883\n\n* add missing links\n\n* Apply suggestions from code review\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* clarify how many daemonsets/deployments/service/secrets are created\n\n* add example of defining secrets\n\n* try defining integrations\n\n* s/IntegrationsMonitor/IntegrationMonitor/g\n\n* simplify proposal\n\n* add alternatives\n\n* remove old reference to `hasMetrics` field\n\n* document example generated agent configuration file\n\n* assign ID RFC-0002\n\n* add missing PR link\n\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\n\n* add fake rw endpoint to smoke program (#1405)\n\n* fix alerts typo (#1407)\n\n* continuous delivery for smoke images (#1408)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* fix continuous delivery job errors (#1409)\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* [operator] - Use _file variants for basic auth credentials. (#1411)\n\n* use password_file alternatives in operator config\n\n* update tests\n\n* reduce smoke alert noise (#1412)\n\n* reduce smoke alert noise\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* Update production/grafana-agent-mixin/alerts.libsonnet\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* update cpu check comment\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* add minimum load threshold to cpu alert\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Clarify usage of instanceNamespaceSelector (#1413)\n\n* RFC-0001: Add status to RFC (#1391)\n\n* rfc-0001: add rules for when RFC PRs should be merged\n\n* use status field instead of merge to indicating state\n\n* Parametrize logs DaemonSet K8s manifests (#1420)\n\n* Parametrize logs daemonset K8s manifests\n* Update CHANGELOG.md\n\n* Extend linting configuration file (#1421)\n\n* Add depguard linter to reject packages we tend to avoid\n* Replace golint with revive, since golint is deprecated\n* Remove interfacer, which is deprecated with no replacement\n* Add makezero linter to detect misuse of make with append\n* Add tenv to prefer t.Setenv over os.Setenv in tests\n* Add whitespace to report unnecessary blank lines\n* Ignore test files for errcheck\n\nIn addition to the above, the following changes were made:\n\n* Remove settings that just re-set default values, instead pointing to the website to retrieve defaults.\n* Simplify the errcheck rule to only include functions we actually need to ignore.\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: melGL <81323402+melgl@users.noreply.github.com>\nCo-authored-by: Tom Wilkie <tomwilkie@users.noreply.github.com>\nCo-authored-by: Joseph Woodward <josephwoodward@xeuse.com>\nCo-authored-by: hanif <hjet@users.noreply.github.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\nCo-authored-by: laiwei <laiwei.ustc@gmail.com>\nCo-authored-by: Sam <shamsalmon@users.noreply.github.com>\nCo-authored-by: Chris Knutson <christopher.knutson@gmail.com>\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Craig Peterson <192540+captncraig@users.noreply.github.com>\n\n* Revert \"Dyn main merge (#1423)\"\n\nThis reverts commit 4c2e07720022a655a0ffa45b05829b26d216145c.\n\n* main merge\n\n* Merges from main\n\n* Linting errors fixed\n\n* Doc movement\n\n* Play with page file. (#1434)\n\n* update smoke alerts (#1432)\n\n* update smoke alerts\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* filter pod variable with namespace\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* update cpu high alert duration to 1h\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* upgrade to loki v2.4.2 (#1422)\n\n* upgrade to loki v2.4.2\n\nSigned-off-by: Robbie Lankford <robert.lankford@grafana.com>\n\n* update CHANGELOG.md\n\n* rename cortex_ metrics to agent_dskit_\n\n* update changelog\n\n* Play with page file.\n\n* Try to fix oom in windows\n\n* Added comments\n\n* Try to find windows mem leak\n\n* Fix errant character\n\n* Fix =\n\n* Removing dynamic configuration tests\n\n* remove memprofile\n\n* switch to windows 2019\n\n* Revert \"Removing dynamic configuration tests\"\n\nThis reverts commit 359c38b5cd781ec32d0ed403befb80401195d899.\n\n* switch to windows 2019 and return tests\n\n* cadvisor config Fixes #1281 (#1293)\n\n* Fixes #1281\n\n* Update pkg/integrations/cadvisor/common.go\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\n\n* gofmt\n\n* Add tests for cadvisor config\n\n* Lint\n\n* simplify test, enhance comments, return nil on run\n\n* Default config slices to values expected by upstream cadvisor\n\n* Build flags to only run cadvisor tests when docker and network are present\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Merging main changes and adding back in test\n\n* Add tests back\n\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\n\n* Revert \"Play with page file. (#1434)\"\n\nThis reverts commit 90bd7f12150fb9d2e989b21f8258098bf8f3c2f2.\n\n* Merge cadvisor\n\n* Adding remote_write test back\n\n* Update CHANGELOG.md\n\nMove bugfix comment\n\nCo-authored-by: Robert Fratto <robert.fratto@grafana.com>\nCo-authored-by: Ursula Kallio <73951760+osg-grafana@users.noreply.github.com>\nCo-authored-by: Mario <mariorvinas@gmail.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: f11r <fiete.gruenter@rwth-aachen.de>\nCo-authored-by: f11r <f11r@users.noreply.github.com>\nCo-authored-by: Nick Pillitteri <56quarters@users.noreply.github.com>\nCo-authored-by: Ryan Geyer <me@ryangeyer.com>\nCo-authored-by: Juraci Paix\u00e3o Kr\u00f6hling <juraci.github@kroehling.de>\nCo-authored-by: Robert Lankford <rlankfo@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Patrick Koenig <pkoenig10@gmail.com>\nCo-authored-by: DataPoints <langer.markus@gmail.com>\nCo-authored-by: Alex <52292902+alexrudd2@users.noreply.github.com>\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: melGL <81323402+melgl@users.noreply.github.com>\nCo-authored-by: Tom Wilkie <tomwilkie@users.noreply.github.com>\nCo-authored-by: Joseph Woodward <josephwoodward@xeuse.com>\nCo-authored-by: hanif <hjet@users.noreply.github.com>\nCo-authored-by: Richard Hartmann <RichiH@users.noreply.github.com>\nCo-authored-by: laiwei <laiwei.ustc@gmail.com>\nCo-authored-by: Sam <shamsalmon@users.noreply.github.com>\nCo-authored-by: Chris Knutson <christopher.knutson@gmail.com>\nCo-authored-by: Florian Klink <flokli@flokli.de>\nCo-authored-by: Craig Peterson <192540+captncraig@users.noreply.github.com>",
        "before_after_code_files": [
          "cmd/agentctl/main.go||cmd/agentctl/main.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/config/config.go||pkg/config/config.go",
          "pkg/config/config_test.go||pkg/config/config_test.go",
          "pkg/config/dynamicconfig.go||pkg/config/dynamicconfig.go",
          "pkg/config/dynamicloader.go||pkg/config/dynamicloader.go",
          "pkg/config/dynamicloader_configs_test.go||pkg/config/dynamicloader_configs_test.go",
          "pkg/config/dynamicloader_template_test.go||pkg/config/dynamicloader_template_test.go",
          "pkg/config/integrations.go||pkg/config/integrations.go",
          "pkg/integrations/v2/controller.go||pkg/integrations/v2/controller.go",
          "pkg/integrations/v2/controller_test.go||pkg/integrations/v2/controller_test.go",
          "pkg/integrations/v2/register.go||pkg/integrations/v2/register.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cmd/agentctl/main.go||cmd/agentctl/main.go": [
          "File: cmd/agentctl/main.go -> cmd/agentctl/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"strings\"",
          "11:  \"time\"",
          "14:  _ \"github.com/grafana/agent/pkg/build\"",
          "15:  \"github.com/grafana/agent/pkg/client/grafanacloud\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"gopkg.in/yaml.v2\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:   samplesCmd(),",
          "61:   operatorDetachCmd(),",
          "62:   cloudConfigCmd(),",
          "63:  )",
          "65:  _ = cmd.Execute()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:   templateDryRunCmd(),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "474:  return cmd",
          "475: }",
          "477: func must(err error) {",
          "478:  if err != nil {",
          "479:   panic(err)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "480: func templateDryRunCmd() *cobra.Command {",
          "481:  cmd := &cobra.Command{",
          "482:   Use:   \"template-parse [directory]\",",
          "483:   Short: \"dry run dynamic configuration\",",
          "484:   Long:  `This will load the dynamic configuration, load configs, run templates and then output the full config as yaml`,",
          "485:   Args:  cobra.ExactArgs(1),",
          "487:   RunE: func(_ *cobra.Command, args []string) error {",
          "488:    cmf, err := config.NewDynamicLoader()",
          "489:    if err != nil {",
          "490:     return err",
          "491:    }",
          "492:    c := &config.Config{}",
          "493:    err = cmf.LoadConfigByPath(args[0])",
          "494:    if err != nil {",
          "495:     return err",
          "496:    }",
          "497:    err = cmf.ProcessConfigs(c)",
          "498:    if err != nil {",
          "499:     return fmt.Errorf(\"error processing config templates %s\", err)",
          "500:    }",
          "502:    outBytes, err := yaml.Marshal(c)",
          "503:    if err != nil {",
          "504:     return err",
          "505:    }",
          "506:    fmt.Println(string(outBytes))",
          "507:    return nil",
          "508:   },",
          "509:  }",
          "511:  return cmd",
          "512: }",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  github.com/gorilla/mux v1.8.0",
          "24:  github.com/grafana/dskit v0.0.0-20211021180445-3bd016e9d7f1",
          "25:  github.com/grafana/loki v1.6.2-0.20220112164614-525040a32657",
          "27:  github.com/hashicorp/go-cleanhttp v0.5.2",
          "28:  github.com/infinityworks/github-exporter v0.0.0-20201016091012-831b72461034",
          "29:  github.com/jsternberg/zap-logfmt v1.2.0",
          "31:  github.com/miekg/dns v1.1.43",
          "32:  github.com/mitchellh/mapstructure v1.4.2",
          "33:  github.com/mitchellh/reflectwalk v1.0.2",
          "",
          "[Removed Lines]",
          "26:  github.com/hashicorp/consul/api v1.11.0",
          "30:  github.com/lib/pq v1.10.1",
          "",
          "[Added Lines]",
          "26:  github.com/hairyhenderson/go-fsimpl v0.0.0-20211102185733-857ee891b38d",
          "27:  github.com/hairyhenderson/gomplate/v3 v3.0.0",
          "28:  github.com/hashicorp/consul/api v1.12.0",
          "30:  github.com/hashicorp/go-multierror v1.1.1",
          "32:  github.com/johannesboyne/gofakes3 v0.0.0-20210819161434-5c8dfcfe5310",
          "34:  github.com/lib/pq v1.10.2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: require (",
          "97:  cloud.google.com/go v0.97.0 // indirect",
          "99:  github.com/Azure/azure-sdk-for-go v58.2.0+incompatible // indirect",
          "100:  github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 // indirect",
          "101:  github.com/Azure/go-autorest v14.2.0+incompatible // indirect",
          "102:  github.com/Azure/go-autorest/autorest v0.11.21 // indirect",
          "",
          "[Removed Lines]",
          "98:  cloud.google.com/go/pubsub v1.5.0 // indirect",
          "",
          "[Added Lines]",
          "102:  cloud.google.com/go/pubsub v1.16.0 // indirect",
          "103:  cloud.google.com/go/storage v1.18.2 // indirect",
          "104:  github.com/Azure/azure-pipeline-go v0.2.3 // indirect",
          "106:  github.com/Azure/azure-storage-blob-go v0.14.0 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "111:  github.com/Masterminds/sprig/v3 v3.2.2 // indirect",
          "112:  github.com/Microsoft/go-winio v0.5.1 // indirect",
          "113:  github.com/Microsoft/hcsshim v0.9.1 // indirect",
          "114:  github.com/StackExchange/wmi v1.2.1 // indirect",
          "115:  github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751 // indirect",
          "116:  github.com/alecthomas/units v0.0.0-20210927113745-59d0afb8317a // indirect",
          "117:  github.com/apache/thrift v0.15.0 // indirect",
          "118:  github.com/armon/go-metrics v0.3.9 // indirect",
          "120:  github.com/beevik/ntp v0.3.0 // indirect",
          "121:  github.com/beorn7/perks v1.0.1 // indirect",
          "122:  github.com/bits-and-blooms/bitset v1.2.0 // indirect",
          "",
          "[Removed Lines]",
          "119:  github.com/aws/aws-sdk-go v1.42.9 // indirect",
          "",
          "[Added Lines]",
          "121:  github.com/ProtonMail/go-crypto v0.0.0-20210920160938-87db9fbc61c7 // indirect",
          "122:  github.com/Shopify/ejson v1.3.1 // indirect",
          "124:  github.com/acomagu/bufpipe v1.0.3 // indirect",
          "129:  github.com/armon/go-radix v1.0.0 // indirect",
          "130:  github.com/aws/aws-sdk-go v1.42.23 // indirect",
          "131:  github.com/aws/aws-sdk-go-v2 v1.9.2 // indirect",
          "132:  github.com/aws/aws-sdk-go-v2/config v1.8.3 // indirect",
          "133:  github.com/aws/aws-sdk-go-v2/credentials v1.4.3 // indirect",
          "134:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.6.0 // indirect",
          "135:  github.com/aws/aws-sdk-go-v2/internal/ini v1.2.4 // indirect",
          "136:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.3.2 // indirect",
          "137:  github.com/aws/aws-sdk-go-v2/service/sso v1.4.2 // indirect",
          "138:  github.com/aws/aws-sdk-go-v2/service/sts v1.7.2 // indirect",
          "139:  github.com/aws/smithy-go v1.8.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "124:  github.com/bmatcuk/doublestar v1.2.2 // indirect",
          "125:  github.com/buger/jsonparser v1.1.1 // indirect",
          "126:  github.com/c2h5oh/datasize v0.0.0-20200112174442-28bbd4740fee // indirect",
          "127:  github.com/cenkalti/backoff/v4 v4.1.2 // indirect",
          "128:  github.com/census-instrumentation/opencensus-proto v0.3.0 // indirect",
          "129:  github.com/cespare/xxhash/v2 v2.1.2 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  github.com/cenkalti/backoff/v3 v3.2.2 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "150:  github.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c // indirect",
          "151:  github.com/docker/go-metrics v0.0.1 // indirect",
          "152:  github.com/docker/go-units v0.4.0 // indirect",
          "153:  github.com/dustin/go-humanize v1.0.0 // indirect",
          "154:  github.com/eapache/go-resiliency v1.2.0 // indirect",
          "155:  github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21 // indirect",
          "156:  github.com/eapache/queue v1.1.0 // indirect",
          "157:  github.com/edsrzf/mmap-go v1.0.0 // indirect",
          "158:  github.com/ema/qdisc v0.0.0-20200603082823-62d0308e3e00 // indirect",
          "159:  github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021 // indirect",
          "160:  github.com/envoyproxy/protoc-gen-validate v0.6.1 // indirect",
          "161:  github.com/euank/go-kmsg-parser v2.0.0+incompatible // indirect",
          "162:  github.com/evanphx/json-patch v4.9.0+incompatible // indirect",
          "164:  github.com/felixge/fgprof v0.9.1 // indirect",
          "165:  github.com/felixge/httpsnoop v1.0.2 // indirect",
          "166:  github.com/fsnotify/fsnotify v1.5.1 // indirect",
          "167:  github.com/fvbommel/sortorder v1.0.2 // indirect",
          "168:  github.com/go-kit/kit v0.12.0 // indirect",
          "169:  github.com/go-ole/go-ole v1.2.6 // indirect",
          "170:  github.com/go-resty/resty/v2 v2.1.1-0.20191201195748-d7b97669fe48 // indirect",
          "",
          "[Removed Lines]",
          "163:  github.com/fatih/color v1.12.0 // indirect",
          "",
          "[Added Lines]",
          "174:  github.com/docker/libkv v0.2.2-0.20180912205406-458977154600 // indirect",
          "176:  github.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad // indirect",
          "182:  github.com/emirpasic/gods v1.12.0 // indirect",
          "187:  github.com/fatih/color v1.13.0 // indirect",
          "192:  github.com/go-git/gcfg v1.5.0 // indirect",
          "193:  github.com/go-git/go-billy/v5 v5.3.1 // indirect",
          "194:  github.com/go-git/go-git/v5 v5.4.2 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "173:  github.com/go-zookeeper/zk v1.0.2 // indirect",
          "174:  github.com/godbus/dbus v0.0.0-20190422162347-ade71ed3457e // indirect",
          "175:  github.com/godbus/dbus/v5 v5.0.4 // indirect",
          "176:  github.com/gogo/googleapis v1.4.1 // indirect",
          "177:  github.com/gogo/status v1.1.0 // indirect",
          "179:  github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect",
          "180:  github.com/golang/snappy v0.0.4 // indirect",
          "181:  github.com/gomodule/redigo v2.0.0+incompatible // indirect",
          "",
          "[Removed Lines]",
          "178:  github.com/golang-jwt/jwt/v4 v4.0.0 // indirect",
          "",
          "[Added Lines]",
          "203:  github.com/gofrs/uuid v4.0.0+incompatible // indirect",
          "206:  github.com/golang-jwt/jwt/v4 v4.1.0 // indirect",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "185:  github.com/google/gofuzz v1.1.0 // indirect",
          "186:  github.com/google/pprof v0.0.0-20211008130755-947d60d73cc0 // indirect",
          "187:  github.com/google/uuid v1.3.0 // indirect",
          "188:  github.com/googleapis/gax-go/v2 v2.1.1 // indirect",
          "189:  github.com/googleapis/gnostic v0.5.4 // indirect",
          "190:  github.com/gophercloud/gophercloud v0.22.0 // indirect",
          "191:  github.com/grobie/gomemcache v0.0.0-20201204163352-08d7c80fcac6 // indirect",
          "192:  github.com/grpc-ecosystem/go-grpc-middleware v1.3.0 // indirect",
          "193:  github.com/grpc-ecosystem/grpc-gateway v1.16.0 // indirect",
          "195:  github.com/hashicorp/go-envparse v0.0.0-20200406174449-d9cfd743a15e // indirect",
          "196:  github.com/hashicorp/go-hclog v0.16.2 // indirect",
          "197:  github.com/hashicorp/go-immutable-radix v1.3.1 // indirect",
          "198:  github.com/hashicorp/go-msgpack v0.5.5 // indirect",
          "200:  github.com/hashicorp/go-rootcerts v1.0.2 // indirect",
          "201:  github.com/hashicorp/go-sockaddr v1.0.2 // indirect",
          "202:  github.com/hashicorp/go-uuid v1.0.2 // indirect",
          "203:  github.com/hashicorp/golang-lru v0.5.4 // indirect",
          "204:  github.com/hashicorp/hcl v1.0.0 // indirect",
          "207:  github.com/hetznercloud/hcloud-go v1.32.0 // indirect",
          "208:  github.com/hodgesds/perf-utils v0.4.0 // indirect",
          "209:  github.com/hpcloud/tail v1.0.0 // indirect",
          "",
          "[Removed Lines]",
          "194:  github.com/hashicorp/errwrap v1.0.0 // indirect",
          "199:  github.com/hashicorp/go-multierror v1.1.1 // indirect",
          "205:  github.com/hashicorp/memberlist v0.2.4 // indirect",
          "206:  github.com/hashicorp/serf v0.9.5 // indirect",
          "",
          "[Added Lines]",
          "216:  github.com/google/wire v0.5.0 // indirect",
          "220:  github.com/gosimple/slug v1.12.0 // indirect",
          "221:  github.com/gosimple/unidecode v1.0.1 // indirect",
          "225:  github.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf // indirect",
          "226:  github.com/hashicorp/errwrap v1.1.0 // indirect",
          "231:  github.com/hashicorp/go-plugin v1.4.3 // indirect",
          "232:  github.com/hashicorp/go-retryablehttp v0.7.0 // indirect",
          "234:  github.com/hashicorp/go-secure-stdlib/mlock v0.1.1 // indirect",
          "235:  github.com/hashicorp/go-secure-stdlib/parseutil v0.1.1 // indirect",
          "236:  github.com/hashicorp/go-secure-stdlib/strutil v0.1.1 // indirect",
          "239:  github.com/hashicorp/go-version v1.3.0 // indirect",
          "242:  github.com/hashicorp/memberlist v0.3.0 // indirect",
          "243:  github.com/hashicorp/serf v0.9.6 // indirect",
          "244:  github.com/hashicorp/vault/api v1.3.0 // indirect",
          "245:  github.com/hashicorp/vault/sdk v0.3.0 // indirect",
          "246:  github.com/hashicorp/yamux v0.0.0-20190923154419-df201c70410d // indirect",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "215:  github.com/influxdata/go-syslog/v3 v3.0.1-0.20201128200927-a1889d947b48 // indirect",
          "216:  github.com/influxdata/telegraf v1.16.3 // indirect",
          "217:  github.com/jaegertracing/jaeger v1.28.0 // indirect",
          "218:  github.com/jcmturner/aescts/v2 v2.0.0 // indirect",
          "219:  github.com/jcmturner/dnsutils/v2 v2.0.0 // indirect",
          "220:  github.com/jcmturner/gofork v1.0.0 // indirect",
          "221:  github.com/jcmturner/gokrb5/v8 v8.4.2 // indirect",
          "222:  github.com/jcmturner/rpc/v2 v2.0.3 // indirect",
          "223:  github.com/jmespath/go-jmespath v0.4.0 // indirect",
          "224:  github.com/josharian/native v0.0.0-20200817173448-b6b71def0850 // indirect",
          "225:  github.com/jpillora/backoff v1.0.0 // indirect",
          "226:  github.com/jsimonetti/rtnetlink v0.0.0-20211022192332-93da33804786 // indirect",
          "227:  github.com/json-iterator/go v1.1.12 // indirect",
          "228:  github.com/karrick/godirwalk v1.16.1 // indirect",
          "229:  github.com/klauspost/compress v1.13.6 // indirect",
          "230:  github.com/knadh/koanf v1.3.2 // indirect",
          "231:  github.com/kolo/xmlrpc v0.0.0-20201022064351-38db28db192b // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:  github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 // indirect",
          "265:  github.com/joho/godotenv v1.4.0 // indirect",
          "271:  github.com/kevinburke/ssh_config v1.1.0 // indirect",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "236:  github.com/linode/linodego v1.1.0 // indirect",
          "237:  github.com/lufia/iostat v1.2.1 // indirect",
          "238:  github.com/magiconair/properties v1.8.5 // indirect",
          "240:  github.com/mattn/go-isatty v0.0.14 // indirect",
          "241:  github.com/mattn/go-runewidth v0.0.9 // indirect",
          "242:  github.com/mattn/go-xmlrpc v0.0.3 // indirect",
          "",
          "[Removed Lines]",
          "239:  github.com/mattn/go-colorable v0.1.8 // indirect",
          "",
          "[Added Lines]",
          "282:  github.com/mattn/go-colorable v0.1.9 // indirect",
          "283:  github.com/mattn/go-ieproxy v0.0.1 // indirect",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "250:  github.com/mistifyio/go-zfs v2.1.2-0.20190413222219-f784269be439+incompatible // indirect",
          "251:  github.com/mitchellh/copystructure v1.2.0 // indirect",
          "252:  github.com/mitchellh/go-homedir v1.1.0 // indirect",
          "253:  github.com/moby/sys/mount v0.3.0 // indirect",
          "254:  github.com/moby/sys/mountinfo v0.5.0 // indirect",
          "255:  github.com/moby/term v0.0.0-20210619224110-3f7ff695adc6 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297:  github.com/mitchellh/go-testing-interface v1.0.0 // indirect",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "286:  github.com/prometheus/exporter-toolkit v0.7.0 // indirect",
          "287:  github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 // indirect",
          "288:  github.com/rs/cors v1.8.0 // indirect",
          "289:  github.com/safchain/ethtool v0.1.0 // indirect",
          "290:  github.com/samuel/go-zookeeper v0.0.0-20190923202752-2cc03de413da // indirect",
          "291:  github.com/satori/go.uuid v1.2.1-0.20181028125025-b2ce2384e17b // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:  github.com/rs/zerolog v1.26.1 // indirect",
          "335:  github.com/ryanuber/go-glob v1.0.0 // indirect",
          "336:  github.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46 // indirect",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "293:  github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529 // indirect",
          "294:  github.com/seccomp/libseccomp-golang v0.9.1 // indirect",
          "295:  github.com/sercand/kuberesolver v2.4.0+incompatible // indirect",
          "296:  github.com/shirou/gopsutil v3.21.8+incompatible // indirect",
          "297:  github.com/shopspring/decimal v1.2.0 // indirect",
          "298:  github.com/shurcooL/httpfs v0.0.0-20190707220628-8d4bc4ba7749 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "344:  github.com/sergi/go-diff v1.2.0 // indirect",
          "345:  github.com/shabbyrobe/gocovmerge v0.0.0-20190829150210-3e036491d500 // indirect",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "312:  github.com/tklauser/numcpus v0.3.0 // indirect",
          "313:  github.com/tomnomnom/linkheader v0.0.0-20180905144013-02ca5825eb80 // indirect",
          "314:  github.com/uber/jaeger-lib v2.4.1+incompatible // indirect",
          "315:  github.com/vishvananda/netlink v1.1.1-0.20201029203352-d40f9887b852 // indirect",
          "316:  github.com/vishvananda/netns v0.0.0-20200728191858-db3c7e526aae // indirect",
          "317:  github.com/weaveworks/promrus v1.2.0 // indirect",
          "318:  github.com/xdg-go/pbkdf2 v1.0.0 // indirect",
          "319:  github.com/xdg-go/scram v1.0.2 // indirect",
          "320:  github.com/xdg-go/stringprep v1.0.2 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:  github.com/ugorji/go/codec v1.2.6 // indirect",
          "369:  github.com/xanzy/ssh-agent v0.3.1 // indirect",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "324:  github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect",
          "325:  github.com/xeipuuv/gojsonschema v1.2.0 // indirect",
          "326:  github.com/youmark/pkcs8 v0.0.0-20181117223130-1be2e3e5546d // indirect",
          "327:  go.etcd.io/etcd v3.3.25+incompatible // indirect",
          "328:  go.etcd.io/etcd/api/v3 v3.5.0 // indirect",
          "329:  go.etcd.io/etcd/client/pkg/v3 v3.5.0 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "379:  github.com/zealic/xignore v0.3.3 // indirect",
          "380:  go.etcd.io/bbolt v1.3.6 // indirect",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "336:  go.uber.org/goleak v1.1.12 // indirect",
          "337:  go4.org/intern v0.0.0-20210108033219-3eb7198706b2 // indirect",
          "338:  go4.org/unsafe/assume-no-moving-gc v0.0.0-20201222180813-1025295fd063 // indirect",
          "341:  golang.org/x/oauth2 v0.0.0-20211005180243-6b3c2da341f1 // indirect",
          "342:  golang.org/x/sync v0.0.0-20210220032951-036812b2e83c // indirect",
          "344:  golang.org/x/text v0.3.7 // indirect",
          "345:  golang.org/x/time v0.0.0-20210723032227-1f47c861a9ac // indirect",
          "346:  gomodules.xyz/jsonpatch/v2 v2.1.0 // indirect",
          "347:  google.golang.org/api v0.59.0 // indirect",
          "348:  google.golang.org/appengine v1.6.7 // indirect",
          "",
          "[Removed Lines]",
          "339:  golang.org/x/crypto v0.0.0-20210921155107-089bfa567519 // indirect",
          "340:  golang.org/x/net v0.0.0-20211111160137-58aab5ef257a // indirect",
          "343:  golang.org/x/term v0.0.0-20210615171337-6886f2dfbf5b // indirect",
          "",
          "[Added Lines]",
          "393:  gocloud.dev v0.24.0 // indirect",
          "394:  golang.org/x/crypto v0.0.0-20211215165025-cf75a172585e // indirect",
          "395:  golang.org/x/net v0.0.0-20211209124913-491a49abca63 // indirect",
          "398:  golang.org/x/term v0.0.0-20210916214954-140adaaadfaf // indirect",
          "401:  golang.org/x/tools v0.1.7 // indirect",
          "402:  golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 // indirect",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "353:  gopkg.in/inf.v0 v0.9.1 // indirect",
          "354:  gopkg.in/ini.v1 v1.64.0 // indirect",
          "355:  gopkg.in/mgo.v2 v2.0.0-20190816093944-a6b53ec6cb22 // indirect",
          "356:  gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 // indirect",
          "357:  inet.af/netaddr v0.0.0-20210903134321-85fa6c94624e // indirect",
          "358:  k8s.io/component-base v0.21.0 // indirect",
          "359:  k8s.io/kube-openapi v0.0.0-20210305001622-591a79e4bda7 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "413:  gopkg.in/square/go-jose.v2 v2.6.0 // indirect",
          "415:  gopkg.in/warnings.v0 v0.1.2 // indirect",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "423: replace github.com/leoluk/perflib_exporter v0.1.0 => github.com/grafana/perflib_exporter v0.1.1-0.20211013152516-e37e14fb8b0a",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "485: replace github.com/hairyhenderson/gomplate/v3 => github.com/mattdurham/gomplate/v3 v3.10.1-0.20220204190650-af65008b9bb1",
          "488: exclude github.com/hashicorp/vault v0.10.3",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: bazil.org/fuse v0.0.0-20160811212531-371fbbdaa898/go.mod h1:Xbm+BRKSBEpa4q4hTSxohYNQpsxXPbPry4JJWOB3LB8=",
          "2: cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "3: cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "4: cloud.google.com/go v0.37.4/go.mod h1:NHPJ89PdicEuT9hdPXMROBD91xc5uRDxsMtSB16k7hw=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: bazil.org/fuse v0.0.0-20180421153158-65cc252bf669/go.mod h1:Xbm+BRKSBEpa4q4hTSxohYNQpsxXPbPry4JJWOB3LB8=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15: cloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=",
          "16: cloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=",
          "17: cloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=",
          "19: cloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=",
          "20: cloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=",
          "21: cloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=",
          "22: cloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=",
          "23: cloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=",
          "24: cloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=",
          "25: cloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=",
          "26: cloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=",
          "27: cloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=",
          "28: cloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=",
          "29: cloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=",
          "30: cloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=",
          "31: cloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=",
          "32: cloud.google.com/go v0.97.0 h1:3DXvAyifywvq64LfkKaMOmkWPS1CikIQdMe2lY9vxU8=",
          "33: cloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=",
          "",
          "[Removed Lines]",
          "18: cloud.google.com/go v0.60.0/go.mod h1:yw2G51M9IfRboUH61Us8GqCeF1PzPblB823Mn2q2eAU=",
          "",
          "[Added Lines]",
          "23: cloud.google.com/go v0.75.0/go.mod h1:VGuuCn7PG0dwsd5XPVm2Mm3wlh3EL55/79EKB6hlPTY=",
          "27: cloud.google.com/go v0.82.0/go.mod h1:vlKccHJGuFBFufnAnuB08dfEH9Y3H7dzDzRECFdC2TA=",
          "31: cloud.google.com/go v0.88.0/go.mod h1:dnKwfYbP9hQhefiUvpbcAyoGSHUrOxR20JVElLiUvEY=",
          "32: cloud.google.com/go v0.89.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=",
          "34: cloud.google.com/go v0.92.2/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=",
          "35: cloud.google.com/go v0.92.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=",
          "37: cloud.google.com/go v0.94.0/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43: cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=",
          "44: cloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=",
          "45: cloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=",
          "46: cloud.google.com/go/firestore v1.6.0/go.mod h1:afJwI0vaXwAG54kI7A//lP/lSPDkQORQuMkv56TxEPU=",
          "47: cloud.google.com/go/kms v1.0.0 h1:YkIeqPXqTAlwXk3Z2/WG0d6h1tqJQjU354WftjEoP9E=",
          "48: cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=",
          "49: cloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=",
          "50: cloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=",
          "51: cloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=",
          "54: cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=",
          "55: cloud.google.com/go/storage v1.3.0/go.mod h1:9IAwXhoyBJ7z9LcAwkj0/7NnPzYaPeZxxVp3zm+5IqA=",
          "56: cloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=",
          "57: cloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=",
          "58: cloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=",
          "59: cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=",
          "60: code.cloudfoundry.org/bytefmt v0.0.0-20190710193110-1eb035ffe2b6/go.mod h1:wN/zk7mhREp/oviagqUXY3EwuHhWyOvAdsn5Y4CzOrc=",
          "61: code.cloudfoundry.org/clock v1.0.0/go.mod h1:QD9Lzhd/ux6eNQVUDVRJX/RKTigpewimNYBi7ivZKY8=",
          "62: collectd.org v0.3.0/go.mod h1:A/8DzQBkF6abtvrT2j/AU/4tiBgJWYyh0y/oB/4MlWE=",
          "63: contrib.go.opencensus.io/exporter/prometheus v0.4.0 h1:0QfIkj9z/iVZgK31D9H9ohjjIDApI2GOPScCKwxedbs=",
          "64: contrib.go.opencensus.io/exporter/prometheus v0.4.0/go.mod h1:o7cosnyfuPVK0tB8q0QmaQNhGnptITnPQB+z1+qeFB0=",
          "65: dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=",
          "66: github.com/AlekSi/pointer v1.1.0 h1:SSDMPcXD9jSl8FPy9cRzoRaMJtm9g9ggGTxecRUbQoI=",
          "67: github.com/AlekSi/pointer v1.1.0/go.mod h1:y7BvfRI3wXPWKXEBhU71nbnIEEZX0QTSB2Bj48UJIZE=",
          "68: github.com/Azure/azure-amqp-common-go/v3 v3.0.0/go.mod h1:SY08giD/XbhTz07tJdpw1SoxQXHPN30+DI3Z04SYqyg=",
          "69: github.com/Azure/azure-event-hubs-go/v3 v3.2.0/go.mod h1:BPIIJNH/l/fVHYq3Rm6eg4clbrULrQ3q7+icmqHyyLc=",
          "70: github.com/Azure/azure-pipeline-go v0.1.8/go.mod h1:XA1kFWRVhSK+KNFiOhfv83Fv8L9achrP7OxIzeTn1Yg=",
          "71: github.com/Azure/azure-pipeline-go v0.1.9/go.mod h1:XA1kFWRVhSK+KNFiOhfv83Fv8L9achrP7OxIzeTn1Yg=",
          "72: github.com/Azure/azure-pipeline-go v0.2.1/go.mod h1:UGSo8XybXnIGZ3epmeBw7Jdz+HiUVpqIlpz/HKHylF4=",
          "73: github.com/Azure/azure-pipeline-go v0.2.2/go.mod h1:4rQ/NZncSvGqNkkOsNpOU1tgoNuIlp9AfUH5G1tvCHc=",
          "74: github.com/Azure/azure-pipeline-go v0.2.3/go.mod h1:x841ezTBIMG6O3lAcl8ATHnsOPVl2bqk7S3ta6S6u4k=",
          "75: github.com/Azure/azure-sdk-for-go v36.2.0+incompatible h1:09cv2WoH0g6jl6m2iT+R9qcIPZKhXEL0sbmLhxP895s=",
          "76: github.com/Azure/azure-sdk-for-go v36.2.0+incompatible/go.mod h1:9XXNKU+eRnpl9moKnB4QOLf1HestfXbmab5FXxiDBjc=",
          "77: github.com/Azure/azure-storage-blob-go v0.6.0/go.mod h1:oGfmITT1V6x//CswqY2gtAHND+xIP64/qL7a5QJix0Y=",
          "78: github.com/Azure/azure-storage-blob-go v0.8.0/go.mod h1:lPI3aLPpuLTeUwh1sViKXFxwl2B6teiRqI0deQUvsw0=",
          "79: github.com/Azure/azure-storage-blob-go v0.13.0/go.mod h1:pA9kNqtjUeQF2zOSu4s//nUdBD+e64lEuc4sVnuOfNs=",
          "80: github.com/Azure/azure-storage-queue-go v0.0.0-20181215014128-6ed74e755687/go.mod h1:K6am8mT+5iFXgingS9LUc7TmbsW6XBw3nxaRyaMyWc8=",
          "81: github.com/Azure/go-amqp v0.12.6/go.mod h1:qApuH6OFTSKZFmCOxccvAv5rLizBQf4v8pRmG138DPo=",
          "82: github.com/Azure/go-ansiterm v0.0.0-20170929234023-d6e3b3328b78/go.mod h1:LmzpDX56iTiv29bbRTIsUNlaFfuhWRQBWjQdVyAevI8=",
          "83: github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=",
          "84: github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=",
          "",
          "[Removed Lines]",
          "52: cloud.google.com/go/pubsub v1.5.0 h1:9cH52jizPUVSSrSe+J16RC9wB0QI7i/cfuCm5UUCcIk=",
          "53: cloud.google.com/go/pubsub v1.5.0/go.mod h1:ZEwJccE3z93Z2HWvstpri00jOg7oO4UZDtKhwDwqF0w=",
          "",
          "[Added Lines]",
          "53: cloud.google.com/go/firestore v1.5.0/go.mod h1:c4nNYR1qdq7eaZ+jSc5fonrQN2k3M7sWATcYTiakjEo=",
          "55: cloud.google.com/go/kms v0.1.0/go.mod h1:8Qp8PCAypHg4FdmlyW1QRAv09BGQ9Uzh7JnmIZxPk+c=",
          "57: cloud.google.com/go/monitoring v0.1.0/go.mod h1:Hpm3XfzJv+UTiXzCG5Ffp0wijzHTC7Cv4eR7o3x/fEE=",
          "62: cloud.google.com/go/pubsub v1.16.0 h1:N2WVmm3vmoBo8+cbBgwACB8ZKUP/YQvG2ujHx47/oXY=",
          "63: cloud.google.com/go/pubsub v1.16.0/go.mod h1:6A8EfoWZ/lUvCWStKGwAWauJZSiuV0Mkmu6WilK/TxQ=",
          "64: cloud.google.com/go/secretmanager v0.1.0/go.mod h1:3nGKHvnzDUVit7U0S9KAKJ4aOsO1xtwRG+7ey5LK1bM=",
          "71: cloud.google.com/go/storage v1.16.1/go.mod h1:LaNorbty3ehnU3rEjXSNV/NRgQA0O8Y+uh6bPe5UOk4=",
          "72: cloud.google.com/go/storage v1.18.2 h1:5NQw6tOn3eMm0oE8vTkfjau18kjL79FlMjy/CHTpmoY=",
          "73: cloud.google.com/go/storage v1.18.2/go.mod h1:AiIj7BWXyhO5gGVmYJ+S8tbkCx3yb0IMjua8Aw4naVM=",
          "74: cloud.google.com/go/trace v0.1.0/go.mod h1:wxEwsoeRVPbeSkt7ZC9nWCgmoKQRAoySN7XHW2AmI7g=",
          "78: contrib.go.opencensus.io/exporter/aws v0.0.0-20200617204711-c478e41e60e9/go.mod h1:uu1P0UCM/6RbsMrgPa98ll8ZcHM858i/AD06a9aLRCA=",
          "81: contrib.go.opencensus.io/exporter/stackdriver v0.13.8/go.mod h1:huNtlWx75MwO7qMs0KrMxPZXzNNWebav1Sq/pm02JdQ=",
          "82: contrib.go.opencensus.io/integrations/ocsql v0.1.7/go.mod h1:8DsSdjz3F+APR+0z0WkU1aRorQCFfRxvqjUUPMbF3fE=",
          "87: github.com/Azure/azure-amqp-common-go/v3 v3.1.0/go.mod h1:PBIGdzcO1teYoufTKMcGibdKaYZv4avS+O6LNIp8bq0=",
          "88: github.com/Azure/azure-amqp-common-go/v3 v3.1.1/go.mod h1:YsDaPfaO9Ub2XeSKdIy2DfwuiQlHQCauHJwSqtrkECI=",
          "94: github.com/Azure/azure-pipeline-go v0.2.3 h1:7U9HBg1JFK3jHl5qmo4CTZKFTVgMwdFHMVtCdfBE21U=",
          "98: github.com/Azure/azure-service-bus-go v0.10.16/go.mod h1:MlkLwGGf1ewcx5jZadn0gUEty+tTg0RaElr6bPf+QhI=",
          "102: github.com/Azure/azure-storage-blob-go v0.14.0 h1:1BCg74AmVdYwO3dlKwtFU1V0wU2PZdREkXvAmZJRUlM=",
          "103: github.com/Azure/azure-storage-blob-go v0.14.0/go.mod h1:SMqIBi+SuiQH32bvyjngEewEeXoPfKMgWlBDaYf6fck=",
          "106: github.com/Azure/go-amqp v0.13.0/go.mod h1:qj+o8xPCz9tMSbQ83Vp8boHahuRDl5mkNHyt1xlxUTs=",
          "107: github.com/Azure/go-amqp v0.13.11/go.mod h1:D5ZrjQqB1dyp1A+G73xeL/kNn7D5qHJIIsNNps7YNmk=",
          "108: github.com/Azure/go-amqp v0.13.12/go.mod h1:D5ZrjQqB1dyp1A+G73xeL/kNn7D5qHJIIsNNps7YNmk=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90: github.com/Azure/go-autorest/autorest v0.9.0/go.mod h1:xyHB1BMZT0cuDHU7I0+g046+BFDTQ8rEZB0s4Yfa6bI=",
          "91: github.com/Azure/go-autorest/autorest v0.9.3-0.20191028180845-3492b2aff503/go.mod h1:xyHB1BMZT0cuDHU7I0+g046+BFDTQ8rEZB0s4Yfa6bI=",
          "92: github.com/Azure/go-autorest/autorest v0.9.3/go.mod h1:GsRuLYvwzLjjjRoWEIyMUaYq8GNUx2nRB378IPt/1p0=",
          "93: github.com/Azure/go-autorest/autorest v0.11.9/go.mod h1:eipySxLmqSyC5s5k1CLupqet0PSENBEDP93LQ9a8QYw=",
          "94: github.com/Azure/go-autorest/autorest v0.11.12/go.mod h1:eipySxLmqSyC5s5k1CLupqet0PSENBEDP93LQ9a8QYw=",
          "95: github.com/Azure/go-autorest/autorest v0.11.17/go.mod h1:eipySxLmqSyC5s5k1CLupqet0PSENBEDP93LQ9a8QYw=",
          "96: github.com/Azure/go-autorest/autorest v0.11.21 h1:w77zY/9RnUAWcIQyDC0Fc89mCvwftR8F+zsR/OH6enk=",
          "97: github.com/Azure/go-autorest/autorest v0.11.21/go.mod h1:Do/yuMSW/13ayUkcVREpsMHGG+MvV81uzSCFgYPj4tM=",
          "98: github.com/Azure/go-autorest/autorest/adal v0.5.0/go.mod h1:8Z9fGy2MpX0PvDjB1pEgQTmVqjGhiHBW7RJJEciWzS0=",
          "99: github.com/Azure/go-autorest/autorest/adal v0.8.0/go.mod h1:Z6vX6WXXuyieHAXwMj0S6HY6e6wcHn37qQMBQlvY3lc=",
          "100: github.com/Azure/go-autorest/autorest/adal v0.8.1-0.20191028180845-3492b2aff503/go.mod h1:Z6vX6WXXuyieHAXwMj0S6HY6e6wcHn37qQMBQlvY3lc=",
          "101: github.com/Azure/go-autorest/autorest/adal v0.8.1/go.mod h1:ZjhuQClTqx435SRJ2iMlOxPYt3d2C/T/7TiQCVZSn3Q=",
          "102: github.com/Azure/go-autorest/autorest/adal v0.9.2/go.mod h1:/3SMAM86bP6wC9Ev35peQDUeqFZBMH07vvUOmg4z/fE=",
          "103: github.com/Azure/go-autorest/autorest/adal v0.9.5/go.mod h1:B7KF7jKIeC9Mct5spmyCB/A8CG/sEz1vwIRGv/bbw7A=",
          "104: github.com/Azure/go-autorest/autorest/adal v0.9.11/go.mod h1:nBKAnTomx8gDtl+3ZCJv2v0KACFHWTB2drffI1B68Pk=",
          "105: github.com/Azure/go-autorest/autorest/adal v0.9.14/go.mod h1:W/MM4U6nLxnIskrw4UwWzlHfGjwUS50aOsc/I3yuU8M=",
          "106: github.com/Azure/go-autorest/autorest/adal v0.9.16 h1:P8An8Z9rH1ldbOLdFpxYorgOt2sywL9V24dAwWHPuGc=",
          "107: github.com/Azure/go-autorest/autorest/adal v0.9.16/go.mod h1:tGMin8I49Yij6AQ+rvV+Xa/zwxYQB5hmsd6DkfAx2+A=",
          "108: github.com/Azure/go-autorest/autorest/azure/auth v0.4.2/go.mod h1:90gmfKdlmKgfjUpnCEpOJzsUEjrWDSLwHIG73tSXddM=",
          "109: github.com/Azure/go-autorest/autorest/azure/auth v0.5.3/go.mod h1:4bJZhUhcq8LB20TruwHbAQsmUs2Xh+QR7utuJpLXX3A=",
          "110: github.com/Azure/go-autorest/autorest/azure/auth v0.5.8/go.mod h1:kxyKZTSfKh8OVFWPAgOgQ/frrJgeYQJPyR5fLFmXko4=",
          "111: github.com/Azure/go-autorest/autorest/azure/cli v0.3.1/go.mod h1:ZG5p860J94/0kI9mNJVoIoLgXcirM2gF5i2kWloofxw=",
          "112: github.com/Azure/go-autorest/autorest/azure/cli v0.4.2/go.mod h1:7qkJkT+j6b+hIpzMOwPChJhTqS8VbsqqgULzMNRugoM=",
          "113: github.com/Azure/go-autorest/autorest/date v0.1.0/go.mod h1:plvfp3oPSKwf2DNjlBjWF/7vwR+cUD/ELuzDCXwHUVA=",
          "114: github.com/Azure/go-autorest/autorest/date v0.2.0/go.mod h1:vcORJHLJEh643/Ioh9+vPmf1Ij9AEBM5FuBIXLmIy0g=",
          "115: github.com/Azure/go-autorest/autorest/date v0.3.0 h1:7gUk1U5M/CQbp9WoqinNzJar+8KY+LPI6wiWrP/myHw=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120: github.com/Azure/go-autorest/autorest v0.11.3/go.mod h1:JFgpikqFJ/MleTTxwepExTKnFUKKszPS8UavbQYUMuw=",
          "124: github.com/Azure/go-autorest/autorest v0.11.18/go.mod h1:dSiJPy22c3u0OtOKDNttNgqpNFY/GeWa7GH/Pz56QRA=",
          "125: github.com/Azure/go-autorest/autorest v0.11.20/go.mod h1:o3tqFY+QR40VOlk+pV4d77mORO64jOXSgEnPQgLK6JY=",
          "132: github.com/Azure/go-autorest/autorest/adal v0.9.0/go.mod h1:/c022QCutn2P7uY+/oQWWNcK9YU+MH96NgK+jErpbcg=",
          "136: github.com/Azure/go-autorest/autorest/adal v0.9.13/go.mod h1:W/MM4U6nLxnIskrw4UwWzlHfGjwUS50aOsc/I3yuU8M=",
          "138: github.com/Azure/go-autorest/autorest/adal v0.9.15/go.mod h1:tGMin8I49Yij6AQ+rvV+Xa/zwxYQB5hmsd6DkfAx2+A=",
          "143: github.com/Azure/go-autorest/autorest/azure/auth v0.5.8 h1:TzPg6B6fTZ0G1zBf3T54aI7p3cAT6u//TOXGPmFMOXg=",
          "147: github.com/Azure/go-autorest/autorest/azure/cli v0.4.3 h1:DOhB+nXkF7LN0JfBGB5YtCF6QLK8mLe4psaHF7ZQEKM=",
          "148: github.com/Azure/go-autorest/autorest/azure/cli v0.4.3/go.mod h1:yAQ2b6eP/CmLPnmLvxtT1ALIY3OR1oFcCqVBi8vHiTc=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "117: github.com/Azure/go-autorest/autorest/mocks v0.1.0/go.mod h1:OTyCOPRA2IgIlWxVYxBee2F5Gr4kF2zd2J5cFRaIDN0=",
          "118: github.com/Azure/go-autorest/autorest/mocks v0.2.0/go.mod h1:OTyCOPRA2IgIlWxVYxBee2F5Gr4kF2zd2J5cFRaIDN0=",
          "119: github.com/Azure/go-autorest/autorest/mocks v0.3.0/go.mod h1:a8FDP3DYzQ4RYfVAxAN3SVSiiO77gL2j2ronKKP0syM=",
          "120: github.com/Azure/go-autorest/autorest/mocks v0.4.1 h1:K0laFcLE6VLTOwNgSxaGbUcLPuGXlNkbVvq4cW4nIHk=",
          "121: github.com/Azure/go-autorest/autorest/mocks v0.4.1/go.mod h1:LTp+uSrOhSkaKrUy935gNZuuIPPVsHlr9DSOxSayd+k=",
          "122: github.com/Azure/go-autorest/autorest/to v0.3.0/go.mod h1:MgwOyqaIuKdG4TL/2ywSsIWKAfJfgHDo8ObuUk3t5sA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156: github.com/Azure/go-autorest/autorest/mocks v0.4.0/go.mod h1:LTp+uSrOhSkaKrUy935gNZuuIPPVsHlr9DSOxSayd+k=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "140: github.com/DATA-DOG/go-sqlmock v1.4.1/go.mod h1:f/Ixk793poVmq4qj/V1dPUg2JEAKC73Q5eFN3EC/SaM=",
          "141: github.com/DataDog/datadog-go v0.0.0-20160329135253-cc2f4770f4d6/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=",
          "142: github.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=",
          "143: github.com/HdrHistogram/hdrhistogram-go v1.1.0/go.mod h1:yDgFjdqOqDEKOvasDdhWNXYg9BVp4O+o5f6V/ehm6Oo=",
          "144: github.com/HdrHistogram/hdrhistogram-go v1.1.2 h1:5IcZpTvzydCQeHzK4Ef/D5rrSqwxob0t8PQPMybUNFM=",
          "145: github.com/HdrHistogram/hdrhistogram-go v1.1.2/go.mod h1:yDgFjdqOqDEKOvasDdhWNXYg9BVp4O+o5f6V/ehm6Oo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180: github.com/GoogleCloudPlatform/cloudsql-proxy v1.24.0/go.mod h1:3tx938GhY4FC+E1KT/jNjDw7Z5qxAEtIiERJ2sXjnII=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "167: github.com/Microsoft/go-winio v0.4.17-0.20210211115548-6eac466e5fa3/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=",
          "168: github.com/Microsoft/go-winio v0.4.17-0.20210324224401-5516f17a5958/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=",
          "169: github.com/Microsoft/go-winio v0.4.17/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=",
          "170: github.com/Microsoft/go-winio v0.5.1 h1:aPJp2QD7OOrhO5tQXqQoGSJc+DjDtWTGLOmNyAm6FgY=",
          "171: github.com/Microsoft/go-winio v0.5.1/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=",
          "172: github.com/Microsoft/hcsshim v0.8.6/go.mod h1:Op3hHsoHPAvb6lceZHDtd9OkTew38wNoXnJs8iY7rUg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208: github.com/Microsoft/go-winio v0.5.0/go.mod h1:JPGBdM1cNvN/6ISo+n8V5iA4v8pBzdOpzfwIujj1a84=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "189: github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=",
          "190: github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=",
          "191: github.com/OneOfOne/xxhash v1.2.6/go.mod h1:eZbhyaAYD41SGSSsnmcpxVoRiQ/MPUTjUdIIOT9Um7Q=",
          "192: github.com/PuerkitoBio/purell v1.0.0/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=",
          "193: github.com/PuerkitoBio/purell v1.1.0/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=",
          "194: github.com/PuerkitoBio/purell v1.1.1/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231: github.com/ProtonMail/go-crypto v0.0.0-20210428141323-04723f9f07d7/go.mod h1:z4/9nQmJSSwwds7ejkxaJwO37dru3geImFUdJlaLzQo=",
          "232: github.com/ProtonMail/go-crypto v0.0.0-20210920160938-87db9fbc61c7 h1:DSqTh6nEes/uO8BlNcGk8PzZsxY2sN9ZL//veWBdTRI=",
          "233: github.com/ProtonMail/go-crypto v0.0.0-20210920160938-87db9fbc61c7/go.mod h1:z4/9nQmJSSwwds7ejkxaJwO37dru3geImFUdJlaLzQo=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "197: github.com/SAP/go-hdb v0.12.0/go.mod h1:etBT+FAi1t5k3K3tf5vQTnosgYmhDkRi8jEnQqCnxF0=",
          "198: github.com/SAP/go-hdb v0.14.1/go.mod h1:7fdQLVC2lER3urZLjZCm0AuMQfApof92n3aylBPEkMo=",
          "199: github.com/SermoDigital/jose v0.0.0-20180104203859-803625baeddc/go.mod h1:ARgCUhI1MHQH+ONky/PAtmVHQrP5JlGY0F3poXOp/fA=",
          "200: github.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=",
          "201: github.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d h1:UrqY+r/OJnIp5u0s1SbQ8dVfLCZJsnvazdBP5hS4iRs=",
          "202: github.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242: github.com/Shopify/ejson v1.3.1 h1:Oawj8bu0IhjvL2W4/wzHJiGRswWTZkOU4RmjJW+JQCg=",
          "243: github.com/Shopify/ejson v1.3.1/go.mod h1:DBVPSSyVv9/MNElCiAX7BCPWy23HGzrOCnHLV7LWlbs=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "216: github.com/VividCortex/gohistogram v1.0.0 h1:6+hBz+qvs0JOrrNhhmR7lFxo5sINxBCGXrdtl/UvroE=",
          "217: github.com/VividCortex/gohistogram v1.0.0/go.mod h1:Pf5mBqqDxYaXu3hDrrU+w6nw50o/4+TcAqDqk/vUH7g=",
          "218: github.com/abdullin/seq v0.0.0-20160510034733-d5467c17e7af/go.mod h1:5Jv4cbFiHJMsVxt52+i0Ha45fjshj6wxYr1r19tB9bw=",
          "219: github.com/aerospike/aerospike-client-go v1.27.0/go.mod h1:zj8LBEnWBDOVEIJt8LvaRvDG5ARAoa5dBeHaB472NRc=",
          "220: github.com/afex/hystrix-go v0.0.0-20180502004556-fa1af6a1f4f5/go.mod h1:SkGFH1ia65gfNATL8TAiHDNxPzPdmEL5uirI2Uyuz6c=",
          "221: github.com/agnivade/levenshtein v1.0.1/go.mod h1:CURSv5d9Uaml+FovSIICkLbAUZ9S4RqaHDIsdSBg7lM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263: github.com/acomagu/bufpipe v1.0.3 h1:fxAGrHZTgQ9w5QqVItgzwj235/uYZYgbXitB+dLupOk=",
          "264: github.com/acomagu/bufpipe v1.0.3/go.mod h1:mxdxdup/WdsKVreO5GpW4+M/1CE2sMG4jeGJ2sYmHc4=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "229: github.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "230: github.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=",
          "231: github.com/alecthomas/units v0.0.0-20210208195552-ff826a37aa15/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=",
          "232: github.com/alecthomas/units v0.0.0-20210927113745-59d0afb8317a h1:E/8AP5dFtMhl5KPJz66Kt9G0n+7Sn41Fy1wv9/jHOrc=",
          "233: github.com/alecthomas/units v0.0.0-20210927113745-59d0afb8317a/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=",
          "234: github.com/alexflint/go-filemutex v0.0.0-20171022225611-72bdc8eae2ae/go.mod h1:CgnQgUtFrFz9mxFNtED3jI5tLDjKlOM+oUF/sTk6ps0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "278: github.com/alecthomas/units v0.0.0-20210912230133-d1bdfacee922/go.mod h1:OMCwj8VM1Kc9e19TLln2VL61YJF0x1XFtfdL4JdbSyE=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "238: github.com/aliyun/aliyun-oss-go-sdk v2.0.4+incompatible/go.mod h1:T/Aws4fEfogEE9v+HPhhw+CntffsBHJ8nXQCwKr0/g8=",
          "239: github.com/amir/raidman v0.0.0-20170415203553-1ccc43bfb9c9/go.mod h1:eliMa/PW+RDr2QLWRmLH1R1ZA4RInpmvOzDDXtaIZkc=",
          "240: github.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883/go.mod h1:rCTlJbsFo29Kk6CurOXKm700vrz8f0KW0JNfpkRJY/8=",
          "241: github.com/antihax/optional v0.0.0-20180407024304-ca021399b1a6/go.mod h1:V8iCPQYkqmusNa815XgQio277wI47sdRh1dUOLdyC6Q=",
          "242: github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=",
          "243: github.com/aokoli/goutils v1.0.1/go.mod h1:SijmP0QR8LtwsmDs8Yii5Z/S4trXFGFC2oO5g9DP+DQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288: github.com/anmitsu/go-shlex v0.0.0-20161002113705-648efa622239 h1:kFOfPq6dUM1hTo4JG6LR5AXSUEsOjtdm0kw0FtQtMJA=",
          "289: github.com/anmitsu/go-shlex v0.0.0-20161002113705-648efa622239/go.mod h1:2FmKhYUyUczH0OGQWaF5ceTx0UBShxjsH6f8oGKYe2c=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "258: github.com/armon/go-metrics v0.3.9 h1:O2sNqxBdvq8Eq5xmzljcYzAORli6RWCvEym4cJf9m18=",
          "259: github.com/armon/go-metrics v0.3.9/go.mod h1:4O98XIr/9W0sxpJ8UaYkvjk10Iff7SnFrb4QAOwNTFc=",
          "260: github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=",
          "261: github.com/armon/go-radix v1.0.0/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=",
          "262: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=",
          "263: github.com/aryann/difflib v0.0.0-20170710044230-e206f873d14a/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=",
          "264: github.com/asaskevich/govalidator v0.0.0-20180319081651-7d2e70ef918f/go.mod h1:lB+ZfQJz7igIIfQNfa7Ml4HSf2uFQQRzpGGRXenZAgY=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310: github.com/armon/go-radix v1.0.0 h1:F4z6KzEeeQIMeLFa97iZU6vupzoecKdU5TX24SNppXI=",
          "312: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "270: github.com/aws/aws-lambda-go v1.13.3/go.mod h1:4UKl9IzQMoD+QF79YdCuzCwp8VbmG4VAQwij/eHl5CU=",
          "271: github.com/aws/aws-sdk-go v1.15.11/go.mod h1:mFuSZ37Z9YOHbQEwBWztmVzqXrEkub65tZoCYDt7FT0=",
          "272: github.com/aws/aws-sdk-go v1.15.24/go.mod h1:mFuSZ37Z9YOHbQEwBWztmVzqXrEkub65tZoCYDt7FT0=",
          "273: github.com/aws/aws-sdk-go v1.15.78/go.mod h1:E3/ieXAlvM0XWO57iftYVDLLvQ824smPP3ATZkfNZeM=",
          "274: github.com/aws/aws-sdk-go v1.17.7/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "275: github.com/aws/aws-sdk-go v1.25.48/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "276: github.com/aws/aws-sdk-go v1.27.0/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324: github.com/aws/aws-sdk-go v1.15.27/go.mod h1:mFuSZ37Z9YOHbQEwBWztmVzqXrEkub65tZoCYDt7FT0=",
          "326: github.com/aws/aws-sdk-go v1.17.4/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "282: github.com/aws/aws-sdk-go v1.35.5/go.mod h1:tlPOdRjfxPBpNIwqDj61rmsnA85v9jc0Ps9+muhnW+k=",
          "283: github.com/aws/aws-sdk-go v1.35.24/go.mod h1:tlPOdRjfxPBpNIwqDj61rmsnA85v9jc0Ps9+muhnW+k=",
          "284: github.com/aws/aws-sdk-go v1.35.31/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "285: github.com/aws/aws-sdk-go v1.37.8/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "286: github.com/aws/aws-sdk-go v1.38.3/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "287: github.com/aws/aws-sdk-go v1.38.35/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "288: github.com/aws/aws-sdk-go v1.38.68/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "289: github.com/aws/aws-sdk-go v1.40.11/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "290: github.com/aws/aws-sdk-go v1.40.45/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "291: github.com/aws/aws-sdk-go v1.41.7/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "294: github.com/aws/aws-sdk-go-v2 v0.18.0/go.mod h1:JWVYvqSMppoMJC0x5wdwiImzgXTI9FuZwxzkQq9wy+g=",
          "295: github.com/aws/aws-sdk-go-v2 v1.7.0/go.mod h1:tb9wi5s61kTDA5qCkcDbt3KRVV74GGslQkl/DRdX/P4=",
          "296: github.com/aws/aws-sdk-go-v2 v1.9.1/go.mod h1:cK/D0BBs0b/oWPIcX/Z/obahJK1TT7IPVjy53i/mX/4=",
          "297: github.com/aws/aws-sdk-go-v2 v1.9.2/go.mod h1:cK/D0BBs0b/oWPIcX/Z/obahJK1TT7IPVjy53i/mX/4=",
          "298: github.com/aws/aws-sdk-go-v2/config v1.8.3/go.mod h1:4AEiLtAb8kLs7vgw2ZV3p2VZ1+hBavOc84hqxVNpCyw=",
          "299: github.com/aws/aws-sdk-go-v2/credentials v1.4.3/go.mod h1:FNNC6nQZQUuyhq5aE5c7ata8o9e4ECGmS4lAXC7o1mQ=",
          "300: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.6.0/go.mod h1:gqlclDEZp4aqJOancXK6TN24aKhT0W0Ae9MHk3wzTMM=",
          "301: github.com/aws/aws-sdk-go-v2/internal/ini v1.2.4/go.mod h1:ZcBrrI3zBKlhGFNYWvju0I3TR93I7YIgAfy82Fh4lcQ=",
          "302: github.com/aws/aws-sdk-go-v2/service/appconfig v1.4.2/go.mod h1:FZ3HkCe+b10uFZZkFdvf98LHW21k49W8o8J366lqVKY=",
          "303: github.com/aws/aws-sdk-go-v2/service/cloudwatch v1.5.0/go.mod h1:acH3+MQoiMzozT/ivU+DbRg7Ooo2298RdRaWcOv+4vM=",
          "304: github.com/aws/aws-sdk-go-v2/service/cloudwatch v1.8.1/go.mod h1:CM+19rL1+4dFWnOQKwDc7H1KwXTz+h61oUSHyhV0b3o=",
          "305: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.3.2/go.mod h1:72HRZDLMtmVQiLG2tLfQcaWLCssELvGl+Zf2WVxMmR8=",
          "306: github.com/aws/aws-sdk-go-v2/service/sso v1.4.2/go.mod h1:NBvT9R1MEF+Ud6ApJKM0G+IkPchKS7p7c2YPKwHmBOk=",
          "307: github.com/aws/aws-sdk-go-v2/service/sts v1.7.2/go.mod h1:8EzeIqfWt2wWT4rJVu3f21TfrhJ8AEMzVybRNSb/b4g=",
          "308: github.com/aws/smithy-go v1.5.0/go.mod h1:SObp3lf9smib00L/v3U2eAKG8FyQ7iLrJnQiAmR5n+E=",
          "309: github.com/aws/smithy-go v1.8.0/go.mod h1:SObp3lf9smib00L/v3U2eAKG8FyQ7iLrJnQiAmR5n+E=",
          "310: github.com/baiyubin/aliyun-sts-go-sdk v0.0.0-20180326062324-cfa1a18b161f/go.mod h1:AuiFmCCPBSrqvVMvuqFuk0qogytodnVFVSN5CeJB8Gc=",
          "311: github.com/beevik/ntp v0.2.0/go.mod h1:hIHWr+l3+/clUnF44zdK+CWW7fO8dR5cIylAQ76NRpg=",
          "",
          "[Removed Lines]",
          "292: github.com/aws/aws-sdk-go v1.42.9 h1:8ptAGgA+uC2TUbdvUeOVSfBocIZvGE2NKiLxkAcn1GA=",
          "293: github.com/aws/aws-sdk-go v1.42.9/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "",
          "[Added Lines]",
          "338: github.com/aws/aws-sdk-go v1.37.0/go.mod h1:hcU610XS61/+aQV88ixoOzUoG7v3b31pl2zKMmprdro=",
          "344: github.com/aws/aws-sdk-go v1.40.34/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "345: github.com/aws/aws-sdk-go v1.40.37/go.mod h1:585smgzpB/KqRA+K3y/NL/oYRqQvpNJYvLm+LY1U59Q=",
          "348: github.com/aws/aws-sdk-go v1.42.23 h1:V0V5hqMEyVelgpu1e4gMPVCJ+KhmscdNxP/NWP1iCOA=",
          "349: github.com/aws/aws-sdk-go v1.42.23/go.mod h1:gyRszuZ/icHmHAVE4gc/r+cfCmhA1AD+vqfWbgI+eHs=",
          "352: github.com/aws/aws-sdk-go-v2 v1.9.0/go.mod h1:cK/D0BBs0b/oWPIcX/Z/obahJK1TT7IPVjy53i/mX/4=",
          "354: github.com/aws/aws-sdk-go-v2 v1.9.2 h1:dUFQcMNZMLON4BOe273pl0filK9RqyQMhCK/6xssL6s=",
          "356: github.com/aws/aws-sdk-go-v2/config v1.7.0/go.mod h1:w9+nMZ7soXCe5nT46Ri354SNhXDQ6v+V5wqDjnZE+GY=",
          "357: github.com/aws/aws-sdk-go-v2/config v1.8.3 h1:o5583X4qUfuRrOGOgmOcDgvr5gJVSu57NK08cWAhIDk=",
          "359: github.com/aws/aws-sdk-go-v2/credentials v1.4.0/go.mod h1:dgGR+Qq7Wjcd4AOAW5Rf5Tnv3+x7ed6kETXyS9WCuAY=",
          "360: github.com/aws/aws-sdk-go-v2/credentials v1.4.3 h1:LTdD5QhK073MpElh9umLLP97wxphkgVC/OjQaEbBwZA=",
          "362: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.5.0/go.mod h1:CpNzHK9VEFUCknu50kkB8z58AH2B5DvPP7ea1LHve/Y=",
          "363: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.6.0 h1:9tfxW/icbSu98C2pcNynm5jmDwU3/741F11688B6QnU=",
          "365: github.com/aws/aws-sdk-go-v2/internal/ini v1.2.2/go.mod h1:BQV0agm+JEhqR+2RT5e1XTFIDcAAV0eW6z2trp+iduw=",
          "366: github.com/aws/aws-sdk-go-v2/internal/ini v1.2.4 h1:leSJ6vCqtPpTmBIgE7044B1wql1E4n//McF+mEgNrYg=",
          "371: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.3.0/go.mod h1:R1KK+vY8AfalhG1AOu5e35pOD2SdoPKQCFLTvnxiohk=",
          "372: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.3.2 h1:r7jel2aa4d9Duys7wEmWqDd5ebpC9w6Kxu6wIjjp18E=",
          "374: github.com/aws/aws-sdk-go-v2/service/kms v1.5.0/go.mod h1:w7JuP9Oq1IKMFQPkNe3V6s9rOssXzOVEMNEqK1L1bao=",
          "375: github.com/aws/aws-sdk-go-v2/service/secretsmanager v1.6.0/go.mod h1:B+7C5UKdVq1ylkI/A6O8wcurFtaux0R1njePNPtKwoA=",
          "376: github.com/aws/aws-sdk-go-v2/service/ssm v1.10.0/go.mod h1:4dXS5YNqI3SNbetQ7X7vfsMlX6ZnboJA2dulBwJx7+g=",
          "377: github.com/aws/aws-sdk-go-v2/service/sso v1.4.0/go.mod h1:+1fpWnL96DL23aXPpMGbsmKe8jLTEfbjuQoA4WS1VaA=",
          "378: github.com/aws/aws-sdk-go-v2/service/sso v1.4.2 h1:pZwkxZbspdqRGzddDB92bkZBoB7lg85sMRE7OqdB3V0=",
          "380: github.com/aws/aws-sdk-go-v2/service/sts v1.7.0/go.mod h1:0qcSMCyASQPN2sk/1KQLQ2Fh6yq8wm0HSDAimPhzCoM=",
          "381: github.com/aws/aws-sdk-go-v2/service/sts v1.7.2 h1:ol2Y5DWqnJeKqNd8th7JWzBtqu63xpOfs1Is+n1t8/4=",
          "384: github.com/aws/smithy-go v1.8.0 h1:AEwwwXQZtUwP5Mz506FeXXrKBe0jA8gVM+1gEcSRooc=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "368: github.com/cenkalti/backoff v2.0.0+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=",
          "369: github.com/cenkalti/backoff v2.1.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=",
          "370: github.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=",
          "371: github.com/cenkalti/backoff/v4 v4.0.2/go.mod h1:eEew/i+1Q6OrCDZh3WiXYv3+nJwBASZ8Bog/87DQnVg=",
          "372: github.com/cenkalti/backoff/v4 v4.1.0/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=",
          "373: github.com/cenkalti/backoff/v4 v4.1.1/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447: github.com/cenkalti/backoff/v3 v3.0.0/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=",
          "448: github.com/cenkalti/backoff/v3 v3.2.2 h1:cfUAAO3yvKMYKPrvhDuHSwQnhZNk/RMHKdZqKTxfm6M=",
          "449: github.com/cenkalti/backoff/v3 v3.2.2/go.mod h1:cIeZDE3IrqwwJl6VUwCN6trj1oXrTS4rc0ij+ULvLYs=",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "561: github.com/cortexproject/cortex v1.7.1-0.20210224085859-66d6fb5b0d42/go.mod h1:u2dxcHInYbe45wxhLoWVdlFJyDhXewsMcxtnbq/QbH4=",
          "562: github.com/cortexproject/cortex v1.7.1-0.20210316085356-3fedc1108a49/go.mod h1:/DBOW8TzYBTE/U+O7Whs7i7E2eeeZl1iRVDtIqxn5kg=",
          "563: github.com/cortexproject/cortex v1.8.1-0.20210422151339-cf1c444e0905/go.mod h1:xxm4/CLvTmDxwE7yXwtClR4dIvkG4S09o5DygPOgc1U=",
          "564: github.com/cortexproject/cortex v1.11.0 h1:kx2iBVLZdu7Qjv7dbN4Ek2ax2nICsyoBL+DdEcAetOQ=",
          "565: github.com/cortexproject/cortex v1.11.0/go.mod h1:oAOdKib5B/IhvxrNecMJH9Wb+a0q31KaAUiv/fcDvFo=",
          "566: github.com/couchbase/go-couchbase v0.0.0-20180501122049-16db1f1fe037/go.mod h1:TWI8EKQMs5u5jLKW/tsb9VwauIrMIxQG1r5fMsswK5U=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "643: github.com/cortexproject/cortex v1.10.1-0.20211014125347-85c378182d0d h1:2KZVBpjU3NtLZ5oEB7c0TXIGKZYH6vc4pENecdbcCxw=",
          "644: github.com/cortexproject/cortex v1.10.1-0.20211014125347-85c378182d0d/go.mod h1:VZ2fFzUCWcyyneToKNu+ALOpGUJIdkInXy4MOhCo/xw=",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "604: github.com/denisenkom/go-mssqldb v0.0.0-20190515213511-eb9f6a1743f3/go.mod h1:zAg7JM8CkOJ43xKXIj7eRO9kmWm/TW578qo+oDO6tuM=",
          "605: github.com/denisenkom/go-mssqldb v0.0.0-20190707035753-2be1aa521ff4/go.mod h1:zAg7JM8CkOJ43xKXIj7eRO9kmWm/TW578qo+oDO6tuM=",
          "606: github.com/denisenkom/go-mssqldb v0.0.0-20191128021309-1d7a30a10f73/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "607: github.com/denisenkom/go-mssqldb v0.10.0/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "608: github.com/dennwc/varint v1.0.0 h1:kGNFFSSw8ToIy3obO/kKr8U9GZYUAxQEVuix4zfDWzE=",
          "609: github.com/dennwc/varint v1.0.0/go.mod h1:hnItb35rvZvJrbTALZtY/iQfDs48JKRG1RPpgziApxA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "688: github.com/denisenkom/go-mssqldb v0.9.0/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "661: github.com/docker/go-units v0.3.3/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=",
          "662: github.com/docker/go-units v0.4.0 h1:3uh0PgVws3nIA0Q+MwDC8yjEPf9zjRfZZWXZYDct3Tw=",
          "663: github.com/docker/go-units v0.4.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=",
          "664: github.com/docker/libnetwork v0.8.0-dev.2.0.20181012153825-d7b61745d166/go.mod h1:93m0aTqz6z+g32wla4l4WxTrdtvBRmVzYRkYvasA5Z8=",
          "665: github.com/docker/libtrust v0.0.0-20150114040149-fa567046d9b1/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=",
          "666: github.com/docker/libtrust v0.0.0-20160708172513-aabc10ec26b7 h1:UhxFibDNY/bfvqU5CAUmr9zpesgbU6SWc8/B4mflAE4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "746: github.com/docker/libkv v0.2.2-0.20180912205406-458977154600 h1:x0AMRhackzbivKKiEeSMzH6gZmbALPXCBG0ecBmRlco=",
          "747: github.com/docker/libkv v0.2.2-0.20180912205406-458977154600/go.mod h1:r5hEwHwW8dr0TFBYGCarMNbrQOiwL1xoqDYZ/JqoTK0=",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "672: github.com/dustin/go-humanize v0.0.0-20171111073723-bb3d318650d4/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=",
          "673: github.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=",
          "674: github.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=",
          "675: github.com/dvsekhvalnov/jose2go v0.0.0-20170216131308-f21a8cedbbae/go.mod h1:7BvyPhdbLxMXIYTFPLsyJRFMsKmOZnQmzh6Gb+uquuM=",
          "676: github.com/dvyukov/go-fuzz v0.0.0-20210103155950-6a8e9d1f2415/go.mod h1:11Gm+ccJnvAhCNLlf5+cS9KjtbaD5I5zaZpFMsTHWTw=",
          "677: github.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "759: github.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad h1:Qk76DOWdOp+GlyDKBAG3Klr9cn7N+LcYc82AZ2S7+cA=",
          "760: github.com/dustin/gojson v0.0.0-20160307161227-2e71ec9dd5ad/go.mod h1:mPKfmRa823oBIgl2r20LeMSpTAteW5j7FLkc0vjmzyQ=",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "697: github.com/ema/qdisc v0.0.0-20200603082823-62d0308e3e00/go.mod h1:ix4kG2zvdUd8kEKSW0ZTr1XLks0epFpI4j745DXxlNE=",
          "698: github.com/emicklei/go-restful v0.0.0-20170410110728-ff4f55a20633/go.mod h1:otzb+WCGbkyDHkqmQmT5YD2WR4BBwUdeQoFo8l/7tVs=",
          "699: github.com/emicklei/go-restful v2.9.5+incompatible/go.mod h1:otzb+WCGbkyDHkqmQmT5YD2WR4BBwUdeQoFo8l/7tVs=",
          "700: github.com/envoyproxy/go-control-plane v0.0.0-20180919002855-2137d9196328/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=",
          "701: github.com/envoyproxy/go-control-plane v0.6.9/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=",
          "702: github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "786: github.com/emirpasic/gods v1.12.0 h1:QAUIPSaCu4G+POclxeqb3F+WPpdKqFGlw36+yOzGlrg=",
          "787: github.com/emirpasic/gods v1.12.0/go.mod h1:YfzfFFoVP/catgzJb4IKIqXjX78Ha8FMSDh3ymbK86o=",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "721: github.com/evanphx/json-patch v4.9.0+incompatible h1:kLcOMZeuLAJvL2BPWLMIj5oaZQobrkAqrL+WFZwQses=",
          "722: github.com/evanphx/json-patch v4.9.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=",
          "723: github.com/evanphx/json-patch/v5 v5.2.0/go.mod h1:G79N1coSVB93tBe7j6PhzjmR3/2VvlbKOFpnXhI9Bw4=",
          "724: github.com/facette/natsort v0.0.0-20181210072756-2cd4dd1e2dcb/go.mod h1:bH6Xx7IW64qjjJq8M2u4dxNaBiDfKK+z/3eGDpXEQhc=",
          "725: github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=",
          "726: github.com/fatih/color v1.9.0/go.mod h1:eQcE1qtQxscV5RaZvpXrrb8Drkc3/DdQ+uUYCNjL+zU=",
          "728: github.com/fatih/color v1.12.0/go.mod h1:ELkj/draVOlAH/xkhN6mQ50Qd0MPOk5AAr3maGEBuJM=",
          "729: github.com/fatih/structs v0.0.0-20180123065059-ebf56d35bba7/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=",
          "730: github.com/fatih/structs v1.1.0 h1:Q7juDM0QtcnhCpeyLGQKyg4TOIghuNXrkL32pHAUMxo=",
          "731: github.com/fatih/structs v1.1.0/go.mod h1:9NiDSp5zOcgEDl+j00MP/WkGVPOlPRLejGD8Ga6PJ7M=",
          "",
          "[Removed Lines]",
          "727: github.com/fatih/color v1.12.0 h1:mRhaKNwANqRgUBGKmnI5ZxEk7QXmjQeCcuYFMX2bfcc=",
          "",
          "[Added Lines]",
          "812: github.com/evanphx/json-patch/v5 v5.5.0/go.mod h1:G79N1coSVB93tBe7j6PhzjmR3/2VvlbKOFpnXhI9Bw4=",
          "817: github.com/fatih/color v1.13.0 h1:8LOYc1KYPPmyKMuN8QV2DNRWNbLo6LZ0iLs8+mlH53w=",
          "818: github.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "735: github.com/felixge/httpsnoop v1.0.1/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=",
          "736: github.com/felixge/httpsnoop v1.0.2 h1:+nS9g82KMXccJ/wp0zyRW9ZBHFETmMGtkk+2CTTrW4o=",
          "737: github.com/felixge/httpsnoop v1.0.2/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=",
          "738: github.com/fogleman/gg v1.2.1-0.20190220221249-0403632d5b90/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=",
          "739: github.com/form3tech-oss/jwt-go v3.2.2+incompatible/go.mod h1:pbq4aXjuKjdthFRnoDwaVPLA+WlJuPGy+QneDUgJi2k=",
          "740: github.com/form3tech-oss/jwt-go v3.2.3+incompatible/go.mod h1:pbq4aXjuKjdthFRnoDwaVPLA+WlJuPGy+QneDUgJi2k=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "828: github.com/flynn/go-shlex v0.0.0-20150515145356-3f9db97f8568/go.mod h1:xEzjJPgXI435gkrCt3MPfRiAkVrwSbHsst4LCFVfpJc=",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "745: github.com/franela/goblin v0.0.0-20210519012713-85d372ac71e2/go.mod h1:VzmDKDJVZI3aJmnRI9VjAn9nJ8qPPsN1fqzr9dqInIo=",
          "746: github.com/franela/goreq v0.0.0-20171204163338-bcd34c9993f8/go.mod h1:ZhphrRTfi2rbfLwlschooIH4+wKKDR4Pdxhh+TRoA20=",
          "747: github.com/frankban/quicktest v1.4.0/go.mod h1:36zfPVQyHxymz4cH7wlDmVwDrJuljRB60qkgn7rorfQ=",
          "748: github.com/frankban/quicktest v1.10.2/go.mod h1:K+q6oSqb0W0Ininfk863uOk1lMy69l/P6txr3mVT54s=",
          "749: github.com/frankban/quicktest v1.11.3/go.mod h1:wRf/ReqHper53s+kmmSZizM8NamnL3IM0I9ntUbOk+k=",
          "750: github.com/frankban/quicktest v1.14.0 h1:+cqqvzZV87b4adx/5ayVOaYZ2CrvM4ejQvUdBzPPUss=",
          "751: github.com/frankban/quicktest v1.14.0/go.mod h1:NeW+ay9A/U67EYXNFA1nPE8e/tnQv/09mUdL/ijj8og=",
          "752: github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839: github.com/frankban/quicktest v1.10.0/go.mod h1:ui7WezCLWMWxVWr1GETZY3smRy0G4KWq9vcPtJmFl7Y=",
          "842: github.com/frankban/quicktest v1.13.0/go.mod h1:qLE0fzW0VuyUAJgPU19zByoIr0HtCHN/r/VLSOOIySU=",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "754: github.com/fsnotify/fsnotify v1.5.1 h1:mZcQUHVQUQWoPXXtuf9yuEXKudkV2sx1E06UadKWpgI=",
          "755: github.com/fsnotify/fsnotify v1.5.1/go.mod h1:T3375wBYaZdLLcVNkcVbzGHY7f1l/uK5T5Ai1i3InKU=",
          "756: github.com/fsouza/fake-gcs-server v1.7.0/go.mod h1:5XIRs4YvwNbNoz+1JF8j6KLAyDh7RHGAyAK3EP2EsNk=",
          "757: github.com/fullsailor/pkcs7 v0.0.0-20190404230743-d7302db945fa/go.mod h1:KnogPXtdwXqoenmZCw6S+25EAm2MkxbG0deNDu4cbSA=",
          "758: github.com/fvbommel/sortorder v1.0.2 h1:mV4o8B2hKboCdkJm+a7uX/SIpZob4JzUpc5GGnM45eo=",
          "759: github.com/fvbommel/sortorder v1.0.2/go.mod h1:uk88iVf1ovNn1iLfgUVU2F9o5eO30ui720w+kxuqRs0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "850: github.com/fsouza/fake-gcs-server v1.30.1 h1:OBuje/XJiwwzGOuwEhPzZ8s2gF1vDHTZq1X+AhYEqjc=",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "765: github.com/ghodss/yaml v1.0.1-0.20190212211648-25d852aebe32/go.mod h1:GIjDIg/heH5DOkXY3YJ/wNhfHsQHoXGjl8G8amsYQ1I=",
          "766: github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=",
          "767: github.com/gin-gonic/gin v1.5.0/go.mod h1:Nd6IXA8m5kNZdNEHMBd93KT+mdY3+bewLgRvmCsR2Do=",
          "768: github.com/glinton/ping v0.1.4-0.20200311211934-5ac87da8cd96/go.mod h1:uY+1eqFUyotrQxF1wYFNtMeHp/swbYRsoGzfcPZ8x3o=",
          "769: github.com/globalsign/mgo v0.0.0-20180905125535-1ca0a4f7cbcb/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=",
          "770: github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=",
          "771: github.com/go-chi/chi v4.1.0+incompatible/go.mod h1:eB3wogJHnLi3x/kFX2A+IbTBlXxmMeXJVKy9tTv1XzQ=",
          "772: github.com/go-chi/chi/v5 v5.0.0/go.mod h1:BBug9lr0cqtdAhsu6R4AAdvufI0/XBzAQSsUqJpoZOs=",
          "773: github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=",
          "774: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "775: github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "862: github.com/gin-gonic/gin v1.6.3/go.mod h1:75u5sXoLsGZoRN5Sgbi1eraJ4GU3++wFwWzhwvtwp4M=",
          "863: github.com/gliderlabs/ssh v0.2.2 h1:6zsha5zo/TWhRhwqCD3+EarCAgZ2yN28ipRnGPnwkI0=",
          "864: github.com/gliderlabs/ssh v0.2.2/go.mod h1:U7qILu1NlMHj9FlMhZLlkCdDnU1DBEAqr0aevW3Awn0=",
          "868: github.com/go-asn1-ber/asn1-ber v1.3.1/go.mod h1:hEBeB/ic+5LoWskz+yKT7vGhhPYkProFKoKdwZRWMe0=",
          "871: github.com/go-git/gcfg v1.5.0 h1:Q5ViNfGF8zFgyJWPqYwA7qGFoMTEiBmdlkcfRmpIMa4=",
          "872: github.com/go-git/gcfg v1.5.0/go.mod h1:5m20vg6GwYabIxaOonVkTdrILxQMpEShl1xiMF4ua+E=",
          "873: github.com/go-git/go-billy/v5 v5.2.0/go.mod h1:pmpqyWchKfYfrkb/UVH4otLvyi/5gJlGI4Hb3ZqZ3W0=",
          "874: github.com/go-git/go-billy/v5 v5.3.1 h1:CPiOUAzKtMRvolEKw+bG1PLRpT7D3LIs3/3ey4Aiu34=",
          "875: github.com/go-git/go-billy/v5 v5.3.1/go.mod h1:pmpqyWchKfYfrkb/UVH4otLvyi/5gJlGI4Hb3ZqZ3W0=",
          "876: github.com/go-git/go-git-fixtures/v4 v4.2.1 h1:n9gGL1Ct/yIw+nfsfr8s4+sbhT+Ncu2SubfXjIWgci8=",
          "877: github.com/go-git/go-git-fixtures/v4 v4.2.1/go.mod h1:K8zd3kDUAykwTdDCr+I0per6Y6vMiRR/nnVTBtavnB0=",
          "878: github.com/go-git/go-git/v5 v5.4.2 h1:BXyZu9t0VkbiHtqrsvdq39UDhGJTl1h55VW6CSC4aY4=",
          "879: github.com/go-git/go-git/v5 v5.4.2/go.mod h1:gQ1kArt6d+n+BGd+/B/I74HwRTLhth2+zti4ihgckDc=",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "785: github.com/go-kit/log v0.2.0 h1:7i2K3eKTos3Vc0enKCfnVcgHh2olr/MyfboYq7cAcFw=",
          "786: github.com/go-kit/log v0.2.0/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=",
          "787: github.com/go-ldap/ldap v3.0.2+incompatible/go.mod h1:qfd9rJvER9Q0/D/Sqn1DfHRoBp40uXYvFoEVrNEPqRc=",
          "788: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "789: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "790: github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "895: github.com/go-ldap/ldap/v3 v3.1.10/go.mod h1:5Zun81jBTabRaI8lzN7E1JjyEl1g6zI6u9pd8luAK4Q=",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "896: github.com/go-openapi/validate v0.19.15/go.mod h1:tbn/fdOwYHgrhPBzidZfJC2MIVvs9GA7monOmWBbeCI=",
          "897: github.com/go-openapi/validate v0.20.1/go.mod h1:b60iJT+xNNLfaQJUqLI7946tYiFEOuE9E4k54HpKcJ0=",
          "898: github.com/go-openapi/validate v0.20.2/go.mod h1:e7OJoKNgd0twXZwIn0A43tHbvIcr/rZIVCbJBpTUoY0=",
          "899: github.com/go-playground/locales v0.12.1/go.mod h1:IUMDtCfWo/w/mtMfIE/IG2K+Ey3ygWanZIBtBW0W2TM=",
          "900: github.com/go-playground/universal-translator v0.16.0/go.mod h1:1AnU7NaIRDWWzGEKwgtJRd2xk99HeFyHw3yid4rvQIY=",
          "901: github.com/go-redis/redis v6.15.9+incompatible/go.mod h1:NAIEuMOZ/fxfXJIrKDQDz8wamY7mA7PouImQ2Jvg6kA=",
          "902: github.com/go-redis/redis/v8 v8.0.0-beta.10.0.20200905143926-df7fe4e2ce72/go.mod h1:CJP1ZIHwhosNYwIdaHPZK9vHsM3+roNBaZ7U9Of1DXc=",
          "903: github.com/go-redis/redis/v8 v8.2.3/go.mod h1:ysgGY09J/QeDYbu3HikWEIPCwaeOkuNoTgKayTEaEOw=",
          "904: github.com/go-redis/redis/v8 v8.9.0/go.mod h1:ik7vb7+gm8Izylxu6kf6wG26/t2VljgCfSQ1DM4O1uU=",
          "905: github.com/go-resty/resty/v2 v2.1.1-0.20191201195748-d7b97669fe48 h1:JVrqSeQfdhYRFk24TvhTZWU0q8lfCojxZQFi3Ou7+uY=",
          "906: github.com/go-resty/resty/v2 v2.1.1-0.20191201195748-d7b97669fe48/go.mod h1:dZGr0i9PLlaaTD4H/hoZIDjQ+r6xq8mgbRzHZf7f2J8=",
          "907: github.com/go-sql-driver/mysql v0.0.0-20180618115901-749ddf1598b4/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1007: github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
          "1009: github.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=",
          "1011: github.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=",
          "1012: github.com/go-playground/validator/v10 v10.2.0/go.mod h1:uOYAAleCW8F/7oMFd6aG0GOhaH6EGOAJShg8Id5JGkI=",
          "1017: github.com/go-redis/redis/v8 v8.11.4/go.mod h1:2Z2wHZXdQpCDXEGzqMockDpNyYvi2l4Pxt6RJr792+w=",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "916: github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=",
          "917: github.com/go-test/deep v1.0.1/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=",
          "918: github.com/go-test/deep v1.0.2-0.20181118220953-042da051cf31/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=",
          "919: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "920: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "921: github.com/go-zookeeper/zk v1.0.2 h1:4mx0EYENAdX/B/rbunjlt5+4RTA/a9SMHBRuSKdGxPM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1032: github.com/go-test/deep v1.0.2/go.mod h1:wGDj63lr65AM2AQyKZd/NYHGb0R+1RLqB8NKt3aSFNA=",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "960: github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=",
          "961: github.com/gofrs/uuid v2.1.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=",
          "962: github.com/gofrs/uuid v3.3.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=",
          "963: github.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=",
          "964: github.com/gogo/googleapis v0.0.0-20180223154316-0cd9801be74a/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=",
          "965: github.com/gogo/googleapis v1.1.0/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1077: github.com/gofrs/uuid v4.0.0+incompatible h1:1SD/1F5pU8p29ybwgQSwpQk+mwdRrXCYuPhW6m+TnJw=",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "981: github.com/gogo/status v1.1.0 h1:+eIkrewn5q6b30y+g/BJINVVdi2xH7je5MPJ3ZPK3JA=",
          "982: github.com/gogo/status v1.1.0/go.mod h1:BFv9nrluPLmrS0EmGVvLaPNmRosr9KapBYd5/hpY1WM=",
          "983: github.com/golang-jwt/jwt v3.2.1+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=",
          "985: github.com/golang-jwt/jwt/v4 v4.0.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=",
          "986: github.com/golang-migrate/migrate/v4 v4.7.0/go.mod h1:Qvut3N4xKWjoH3sokBccML6WyHSnggXm/DvMMnTsQIc=",
          "987: github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=",
          "988: github.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=",
          "",
          "[Removed Lines]",
          "984: github.com/golang-jwt/jwt/v4 v4.0.0 h1:RAqyYixv1p7uEnocuy8P1nru5wprCh/MH2BIlW5z5/o=",
          "",
          "[Added Lines]",
          "1100: github.com/golang-jwt/jwt/v4 v4.1.0 h1:XUgk2Ex5veyVFVeLm0xhusUTQybEbexJXrvPNOKkSY0=",
          "1101: github.com/golang-jwt/jwt/v4 v4.1.0/go.mod h1:/xlHOz8bRuivTWchD4jCa+NbatV+wEUSzwAxVc6locg=",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1068: github.com/google/go-querystring v0.0.0-20170111101155-53e6ce116135/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=",
          "1069: github.com/google/go-querystring v1.0.0 h1:Xkwi/a1rcvNg1PPYe5vI8GbeBY/jrVuDX5ASuANWTrk=",
          "1070: github.com/google/go-querystring v1.0.0/go.mod h1:odCYkC5MyYFN7vkCjXpyrEuKhc/BUO6wN/zVPAxq5ck=",
          "1071: github.com/google/gofuzz v0.0.0-20161122191042-44d81051d367/go.mod h1:HP5RmnzzSNb993RKQDq4+1A4ia9nllfqcQFTQJedwGI=",
          "1072: github.com/google/gofuzz v0.0.0-20170612174753-24818f796faf/go.mod h1:HP5RmnzzSNb993RKQDq4+1A4ia9nllfqcQFTQJedwGI=",
          "1073: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "1074: github.com/google/gofuzz v1.1.0 h1:Hsa8mG0dQ46ij8Sl2AYJDUv1oA9/d6Vk+3LG99Oe02g=",
          "1075: github.com/google/gofuzz v1.1.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "1076: github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=",
          "1077: github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=",
          "1078: github.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=",
          "1079: github.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=",
          "1080: github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=",
          "1081: github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1187: github.com/google/go-replayers/grpcreplay v1.1.0 h1:S5+I3zYyZ+GQz68OfbURDdt/+cSMqCK1wrvNx7WBzTE=",
          "1188: github.com/google/go-replayers/grpcreplay v1.1.0/go.mod h1:qzAvJ8/wi57zq7gWqaE6AwLM6miiXUQwP1S+I9icmhk=",
          "1189: github.com/google/go-replayers/httpreplay v1.0.0 h1:8SmT8fUYM4nueF+UnXIX8LJxNTb1vpPuknXz+yTWzL4=",
          "1190: github.com/google/go-replayers/httpreplay v1.0.0/go.mod h1:LJhKoTwS5Wy5Ld/peq8dFFG5OfJyHEz7ft+DsTUv25M=",
          "1197: github.com/google/martian v2.1.1-0.20190517191504-25dcb96d9e51+incompatible h1:xmapqc1AyLoB+ddYT6r04bD9lIjlOqGaREovi0SzFaE=",
          "1198: github.com/google/martian v2.1.1-0.20190517191504-25dcb96d9e51+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=",
          "1201: github.com/google/martian/v3 v3.2.1 h1:d8MncMlErDFTwQGBK1xhv026j9kqhvw1Qv9IbWT1VLQ=",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1083: github.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "1084: github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "1085: github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "1087: github.com/google/pprof v0.0.0-20200615235658-03e1cf38a040/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "1088: github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "1089: github.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1090: github.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1091: github.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1092: github.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1093: github.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1094: github.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1095: github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1096: github.com/google/pprof v0.0.0-20211008130755-947d60d73cc0 h1:zHs+jv3LO743/zFGcByu2KmpbliCU2AhjcGgrdTwSG4=",
          "1097: github.com/google/pprof v0.0.0-20211008130755-947d60d73cc0/go.mod h1:KgnwoLYCZ8IQu3XUZ8Nc/bM9CCZFOyjUNOSygVozoDg=",
          "1098: github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=",
          "1099: github.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "1100: github.com/google/uuid v1.1.1/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "1101: github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "1102: github.com/google/uuid v1.2.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "1103: github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
          "1104: github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "1105: github.com/googleapis/gax-go v2.0.2+incompatible/go.mod h1:SFVmujtThgffbyetf+mdk2eWhX2bMyUtNHzFKcPA9HY=",
          "1106: github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=",
          "1107: github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=",
          "",
          "[Removed Lines]",
          "1086: github.com/google/pprof v0.0.0-20200507031123-427632fa3b1c/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=",
          "",
          "[Added Lines]",
          "1213: github.com/google/pprof v0.0.0-20201218002935-b9804c9f04c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1216: github.com/google/pprof v0.0.0-20210506205249-923b5ab0fc1a/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1219: github.com/google/pprof v0.0.0-20210715191844-86eeefc3e471/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=",
          "1224: github.com/google/subcommands v1.0.1/go.mod h1:ZjhPrFU+Olkh9WazFPsl27BQ4UPiG37m3yTrtFlrHVk=",
          "1231: github.com/google/wire v0.5.0 h1:I7ELFeVBr3yfPIcc8+MWvrjk+3VjbcSzoXm3JVa+jD8=",
          "1232: github.com/google/wire v0.5.0/go.mod h1:ngWDr9Qvq3yZA10YrxfyGELY/AFWGVpy9c1LTRi1EoU=",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1125: github.com/gopherjs/gopherjs v0.0.0-20180825215210-0210a2f0f73c/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "1126: github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "1127: github.com/gopherjs/gopherjs v0.0.0-20190430165422-3e4dfb77656c/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "1129: github.com/gopherjs/gopherjs v0.0.0-20191106031601-ce3c9ade29de/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "1130: github.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=",
          "1131: github.com/gorilla/handlers v0.0.0-20150720190736-60c7bfde3e33/go.mod h1:Qkdc/uu4tH4g6mTK6auzZ766c4CA0Ng8+o/OAirnOIQ=",
          "1132: github.com/gorilla/handlers v1.5.1 h1:9lRY6j8DEeeBT10CvO9hGW0gmky0BprnvDI5vfhUHH4=",
          "",
          "[Removed Lines]",
          "1128: github.com/gopherjs/gopherjs v0.0.0-20191106031601-ce3c9ade29de h1:F7WD09S8QB4LrkEpka0dFPLSotH11HRpCsLIbIcJ7sU=",
          "",
          "[Added Lines]",
          "1257: github.com/gopherjs/gopherjs v0.0.0-20200217142428-fce0ec30dd00 h1:l5lAOZEym3oK3SQ2HBHWsJUfbNBiTXJDeW2QDxw9AQ0=",
          "1258: github.com/gopherjs/gopherjs v0.0.0-20200217142428-fce0ec30dd00/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1141: github.com/gorilla/sessions v1.2.1/go.mod h1:dk2InVEVJ0sfLlnXv9EAgkf6ecYs/i80K/zI+bUmuGM=",
          "1142: github.com/gorilla/websocket v0.0.0-20170926233335-4201258b820c/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=",
          "1143: github.com/gorilla/websocket v1.4.0/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=",
          "1144: github.com/gorilla/websocket v1.4.2 h1:+/TMaTYc4QFitKJxsQ7Yye35DkWvkdLcvGKqM+x0Ufc=",
          "1145: github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=",
          "1146: github.com/gotestyourself/gotestyourself v2.2.0+incompatible/go.mod h1:zZKM6oeNM8k+FRljX1mnzVYeS8wiGgQyvST1/GafPbY=",
          "1147: github.com/grafana/dnsmasq_exporter v0.2.1-0.20211118155541-751b01d21de9 h1:/ovWD85B27b/xytKaxhP/LvXF8fxWIhEwE55mFpCQsE=",
          "1148: github.com/grafana/dnsmasq_exporter v0.2.1-0.20211118155541-751b01d21de9/go.mod h1:Jj5TSVVJE6t8Brq/ZkUbQ1n260dilriL0tWNaHjVDUs=",
          "1149: github.com/grafana/dskit v0.0.0-20210908150159-fcf48cb19aa4/go.mod h1:m3eHzwe5IT5eE2MI3Ena2ooU8+Hek8IiVXb9yJ1+0rs=",
          "1150: github.com/grafana/dskit v0.0.0-20211021180445-3bd016e9d7f1 h1:Qf+/W3Tup0nO21tgJmO14WJK0yyrm4L2UJipZP+Zoow=",
          "1151: github.com/grafana/dskit v0.0.0-20211021180445-3bd016e9d7f1/go.mod h1:uPG2nyK4CtgNDmWv7qyzYcdI+S90kHHRWvHnBtEMBXM=",
          "1152: github.com/grafana/gocql v0.0.0-20200605141915-ba5dc39ece85/go.mod h1:crI9WX6p0IhrqB+DqIUHulRW853PaNFf7o4UprV//3I=",
          "1153: github.com/grafana/loki v1.6.2-0.20220112164614-525040a32657 h1:1TSVAyuDYJdp4/195GrdrGg0ZHMB+eJye1qIgi0N8+4=",
          "1154: github.com/grafana/loki v1.6.2-0.20220112164614-525040a32657/go.mod h1:9dAaw+bJR/qZiHZYO9ZvFhuqphGblcUEwuvGPbgZldA=",
          "1155: github.com/grafana/mongodb_exporter v0.20.8-0.20211006135645-bef0f0239601 h1:k5VTHQsSBs/jZHWXEvjW4QAZQcoGB3QQfUN0XGA6pB4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1273: github.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=",
          "1276: github.com/gosimple/slug v1.12.0 h1:xzuhj7G7cGtd34NXnW/yF0l+AGNfWqwgh/IXgFy7dnc=",
          "1277: github.com/gosimple/slug v1.12.0/go.mod h1:UiRaFH+GEilHstLUmcBgWcI42viBN7mAb818JrYOeFQ=",
          "1278: github.com/gosimple/unidecode v1.0.1 h1:hZzFTMMqSswvf0LBJZCZgThIZrpDHFXux9KeGmn6T/o=",
          "1279: github.com/gosimple/unidecode v1.0.1/go.mod h1:CP0Cr1Y1kogOtx0bJblKzsVWrqYaqfNOnHzpgWw4Awc=",
          "1284: github.com/grafana/dskit v0.0.0-20211011144203-3a88ec0b675f h1:FvvSVEbnGeM2bUivGmsiXTi8URJyBU7TcFEEoRe5wWI=",
          "1285: github.com/grafana/dskit v0.0.0-20211011144203-3a88ec0b675f/go.mod h1:uPG2nyK4CtgNDmWv7qyzYcdI+S90kHHRWvHnBtEMBXM=",
          "1289: github.com/grafana/loki v1.6.2-0.20211021114919-0ae0d4da122d h1:vjCXyKr987ClVgPyj7fZXjvCX8B1Y51AwUaf1k6/NqI=",
          "1290: github.com/grafana/loki v1.6.2-0.20211021114919-0ae0d4da122d/go.mod h1:CHJv20FcRFw/N6/FJOtEdMt1zDcCJbxMoLmzpH74CVQ=",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1170: github.com/grafana/statsd_exporter v0.18.1-0.20211118164740-8e806158da0b/go.mod h1:N4Z1+iSqc9rnxlT1N8Qn3l65Vzb5t4Uq0jpg8nxyhio=",
          "1171: github.com/grafana/tail v0.0.0-20201004203643-7aa4e4a91f03 h1:fGgFrAraMB0BaPfYumu+iulfDXwHm+GFyHA4xEtBqI8=",
          "1172: github.com/grafana/tail v0.0.0-20201004203643-7aa4e4a91f03/go.mod h1:GIMXMPB/lRAllP5rVDvcGif87ryO2hgD7tCtHMdHrho=",
          "1173: github.com/grafana/windows_exporter v0.15.1-0.20220202211901-871715ba0b43 h1:gb+wDKb+9r4n3QbMzfudcHDtE9lI+kKjx+98bYphqK4=",
          "1174: github.com/grafana/windows_exporter v0.15.1-0.20220202211901-871715ba0b43/go.mod h1:zWjLDqyEy3ZEy1LNlR6iUJJgYCoUDJTyUbrjeLUp3ZE=",
          "1175: github.com/gregjones/httpcache v0.0.0-20180305231024-9cad4c3443a7/go.mod h1:FecbI9+v66THATjSRHfNgh1IVFe/9kFxbXtjV0ctIMA=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1311: github.com/grafana/windows_exporter v0.15.1-0.20211019183116-592dfa92f9fd h1:jQ9JCvwdRW32X/LP3ezXT4EnJCirq9bb3l5svQs8j7k=",
          "1312: github.com/grafana/windows_exporter v0.15.1-0.20211019183116-592dfa92f9fd/go.mod h1:zWjLDqyEy3ZEy1LNlR6iUJJgYCoUDJTyUbrjeLUp3ZE=",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1195: github.com/grpc-ecosystem/grpc-opentracing v0.0.0-20180507213350-8e809c8a8645/go.mod h1:6iZfnjpejD4L/4DwD7NryNaJyCQdzwWwH2MWhCA90Kw=",
          "1196: github.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed h1:5upAirOpQc1Q53c0bnx2ufif5kANL7bfZWcc6VJWJd8=",
          "1197: github.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed/go.mod h1:tMWxXQ9wFIaZeTI9F+hmhFiGpFmhOHzyShyFUhRm0H4=",
          "1198: github.com/harlow/kinesis-consumer v0.3.1-0.20181230152818-2f58b136fee0/go.mod h1:dk23l2BruuUzRP8wbybQbPn3J7sZga2QHICCeaEy5rQ=",
          "1199: github.com/hashicorp/consul v1.5.1 h1:p7tRmQ4m3ZMYkGQkuyjLXKbdU1weeumgZFqZOvw7o4c=",
          "1200: github.com/hashicorp/consul v1.5.1/go.mod h1:QsmgXh2YA9Njv6y3/FHXqHYhsMye++3oBoAZ6SR8R8I=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1338: github.com/hairyhenderson/go-fsimpl v0.0.0-20211102185733-857ee891b38d h1:9be+nFIZyC8Tz3T+gy4eK0wqCfXh/X9GeokwVz1zwpo=",
          "1339: github.com/hairyhenderson/go-fsimpl v0.0.0-20211102185733-857ee891b38d/go.mod h1:v6ot3ZgWfrsMmcbmEi3+sb0TXEaUhaYff/EtA+pyS2k=",
          "1340: github.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf h1:I1sbT4ZbIt9i+hB1zfKw2mE8C12TuGxPiW7YmtLbPa4=",
          "1341: github.com/hairyhenderson/toml v0.4.2-0.20210923231440-40456b8e66cf/go.mod h1:jDHmWDKZY6MIIYltYYfW4Rs7hQ50oS4qf/6spSiZAxY=",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1205: github.com/hashicorp/consul/api v1.8.1/go.mod h1:sDjTOq0yUyv5G4h+BqSea7Fn6BU+XbolEz1952UB+mk=",
          "1206: github.com/hashicorp/consul/api v1.9.1/go.mod h1:XjsvQN+RJGWI2TWy1/kqaE16HrR2J/FWgkYjdZQsX9M=",
          "1207: github.com/hashicorp/consul/api v1.10.1/go.mod h1:XjsvQN+RJGWI2TWy1/kqaE16HrR2J/FWgkYjdZQsX9M=",
          "1209: github.com/hashicorp/consul/api v1.11.0/go.mod h1:XjsvQN+RJGWI2TWy1/kqaE16HrR2J/FWgkYjdZQsX9M=",
          "1210: github.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=",
          "1211: github.com/hashicorp/consul/sdk v0.3.0/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=",
          "1212: github.com/hashicorp/consul/sdk v0.5.0/go.mod h1:fY08Y9z5SvJqevyZNy6WWPXiG3KwBPAvlcdx16zZ0fM=",
          "",
          "[Removed Lines]",
          "1208: github.com/hashicorp/consul/api v1.11.0 h1:Hw/G8TtRvOElqxVIhBzXciiSTbapq8hZ2XKZsXk5ZCE=",
          "",
          "[Added Lines]",
          "1353: github.com/hashicorp/consul/api v1.12.0 h1:k3y1FYv6nuKyNTqj6w9gXOx5r5CfLj/k/euUeBXj1OY=",
          "1354: github.com/hashicorp/consul/api v1.12.0/go.mod h1:6pVBMo0ebnYdt2S3H87XhekM/HHrUoTD2XXb/VrZVy0=",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1215: github.com/hashicorp/consul/sdk v0.8.0 h1:OJtKBtEjboEZvG6AOUdh4Z1Zbyu0WcxQ0qatRrZHTVU=",
          "1216: github.com/hashicorp/consul/sdk v0.8.0/go.mod h1:GBvyrGALthsZObzUGsfgHZQDXjg4lOjagTIwIR1vPms=",
          "1217: github.com/hashicorp/errwrap v0.0.0-20141028054710-7554cd9344ce/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "1219: github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "1220: github.com/hashicorp/go-bexpr v0.1.0/go.mod h1:ANbpTX1oAql27TZkKVeW8p1w8NTdnyzPe/0qqPCKohU=",
          "1221: github.com/hashicorp/go-checkpoint v0.0.0-20171009173528-1545e56e46de/go.mod h1:xIwEieBHERyEvaeKF/TcHh1Hu+lxPM+n2vT1+g9I4m4=",
          "1222: github.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=",
          "",
          "[Removed Lines]",
          "1218: github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=",
          "",
          "[Added Lines]",
          "1364: github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=",
          "1365: github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1229: github.com/hashicorp/go-hclog v0.0.0-20180402200405-69ff559dc25f/go.mod h1:9bjs9uLqI8l75knNv3lV1kA55veR+WUPSiKIWcQHudI=",
          "1230: github.com/hashicorp/go-hclog v0.0.0-20180709165350-ff2cf002a8dd/go.mod h1:9bjs9uLqI8l75knNv3lV1kA55veR+WUPSiKIWcQHudI=",
          "1231: github.com/hashicorp/go-hclog v0.8.0/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=",
          "1232: github.com/hashicorp/go-hclog v0.12.0/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=",
          "1233: github.com/hashicorp/go-hclog v0.16.2 h1:K4ev2ib4LdQETX5cSZBG0DVLk1jwGqSPXBjdah3veNs=",
          "1234: github.com/hashicorp/go-hclog v0.16.2/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=",
          "1235: github.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=",
          "1236: github.com/hashicorp/go-immutable-radix v1.1.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=",
          "1237: github.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=",
          "1238: github.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=",
          "1239: github.com/hashicorp/go-memdb v0.0.0-20180223233045-1289e7fffe71/go.mod h1:kbfItVoBJwCfKXDXN4YoAXjxcFVZ7MRrJzyTX6H4giE=",
          "1240: github.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=",
          "1241: github.com/hashicorp/go-msgpack v0.5.4/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1378: github.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=",
          "1380: github.com/hashicorp/go-hclog v0.14.1/go.mod h1:whpDNt7SSdeAju8AWKIWsul05p54N/39EeqMAyrmvFQ=",
          "1387: github.com/hashicorp/go-kms-wrapping/entropy v0.1.0/go.mod h1:d1g9WGtAunDNpek8jUIEJnBlbgKS1N2Q61QkHiZyR1g=",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1248: github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=",
          "1249: github.com/hashicorp/go-plugin v0.0.0-20180331002553-e8d22c780116/go.mod h1:JSqWYsict+jzcj0+xElxyrBQRPNoiWQuddnxArJ7XHQ=",
          "1250: github.com/hashicorp/go-plugin v1.0.1/go.mod h1:++UyYGoz3o5w9ZzAdZxtQKrWWP+iqPBn3cQptSMzBuY=",
          "1251: github.com/hashicorp/go-retryablehttp v0.0.0-20180531211321-3b087ef2d313/go.mod h1:fXcdFsQoipQa7mwORhKad5jmDCeSy/RCGzWA08PO0lM=",
          "1252: github.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=",
          "1253: github.com/hashicorp/go-retryablehttp v0.5.4/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=",
          "1254: github.com/hashicorp/go-rootcerts v0.0.0-20160503143440-6bb64b370b90/go.mod h1:o4zcYY1e0GEZI6eSEr+43QDYmuGglw1qSO6qdHUHCgg=",
          "1255: github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=",
          "1256: github.com/hashicorp/go-rootcerts v1.0.1/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=",
          "1257: github.com/hashicorp/go-rootcerts v1.0.2 h1:jzhAVGtqPKbwpyCPELlgNWhE1znq+qwJtW5Oi2viEzc=",
          "1258: github.com/hashicorp/go-rootcerts v1.0.2/go.mod h1:pqUvnprVnM5bf7AOirdbb01K4ccR319Vf4pU3K5EGc8=",
          "1259: github.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=",
          "1260: github.com/hashicorp/go-sockaddr v1.0.2 h1:ztczhD1jLxIRjVejw8gFomI1BQZOe2WoVOu0SyteCQc=",
          "1261: github.com/hashicorp/go-sockaddr v1.0.2/go.mod h1:rB4wwRAUzs07qva3c5SdrY/NEtAUjGlgmH/UkBUC97A=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1400: github.com/hashicorp/go-plugin v1.4.3 h1:DXmvivbWD5qdiBts9TpBC7BYL1Aia5sxbRgQB+v6UZM=",
          "1401: github.com/hashicorp/go-plugin v1.4.3/go.mod h1:5fGEH17QVwTTcR0zV7yhDPLLmFX9YSZ38b18Udy6vYQ=",
          "1405: github.com/hashicorp/go-retryablehttp v0.6.6/go.mod h1:vAew36LZh98gCBJNLH42IQ1ER/9wtLZZ8meHqQvEYWY=",
          "1406: github.com/hashicorp/go-retryablehttp v0.7.0 h1:eu1EI/mbirUgP5C8hVsTNaGZreBDlYiwC1FZWkvQPQ4=",
          "1407: github.com/hashicorp/go-retryablehttp v0.7.0/go.mod h1:vAew36LZh98gCBJNLH42IQ1ER/9wtLZZ8meHqQvEYWY=",
          "1413: github.com/hashicorp/go-secure-stdlib/base62 v0.1.1/go.mod h1:EdWO6czbmthiwZ3/PUsDV+UD1D5IRU4ActiaWGwt0Yw=",
          "1414: github.com/hashicorp/go-secure-stdlib/mlock v0.1.1 h1:cCRo8gK7oq6A2L6LICkUZ+/a5rLiRXFMf1Qd4xSwxTc=",
          "1415: github.com/hashicorp/go-secure-stdlib/mlock v0.1.1/go.mod h1:zq93CJChV6L9QTfGKtfBxKqD7BqqXx5O04A/ns2p5+I=",
          "1416: github.com/hashicorp/go-secure-stdlib/parseutil v0.1.1 h1:78ki3QBevHwYrVxnyVeaEz+7WtifHhauYF23es/0KlI=",
          "1417: github.com/hashicorp/go-secure-stdlib/parseutil v0.1.1/go.mod h1:QmrqtbKuxxSWTN3ETMPuB+VtEiBJ/A9XhoYGv8E1uD8=",
          "1418: github.com/hashicorp/go-secure-stdlib/password v0.1.1/go.mod h1:9hH302QllNwu1o2TGYtSk8I8kTAN0ca1EHpwhm5Mmzo=",
          "1419: github.com/hashicorp/go-secure-stdlib/strutil v0.1.1 h1:nd0HIW15E6FG1MsnArYaHfuw9C2zgzM8LxkG5Ty/788=",
          "1420: github.com/hashicorp/go-secure-stdlib/strutil v0.1.1/go.mod h1:gKOamz3EwoIoJq7mlMIRBpVTAUn8qPCrEclOKKWhD3U=",
          "1421: github.com/hashicorp/go-secure-stdlib/tlsutil v0.1.1/go.mod h1:l8slYwnJA26yBz+ErHpp2IRCLr0vuOMGBORIz4rRiAs=",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1268: github.com/hashicorp/go-version v1.1.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "1269: github.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "1270: github.com/hashicorp/go-version v1.2.1-0.20190424083514-192140e6f3e6/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "1271: github.com/hashicorp/go-version v1.3.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=",
          "1272: github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=",
          "1273: github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1434: github.com/hashicorp/go-version v1.3.0 h1:McDWVJIU/y+u1BRV06dPaLfLCaT7fUTJLp5r04x7iNw=",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1282: github.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=",
          "1283: github.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=",
          "1284: github.com/hashicorp/mdns v1.0.1/go.mod h1:4gW7WsVCke5TE7EPeYliwHlRUyBtfCwuFwuMg2DmyNY=",
          "1285: github.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=",
          "1286: github.com/hashicorp/memberlist v0.1.4/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=",
          "1287: github.com/hashicorp/memberlist v0.1.5/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=",
          "1288: github.com/hashicorp/memberlist v0.2.0/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=",
          "1289: github.com/hashicorp/memberlist v0.2.2/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=",
          "1290: github.com/hashicorp/memberlist v0.2.3/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=",
          "1292: github.com/hashicorp/memberlist v0.2.4/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=",
          "1293: github.com/hashicorp/net-rpc-msgpackrpc v0.0.0-20151116020338-a14192a58a69/go.mod h1:/z+jUGRBlwVpUZfjute9jWaF6/HuhjuFQuL1YXzVD1Q=",
          "1294: github.com/hashicorp/raft v1.0.1-0.20190409200437-d9fe23f7d472/go.mod h1:DVSAWItjLjTOkVbSpWQ0j0kUADIvDaCtBxIcbNAQLkI=",
          "1295: github.com/hashicorp/raft-boltdb v0.0.0-20150201200839-d1e82c1ec3f1/go.mod h1:pNv7Wc3ycL6F5oOWn+tPGo2gWD4a5X+yp/ntwdKLjRk=",
          "",
          "[Removed Lines]",
          "1291: github.com/hashicorp/memberlist v0.2.4 h1:OOhYzSvFnkFQXm1ysE8RjXTHsqSRDyP4emusC9K7DYg=",
          "",
          "[Added Lines]",
          "1449: github.com/hashicorp/mdns v1.0.4/go.mod h1:mtBihi+LeNXGtG8L9dX59gAEa12BDtBQSp4v/YAJqrc=",
          "1457: github.com/hashicorp/memberlist v0.3.0 h1:8+567mCcFDnS5ADl7lrpxPMWiFCElyUEeW0gtj34fMA=",
          "1458: github.com/hashicorp/memberlist v0.3.0/go.mod h1:MS2lj3INKhZjWNqd3N0m3J+Jxf3DAOnAH9VT3Sh9MUE=",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1298: github.com/hashicorp/serf v0.8.5/go.mod h1:UpNcs7fFbpKIyZaUuSW6EPiH+eZC7OuyFD+wc1oal+k=",
          "1299: github.com/hashicorp/serf v0.9.0/go.mod h1:YL0HO+FifKOW2u1ke99DGVu1zhcpZzNwrLIqBC7vbYU=",
          "1300: github.com/hashicorp/serf v0.9.3/go.mod h1:UWDWwZeL5cuWDJdl0C6wrvrUwEqtQ4ZKBKKENpqIUyk=",
          "1302: github.com/hashicorp/serf v0.9.5/go.mod h1:UWDWwZeL5cuWDJdl0C6wrvrUwEqtQ4ZKBKKENpqIUyk=",
          "1303: github.com/hashicorp/vault v0.10.3/go.mod h1:KfSyffbKxoVyspOdlaGVjIuwLobi07qD1bAbosPMpP0=",
          "1304: github.com/hashicorp/vault-plugin-secrets-kv v0.0.0-20190318174639-195e0e9d07f1/go.mod h1:VJHHT2SC1tAPrfENQeBhLlb5FbZoKZM+oC/ROmEftz0=",
          "1305: github.com/hashicorp/vault/api v1.0.4/go.mod h1:gDcqh3WGcR1cpF5AJz/B1UFheUEneMoIospckxBxk6Q=",
          "1306: github.com/hashicorp/vault/sdk v0.1.13/go.mod h1:B+hVj7TpuQY1Y/GPbCpffmgd+tSEwvhkWnjtSYCaS2M=",
          "1307: github.com/hashicorp/vic v1.5.1-0.20190403131502-bbfe86ec9443/go.mod h1:bEpDU35nTu0ey1EXjwNwPjI9xErAsoOCmcMb9GKvyxo=",
          "1308: github.com/hashicorp/yamux v0.0.0-20180604194846-3520598351bb/go.mod h1:+NfK9FKeTrX5uv1uIXGdwYDTeHna2qgaIlx54MXqjAM=",
          "1309: github.com/hashicorp/yamux v0.0.0-20181012175058-2f1d1f20f75d/go.mod h1:+NfK9FKeTrX5uv1uIXGdwYDTeHna2qgaIlx54MXqjAM=",
          "1310: github.com/hetznercloud/hcloud-go v1.32.0 h1:7zyN2V7hMlhm3HZdxOarmOtvzKvkcYKjM0hcwYMQZz0=",
          "1311: github.com/hetznercloud/hcloud-go v1.32.0/go.mod h1:XX/TQub3ge0yWR2yHWmnDVIrB+MQbda1pHxkUmDlUME=",
          "1312: github.com/hodgesds/perf-utils v0.0.8/go.mod h1:F6TfvsbtrF88i++hou29dTXlI2sfsJv+gRZDtmTJkAs=",
          "",
          "[Removed Lines]",
          "1301: github.com/hashicorp/serf v0.9.5 h1:EBWvyu9tcRszt3Bxp3KNssBMP1KuHWyO51lz9+786iM=",
          "",
          "[Added Lines]",
          "1468: github.com/hashicorp/serf v0.9.6 h1:uuEX1kLR6aoda1TBttmJQKDLZE1Ob7KN0NPdE7EtCDc=",
          "1469: github.com/hashicorp/serf v0.9.6/go.mod h1:TXZNMjZQijwlDvp+r0b63xZ45H7JmCmgg4gpTwn9UV4=",
          "1473: github.com/hashicorp/vault/api v1.3.0 h1:uDy39PLSvy6gtKyjOCRPizy2QdFiIYSWBR2pxCEzYL8=",
          "1474: github.com/hashicorp/vault/api v1.3.0/go.mod h1:EabNQLI0VWbWoGlA+oBLC8PXmR9D60aUVgQGvangFWQ=",
          "1476: github.com/hashicorp/vault/sdk v0.3.0 h1:kR3dpxNkhh/wr6ycaJYqp6AFT/i2xaftbfnwZduTKEY=",
          "1477: github.com/hashicorp/vault/sdk v0.3.0/go.mod h1:aZ3fNuL5VNydQk8GcLJ2TV8YCRVvyaakYkhZRoVuhj0=",
          "1481: github.com/hashicorp/yamux v0.0.0-20190923154419-df201c70410d h1:W+SIwDdl3+jXWeidYySAgzytE3piq6GumXeBjFBG67c=",
          "1482: github.com/hashicorp/yamux v0.0.0-20190923154419-df201c70410d/go.mod h1:+NfK9FKeTrX5uv1uIXGdwYDTeHna2qgaIlx54MXqjAM=",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1364: github.com/jaegertracing/jaeger v1.27.0 h1:gcemni8e+twGuS0dUn3k/zKKalammUPK7mP+jpyM4e4=",
          "1365: github.com/jaegertracing/jaeger v1.27.0/go.mod h1:2NUmMwXOSOIrx6gwCgBvnK59yVXzQiqBUfD4tGowl2E=",
          "1366: github.com/jarcoal/httpmock v0.0.0-20180424175123-9c70cfe4a1da/go.mod h1:ks+b9deReOc7jgqp+e7LuFiCBH6Rm5hL32cLcEAArb4=",
          "1367: github.com/jcmturner/aescts/v2 v2.0.0 h1:9YKLH6ey7H4eDBXW8khjYslgyqG2xZikXP0EQFKrle8=",
          "1368: github.com/jcmturner/aescts/v2 v2.0.0/go.mod h1:AiaICIRyfYg35RUkr8yESTqvSy7csK90qZ5xfvvsoNs=",
          "1369: github.com/jcmturner/dnsutils/v2 v2.0.0 h1:lltnkeZGL0wILNvrNiVCR6Ro5PGU/SeBvVO/8c/iPbo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1540: github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99 h1:BQSFePA1RWJOlocH6Fxy8MmwDt+yVQYULKfN0RoTN8A=",
          "1541: github.com/jbenet/go-context v0.0.0-20150711004518-d14ea06fba99/go.mod h1:1lJo3i6rXxKeerYnT8Nvf0QmHCRC1n8sfWVwXF2Frvo=",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1380: github.com/jessevdk/go-flags v0.0.0-20180331124232-1c38ed7ad0cc/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "1381: github.com/jessevdk/go-flags v1.4.0/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=",
          "1382: github.com/jessevdk/go-flags v1.5.0/go.mod h1:Fw0T6WPc1dYxT4mKEZRfG5kJhaTDP9pj1c2EWnYs/m4=",
          "1383: github.com/jinzhu/gorm v0.0.0-20170222002820-5409931a1bb8 h1:CZkYfurY6KGhVtlalI4QwQ6T0Cu6iuY3e0x5RLu96WE=",
          "1384: github.com/jinzhu/gorm v0.0.0-20170222002820-5409931a1bb8/go.mod h1:Vla75njaFJ8clLU1W44h34PjIkijhjHIYnZxMqCdxqo=",
          "1385: github.com/jinzhu/inflection v0.0.0-20170102125226-1c35d901db3d h1:jRQLvyVGL+iVtDElaEIDdKwpPqUIZJfzkNLV34htpEc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1558: github.com/jhump/protoreflect v1.6.0 h1:h5jfMVslIg6l29nsMs0D8Wj17RDVdNYti0vDN/PZZoE=",
          "1559: github.com/jhump/protoreflect v1.6.0/go.mod h1:eaTn3RZAmMBcV0fifFvlm6VHNz3wSkYyXYWUh7ymB74=",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1395: github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=",
          "1396: github.com/joefitzgerald/rainbow-reporter v0.1.0/go.mod h1:481CNgqmVHQZzdIbN52CupLJyoVwB10FQ/IQlF1pdL8=",
          "1397: github.com/joeshaw/multierror v0.0.0-20140124173710-69b34d4ec901/go.mod h1:Z86h9688Y0wesXCyonoVr47MasHilkuLMqGhRZ4Hpak=",
          "1399: github.com/joho/godotenv v1.3.0/go.mod h1:7hK45KPybAkOC6peb+G5yklZfMxEjkZhHbwpqxOKXbg=",
          "1400: github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=",
          "1401: github.com/jonboulle/clockwork v0.2.2/go.mod h1:Pkfl5aHPm1nk2H9h0bjmnJD/BcgbGXUBGnn1kMkgxc8=",
          "1402: github.com/josharian/intern v1.0.0/go.mod h1:5DoeVV0s6jJacbCEi61lwdGj/aVlrQvzHFFd8Hwg//Y=",
          "",
          "[Removed Lines]",
          "1398: github.com/joho/godotenv v1.3.0 h1:Zjp+RcGpHhGlrMbJzXTrZZPrWj+1vfm90La1wgB6Bhc=",
          "",
          "[Added Lines]",
          "1575: github.com/johannesboyne/gofakes3 v0.0.0-20210819161434-5c8dfcfe5310 h1:CwSccv4SFVzhShEoWx3W4dyiWHwvLEL3lJbw+YIrQYg=",
          "1576: github.com/johannesboyne/gofakes3 v0.0.0-20210819161434-5c8dfcfe5310/go.mod h1:LIAXxPvcUXwOcTIj9LSNSUpE9/eMHalTWxsP/kmWxQI=",
          "1578: github.com/joho/godotenv v1.4.0 h1:3l4+N6zfMWnkbPEXKng2o2/MR5mSwTrBih4ZEkkz1lg=",
          "1579: github.com/joho/godotenv v1.4.0/go.mod h1:f4LDr5Voq0i2e/R5DDNOoa2zzDfwtkZa6DnEwAbqwq4=",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1446: github.com/karrick/godirwalk v1.16.1 h1:DynhcF+bztK8gooS0+NDJFrdNZjJ3gzVzC545UNA9iw=",
          "1447: github.com/karrick/godirwalk v1.16.1/go.mod h1:j4mkqPuvaLI8mp1DroR3P6ad7cyYd4c1qeJ3RV7ULlk=",
          "1448: github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=",
          "1449: github.com/keybase/go-crypto v0.0.0-20180614160407-5114a9a81e1b/go.mod h1:ghbZscTyKdM07+Fw3KSi0hcJm+AlEUWj8QLlPtijN/M=",
          "1450: github.com/kisielk/errcheck v1.1.0/go.mod h1:EZBBE59ingxPouuu3KfxchcWSUPOHkagtvWXihfKN4Q=",
          "1451: github.com/kisielk/errcheck v1.2.0/go.mod h1:/BMXB+zMLi60iA8Vv6Ksmxu/1UDYcXs4uQLJ+jE2L00=",
          "1452: github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=",
          "1453: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "1454: github.com/klauspost/compress v1.9.5/go.mod h1:RyIbtBH6LamlWaDj8nUwkbUhJ87Yi3uG0guNDohfE1A=",
          "1455: github.com/klauspost/compress v1.10.10/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=",
          "1456: github.com/klauspost/compress v1.11.0/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=",
          "1457: github.com/klauspost/compress v1.11.3/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1629: github.com/kevinburke/ssh_config v0.0.0-20201106050909-4977a11b4351/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=",
          "1630: github.com/kevinburke/ssh_config v1.1.0 h1:pH/t1WS9NzT8go394IqZeJTMHVm6Cr6ZJ6AQ+mdNo/o=",
          "1631: github.com/kevinburke/ssh_config v1.1.0/go.mod h1:CT57kijsi8u/K/BOFA39wgDQJ9CxiF4nAY/ojJ6r6mM=",
          "1638: github.com/klauspost/compress v1.10.3/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1459: github.com/klauspost/compress v1.11.13/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=",
          "1460: github.com/klauspost/compress v1.13.1/go.mod h1:8dP1Hq4DHOhN9w426knH3Rhby4rFm6D8eO+e+Dq5Gzg=",
          "1461: github.com/klauspost/compress v1.13.4/go.mod h1:8dP1Hq4DHOhN9w426knH3Rhby4rFm6D8eO+e+Dq5Gzg=",
          "1462: github.com/klauspost/compress v1.13.6 h1:P76CopJELS0TiO2mebmnzgWaajssP/EszplttgQxcgc=",
          "1463: github.com/klauspost/compress v1.13.6/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=",
          "1464: github.com/klauspost/cpuid v1.2.3/go.mod h1:Pj4uuM528wm8OyEC2QMXAi2YiTZ96dNQPGgoMS4s3ek=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1646: github.com/klauspost/compress v1.13.5/go.mod h1:/3/Vjq9QcHkK5uEr5lBEmyoZ1iFhe47etQ6QUkpK6sk=",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1500: github.com/leanovate/gopter v0.2.4/go.mod h1:gNcbPWNEWRe4lm+bycKqxUYoH5uoVje5SkOJ3uoLer8=",
          "1501: github.com/leesper/go_rng v0.0.0-20190531154944-a612b043e353/go.mod h1:N0SVk0uhy+E1PZ3C9ctsPRlvOPAFPkCNlcPBDkt0N3U=",
          "1502: github.com/leodido/go-urn v1.1.0/go.mod h1:+cyI34gQWZcE1eQU7NVgKkkzdXDQHr1dBMtdAPozLkw=",
          "1503: github.com/leodido/ragel-machinery v0.0.0-20181214104525-299bdde78165 h1:bCiVCRCs1Heq84lurVinUPy19keqGEe4jh5vtK37jcg=",
          "1504: github.com/leodido/ragel-machinery v0.0.0-20181214104525-299bdde78165/go.mod h1:WZxr2/6a/Ar9bMDc2rN/LJrE/hF6bXE4LPyDSIxwAfg=",
          "1505: github.com/lib/pq v0.0.0-20150723085316-0dad96c0b94f/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1688: github.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1507: github.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "1508: github.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "1509: github.com/lib/pq v1.3.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "1511: github.com/lib/pq v1.10.1/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=",
          "1512: github.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de h1:9TO3cAIGXtEhnIaL+V+BEER86oLrvS+kWobKpbJuye0=",
          "1513: github.com/liggitt/tabwriter v0.0.0-20181228230101-89fcab3d43de/go.mod h1:zAbeS9B/r2mtpb6U+EI2rYA5OAXxsYw6wTamcNW+zcE=",
          "1514: github.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=",
          "",
          "[Removed Lines]",
          "1510: github.com/lib/pq v1.10.1 h1:6VXZrLU0jHBYyAqrSPa+MgPfnSvTPuMgK+k0o5kVFWo=",
          "",
          "[Added Lines]",
          "1697: github.com/lib/pq v1.10.2 h1:AqzbZs4ZoCBp+GtejcpCpcxM3zlSMx29dXbUSeVtJb8=",
          "1698: github.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1542: github.com/markbates/oncer v0.0.0-20181203154359-bf2de49a0be2/go.mod h1:Ld9puTsIW75CHf65OeIOkyKbteujpZVXDpWK6YGZbxE=",
          "1543: github.com/markbates/safe v1.0.1/go.mod h1:nAqgmRi7cY2nqMc92/bSEeQA+R4OheNU2T1kNSCBdG0=",
          "1544: github.com/marstr/guid v1.1.0/go.mod h1:74gB1z2wpxxInTG6yaqA7KrtM0NZ+RbrcqDvYHefzho=",
          "1545: github.com/matryer/moq v0.0.0-20190312154309-6cfb0558e1bd/go.mod h1:9ELz6aaclSIGnZBoaSLZ3NAl1VTufbOrXBPvtcy6WiQ=",
          "1546: github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=",
          "1547: github.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=",
          "1548: github.com/mattn/go-colorable v0.1.4/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=",
          "1549: github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "1550: github.com/mattn/go-colorable v0.1.7/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "1552: github.com/mattn/go-colorable v0.1.8/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "1553: github.com/mattn/go-ieproxy v0.0.0-20190610004146-91bb50d98149/go.mod h1:31jz6HNzdxOmlERGGEc4v/dMssOfmp2p5bT/okiKFFc=",
          "1554: github.com/mattn/go-ieproxy v0.0.0-20190702010315-6dee0af9227d/go.mod h1:31jz6HNzdxOmlERGGEc4v/dMssOfmp2p5bT/okiKFFc=",
          "1555: github.com/mattn/go-ieproxy v0.0.0-20191113090002-7c0f6868bffe/go.mod h1:pYabZ6IHcRpFh7vIaLfK7rdcWgFEb3SFJ6/gNWuh88E=",
          "1556: github.com/mattn/go-ieproxy v0.0.1/go.mod h1:pYabZ6IHcRpFh7vIaLfK7rdcWgFEb3SFJ6/gNWuh88E=",
          "1557: github.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=",
          "1558: github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=",
          "",
          "[Removed Lines]",
          "1551: github.com/mattn/go-colorable v0.1.8 h1:c1ghPdyEDarC70ftn0y+A/Ee++9zz8ljHG1b13eJ0s8=",
          "",
          "[Added Lines]",
          "1732: github.com/matryer/is v1.2.0 h1:92UTHpy8CDwaJ08GqLDzhhuixiBUUD1p3AU6PHddz4A=",
          "1733: github.com/matryer/is v1.2.0/go.mod h1:2fLPjFQM9rhQ15aVEtbuwhJinnOqrmgXPNdZsdwlWXA=",
          "1735: github.com/mattdurham/gomplate/v3 v3.10.1-0.20220204190650-af65008b9bb1 h1:ks59H2rltT3Jepz1ea6YQsiM7/0t9lOnunQ7wMOA/hM=",
          "1736: github.com/mattdurham/gomplate/v3 v3.10.1-0.20220204190650-af65008b9bb1/go.mod h1:ytaz30hj1x0cltIl2cjkzI65ijBwKwitvKt+3rsWbRc=",
          "1743: github.com/mattn/go-colorable v0.1.9 h1:sqDoxXbdeALODt0DAeJCVp38ps9ZogZEAXjus69YV3U=",
          "1744: github.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=",
          "1748: github.com/mattn/go-ieproxy v0.0.1 h1:qiyop7gCflfhwCzGyeT0gro3sF9AIg9HU98JORTkqfI=",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2063: github.com/rs/cors v1.8.0 h1:P2KMzcFwrPoSjkF1WLRPsp3UMLyql8L4v9hQpVeK5so=",
          "2064: github.com/rs/cors v1.8.0/go.mod h1:EBwu+T5AvHOcXwvZIkQFjUN6s8Czyqw12GL/Y0tUyRM=",
          "2065: github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=",
          "2066: github.com/russross/blackfriday v1.5.2/go.mod h1:JO/DiYxRf+HjHt06OyowR9PTA263kcR/rfWxYHBV53g=",
          "2067: github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "2068: github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=",
          "2069: github.com/ryanuber/columnize v2.1.0+incompatible/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=",
          "2070: github.com/ryanuber/go-glob v0.0.0-20170128012129-256dc444b735/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=",
          "2071: github.com/ryanuber/go-glob v1.0.0/go.mod h1:807d1WSdnB0XRJzKNil9Om6lcp/3a0v4qIHxIXzX/Yc=",
          "2072: github.com/safchain/ethtool v0.0.0-20190326074333-42ed695e3de8/go.mod h1:Z0q5wiBQGYcxhMZ6gUqHn6pYNLypFAvaL3UvgZLR0U4=",
          "2073: github.com/safchain/ethtool v0.0.0-20200218184317-f459e2d13664/go.mod h1:Z0q5wiBQGYcxhMZ6gUqHn6pYNLypFAvaL3UvgZLR0U4=",
          "2074: github.com/safchain/ethtool v0.1.0 h1:SsRnt87qssm3RltLJze6kM+4fs32twq6mZEcBxbDMVg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2259: github.com/rs/xid v1.3.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=",
          "2260: github.com/rs/zerolog v1.26.1 h1:/ihwxqH+4z8UxyI70wM1z9yCvkWcfz/a3mj48k/Zngc=",
          "2261: github.com/rs/zerolog v1.26.1/go.mod h1:/wSSJWX7lVrsOwlbyTRSOJvqRlc+WjWlfes+CiJ+tmc=",
          "2267: github.com/ryanuber/go-glob v1.0.0 h1:iQh3xXAumdQ+4Ufa5b25cRpC5TYKlno6hsv6Cb3pkBk=",
          "2269: github.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46 h1:GHRpF1pTW19a8tTFrMLUcfWwyC0pnifVo2ClaLq+hP8=",
          "2270: github.com/ryszard/goskiplist v0.0.0-20150312221310-2dfbae5fcf46/go.mod h1:uAQ5PCi+MFsC7HjREoAz1BU+Mq60+05gifQSsHSDG/8=",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2094: github.com/sercand/kuberesolver v2.4.0+incompatible h1:WE2OlRf6wjLxHwNkkFLQGaZcVLEXjMjBPjjEU5vksH8=",
          "2095: github.com/sercand/kuberesolver v2.4.0+incompatible/go.mod h1:lWF3GL0xptCB/vCiJPl/ZshwPsX/n4Y7u0CW9E7aQIQ=",
          "2096: github.com/sergi/go-diff v1.0.0/go.mod h1:0CfEIISq7TuYL3j771MWULgwwjU+GofnZX9QAmXWZgo=",
          "2098: github.com/sergi/go-diff v1.1.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=",
          "2099: github.com/shirou/gopsutil v0.0.0-20181107111621-48177ef5f880/go.mod h1:5b4v6he4MtMOwMlS0TUMTu2PcXUg8+E1lC7eC3UO/RA=",
          "2100: github.com/shirou/gopsutil v2.20.8+incompatible/go.mod h1:5b4v6he4MtMOwMlS0TUMTu2PcXUg8+E1lC7eC3UO/RA=",
          "2101: github.com/shirou/gopsutil v2.20.9+incompatible/go.mod h1:5b4v6he4MtMOwMlS0TUMTu2PcXUg8+E1lC7eC3UO/RA=",
          "",
          "[Removed Lines]",
          "2097: github.com/sergi/go-diff v1.1.0 h1:we8PVUC3FE2uYfodKH/nBHMSetSfHDR6scGdBi+erh0=",
          "",
          "[Added Lines]",
          "2297: github.com/sergi/go-diff v1.2.0 h1:XU+rvMAioB0UC3q1MFrIQy4Vo5/4VsRDQQXHsEya6xQ=",
          "2298: github.com/sergi/go-diff v1.2.0/go.mod h1:STckp+ISIX8hZLjrqAeVduY0gWCT9IjLuqbuNXdaHfM=",
          "2299: github.com/shabbyrobe/gocovmerge v0.0.0-20180507124511-f6ea450bfb63/go.mod h1:n+VKSARF5y/tS9XFSP7vWDfS+GUC5vs/YT7M5XDTUEM=",
          "2300: github.com/shabbyrobe/gocovmerge v0.0.0-20190829150210-3e036491d500 h1:WnNuhiq+FOY3jNj6JXFT+eLN3CQ/oPIsDPRanvwsmbI=",
          "2301: github.com/shabbyrobe/gocovmerge v0.0.0-20190829150210-3e036491d500/go.mod h1:+njLrG5wSeoG4Ds61rFgEzKvenR2UHbjMoDHsczxly0=",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2152: github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=",
          "2153: github.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=",
          "2154: github.com/spf13/afero v1.1.2/go.mod h1:j4pytiNVoe2o6bmDsKpLACNPDBIoEAkihy7loJ1B0CQ=",
          "2155: github.com/spf13/afero v1.2.2/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=",
          "2156: github.com/spf13/afero v1.3.3/go.mod h1:5KUK8ByomD5Ti5Artl0RtHeI5pTF7MIDuXL3yY520V4=",
          "2157: github.com/spf13/afero v1.3.4/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2358: github.com/spf13/afero v1.2.0/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=",
          "2359: github.com/spf13/afero v1.2.1/go.mod h1:9ZxEEn6pIJ8Rxe320qSDBk6AsU0r9pR7Q4OcevTdifk=",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2272: github.com/uber/jaeger-lib v2.4.1+incompatible/go.mod h1:ComeNDZlWwrWnDv8aPp0Ba6+uUTzImX/AauajbLI56U=",
          "2273: github.com/ugorji/go v1.1.4/go.mod h1:uQMGLiO92mf5W77hV/PUCpI3pbzQx3CRekS0kk+RGrc=",
          "2274: github.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=",
          "2275: github.com/ugorji/go/codec v0.0.0-20181204163529-d75b2dcb6bc8/go.mod h1:VFNgLljTbGfSG7qAOspJ7OScBnGdDN/yBr0sguwnwf0=",
          "2276: github.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=",
          "2277: github.com/urfave/cli v0.0.0-20171014202726-7bc6a0acffa5/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=",
          "2278: github.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=",
          "2279: github.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=",
          "2280: github.com/urfave/cli v1.22.2/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=",
          "2281: github.com/urfave/cli/v2 v2.3.0/go.mod h1:LJmUH05zAU44vOAcrfzZQKsZbVcdbOG8rtL3/XcUArI=",
          "2282: github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=",
          "2283: github.com/valyala/fasttemplate v1.0.1/go.mod h1:UQGH1tvbgY+Nz5t2n7tXsz52dQxojPUpymEIMZ47gx8=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2480: github.com/ugorji/go v1.2.6/go.mod h1:anCg0y61KIhDlPZmnH+so+RQbysYVyDko0IMgJv0Nn0=",
          "2483: github.com/ugorji/go/codec v1.2.6 h1:7kbGefxLoDBuYXOms4yD7223OpNMMPNPZxXk5TvFcyQ=",
          "2484: github.com/ugorji/go/codec v1.2.6/go.mod h1:V6TCNZ4PHqoHGFZuSG1W8nrCzzdgA2DozYxWFFpvxTw=",
          "2489: github.com/urfave/cli v1.22.4/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2315: github.com/wvanbergen/kafka v0.0.0-20171203153745-e2edea948ddf/go.mod h1:nxx7XRXbR9ykhnC8lXqQyJS0rfvJGxKyKw/sT1YOttg=",
          "2316: github.com/wvanbergen/kazoo-go v0.0.0-20180202103751-f72d8611297a/go.mod h1:vQQATAGxVK20DC1rRubTJbZDDhhpA4QfU02pMdPxGO4=",
          "2317: github.com/xanzy/go-gitlab v0.15.0/go.mod h1:8zdQa/ri1dfn8eS3Ir1SyfvOKlw7WBJ8DVThkpGiXrs=",
          "2318: github.com/xdg-go/pbkdf2 v1.0.0 h1:Su7DPu48wXMwC3bs7MCNG+z4FhcyEuz5dlvchbq0B0c=",
          "2319: github.com/xdg-go/pbkdf2 v1.0.0/go.mod h1:jrpuAogTd400dnrH08LKmI/xc1MbPOebTwRqcT5RDeI=",
          "2320: github.com/xdg-go/scram v1.0.2 h1:akYIkZ28e6A96dkWNJQu3nmCzH3YfwMPQExUYDaRv7w=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2527: github.com/xanzy/ssh-agent v0.3.0/go.mod h1:3s9xbODqPuuhK9JV1R321M/FlMZSBvE5aY6eAcqrDh0=",
          "2528: github.com/xanzy/ssh-agent v0.3.1 h1:AmzO1SSWxw73zxFZPRwaMN1MohDw8UyHnmuxyceTEGo=",
          "2529: github.com/xanzy/ssh-agent v0.3.1/go.mod h1:QIE4lCeL7nkC25x+yA3LBIYfwCc1TFziCtG7cBAac6w=",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "2352: github.com/yvasiyarov/go-metrics v0.0.0-20140926110328-57bccd1ccd43/go.mod h1:aX5oPXxHm3bOH+xeAttToC8pqch2ScQN/JoXYupl6xs=",
          "2353: github.com/yvasiyarov/gorelic v0.0.0-20141212073537-a9bba5b9ab50/go.mod h1:NUSPSUX/bi6SeDMUh6brw0nXpxHnc96TguQh0+r/ssA=",
          "2354: github.com/yvasiyarov/newrelic_platform_go v0.0.0-20140908184405-b21fdbd4370f/go.mod h1:GlGEuHIJweS1mbCqG+7vt2nvWLzLLnRHbXz5JKd/Qbg=",
          "2355: gitlab.com/nyarla/go-crypt v0.0.0-20160106005555-d9a5dc2b789b/go.mod h1:T3BPAOm2cqquPa0MKWeNkmOM5RQsRhkrwMWonFMN7fE=",
          "2356: go.elastic.co/apm v1.5.0/go.mod h1:OdB9sPtM6Vt7oz3VXt7+KR96i9li74qrxBGHTQygFvk=",
          "2357: go.elastic.co/apm v1.11.0/go.mod h1:qoOSi09pnzJDh5fKnfY7bPmQgl8yl2tULdOu03xhui0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2567: github.com/zealic/xignore v0.3.3 h1:EpLXUgZY/JEzFkTc+Y/VYypzXtNz+MSOMVCGW5Q4CKQ=",
          "2568: github.com/zealic/xignore v0.3.3/go.mod h1:lhS8V7fuSOtJOKsvKI7WfsZE276/7AYEqokv3UiqEAU=",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "2365: go.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=",
          "2366: go.etcd.io/bbolt v1.3.5-0.20200615073812-232d8fc87f50/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=",
          "2367: go.etcd.io/bbolt v1.3.5/go.mod h1:G5EMThwa9y8QZGBClrRx5EY+Yw9kAhnjy3bSjsnlVTQ=",
          "2368: go.etcd.io/bbolt v1.3.6/go.mod h1:qXsaaIqmgQH0T+OPdb99Bf+PKfBBQVAdyD6TY9G8XM4=",
          "2369: go.etcd.io/etcd v0.0.0-20190709142735-eb7dd97135a5/go.mod h1:N0RPWo9FXJYZQI4BTkDtQylrstIigYHeR18ONnyTufk=",
          "2370: go.etcd.io/etcd v0.0.0-20191023171146-3cf2f69b5738/go.mod h1:dnLIgRNXwCJa5e+c6mIZCrds/GIG4ncV9HhK5PX7jPg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2582: go.etcd.io/bbolt v1.3.6 h1:/ecaJf0sk1l4l6V4awd65v2C3ILy7MSj+s/x1ADCIMU=",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "2404: go.mongodb.org/mongo-driver v1.7.1 h1:jwqTeEM3x6L9xDXrCxN0Hbg7vdGfPBOTIkr0+/LYZDA=",
          "2405: go.mongodb.org/mongo-driver v1.7.1/go.mod h1:Q4oFMbo1+MSNqICAdYMlC/zSTrwCogR4R8NzkI+yfU8=",
          "2406: go.mozilla.org/pkcs7 v0.0.0-20200128120323-432b2356ecb1/go.mod h1:SNgMg+EgDFwmvSmLRTNKC5fegJjB7v23qTQ0XLGUNHk=",
          "2407: go.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=",
          "2408: go.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=",
          "2409: go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2622: go.opencensus.io v0.15.0/go.mod h1:UffZAU+4sDEINUGP/B7UfBBkq4fqLu9zXAX7ke6CHW0=",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "2412: go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "2413: go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "2414: go.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=",
          "2415: go.opencensus.io v0.23.0 h1:gqCw0LfLxScz8irSi8exQc7fyQ0fKQU/qnC/X8+V/1M=",
          "2416: go.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=",
          "2417: go.opentelemetry.io/collector/model v0.30.0/go.mod h1:PcHNnM+RUl0uD8VkSn93PO78N7kQYhfqpI/eki57pl4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2631: go.opencensus.io v0.22.6/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "2471: go.uber.org/zap v1.14.1/go.mod h1:Mb2vm2krFEG5DV0W9qcHBYFtp/Wku1cvYaqPsS/WYfc=",
          "2472: go.uber.org/zap v1.16.0/go.mod h1:MA8QOfq0BHJwdXa996Y4dYkAqRKB8/1K1QMMZVaNZjQ=",
          "2473: go.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=",
          "2474: go.uber.org/zap v1.19.1 h1:ue41HOKd1vGURxrmeKIgELGb3jPW9DMUDGtsinblHwI=",
          "2475: go.uber.org/zap v1.19.1/go.mod h1:j3DNczoxDZroyBnOT1L/Q79cfUMGZxlv/9dzN7SM1rI=",
          "2476: go4.org/intern v0.0.0-20210108033219-3eb7198706b2 h1:VFTf+jjIgsldaz/Mr00VaCSswHJrI2hIjQygE/W4IMg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2691: go.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=",
          "2692: go.uber.org/zap v1.19.0/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "2478: go4.org/unsafe/assume-no-moving-gc v0.0.0-20201222175341-b30ae309168e/go.mod h1:FftLjUGFEDu5k8lt0ddY+HcrH/qU/0qk+H8j9/nTl3E=",
          "2479: go4.org/unsafe/assume-no-moving-gc v0.0.0-20201222180813-1025295fd063 h1:1tk03FUNpulq2cuWpXZWj649rwJpk0d20rxWiopKRmc=",
          "2480: go4.org/unsafe/assume-no-moving-gc v0.0.0-20201222180813-1025295fd063/go.mod h1:FftLjUGFEDu5k8lt0ddY+HcrH/qU/0qk+H8j9/nTl3E=",
          "2481: golang.org/x/crypto v0.0.0-20171113213409-9f005a07e0d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "2482: golang.org/x/crypto v0.0.0-20180505025534-4ec37c66abab/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "2483: golang.org/x/crypto v0.0.0-20180608092829-8ac0e0d97ce4/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2700: gocloud.dev v0.24.0 h1:cNtHD07zQQiv02OiwwDyVMuHmR7iQt2RLkzoAgz7wBs=",
          "2701: gocloud.dev v0.24.0/go.mod h1:uA+als++iBX5ShuG4upQo/3Zoz49iIPlYUWHV5mM8w8=",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "2485: golang.org/x/crypto v0.0.0-20181009213950-7c1a557ab941/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "2486: golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "2487: golang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "2488: golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "2489: golang.org/x/crypto v0.0.0-20190320223903-b7391e95e576/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "2490: golang.org/x/crypto v0.0.0-20190325154230-a5d413f7728c/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2709: golang.org/x/crypto v0.0.0-20190219172222-a4c6cb3142f2/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "2518: golang.org/x/crypto v0.0.0-20201112155050-0c6587e931a9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "2519: golang.org/x/crypto v0.0.0-20201117144127-c1f2f97bffc9/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "2520: golang.org/x/crypto v0.0.0-20201208171446-5f87f3452ae9/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "2521: golang.org/x/crypto v0.0.0-20201221181555-eec23a3978ad/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "2522: golang.org/x/crypto v0.0.0-20210220033148-5ea612d1eb83/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "2523: golang.org/x/crypto v0.0.0-20210314154223-e6e6c4f2bb5b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "2524: golang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "2525: golang.org/x/crypto v0.0.0-20210513164829-c07d793c2f9a/go.mod h1:P+XmwS30IXTQdn5tA2iutPOUgjI07+tq3H3K9MVA1s8=",
          "2526: golang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "2527: golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "2528: golang.org/x/crypto v0.0.0-20210915214749-c084706c2272/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "2529: golang.org/x/crypto v0.0.0-20210920023735-84f357641f63/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "2532: golang.org/x/exp v0.0.0-20180321215751-8460e604b9de/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "2533: golang.org/x/exp v0.0.0-20180807140117-3d87b88a115f/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "2534: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "",
          "[Removed Lines]",
          "2530: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519 h1:7I4JAnoQBe7ZtJcBaYHi5UtiO8tQHbUSXxL+pnGRANg=",
          "2531: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "",
          "[Added Lines]",
          "2743: golang.org/x/crypto v0.0.0-20201216223049-8b5274cf687f/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "2748: golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "2751: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "2755: golang.org/x/crypto v0.0.0-20211215165025-cf75a172585e h1:1SzTfNOXwIS2oWiMF+6qu0OUDKb0dauo6MoDUQyu+yU=",
          "2756: golang.org/x/crypto v0.0.0-20211215165025-cf75a172585e/go.mod h1:P+XmwS30IXTQdn5tA2iutPOUgjI07+tq3H3K9MVA1s8=",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "2574: golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "2575: golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "2576: golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "2577: golang.org/x/net v0.0.0-20170114055629-f2499483f923/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2578: golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2579: golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2580: golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2802: golang.org/x/mod v0.5.0/go.mod h1:5OXOZSfqPIIbmVBIIKWRFfZjPR0E5r58TLhUjH0a2Ro=",
          "2804: golang.org/x/net v0.0.0-20180530234432-1e491301e022/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "2588: golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2589: golang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2590: golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "2591: golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "2592: golang.org/x/net v0.0.0-20190320064053-1272bf9dcd53/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "2593: golang.org/x/net v0.0.0-20190403144856-b630fd6fe46b/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2818: golang.org/x/net v0.0.0-20190310074541-c10a0554eabf/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "2644: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "2645: golang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=",
          "2646: golang.org/x/net v0.0.0-20210324051636-2c4c8ecb7826/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=",
          "2647: golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=",
          "2648: golang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=",
          "2649: golang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2650: golang.org/x/net v0.0.0-20210525063256-abc453219eb5/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2875: golang.org/x/net v0.0.0-20210326060303-6b1517762897/go.mod h1:uSPa2vr4CLtc/ILN5odXGNXS6mhrKVzTaCXzk9m6W3k=",
          "2877: golang.org/x/net v0.0.0-20210410081132-afb366fc7cd1/go.mod h1:9tjilg8BloeKEkVJvy7fQ90B1CfIiPueXVOjqfkSzI8=",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "2653: golang.org/x/net v0.0.0-20210726213435-c6fcb2dbf985/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2654: golang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2655: golang.org/x/net v0.0.0-20210825183410-e898025ed96a/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2656: golang.org/x/net v0.0.0-20210917221730-978cfadd31cf/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2657: golang.org/x/net v0.0.0-20211020060615-d418f374d309/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2660: golang.org/x/oauth2 v0.0.0-20170807180024-9a379c6b3e95/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "2661: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "2662: golang.org/x/oauth2 v0.0.0-20181106182150-f42d05182288/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "",
          "[Removed Lines]",
          "2658: golang.org/x/net v0.0.0-20211111160137-58aab5ef257a h1:c83jeVQW0KGKNaKBRfelNYNHaev+qawl9yaA825s8XE=",
          "2659: golang.org/x/net v0.0.0-20211111160137-58aab5ef257a/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "",
          "[Added Lines]",
          "2886: golang.org/x/net v0.0.0-20210903162142-ad29c8ab022f/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "2889: golang.org/x/net v0.0.0-20211209124913-491a49abca63 h1:iocB37TsdFuN6IBRZ+ry36wrkoV51/tl5vOWqkcPGvY=",
          "2890: golang.org/x/net v0.0.0-20211209124913-491a49abca63/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "2668: golang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "2669: golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "2670: golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "2671: golang.org/x/oauth2 v0.0.0-20210210192628-66670185b0cd/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "2672: golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "2673: golang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2902: golang.org/x/oauth2 v0.0.0-20210126194326-f9ce19ea3013/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "2811: golang.org/x/sys v0.0.0-20210124154548-22da62e12c0c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2812: golang.org/x/sys v0.0.0-20210216163648-f7da38b97c65/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2813: golang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2814: golang.org/x/sys v0.0.0-20210225134936-a50acf3fe073/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2815: golang.org/x/sys v0.0.0-20210303074136-134d130e1a04/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2816: golang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3046: golang.org/x/sys v0.0.0-20210223095934-7937bea0104d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "2823: golang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2824: golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2825: golang.org/x/sys v0.0.0-20210426230700-d19ff857e887/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2826: golang.org/x/sys v0.0.0-20210503080704-8803ae5d1324/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "2827: golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2828: golang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3059: golang.org/x/sys v0.0.0-20210502180810-71e4cd670f79/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "2837: golang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2838: golang.org/x/sys v0.0.0-20210816074244-15123e1e1f71/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2839: golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2840: golang.org/x/sys v0.0.0-20210906170528-6f6e22806c34/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2841: golang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "2842: golang.org/x/sys v0.0.0-20210917161153-d61c044b1678/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3074: golang.org/x/sys v0.0.0-20210831042530-f4d43177bf5e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "2849: golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=",
          "2850: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "2851: golang.org/x/term v0.0.0-20210220032956-6a3ed077a48d/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "2854: golang.org/x/text v0.0.0-20160726164857-2910a502d2bf/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "2855: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "2856: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "",
          "[Removed Lines]",
          "2852: golang.org/x/term v0.0.0-20210615171337-6886f2dfbf5b h1:9zKuko04nR4gjZ4+DNjHqRlAJqbJETHwiNKDqTfOjfE=",
          "2853: golang.org/x/term v0.0.0-20210615171337-6886f2dfbf5b/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "[Added Lines]",
          "3087: golang.org/x/term v0.0.0-20210916214954-140adaaadfaf h1:Ihq/mm/suC88gF8WFcVwk+OV6Tq+wyA1O0E5UEvDglI=",
          "3088: golang.org/x/term v0.0.0-20210916214954-140adaaadfaf/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "2884: golang.org/x/tools v0.0.0-20190125232054-d66bd3c5d5a6/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "2885: golang.org/x/tools v0.0.0-20190206041539-40960b6deb8e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "2886: golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=",
          "2887: golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "2888: golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "2889: golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3122: golang.org/x/tools v0.0.0-20190308174544-00c44ba9c14f/go.mod h1:25r3+/G6/xytQM8iWZKq3Hn0kr0rgFKPUNVEL/dr3z4=",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "2891: golang.org/x/tools v0.0.0-20190329151228-23e29df326fe/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "2892: golang.org/x/tools v0.0.0-20190416151739-9c9e1878f421/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "2893: golang.org/x/tools v0.0.0-20190420181800-aa740d480789/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "2894: golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "2895: golang.org/x/tools v0.0.0-20190425222832-ad9eeb80039a/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "2896: golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3130: golang.org/x/tools v0.0.0-20190422233926-fe54fb35175b/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "2905: golang.org/x/tools v0.0.0-20190706070813-72ffa07ba3db/go.mod h1:jcCCGcm9btYwXyDqrUWc6MKQKKGJCWEQ3AfLSRIbEuI=",
          "2906: golang.org/x/tools v0.0.0-20190813034749-528a2984e271/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "2907: golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "2908: golang.org/x/tools v0.0.0-20190907020128-2ca718005c18/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "2909: golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "2910: golang.org/x/tools v0.0.0-20190920225731-5eefd052ad72/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3145: golang.org/x/tools v0.0.0-20190829051458-42f498d34c4d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "2949: golang.org/x/tools v0.0.0-20200616133436-c1934b75d054/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "2950: golang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "2951: golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "2954: golang.org/x/tools v0.0.0-20200721032237-77f530d86f9a/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "2955: golang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "2956: golang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "",
          "[Removed Lines]",
          "2952: golang.org/x/tools v0.0.0-20200626171337-aa94e735be7f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=",
          "2953: golang.org/x/tools v0.0.0-20200706234117-b22de6825cf7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "2964: golang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "2965: golang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "2966: golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "2967: golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=",
          "2968: golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=",
          "2969: golang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3203: golang.org/x/tools v0.0.0-20210108195828-e2f9c7f1fc8e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3011: google.golang.org/api v0.32.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=",
          "3012: google.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=",
          "3013: google.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=",
          "3014: google.golang.org/api v0.39.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=",
          "3015: google.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=",
          "3016: google.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3251: google.golang.org/api v0.37.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "3022: google.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=",
          "3023: google.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=",
          "3024: google.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=",
          "3025: google.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=",
          "3026: google.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=",
          "3027: google.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=",
          "3028: google.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=",
          "3029: google.golang.org/api v0.59.0 h1:fPfFO7gttlXYo2ALuD3HxJzh8vaF++4youI0BkFL6GE=",
          "3030: google.golang.org/api v0.59.0/go.mod h1:sT2boj7M9YJxZzgeZqXogmhfmRWDtPzT31xkieUbuZU=",
          "3031: google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3263: google.golang.org/api v0.52.0/go.mod h1:Him/adpjt0sxtkWViy0b6xyKW/SD71CwdJ7HqJo7SrU=",
          "3268: google.golang.org/api v0.58.0/go.mod h1:cAbP2FsxoGVNwtgNAmmn3y5G1TWAiVYRmg4yku3lv+E=",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "3039: google.golang.org/appengine v1.6.7 h1:FZR1q0exgwxzPzp/aF+VccGrSfxfPpkBqjIIEq3ru6c=",
          "3040: google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "3041: google.golang.org/cloud v0.0.0-20151119220103-975617b05ea8/go.mod h1:0H1ncTHf11KCFhTc/+EFRbzSCOZx+VUbRMk55Yv5MYk=",
          "3042: google.golang.org/genproto v0.0.0-20180518175338-11a468237815/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "3043: google.golang.org/genproto v0.0.0-20180608181217-32ee49c4dd80/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "3044: google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3282: google.golang.org/genproto v0.0.0-20170818010345-ee236bd376b0/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "3078: google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=",
          "3079: google.golang.org/genproto v0.0.0-20200527145253-8367513e4ece/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=",
          "3080: google.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=",
          "3083: google.golang.org/genproto v0.0.0-20200710124503-20a17af7bd0e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3084: google.golang.org/genproto v0.0.0-20200724131911-43cab4749ae7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3085: google.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "",
          "[Removed Lines]",
          "3081: google.golang.org/genproto v0.0.0-20200626011028-ee7919e894b5/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3082: google.golang.org/genproto v0.0.0-20200707001353-8e8330bf89df/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "3093: google.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3094: google.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3095: google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3096: google.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3097: google.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3098: google.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3335: google.golang.org/genproto v0.0.0-20210108203827-ffc7fda8c3d7/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "3336: google.golang.org/genproto v0.0.0-20210126160654-44e461bb6506/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "3101: google.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=",
          "3102: google.golang.org/genproto v0.0.0-20210429181445-86c259c2b4ab/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=",
          "3103: google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=",
          "3104: google.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=",
          "3105: google.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=",
          "3106: google.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=",
          "3107: google.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=",
          "3108: google.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=",
          "3109: google.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=",
          "3110: google.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=",
          "3111: google.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=",
          "3112: google.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=",
          "3113: google.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "3114: google.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "3115: google.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "3116: google.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3345: google.golang.org/genproto v0.0.0-20210517163617-5e0236093d7a/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=",
          "3352: google.golang.org/genproto v0.0.0-20210721163202-f1cecdd8b78a/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=",
          "3353: google.golang.org/genproto v0.0.0-20210722135532-667f2b7c528f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=",
          "3358: google.golang.org/genproto v0.0.0-20210825212027-de86158e7fda/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "3118: google.golang.org/genproto v0.0.0-20210917145530-b395a37504d4/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=",
          "3119: google.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "3120: google.golang.org/genproto v0.0.0-20211008145708-270636b82663/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "3121: google.golang.org/genproto v0.0.0-20211020151524-b7c3a969101a/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "3122: google.golang.org/genproto v0.0.0-20211112145013-271947fe86fd h1:8jqRgiTTWyKMDOM2AvhjA5dZLBSKXg1yFupPRBV/4fQ=",
          "3123: google.golang.org/genproto v0.0.0-20211112145013-271947fe86fd/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "3124: google.golang.org/grpc v0.0.0-20160317175043-d3ddb4469d5a/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "3125: google.golang.org/grpc v0.0.0-20180920234847-8997b5fa0873/go.mod h1:0JHn/cJsOMiMfNA9+DeHDlAU7KAAB5GDlYFpa9MZMio=",
          "3126: google.golang.org/grpc v1.0.5/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "3127: google.golang.org/grpc v1.12.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "3128: google.golang.org/grpc v1.14.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "3129: google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3366: google.golang.org/genproto v0.0.0-20211016002631-37fc39342514/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=",
          "3373: google.golang.org/grpc v1.8.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "3233: gopkg.in/square/go-jose.v2 v2.2.2/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "3234: gopkg.in/square/go-jose.v2 v2.3.1/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "3235: gopkg.in/square/go-jose.v2 v2.5.1/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "3236: gopkg.in/tomb.v1 v1.0.0-20140529071818-c131134a1947/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=",
          "3237: gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=",
          "3238: gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=",
          "3239: gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=",
          "3240: gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "3241: gopkg.in/yaml.v3 v3.0.0-20200605160147-a5ece683394c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3483: gopkg.in/square/go-jose.v2 v2.6.0 h1:NGk74WTnPKBNUhNzQX7PYcTLUjoq7mzKk2OKbvwk2iI=",
          "3484: gopkg.in/square/go-jose.v2 v2.6.0/go.mod h1:M9dMgbHiYLoDGQrXy7OpJDJWiKiU//h+vD76mk0e1AI=",
          "3488: gopkg.in/warnings.v0 v0.1.2 h1:wFXVbFY8DY5/xOe1ECiWdKCzZlxgshcYVNkBHstARME=",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "3315: modernc.org/memory v1.0.1/go.mod h1:NSjvC08+g3MLOpcAxQbdctcThAEX4YlJ20WWHYEhvRg=",
          "3316: modernc.org/sqlite v1.7.4/go.mod h1:xse4RHCm8Fzw0COf5SJqAyiDrVeDwAQthAS1V/woNIA=",
          "3317: modernc.org/tcl v1.4.1/go.mod h1:8YCvzidU9SIwkz7RZwlCWK61mhV8X9UwfkRDRp7y5e0=",
          "3318: rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=",
          "3319: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "3320: rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3568: nhooyr.io/websocket v1.8.6/go.mod h1:B70DZP8IakI65RVQ51MsWP/8jndNma26DVA/nFSCgW0=",
          "3569: nhooyr.io/websocket v1.8.7/go.mod h1:B70DZP8IakI65RVQ51MsWP/8jndNma26DVA/nFSCgW0=",
          "",
          "---------------"
        ],
        "pkg/config/config.go||pkg/config/config.go": [
          "File: pkg/config/config.go -> pkg/config/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"bytes\"",
          "5:  \"flag\"",
          "6:  \"fmt\"",
          "7:  \"io/ioutil\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: var (",
          "31:  featRemoteConfigs    = features.Feature(\"remote-configs\")",
          "32:  featIntegrationsNext = features.Feature(\"integrations-next\")",
          "34:  allFeatures = []features.Feature{",
          "35:   featRemoteConfigs,",
          "36:   featIntegrationsNext,",
          "37:  }",
          "38: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:  featDynamicConfig    = features.Feature(\"dynamic-config\")",
          "39:   featDynamicConfig,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "218: func LoadFile(filename string, expandEnvVars bool, c *Config) error {",
          "219:  buf, err := ioutil.ReadFile(filename)",
          "220:  if err != nil {",
          "222:  }",
          "223:  return LoadBytes(buf, expandEnvVars, c)",
          "224: }",
          "",
          "[Removed Lines]",
          "221:   return fmt.Errorf(\"error reading config file: %w\", err)",
          "",
          "[Added Lines]",
          "224:   return fmt.Errorf(\"error reading config file %w\", err)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "258:  return LoadBytes(bb, expandEnvVars, c)",
          "259: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266: func LoadDynamicConfiguration(url string, expandvar bool, c *Config) error {",
          "267:  if expandvar {",
          "268:   return errors.New(\"expand var is not supported when using dynamic configuration, use gomplate env instead\")",
          "269:  }",
          "270:  cmf, err := NewDynamicLoader()",
          "271:  if err != nil {",
          "272:   return err",
          "273:  }",
          "274:  err = cmf.LoadConfigByPath(url)",
          "275:  if err != nil {",
          "276:   return err",
          "277:  }",
          "279:  err = cmf.ProcessConfigs(c)",
          "280:  if err != nil {",
          "281:   return fmt.Errorf(\"error processing config templates %w\", err)",
          "282:  }",
          "283:  return nil",
          "284: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "301:   if features.Enabled(fs, featRemoteConfigs) {",
          "302:    return LoadRemote(url, expand, c)",
          "303:   }",
          "304:   return LoadFile(url, expand, c)",
          "305:  })",
          "306: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   if features.Enabled(fs, featDynamicConfig) && !features.Enabled(fs, featIntegrationsNext) {",
          "330:    return fmt.Errorf(\"integrations-next must be enabled for dynamic configuration to work\")",
          "331:   } else if features.Enabled(fs, featDynamicConfig) {",
          "332:    return LoadDynamicConfiguration(url, expand, c)",
          "333:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "311:  var (",
          "312:   cfg = DefaultConfig",
          "317:  )",
          "319:  fs.StringVar(&file, \"config.file\", \"\", \"configuration file to load\")",
          "320:  fs.BoolVar(&printVersion, \"version\", false, \"Print this build's version information\")",
          "321:  fs.BoolVar(&configExpandEnv, \"config.expand-env\", false, \"Expands ${var} in config according to the values of the environment variables.\")",
          "322:  cfg.RegisterFlags(fs)",
          "",
          "[Removed Lines]",
          "314:   printVersion    bool",
          "315:   file            string",
          "316:   configExpandEnv bool",
          "",
          "[Added Lines]",
          "344:   printVersion      bool",
          "345:   file              string",
          "346:   dynamicConfigPath string",
          "347:   configExpandEnv   bool",
          "351:  fs.StringVar(&dynamicConfigPath, \"config.dynamic-config-path\", \"\", \"dynamic configuration path that points to a single configuration file supports file:// or s3:// protocols. Must be enabled by -enable-features=dynamic-config,integrations-next\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "331:   os.Exit(0)",
          "332:  }",
          "335:   return nil, fmt.Errorf(\"-config.file flag required\")",
          "336:  } else if err := loader(file, configExpandEnv, &cfg); err != nil {",
          "337:   return nil, fmt.Errorf(\"error loading config file %s: %w\", file, err)",
          "",
          "[Removed Lines]",
          "334:  if file == \"\" {",
          "",
          "[Added Lines]",
          "367:  if features.Enabled(fs, featDynamicConfig) {",
          "368:   if dynamicConfigPath == \"\" {",
          "369:    return nil, fmt.Errorf(\"-config.dynamic-config-path flag required when using dynamic configuration\")",
          "370:   } else if err := loader(dynamicConfigPath, configExpandEnv, &cfg); err != nil {",
          "371:    return nil, fmt.Errorf(\"error loading dynamic configuration file %s: %w\", dynamicConfigPath, err)",
          "372:   }",
          "373:  } else if file == \"\" {",
          "",
          "---------------"
        ],
        "pkg/config/config_test.go||pkg/config/config_test.go": [
          "File: pkg/config/config_test.go -> pkg/config/config_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"testing\"",
          "8:  \"time\"",
          "10:  \"github.com/grafana/agent/pkg/metrics\"",
          "11:  \"github.com/grafana/agent/pkg/metrics/instance\"",
          "12:  \"github.com/grafana/agent/pkg/util\"",
          "14:  \"github.com/prometheus/common/model\"",
          "15:  promCfg \"github.com/prometheus/prometheus/config\"",
          "16:  \"github.com/prometheus/prometheus/pkg/labels\"",
          "",
          "[Removed Lines]",
          "13:  commonCfg \"github.com/prometheus/common/config\"",
          "",
          "[Added Lines]",
          "10:  commonCfg \"github.com/prometheus/common/config\"",
          "12:  \"github.com/stretchr/testify/assert\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "451:  require.Equal(t, expected, c.Metrics.Global.RemoteWrite[0])",
          "452:  require.True(t, c.Metrics.Global.RemoteWrite[0].SendExemplars)",
          "453: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "458: func TestLoadDynamicConfigurationExpandError(t *testing.T) {",
          "459:  err := LoadDynamicConfiguration(\"\", true, nil)",
          "460:  assert.Error(t, err)",
          "461:  assert.True(t, strings.Contains(err.Error(), \"expand var is not supported when using dynamic configuration, use gomplate env instead\"))",
          "462: }",
          "",
          "---------------"
        ],
        "pkg/config/dynamicconfig.go||pkg/config/dynamicconfig.go": [
          "File: pkg/config/dynamicconfig.go -> pkg/config/dynamicconfig.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package config",
          "4: type LoaderConfig struct {",
          "6:  Sources []Datasource `yaml:\"datasources\"`",
          "10:  TemplatePaths []string `yaml:\"template_paths\"`",
          "12:  AgentFilter           string `yaml:\"agent_filter,omitempty\"`",
          "13:  ServerFilter          string `yaml:\"server_filter,omitempty\"`",
          "14:  MetricsFilter         string `yaml:\"metrics_filter,omitempty\"`",
          "15:  MetricsInstanceFilter string `yaml:\"metrics_instance_filter,omitempty\"`",
          "16:  IntegrationsFilter    string `yaml:\"integrations_filter,omitempty\"`",
          "17:  LogsFilter            string `yaml:\"logs_filter,omitempty\"`",
          "18:  TracesFilter          string `yaml:\"traces_filter,omitempty\"`",
          "19: }",
          "22: type Datasource struct {",
          "23:  Name string `yaml:\"name\"`",
          "24:  URL  string `yaml:\"url\"`",
          "25: }",
          "",
          "---------------"
        ],
        "pkg/config/dynamicloader.go||pkg/config/dynamicloader.go": [
          "File: pkg/config/dynamicloader.go -> pkg/config/dynamicloader.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package config",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"io/fs\"",
          "7:  \"io/ioutil\"",
          "8:  \"net/url\"",
          "9:  \"path/filepath\"",
          "10:  \"strings\"",
          "12:  v2 \"github.com/grafana/agent/pkg/integrations/v2\"",
          "13:  \"github.com/grafana/agent/pkg/logs\"",
          "14:  \"github.com/grafana/agent/pkg/metrics\"",
          "15:  \"github.com/grafana/agent/pkg/metrics/instance\"",
          "16:  \"github.com/grafana/agent/pkg/traces\"",
          "17:  \"github.com/hairyhenderson/go-fsimpl\"",
          "18:  \"github.com/hairyhenderson/go-fsimpl/blobfs\"",
          "19:  \"github.com/hairyhenderson/go-fsimpl/filefs\"",
          "20:  \"github.com/hairyhenderson/gomplate/v3/data\"",
          "21:  \"github.com/hairyhenderson/gomplate/v3/loader\"",
          "22:  \"github.com/hashicorp/go-multierror\"",
          "23:  \"github.com/weaveworks/common/server\"",
          "24:  \"gopkg.in/yaml.v2\"",
          "25: )",
          "30: type DynamicLoader struct {",
          "31:  loader *loader.ConfigLoader",
          "32:  mux    fsimpl.FSMux",
          "33:  cfg    *LoaderConfig",
          "34: }",
          "37: func NewDynamicLoader() (*DynamicLoader, error) {",
          "38:  return &DynamicLoader{",
          "39:   mux: newFSProvider(),",
          "40:  }, nil",
          "41: }",
          "44: func (c *DynamicLoader) LoadConfig(cfg LoaderConfig) error {",
          "45:  sources := make(map[string]*data.Source)",
          "46:  for _, v := range cfg.Sources {",
          "47:   sourceURL, err := url.Parse(v.URL)",
          "48:   if err != nil {",
          "49:    return err",
          "50:   }",
          "51:   sources[v.Name] = &data.Source{",
          "52:    URL:   sourceURL,",
          "53:    Alias: v.Name,",
          "54:   }",
          "55:  }",
          "57:  if cfg.IntegrationsFilter == \"\" {",
          "58:   cfg.IntegrationsFilter = \"integrations-*.yml\"",
          "59:  }",
          "60:  if cfg.AgentFilter == \"\" {",
          "61:   cfg.AgentFilter = \"agent-*.yml\"",
          "62:  }",
          "63:  if cfg.ServerFilter == \"\" {",
          "64:   cfg.ServerFilter = \"server-*.yml\"",
          "65:  }",
          "66:  if cfg.MetricsFilter == \"\" {",
          "67:   cfg.MetricsFilter = \"metrics-*.yml\"",
          "68:  }",
          "69:  if cfg.MetricsInstanceFilter == \"\" {",
          "70:   cfg.MetricsInstanceFilter = \"metrics_instances-*.yml\"",
          "71:  }",
          "72:  if cfg.LogsFilter == \"\" {",
          "73:   cfg.LogsFilter = \"logs-*.yml\"",
          "74:  }",
          "75:  if cfg.TracesFilter == \"\" {",
          "76:   cfg.TracesFilter = \"traces-*.yml\"",
          "77:  }",
          "78:  cl := loader.NewConfigLoader(context.Background(), sources)",
          "79:  c.loader = cl",
          "80:  c.cfg = &cfg",
          "81:  return nil",
          "82: }",
          "85: func (c *DynamicLoader) LoadConfigByPath(path string) error {",
          "86:  var buf []byte",
          "87:  var err error",
          "88:  switch {",
          "89:  case strings.HasPrefix(path, \"file://\"):",
          "92:   stripPath := strings.ReplaceAll(path, \"file://\", \"\")",
          "93:   buf, err = ioutil.ReadFile(stripPath)",
          "94:   if err != nil {",
          "95:    return err",
          "96:   }",
          "97:  case strings.HasPrefix(path, \"s3://\"):",
          "98:   blobURL, err := url.Parse(path)",
          "99:   if err != nil {",
          "100:    return err",
          "101:   }",
          "102:   buf, err = data.ReadBlob(*blobURL)",
          "103:   if err != nil {",
          "104:    return err",
          "105:   }",
          "106:  default:",
          "107:   return fmt.Errorf(\"config path must start with file:// or s3://, not %s\", path)",
          "108:  }",
          "110:  cl := &LoaderConfig{}",
          "111:  err = yaml.Unmarshal(buf, cl)",
          "112:  if err != nil {",
          "113:   return err",
          "114:  }",
          "115:  return c.LoadConfig(*cl)",
          "116: }",
          "119: func (c *DynamicLoader) ProcessConfigs(cfg *Config) error {",
          "120:  if c.cfg == nil {",
          "121:   return fmt.Errorf(\"LoadConfig or LoadConfigByPath must be called\")",
          "122:  }",
          "123:  var returnErr error",
          "125:  err := c.processAgent(cfg)",
          "126:  returnErr = errorAppend(returnErr, err)",
          "128:  serverConfig, err := c.processServer()",
          "129:  returnErr = errorAppend(returnErr, err)",
          "130:  if serverConfig != nil {",
          "131:   cfg.Server = *serverConfig",
          "132:  }",
          "134:  metricConfig, err := c.processMetrics()",
          "135:  returnErr = errorAppend(returnErr, err)",
          "136:  if metricConfig != nil {",
          "137:   cfg.Metrics = *metricConfig",
          "138:  }",
          "140:  instancesConfigs, err := c.processMetricInstances()",
          "141:  returnErr = errorAppend(returnErr, err)",
          "142:  cfg.Metrics.Configs = append(cfg.Metrics.Configs, instancesConfigs...)",
          "144:  logsCfg, err := c.processLogs()",
          "145:  returnErr = errorAppend(returnErr, err)",
          "146:  if logsCfg != nil {",
          "147:   cfg.Logs = logsCfg",
          "148:  }",
          "150:  traceConfigs, err := c.processTraces()",
          "151:  returnErr = errorAppend(returnErr, err)",
          "152:  if traceConfigs != nil {",
          "153:   cfg.Traces = *traceConfigs",
          "154:  }",
          "156:  integrations, err := c.processIntegrations()",
          "157:  returnErr = errorAppend(returnErr, err)",
          "159:  cfg.Integrations.ExtraIntegrations = append(cfg.Integrations.ExtraIntegrations, integrations...)",
          "161:  return returnErr",
          "162: }",
          "164: func (c *DynamicLoader) processAgent(cfg *Config) error {",
          "165:  var returnError error",
          "166:  found := 0",
          "167:  for _, path := range c.cfg.TemplatePaths {",
          "168:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.AgentFilter, \"agent\")",
          "169:   returnError = errorAppend(returnError, err)",
          "170:   found = len(filesContents) + found",
          "171:   if len(filesContents) == 1 {",
          "172:    err = LoadBytes([]byte(filesContents[0]), false, cfg)",
          "173:    returnError = errorAppend(returnError, err)",
          "174:   }",
          "175:  }",
          "176:  if found > 1 {",
          "177:   returnError = errorAppend(returnError, fmt.Errorf(\"found %d agent templates; expected 0 or 1\", found))",
          "178:  }",
          "180:  if found == 0 {",
          "181:   _ = LoadBytes([]byte(\"{}\"), false, cfg)",
          "182:  }",
          "183:  return returnError",
          "184: }",
          "186: func (c *DynamicLoader) processServer() (*server.Config, error) {",
          "187:  var returnError error",
          "188:  found := 0",
          "189:  var cfg *server.Config",
          "190:  for _, path := range c.cfg.TemplatePaths {",
          "191:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.ServerFilter, \"server\")",
          "192:   returnError = errorAppend(returnError, err)",
          "193:   found = len(filesContents) + found",
          "194:   if len(filesContents) == 1 {",
          "195:    cfg = &server.Config{}",
          "196:    err = yaml.Unmarshal([]byte(filesContents[0]), cfg)",
          "197:    returnError = errorAppend(returnError, err)",
          "198:   }",
          "199:  }",
          "200:  if found > 1 {",
          "201:   returnError = errorAppend(returnError, fmt.Errorf(\"found %d server templates; expected 0 or 1\", found))",
          "202:  }",
          "203:  return cfg, returnError",
          "204: }",
          "206: func (c *DynamicLoader) processMetrics() (*metrics.Config, error) {",
          "207:  var returnError error",
          "208:  found := 0",
          "209:  var cfg *metrics.Config",
          "210:  for _, path := range c.cfg.TemplatePaths {",
          "211:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.MetricsFilter, \"metrics\")",
          "212:   returnError = errorAppend(returnError, err)",
          "213:   found = len(filesContents) + found",
          "214:   if len(filesContents) == 1 {",
          "215:    cfg = &metrics.Config{}",
          "216:    err = yaml.Unmarshal([]byte(filesContents[0]), cfg)",
          "217:    returnError = errorAppend(returnError, err)",
          "218:   }",
          "219:  }",
          "220:  if found > 1 {",
          "221:   returnError = errorAppend(returnError, fmt.Errorf(\"found %d metrics templates; expected 0 or 1\", found))",
          "222:  }",
          "223:  return cfg, returnError",
          "224: }",
          "226: func (c *DynamicLoader) processMetricInstances() ([]instance.Config, error) {",
          "227:  var returnError error",
          "228:  var configs []instance.Config",
          "229:  for _, path := range c.cfg.TemplatePaths {",
          "230:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.MetricsInstanceFilter, \"metrics instances\")",
          "231:   returnError = errorAppend(returnError, err)",
          "232:   for _, c := range filesContents {",
          "233:    cfg := &instance.Config{}",
          "234:    err = yaml.Unmarshal([]byte(c), cfg)",
          "235:    returnError = errorAppend(returnError, err)",
          "236:    configs = append(configs, *cfg)",
          "237:   }",
          "238:  }",
          "240:  return configs, returnError",
          "241: }",
          "243: func (c *DynamicLoader) processIntegrations() ([]v2.Config, error) {",
          "244:  var returnError error",
          "245:  var configs []v2.Config",
          "246:  for _, path := range c.cfg.TemplatePaths {",
          "247:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.IntegrationsFilter, \"integrations\")",
          "248:   returnError = errorAppend(returnError, err)",
          "249:   for _, c := range filesContents {",
          "250:    intConfigs, err := unmarshalYamlToExporters(c)",
          "251:    if err != nil {",
          "252:     returnError = errorAppend(returnError, err)",
          "253:     continue",
          "254:    }",
          "255:    configs = append(configs, intConfigs...)",
          "256:   }",
          "257:  }",
          "258:  return configs, returnError",
          "259: }",
          "261: func (c *DynamicLoader) processLogs() (*logs.Config, error) {",
          "262:  var returnError error",
          "263:  found := 0",
          "264:  var cfg *logs.Config",
          "265:  for _, path := range c.cfg.TemplatePaths {",
          "266:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.LogsFilter, \"logs\")",
          "267:   returnError = errorAppend(returnError, err)",
          "268:   found = len(filesContents) + found",
          "269:   if len(filesContents) == 1 {",
          "270:    cfg = &logs.Config{}",
          "271:    err = yaml.Unmarshal([]byte(filesContents[0]), cfg)",
          "272:    returnError = errorAppend(returnError, err)",
          "273:   }",
          "274:  }",
          "275:  if found > 1 {",
          "276:   returnError = errorAppend(returnError, fmt.Errorf(\"found %d logs templates; expected 0 or 1\", found))",
          "277:  }",
          "278:  return cfg, returnError",
          "279: }",
          "281: func (c *DynamicLoader) processTraces() (*traces.Config, error) {",
          "282:  var returnError error",
          "283:  found := 0",
          "284:  var cfg *traces.Config",
          "285:  for _, path := range c.cfg.TemplatePaths {",
          "286:   filesContents, err := c.retrieveMatchingFileContents(path, c.cfg.TracesFilter, \"traces\")",
          "287:   returnError = errorAppend(returnError, err)",
          "288:   found = len(filesContents) + found",
          "289:   if len(filesContents) == 1 {",
          "290:    cfg = &traces.Config{}",
          "291:    err = yaml.Unmarshal([]byte(filesContents[0]), cfg)",
          "292:    returnError = errorAppend(returnError, err)",
          "293:   }",
          "294:  }",
          "295:  if found > 1 {",
          "296:   returnError = errorAppend(returnError, fmt.Errorf(\"found %d traces templates; expected 0 or 1\", found))",
          "297:  }",
          "298:  return cfg, returnError",
          "299: }",
          "303: func (c *DynamicLoader) retrieveMatchingFileContents(path, pattern, name string) ([]string, error) {",
          "304:  var filesContents []string",
          "305:  handler, err := c.mux.Lookup(path)",
          "306:  if err != nil {",
          "307:   return nil, err",
          "308:  }",
          "309:  files, err := fs.ReadDir(handler, \".\")",
          "310:  if err != nil {",
          "311:   return nil, err",
          "312:  }",
          "313:  for _, f := range files {",
          "316:   if f.IsDir() {",
          "317:    continue",
          "318:   }",
          "319:   matched, err := filepath.Match(pattern, f.Name())",
          "320:   if err != nil {",
          "321:    return nil, err",
          "322:   }",
          "323:   if matched {",
          "324:    contents, err := fs.ReadFile(handler, f.Name())",
          "325:    if err != nil {",
          "326:     return nil, err",
          "327:    }",
          "328:    processedConfigString, err := c.loader.GenerateTemplate(name, string(contents))",
          "329:    if err != nil {",
          "330:     return nil, err",
          "331:    }",
          "332:    filesContents = append(filesContents, processedConfigString)",
          "333:   }",
          "334:  }",
          "335:  return filesContents, nil",
          "336: }",
          "340: func unmarshalYamlToExporters(contents string) ([]v2.Config, error) {",
          "341:  o := &v2.SubsystemOptions{}",
          "342:  err := yaml.Unmarshal([]byte(contents), o)",
          "343:  if err != nil {",
          "344:   return nil, err",
          "345:  }",
          "346:  return o.Configs, nil",
          "347: }",
          "349: func newFSProvider() fsimpl.FSMux {",
          "350:  mux := fsimpl.NewMux()",
          "351:  mux.Add(filefs.FS)",
          "352:  mux.Add(blobfs.FS)",
          "353:  return mux",
          "354: }",
          "358: func errorAppend(root error, newErr error) error {",
          "359:  if newErr == nil {",
          "360:   return root",
          "361:  }",
          "362:  return multierror.Append(root, newErr)",
          "363: }",
          "",
          "---------------"
        ],
        "pkg/config/dynamicloader_configs_test.go||pkg/config/dynamicloader_configs_test.go": [
          "File: pkg/config/dynamicloader_configs_test.go -> pkg/config/dynamicloader_configs_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: package config",
          "4: import (",
          "5:  \"strings\"",
          "6:  \"testing\"",
          "8:  \"github.com/grafana/agent/pkg/integrations/node_exporter\"",
          "10:  v2 \"github.com/grafana/agent/pkg/integrations/v2\"",
          "11:  \"github.com/grafana/agent/pkg/integrations/windows_exporter\"",
          "12:  \"github.com/stretchr/testify/assert\"",
          "13:  \"github.com/stretchr/testify/require\"",
          "14: )",
          "16: func TestConfigMaker(t *testing.T) {",
          "17:  configStr := `wal_directory: /tmp/wal`",
          "18:  tDir := generatePath(t)",
          "19:  writeFile(t, tDir, \"metrics-1.yml\", configStr)",
          "20:  fileFS := generateFilePath(tDir)",
          "21:  loaderCfg := LoaderConfig{",
          "22:   Sources:       nil,",
          "23:   TemplatePaths: []string{fileFS},",
          "24:  }",
          "25:  cmf := generateLoader(t, loaderCfg)",
          "26:  configs, err := cmf.processMetrics()",
          "27:  require.NoError(t, err)",
          "28:  assert.NotNil(t, configs)",
          "29:  assert.Equal(t, configs.WALDir, \"/tmp/wal\")",
          "30: }",
          "32: func TestConfigMakerWithFakeFiles(t *testing.T) {",
          "33:  configStr := `wal_directory: /tmp/wal`",
          "34:  tDir := generatePath(t)",
          "35:  writeFile(t, tDir, \"metrics-1.yml\", configStr)",
          "36:  writeFile(t, tDir, \"fake.yml\", configStr)",
          "37:  fileFS := generateFilePath(tDir)",
          "38:  loaderCfg := LoaderConfig{",
          "39:   Sources:       nil,",
          "40:   TemplatePaths: []string{fileFS},",
          "41:  }",
          "42:  cmf := generateLoader(t, loaderCfg)",
          "43:  configs, err := cmf.processMetrics()",
          "44:  require.NoError(t, err)",
          "45:  assert.NotNil(t, configs)",
          "46:  assert.Equal(t, configs.WALDir, \"/tmp/wal\")",
          "47: }",
          "49: func TestConfigMakerWithMultipleMetrics(t *testing.T) {",
          "50:  configStr := `wal_directory: /tmp/wal`",
          "51:  tDir := generatePath(t)",
          "52:  writeFile(t, tDir, \"metrics-1.yml\", configStr)",
          "53:  writeFile(t, tDir, \"metrics-2.yml\", configStr)",
          "55:  fileFS := generateFilePath(tDir)",
          "56:  loaderCfg := LoaderConfig{",
          "57:   Sources:       nil,",
          "58:   TemplatePaths: []string{fileFS},",
          "59:  }",
          "60:  cmf := generateLoader(t, loaderCfg)",
          "61:  _, err := cmf.processMetrics()",
          "62:  assert.Error(t, err)",
          "63:  assert.True(t, strings.Contains(err.Error(), \"found 2 metrics templates; expected 0 or 1\"))",
          "64: }",
          "66: func TestConfigMakerWithMetricsAndInstances(t *testing.T) {",
          "67:  configStr := `wal_directory: /tmp/wal`",
          "68:  tDir := generatePath(t)",
          "69:  writeFile(t, tDir, \"metrics-1.yml\", configStr)",
          "70:  writeFile(t, tDir, \"metrics_instances-1.yml\", \"name: t1\")",
          "71:  writeFile(t, tDir, \"metrics_instances-2.yml\", \"name: t2\")",
          "72:  writeFile(t, tDir, \"server-1.yml\", `",
          "73: http_listen_port: 12345",
          "74: log_level: debug",
          "75: `)",
          "76:  fileFS := generateFilePath(tDir)",
          "78:  loaderCfg := LoaderConfig{",
          "79:   Sources:       nil,",
          "80:   TemplatePaths: []string{fileFS},",
          "81:  }",
          "82:  cmf := generateLoader(t, loaderCfg)",
          "83:  cfg := &Config{}",
          "84:  err := cmf.ProcessConfigs(cfg)",
          "85:  require.NoError(t, err)",
          "86:  assert.Len(t, cfg.Metrics.Configs, 2)",
          "87: }",
          "89: func TestConfigMakerWithExporter(t *testing.T) {",
          "90:  configStr := `",
          "91: windows_exporter:",
          "92:   enabled_collectors: one,two,three",
          "93: `",
          "94:  tDir := generatePath(t)",
          "95:  writeFile(t, tDir, \"integrations-1.yml\", configStr)",
          "96:  fileFS := generateFilePath(tDir)",
          "98:  loaderCfg := LoaderConfig{",
          "99:   Sources:       nil,",
          "100:   TemplatePaths: []string{fileFS},",
          "101:  }",
          "102:  cmf := generateLoader(t, loaderCfg)",
          "103:  configs, err := cmf.processIntegrations()",
          "104:  require.NoError(t, err)",
          "105:  assert.Len(t, configs, 1)",
          "106:  wincfg, _ := configs[0].(v2.UpgradedConfig).LegacyConfig()",
          "107:  assert.True(t, wincfg.(*windows_exporter.Config).EnabledCollectors == \"one,two,three\")",
          "108: }",
          "110: func TestConfigMakerWithMultipleExporter(t *testing.T) {",
          "111:  configStr := `",
          "112: windows_exporter:",
          "113:   enabled_collectors: one,two,three",
          "114:   instance: testinstance",
          "115: node_exporter:",
          "116:   autoscrape:",
          "117:     enable: false",
          "118: `",
          "119:  tDir := generatePath(t)",
          "120:  writeFile(t, tDir, \"integrations-1.yml\", configStr)",
          "121:  fileFS := generateFilePath(tDir)",
          "123:  loaderCfg := LoaderConfig{",
          "124:   Sources:       nil,",
          "125:   TemplatePaths: []string{fileFS},",
          "126:  }",
          "127:  cmf := generateLoader(t, loaderCfg)",
          "128:  configs, err := cmf.processIntegrations()",
          "129:  require.NoError(t, err)",
          "130:  assert.Len(t, configs, 2)",
          "131:  for _, cfg := range configs {",
          "132:   switch v := cfg.(type) {",
          "133:   default:",
          "134:    t.Errorf(\"unexpected type %T\", v)",
          "135:   case v2.UpgradedConfig:",
          "136:    oldConfig, _ := v.LegacyConfig()",
          "137:    switch oc := oldConfig.(type) {",
          "138:    case *windows_exporter.Config:",
          "139:     assert.True(t, \"one,two,three\" == oc.EnabledCollectors)",
          "140:    case *node_exporter.Config:",
          "141:     assert.NotNil(t, v)",
          "142:    }",
          "143:   }",
          "144:  }",
          "145: }",
          "147: func TestLoadingFromS3(t *testing.T) {",
          "148:  configStr := `",
          "149: windows_exporter:",
          "150:   enabled_collectors: one,two,three",
          "151:   instance: testinstance",
          "152: `",
          "153:  u := pushFilesToFakeS3(t, \"integrations-1.yml\", configStr)",
          "154:  s3Url := \"s3://mybucket/?region=us-east-1&disableSSL=true&s3ForcePathStyle=true&endpoint=\" + u.Host",
          "155:  loaderCfg := LoaderConfig{",
          "156:   Sources:       nil,",
          "157:   TemplatePaths: []string{s3Url},",
          "158:  }",
          "159:  cmf := generateLoader(t, loaderCfg)",
          "160:  cfg, err := cmf.processIntegrations()",
          "161:  require.NoError(t, err)",
          "162:  assert.Len(t, cfg, 1)",
          "163:  oc, _ := cfg[0].(v2.UpgradedConfig).LegacyConfig()",
          "164:  winCfg := oc.(*windows_exporter.Config)",
          "165:  assert.True(t, winCfg.EnabledCollectors == \"one,two,three\")",
          "166: }",
          "168: func TestMultiplex(t *testing.T) {",
          "169:  configStr := `",
          "170: redis_exporter_configs:",
          "171: - redis_addr: localhost:6379",
          "172:   autoscrape:",
          "173:     metric_relabel_configs:",
          "174:     - source_labels: [__address__]",
          "175:       target_label: \"banana\"",
          "176:       replacement: \"apple\"",
          "177: - redis_addr: localhost:6380",
          "178: `",
          "179:  tDir := generatePath(t)",
          "180:  writeFile(t, tDir, \"integrations-1.yml\", configStr)",
          "181:  fileFS := generateFilePath(tDir)",
          "183:  loaderCfg := LoaderConfig{",
          "184:   Sources:       nil,",
          "185:   TemplatePaths: []string{fileFS},",
          "186:  }",
          "187:  cmf := generateLoader(t, loaderCfg)",
          "188:  cfg := &Config{}",
          "190:  err := cmf.ProcessConfigs(cfg)",
          "191:  require.NoError(t, err)",
          "192:  assert.Len(t, cfg.Integrations.ExtraIntegrations, 2)",
          "193: }",
          "195: func TestAgentAddIntegrations(t *testing.T) {",
          "196:  configStr := `",
          "197: server:",
          "198:   http_listen_port: 8080",
          "199:   log_level: debug",
          "200: metrics:",
          "201:   wal_directory: /tmp/grafana-agent-normal",
          "202:   global:",
          "203:     scrape_interval: 60s",
          "204:     remote_write:",
          "205:     - url: https://www.example.com",
          "206: integrations:",
          "207:   node_exporter: {}",
          "208: `",
          "209:  addIntegration := `",
          "210: windows_exporter: {}",
          "211: `",
          "212:  tDir := generatePath(t)",
          "213:  writeFile(t, tDir, \"agent-1.yml\", configStr)",
          "214:  writeFile(t, tDir, \"integrations-windows.yml\", addIntegration)",
          "215:  fileFS := generateFilePath(tDir)",
          "216:  loaderCfg := LoaderConfig{",
          "217:   Sources:       nil,",
          "218:   TemplatePaths: []string{fileFS},",
          "219:  }",
          "220:  cmf := generateLoader(t, loaderCfg)",
          "221:  cfg := &Config{}",
          "222:  err := cmf.ProcessConfigs(cfg)",
          "223:  require.NoError(t, err)",
          "225:  err = cfg.Integrations.setVersion(integrationsVersion2)",
          "226:  require.NoError(t, err)",
          "227:  assert.True(t, cfg.Server.HTTPListenPort == 8080)",
          "228:  assert.True(t, cfg.Server.LogLevel.String() == \"debug\")",
          "229:  assert.True(t, cfg.Metrics.WALDir == \"/tmp/grafana-agent-normal\")",
          "230:  assert.True(t, cfg.Metrics.Global.RemoteWrite[0].URL.String() == \"https://www.example.com\")",
          "231:  assert.False(t, cfg.Integrations.IsZero())",
          "234:  assert.Len(t, cfg.Integrations.ExtraIntegrations, 1)",
          "235:  assert.Len(t, cfg.Integrations.configV2.Configs, 2)",
          "236: }",
          "238: func TestFilterOverrides(t *testing.T) {",
          "239:  agentStr := `",
          "240: server:",
          "241:   http_listen_port: 8080",
          "242:   log_level: debug",
          "243: metrics:",
          "244:   wal_directory: /tmp/grafana-agent-normal",
          "245:   global:",
          "246:     scrape_interval: 60s",
          "247:     remote_write:",
          "248:     - url: https://www.example.com",
          "249: integrations:",
          "250:   windows_exporter: {}",
          "251: `",
          "252:  serverStr := `",
          "253: http_listen_port: 1111",
          "254: `",
          "255:  metricsStr := `",
          "256: wal_directory: /tmp/grafana-agent-normal",
          "257: global:",
          "258:   scrape_interval: 60s",
          "259:   remote_write:",
          "260:   - url: https://www.example.com",
          "261: `",
          "262:  metricsInstanceStr := `",
          "263: name: t1",
          "264: `",
          "265:  integrationStr := `",
          "266: node_exporter: {}",
          "267: `",
          "268:  tracesStr := `",
          "269: configs:",
          "270: - name: test_traces",
          "271:   automatic_logging:",
          "272:     backend: stdout",
          "273:     loki_name: default",
          "274:     spans: true",
          "275: `",
          "276:  logsStr := `",
          "277: configs:",
          "278: - name: test_logs",
          "279:   positions:",
          "280:     filename: /tmp/positions.yaml",
          "281:   scrape_configs:",
          "282:     - job_name: test",
          "283:       pipeline_stages:",
          "284:       - regex:",
          "285:         source: filename",
          "286:         expression: '\\\\temp\\\\Logs\\\\(?P<log_app>.+?)\\\\'",
          "287: `",
          "288:  tDir := generatePath(t)",
          "289:  writeFile(t, tDir, \"a-1.yml\", agentStr)",
          "290:  writeFile(t, tDir, \"s-1.yml\", serverStr)",
          "291:  writeFile(t, tDir, \"m-1.yml\", metricsStr)",
          "292:  writeFile(t, tDir, \"mi-1.yml\", metricsInstanceStr)",
          "293:  writeFile(t, tDir, \"i-1.yml\", integrationStr)",
          "294:  writeFile(t, tDir, \"t-1.yml\", tracesStr)",
          "295:  writeFile(t, tDir, \"l-1.yml\", logsStr)",
          "296:  fileFS := generateFilePath(tDir)",
          "297:  loaderCfg := LoaderConfig{",
          "298:   Sources:               nil,",
          "299:   TemplatePaths:         []string{fileFS},",
          "300:   AgentFilter:           \"a-*.yml\",",
          "301:   ServerFilter:          \"s-*.yml\",",
          "302:   MetricsFilter:         \"m-*.yml\",",
          "303:   MetricsInstanceFilter: \"mi-*.yml\",",
          "304:   IntegrationsFilter:    \"i-*.yml\",",
          "305:   LogsFilter:            \"l-*.yml\",",
          "306:   TracesFilter:          \"t-*.yml\",",
          "307:  }",
          "308:  cmf := generateLoader(t, loaderCfg)",
          "309:  cfg := &Config{}",
          "310:  err := cmf.ProcessConfigs(cfg)",
          "311:  require.NoError(t, err)",
          "313:  err = cfg.Integrations.setVersion(integrationsVersion2)",
          "314:  require.NoError(t, err)",
          "316:  assert.True(t, cfg.Server.HTTPListenPort == 1111)",
          "318:  assert.True(t, cfg.Metrics.WALDir == \"/tmp/grafana-agent-normal\")",
          "320:  assert.True(t, cfg.Metrics.Configs[0].Name == \"t1\")",
          "322:  assert.Len(t, cfg.Integrations.ExtraIntegrations, 1)",
          "323:  assert.Len(t, cfg.Integrations.configV2.Configs, 2)",
          "325:  assert.True(t, cfg.Traces.Configs[0].Name == \"test_traces\")",
          "327:  assert.True(t, cfg.Logs.Configs[0].Name == \"test_logs\")",
          "328: }",
          "",
          "---------------"
        ],
        "pkg/config/dynamicloader_template_test.go||pkg/config/dynamicloader_template_test.go": [
          "File: pkg/config/dynamicloader_template_test.go -> pkg/config/dynamicloader_template_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: package config",
          "4: import (",
          "5:  \"bytes\"",
          "6:  \"fmt\"",
          "7:  \"io/ioutil\"",
          "8:  \"net/http/httptest\"",
          "9:  \"net/url\"",
          "10:  \"os\"",
          "11:  \"path/filepath\"",
          "12:  \"runtime\"",
          "13:  \"testing\"",
          "15:  \"github.com/stretchr/testify/require\"",
          "17:  \"github.com/grafana/agent/pkg/util/subset\"",
          "18:  \"gopkg.in/yaml.v2\"",
          "20:  _ \"github.com/grafana/agent/pkg/integrations/install\"",
          "21:  v2 \"github.com/grafana/agent/pkg/integrations/v2\"",
          "22:  \"github.com/grafana/agent/pkg/integrations/windows_exporter\"",
          "23:  \"github.com/johannesboyne/gofakes3\"",
          "24:  \"github.com/johannesboyne/gofakes3/backend/s3mem\"",
          "25:  \"github.com/stretchr/testify/assert\"",
          "26: )",
          "28: func TestConfigMakerWithExporterWithTemplate(t *testing.T) {",
          "29:  configStr := `",
          "30: windows_exporter:",
          "31:   enabled_collectors: {{ (datasource \"vars\").value }}",
          "32:   instance: testinstance",
          "33: `",
          "34:  tDir := generatePath(t)",
          "35:  writeFile(t, tDir, \"vars.yaml\", \"value: banana\")",
          "36:  writeFile(t, tDir, \"integrations-1.yml\", configStr)",
          "37:  fileFS := generateFilePath(tDir)",
          "39:  loaderCfg := LoaderConfig{",
          "40:   Sources: []Datasource{{",
          "41:    Name: \"vars\",",
          "42:    URL:  generateFilePath(filepath.Join(tDir, \"vars.yaml\")),",
          "43:   }},",
          "44:   TemplatePaths: []string{fileFS},",
          "45:  }",
          "46:  cmf := generateLoader(t, loaderCfg)",
          "47:  configs, err := cmf.processIntegrations()",
          "48:  require.NoError(t, err)",
          "49:  assert.Len(t, configs, 1)",
          "50:  wincfg, _ := configs[0].(v2.UpgradedConfig).LegacyConfig()",
          "51:  assert.True(t, wincfg.(*windows_exporter.Config).EnabledCollectors == \"banana\")",
          "52: }",
          "54: func TestLoadingFromS3LoadingVarsLocally(t *testing.T) {",
          "55:  configStr := `",
          "56: windows_exporter:",
          "57:   enabled_collectors: {{ (datasource \"vars\").value }}",
          "58:   instance: testinstance",
          "59: `",
          "60:  tDir := generatePath(t)",
          "61:  writeFile(t, tDir, \"vars.yaml\", \"value: banana\")",
          "62:  u := pushFilesToFakeS3(t, \"integrations-1.yml\", configStr)",
          "63:  s3Url := \"s3://mybucket/?region=us-east-1&disableSSL=true&s3ForcePathStyle=true&endpoint=\" + u.Host",
          "64:  loaderCfg := LoaderConfig{",
          "65:   Sources: []Datasource{{",
          "66:    Name: \"vars\",",
          "67:    URL:  fmt.Sprintf(\"file:///%s\", filepath.Join(tDir, \"vars.yaml\")),",
          "68:   }},",
          "69:   TemplatePaths: []string{s3Url},",
          "70:  }",
          "71:  cmf := generateLoader(t, loaderCfg)",
          "72:  cfg, err := cmf.processIntegrations()",
          "73:  require.NoError(t, err)",
          "74:  assert.Len(t, cfg, 1)",
          "75:  oc, _ := cfg[0].(v2.UpgradedConfig).LegacyConfig()",
          "76:  winCfg := oc.(*windows_exporter.Config)",
          "77:  assert.True(t, winCfg.EnabledCollectors == \"banana\")",
          "78: }",
          "80: func TestLoadingFromS3LoadingVarsLocallyWithRange(t *testing.T) {",
          "81:  configStr := `",
          "82: windows_exporter:",
          "83:   enabled_collectors: banana",
          "84:   instance: testinstance",
          "85:   autoscrape:",
          "86:     metric_relabel_configs: {{ range (datasource \"vars\").value }}",
          "87:     - source_labels: [__address__]",
          "88:       target_label: {{ . }}",
          "89:       replacement: \"{{ . }}-value\"",
          "90:     {{ end }}",
          "91: `",
          "92:  tDir := generatePath(t)",
          "93:  writeFile(t, tDir, \"vars.yaml\", \"value: [banana,apple,pear]\")",
          "94:  u := pushFilesToFakeS3(t, \"integrations-1.yml\", configStr)",
          "96:  s3Url := \"s3://mybucket/?region=us-east-1&disableSSL=true&s3ForcePathStyle=true&endpoint=\" + u.Host",
          "97:  loaderCfg := LoaderConfig{",
          "98:   Sources: []Datasource{{",
          "99:    Name: \"vars\",",
          "100:    URL:  fmt.Sprintf(\"file:///%s\", filepath.Join(tDir, \"vars.yaml\")),",
          "101:   }},",
          "102:   TemplatePaths: []string{s3Url},",
          "103:  }",
          "104:  cmf := generateLoader(t, loaderCfg)",
          "105:  cfg := &Config{}",
          "106:  err := cmf.ProcessConfigs(cfg)",
          "107:  require.NoError(t, err)",
          "108:  assert.Len(t, cfg.Integrations.ExtraIntegrations, 1)",
          "109:  _ = cfg.Integrations.setVersion(integrationsVersion2)",
          "110:  expectBase := `",
          "111: integrations:",
          "112:   windows_exporter:",
          "113:     autoscrape:",
          "114:       metric_relabel_configs:",
          "115:       - target_label: banana",
          "116:       - target_label: apple",
          "117:       - target_label: pear",
          "118: `",
          "119:  outBytes, err := yaml.Marshal(cfg)",
          "120:  require.NoError(t, err)",
          "121:  assert.NoError(t, subset.YAMLAssert([]byte(expectBase), outBytes))",
          "122: }",
          "124: func writeFile(t *testing.T, directory string, path string, contents string) {",
          "125:  fullpath := filepath.Join(directory, path)",
          "126:  err := ioutil.WriteFile(fullpath, []byte(contents), 0666)",
          "127:  require.NoError(t, err)",
          "128: }",
          "130: func generateLoader(t *testing.T, lc LoaderConfig) *DynamicLoader {",
          "131:  cmf, err := NewDynamicLoader()",
          "132:  require.NoError(t, err)",
          "133:  err = cmf.LoadConfig(lc)",
          "134:  require.NoError(t, err)",
          "135:  return cmf",
          "136: }",
          "138: func generateFilePath(directory string) string {",
          "139:  if runtime.GOOS == \"windows\" {",
          "141:   return fmt.Sprintf(\"file:///%s\", directory)",
          "142:  }",
          "143:  return fmt.Sprintf(\"file://%s\", directory)",
          "144: }",
          "146: func generatePath(t *testing.T) string {",
          "147:  tDir, err := os.MkdirTemp(\"\", \"*-test\")",
          "148:  require.NoError(t, err)",
          "149:  t.Cleanup(func() { _ = os.RemoveAll(tDir) })",
          "150:  return tDir",
          "151: }",
          "153: func pushFilesToFakeS3(t *testing.T, filename string, filecontents string) *url.URL {",
          "154:  t.Setenv(\"AWS_ANON\", \"true\")",
          "156:  backend := s3mem.New()",
          "157:  faker := gofakes3.New(backend)",
          "159:  srv := httptest.NewServer(faker.Server())",
          "160:  _ = backend.CreateBucket(\"mybucket\")",
          "161:  t.Cleanup(srv.Close)",
          "162:  _, err := backend.PutObject(",
          "163:   \"mybucket\",",
          "164:   filename,",
          "165:   map[string]string{\"Content-Type\": \"application/yaml\"},",
          "166:   bytes.NewBufferString(filecontents),",
          "167:   int64(len(filecontents)),",
          "168:  )",
          "169:  assert.NoError(t, err)",
          "170:  u, err := url.Parse(srv.URL)",
          "171:  assert.NoError(t, err)",
          "172:  return u",
          "173: }",
          "",
          "---------------"
        ],
        "pkg/config/integrations.go||pkg/config/integrations.go": [
          "File: pkg/config/integrations.go -> pkg/config/integrations.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:  configV1 *v1.ManagerConfig",
          "38:  configV2 *v2.SubsystemOptions",
          "39: }",
          "41: var (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:  ExtraIntegrations []v2.Config",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:   return yaml.UnmarshalStrict(c.raw, c.configV1)",
          "96:  case integrationsVersion2:",
          "97:   cfg := v2.DefaultSubsystemOptions",
          "98:   c.configV2 = &cfg",
          "100:  default:",
          "101:   panic(fmt.Sprintf(\"unknown integrations version %d\", c.version))",
          "102:  }",
          "",
          "[Removed Lines]",
          "99:   return yaml.UnmarshalStrict(c.raw, c.configV2)",
          "",
          "[Added Lines]",
          "103:   c.configV1 = nil",
          "105:   err := yaml.UnmarshalStrict(c.raw, c.configV2)",
          "106:   if err != nil {",
          "107:    return err",
          "108:   }",
          "109:   c.configV2.Configs = append(c.configV2.Configs, c.ExtraIntegrations...)",
          "110:   return nil",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137: type v1Integrations struct{ *v1.Manager }",
          "140:  return s.Manager.ApplyConfig(*cfg.configV1)",
          "141: }",
          "",
          "[Removed Lines]",
          "139: func (s *v1Integrations) ApplyConfig(cfg *VersionedIntegrations, globals IntegrationsGlobals) error {",
          "",
          "[Added Lines]",
          "150: func (s *v1Integrations) ApplyConfig(cfg *VersionedIntegrations, _ IntegrationsGlobals) error {",
          "",
          "---------------"
        ],
        "pkg/integrations/v2/controller.go||pkg/integrations/v2/controller.go": [
          "File: pkg/integrations/v2/controller.go -> pkg/integrations/v2/controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  \"strings\"",
          "12:  \"sync\"",
          "14:  \"github.com/go-kit/log\"",
          "15:  \"github.com/go-kit/log/level\"",
          "16:  \"github.com/gorilla/mux\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:  \"github.com/hashicorp/go-multierror\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:  c.mut.Lock()",
          "100:  defer c.mut.Unlock()",
          "102:  integrationIDMap := map[integrationID]struct{}{}",
          "104:  integrations := make([]*controlledIntegration, 0, len(cfg))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:  var returnError error",
          "106:  singletonCheck := make(map[string]struct{})",
          "107:  for _, cfg := range cfg {",
          "108:   if t, ok := RegisteredType(cfg.Name()); ok && t == TypeSingleton {",
          "110:    if _, ok := singletonCheck[cfg.Name()]; ok {",
          "111:     returnError = multierror.Append(returnError, fmt.Errorf(\"found multiple instances of singleton integration %s\", cfg.Name()))",
          "112:    } else {",
          "113:     singletonCheck[cfg.Name()] = struct{}{}",
          "114:    }",
          "115:   }",
          "116:  }",
          "117:  if returnError != nil {",
          "118:   return returnError",
          "119:  }",
          "",
          "---------------"
        ],
        "pkg/integrations/v2/controller_test.go||pkg/integrations/v2/controller_test.go": [
          "File: pkg/integrations/v2/controller_test.go -> pkg/integrations/v2/controller_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"sync\"",
          "6:  \"testing\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:  })",
          "134: }",
          "136: type syncController struct {",
          "137:  inner *controller",
          "138:  pool  *workerPool",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137: func Test_controller_SingletonCheck(t *testing.T) {",
          "138:  var integrationsWg sync.WaitGroup",
          "139:  var starts atomic.Uint64",
          "141:  mockIntegration := FuncIntegration(func(ctx context.Context) error {",
          "142:   integrationsWg.Done()",
          "143:   starts.Inc()",
          "144:   <-ctx.Done()",
          "145:   return nil",
          "146:  })",
          "147:  c1 := mockConfig{",
          "148:   NameFunc:          func() string { return mockIntegrationName },",
          "149:   ConfigEqualsFunc:  func(Config) bool { return true },",
          "150:   ApplyDefaultsFunc: func(g Globals) error { return nil },",
          "151:   IdentifierFunc: func(Globals) (string, error) {",
          "152:    return mockIntegrationName, nil",
          "153:   },",
          "154:   NewIntegrationFunc: func(log.Logger, Globals) (Integration, error) {",
          "155:    integrationsWg.Add(1)",
          "156:    return mockIntegration, nil",
          "157:   },",
          "158:  }",
          "159:  configMap := make(map[Config]Type)",
          "160:  configMap[&c1] = TypeSingleton",
          "161:  setRegistered(t, configMap)",
          "162:  cfg := controllerConfig{",
          "163:   c1,",
          "164:   c1,",
          "165:  }",
          "167:  globals := Globals{}",
          "168:  _, err := newController(util.TestLogger(t), cfg, globals)",
          "169:  require.Error(t, err)",
          "170:  require.True(t, strings.Contains(err.Error(), \"found multiple instances of singleton integration mock\"))",
          "171: }",
          "",
          "---------------"
        ],
        "pkg/integrations/v2/register.go||pkg/integrations/v2/register.go": [
          "File: pkg/integrations/v2/register.go -> pkg/integrations/v2/register.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: )",
          "16: var (",
          "",
          "[Removed Lines]",
          "17:  integrationNames = make(map[string]interface{})  // Cache of field names for uniqueness checking.",
          "18:  configFieldNames = make(map[reflect.Type]string) // Map of registered type to field name",
          "19:  integrationTypes = make(map[reflect.Type]Type)   // Map of registered type to Type",
          "",
          "[Added Lines]",
          "17:  integrationNames      = make(map[string]interface{})  // Cache of field names for uniqueness checking.",
          "18:  configFieldNames      = make(map[reflect.Type]string) // Map of registered type to field name",
          "19:  integrationTypes      = make(map[reflect.Type]Type)   // Map of registered type to Type",
          "20:  integrationTypeByName = make(map[string]Type)         // Map of name to Type",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:  configTy := reflect.TypeOf(v)",
          "54:  integrationTypes[configTy] = ty",
          "55:  configFieldNames[configTy] = name",
          "56:  upgraders[name] = upgrader",
          "57: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:  integrationTypeByName[name] = ty",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:  clear := func() {",
          "108:   integrationNames = make(map[string]interface{})",
          "109:   integrationTypes = make(map[reflect.Type]Type)",
          "110:   configFieldNames = make(map[reflect.Type]string)",
          "111:   registered = registered[:0]",
          "112:   upgraders = make(map[string]UpgradeFunc)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:   integrationTypeByName = make(map[string]Type)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "125: func Registered() []Config {",
          "126:  res := make([]Config, 0, len(registered))",
          "127:  for _, r := range registered {",
          "140:  }",
          "141:  return res",
          "142: }",
          "144: func cloneValue(in interface{}) interface{} {",
          "145:  return reflect.New(reflect.TypeOf(in).Elem()).Interface()",
          "146: }",
          "",
          "[Removed Lines]",
          "128:   switch v := r.(type) {",
          "129:   case Config:",
          "130:    res = append(res, cloneValue(v).(Config))",
          "131:   case v1.Config:",
          "132:    mut, ok := upgraders[v.Name()]",
          "133:    if !ok || mut == nil {",
          "134:     panic(fmt.Sprintf(\"Could not find transformer for legacy integration %T\", r))",
          "135:    }",
          "136:    res = append(res, mut(cloneValue(r).(v1.Config), common.MetricsConfig{}))",
          "137:   default:",
          "138:    panic(fmt.Sprintf(\"unexpected type %T\", r))",
          "139:   }",
          "",
          "[Added Lines]",
          "131:   res = append(res, cloneConfig(r))",
          "137: func RegisteredType(name string) (Type, bool) {",
          "138:  t, ok := integrationTypeByName[name]",
          "139:  return t, ok",
          "140: }",
          "142: func cloneConfig(r interface{}) Config {",
          "143:  switch v := r.(type) {",
          "144:  case Config:",
          "145:   return cloneValue(v).(Config)",
          "146:  case v1.Config:",
          "147:   mut, ok := upgraders[v.Name()]",
          "148:   if !ok || mut == nil {",
          "149:    panic(fmt.Sprintf(\"Could not find transformer for legacy integration %T\", r))",
          "150:   }",
          "151:   return mut(cloneValue(r).(v1.Config), common.MetricsConfig{})",
          "152:  default:",
          "153:   panic(fmt.Sprintf(\"unexpected type %T\", r))",
          "154:  }",
          "155: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd07588d52a3a47a651f523618d2e193bc76338f",
      "candidate_info": {
        "commit_hash": "cd07588d52a3a47a651f523618d2e193bc76338f",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/cd07588d52a3a47a651f523618d2e193bc76338f",
        "files": [
          "CHANGELOG.md",
          "docs/configuration/integrations/node-exporter-config.md",
          "docs/configuration/integrations/process-exporter-config.md",
          "docs/getting-started/_index.md",
          "docs/operator/custom-resource-quickstart.md",
          "docs/operator/getting-started.md",
          "pkg/operator/defaults.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "v0.21.1 release prep (#1120)",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:   \"v0.19.0\",",
          "17:   \"v0.20.0\",",
          "18:   \"v0.21.0\",",
          "21:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:   \"v0.21.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.21.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.21.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.21.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.21.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.21.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.21.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.21.0',",
          "19:     agentctl: 'grafana/agentctl:v0.21.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.21.1',",
          "19:     agentctl: 'grafana/agentctl:v0.21.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   local this = self,",
          "12:   _images:: {",
          "15:   },",
          "16:   _config:: {",
          "17:     name: name,",
          "",
          "[Removed Lines]",
          "13:     agent: 'grafana/agent:v0.21.0',",
          "14:     agentctl: 'grafana/agentctl:v0.21.0',",
          "",
          "[Added Lines]",
          "13:     agent: 'grafana/agent:v0.21.1',",
          "14:     agentctl: 'grafana/agentctl:v0.21.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.21.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.21.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71edccf44fc510e8ab39f5d6991d943eb772d1ff",
      "candidate_info": {
        "commit_hash": "71edccf44fc510e8ab39f5d6991d943eb772d1ff",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/71edccf44fc510e8ab39f5d6991d943eb772d1ff",
        "files": [
          "CHANGELOG.md",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Update version references for v0.28.0 release (#2248)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   \"v0.26.1\",",
          "31:   \"v0.27.0\",",
          "32:   \"v0.27.1\",",
          "35:  }",
          "",
          "[Removed Lines]",
          "33:   \"v0.28.0-rc.0\",",
          "",
          "[Added Lines]",
          "33:   \"v0.28.0\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: # The DEB and RPM urls don't include the `v` version prefix in the file names,",
          "56: # so we trim it out using ${RELEASE_VERSION#v} below.",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"v0.28.0-rc.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"v0.28.0\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.28.0-rc.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.28.0'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0',",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.28.0-rc.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.0-rc.0',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.28.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.28.0',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.28.0-rc.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.28.0",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.28.0-rc.0',",
          "19:     agentctl: 'grafana/agentctl:v0.28.0-rc.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.28.0',",
          "19:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.28.0-rc.0',",
          "15:     agentctl: 'grafana/agentctl:v0.28.0-rc.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.28.0',",
          "15:     agentctl: 'grafana/agentctl:v0.28.0',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.28.0-rc.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.28.0',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35015aa4e1d5e51598c74bf654a965c841d2c266",
      "candidate_info": {
        "commit_hash": "35015aa4e1d5e51598c74bf654a965c841d2c266",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/35015aa4e1d5e51598c74bf654a965c841d2c266",
        "files": [
          "CHANGELOG.md",
          "cmd/agentctl/main.go",
          "docs/user/configuration/integrations/node-exporter-config.md",
          "docs/user/configuration/integrations/process-exporter-config.md",
          "docs/user/getting-started/_index.md",
          "docs/user/operator/custom-resource-quickstart.md",
          "docs/user/operator/getting-started.md",
          "go.mod",
          "pkg/config/config.go",
          "pkg/logs/logs.go",
          "pkg/metrics/cluster/configapi/types.go",
          "pkg/operator/config/config_test.go",
          "pkg/operator/config/metrics_templates_test.go",
          "pkg/operator/config/templates/component/metrics/remote_write.libsonnet",
          "pkg/operator/defaults.go",
          "pkg/server/config.go",
          "pkg/server/logger_test.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Prepare for 0.24.1 (#1615)\n\n* Set up the default logger parameters (#1611)\n\n* Set up the default logger parameters\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Set up the default logger parameters vol.2\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n(cherry picked from commit 3b8d8b9f3a5b1e3a7081559cf0b136b031044e69)\n\n* pkg/operator/config: don't set non-existent username_file field (#1612)\n\nPR #1441 introduced a change to use password_file for basic auth, but\naccidentally also generated a username_file field which doesn't exist.\n\n(cherry picked from commit 378ffeda5f9107b8acc0e24b21bd2787bc9d6d78)\n\n* Bump GitHub exporter version (#1589)\n\n* bump version of github-exporter\n\nThis bumps the version of github-exporter to the latest upstream commit,\nfixing numerous bugs since the latest development release.\n\nCloses #1588.\n\n* add changelog entry\n\nAlso add a retroactive changelog entry for #1584\n\n(cherry picked from commit 61e8f376416324538b943d5148fb3346183d6f5e)\n\n* udpate import order in agentctl main.go (#1584)\n\n(cherry picked from commit 78aa6238ab8a17fd9ab661625a0ecd36076077cc)\n\n* Embed time zone data for logs package (#1594)\n\n(cherry picked from commit 2c53aff50ded51277078f3b13377baf8a875f8e1)\n\n* changelog: add changelog entry for agentctl version info bugfix\n\n* Set `Content-Type` as `application/json` to JSON endpoints (#1596)\n\n* Set json content-type to JSON endpoints\n\n* Update CHANGELOG\n\n(cherry picked from commit cff7cb44c0d204fa1de3f7fe540041c60361ce37)\n\n* prepare for 0.24.1 release\n\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>\nCo-authored-by: Robert Lankford <robert.lankford@grafana.com>\nCo-authored-by: Marc Tudur\u00ed <marctc@protonmail.com>",
        "before_after_code_files": [
          "cmd/agentctl/main.go||cmd/agentctl/main.go",
          "go.mod||go.mod",
          "pkg/config/config.go||pkg/config/config.go",
          "pkg/logs/logs.go||pkg/logs/logs.go",
          "pkg/metrics/cluster/configapi/types.go||pkg/metrics/cluster/configapi/types.go",
          "pkg/operator/config/config_test.go||pkg/operator/config/config_test.go",
          "pkg/operator/config/metrics_templates_test.go||pkg/operator/config/metrics_templates_test.go",
          "pkg/operator/config/templates/component/metrics/remote_write.libsonnet||pkg/operator/config/templates/component/metrics/remote_write.libsonnet",
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "pkg/server/config.go||pkg/server/config.go",
          "pkg/server/logger_test.go||pkg/server/logger_test.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "cmd/agentctl/main.go||cmd/agentctl/main.go": [
          "File: cmd/agentctl/main.go -> cmd/agentctl/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  \"gopkg.in/yaml.v2\"",
          "18:  \"github.com/grafana/agent/pkg/client/grafanacloud\"",
          "19:  \"github.com/grafana/agent/pkg/config\"",
          "20:  \"github.com/olekukonko/tablewriter\"",
          "",
          "[Removed Lines]",
          "17:  _ \"github.com/grafana/agent/pkg/build\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:  kclient \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "46:  \"sigs.k8s.io/controller-runtime/pkg/client/apiutil\"",
          "47:  kconfig \"sigs.k8s.io/controller-runtime/pkg/client/config\"",
          "48: )",
          "50: func main() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:  _ \"github.com/grafana/agent/pkg/build\"",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  github.com/hashicorp/consul/api v1.12.0",
          "31:  github.com/hashicorp/go-cleanhttp v0.5.2",
          "32:  github.com/hashicorp/go-multierror v1.1.1",
          "34:  github.com/johannesboyne/gofakes3 v0.0.0-20210819161434-5c8dfcfe5310",
          "35:  github.com/jsternberg/zap-logfmt v1.2.0",
          "36:  github.com/lib/pq v1.10.2",
          "",
          "[Removed Lines]",
          "33:  github.com/infinityworks/github-exporter v0.0.0-20201016091012-831b72461034",
          "",
          "[Added Lines]",
          "33:  github.com/infinityworks/github-exporter v0.0.0-20210802160115-284088c21e7d",
          "",
          "---------------"
        ],
        "pkg/config/config.go||pkg/config/config.go": [
          "File: pkg/config/config.go -> pkg/config/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: var DefaultConfig = Config{",
          "52:  Metrics:               metrics.DefaultConfig,",
          "53:  Integrations:          DefaultVersionedIntegrations,",
          "54:  EnableConfigEndpoints: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:  Server:                server.DefaultConfig,",
          "",
          "---------------"
        ],
        "pkg/logs/logs.go||pkg/logs/logs.go": [
          "File: pkg/logs/logs.go -> pkg/logs/logs.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"path/filepath\"",
          "8:  \"sync\"",
          "9:  \"time\"",
          "11:  \"github.com/go-kit/log\"",
          "12:  \"github.com/go-kit/log/level\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  _ \"time/tzdata\" // embed timezone data",
          "",
          "---------------"
        ],
        "pkg/metrics/cluster/configapi/types.go||pkg/metrics/cluster/configapi/types.go": [
          "File: pkg/metrics/cluster/configapi/types.go -> pkg/metrics/cluster/configapi/types.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: func WriteResponse(w http.ResponseWriter, statusCode int, resp interface{}) error {",
          "63:  apiResp := &APIResponse{Status: \"success\", Data: resp}",
          "64:  return apiResp.WriteTo(w, statusCode)",
          "65: }",
          "68: func WriteError(w http.ResponseWriter, statusCode int, err error) error {",
          "69:  resp := &APIResponse{Status: \"error\", Data: &ErrorResponse{Error: err.Error()}}",
          "70:  return resp.WriteTo(w, statusCode)",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:  w.Header().Set(\"Content-Type\", \"application/json\")",
          "71:  w.Header().Set(\"Content-Type\", \"application/json\")",
          "",
          "---------------"
        ],
        "pkg/operator/config/config_test.go||pkg/operator/config/config_test.go": [
          "File: pkg/operator/config/config_test.go -> pkg/operator/config/config_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         basicAuth:",
          "79:          username:",
          "80:           name: example-secret",
          "82:          password:",
          "83:           name: example-secret",
          "84:           key: pword",
          "",
          "[Removed Lines]",
          "81:           key: uname",
          "",
          "[Added Lines]",
          "81:           key: key",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:        remote_write:",
          "112:        - url: http://localhost:9090/api/v1/write",
          "113:         basic_auth:",
          "115:          password_file: /var/lib/grafana-agent/secrets/_secrets_default_example_secret_pword",
          "116:         tls_config:",
          "117:          ca_file: /var/lib/grafana-agent/secrets/_configMaps_default_example_cm_key",
          "",
          "[Removed Lines]",
          "114:          username_file: /var/lib/grafana-agent/secrets/_secrets_default_example_secret_uname",
          "",
          "[Added Lines]",
          "114:          username: somesecret",
          "",
          "---------------"
        ],
        "pkg/operator/config/metrics_templates_test.go||pkg/operator/config/metrics_templates_test.go": [
          "File: pkg/operator/config/metrics_templates_test.go -> pkg/operator/config/metrics_templates_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:    expect: util.Untab(`",
          "548:     url: http://cortex/api/prom/push",
          "549:     basic_auth:",
          "551:      password_file: /var/lib/grafana-agent/secrets/_secrets_operator_obj_key",
          "552:    `),",
          "553:   },",
          "",
          "[Removed Lines]",
          "550:      username_file: /var/lib/grafana-agent/secrets/_secrets_operator_obj_key",
          "",
          "[Added Lines]",
          "550:      username: secretkey",
          "",
          "---------------"
        ],
        "pkg/operator/config/templates/component/metrics/remote_write.libsonnet||pkg/operator/config/templates/component/metrics/remote_write.libsonnet": [
          "File: pkg/operator/config/templates/component/metrics/remote_write.libsonnet -> pkg/operator/config/templates/component/metrics/remote_write.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   basic_auth: (",
          "32:     if rw.BasicAuth != null then {",
          "34:       password_file: secrets.pathForSecret(namespace, rw.BasicAuth.Password),",
          "35:     }",
          "36:   ),",
          "",
          "[Removed Lines]",
          "33:       username_file: secrets.pathForSecret(namespace, rw.BasicAuth.Username),",
          "",
          "[Added Lines]",
          "33:       username: secrets.valueForSecret(namespace, rw.BasicAuth.Username),",
          "",
          "---------------"
        ],
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:   \"v0.22.0\",",
          "23:   \"v0.23.0\",",
          "24:   \"v0.24.0\",",
          "27:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:   \"v0.24.1\",",
          "",
          "---------------"
        ],
        "pkg/server/config.go||pkg/server/config.go": [
          "File: pkg/server/config.go -> pkg/server/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: var (",
          "45:  DefaultConfig = Config{",
          "49:  }",
          "51:  DefaultHTTPConfig = HTTPConfig{",
          "",
          "[Removed Lines]",
          "46:   GRPC:  DefaultGRPCConfig,",
          "47:   HTTP:  DefaultHTTPConfig,",
          "48:   Flags: DefaultFlags,",
          "",
          "[Added Lines]",
          "46:   GRPC:      DefaultGRPCConfig,",
          "47:   HTTP:      DefaultHTTPConfig,",
          "48:   Flags:     DefaultFlags,",
          "49:   LogLevel:  DefaultLogLevel,",
          "50:   LogFormat: DefaultLogFormat,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:  DefaultGRPCConfig = GRPCConfig{",
          "57:  }",
          "58: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:  emptyFlagSet    = flag.NewFlagSet(\"\", flag.ExitOnError)",
          "62:  DefaultLogLevel = func() logging.Level {",
          "63:   var lvl logging.Level",
          "64:   lvl.RegisterFlags(emptyFlagSet)",
          "65:   return lvl",
          "66:  }()",
          "67:  DefaultLogFormat = func() logging.Format {",
          "68:   var fmt logging.Format",
          "69:   fmt.RegisterFlags(emptyFlagSet)",
          "70:   return fmt",
          "71:  }()",
          "",
          "---------------"
        ],
        "pkg/server/logger_test.go||pkg/server/logger_test.go": [
          "File: pkg/server/logger_test.go -> pkg/server/logger_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"gopkg.in/yaml.v2\"",
          "11: )",
          "13: func TestLogger_ApplyConfig(t *testing.T) {",
          "14:  var buf bytes.Buffer",
          "15:  makeLogger := func(cfg *Config) (log.Logger, error) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: func TestLogger_DefaultParameters(t *testing.T) {",
          "14:  makeLogger := func(cfg *Config) (log.Logger, error) {",
          "15:   var l log.Logger",
          "16:   require.Equal(t, \"info\", cfg.LogLevel.String())",
          "17:   require.Equal(t, \"logfmt\", cfg.LogFormat.String())",
          "18:   return l, nil",
          "19:  }",
          "20:  newLogger(&DefaultConfig, makeLogger).makeLogger(&DefaultConfig)",
          "21: }",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.24.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.24.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.24.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.24.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.24.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.24.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.24.0',",
          "19:     agentctl: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.24.1',",
          "19:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.24.0',",
          "15:     agentctl: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.24.1',",
          "15:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45b7d6a268a4ecc68d8060ecbfd9df00ba149987",
      "candidate_info": {
        "commit_hash": "45b7d6a268a4ecc68d8060ecbfd9df00ba149987",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/45b7d6a268a4ecc68d8060ecbfd9df00ba149987",
        "files": [
          "CHANGELOG.md",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "post-release updates for 0.27.1 (#2151)",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:   \"v0.26.0\",",
          "30:   \"v0.26.1\",",
          "31:   \"v0.27.0\",",
          "33:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   \"v0.27.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: # The DEB and RPM urls don't include the `v` version prefix in the file names,",
          "56: # so we trim it out using ${RELEASE_VERSION#v} below.",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"v0.27.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"v0.27.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.27.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.27.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0'",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.27.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.0',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.27.1',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.1',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.27.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.27.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.27.0',",
          "19:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.27.1',",
          "19:     agentctl: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.27.0',",
          "15:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.27.1',",
          "15:     agentctl: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ]
      }
    }
  ]
}