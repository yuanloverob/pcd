{
  "cve_id": "CVE-2015-5254",
  "cve_desc": "Apache ActiveMQ 5.x before 5.13.0 does not restrict the classes that can be serialized in the broker, which allows remote attackers to execute arbitrary code via a crafted serialized Java Message Service (JMS) ObjectMessage object.",
  "repo": "apache/activemq",
  "patch_hash": "e7a4b53f799685e337972dd36ba0253c04bcc01f",
  "patch_info": {
    "commit_hash": "e7a4b53f799685e337972dd36ba0253c04bcc01f",
    "repo": "apache/activemq",
    "commit_url": "https://github.com/apache/activemq/commit/e7a4b53f799685e337972dd36ba0253c04bcc01",
    "files": [
      "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
      "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
      "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
      "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
      "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
      "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
      "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
    ],
    "message": "https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker",
    "before_after_code_files": [
      "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
      "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
      "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
      "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
      "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
      "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
      "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
    ]
  },
  "patch_diff": {
    "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java": [
      "File: activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java -> activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import java.io.ObjectInputStream;",
      "22: import java.io.ObjectStreamClass;",
      "23: import java.lang.reflect.Proxy;",
      "25: import org.slf4j.Logger;",
      "26: import org.slf4j.LoggerFactory;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: import java.util.Arrays;",
      "25: import java.util.Collection;",
      "26: import java.util.Map;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     private static final ClassLoader FALLBACK_CLASS_LOADER =",
      "32:         ClassLoadingAwareObjectInputStream.class.getClassLoader();",
      "34:     private final ClassLoader inLoader;",
      "36:     public ClassLoadingAwareObjectInputStream(InputStream in) throws IOException {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37:     private static String[] serializablePackages;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "41:     @Override",
      "42:     protected Class<?> resolveClass(ObjectStreamClass classDesc) throws IOException, ClassNotFoundException {",
      "43:         ClassLoader cl = Thread.currentThread().getContextClassLoader();",
      "45:     }",
      "47:     @Override",
      "",
      "[Removed Lines]",
      "44:         return load(classDesc.getName(), cl, inLoader);",
      "",
      "[Added Lines]",
      "49:         Class clazz = load(classDesc.getName(), cl, inLoader);",
      "50:         checkSecurity(clazz);",
      "51:         return clazz;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "52:             cinterfaces[i] = load(interfaces[i], cl);",
      "53:         }",
      "55:         try {",
      "57:         } catch (IllegalArgumentException e) {",
      "58:             try {",
      "60:             } catch (IllegalArgumentException e1) {",
      "62:             }",
      "63:             try {",
      "65:             } catch (IllegalArgumentException e2) {",
      "67:             }",
      "70:         }",
      "71:     }",
      "",
      "[Removed Lines]",
      "56:             return Proxy.getProxyClass(cl, cinterfaces);",
      "59:                 return Proxy.getProxyClass(inLoader, cinterfaces);",
      "64:                 return Proxy.getProxyClass(FALLBACK_CLASS_LOADER, cinterfaces);",
      "69:             throw new ClassNotFoundException(null, e);",
      "",
      "[Added Lines]",
      "62:         Class clazz = null;",
      "64:             clazz = Proxy.getProxyClass(cl, cinterfaces);",
      "67:                 clazz = Proxy.getProxyClass(inLoader, cinterfaces);",
      "72:                 clazz = Proxy.getProxyClass(FALLBACK_CLASS_LOADER, cinterfaces);",
      "76:         }",
      "78:         if (clazz != null) {",
      "79:             checkSecurity(clazz);",
      "80:             return clazz;",
      "81:         } else {",
      "82:             throw new ClassNotFoundException(null);",
      "83:         }",
      "84:     }",
      "86:     public static String[] getSerialziablePackages() {",
      "87:        if (serializablePackages == null) {",
      "88:            serializablePackages = System.getProperty(\"org.apache.activemq.SERIALIZABLE_PACKAGES\",",
      "89:                        \"java.lang,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper\").split(\",\");",
      "90:        }",
      "92:        return serializablePackages;",
      "93:     };",
      "95:     public static boolean isAllAllowed() {",
      "96:         return getSerialziablePackages().length == 1 && getSerialziablePackages()[0].equals(\"*\");",
      "97:     }",
      "99:     private void checkSecurity(Class clazz) throws ClassNotFoundException {",
      "100:         if (!clazz.isPrimitive()) {",
      "101:             if (clazz.getPackage() != null && !isAllAllowed()) {",
      "102:                boolean found = false;",
      "103:                for (String packageName : getSerialziablePackages()) {",
      "104:                    if (clazz.getPackage().getName().equals(packageName) || clazz.getPackage().getName().startsWith(packageName + \".\")) {",
      "105:                        found = true;",
      "106:                        break;",
      "107:                    }",
      "108:                }",
      "110:                if (!found) {",
      "111:                    throw new ClassNotFoundException(\"Forbidden \" + clazz + \"! This class is not allowed to be serialized. Add package with 'org.apache.activemq.SERIALIZABLE_PACKAGES' system property.\");",
      "112:                }",
      "113:             }",
      "",
      "---------------"
    ],
    "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java": [
      "File: activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java -> activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.io.Reader;",
      "22: import org.apache.activemq.command.MarshallAware;",
      "23: import org.apache.activemq.command.MessageDispatch;",
      "24: import org.apache.activemq.transport.util.TextWireFormat;",
      "25: import org.apache.activemq.wireformat.WireFormat;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: <<<<<<< HEAD",
      "23: =======",
      "24: import com.thoughtworks.xstream.converters.Converter;",
      "25: import com.thoughtworks.xstream.converters.MarshallingContext;",
      "26: import com.thoughtworks.xstream.converters.UnmarshallingContext;",
      "27: import com.thoughtworks.xstream.io.HierarchicalStreamReader;",
      "28: import com.thoughtworks.xstream.io.HierarchicalStreamWriter;",
      "29: >>>>>>> a7e2a44... https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker",
      "32: import org.apache.activemq.transport.stomp.XStreamSupport;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "93:     }",
      "98:         if (xStream == null) {",
      "99:             xStream = createXStream();",
      "",
      "[Removed Lines]",
      "97:     public XStream getXStream() {",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "112:     protected XStream createXStream() {",
      "114:         xstream.ignoreUnknownElements();",
      "115:         return xstream;",
      "116:     }",
      "",
      "[Removed Lines]",
      "113:         XStream xstream = new XStream();",
      "",
      "[Added Lines]",
      "121:         final XStream xstream = XStreamSupport.createXStream();",
      "",
      "---------------"
    ],
    "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java": [
      "File: activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java -> activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:                         msg = createMapMessage(in);",
      "92:                         break;",
      "93:                     default:",
      "95:                 }",
      "96:             } catch (Throwable e) {",
      "97:                 command.getHeaders().put(Headers.TRANSFORMATION_ERROR, e.getMessage());",
      "",
      "[Removed Lines]",
      "94:                         throw new Exception(\"Unkown transformation: \" + transformation);",
      "",
      "[Added Lines]",
      "94:                         throw new Exception(\"Unknown transformation: \" + transformation);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "254:         }",
      "256:         if (xstream == null) {",
      "258:             xstream.ignoreUnknownElements();",
      "259:         }",
      "",
      "[Removed Lines]",
      "257:             xstream = new XStream();",
      "",
      "[Added Lines]",
      "257:             xstream = XStreamSupport.createXStream();",
      "",
      "---------------"
    ],
    "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java": [
      "File: activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java -> activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.activemq.transport.stomp;",
      "19: import com.thoughtworks.xstream.XStream;",
      "20: import com.thoughtworks.xstream.security.AnyTypePermission;",
      "21: import com.thoughtworks.xstream.security.NoTypePermission;",
      "22: import com.thoughtworks.xstream.security.PrimitiveTypePermission;",
      "23: import org.apache.activemq.util.ClassLoadingAwareObjectInputStream;",
      "25: import java.util.Collection;",
      "26: import java.util.Map;",
      "28: public class XStreamSupport {",
      "30:     public static XStream createXStream() {",
      "31:         XStream stream = new XStream();",
      "32:         stream.addPermission(NoTypePermission.NONE);",
      "33:         stream.addPermission(PrimitiveTypePermission.PRIMITIVES);",
      "34:         stream.allowTypeHierarchy(Collection.class);",
      "35:         stream.allowTypeHierarchy(Map.class);",
      "36:         stream.allowTypes(new Class[]{String.class});",
      "37:         if (ClassLoadingAwareObjectInputStream.isAllAllowed()) {",
      "38:             stream.addPermission(AnyTypePermission.ANY);",
      "39:         } else {",
      "40:             for (String packageName : ClassLoadingAwareObjectInputStream.getSerialziablePackages()) {",
      "41:                 stream.allowTypesByWildcard(new String[]{packageName + \".**\"});",
      "42:             }",
      "43:         }",
      "44:         return stream;",
      "45:     }",
      "47: }",
      "",
      "---------------"
    ],
    "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java": [
      "File: activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java -> activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "111:     }",
      "113:     public void startBroker() throws Exception {",
      "115:         createBroker(true);",
      "117:         XStreamBrokerContext context = new XStreamBrokerContext();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "114:         System.setProperty(\"org.apache.activemq.SERIALIZABLE_PACKAGES\", \"*\");",
      "",
      "---------------"
    ],
    "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java": [
      "File: activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java -> activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: import org.apache.activemq.transport.stomp.SamplePojo;",
      "25: import com.thoughtworks.xstream.XStream;",
      "27: public class XStreamBrokerContext implements BrokerContext {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: import org.apache.activemq.transport.stomp.XStreamSupport;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     public XStreamBrokerContext() {",
      "34:         stream.processAnnotations(SamplePojo.class);",
      "36:         beansMap.put(\"xstream\", stream);",
      "",
      "[Removed Lines]",
      "33:         XStream stream = new XStream();",
      "",
      "[Added Lines]",
      "34:         XStream stream = XStreamSupport.createXStream();",
      "",
      "---------------"
    ],
    "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java": [
      "File: activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java -> activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "81:         if (message instanceof ObjectMessage) {",
      "82:             try {",
      "83:                 return ((ObjectMessage) message).getObject();",
      "87:             }",
      "88:         }",
      "89:         if (message instanceof MapMessage) {",
      "",
      "[Removed Lines]",
      "84:             } catch (JMSException e) {",
      "86:                 return e;",
      "",
      "[Added Lines]",
      "84:             } catch (Exception e) {",
      "86:                 return new String(\"Cannot display ObjectMessage body. Reason: \" + e.getMessage());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6f03921b31d9fefeddb0f4fa63150ed1f94a14b1",
      "candidate_info": {
        "commit_hash": "6f03921b31d9fefeddb0f4fa63150ed1f94a14b1",
        "repo": "apache/activemq",
        "commit_url": "https://github.com/apache/activemq/commit/6f03921b31d9fefeddb0f4fa63150ed1f94a14b",
        "files": [
          "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
          "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
          "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
          "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
          "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
          "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
          "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
        ],
        "message": "https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker",
        "before_after_code_files": [
          "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
          "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
          "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
          "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
          "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
          "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
          "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
            "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
            "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
            "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
            "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
            "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
            "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
          ],
          "candidate": [
            "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
            "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
            "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
            "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
            "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
            "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
            "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java"
          ]
        }
      },
      "candidate_diff": {
        "activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java||activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java": [
          "File: activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java -> activemq-client/src/main/java/org/apache/activemq/util/ClassLoadingAwareObjectInputStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.io.ObjectInputStream;",
          "22: import java.io.ObjectStreamClass;",
          "23: import java.lang.reflect.Proxy;",
          "25: import org.slf4j.Logger;",
          "26: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.util.Arrays;",
          "25: import java.util.Collection;",
          "26: import java.util.Map;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     private static final ClassLoader FALLBACK_CLASS_LOADER =",
          "32:         ClassLoadingAwareObjectInputStream.class.getClassLoader();",
          "34:     private final ClassLoader inLoader;",
          "36:     public ClassLoadingAwareObjectInputStream(InputStream in) throws IOException {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:     private static String[] serializablePackages;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:     protected Class<?> resolveClass(ObjectStreamClass classDesc) throws IOException, ClassNotFoundException {",
          "42:         ClassLoader cl = Thread.currentThread().getContextClassLoader();",
          "44:     }",
          "46:     protected Class<?> resolveProxyClass(String[] interfaces) throws IOException, ClassNotFoundException {",
          "",
          "[Removed Lines]",
          "43:         return load(classDesc.getName(), cl, inLoader);",
          "",
          "[Added Lines]",
          "48:         Class clazz = load(classDesc.getName(), cl, inLoader);",
          "49:         checkSecurity(clazz);",
          "50:         return clazz;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "50:             cinterfaces[i] = load(interfaces[i], cl);",
          "51:         }",
          "53:         try {",
          "55:         } catch (IllegalArgumentException e) {",
          "56:             try {",
          "58:             } catch (IllegalArgumentException e1) {",
          "60:             }",
          "61:             try {",
          "63:             } catch (IllegalArgumentException e2) {",
          "65:             }",
          "68:         }",
          "69:     }",
          "",
          "[Removed Lines]",
          "54:             return Proxy.getProxyClass(cl, cinterfaces);",
          "57:                 return Proxy.getProxyClass(inLoader, cinterfaces);",
          "62:                 return Proxy.getProxyClass(FALLBACK_CLASS_LOADER, cinterfaces);",
          "67:             throw new ClassNotFoundException(null, e);",
          "",
          "[Added Lines]",
          "60:         Class clazz = null;",
          "62:             clazz = Proxy.getProxyClass(cl, cinterfaces);",
          "65:                 clazz = Proxy.getProxyClass(inLoader, cinterfaces);",
          "70:                 clazz = Proxy.getProxyClass(FALLBACK_CLASS_LOADER, cinterfaces);",
          "74:         }",
          "76:         if (clazz != null) {",
          "77:             checkSecurity(clazz);",
          "78:             return clazz;",
          "79:         } else {",
          "80:             throw new ClassNotFoundException(null);",
          "81:         }",
          "82:     }",
          "84:     public static String[] getSerialziablePackages() {",
          "85:        if (serializablePackages == null) {",
          "86:            serializablePackages = System.getProperty(\"org.apache.activemq.SERIALIZABLE_PACKAGES\",",
          "87:                        \"java.lang,java.util,org.apache.activemq,org.fusesource.hawtbuf,com.thoughtworks.xstream.mapper\").split(\",\");",
          "88:        }",
          "90:        return serializablePackages;",
          "91:     };",
          "93:     public static boolean isAllAllowed() {",
          "94:         return getSerialziablePackages().length == 1 && getSerialziablePackages()[0].equals(\"*\");",
          "95:     }",
          "97:     private void checkSecurity(Class clazz) throws ClassNotFoundException {",
          "98:         if (!clazz.isPrimitive()) {",
          "99:             if (clazz.getPackage() != null && !isAllAllowed()) {",
          "100:                boolean found = false;",
          "101:                for (String packageName : getSerialziablePackages()) {",
          "102:                    if (clazz.getPackage().getName().equals(packageName) || clazz.getPackage().getName().startsWith(packageName + \".\")) {",
          "103:                        found = true;",
          "104:                        break;",
          "105:                    }",
          "106:                }",
          "108:                if (!found) {",
          "109:                    throw new ClassNotFoundException(\"Forbidden \" + clazz + \"! This class is not allowed to be serialized. Add package with 'org.apache.activemq.SERIALIZABLE_PACKAGES' system property.\");",
          "110:                }",
          "111:             }",
          "",
          "---------------"
        ],
        "activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java||activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java": [
          "File: activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java -> activemq-http/src/main/java/org/apache/activemq/transport/xstream/XStreamWireFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.IOException;",
          "20: import java.io.Reader;",
          "22: import org.apache.activemq.command.MarshallAware;",
          "23: import org.apache.activemq.command.MessageDispatch;",
          "24: import org.apache.activemq.transport.util.TextWireFormat;",
          "25: import org.apache.activemq.wireformat.WireFormat;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: <<<<<<< HEAD",
          "23: =======",
          "24: import com.thoughtworks.xstream.converters.Converter;",
          "25: import com.thoughtworks.xstream.converters.MarshallingContext;",
          "26: import com.thoughtworks.xstream.converters.UnmarshallingContext;",
          "27: import com.thoughtworks.xstream.io.HierarchicalStreamReader;",
          "28: import com.thoughtworks.xstream.io.HierarchicalStreamWriter;",
          "29: >>>>>>> a7e2a44... https://issues.apache.org/jira/browse/AMQ-6013 - restrict classes which can be serialized inside the broker",
          "32: import org.apache.activemq.transport.stomp.XStreamSupport;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:     }",
          "98:         if (xStream == null) {",
          "99:             xStream = createXStream();",
          "",
          "[Removed Lines]",
          "97:     public XStream getXStream() {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "112:     protected XStream createXStream() {",
          "114:         xstream.ignoreUnknownElements();",
          "115:         return xstream;",
          "116:     }",
          "",
          "[Removed Lines]",
          "113:         XStream xstream = new XStream();",
          "",
          "[Added Lines]",
          "121:         final XStream xstream = XStreamSupport.createXStream();",
          "",
          "---------------"
        ],
        "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java": [
          "File: activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java -> activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/JmsFrameTranslator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:                         msg = createMapMessage(in);",
          "92:                         break;",
          "93:                     default:",
          "95:                 }",
          "96:             } catch (Throwable e) {",
          "97:                 command.getHeaders().put(Headers.TRANSFORMATION_ERROR, e.getMessage());",
          "",
          "[Removed Lines]",
          "94:                         throw new Exception(\"Unkown transformation: \" + transformation);",
          "",
          "[Added Lines]",
          "94:                         throw new Exception(\"Unknown transformation: \" + transformation);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "254:         }",
          "256:         if (xstream == null) {",
          "258:             xstream.ignoreUnknownElements();",
          "259:         }",
          "",
          "[Removed Lines]",
          "257:             xstream = new XStream();",
          "",
          "[Added Lines]",
          "257:             xstream = XStreamSupport.createXStream();",
          "",
          "---------------"
        ],
        "activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java||activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java": [
          "File: activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java -> activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/XStreamSupport.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.activemq.transport.stomp;",
          "19: import com.thoughtworks.xstream.XStream;",
          "20: import com.thoughtworks.xstream.security.AnyTypePermission;",
          "21: import com.thoughtworks.xstream.security.NoTypePermission;",
          "22: import com.thoughtworks.xstream.security.PrimitiveTypePermission;",
          "23: import org.apache.activemq.util.ClassLoadingAwareObjectInputStream;",
          "25: import java.util.Collection;",
          "26: import java.util.Map;",
          "28: public class XStreamSupport {",
          "30:     public static XStream createXStream() {",
          "31:         XStream stream = new XStream();",
          "32:         stream.addPermission(NoTypePermission.NONE);",
          "33:         stream.addPermission(PrimitiveTypePermission.PRIMITIVES);",
          "34:         stream.allowTypeHierarchy(Collection.class);",
          "35:         stream.allowTypeHierarchy(Map.class);",
          "36:         stream.allowTypes(new Class[]{String.class});",
          "37:         if (ClassLoadingAwareObjectInputStream.isAllAllowed()) {",
          "38:             stream.addPermission(AnyTypePermission.ANY);",
          "39:         } else {",
          "40:             for (String packageName : ClassLoadingAwareObjectInputStream.getSerialziablePackages()) {",
          "41:                 stream.allowTypesByWildcard(new String[]{packageName + \".**\"});",
          "42:             }",
          "43:         }",
          "44:         return stream;",
          "45:     }",
          "47: }",
          "",
          "---------------"
        ],
        "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java": [
          "File: activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java -> activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompTestSupport.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     }",
          "110:     public void startBroker() throws Exception {",
          "114:         XStreamBrokerContext context = new XStreamBrokerContext();",
          "115:         brokerService.setBrokerContext(context);",
          "",
          "[Removed Lines]",
          "112:         createBroker();",
          "",
          "[Added Lines]",
          "111:         System.setProperty(\"org.apache.activemq.SERIALIZABLE_PACKAGES\", \"*\");",
          "112:         createBroker(true);",
          "",
          "---------------"
        ],
        "activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java||activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java": [
          "File: activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java -> activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/util/XStreamBrokerContext.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import org.apache.activemq.transport.stomp.SamplePojo;",
          "25: import com.thoughtworks.xstream.XStream;",
          "27: public class XStreamBrokerContext implements BrokerContext {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.activemq.transport.stomp.XStreamSupport;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     public XStreamBrokerContext() {",
          "34:         stream.processAnnotations(SamplePojo.class);",
          "36:         beansMap.put(\"xstream\", stream);",
          "",
          "[Removed Lines]",
          "33:         XStream stream = new XStream();",
          "",
          "[Added Lines]",
          "34:         XStream stream = XStreamSupport.createXStream();",
          "",
          "---------------"
        ],
        "activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java||activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java": [
          "File: activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java -> activemq-web/src/main/java/org/apache/activemq/web/MessageQuery.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:         if (message instanceof ObjectMessage) {",
          "82:             try {",
          "83:                 return ((ObjectMessage) message).getObject();",
          "87:             }",
          "88:         }",
          "89:         if (message instanceof MapMessage) {",
          "",
          "[Removed Lines]",
          "84:             } catch (JMSException e) {",
          "86:                 return e;",
          "",
          "[Added Lines]",
          "84:             } catch (Exception e) {",
          "86:                 return new String(\"Cannot display ObjectMessage body. Reason: \" + e.getMessage());",
          "",
          "---------------"
        ]
      }
    }
  ]
}