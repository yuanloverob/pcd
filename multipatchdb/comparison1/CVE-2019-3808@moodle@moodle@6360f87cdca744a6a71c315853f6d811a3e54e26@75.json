{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5a0c850e50ffe5ce82570361673ed1c3504f0055",
      "candidate_info": {
        "commit_hash": "5a0c850e50ffe5ce82570361673ed1c3504f0055",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5a0c850e50ffe5ce82570361673ed1c3504f0055",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7.1+",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_STABLE;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019052001.06;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190809)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019052001.07;              // 20190520      = branching date YYYYMMDD - do not modify!",
          "36: $release  = '3.7.1+ (Build: 20190816)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9428fab113c47b8468d4b736254db118683c527",
      "candidate_info": {
        "commit_hash": "a9428fab113c47b8468d4b736254db118683c527",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a9428fab113c47b8468d4b736254db118683c527",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.6dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '36';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2018081000.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180810)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2018081700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.6dev (Build: 20180817)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a80ecb543898c498babb1fc0b4902d86cd2fd48",
      "candidate_info": {
        "commit_hash": "2a80ecb543898c498babb1fc0b4902d86cd2fd48",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/2a80ecb543898c498babb1fc0b4902d86cd2fd48",
        "files": [
          "mod/forum/externallib.php",
          "version.php"
        ],
        "message": "MDL-65071 forum: Error handling in web service when forum does not exist",
        "before_after_code_files": [
          "mod/forum/externallib.php||mod/forum/externallib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "mod/forum/externallib.php||mod/forum/externallib.php": [
          "File: mod/forum/externallib.php -> mod/forum/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "831:         $forumvault = $vaultfactory->get_forum_vault();",
          "832:         $forum = $forumvault->get_from_id($forumid);",
          "833:         $forumdatamapper = $legacydatamapperfactory->get_forum_data_mapper();",
          "834:         $forumrecord = $forumdatamapper->to_legacy_object($forum);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "833:         if (!$forum) {",
          "834:             throw new \\moodle_exception(\"Unable to find forum with id {$forumid}\");",
          "835:         }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019050100.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019050100.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a5afbf5f165251b1bf28a9f4790f525c685c43d",
      "candidate_info": {
        "commit_hash": "3a5afbf5f165251b1bf28a9f4790f525c685c43d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/3a5afbf5f165251b1bf28a9f4790f525c685c43d",
        "files": [
          "admin/user/user_bulk_message.php",
          "lib/classes/message/message.php",
          "lib/db/install.xml",
          "lib/db/upgrade.php",
          "lib/messagelib.php",
          "message/classes/api.php",
          "message/classes/helper.php",
          "message/externallib.php",
          "message/lib.php",
          "version.php"
        ],
        "message": "MDL-65015 core_message: add trusttext cleaning to messaging",
        "before_after_code_files": [
          "admin/user/user_bulk_message.php||admin/user/user_bulk_message.php",
          "lib/classes/message/message.php||lib/classes/message/message.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "lib/messagelib.php||lib/messagelib.php",
          "message/classes/api.php||message/classes/api.php",
          "message/classes/helper.php||message/classes/helper.php",
          "message/externallib.php||message/externallib.php",
          "message/lib.php||message/lib.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/user/user_bulk_message.php||admin/user/user_bulk_message.php": [
          "File: admin/user/user_bulk_message.php -> admin/user/user_bulk_message.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: require_once($CFG->dirroot.'/message/lib.php');",
          "5: require_once('user_message_form.php');",
          "8: $confirm = optional_param('confirm', 0, PARAM_BOOL);",
          "10: admin_externalpage_setup('userbulk');",
          "",
          "[Removed Lines]",
          "7: $msg     = optional_param('msg', '', PARAM_CLEANHTML);",
          "",
          "[Added Lines]",
          "7: $msg     = optional_param('msg', '', PARAM_RAW);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     $options->para     = false;",
          "46:     $options->newlines = true;",
          "47:     $options->smiley   = false;",
          "49:     $msg = format_text($formdata->messagebody['text'], $formdata->messagebody['format'], $options);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:     $options->trusted = trusttext_trusted(\\context_system::instance());",
          "",
          "---------------"
        ],
        "lib/classes/message/message.php||lib/classes/message/message.php": [
          "File: lib/classes/message/message.php -> lib/classes/message/message.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     private $timecreated;",
          "126:     private $properties = array(",
          "127:         'courseid',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:     private $fullmessagetrust;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:         'savedmessageid',",
          "145:         'attachment',",
          "146:         'attachname',",
          "148:         );",
          "",
          "[Removed Lines]",
          "147:         'timecreated'",
          "",
          "[Added Lines]",
          "150:         'timecreated',",
          "151:         'fullmessagetrust'",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2934:         upgrade_main_savepoint(true, 2019040200.01);",
          "2935:     }",
          "2937:     return true;",
          "2938: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2937:     if ($oldversion < 2019040600.01) {",
          "2940:         $table = new xmldb_table('messages');",
          "2941:         $field = new xmldb_field('fullmessagetrust', XMLDB_TYPE_INTEGER, '2', null, XMLDB_NOTNULL, null, '0', 'timecreated');",
          "2944:         if (!$dbman->field_exists($table, $field)) {",
          "2945:             $dbman->add_field($table, $field);",
          "2946:         }",
          "2949:         upgrade_main_savepoint(true, 2019040600.01);",
          "2950:     }",
          "",
          "---------------"
        ],
        "lib/messagelib.php||lib/messagelib.php": [
          "File: lib/messagelib.php -> lib/messagelib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:         $tabledata->smallmessage = $eventdata->smallmessage;",
          "155:         $tabledata->timecreated = time();",
          "157:         if ($messageid = message_handle_phpunit_redirection($eventdata, $table, $tabledata)) {",
          "158:             return $messageid;",
          "159:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:         if (trusttext_active()) {",
          "161:             $messagecontext = \\context_system::instance();",
          "163:             if ($conv = $DB->get_record('message_conversations', ['id' => $conversationid], 'id, type, contextid')) {",
          "164:                 if ($conv->type == \\core_message\\api::MESSAGE_CONVERSATION_TYPE_GROUP && $conv->contextid) {",
          "165:                     $messagecontext = \\context::instance_by_id($conv->contextid);",
          "166:                 }",
          "167:             }",
          "168:             $tabledata->fullmessagetrust = trusttext_trusted($messagecontext);",
          "169:         } else {",
          "170:             $tabledata->fullmessagetrust = false;",
          "171:         }",
          "",
          "---------------"
        ],
        "message/classes/api.php||message/classes/api.php": [
          "File: message/classes/api.php -> message/classes/api.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "549:         $typesql = !is_null($type) ? \" AND mc.type = :convtype \" : \"\";",
          "551:         $sql = \"SELECT m.id as messageid, mc.id as id, mc.name as conversationname, mc.type as conversationtype, m.useridfrom,",
          "554:                   FROM {message_conversations} mc",
          "555:             INNER JOIN {message_conversation_members} mcm",
          "556:                     ON (mcm.conversationid = mc.id AND mcm.userid = :userid3)",
          "",
          "[Removed Lines]",
          "552:                        m.smallmessage, m.fullmessage, m.fullmessageformat, m.fullmessagehtml, m.timecreated, mc.component,",
          "553:                        mc.itemtype, mc.itemid, mc.contextid, mca.action as ismuted",
          "",
          "[Added Lines]",
          "552:                        m.smallmessage, m.fullmessage, m.fullmessageformat, m.fullmessagetrust, m.fullmessagehtml, m.timecreated,",
          "553:                        mc.component, mc.itemtype, mc.itemid, mc.contextid, mca.action as ismuted",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1917:         $eventdata->notification    = 0;",
          "1918:         $messageid = message_send($eventdata);",
          "1921:         $message = (object) [",
          "1922:             'id' => $messagerecord->id,",
          "1923:             'useridfrom' => $messagerecord->useridfrom,",
          "1924:             'text' => $messagerecord->fullmessage,",
          "1926:         ];",
          "1927:         return $message;",
          "1928:     }",
          "",
          "[Removed Lines]",
          "1920:         $messagerecord = $DB->get_record('messages', ['id' => $messageid], 'id, useridfrom, fullmessage, timecreated');",
          "1925:             'timecreated' => $messagerecord->timecreated",
          "",
          "[Added Lines]",
          "1920:         $messagerecord = $DB->get_record('messages', ['id' => $messageid], 'id, useridfrom, fullmessage,",
          "1921:                 timecreated, fullmessagetrust');",
          "1926:             'timecreated' => $messagerecord->timecreated,",
          "1927:             'fullmessagetrust' => $messagerecord->fullmessagetrust",
          "",
          "---------------"
        ],
        "message/classes/helper.php||message/classes/helper.php": [
          "File: message/classes/helper.php -> message/classes/helper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:         $hash = self::get_conversation_hash([$userid, $otheruserid]);",
          "60:         $sql = \"SELECT m.id, m.useridfrom, m.subject, m.fullmessage, m.fullmessagehtml,",
          "62:                   FROM {message_conversations} mc",
          "63:             INNER JOIN {messages} m",
          "64:                     ON m.conversationid = mc.id",
          "",
          "[Removed Lines]",
          "61:                        m.fullmessageformat, m.smallmessage, m.timecreated, muaread.timecreated AS timeread",
          "",
          "[Added Lines]",
          "61:                        m.fullmessageformat, m.fullmessagetrust, m.smallmessage, m.timecreated,",
          "62:                        mc.contextid, muaread.timecreated AS timeread",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:         global $DB;",
          "133:         $sql = \"SELECT m.id, m.useridfrom, m.subject, m.fullmessage, m.fullmessagehtml,",
          "135:                   FROM {message_conversations} mc",
          "136:             INNER JOIN {messages} m",
          "137:                     ON m.conversationid = mc.id",
          "",
          "[Removed Lines]",
          "134:                        m.fullmessageformat, m.smallmessage, m.timecreated, muaread.timecreated AS timeread",
          "",
          "[Added Lines]",
          "135:                        m.fullmessageformat, m.fullmessagetrust, m.smallmessage, m.timecreated,",
          "136:                        mc.contextid, muaread.timecreated AS timeread",
          "",
          "---------------"
        ],
        "message/externallib.php||message/externallib.php": [
          "File: message/externallib.php -> message/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:                 $message['textformat']);",
          "95:             $createdmessage->text = message_format_message_text((object) [",
          "96:                 'smallmessage' => $createdmessage->text,",
          "98:             ]);",
          "99:             $messages[] = $createdmessage;",
          "100:         }",
          "",
          "[Removed Lines]",
          "97:                 'fullmessageformat' => external_validate_format($message['textformat'])",
          "",
          "[Added Lines]",
          "97:                 'fullmessageformat' => external_validate_format($message['textformat']),",
          "98:                 'fullmessagetrust' => $createdmessage->fullmessagetrust",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "203:             }",
          "204:             if ($success) {",
          "205:                 $resultmsg['msgid'] = $success;",
          "210:                 $resultmsg['timecreated'] = time();",
          "211:                 $messageids[] = $success;",
          "212:             } else {",
          "",
          "[Removed Lines]",
          "206:                 $resultmsg['text'] = message_format_message_text((object) [",
          "207:                     'smallmessage' => $message['text'],",
          "208:                     'fullmessageformat' => external_validate_format($message['textformat'])",
          "209:                 ]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "221:         }",
          "223:         if (!empty($messageids)) {",
          "225:             $resultmessages = array_map(function($resultmessage) use ($messagerecords, $USER) {",
          "226:                 $id = $resultmessage['msgid'];",
          "227:                 $resultmessage['conversationid'] = isset($messagerecords[$id]) ? $messagerecords[$id]->conversationid : null;",
          "228:                 $resultmessage['useridfrom'] = $USER->id;",
          "229:                 return $resultmessage;",
          "230:             }, $resultmessages);",
          "231:         }",
          "",
          "[Removed Lines]",
          "224:             $messagerecords = $DB->get_records_list('messages', 'id', $messageids, '', 'id, conversationid');",
          "",
          "[Added Lines]",
          "221:             $messagerecords = $DB->get_records_list(",
          "222:                 'messages',",
          "223:                 'id',",
          "224:                 $messageids,",
          "225:                 '',",
          "226:                 'id, conversationid, smallmessage, fullmessageformat, fullmessagetrust');",
          "231:                 $resultmessage['text'] = message_format_message_text((object) [",
          "232:                     'smallmessage' => $messagerecords[$id]->smallmessage,",
          "233:                     'fullmessageformat' => external_validate_format($messagerecords[$id]->fullmessageformat),",
          "234:                     'fullmessagetrust' => $messagerecords[$id]->fullmessagetrust",
          "235:                 ]);",
          "",
          "---------------"
        ],
        "message/lib.php||message/lib.php": [
          "File: message/lib.php -> message/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     $options = new stdClass();",
          "115:     $options->para = false;",
          "116:     $options->blanktarget = true;",
          "118:     $format = $message->fullmessageformat;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     $options->trusted = isset($message->fullmessagetrust) ? $message->fullmessagetrust : false;",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019040600.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019040600.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1fadad46a0d30a6d9b9c9b497cd82b14fc62fbbe",
      "candidate_info": {
        "commit_hash": "1fadad46a0d30a6d9b9c9b497cd82b14fc62fbbe",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/1fadad46a0d30a6d9b9c9b497cd82b14fc62fbbe",
        "files": [
          "lib/db/install.xml",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "MDL-64773 core: added new table to keep track of muted conversations",
        "before_after_code_files": [
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2753:         upgrade_main_savepoint(true, 2019030100.01);",
          "2754:     }",
          "2756:     return true;",
          "2757: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2756:     if ($oldversion < 2019030800.00) {",
          "2759:         $table = new xmldb_table('message_conversation_actions');",
          "2762:         $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);",
          "2763:         $table->add_field('userid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2764:         $table->add_field('conversationid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2765:         $table->add_field('action', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2766:         $table->add_field('timecreated', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);",
          "2769:         $table->add_key('primary', XMLDB_KEY_PRIMARY, ['id']);",
          "2770:         $table->add_key('userid', XMLDB_KEY_FOREIGN, ['userid'], 'user', ['id']);",
          "2771:         $table->add_key('conversationid', XMLDB_KEY_FOREIGN, ['conversationid'], 'message_conversations', ['id']);",
          "2774:         if (!$dbman->table_exists($table)) {",
          "2775:             $dbman->create_table($table);",
          "2776:         }",
          "2779:         upgrade_main_savepoint(true, 2019030800.00);",
          "2780:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019030700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019030800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    }
  ]
}