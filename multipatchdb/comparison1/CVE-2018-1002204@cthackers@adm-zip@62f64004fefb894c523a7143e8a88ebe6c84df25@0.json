{
  "cve_id": "CVE-2018-1002204",
  "cve_desc": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
  "repo": "cthackers/adm-zip",
  "patch_hash": "62f64004fefb894c523a7143e8a88ebe6c84df25",
  "patch_info": {
    "commit_hash": "62f64004fefb894c523a7143e8a88ebe6c84df25",
    "repo": "cthackers/adm-zip",
    "commit_url": "https://github.com/cthackers/adm-zip/commit/62f64004fefb894c523a7143e8a88ebe6c84df25",
    "files": [
      "adm-zip.js"
    ],
    "message": "Merge pull request #212 from aviadatsnyk/master\n\nfix: prevent extracting archived files outside of target path.  Credit to Snyk Security Research Team for disclosure and fixing the issue.",
    "before_after_code_files": [
      "adm-zip.js||adm-zip.js"
    ]
  },
  "patch_diff": {
    "adm-zip.js||adm-zip.js": [
      "File: adm-zip.js -> adm-zip.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "356:             var target = pth.resolve(targetPath, maintainEntryPath ? entryName : pth.basename(entryName));",
      "358:             if (item.isDirectory) {",
      "359:                 target = pth.resolve(target, \"..\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "357:             if(!target.startsWith(targetPath)) {",
      "358:                 throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
      "359:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "429:             _zip.entries.forEach(function(entry) {",
      "430:                 entryName = entry.entryName.toString();",
      "432:                 if(isWin){",
      "433:                     entryName = escapeFileName(entryName)",
      "434:                 }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "435:                 if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {",
      "436:                     throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
      "437:                 }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "471:                     entryName = escapeFileName(entryName)",
      "472:                 }",
      "474:                 if (entry.isDirectory) {",
      "475:                     Utils.makeDir(pth.resolve(targetPath, entryName));",
      "476:                     if(--i == 0)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "481:                 if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {",
      "482:                   throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
      "483:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6f4dfeb9a2166e93207443879988f97d88a37cde",
      "candidate_info": {
        "commit_hash": "6f4dfeb9a2166e93207443879988f97d88a37cde",
        "repo": "cthackers/adm-zip",
        "commit_url": "https://github.com/cthackers/adm-zip/commit/6f4dfeb9a2166e93207443879988f97d88a37cde",
        "files": [
          "adm-zip.js"
        ],
        "message": "fix: prevent extracting archived files outside of target path",
        "before_after_code_files": [
          "adm-zip.js||adm-zip.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/cthackers/adm-zip/pull/212"
        ],
        "olp_code_files": {
          "patch": [
            "adm-zip.js||adm-zip.js"
          ],
          "candidate": [
            "adm-zip.js||adm-zip.js"
          ]
        }
      },
      "candidate_diff": {
        "adm-zip.js||adm-zip.js": [
          "File: adm-zip.js -> adm-zip.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:             var target = pth.resolve(targetPath, maintainEntryPath ? entryName : pth.basename(entryName));",
          "358:             if (item.isDirectory) {",
          "359:                 target = pth.resolve(target, \"..\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "357:             if(!target.startsWith(targetPath)) {",
          "358:                 throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
          "359:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "429:             _zip.entries.forEach(function(entry) {",
          "430:                 entryName = entry.entryName.toString();",
          "432:                 if(isWin){",
          "433:                     entryName = escapeFileName(entryName)",
          "434:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "435:                 if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {",
          "436:                     throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
          "437:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "471:                     entryName = escapeFileName(entryName)",
          "472:                 }",
          "474:                 if (entry.isDirectory) {",
          "475:                     Utils.makeDir(pth.resolve(targetPath, entryName));",
          "476:                     if(--i == 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "481:                 if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {",
          "482:                   throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;",
          "483:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}