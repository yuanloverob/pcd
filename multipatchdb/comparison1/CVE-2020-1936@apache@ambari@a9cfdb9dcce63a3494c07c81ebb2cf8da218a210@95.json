{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cb2f49f6514f53a72df3052e255cff324c445154",
      "candidate_info": {
        "commit_hash": "cb2f49f6514f53a72df3052e255cff324c445154",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/cb2f49f6514f53a72df3052e255cff324c445154",
        "files": [
          "ambari-web/test/controllers/main/host/details_test.js"
        ],
        "message": "AMBARI-24618. Ambari generates wrong zookeeper connection string for KMS HA configuration(tests)",
        "before_after_code_files": [
          "ambari-web/test/controllers/main/host/details_test.js||ambari-web/test/controllers/main/host/details_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/test/controllers/main/host/details_test.js||ambari-web/test/controllers/main/host/details_test.js": [
          "File: ambari-web/test/controllers/main/host/details_test.js -> ambari-web/test/controllers/main/host/details_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3427:     var cases = [",
          "3428:       {",
          "3430:         'kmsPort': 'port',",
          "3431:         'title': 'single host',",
          "3432:         'hostToInstall': undefined,",
          "",
          "[Removed Lines]",
          "3429:         'kmsHosts': ['host1'],",
          "",
          "[Added Lines]",
          "3429:         'zookeeperHosts': ['host1'],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3459:         ]",
          "3460:       },",
          "3461:       {",
          "3463:         'kmsPort': 'port',",
          "3464:         'title': 'two hosts',",
          "3465:         'hostToInstall': 'host2',",
          "",
          "[Removed Lines]",
          "3462:         'kmsHosts': ['host1', 'host2'],",
          "",
          "[Added Lines]",
          "3462:         'zookeeperHosts': ['host1', 'host2'],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3550:         beforeEach(function () {",
          "3551:           controller.set('rangerKMSServerHost', item.hostToInstall);",
          "3553:           controller.onLoadRangerConfigs(data);",
          "3554:         });",
          "3556:         it('setConfigsChanges is called with valid arguments', function () {",
          "3557:           expect(controller.setConfigsChanges.calledWith(item.result)).to.be.true;",
          "3558:         });",
          "",
          "[Removed Lines]",
          "3552:           sinon.stub(controller, 'getRangerKMSServerHosts').returns(item.kmsHosts);",
          "",
          "[Added Lines]",
          "3552:           sinon.stub(App.MasterComponent, 'find').returns(Em.Object.create({hostNames: item.zookeeperHosts}))",
          "3553:           sinon.stub(controller, 'getRangerKMSServerHosts').returns(item.zookeeperHosts);",
          "3557:         afterEach(function () {",
          "3558:           App.MasterComponent.find.restore();",
          "3559:         });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86cf3d7296648fe80048418f55caff69fba84751",
      "candidate_info": {
        "commit_hash": "86cf3d7296648fe80048418f55caff69fba84751",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/86cf3d7296648fe80048418f55caff69fba84751",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ],
        "message": "AMBARI-25379 fix indentation\n\nChange-Id: I666730edac88533495a4a53944ff9515ca001406",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog275.java"
        ]
      }
    },
    {
      "candidate_hash": "bceec5c53cdc50afb0f0809c58775d64df6871dd",
      "candidate_info": {
        "commit_hash": "bceec5c53cdc50afb0f0809c58775d64df6871dd",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bceec5c53cdc50afb0f0809c58775d64df6871dd",
        "files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ],
        "message": "AMBARI-25450. [ubuntu16] HDP install failed for upgrade from  HDP-3.0.1.0-187 to HDP-3.1.5.0-139 (aonishuk)",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py||ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py": [
          "File: ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py -> ambari-common/src/main/python/ambari_commons/repo_manager/apt_manager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   def transform_baseurl_to_repoid(self, base_url):",
          "157:     \"\"\"",
          "160:     :type base_url str",
          "161:     :rtype str",
          "",
          "[Removed Lines]",
          "158:     Transforms the URL looking like proto://localhost/some/long/path to localhost_some_long_path",
          "",
          "[Added Lines]",
          "158:     Transforms the URL looking like proto://login:password@localhost/some/long/path to localhost_some_long_path",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165:     if url_proto_pos > 0:",
          "166:       base_url = base_url[url_proto_pos+len(url_proto_mask):]",
          "168:     return base_url.replace(\"/\", \"_\").replace(\" \", \"_\")",
          "170:   def get_available_packages_in_repos(self, repos):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     if \"@\" in base_url:",
          "169:       base_url = base_url.split(\"@\", 1)[1]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a5b3506e15f7e966ebe840c99bc8f46f7887289",
      "candidate_info": {
        "commit_hash": "7a5b3506e15f7e966ebe840c99bc8f46f7887289",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7a5b3506e15f7e966ebe840c99bc8f46f7887289",
        "files": [
          "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py",
          "ambari-server/src/test/python/stacks/2.0.6/configs/secured.json",
          "ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py"
        ],
        "message": "AMBARI-24472. HDFS and YARN Grafana dashboards for clusters with externalized HDFS does not show graphs. (jaimin) (#2074)\n\nAMBARI-24472. YARN Grafana dashboards for clusters with externalized HDFS does not show graphs.",
        "before_after_code_files": [
          "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py||ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py",
          "ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py||ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py||ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py": [
          "File: ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py -> ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: hdfs_user = config['configurations']['hadoop-env']['hdfs_user']",
          "98: user_group = config['configurations']['cluster-env']['user_group']",
          "104:   hadoop_conf_dir = conf_select.get_hadoop_conf_dir()",
          "106:   mount_table_xml_inclusion_file_full_path = None",
          "",
          "[Removed Lines]",
          "100: namenode_host = default(\"/clusterHostInfo/namenode_hosts\", [])",
          "101: has_namenode = not len(namenode_host) == 0",
          "103: if has_namenode or dfs_type == 'HCFS':",
          "",
          "[Added Lines]",
          "100: hdfs_client_hosts = default(\"/clusterHostInfo/hdfs_client_hosts\", [])",
          "101: has_hdfs_clients = not len(hdfs_client_hosts) == 0",
          "103: if has_hdfs_clients or dfs_type == 'HCFS':",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py": [
          "File: ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py -> ambari-server/src/main/resources/stack-hooks/after-INSTALL/scripts/shared_initialization.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:   else:",
          "78:     Logger.warning(\"Parameter hadoop_conf_dir is missing or directory does not exist. This is expected if this host does not have any Hadoop components.\")",
          "81:     # create core-site only if the hadoop config diretory exists",
          "82:     XmlConfig(\"core-site.xml\",",
          "83:               conf_dir=params.hadoop_conf_dir,",
          "",
          "[Removed Lines]",
          "80:   if is_hadoop_conf_dir_present and (params.has_namenode or stackversion.find('Gluster') >= 0 or params.dfs_type == 'HCFS'):",
          "",
          "[Added Lines]",
          "80:   if is_hadoop_conf_dir_present and (params.has_hdfs_clients or stackversion.find('Gluster') >= 0 or params.dfs_type == 'HCFS'):",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py -> ambari-server/src/main/resources/stack-hooks/before-START/scripts/params.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: hs_host = default(\"/clusterHostInfo/historyserver_hosts\", [])",
          "113: jtnode_host = default(\"/clusterHostInfo/jtnode_hosts\", [])",
          "114: namenode_host = default(\"/clusterHostInfo/namenode_hosts\", [])",
          "115: zk_hosts = default(\"/clusterHostInfo/zookeeper_server_hosts\", [])",
          "116: ganglia_server_hosts = default(\"/clusterHostInfo/ganglia_server_hosts\", [])",
          "117: cluster_name = config[\"clusterName\"]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115: hdfs_client_hosts = default(\"/clusterHostInfo/hdfs_client_hosts\", [])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:   ams_collector_hosts = \",\".join(default(\"/clusterHostInfo/metrics_collector_hosts\", []))",
          "126: has_namenode = not len(namenode_host) == 0",
          "127: has_resourcemanager = not len(rm_host) == 0",
          "128: has_slaves = not len(slave_hosts) == 0",
          "129: has_oozie_server = not len(oozie_servers) == 0",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128: has_hdfs_clients = not len(hdfs_client_hosts) == 0",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py||ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py": [
          "File: ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py -> ambari-server/src/main/resources/stack-hooks/before-START/scripts/shared_initialization.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     else:",
          "68:       tc_owner = params.hdfs_user",
          "80:     if os.path.exists(params.hadoop_conf_dir):",
          "81:       File(os.path.join(params.hadoop_conf_dir, 'commons-logging.properties'),",
          "82:            owner=tc_owner,",
          "",
          "[Removed Lines]",
          "70:     # if WebHDFS is not enabled we need this jar to create hadoop folders and copy tarballs to HDFS.",
          "71:     if params.sysprep_skip_copy_fast_jar_hdfs:",
          "72:       print \"Skipping copying of fast-hdfs-resource.jar as host is sys prepped\"",
          "73:     elif params.dfs_type == 'HCFS' or not WebHDFSUtil.is_webhdfs_available(params.is_webhdfs_enabled, params.dfs_type):",
          "74:       # for source-code of jar goto contrib/fast-hdfs-resource",
          "75:       File(format(\"{ambari_libs_dir}/fast-hdfs-resource.jar\"),",
          "76:            mode=0644,",
          "77:            content=StaticFile(\"fast-hdfs-resource.jar\")",
          "78:       )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:              owner=params.hdfs_user,",
          "105:         )",
          "126: def setup_configs():",
          "",
          "[Removed Lines]",
          "107:       if params.hadoop_metrics2_properties_content:",
          "108:         File(os.path.join(params.hadoop_conf_dir, \"hadoop-metrics2.properties\"),",
          "109:              owner=params.hdfs_user,",
          "110:              group=params.user_group,",
          "111:              content=InlineTemplate(params.hadoop_metrics2_properties_content)",
          "112:              )",
          "113:       else:",
          "114:         File(os.path.join(params.hadoop_conf_dir, \"hadoop-metrics2.properties\"),",
          "115:              owner=params.hdfs_user,",
          "116:              group=params.user_group,",
          "117:              content=Template(\"hadoop-metrics2.properties.j2\")",
          "118:              )",
          "120:     if params.dfs_type == 'HCFS' and params.has_core_site and 'ECS_CLIENT' in params.component_list:",
          "121:        create_dirs()",
          "123:     create_microsoft_r_dir()",
          "",
          "[Added Lines]",
          "97:     create_microsoft_r_dir()",
          "99:   if params.has_hdfs_clients or params.dfs_type == 'HCFS':",
          "100:     # if WebHDFS is not enabled we need this jar to create hadoop folders and copy tarballs to HDFS.",
          "101:     if params.sysprep_skip_copy_fast_jar_hdfs:",
          "102:       print \"Skipping copying of fast-hdfs-resource.jar as host is sys prepped\"",
          "103:     elif params.dfs_type == 'HCFS' or not WebHDFSUtil.is_webhdfs_available(params.is_webhdfs_enabled, params.dfs_type):",
          "104:       # for source-code of jar goto contrib/fast-hdfs-resource",
          "105:       File(format(\"{ambari_libs_dir}/fast-hdfs-resource.jar\"),",
          "106:            mode=0644,",
          "107:            content=StaticFile(\"fast-hdfs-resource.jar\")",
          "108:            )",
          "109:     if params.hadoop_metrics2_properties_content:",
          "110:       File(os.path.join(params.hadoop_conf_dir, \"hadoop-metrics2.properties\"),",
          "111:            owner=params.hdfs_user,",
          "112:            group=params.user_group,",
          "113:            content=InlineTemplate(params.hadoop_metrics2_properties_content)",
          "114:            )",
          "115:     else:",
          "116:       File(os.path.join(params.hadoop_conf_dir, \"hadoop-metrics2.properties\"),",
          "117:            owner=params.hdfs_user,",
          "118:            group=params.user_group,",
          "119:            content=Template(\"hadoop-metrics2.properties.j2\")",
          "120:            )",
          "122:     if params.dfs_type == 'HCFS' and params.has_core_site and 'ECS_CLIENT' in params.component_list:",
          "123:       create_dirs()",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py||ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py": [
          "File: ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py -> ambari-server/src/test/python/stacks/2.0.6/hooks/before-START/test_before_start.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:                               create_parents = True,",
          "65:                               cd_access = 'a',",
          "66:                               )",
          "71:     self.assertResourceCalled('File', '/etc/hadoop/conf/commons-logging.properties',",
          "72:                               content = Template('commons-logging.properties.j2'),",
          "73:                               owner = 'hdfs',",
          "",
          "[Removed Lines]",
          "67:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "68:         content = StaticFile('fast-hdfs-resource.jar'),",
          "69:         mode = 0644,",
          "70:     )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:                               owner='hdfs',",
          "84:                               content=InlineTemplate('log4jproperties\\nline2log4jproperties\\nline2')",
          "85:                               )",
          "86:     self.assertResourceCalled('File', '/etc/hadoop/conf/hadoop-metrics2.properties',",
          "87:                               content = InlineTemplate(self.getConfig()['configurations']['hadoop-metrics2.properties']['content']),",
          "88:                               group='hadoop',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "84:                               content = StaticFile('fast-hdfs-resource.jar'),",
          "85:                               mode = 0644,",
          "86:                               )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:                               create_parents = True,",
          "150:                               cd_access = 'a',",
          "151:                               )",
          "156:     self.assertResourceCalled('File', '/etc/hadoop/conf/commons-logging.properties',",
          "157:                               content = Template('commons-logging.properties.j2'),",
          "158:                               owner = 'root',",
          "",
          "[Removed Lines]",
          "152:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "153:         content = StaticFile('fast-hdfs-resource.jar'),",
          "154:         mode = 0644,",
          "155:     )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "168:                               owner='hdfs',",
          "169:                               content=InlineTemplate('log4jproperties\\nline2log4jproperties\\nline2')",
          "170:                               )",
          "171:     self.assertResourceCalled('File', '/etc/hadoop/conf/hadoop-metrics2.properties',",
          "172:                               content = InlineTemplate(self.getConfig()['configurations']['hadoop-metrics2.properties']['content']),",
          "173:                               group='hadoop',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "169:                               content = StaticFile('fast-hdfs-resource.jar'),",
          "170:                               mode = 0644,",
          "171:                               )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "238:                               owner = 'hdfs',",
          "239:                               create_parents = True,",
          "240:                               cd_access = 'a',",
          "246:     self.assertResourceCalled('File', '/etc/hadoop/conf/commons-logging.properties',",
          "247:                               content = Template('commons-logging.properties.j2'),",
          "248:                               owner = 'hdfs',",
          "",
          "[Removed Lines]",
          "241:                               )",
          "242:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "243:         content = StaticFile('fast-hdfs-resource.jar'),",
          "244:         mode = 0644,",
          "245:     )",
          "",
          "[Added Lines]",
          "242:                               )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "258:                               owner='hdfs',",
          "259:                               content=InlineTemplate('log4jproperties\\nline2log4jproperties\\nline2')",
          "260:     )",
          "261:     self.assertResourceCalled('File', '/etc/hadoop/conf/hadoop-metrics2.properties',",
          "262:                               content = InlineTemplate(self.getConfig()['configurations']['hadoop-metrics2.properties']['content']),",
          "263:                               group='hadoop',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "259:                               content = StaticFile('fast-hdfs-resource.jar'),",
          "260:                               mode = 0644,",
          "261:                               )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "330:                               owner = 'hdfs',",
          "331:                               create_parents = True,",
          "332:                               cd_access = 'a',",
          "338:     self.assertResourceCalled('File', '/etc/hadoop/conf/commons-logging.properties',",
          "339:                               content = Template('commons-logging.properties.j2'),",
          "340:                               owner = 'hdfs',",
          "",
          "[Removed Lines]",
          "333:                               )",
          "334:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "335:         content = StaticFile('fast-hdfs-resource.jar'),",
          "336:         mode = 0644,",
          "337:     )",
          "",
          "[Added Lines]",
          "334:                               )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "350:                               owner='hdfs',",
          "351:                               content=InlineTemplate('log4jproperties\\nline2log4jproperties\\nline2')",
          "352:     )",
          "353:     self.assertResourceCalled('File', '/etc/hadoop/conf/hadoop-metrics2.properties',",
          "354:                               content = InlineTemplate(self.getConfig()['configurations']['hadoop-metrics2.properties']['content']),",
          "355:                               group='hadoop',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:     self.assertResourceCalled('File', '/var/lib/ambari-agent/lib/fast-hdfs-resource.jar',",
          "351:                               content = StaticFile('fast-hdfs-resource.jar'),",
          "352:                               mode = 0644,",
          "353:                               )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0af78ffee08e824822e7c46453bc7675358c5565",
      "candidate_info": {
        "commit_hash": "0af78ffee08e824822e7c46453bc7675358c5565",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/0af78ffee08e824822e7c46453bc7675358c5565",
        "files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs"
        ],
        "message": "AMBARI-24299 [Yarn Queue Manager] Yarn Queue manager View is resetting value some properties that are not defined UI (asnaik) (#1774) (#1934)",
        "before_after_code_files": [
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs||contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js -> contrib/views/capacity-scheduler/src/main/resources/ui/app/models/queue.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:   maximum_applications: DS.attr('number', { defaultValue: null }),",
          "257:   maximum_am_resource_percent: DS.attr('number', { defaultValue: null }),",
          "258:   priority: DS.attr('number', {defaultValue: 0}),",
          "260:   disable_preemption: DS.attr('string', {defaultValue: ''}),",
          "261:   isPreemptionInherited: DS.attr('boolean', {defaultValue: true}),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:   maximum_allocation_mb:DS.attr('number'),",
          "260:   maximum_allocation_vcores:DS.attr('number'),",
          "",
          "---------------"
        ],
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js||contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js -> contrib/views/capacity-scheduler/src/main/resources/ui/app/serializers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:           priority:                      (props[base_path + \".priority\"])? +props[base_path + \".priority\"] : 0,",
          "108:           labelsEnabled:                 props.hasOwnProperty(labelsPath),",
          "109:           disable_preemption:            props[base_path + '.disable_preemption'] || '',",
          "111:         };",
          "",
          "[Removed Lines]",
          "110:           isPreemptionInherited:         (props[base_path + '.disable_preemption'] !== undefined)?false:true",
          "",
          "[Added Lines]",
          "110:           isPreemptionInherited:         (props[base_path + '.disable_preemption'] !== undefined)?false:true,",
          "111:           maximum_allocation_mb:         props[base_path + '.maximum-allocation-mb'] || null,",
          "112:           maximum_allocation_vcores:     props[base_path + '.maximum-allocation-vcores'] || null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:     json[this.PREFIX + \".\" + record.get('path') + \".queues\"] = record.get('queues')||null;",
          "230:     json[this.PREFIX + \".\" + record.get('path') + \".default-node-label-expression\"] = record.get('default_node_label_expression')||null;",
          "231:     json[this.PREFIX + \".\" + record.get('path') + \".ordering-policy\"] = record.get('ordering_policy')||null;",
          "233:     if (record.get('ordering_policy') == 'fair') {",
          "234:       json[this.PREFIX + \".\" + record.get('path') + \".ordering-policy.fair.enable-size-based-weight\"] = record.get('enable_size_based_weight');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:     json[this.PREFIX + \".\" + record.get('path') + \".maximum-allocation-mb\"] = record.get('maximum_allocation_mb') || null;",
          "235:     json[this.PREFIX + \".\" + record.get('path') + \".maximum-allocation-vcores\"] = record.get('maximum_allocation_vcores') || null;",
          "",
          "---------------"
        ],
        "contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs||contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs": [
          "File: contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs -> contrib/views/capacity-scheduler/src/main/resources/ui/app/templates/queue.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "456:                   {{/if}}",
          "457:               </div>",
          "458:             {{/if}}",
          "459:           </form>",
          "460:         </div>",
          "461:       </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "459:               <div class=\"form-group\">",
          "460:                   {{tooltip-label",
          "461:                           class=\"col-xs-6 control-label\"",
          "462:                           label='Maximum Allocation Vcores'",
          "463:                           message='The per queue maximum limit of virtual cores to allocate to each container request at the Resource Manager.'",
          "464:                   }}",
          "465:                   {{#if isOperator}}",
          "466:                       <div class=\"col-xs-6 control-value\">",
          "467:                           {{int-input value=content.maximum_allocation_vcores class=\"input-sm input-int\" placeholder=\"Inherited\"}}",
          "468:                           {{#if queueDirtyFilelds.maximum_allocation_vcores}}",
          "469:                               <div class=\"btn-group btn-group-xs\" >",
          "470:                                   <a {{action 'rollbackProp' 'maximum_allocation_vcores' content}} href=\"#\" class=\"btn btn-default btn-warning\"><i class=\"fa fa-undo\"></i></a>",
          "471:                               </div>",
          "472:                           {{/if}}",
          "473:                       </div>",
          "474:                   {{else}}",
          "475:                       <div class=\"col-xs-6\">",
          "476:                           {{#if content.maximum_allocation_vcores}}",
          "477:                               <p class=\"form-control-static\">{{content.maximum_allocation_vcores}}</p>",
          "478:                           {{else}}",
          "479:                               <p class=\"form-control-static\">Inherited</p>",
          "480:                           {{/if}}",
          "481:                       </div>",
          "482:                   {{/if}}",
          "483:               </div>",
          "484:               <div class=\"form-group\">",
          "485:                   {{tooltip-label",
          "486:                           class=\"col-xs-6 control-label\"",
          "487:                           label='Maximum Allocation Mb'",
          "488:                           message='The per queue maximum limit of memory to allocate to each container request at the Resource Manager.'",
          "489:                   }}",
          "490:                   {{#if isOperator}}",
          "491:                       <div class=\"col-xs-6 control-value input-percent-wrap\">",
          "492:                           <div>",
          "493:                               <div class=\"input-group input-percent\">",
          "494:                                   {{int-input value=content.maximum_allocation_mb class=\"input-sm input-int\"",
          "495:                                               placeholder=\"Inherited\"}}",
          "496:                                   <span class=\"input-group-addon\">MB</span>",
          "497:                               </div>",
          "498:                           </div>",
          "499:                           {{#if queueDirtyFilelds.maximum_allocation_mb}}",
          "500:                               <div class=\"btn-group btn-group-xs\">",
          "501:                                   <a {{action 'rollbackProp' 'maximum_allocation_mb' content}} href=\"#\"",
          "502:                                                                                                class=\"btn btn-default btn-warning\"><i",
          "503:                                           class=\"fa fa-undo\"></i></a>",
          "504:                               </div>",
          "505:                           {{/if}}",
          "506:                       </div>",
          "507:                   {{else}}",
          "508:                       <div class=\"col-xs-6\">",
          "509:                           {{#if content.maximum_allocation_mb}}",
          "510:                               <p class=\"form-control-static\">{{content.maximum_allocation_mb}} MB</p>",
          "511:                           {{else}}",
          "512:                               <p class=\"form-control-static\">Inherited</p>",
          "513:                           {{/if}}",
          "514:                       </div>",
          "515:                   {{/if}}",
          "516:               </div>",
          "",
          "---------------"
        ]
      }
    }
  ]
}