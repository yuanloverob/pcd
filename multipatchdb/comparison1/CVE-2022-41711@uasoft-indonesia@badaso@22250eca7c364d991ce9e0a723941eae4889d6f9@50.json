{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9b9f66babfc97ee0757eab80e6621db1bbfc7635",
      "candidate_info": {
        "commit_hash": "9b9f66babfc97ee0757eab80e6621db1bbfc7635",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9b9f66babfc97ee0757eab80e6621db1bbfc7635",
        "files": [
          "src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "update unit test and crud management",
        "before_after_code_files": [
          "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoBaseController.php||src/Controllers/BadasoBaseController.php": [
          "File: src/Controllers/BadasoBaseController.php -> src/Controllers/BadasoBaseController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $records = $records->get()->map(function ($record) use ($data_rows) {",
          "223:             foreach ($data_rows as $index => $data_row) {",
          "224:                     if($data_row->type == 'upload_image_multiple'){",
          "226:                         $upload_image_multiples = json_decode($record->{$data_row->field}, true) ;",
          "227:                         if(isset($upload_image_multiples)){",
          "228:                             $upload_image_multiples = collect($upload_image_multiples)->map(function($upload_image_multiple){",
          "",
          "[Removed Lines]",
          "225:                         if(isset($record->{$data_row->field})){",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240:                             $upload_image_multiples = implode(\",\",json_decode($upload_image_multiples));",
          "241:                         }",
          "242:                         $record->{$data_row->field} = $upload_image_multiples ;",
          "244:                     }elseif($data_row->type == 'upload_image'){",
          "246:                         $upload_image = $record->{$data_row->field};",
          "247:                         if(isset($upload_image)){",
          "248:                                 $put_thumbs = \"thumbs\" ;",
          "",
          "[Removed Lines]",
          "243:                     }",
          "245:                         if($record->{$data_row->field}){",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "256:                                 $record->{$data_row->field} = $upload_image;",
          "257:                         }",
          "258:                     }",
          "260:                 }",
          "261:                 return $record ;",
          "262:             });",
          "264:         $data = [];",
          "265:         foreach ($records as $row) {",
          "266:             $data[] = self::getRelationData($data_type, $row);",
          "267:         }",
          "269:         $entities['data'] = $data;",
          "270:         $entities['total'] = count($data);",
          "272:         return $entities;",
          "273:     }",
          "",
          "[Removed Lines]",
          "259:                     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:                     'badaso_type' => 'upload_image_multiple',",
          "223:                     'schema_type' => 'string',",
          "224:                     'details' => json_encode((object) []),",
          "226:                     'example_update' => [",
          "227:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "228:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "",
          "[Removed Lines]",
          "225:                     'example' => \"['https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png','https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png']\",",
          "",
          "[Added Lines]",
          "225:                     'example' => [",
          "226:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "227:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "228:                     ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "531:             $request_body = $data_table_crud_management_log['request_body'];",
          "532:             $table = $request_body['name'];",
          "535:                 'table' => $table,",
          "536:             ]);",
          "537:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "534:              $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "[Added Lines]",
          "537:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "674:     {",
          "675:         $data_add_entities = CallHelperTest::getCache($this->KEY_DATA_ADD_ENTITY);",
          "676:         foreach ($data_add_entities as $table => $data_add_entity) {",
          "678:             $response->assertSuccessful();",
          "679:         }",
          "680:     }",
          "",
          "[Removed Lines]",
          "677:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "[Added Lines]",
          "680:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/all\"));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1a682b8a68046ebfeefbace1e9846355b266667",
      "candidate_info": {
        "commit_hash": "a1a682b8a68046ebfeefbace1e9846355b266667",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/a1a682b8a68046ebfeefbace1e9846355b266667",
        "files": [
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue"
        ],
        "message": "update alert and link docs",
        "before_after_code_files": [
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1043:         crud:",
          "1044:           \"Make sure the table has not been generated with CRUD Management if you want to edit or drop it.\",",
          "1045:         notAllowed: \"You're not allowed to edit.\",",
          "1047:       },",
          "1048:       error: {",
          "1049:         fieldName: \"Field name is required.\",",
          "",
          "[Removed Lines]",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed.\",",
          "",
          "[Added Lines]",
          "1046:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed. {0} to visit docs.\",",
          "1047:         visitDocs: \"Click here\",",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1040:         crud:",
          "1041:           \"Pastikan tabel belum dibuat dengan CRUD Management jika ingin mengedit atau menghapus tabel.\",",
          "1044:       },",
          "1045:       error: {",
          "1046:         fieldName: \"Field name dibutuhkan.\",",
          "",
          "[Removed Lines]",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk.\",",
          "",
          "[Added Lines]",
          "1043:         fieldAttUnsigned: \"Batasan kunci asing salah dibentuk. {0} untuk mengunjungi dokumentasi\",",
          "1044:         fieldAttUnsigned: \"Foreign key constraint is incorrectly formed. {0} to visit docs.\",",
          "1045:         visitDocs: \"Klik Disini\",",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue": [
          "File: src/resources/js/pages/database-management/add.vue -> src/resources/js/pages/database-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "468: </template>",
          "470: <script>",
          "471: import {",
          "472:   required,",
          "473:   requiredIf,",
          "474:   maxLength,",
          "475:   helpers,",
          "476: } from \"vuelidate/lib/validators\";",
          "477: const alphaNumAndUnderscoreValidator = helpers.regex(",
          "478:   \"alphaNumAndDot\",",
          "479:   /^[a-zA-Z\\d_]*$/i",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471: import { Link } from \"@inertiajs/inertia-vue\";",
          "478: import { hrefToUrl } from \"@inertiajs/inertia\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "704:             if (error.errors[\"rows.0.fieldType\"]) {",
          "705:               message = error.errors[\"rows.0.fieldType\"][0];",
          "706:             }",
          "708:               this.$vs.notify({",
          "719:             }",
          "720:           });",
          "721:       } else {",
          "",
          "[Removed Lines]",
          "707:              if(error.errors.code.indexOf(\"HY000\") == 0){",
          "709:               title: this.$t(\"alert.danger\"),",
          "710:               text : this.$t('database.edit.warning.fieldAttUnsigned'),",
          "711:               color: \"danger\",",
          "712:             });",
          "713:             }else{",
          "714:             this.$vs.notify({",
          "715:               title: this.$t(\"alert.danger\"),",
          "716:               text : message ? message : this.$t('database.warning.errorOnRequest'),",
          "717:               color: \"danger\",",
          "718:             });",
          "",
          "[Added Lines]",
          "709:             if (error.errors.code.indexOf(\"HY000\") == 0) {",
          "711:                 title: this.$t(\"alert.danger\"),",
          "714:                 text: this.$t(\"database.edit.warning.fieldAttUnsigned\", {",
          "715:                   0: `<a href=\"https://badaso-docs.uatech.co.id/core-concept/database-management#create-relationship-table\" target=\"_blank\"><b>${this.$t(",
          "716:                     \"database.edit.warning.visitDocs\"",
          "717:                   )}<b></a>`,",
          "718:                 }),",
          "719:                 color: \"danger\",",
          "720:               });",
          "721:             } else {",
          "722:               this.$vs.notify({",
          "723:                 title: this.$t(\"alert.danger\"),",
          "724:                 text: message",
          "725:                   ? message",
          "726:                   : this.$t(\"database.warning.errorOnRequest\"),",
          "727:                 color: \"danger\",",
          "728:               });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6a96eb22ed4aea3f4f105ef3d79436d3ad1871c",
      "candidate_info": {
        "commit_hash": "c6a96eb22ed4aea3f4f105ef3d79436d3ad1871c",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/c6a96eb22ed4aea3f4f105ef3d79436d3ad1871c",
        "files": [
          "src/Controllers/BadasoDatabaseController.php",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/crud-management/add.vue",
          "src/resources/js/pages/database-management/add.vue",
          "src/resources/js/pages/database-management/browse.vue",
          "src/resources/js/pages/database-management/edit.vue",
          "src/resources/js/pages/home.vue"
        ],
        "message": "bugfix [v2] update validation and pop up",
        "before_after_code_files": [
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/crud-management/add.vue||src/resources/js/pages/crud-management/add.vue",
          "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue",
          "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue",
          "src/resources/js/pages/database-management/edit.vue||src/resources/js/pages/database-management/edit.vue",
          "src/resources/js/pages/home.vue||src/resources/js/pages/home.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:                         $mysql_data_type = [",
          "52:                             'tinyint', 'smallint', 'mediumint', 'int', 'integer', 'bigint', 'decimal', 'float', 'double', 'bit', 'char', 'varchar', 'binary', 'varbinary', 'tinyblob', 'blob', 'mediumblob', 'longblob', 'tinytext', 'text', 'mediumtext', 'longtext', 'enum', 'set', 'date', 'time', 'datetime', 'timestamp', 'year', 'geometry', 'point', 'linestring', 'polygon', 'geometrycollection', 'multilinestring', 'multipoint', 'multipolygon', 'json', 'boolean',",
          "53:                         ];",
          "55:                         foreach ($request_data as $key => $value) {",
          "56:                             if (! in_array($value['field_type'], $mysql_data_type)) {",
          "58:                                 $fail(__('badaso::validation.database.wrong_type_data'));",
          "59:                             }",
          "60:                         }",
          "",
          "[Removed Lines]",
          "54:                         $cek = [];",
          "57:                                 $cek[] = $value['field_type'];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "273:     },",
          "274:     warning: {",
          "275:       notAllowed: \"Anda tidak diizinkan untuk mengakses CRUD.\",",
          "277:     },",
          "278:     header: {",
          "279:       table: \"Tabel\",",
          "",
          "[Removed Lines]",
          "276:       idNotAllowed: \"Jangan ganti nama 'id' table dengan apapun\",",
          "",
          "[Added Lines]",
          "276:       idNotAllowed: \"Jangan ganti nama 'id' tabel dengan apapun\",",
          "",
          "---------------"
        ],
        "src/resources/js/pages/crud-management/add.vue||src/resources/js/pages/crud-management/add.vue": [
          "File: src/resources/js/pages/crud-management/add.vue -> src/resources/js/pages/crud-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "986:           this.$closeLoader();",
          "987:           this.$vs.notify({",
          "988:             title: this.$t(\"alert.danger\"),",
          "990:             color: \"danger\",",
          "991:           });",
          "992:         });",
          "",
          "[Removed Lines]",
          "989:             text: error.message,",
          "",
          "[Added Lines]",
          "989:             text : error.message,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1003:           this.$closeLoader();",
          "1004:           this.$vs.notify({",
          "1005:             title: this.$t(\"alert.danger\"),",
          "1007:             color: \"danger\",",
          "1008:           });",
          "1009:         });",
          "",
          "[Removed Lines]",
          "1006:             text: error.message,",
          "",
          "[Added Lines]",
          "1006:             text : error.message,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1022:           this.$closeLoader();",
          "1023:           this.$vs.notify({",
          "1024:             title: this.$t(\"alert.danger\"),",
          "1026:             color: \"danger\",",
          "1027:           });",
          "1028:         });",
          "",
          "[Removed Lines]",
          "1025:             text: error.message,",
          "",
          "[Added Lines]",
          "1025:             text : error.message,",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/add.vue||src/resources/js/pages/database-management/add.vue": [
          "File: src/resources/js/pages/database-management/add.vue -> src/resources/js/pages/database-management/add.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:             </vs-col>",
          "22:             <vs-col vs-lg=\"12\">",
          "23:               <div v-if=\"$v.databaseData.table.$dirty\">",
          "25:                   {{ $t(\"database.add.row.field.tableName\") }}",
          "26:                 </i18n>",
          "29:                   {{ $t(\"database.add.row.field.tableName\") }}",
          "30:                 </i18n>",
          "33:                   <template v-slot:field>",
          "34:                     {{ $t(\"database.add.row.field.tableName\") }}",
          "35:                   </template>",
          "",
          "[Removed Lines]",
          "24:                 <i18n path=\"vuelidate.required\" class=\"is-error\" v-if=\"!$v.databaseData.table.required\" >",
          "28:                 <i18n path=\"vuelidate.alphaNumAndUnderscoreValidator\" class=\"is-error\" v-if=\"!$v.databaseData.table.alphaNumAndUnderscoreValidator\" >",
          "32:                 <i18n path=\"vuelidate.maxLength\" class=\"is-error\" v-if=\"!$v.databaseData.table.maxLength\" >",
          "",
          "[Added Lines]",
          "24:                 <i18n",
          "25:                   path=\"vuelidate.required\"",
          "26:                   class=\"is-error\"",
          "27:                   v-if=\"!$v.databaseData.table.required\"",
          "28:                 >",
          "32:                 <i18n",
          "33:                   path=\"vuelidate.alphaNumAndUnderscoreValidator\"",
          "34:                   class=\"is-error\"",
          "35:                   v-if=\"!$v.databaseData.table.alphaNumAndUnderscoreValidator\"",
          "36:                 >",
          "40:                 <i18n",
          "41:                   path=\"vuelidate.maxLength\"",
          "42:                   class=\"is-error\"",
          "43:                   v-if=\"!$v.databaseData.table.maxLength\"",
          "44:                 >",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:                       </vs-td>",
          "136:                       <vs-td :data=\"tr.fieldNull\">",
          "138:                       </vs-td>",
          "140:                       <vs-td :data=\"tr.fieldAttribute\">",
          "142:                       </vs-td>",
          "144:                       <vs-td :data=\"tr.fieldIncrement\">",
          "146:                       </vs-td>",
          "148:                       <vs-td :data=\"tr.fieldIndex\">",
          "",
          "[Removed Lines]",
          "137:                         <vs-checkbox v-model=\"tr.fieldNull\" :disabled=\"tr.undeletable\"></vs-checkbox>",
          "141:                         <vs-checkbox v-model=\"tr.fieldAttribute\" :disabled=\"tr.undeletable\"></vs-checkbox>",
          "145:                         <vs-checkbox v-model=\"tr.fieldIncrement\" :disabled=\"tr.undeletable\"></vs-checkbox>",
          "",
          "[Added Lines]",
          "149:                         <vs-checkbox",
          "150:                           v-model=\"tr.fieldNull\"",
          "151:                           :disabled=\"tr.undeletable\"",
          "152:                         ></vs-checkbox>",
          "156:                         <vs-checkbox",
          "157:                           v-model=\"tr.fieldAttribute\"",
          "158:                           :disabled=\"tr.undeletable\"",
          "159:                         ></vs-checkbox>",
          "163:                         <vs-checkbox",
          "164:                           v-model=\"tr.fieldIncrement\"",
          "165:                           :disabled=\"tr.undeletable\"",
          "166:                         ></vs-checkbox>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:                     <!-- VALIDATION MESSAGE SECTION -->",
          "195:                     <vs-tr :key=\"'validation-' + indextr\">",
          "197:                       <!-- FIELD NAME -->",
          "198:                       <vs-td>",
          "199:                         <!-- required -->",
          "201:                           {{ $t(\"database.add.row.field.fieldName\") }}",
          "202:                         </i18n>",
          "204:                         <!-- maxLength -->",
          "206:                           <template v-slot:field>",
          "207:                             {{ $t(\"database.add.row.field.fieldName\") }}",
          "208:                           </template>",
          "",
          "[Removed Lines]",
          "200:                         <i18n path=\"vuelidate.required\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldName.required\" >",
          "205:                         <i18n path=\"vuelidate.maxLength\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldName.maxLength\" >",
          "",
          "[Added Lines]",
          "220:                         <i18n",
          "221:                           path=\"vuelidate.required\"",
          "222:                           class=\"is-error\"",
          "223:                           v-if=\"",
          "224:                             !$v.databaseData.rows.$each[indextr].fieldName",
          "225:                               .required",
          "226:                           \"",
          "227:                         >",
          "232:                         <i18n",
          "233:                           path=\"vuelidate.maxLength\"",
          "234:                           class=\"is-error\"",
          "235:                           v-if=\"",
          "236:                             !$v.databaseData.rows.$each[indextr].fieldName",
          "237:                               .maxLength",
          "238:                           \"",
          "239:                         >",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:                         </i18n>",
          "214:                         <!-- alphaNumAndUnderscoreValidator -->",
          "216:                           {{ $t(\"database.add.row.field.fieldName\") }}",
          "217:                         </i18n>",
          "219:                         <!-- unique -->",
          "221:                           {{ $t(\"database.add.row.field.fieldName\") }}",
          "222:                         </i18n>",
          "223:                       </vs-td>",
          "",
          "[Removed Lines]",
          "215:                         <i18n path=\"vuelidate.alphaNumAndUnderscoreValidator\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldName.alphaNumAndUnderscoreValidator\" >",
          "220:                         <i18n path=\"vuelidate.unique\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldName.unique\" >",
          "",
          "[Added Lines]",
          "249:                         <i18n",
          "250:                           path=\"vuelidate.alphaNumAndUnderscoreValidator\"",
          "251:                           class=\"is-error\"",
          "252:                           v-if=\"",
          "253:                             !$v.databaseData.rows.$each[indextr].fieldName",
          "254:                               .alphaNumAndUnderscoreValidator",
          "255:                           \"",
          "256:                         >",
          "261:                         <i18n",
          "262:                           path=\"vuelidate.unique\"",
          "263:                           class=\"is-error\"",
          "264:                           v-if=\"",
          "265:                             !$v.databaseData.rows.$each[indextr].fieldName",
          "266:                               .unique",
          "267:                           \"",
          "268:                         >",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "225:                       <!-- FIELD TYPE -->",
          "226:                       <vs-td>",
          "227:                         <!-- required -->",
          "229:                           {{ $t(\"database.add.row.field.fieldType\") }}",
          "230:                         </i18n>",
          "231:                       </vs-td>",
          "",
          "[Removed Lines]",
          "228:                         <i18n path=\"vuelidate.required\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldType.required\" >",
          "",
          "[Added Lines]",
          "276:                         <i18n",
          "277:                           path=\"vuelidate.required\"",
          "278:                           class=\"is-error\"",
          "279:                           v-if=\"",
          "280:                             !$v.databaseData.rows.$each[indextr].fieldType",
          "281:                               .required",
          "282:                           \"",
          "283:                         >",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "233:                       <!-- FIELD LENGTH -->",
          "234:                       <vs-td>",
          "235:                         <!-- requiredIf -->",
          "237:                           {{ $t(\"database.add.row.field.fieldLength\") }}",
          "238:                         </i18n>",
          "239:                       </vs-td>",
          "",
          "[Removed Lines]",
          "236:                         <i18n path=\"vuelidate.required\" class=\"is-error\" v-if=\"!$v.databaseData.rows.$each[indextr].fieldLength.required\" >",
          "",
          "[Added Lines]",
          "291:                         <i18n",
          "292:                           path=\"vuelidate.required\"",
          "293:                           class=\"is-error\"",
          "294:                           v-if=\"",
          "295:                             !$v.databaseData.rows.$each[indextr].fieldLength",
          "296:                               .required",
          "297:                           \"",
          "298:                         >",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "241:                   </template>",
          "242:                 </template>",
          "243:               </vs-table>",
          "246:                   <vs-col vs-w=\"12\">",
          "247:                     <h3>Source Table</h3>",
          "248:                   </vs-col>",
          "249:                   <vs-col vs-w=\"12\">",
          "251:                   </vs-col>",
          "252:                   <vs-col vs-w=\"12\">",
          "253:                     <h3>Target Table</h3>",
          "254:                   </vs-col>",
          "255:                   <vs-col vs-w=\"12\">",
          "258:                     </vs-select>",
          "259:                   </vs-col>",
          "260:                   <vs-col vs-w=\"12\">",
          "263:                     </vs-select>",
          "264:                   </vs-col>",
          "265:                   <vs-col vs-w=\"12\">",
          "266:                     <h3>Type</h3>",
          "267:                   </vs-col>",
          "268:                   <vs-col vs-w=\"12\">",
          "271:                     </vs-select>",
          "272:                   </vs-col>",
          "273:                   <vs-col vs-w=\"12\">",
          "276:                     </vs-select>",
          "277:                   </vs-col>",
          "278:                 </vs-row>",
          "",
          "[Removed Lines]",
          "244:               <vs-prompt type=\"confirm\" @accept=\"setRelation\" @cancel=\"cancelRelationDialog\" :is-valid=\"!$v.databaseData.relations.$each.$invalid\" :active.sync=\"relationDialog\" title=\"Relationship\" class=\"database-management__relationship-prompt\">",
          "245:                 <vs-row vs-type=\"grid\" class=\"database-management__relationship-dialog\">",
          "250:                     <vs-input v-if=\"selectedField\" disabled label=\"Field\" placeholder=\"Field\" v-model=\"databaseData.relations[selectedField].sourceField\"/>",
          "256:                     <vs-select label=\"Table\" v-if=\"selectedField\" @change=\"fetchTableFields\" width=\"100%\" v-model=\"databaseData.relations[selectedField].targetTable\">",
          "257:                       <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.value\" v-for=\"item,index in tables\" />",
          "261:                     <vs-select label=\"Field\" v-if=\"selectedField\" :disabled=\"fields.length == 0\" width=\"100%\" v-model=\"databaseData.relations[selectedField].targetField\">",
          "262:                       <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.value\" v-for=\"item,index in fields\" />",
          "269:                     <vs-select label=\"On Delete\" v-if=\"selectedField\" width=\"100%\" v-model=\"databaseData.relations[selectedField].onDelete\">",
          "270:                       <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.label\" v-for=\"item,index in relationType\" />",
          "274:                     <vs-select label=\"On Update\" v-if=\"selectedField\" width=\"100%\" v-model=\"databaseData.relations[selectedField].onUpdate\">",
          "275:                       <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.label\" v-for=\"item,index in relationType\" />",
          "",
          "[Added Lines]",
          "306:               <vs-prompt",
          "307:                 type=\"confirm\"",
          "308:                 @accept=\"setRelation\"",
          "309:                 @cancel=\"cancelRelationDialog\"",
          "310:                 :is-valid=\"!$v.databaseData.relations.$each.$invalid\"",
          "311:                 :active.sync=\"relationDialog\"",
          "312:                 title=\"Relationship\"",
          "313:                 class=\"database-management__relationship-prompt\"",
          "314:               >",
          "315:                 <vs-row",
          "316:                   vs-type=\"grid\"",
          "317:                   class=\"database-management__relationship-dialog\"",
          "318:                 >",
          "323:                     <vs-input",
          "324:                       v-if=\"selectedField\"",
          "325:                       disabled",
          "326:                       label=\"Field\"",
          "327:                       placeholder=\"Field\"",
          "328:                       v-model=\"",
          "329:                         databaseData.relations[selectedField].sourceField",
          "330:                       \"",
          "331:                     />",
          "337:                     <vs-select",
          "338:                       label=\"Table\"",
          "339:                       v-if=\"selectedField\"",
          "340:                       @change=\"fetchTableFields\"",
          "341:                       width=\"100%\"",
          "342:                       v-model=\"",
          "343:                         databaseData.relations[selectedField].targetTable",
          "344:                       \"",
          "345:                     >",
          "346:                       <vs-select-item",
          "347:                         :key=\"index\"",
          "348:                         :value=\"item.value\"",
          "349:                         :text=\"item.value\"",
          "350:                         v-for=\"(item, index) in tables\"",
          "351:                       />",
          "355:                     <vs-select",
          "356:                       label=\"Field\"",
          "357:                       v-if=\"selectedField\"",
          "358:                       :disabled=\"fields.length == 0\"",
          "359:                       width=\"100%\"",
          "360:                       v-model=\"",
          "361:                         databaseData.relations[selectedField].targetField",
          "362:                       \"",
          "363:                     >",
          "364:                       <vs-select-item",
          "365:                         :key=\"index\"",
          "366:                         :value=\"item.value\"",
          "367:                         :text=\"item.value\"",
          "368:                         v-for=\"(item, index) in fields\"",
          "369:                       />",
          "376:                     <vs-select",
          "377:                       label=\"On Delete\"",
          "378:                       v-if=\"selectedField\"",
          "379:                       width=\"100%\"",
          "380:                       v-model=\"databaseData.relations[selectedField].onDelete\"",
          "381:                     >",
          "382:                       <vs-select-item",
          "383:                         :key=\"index\"",
          "384:                         :value=\"item.value\"",
          "385:                         :text=\"item.label\"",
          "386:                         v-for=\"(item, index) in relationType\"",
          "387:                       />",
          "391:                     <vs-select",
          "392:                       label=\"On Update\"",
          "393:                       v-if=\"selectedField\"",
          "394:                       width=\"100%\"",
          "395:                       v-model=\"databaseData.relations[selectedField].onUpdate\"",
          "396:                     >",
          "397:                       <vs-select-item",
          "398:                         :key=\"index\"",
          "399:                         :value=\"item.value\"",
          "400:                         :text=\"item.label\"",
          "401:                         v-for=\"(item, index) in relationType\"",
          "402:                       />",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "290:               </vs-button>",
          "292:               <!-- TODO for future development -->",
          "294:                 <vs-icon icon=\"add\"></vs-icon>",
          "295:                 Add soft deletes",
          "296:               </vs-button>",
          "",
          "[Removed Lines]",
          "293:               <vs-button type=\"relief\" color=\"primary\" @click=\"addSoftDeletes()\" >",
          "",
          "[Added Lines]",
          "420:               <vs-button",
          "421:                 type=\"relief\"",
          "422:                 color=\"primary\"",
          "423:                 @click=\"addSoftDeletes()\"",
          "424:               >",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "337: </template>",
          "339: <script>",
          "341: const alphaNumAndUnderscoreValidator = helpers.regex(",
          "342:   \"alphaNumAndDot\",",
          "343:   /^[a-zA-Z\\d_]*$/i",
          "",
          "[Removed Lines]",
          "340: import { required, requiredIf, maxLength, helpers } from \"vuelidate/lib/validators\";",
          "",
          "[Added Lines]",
          "471: import {",
          "472:   required,",
          "473:   requiredIf,",
          "474:   maxLength,",
          "475:   helpers,",
          "476: } from \"vuelidate/lib/validators\";",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "346: const unique = (group, key) => {",
          "347:   return (value) => {",
          "350:     const found = group.filter((item) => {",
          "351:       if (key) {",
          "",
          "[Removed Lines]",
          "348:     if (value == '') return true",
          "",
          "[Added Lines]",
          "484:     if (value == \"\") return true;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "365:     databaseData: {",
          "366:       table: \"\",",
          "367:       rows: [],",
          "369:     },",
          "370:     fieldTypeList: [],",
          "371:     relationDialog: false,",
          "372:     tables: [],",
          "373:     fields: [],",
          "375:   }),",
          "376:   validations() {",
          "377:     return {",
          "",
          "[Removed Lines]",
          "368:       relations: {}",
          "374:     selectedField: \"\"",
          "",
          "[Added Lines]",
          "504:       relations: {},",
          "510:     selectedField: \"\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "379:         relations: {",
          "380:           $each: {",
          "381:             sourceField: {",
          "383:             },",
          "384:             targetTable: {",
          "386:             },",
          "387:             targetField: {",
          "389:             },",
          "391:         },",
          "392:         table: {",
          "393:           required,",
          "",
          "[Removed Lines]",
          "382:               required",
          "385:               required",
          "388:               required",
          "390:           }",
          "",
          "[Added Lines]",
          "518:               required,",
          "521:               required,",
          "524:               required,",
          "526:           },",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "407:               required,",
          "408:             },",
          "409:             fieldLength: {",
          "413:             },",
          "414:           },",
          "415:         },",
          "",
          "[Removed Lines]",
          "410:               required: requiredIf (function (value) {",
          "411:                 return value.fieldType == \"double\" || value.fieldType == \"decimal\" || value.fieldType == \"float\" || value.fieldType == \"varchar\" || value.fieldType == \"char\" || value.fieldType == \"set\" || value.fieldType == \"enum\"",
          "412:               })",
          "",
          "[Added Lines]",
          "546:               required: requiredIf(function (value) {",
          "547:                 return (",
          "548:                   value.fieldType == \"double\" ||",
          "549:                   value.fieldType == \"decimal\" ||",
          "550:                   value.fieldType == \"float\" ||",
          "551:                   value.fieldType == \"varchar\" ||",
          "552:                   value.fieldType == \"char\" ||",
          "553:                   value.fieldType == \"set\" ||",
          "554:                   value.fieldType == \"enum\"",
          "555:                 );",
          "556:               }),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "424:     },",
          "425:     relationType() {",
          "426:       return this.$databaseHelper.getForeignConstraint();",
          "428:   },",
          "429:   mounted() {",
          "430:     this.getDbmsFieldType();",
          "",
          "[Removed Lines]",
          "427:     }",
          "",
          "[Added Lines]",
          "571:     },",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "433:   methods: {",
          "434:     renameForeignkey(item) {",
          "435:       if (this.databaseData.relations[item.id]) {",
          "438:         if (newVal !== oldVal) {",
          "440:         }",
          "441:       }",
          "442:     },",
          "443:     setFieldIndex(item) {",
          "445:         this.$set(this.databaseData.relations, item.id, {",
          "446:           sourceField: item.fieldName,",
          "447:           targetTable: \"\",",
          "448:           targetField: \"\",",
          "449:           onDelete: null,",
          "450:           onUpdate: null,",
          "452:       } else {",
          "454:       }",
          "455:     },",
          "456:     setRelation() {",
          "457:       this.$v.databaseData.relations.$touch();",
          "458:       if (!this.$v.databaseData.relations.$invalid) {",
          "460:       }",
          "461:     },",
          "462:     fetchTableFields() {",
          "",
          "[Removed Lines]",
          "436:         let newVal = item.fieldName",
          "437:         let oldVal = this.databaseData.relations[item.id].sourceField || null",
          "439:           this.databaseData.relations[item.id].sourceField = newVal",
          "444:       if (item.fieldIndex == 'foreign') {",
          "451:         })",
          "453:         this.$delete(this.databaseData.relations, item.id)",
          "459:         this.relationDialog = false",
          "",
          "[Added Lines]",
          "580:         let newVal = item.fieldName;",
          "581:         let oldVal = this.databaseData.relations[item.id].sourceField || null;",
          "583:           this.databaseData.relations[item.id].sourceField = newVal;",
          "588:       if (item.fieldIndex == \"foreign\") {",
          "595:         });",
          "597:         this.$delete(this.databaseData.relations, item.id);",
          "603:         this.relationDialog = false;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "479:         });",
          "480:     },",
          "481:     openRelationDialog(item) {",
          "485:     },",
          "486:     cancelRelationDialog() {",
          "487:       this.$v.databaseData.relations.$touch();",
          "488:       if (this.$v.databaseData.relations.$invalid) {",
          "494:       }",
          "495:     },",
          "496:     getTableList() {",
          "",
          "[Removed Lines]",
          "482:       this.selectedField = item.id",
          "483:       this.relationDialog = true",
          "484:       this.getTableList()",
          "489:         this.relationDialog = false",
          "490:         this.databaseData.relations[this.selectedField].targetTable = \"\"",
          "491:         this.databaseData.relations[this.selectedField].targetField = \"\"",
          "492:         this.databaseData.relations[this.selectedField].onDelete = \"\"",
          "493:         this.databaseData.relations[this.selectedField].onUpdate = \"\"",
          "",
          "[Added Lines]",
          "626:       this.selectedField = item.id;",
          "627:       this.relationDialog = true;",
          "628:       this.getTableList();",
          "633:         this.relationDialog = false;",
          "634:         this.databaseData.relations[this.selectedField].targetTable = \"\";",
          "635:         this.databaseData.relations[this.selectedField].targetField = \"\";",
          "636:         this.databaseData.relations[this.selectedField].onDelete = \"\";",
          "637:         this.databaseData.relations[this.selectedField].onUpdate = \"\";",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "499:         .browse()",
          "500:         .then((response) => {",
          "501:           this.$closeLoader();",
          "503:             return {",
          "506:           });",
          "507:         })",
          "508:         .catch((error) => {",
          "",
          "[Removed Lines]",
          "502:           this.tables = response.data.tablesWithCrudData.map(table => {",
          "504:               value: table.tableName",
          "505:             }",
          "",
          "[Added Lines]",
          "646:           this.tables = response.data.tablesWithCrudData.map((table) => {",
          "648:               value: table.tableName,",
          "649:             };",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "583:       }",
          "584:     },",
          "585:     addField() {",
          "587:       this.databaseData.rows.splice(index, 0, {",
          "588:         id: this.$helper.uuid(),",
          "589:         fieldName: \"\",",
          "",
          "[Removed Lines]",
          "586:       let index = this.databaseData.rows.map(row => row.indexes).indexOf(true)",
          "",
          "[Added Lines]",
          "730:       let index = this.databaseData.rows",
          "731:         .map((row) => row.indexes)",
          "732:         .indexOf(true);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "594:         fieldIncrement: false,",
          "595:         fieldIndex: null,",
          "596:         fieldDefault: \"\",",
          "598:     },",
          "600:     findFieldOnRows(fieldName) {",
          "",
          "[Removed Lines]",
          "597:       })",
          "",
          "[Added Lines]",
          "743:       });",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "640:         text: this.$t(\"action.delete.text\"),",
          "641:         accept: () => {",
          "642:           this.databaseData.rows.splice(index, 1);",
          "644:         },",
          "645:         acceptText: this.$t(\"action.delete.accept\"),",
          "646:         cancelText: this.$t(\"action.delete.cancel\"),",
          "",
          "[Removed Lines]",
          "643:           this.$delete(this.databaseData.relations, item.fieldName)",
          "",
          "[Added Lines]",
          "789:           this.$delete(this.databaseData.relations, item.fieldName);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "648:     },",
          "650:     insertIdToRows() {",
          "684:     },",
          "685:   },",
          "686: };",
          "",
          "[Removed Lines]",
          "651:       this.databaseData.rows.push({",
          "652:         id: \"id\",",
          "653:         fieldName: \"id\",",
          "654:         fieldType: \"bigint\",",
          "655:         fieldLength: null,",
          "656:         fieldNull: false,",
          "657:         fieldAttribute: true,",
          "658:         fieldIncrement: true,",
          "659:         fieldIndex: \"primary\",",
          "660:         fieldDefault: null,",
          "661:         undeletable: true",
          "662:       }, {",
          "663:         fieldName: \"created_at\",",
          "664:         fieldType: \"timestamp\",",
          "665:         fieldLength: null,",
          "666:         fieldNull: true,",
          "667:         fieldAttribute: false,",
          "668:         fieldIncrement: false,",
          "669:         fieldIndex: null,",
          "670:         fieldDefault: null,",
          "671:         undeletable: true,",
          "672:         indexes:true",
          "673:       }, {",
          "674:         fieldName: \"updated_at\",",
          "675:         fieldType: \"timestamp\",",
          "676:         fieldLength: null,",
          "677:         fieldNull: true,",
          "678:         fieldAttribute: false,",
          "679:         fieldIncrement: false,",
          "680:         fieldIndex: null,",
          "681:         fieldDefault: null,",
          "682:         undeletable: true",
          "683:       });",
          "",
          "[Added Lines]",
          "797:       this.databaseData.rows.push(",
          "798:         {",
          "799:           id: \"id\",",
          "800:           fieldName: \"id\",",
          "801:           fieldType: \"bigint\",",
          "802:           fieldLength: null,",
          "803:           fieldNull: false,",
          "804:           fieldAttribute: true,",
          "805:           fieldIncrement: true,",
          "806:           fieldIndex: \"primary\",",
          "807:           fieldDefault: null,",
          "808:           undeletable: true,",
          "809:         },",
          "810:         {",
          "811:           fieldName: \"created_at\",",
          "812:           fieldType: \"timestamp\",",
          "813:           fieldLength: null,",
          "814:           fieldNull: true,",
          "815:           fieldAttribute: false,",
          "816:           fieldIncrement: false,",
          "817:           fieldIndex: null,",
          "818:           fieldDefault: null,",
          "819:           undeletable: true,",
          "820:           indexes: true,",
          "821:         },",
          "822:         {",
          "823:           fieldName: \"updated_at\",",
          "824:           fieldType: \"timestamp\",",
          "825:           fieldLength: null,",
          "826:           fieldNull: true,",
          "827:           fieldAttribute: false,",
          "828:           fieldIncrement: false,",
          "829:           fieldIndex: null,",
          "830:           fieldDefault: null,",
          "831:           undeletable: true,",
          "832:         }",
          "833:       );",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/browse.vue||src/resources/js/pages/database-management/browse.vue": [
          "File: src/resources/js/pages/database-management/browse.vue -> src/resources/js/pages/database-management/browse.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:         </vs-col>",
          "128:       </vs-row>",
          "129:     </vs-popup>",
          "131:       :active.sync=\"errorDatabase\"",
          "132:       :title=\"$t('database.browse.fieldNotSupport.title')\"",
          "133:       color=\"success\"",
          "",
          "[Removed Lines]",
          "130: <vs-popup",
          "",
          "[Added Lines]",
          "130:     <vs-popup",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:       <vs-row>",
          "137:         <vs-col>",
          "138:           <p>",
          "140:           </p>",
          "142:           <p>",
          "144:           </p>",
          "145:           <p>",
          "148:         </vs-col>",
          "149:       </vs-row>",
          "150:       <vs-row vs-align=\"center\" class=\"database-management__popup-footer\">",
          "151:         <vs-col vs-lg=\"12\" vs-sm=\"12\" vs-align=\"center\">",
          "152:           <vs-row vs-align=\"center\">",
          "169:             </div>",
          "170:           </vs-row>",
          "171:         </vs-col>",
          "",
          "[Removed Lines]",
          "139:             {{ $t('database.browse.fieldNotSupport.text') }}",
          "141:           <br/>",
          "143:             {{ $t('database.browse.fieldNotSupport.tableList') }}",
          "146:              {{errorTable}}",
          "147:           </P >",
          "153:             <vs-spacer></vs-spacer>",
          "154:          <div class=\"database-management__popup-sync\">",
          "155:            <vs-button",
          "156:               color=\"warning\"",
          "157:               type=\"relief\"",
          "158:               @click=\"goBack()\"",
          "159:             >",
          "160:               {{ $t(\"database.browse.goBackButton\") }}",
          "161:             </vs-button>",
          "162:             <vs-button",
          "163:               color=\"success\"",
          "164:               type=\"relief\"",
          "165:               href= \"https://badaso-docs.uatech.co.id/crud-generator/datatype\"",
          "166:             >",
          "167:               {{ $t(\"database.browse.fieldNotSupport.button.visitDocs\") }}",
          "168:             </vs-button>",
          "",
          "[Added Lines]",
          "139:             {{ $t(\"database.browse.fieldNotSupport.text\") }}",
          "141:           <br />",
          "143:             {{ $t(\"database.browse.fieldNotSupport.tableList\") }}",
          "146:             {{ errorTable }}",
          "147:           </p>",
          "153:             <vs-spacer></vs-spacer>",
          "154:             <div class=\"database-management__popup-sync\">",
          "155:               <vs-button color=\"warning\" type=\"relief\" @click=\"goBack()\">",
          "156:                 {{ $t(\"database.browse.goBackButton\") }}",
          "157:               </vs-button>",
          "158:               <vs-button",
          "159:                 color=\"success\"",
          "160:                 type=\"relief\"",
          "161:                 href=\"https://badaso-docs.uatech.co.id/crud-generator/datatype\"",
          "162:               >",
          "163:                 {{ $t(\"database.browse.fieldNotSupport.button.visitDocs\") }}",
          "164:               </vs-button>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:             <h3>{{ $t(\"database.browse.title\") }}</h3>",
          "179:           </div>",
          "180:           <badaso-alert-block>",
          "183:           </badaso-alert-block>",
          "184:           <div>",
          "185:             <badaso-table",
          "",
          "[Removed Lines]",
          "181:             <template slot=\"title\">{{ $t('database.edit.warning.title') }}</template>",
          "182:             <template slot=\"desc\">{{ $t('database.edit.warning.crud') }}</template>",
          "",
          "[Added Lines]",
          "177:             <template slot=\"title\">{{",
          "178:               $t(\"database.edit.warning.title\")",
          "179:             }}</template>",
          "180:             <template slot=\"desc\">{{",
          "181:               $t(\"database.edit.warning.crud\")",
          "182:             }}</template>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "223:                       <vs-dropdown-menu>",
          "224:                         <badaso-dropdown-item",
          "225:                           icon=\"edit\"",
          "227:                           :to=\"{",
          "228:                             name: 'DatabaseManagementAlter',",
          "229:                             params: { tableName: data[index].tableName },",
          "",
          "[Removed Lines]",
          "226:                           v-if=\"$helper.isAllowed('edit_database') && data[index].isCanEdit\"",
          "",
          "[Added Lines]",
          "226:                           v-if=\"",
          "227:                             $helper.isAllowed('edit_database') &&",
          "228:                             data[index].isCanEdit",
          "229:                           \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "234:                         <badaso-dropdown-item",
          "235:                           icon=\"delete\"",
          "236:                           @click=\"openConfirm(data[index].tableName)\"",
          "238:                         >",
          "239:                           {{ $t(\"database.browse.dropButton\") }}",
          "240:                         </badaso-dropdown-item>",
          "242:                           {{ $t(\"database.browse.warning.empty\") }}",
          "243:                         </badaso-dropdown-item>",
          "244:                       </vs-dropdown-menu>",
          "",
          "[Removed Lines]",
          "237:                           v-if=\"$helper.isAllowed('delete_database') && data[index].isCanDrop\"",
          "241:                         <badaso-dropdown-item v-else >",
          "",
          "[Added Lines]",
          "240:                           v-if=\"",
          "241:                             $helper.isAllowed('delete_database') &&",
          "242:                             data[index].isCanDrop",
          "243:                           \"",
          "247:                         <badaso-dropdown-item v-else>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "286:     isNotMigrated: false,",
          "287:     notMigratedFile: [],",
          "288:     isDeleteFile: false,",
          "291:   }),",
          "292:   validations: {",
          "293:     willRollbackFile: {",
          "",
          "[Removed Lines]",
          "289:     errorDatabase:false,",
          "290:     errorTable:\"\",",
          "",
          "[Added Lines]",
          "295:     errorDatabase: false,",
          "296:     errorTable: \"\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "346:           this.$closeLoader();",
          "347:           this.tables = response.data.tablesWithCrudData;",
          "348:           this.tables.map((value, index) => {",
          "352:         })",
          "353:         .catch((error) => {",
          "354:           this.$closeLoader();",
          "359:             this.$vs.notify({",
          "364:           }",
          "365:         });",
          "366:     },",
          "",
          "[Removed Lines]",
          "349:             this.$set(value, 'isCanEdit', value.crudData == null ? true : false);",
          "350:             this.$set(value, 'isCanDrop', value.crudData == null ? true : false);",
          "351:           })",
          "355:           if(error.message.indexOf(\"Unknown database\") == 0){",
          "356:             this.errorTable = \"- \"+error.errors[2].args[0];",
          "357:             this.errorDatabase = true;",
          "358:           }else{",
          "360:             title: this.$t(\"alert.danger\"),",
          "361:             text: error.message,",
          "362:             color: \"danger\",",
          "363:           });",
          "",
          "[Added Lines]",
          "355:             this.$set(",
          "356:               value,",
          "357:               \"isCanEdit\",",
          "358:               value.crudData == null ? true : false",
          "359:             );",
          "360:             this.$set(",
          "361:               value,",
          "362:               \"isCanDrop\",",
          "363:               value.crudData == null ? true : false",
          "364:             );",
          "365:           });",
          "369:           if (error.message.indexOf(\"Unknown database\") == 0) {",
          "370:             this.errorTable = \"- \" + error.errors[2].args[0];",
          "371:             this.errorDatabase = true;",
          "372:           } else {",
          "374:               title: this.$t(\"alert.danger\"),",
          "375:               text: error.message,",
          "376:               color: \"danger\",",
          "377:             });",
          "",
          "---------------"
        ],
        "src/resources/js/pages/database-management/edit.vue||src/resources/js/pages/database-management/edit.vue": [
          "File: src/resources/js/pages/database-management/edit.vue -> src/resources/js/pages/database-management/edit.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:           this.$closeLoader();",
          "594:           this.$vs.notify({",
          "595:             title: this.$t(\"alert.danger\"),",
          "597:             color: \"danger\",",
          "598:           });",
          "599:         });",
          "",
          "[Removed Lines]",
          "596:             text: error.message,",
          "",
          "[Added Lines]",
          "596:             text : error.message,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607:         .catch((error) => {",
          "608:           this.$vs.notify({",
          "609:             title: this.$t(\"alert.danger\"),",
          "611:             color: \"danger\",",
          "612:           });",
          "613:         });",
          "",
          "[Removed Lines]",
          "610:             text: error.message,",
          "",
          "[Added Lines]",
          "610:             text : error.message,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "698:           this.$closeLoader();",
          "699:           this.$vs.notify({",
          "700:             title: this.$t(\"alert.danger\"),",
          "702:             color: \"danger\",",
          "703:           });",
          "704:         });",
          "",
          "[Removed Lines]",
          "701:             text: error.message,",
          "",
          "[Added Lines]",
          "701:             text : error.message,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "725:             this.$closeLoader();",
          "726:             this.$vs.notify({",
          "727:               title: this.$t(\"alert.success\"),",
          "729:               color: \"success\",",
          "730:             });",
          "731:             this.$store.commit(\"badaso/FETCH_MENU\");",
          "",
          "[Removed Lines]",
          "728:               text: response.message,",
          "",
          "[Added Lines]",
          "728:               text : response.message,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "744:             this.$vs.notify({",
          "745:               title: this.$t(\"alert.danger\"),",
          "747:               color: \"danger\",",
          "748:             });",
          "749:           });",
          "",
          "[Removed Lines]",
          "746:               text: message ? message : this.$t('database.warning.errorOnRequest'),",
          "",
          "[Added Lines]",
          "746:               text : message ? message : this.$t('database.warning.errorOnRequest'),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "751:         if (this.$v.databaseData.fields.modifiedFields.$invalid) {",
          "752:           this.$vs.notify({",
          "753:             title: this.$t(\"alert.danger\"),",
          "755:             color: \"danger\",",
          "756:           });",
          "757:         } else if (this.$v.databaseData.$invalid) {",
          "758:           this.$vs.notify({",
          "759:             title: this.$t(\"alert.danger\"),",
          "761:             color: \"danger\",",
          "762:           });",
          "763:         }",
          "",
          "[Removed Lines]",
          "754:             text: this.$t(\"database.warning.empty\"),",
          "760:             text: this.$t(\"database.warning.invalid\"),",
          "",
          "[Added Lines]",
          "754:             text : this.$t(\"database.warning.empty\"),",
          "760:             text : this.$t(\"database.warning.invalid\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "800:       if (this.findFieldOnRows(\"deleted_at\")) {",
          "801:         this.$vs.notify({",
          "802:           title: this.$t(\"alert.danger\"),",
          "804:           color: \"danger\",",
          "805:         });",
          "806:       } else {",
          "",
          "[Removed Lines]",
          "803:           text: this.$t(\"database.warning.exists\", { 0: \"deleted_at\" }),",
          "",
          "[Added Lines]",
          "803:           text : this.$t(\"database.warning.exists\", { 0: \"deleted_at\" }),",
          "",
          "---------------"
        ],
        "src/resources/js/pages/home.vue||src/resources/js/pages/home.vue": [
          "File: src/resources/js/pages/home.vue -> src/resources/js/pages/home.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     >",
          "9:       <vs-card class=\"widget__content\">",
          "10:         <div class=\"widget__icon-container\">",
          "12:           <h4 class=\"mb-1\">{{ data.value }}</h4>",
          "13:           <span>{{ data.label }}</span>",
          "14:         </div>",
          "16:       </vs-card>",
          "17:     </vs-col>",
          "18:   </vs-row>",
          "",
          "[Removed Lines]",
          "11:           <vs-icon v-if=\"data.icon\" class=\"widget__icon\" :icon=\"data.icon\"></vs-icon>",
          "15:         <vs-progress class=\"widget__progress-bar\" :percent=\"getPercent(data.value, data.max)\" :color=\"getProgressBarColor(data.value, data.max)\">primary</vs-progress>",
          "",
          "[Added Lines]",
          "11:           <vs-icon",
          "12:             v-if=\"data.icon\"",
          "13:             class=\"widget__icon\"",
          "14:             :icon=\"data.icon\"",
          "15:           ></vs-icon>",
          "19:         <vs-progress",
          "20:           class=\"widget__progress-bar\"",
          "21:           :percent=\"getPercent(data.value, data.max)\"",
          "22:           :color=\"getProgressBarColor(data.value, data.max)\"",
          "23:           >primary</vs-progress",
          "24:         >",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:   methods: {",
          "34:     getPercent(value, max = 100) {",
          "35:       let percentage = 100 / max;",
          "37:     },",
          "38:     getProgressBarColor(value, max = 100) {",
          "40:     },",
          "41:     getDashboardData() {",
          "42:       this.$openLoader();",
          "",
          "[Removed Lines]",
          "36:       return value * percentage",
          "39:       return value > max ? 'danger' : 'primary'",
          "",
          "[Added Lines]",
          "45:       return value * percentage;",
          "48:       return value > max ? \"danger\" : \"primary\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:           }",
          "55:         })",
          "56:         .catch((error) => {",
          "58:             this.$closeLoader();",
          "59:             this.$vs.notify({",
          "60:               title: this.$t(\"alert.error\"),",
          "62:               color: \"danger\",",
          "66:             this.$vs.notify({",
          "67:               title: this.$t(\"alert.danger\"),",
          "69:               color: \"danger\",",
          "71:           }",
          "72:         });",
          "73:     },",
          "",
          "[Removed Lines]",
          "57:          if(error.status == 401){",
          "61:               text: error.message,",
          "63:           });",
          "64:           }else{",
          "65:              this.$closeLoader();",
          "68:               text: error.message,",
          "70:           });",
          "",
          "[Added Lines]",
          "66:           if (error.status == 401) {",
          "70:               text : error.message,",
          "72:             });",
          "73:           } else {",
          "74:             this.$closeLoader();",
          "77:               text : error.message,",
          "79:             });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a2b4e1f6b4534efa4c6d7f7e40013df3586ceb0",
      "candidate_info": {
        "commit_hash": "2a2b4e1f6b4534efa4c6d7f7e40013df3586ceb0",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/2a2b4e1f6b4534efa4c6d7f7e40013df3586ceb0",
        "files": [
          ".github/workflows/test.yml",
          "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "configure file test badaso v2.x",
        "before_after_code_files": [
          "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php||src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php||src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php": [
          "File: src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php -> src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:                 $table->boolean('is_expand')->default(true)->after('icon');",
          "22:             }",
          "23:             if (! Schema::hasColumn(config('badaso.database.prefix').'menus', 'order')) {",
          "25:             }",
          "26:         });",
          "27:     }",
          "",
          "[Removed Lines]",
          "24:                 $table->boolean('order')->nullable()->after('icon');",
          "",
          "[Added Lines]",
          "24:                 $table->integer('order')->nullable()->after('icon');",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "414:                 ];",
          "416:                 if ($badaso_type == 'relation') {",
          "423:                     $row['relationType'] = ['belongs_to', 'has_one', 'has_many'][rand(0, 2)];",
          "424:                     $row['relationType'] = true;",
          "",
          "[Removed Lines]",
          "417:                     $destination_field = $const_fields[rand(0, count($const_fields) - 1)];",
          "419:                     if ($destination_field['badaso_type'] == 'relation') {",
          "420:                         $destination_field['badaso_type'] = 'id';",
          "421:                     }",
          "",
          "[Added Lines]",
          "417:                     $destination_field['badaso_type'] = 'id';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "651:         foreach ($data_add_entities as $table => $data_add_entity) {",
          "652:             foreach ($data_add_entity as $index => $entity) {",
          "653:                 $id = $entity['id'];",
          "658:             }",
          "659:         }",
          "660:     }",
          "",
          "[Removed Lines]",
          "654:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/read\"), [",
          "655:                     'id' => $id,",
          "656:                 ]);",
          "657:                 $response->assertSuccessful();",
          "",
          "[Added Lines]",
          "651:                 $table_entity = DB::table($table)->where('id', $id)->first();",
          "652:                 if (isset($table_entity)) {",
          "653:                     $response = CallHelperTest::withAuthorizeBearer($this)",
          "654:                         ->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/read\"), [",
          "655:                             'id' => $id,",
          "656:                         ]);",
          "658:                     $response->assertSuccessful();",
          "659:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "724:             $response->assertSuccessful();",
          "729:         }",
          "730:     }",
          "",
          "[Removed Lines]",
          "727:             $table_row_count = DB::table($table)->whereId('id', $ids)->count();",
          "728:             $this->assertTrue($table_row_count == 0);",
          "",
          "[Added Lines]",
          "729:             $table_row_count = DB::table($table)->whereIn('id', $ids);",
          "730:             if ($table_row_count->count() != 0) {",
          "731:                 $table_row_count = $table_row_count->whereNotNull('deleted_at');",
          "732:                 $this->assertTrue($table_row_count->count() == count($ids));",
          "734:                 $table_row_count->delete();",
          "735:             } else {",
          "736:                 $this->assertTrue($table_row_count->count() == 0);",
          "737:             }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "776:                 use Illuminate\\Database\\Eloquent\\Factories\\HasFactory;",
          "777:                 use Illuminate\\Database\\Eloquent\\Model;",
          "778:                 class {$model_name} extends Model {",
          "780:                     protected \\$table = \"{$table_name}\" ;",
          "781:                 }",
          "782:                 PHP;",
          "",
          "[Removed Lines]",
          "779:                     use HasFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5da1a2af849e7d96d443d889da10f9e474121c33",
      "candidate_info": {
        "commit_hash": "5da1a2af849e7d96d443d889da10f9e474121c33",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/5da1a2af849e7d96d443d889da10f9e474121c33",
        "files": [
          "src/Commands/BadasoSetup.php",
          "src/Config/badaso.php",
          "src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoMaintenanceController.php",
          "src/Middleware/ApiRequest.php",
          "src/Routes/api.php",
          "src/resources/js/api/modules/badaso-auth.js",
          "src/resources/js/components/BadasoSwitch.vue",
          "src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/auth/secret-login.vue",
          "src/resources/js/pages/index.vue",
          "src/resources/js/router/auth/auth-router.js"
        ],
        "message": "front end add conf",
        "before_after_code_files": [
          "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php",
          "src/Config/badaso.php||src/Config/badaso.php",
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php",
          "src/Controllers/BadasoMaintenanceController.php||src/Controllers/BadasoMaintenanceController.php",
          "src/Middleware/ApiRequest.php||src/Middleware/ApiRequest.php",
          "src/Routes/api.php||src/Routes/api.php",
          "src/resources/js/api/modules/badaso-auth.js||src/resources/js/api/modules/badaso-auth.js",
          "src/resources/js/components/BadasoSwitch.vue||src/resources/js/components/BadasoSwitch.vue",
          "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js",
          "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js",
          "src/resources/js/pages/auth/secret-login.vue||src/resources/js/pages/auth/secret-login.vue",
          "src/resources/js/pages/index.vue||src/resources/js/pages/index.vue",
          "src/resources/js/router/auth/auth-router.js||src/resources/js/router/auth/auth-router.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php": [
          "File: src/Commands/BadasoSetup.php -> src/Commands/BadasoSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "258:             'MIX_DEFAULT_MENU' => 'general',",
          "259:             'MIX_BADASO_MENU' => '${MIX_DEFAULT_MENU}',",
          "260:             'MIX_ADMIN_PANEL_ROUTE_PREFIX' => 'badaso-dashboard',",
          "261:             'MIX_API_ROUTE_PREFIX' => 'badaso-api',",
          "262:             'MIX_LOG_VIEWER_ROUTE' => '\"log-viewer\"',",
          "263:             'MIX_FIREBASE_API_KEY' => '',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "261:             \"MIX_BADASO_SECRET_LOGIN_PREFIX\" =>'badaso-secret-login',",
          "",
          "---------------"
        ],
        "src/Config/badaso.php||src/Config/badaso.php": [
          "File: src/Config/badaso.php -> src/Config/badaso.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     'admin_panel_route_prefix' => env('MIX_ADMIN_PANEL_ROUTE_PREFIX', 'badaso-dashboard'),",
          "6:     'default_menu' => env('MIX_DEFAULT_MENU', 'general'),",
          "7:     'api_route_prefix' => env('MIX_API_ROUTE_PREFIX', 'badaso-api'),",
          "8:     'license_key' => env('BADASO_LICENSE_KEY'),",
          "9:     'database' => [",
          "10:         'prefix' => env('BADASO_TABLE_PREFIX', 'badaso_'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:     'secret_login_prefix' => env('MIX_BADASO_SECRET_LOGIN_PREFIX'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:         'web' => [],",
          "25:         'badaso' => [",
          "26:             '/maintenance',",
          "28:         ],",
          "29:         'api' => [",
          "30:             '/v1/configurations/applyable',",
          "31:             '/v1/maintenance',",
          "33:             '/v1/file/*',",
          "34:         ],",
          "35:     ],",
          "",
          "[Removed Lines]",
          "27:             '/login',",
          "32:             '/v1/auth/login',",
          "",
          "[Added Lines]",
          "28:             '/' . env('MIX_BADASO_SECRET_LOGIN_PREFIX')",
          "33:             '/v1/auth/'. env('MIX_BADASO_SECRET_LOGIN_PREFIX'),",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     public function __construct()",
          "34:     {",
          "36:     }",
          "38:     public function login(Request $request)",
          "",
          "[Removed Lines]",
          "35:         $this->middleware(BadasoAuthenticate::class, ['except' => ['login', 'register', 'forgetPassword', 'resetPassword', 'verify', 'reRequestVerification', 'validateTokenForgetPassword']]);",
          "",
          "[Added Lines]",
          "35:         $this->middleware(config('badaso.middleware.authenticate'), ['except' => ['secretLogin', 'login', 'register', 'forgetPassword', 'resetPassword', 'verify', 'reRequestVerification', 'validateTokenForgetPassword']]);",
          "36:     }",
          "38:     public function secretLogin(Request $request)",
          "39:     {",
          "40:         try {",
          "41:             $remember = $request->get('remember', false);",
          "42:             $credentials = [",
          "43:                 'email'    => $request->email,",
          "44:                 'password' => $request->password,",
          "45:             ];",
          "46:             $request->validate([",
          "47:                 'email' => [",
          "48:                     'required',",
          "49:                     function ($attribute, $value, $fail) use ($credentials) {",
          "50:                         if (!$token = Auth::attempt($credentials)) {",
          "51:                             $fail(__('badaso::validation.auth.invalid_credentials'));",
          "52:                         }",
          "53:                     },",
          "54:                 ],",
          "55:                 'password' => ['required'],",
          "56:             ]);",
          "57:             $user = Auth::guard(config('badaso.authenticate.guard'))->user();",
          "60:             $should_verify_email = Config::get('adminPanelVerifyEmail') == '1' ? true : false;",
          "61:             if ($should_verify_email) {",
          "62:                 if (is_null($user->email_verified_at)) {",
          "63:                     $token = rand(111111, 999999);",
          "64:                     $token_lifetime = env('VERIFICATION_TOKEN_LIFETIME', 5);",
          "65:                     $expired_token = date('Y-m-d H:i:s', strtotime(\"+$token_lifetime minutes\", strtotime(date('Y-m-d H:i:s'))));",
          "66:                     $data = [",
          "67:                         'user_id'            => $user->id,",
          "68:                         'verification_token' => $token,",
          "69:                         'expired_at'         => $expired_token,",
          "70:                         'count_incorrect'    => 0,",
          "71:                     ];",
          "73:                     UserVerification::firstOrCreate($data);",
          "75:                     $this->sendVerificationToken(['user' => $user, 'token' => $token]);",
          "77:                     return ApiResponse::success();",
          "78:                 }",
          "79:             }",
          "80:             activity('Authentication')",
          "81:             ->causedBy(auth()->user() ?? null)",
          "82:                 ->withProperties(['attributes' => auth()->user()])",
          "83:                 ->log('Login has been success');",
          "85:             return TokenManagement::fromUser($user)->createToken($remember)->response();",
          "86:         } catch (Exception $e) {",
          "87:             return ApiResponse::failed($e);",
          "88:         }",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoMaintenanceController.php||src/Controllers/BadasoMaintenanceController.php": [
          "File: src/Controllers/BadasoMaintenanceController.php -> src/Controllers/BadasoMaintenanceController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:         $this->app = $app;",
          "44:         $this->excepts = config('badaso.whitelist.badaso');",
          "45:         $this->prefix = config('badaso.admin_panel_route_prefix');",
          "46:     }",
          "48:     public function isMaintenance(Request $request)",
          "49:     {",
          "51:             if ($this->isAdministrator()) {",
          "52:                 return ApiResponse::success(['maintenance' => false]);",
          "53:             }",
          "",
          "[Removed Lines]",
          "50:         if ($this->isUnderMaintenance() || $this->app->isDownForMaintenance()) {",
          "",
          "[Added Lines]",
          "46:         $this->badaso_maintenance = config('badaso.badaso_maintenance');",
          "51:         if ($this->checkMaintenanceConfiguration() || $this->app->isDownForMaintenance()) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:         return false;",
          "81:     }",
          "84:     {",
          "89:                 $configuration_model = ConfigurationRedis::get();",
          "90:                 $maintenance = $configuration_model->where('key', 'maintenance')->firstOrFail();",
          "92:                 return $maintenance->value == '1' ? true : false;",
          "94:                 $maintenance = Configuration::where('key', 'maintenance')->firstOrFail();",
          "96:                 return $maintenance->value == '1' ? true : false;",
          "",
          "[Removed Lines]",
          "83:     private function isUnderMaintenance()",
          "85:         if (env('MIX_BADASO_MAINTENANCE')) {",
          "86:             return true;",
          "87:         } else {",
          "88:             try {",
          "93:             } catch (\\Exception $e) {",
          "",
          "[Added Lines]",
          "84:     private function checkMaintenanceConfiguration()",
          "86:         if(isset($this->badaso_maintenance)){",
          "87:             if($this->badaso_maintenance == true){",
          "88:                 return true;",
          "89:             }else{",
          "90:                 return false;",
          "91:             }",
          "92:         } else{",
          "93:             try{",
          "98:             } catch(Exception $e){",
          "",
          "---------------"
        ],
        "src/Middleware/ApiRequest.php||src/Middleware/ApiRequest.php": [
          "File: src/Middleware/ApiRequest.php -> src/Middleware/ApiRequest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Middleware;",
          "5: use Closure;",
          "6: use Illuminate\\Contracts\\Foundation\\Application;",
          "7: use Uasoft\\Badaso\\Helpers\\ApiResponse;",
          "8: use Uasoft\\Badaso\\Helpers\\CaseConvert;",
          "9: use Uasoft\\Badaso\\Helpers\\HandleFile;",
          "10: use Uasoft\\Badaso\\Models\\Configuration;",
          "11: use Uasoft\\Badaso\\Models\\DataType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use Exception;",
          "11: use Uasoft\\Badaso\\Helpers\\Redis\\ConfigurationRedis;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         $this->app = $app;",
          "45:         $this->except = config('badaso.whitelist');",
          "46:         $this->prefix = config('badaso.api_route_prefix');",
          "47:     }",
          "49:     public function handle($request, Closure $next)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:         $this->badaso_maintenance = config('badaso.badaso_maintenance');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     protected function isUnderMaintenance()",
          "74:     {",
          "78:     }",
          "80:     protected function isAdministrator()",
          "",
          "[Removed Lines]",
          "75:         $maintenance = Configuration::where('key', 'maintenance')->firstOrFail();",
          "77:         return $maintenance->value === '1' ? true : false;",
          "",
          "[Added Lines]",
          "78:         if (isset($this->badaso_maintenance)) {",
          "79:             if ($this->badaso_maintenance == true) {",
          "80:                 return true;",
          "81:             } else {",
          "82:                 return false;",
          "83:             }",
          "84:         } else {",
          "85:             try {",
          "86:                 $configuration_model = ConfigurationRedis::get();",
          "87:                 $maintenance = $configuration_model->where('key', 'maintenance')->firstOrFail();",
          "89:                 return $maintenance->value == '1' ? true : false;",
          "90:             } catch (Exception $e) {",
          "91:                 $maintenance = Configuration::where('key', 'maintenance')->firstOrFail();",
          "93:                 return $maintenance->value == '1' ? true : false;",
          "94:             }",
          "95:         }",
          "",
          "---------------"
        ],
        "src/Routes/api.php||src/Routes/api.php": [
          "File: src/Routes/api.php -> src/Routes/api.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:             Route::post('/refresh-token', 'BadasoAuthController@refreshToken');",
          "37:             Route::post('/verify', 'BadasoAuthController@verify');",
          "38:             Route::post('/re-request-verification', 'BadasoAuthController@reRequestVerification');",
          "39:         });",
          "41:         Route::group(['prefix' => 'auth/user'], function () {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:             Route::post('/'.env('MIX_BADASO_SECRET_LOGIN_PREFIX'), 'BadasoAuthController@secretLogin');",
          "",
          "---------------"
        ],
        "src/resources/js/api/modules/badaso-auth.js||src/resources/js/api/modules/badaso-auth.js": [
          "File: src/resources/js/api/modules/badaso-auth.js -> src/resources/js/api/modules/badaso-auth.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: const apiPrefix = process.env.MIX_API_ROUTE_PREFIX",
          "4:   ? \"/\" + process.env.MIX_API_ROUTE_PREFIX",
          "5:   : \"/badaso-api\";",
          "7: export default {",
          "8:   login(data) {",
          "9:     const ep = apiPrefix + \"/v1/auth/login\";",
          "10:     const response = resource.post(ep, data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: const secretLoginPrefix = process.env.MIX_BADASO_SECRET_LOGIN_PREFIX",
          "7:   ? \"/\" + process.env.MIX_BADASO_SECRET_LOGIN_PREFIX",
          "8:   : \"/badaso-secret-login\";",
          "11:   secretLogin(data) {",
          "12:     const ep = apiPrefix + \"/v1/auth\" + secretLoginPrefix;",
          "13:     const response = resource.post(ep, data);",
          "14:     response.then((res) => {",
          "15:       if (res.data.accessToken) {",
          "16:         const token = res.data.accessToken;",
          "17:         localStorage.setItem(\"token\", token);",
          "18:       }",
          "19:     });",
          "20:     return response;",
          "21:   },",
          "",
          "---------------"
        ],
        "src/resources/js/components/BadasoSwitch.vue||src/resources/js/components/BadasoSwitch.vue": [
          "File: src/resources/js/components/BadasoSwitch.vue -> src/resources/js/components/BadasoSwitch.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "2:   <vs-col :vs-lg=\"size\" vs-xs=\"12\" class=\"badaso-switch__container\">",
          "9:     <div v-if=\"label == 'Maintenance for all pages.' && status === 'true'\">",
          "11:         <span slot=\"on\">{{ onLabel }}</span>",
          "12:         <span slot=\"off\">{{ offLabel }}</span>",
          "13:       </vs-switch>",
          "",
          "[Removed Lines]",
          "3:     <label v-if=\"label != ''\" for=\"\" class=\"badaso-switch__label\"",
          "4:       >{{ label }}",
          "5:       <vs-tooltip :text=\"tooltip\" v-if=\"tooltip\">",
          "6:         <vs-icon icon=\"help_outline\" size=\"16px\" color=\"#A5A5A5\"></vs-icon>",
          "7:       </vs-tooltip>",
          "8:     </label>",
          "10:       <vs-switch :value=\"value\" @change=\"onChange\" :disabled=\"status === 'true'\" @input=\"handleInput($event)\">",
          "",
          "[Added Lines]",
          "3:     <div v-if=\"label == 'Maintenance for all pages.' && status\">",
          "4:       <label v-if=\"label != ''\" for=\"\" class=\"badaso-switch__label\"",
          "5:         >{{ label }} <span style=\"color: red;\">({{ $t(\"site.maintenanceMode\")}} <a href=\"https://badaso-docs.uatech.co.id/getting-started/configuration\">{{ $t(\"database.browse.fieldNotSupport.button.visitDocs\")}}</a>)</span>",
          "6:         <vs-tooltip :text=\"tooltip\" v-if=\"tooltip\">",
          "7:           <vs-icon icon=\"help_outline\" size=\"16px\" color=\"#A5A5A5\"></vs-icon>",
          "8:         </vs-tooltip>",
          "9:       </label>",
          "10:     </div>",
          "11:     <div v-else>",
          "12:       <label v-if=\"label != ''\" for=\"\" class=\"badaso-switch__label\"",
          "13:         >{{ label }}",
          "14:         <vs-tooltip :text=\"tooltip\" v-if=\"tooltip\">",
          "15:           <vs-icon icon=\"help_outline\" size=\"16px\" color=\"#A5A5A5\"></vs-icon>",
          "16:         </vs-tooltip>",
          "17:       </label>",
          "18:     </div>",
          "20:       <vs-switch :value=\"true\" @change=\"onChange\" :disabled=\"status === 'true'\" @input=\"handleInput($event)\">",
          "21:         <span slot=\"on\">{{ onLabel }}</span>",
          "22:         <span slot=\"off\">{{ offLabel }}</span>",
          "23:       </vs-switch>",
          "24:     </div>",
          "25:     <div v-else-if=\"label == 'Maintenance for all pages.' && status === 'false'\">",
          "26:       <vs-switch :value=\"false\" @change=\"onChange\" @input=\"handleInput($event)\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:       default: null,",
          "85:     },",
          "86:     status: {",
          "89:     }",
          "90:   },",
          "91:   methods: {",
          "",
          "[Removed Lines]",
          "87:       type: String,",
          "88:       default: 'false',",
          "",
          "[Added Lines]",
          "103:       type: Boolean,",
          "104:       default: false,",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/en.js||src/resources/js/lang/modules/en.js": [
          "File: src/resources/js/lang/modules/en.js -> src/resources/js/lang/modules/en.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:     edit: {",
          "251:       multiple: \"Update Configurations\",",
          "252:     },",
          "253:   },",
          "255:   crud: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253:     maintenanceMode: \"Maintenance setting is readonly.\"",
          "",
          "---------------"
        ],
        "src/resources/js/lang/modules/id.js||src/resources/js/lang/modules/id.js": [
          "File: src/resources/js/lang/modules/id.js -> src/resources/js/lang/modules/id.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:     edit: {",
          "251:       multiple: \"Simpan Konfigurasi\",",
          "252:     },",
          "253:   },",
          "255:   crud: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "253:     maintenanceMode: \"Pengaturan maintenance hanya readonly.\"",
          "",
          "---------------"
        ],
        "src/resources/js/pages/auth/secret-login.vue||src/resources/js/pages/auth/secret-login.vue": [
          "File: src/resources/js/pages/auth/secret-login.vue -> src/resources/js/pages/auth/secret-login.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <vs-col vs-lg=\"12\" class=\"main-container__box--auth\">",
          "3:     <vs-card class=\"main-container__card--auth\">",
          "4:       <badaso-auth-card-header slot=\"header\">{{",
          "5:         $t(\"login.title\")",
          "6:       }}</badaso-auth-card-header>",
          "7:       <div>",
          "8:         <form @submit=\"login()\">",
          "9:           <vs-input",
          "10:             icon=\"person\"",
          "11:             icon-after",
          "12:             size=\"default\"",
          "13:             :placeholder=\"$t('login.field.email')\"",
          "14:             v-model=\"email\"",
          "15:             class=\"login__input\"",
          "16:           />",
          "17:           <div v-if=\"errors.email\" class=\"login__error-container\">",
          "18:             <div v-if=\"$helper.isArray(errors.email)\">",
          "19:               <span",
          "20:                 class=\"login__input--error\"",
          "21:                 v-for=\"(info, index) in errors.email\"",
          "22:                 :key=\"index\"",
          "23:               >",
          "24:                 {{ info }}",
          "25:               </span>",
          "26:             </div>",
          "27:             <div v-else>",
          "28:               <span class=\"login__input--error\" v-html=\"errors.email\"></span>",
          "29:             </div>",
          "30:           </div>",
          "31:           <vs-input",
          "32:             icon=\"lock\"",
          "33:             type=\"password\"",
          "34:             icon-after",
          "35:             size=\"default\"",
          "36:             :placeholder=\"$t('login.field.password')\"",
          "37:             v-model=\"password\"",
          "38:             class=\"login__input\"",
          "39:             @keyup.enter=\"login()\"",
          "40:           />",
          "41:           <div v-if=\"errors.password\" class=\"login__error-container\">",
          "42:             <div v-if=\"$helper.isArray(errors.password)\">",
          "43:               <span",
          "44:                 class=\"login__input--error\"",
          "45:                 v-for=\"(info, index) in errors.password\"",
          "46:                 :key=\"index\"",
          "47:               >",
          "48:                 {{ info }}",
          "49:               </span>",
          "50:             </div>",
          "51:             <div v-else>",
          "52:               <span class=\"login__input--error\" v-html=\"errors.password\"></span>",
          "53:             </div>",
          "54:           </div>",
          "56:           <div class=\"login__footer\">",
          "57:             <div",
          "58:               class=\"vs-component con-vs-checkbox vs-checkbox-primary vs-checkbox-default\"",
          "59:             >",
          "60:               <input",
          "61:                 type=\"checkbox\"",
          "62:                 class=\"vs-checkbox--input\"",
          "63:                 v-model=\"rememberMe\"",
          "64:               /><span",
          "65:                 class=\"checkbox_x vs-checkbox\"",
          "66:                 style=\"border: 2px solid rgb(180, 180, 180)\"",
          "67:                 ><span class=\"vs-checkbox--check\"",
          "68:                   ><i",
          "69:                     class=\"vs-icon notranslate icon-scale vs-checkbox--icon material-icons null\"",
          "70:                     >check</i",
          "71:                   ></span",
          "72:                 ></span",
          "73:               ><span class=\"con-slot-label\">{{ $t(\"login.rememberMe\") }}</span>",
          "74:             </div>",
          "75:             <router-link",
          "76:               :to=\"'/' + baseUrl + '/forgot-password'\"",
          "77:               class=\"login__forgot-password\"",
          "78:               >{{ $t(\"login.forgotPassword\") }}</router-link",
          "79:             >",
          "80:           </div>",
          "81:           <vs-button type=\"relief\" class=\"login__button\" @click=\"login()\">{{",
          "82:             $t(\"login.button\")",
          "83:           }}</vs-button>",
          "84:         </form>",
          "85:         <div class=\"login__register-link\">",
          "86:           {{ $t(\"login.createAccount.text\") }} &nbsp;",
          "87:           <router-link :to=\"'/' + baseUrl + '/register'\">{{",
          "88:             $t(\"login.createAccount.link\")",
          "89:           }}</router-link>",
          "90:         </div>",
          "91:       </div>",
          "92:     </vs-card>",
          "93:   </vs-col>",
          "94: </template>",
          "96: <script>",
          "97: export default {",
          "98:   name: \"SecretLogin\",",
          "99:   data: () => ({",
          "100:     email: \"\",",
          "101:     password: \"\",",
          "102:     baseUrl: process.env.MIX_ADMIN_PANEL_ROUTE_PREFIX",
          "103:       ? process.env.MIX_ADMIN_PANEL_ROUTE_PREFIX",
          "104:       : \"badaso-dashboard\",",
          "105:     rememberMe: false,",
          "106:     errors: {},",
          "107:   }),",
          "108:   methods: {",
          "109:     login() {",
          "110:       this.$openLoader();",
          "111:       this.$store.commit(\"badaso/SET_AUTH_ISSUE\", {",
          "112:         unauthorized: false,",
          "113:       });",
          "114:       this.$api.badasoAuth",
          "115:         .secretLogin({",
          "116:           email: this.email,",
          "117:           password: this.password,",
          "118:           remember: this.rememberMe,",
          "119:         })",
          "120:         .then((response) => {",
          "121:           this.$closeLoader();",
          "122:           if (response.hasOwnProperty('data')) {",
          "123:             this.$router.push({ name: \"Home\" });",
          "124:           } else {",
          "125:             this.$router.push({",
          "126:               name: \"AuthVerify\",",
          "127:               query: {",
          "128:                 email: this.email,",
          "129:               },",
          "130:             });",
          "131:           }",
          "132:           if (this.$statusActiveFeatureFirebase) {",
          "133:             this.$messagingToken.then((tokenMessage) => {",
          "134:               try {",
          "135:                 this.$api.badasoFcm.saveTokenMessage(tokenMessage);",
          "136:               } catch (error) {",
          "137:                 console.error(",
          "138:                   \"Errors set token firebase cloud message :\",",
          "139:                   error",
          "140:                 );",
          "141:               }",
          "142:             });",
          "143:           }",
          "144:         })",
          "145:         .catch((error) => {",
          "146:           this.errors = error.errors;",
          "147:           this.$closeLoader();",
          "148:           this.$vs.notify({",
          "149:             title: this.$t(\"alert.danger\"),",
          "150:             text: error.message,",
          "151:             color: \"danger\",",
          "152:           });",
          "153:         });",
          "154:     },",
          "155:   },",
          "156: };",
          "157: </script>",
          "",
          "---------------"
        ],
        "src/resources/js/pages/index.vue||src/resources/js/pages/index.vue": [
          "File: src/resources/js/pages/index.vue -> src/resources/js/pages/index.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: <script>",
          "10: import AuthForgotPassword from \"./auth/forgot-password\";",
          "11: import AuthLogin from \"./auth/login\";",
          "12: import AuthRegister from \"./auth/register\";",
          "13: import AuthResetPassword from \"./auth/reset-password\";",
          "14: import AuthVerify from \"./auth/verify\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import SecretLogin from \"./auth/secret-login\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   components: {",
          "65:     AuthForgotPassword,",
          "66:     AuthLogin,",
          "67:     AuthRegister,",
          "68:     AuthResetPassword,",
          "69:     AuthVerify,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "68:     SecretLogin,",
          "",
          "---------------"
        ],
        "src/resources/js/router/auth/auth-router.js||src/resources/js/router/auth/auth-router.js": [
          "File: src/resources/js/router/auth/auth-router.js -> src/resources/js/router/auth/auth-router.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: const prefix = process.env.MIX_ADMIN_PANEL_ROUTE_PREFIX",
          "4:   ? \"/\" + process.env.MIX_ADMIN_PANEL_ROUTE_PREFIX",
          "5:   : \"/badaso-dashboard\";",
          "7: export default [",
          "8:   {",
          "9:     path: prefix + \"/login\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: const secretLoginPrefix = process.env.MIX_BADASO_SECRET_LOGIN_PREFIX",
          "7:   ? \"/\" + process.env.MIX_BADASO_SECRET_LOGIN_PREFIX",
          "8:   : \"/badaso-secret-login\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:       title: \"Email Verification\",",
          "46:     },",
          "47:   },",
          "48: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:   {",
          "52:     path: prefix + secretLoginPrefix,",
          "53:     name: \"SecretLogin\",",
          "54:     component: Pages,",
          "55:     meta: {",
          "56:       title: \"Secret Login\",",
          "57:     },",
          "58:   },",
          "",
          "---------------"
        ]
      }
    }
  ]
}