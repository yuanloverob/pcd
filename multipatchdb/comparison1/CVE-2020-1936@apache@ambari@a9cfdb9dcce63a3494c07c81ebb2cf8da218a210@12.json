{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cdf6b9e0d8a9766563b5e1c5ca05386728b51858",
      "candidate_info": {
        "commit_hash": "cdf6b9e0d8a9766563b5e1c5ca05386728b51858",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/cdf6b9e0d8a9766563b5e1c5ca05386728b51858",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java",
          "ambari-server/src/test/python/ldap-password.dat",
          "ambari-web/app/utils/ajax/ajax.js"
        ],
        "message": "AMBARI-25175. Start, Stop, Service Check and other request actions using PUT/POST from Ambari UI do not respond when tried via Knox TP (amagyar) (#2842) (#2990)\n\n* AMBARI-25175. Start, Stop, Service Check and other request actions using PUT/POST from Ambari UI do not respond when tried via Knox TP (amagyar) (#2842)\n\n* AMBARI-25175. Start, Stop, Service Check and other request actions using PUT/POST from Ambari UI do not respond when tried via Knox TP (amagyar) (#2842)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java||ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java",
          "ambari-server/src/test/python/ldap-password.dat||ambari-server/src/test/python/ldap-password.dat",
          "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java||ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java -> ambari-server/src/main/java/org/apache/ambari/server/api/services/RequestFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import javax.ws.rs.core.HttpHeaders;",
          "27: import javax.ws.rs.core.UriInfo;",
          "29: import org.apache.ambari.server.api.resources.ResourceDefinition;",
          "30: import org.apache.ambari.server.api.resources.ResourceInstance;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import org.apache.ambari.server.api.predicate.QueryLexer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:   private boolean applyDirectives(Request.Type requestType, RequestBody body, UriInfo uriInfo, ResourceInstance resource) {",
          "156:     Map<String, String> queryParameters = getQueryParameters(uriInfo, body);",
          "157:     Map<String, String> requestInfoProperties;",
          "158:     boolean allDirectivesApplicable = true;",
          "159:     if (!queryParameters.isEmpty()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:     queryParameters.remove(QueryLexer.QUERY_DOAS); // KNOX appends a doAs parameter to every request. Ignore this as it's neither a query predicate nor a directive.",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/ldap-password.dat||ambari-server/src/test/python/ldap-password.dat": [
          "File: ambari-server/src/test/python/ldap-password.dat -> ambari-server/src/test/python/ldap-password.dat",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: password",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js": [
          "File: ambari-web/app/utils/ajax/ajax.js -> ambari-web/app/utils/ajax/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3275:   if (this.format) {",
          "3276:     jQuery.extend(opt, this.format(data, opt));",
          "3277:   }",
          "3278:   var statusCode = jQuery.extend({}, require('data/statusCodes'));",
          "3279:   statusCode['404'] = function () {",
          "3280:     console.log(\"Error code 404: URI not found. -> \" + opt.url);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3278:   if (!('headers' in opt && 'Content-Type' in opt.headers)) {",
          "3280:     opt.headers['Content-Type'] = 'text/plain';",
          "3281:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e2eb9c99d7e84dc175f4a30e212686caf4e1213",
      "candidate_info": {
        "commit_hash": "9e2eb9c99d7e84dc175f4a30e212686caf4e1213",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9e2eb9c99d7e84dc175f4a30e212686caf4e1213",
        "files": [
          "ambari-common/src/main/python/ambari_commons/credential_store_helper.py"
        ],
        "message": "[AMBARI-24264] Suppress log messages from the credential_store_helper",
        "before_after_code_files": [
          "ambari-common/src/main/python/ambari_commons/credential_store_helper.py||ambari-common/src/main/python/ambari_commons/credential_store_helper.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/ambari_commons/credential_store_helper.py||ambari-common/src/main/python/ambari_commons/credential_store_helper.py": [
          "File: ambari-common/src/main/python/ambari_commons/credential_store_helper.py -> ambari-common/src/main/python/ambari_commons/credential_store_helper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     # Execute a get command on the CredentialUtil CLI to get the password for the specified alias",
          "51:     java_bin = '{java_home}/bin/java'.format(java_home=java_home)",
          "52:     cmd = (java_bin, '-cp', cs_lib_path, credential_util_cmd, 'get', alias, '-provider', provider_path)",
          "54:     std_out_lines = std_out_msg.split('\\n')",
          "55:     return(std_out_lines[-1]) # Get the last line of the output, to skip warnings if any.",
          "",
          "[Removed Lines]",
          "53:     cmd_result, std_out_msg  = checked_call(cmd)",
          "",
          "[Added Lines]",
          "53:     cmd_result, std_out_msg  = checked_call(cmd, quite=True)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     # Execute a get command on the CredentialUtil CLI to list all the aliases",
          "62:     java_bin = '{java_home}/bin/java'.format(java_home=java_home)",
          "63:     cmd = (java_bin, '-cp', cs_lib_path, credential_util_cmd, 'list', '-provider', provider_path)",
          "65:     std_out_lines = std_out_msg.split('\\n')",
          "66:     return(removeloglines(std_out_lines)[1:]) # Get the last line of the output, to skip warnings if any.",
          "",
          "[Removed Lines]",
          "64:     cmd_result, std_out_msg  = checked_call(cmd)",
          "",
          "[Added Lines]",
          "64:     cmd_result, std_out_msg  = checked_call(cmd, quite=True)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8af6cc29a814cf3bc67d7d4fb40047fdb70cdce",
      "candidate_info": {
        "commit_hash": "c8af6cc29a814cf3bc67d7d4fb40047fdb70cdce",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c8af6cc29a814cf3bc67d7d4fb40047fdb70cdce",
        "files": [
          "ambari-web/app/templates/main/admin/serviceAccounts.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/services.hbs"
        ],
        "message": "AMBARI-24321 Fix background colors on pages",
        "before_after_code_files": [
          "ambari-web/app/templates/main/admin/serviceAccounts.hbs||ambari-web/app/templates/main/admin/serviceAccounts.hbs",
          "ambari-web/app/templates/main/admin/stack_upgrade/services.hbs||ambari-web/app/templates/main/admin/stack_upgrade/services.hbs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/templates/main/admin/serviceAccounts.hbs||ambari-web/app/templates/main/admin/serviceAccounts.hbs": [
          "File: ambari-web/app/templates/main/admin/serviceAccounts.hbs -> ambari-web/app/templates/main/admin/serviceAccounts.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: }}",
          "20:   {{#if controller.dataIsLoaded}}",
          "21:     {{#if controller.users}}",
          "25:             <tr>",
          "26:               <th>{{t common.name}}</th>",
          "27:               <th>{{t common.value}}</th>",
          "28:             </tr>",
          "31:             {{#each user in controller.users}}",
          "32:               {{#if user.isVisible}}",
          "33:                 <tr>",
          "",
          "[Removed Lines]",
          "18: <div class=\"admin-misc\">",
          "19:   <h4>{{t admin.misc.header}}</h4>",
          "22:       <div class=\"row col-md-6\">",
          "23:         <table class=\"table table-hover\">",
          "24:           <thead>",
          "29:           </thead>",
          "30:           <tbody>",
          "",
          "[Added Lines]",
          "18: <div class=\"admin-misc container-wrap-table\">",
          "19:   <div class=\"row\">",
          "20:     <h2 class=\"table-title col-sm-4\">{{t admin.misc.header}}</h2>",
          "21:   </div>",
          "24:       <div class=\"row\">",
          "25:         <div class=\"col-md-6\">",
          "26:           <table class=\"table table-hover\">",
          "27:             <thead>",
          "32:             </thead>",
          "33:             <tbody>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:                 </tr>",
          "37:               {{/if}}",
          "38:             {{/each}}",
          "41:       </div>",
          "42:     {{else}}",
          "43:       <p>{{t admin.misc.nothingToShow}}</p>",
          "",
          "[Removed Lines]",
          "39:           </tbody>",
          "40:         </table>",
          "",
          "[Added Lines]",
          "42:             </tbody>",
          "43:           </table>",
          "44:         </div>",
          "",
          "---------------"
        ],
        "ambari-web/app/templates/main/admin/stack_upgrade/services.hbs||ambari-web/app/templates/main/admin/stack_upgrade/services.hbs": [
          "File: ambari-web/app/templates/main/admin/stack_upgrade/services.hbs -> ambari-web/app/templates/main/admin/stack_upgrade/services.hbs",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: }}",
          "34:     <tr>",
          "46:     </tr>",
          "47:     {{/each}}",
          "90:                         </a>",
          "116:             </div>",
          "119:       </div>",
          "120:     </div>",
          "",
          "[Removed Lines]",
          "20: <div class=\"row\">",
          "21:   <h2 class=\"table-title col-sm-1\">{{t common.stack}}</h2>",
          "22: </div>",
          "23: <table class=\"table table-hover\">",
          "24:   <thead>",
          "25:   <tr>",
          "26:     <th>{{t common.service}}</th>",
          "27:     <th>{{t common.version}}</th>",
          "28:     <th>{{t common.status}}</th>",
          "29:     <th>{{t common.description}}</th>",
          "30:   </tr>",
          "31:   </thead>",
          "32:   <tbody>",
          "33:     {{#each service in view.services}}",
          "35:       <td class=\"service-display-name\">{{service.displayName}}</td>",
          "36:       <td class=\"service-stack-version\">{{service.serviceVersionDisplay}}</td>",
          "37:       <td class=\"stack-version-state\">",
          "38:         {{#if service.isInstalled}}",
          "39:           <span class=\"label label-success\">{{t common.installed}}</span>",
          "40:         {{else}}",
          "41:           <a {{bindAttr class=\":path-link view.isAddServiceAvailable::not-active-link\"}} {{action goToAddService service.serviceName target=\"view\"}}>",
          "42:             {{t services.service.add}}</a>",
          "43:         {{/if}}",
          "44:       </td>",
          "45:       <td class=\"service-description\">{{{service.comments}}}</td>",
          "48:   </tbody>",
          "49: </table>",
          "51: {{#unless App.stackVersionsAvailable}}",
          "53:   <div class=\"header\">",
          "54:     <strong>{{t admin.cluster.repositories.repositories}}</strong>",
          "55:   </div>",
          "56:   <ul class=\"nav nav-tabs\">",
          "57:     <li class=\"active\">",
          "58:       <a href=\"javascript:void(null);\">{{view.allRepositoriesGroups.stackVersion}}</a>",
          "59:     </li>",
          "60:   </ul>",
          "62:   <div class=\"admin-cluster\">",
          "63:     <div class=\"repositories-table\">",
          "64:       <div class=\"thead\">",
          "65:         <div class=\"th os-th\">{{t common.os}}</div>",
          "66:         <div class=\"th name-th\">{{t common.name}}</div>",
          "67:         <div class=\"th url-th\">{{t installer.step1.advancedRepo.localRepo.column.baseUrl}}</div>",
          "68:       </div>",
          "69:       <div class=\"tbody\">",
          "70:         {{#each repoGroup in view.allRepositoriesGroups}}",
          "71:           <div class=\"trow\">",
          "72:             <div class=\"os-td\">",
          "73:               <label>",
          "74:                 <span class=\"os\">{{repoGroup.name}}</span>",
          "75:               </label>",
          "76:             </div>",
          "77:             <div style=\"width:89%\">",
          "78:               {{#each repository in repoGroup.repositories}}",
          "79:                 <div class=\"sub-trow\">",
          "80:                   <div class=\"name-td\">{{repository.repoId}}</div>",
          "81:                   <!--edit mode for current url-->",
          "82:                   {{#if repository.onEdit}}",
          "83:                     <div {{bindAttr class=\":url-td repository.empty-error:textfield-error repository.invalid-error:textfield-error\"}}>",
          "84:                       {{view Ember.TextField valueBinding=\"repository.baseUrl\" class=\"form-control\"}}",
          "85:                     </div>",
          "86:                     <div class=\"clear-td\">",
          "87:                       {{#if repository.clearAll}}",
          "88:                         <a {{action \"clearGroupLocalRepository\" repository target=\"view\" }}>",
          "89:                           <i class=\"glyphicon glyphicon-remove-sign\"></i>",
          "91:                       {{/if}}",
          "92:                     </div>",
          "93:                     <div class=\"edit-buttons-td\">",
          "94:                       <a class=\"btn btn-default\" {{action doCancel repository target=\"view\"}}>{{t common.cancel}}</a>",
          "95:                     </div>",
          "96:                     <div class=\"edit-buttons-td\">",
          "97:                       {{#if repository.empty-error}}",
          "98:                         <a class=\"btn btn-primary\" disabled=\"disabled\">{{t common.save}}</a>",
          "99:                       {{else}}",
          "100:                         <a class=\"btn btn-primary\" {{action saveRepoUrls repository target=\"view\"}}>{{t common.save}}</a>",
          "101:                       {{/if}}",
          "102:                     </div>",
          "103:                     <!--non-edit mode for current url-->",
          "104:                   {{else}}",
          "105:                     <div class=\"url-text-td\">",
          "106:                       {{repository.baseUrl}}",
          "107:                     </div>",
          "108:                     <div class=\"edit-td\">",
          "109:                       <a {{action \"onEditClick\" repository target=\"view\" }}>",
          "110:                         <i class=\"glyphicon glyphicon-edit\"></i> {{t common.edit}}",
          "111:                       </a>",
          "112:                     </div>",
          "113:                   {{/if}}",
          "114:                 </div>",
          "115:               {{/each}}",
          "117:           </div>",
          "118:         {{/each}}",
          "121:   </div>",
          "123: {{/unless}}",
          "",
          "[Added Lines]",
          "20: <div class=\"container-wrap-table\">",
          "21:   <div class=\"row\">",
          "22:     <h2 class=\"table-title col-sm-1\">{{t common.stack}}</h2>",
          "23:   </div>",
          "24:   <table class=\"table table-hover\">",
          "25:     <thead>",
          "27:       <th>{{t common.service}}</th>",
          "28:       <th>{{t common.version}}</th>",
          "29:       <th>{{t common.status}}</th>",
          "30:       <th>{{t common.description}}</th>",
          "32:     </thead>",
          "33:     <tbody>",
          "34:     {{#each service in view.services}}",
          "35:       <tr>",
          "36:         <td class=\"service-display-name\">{{service.displayName}}</td>",
          "37:         <td class=\"service-stack-version\">{{service.serviceVersionDisplay}}</td>",
          "38:         <td class=\"stack-version-state\">",
          "39:           {{#if service.isInstalled}}",
          "40:             <span class=\"label label-success\">{{t common.installed}}</span>",
          "41:           {{else}}",
          "42:             <a {{bindAttr class=\":path-link view.isAddServiceAvailable::not-active-link\"}} {{action goToAddService service.serviceName target=\"view\"}}>",
          "43:               {{t services.service.add}}</a>",
          "44:           {{/if}}",
          "45:         </td>",
          "46:         <td class=\"service-description\">{{{service.comments}}}</td>",
          "47:       </tr>",
          "49:     </tbody>",
          "50:   </table>",
          "52:   {{#unless App.stackVersionsAvailable}}",
          "54:     <div class=\"header\">",
          "55:       <strong>{{t admin.cluster.repositories.repositories}}</strong>",
          "56:     </div>",
          "57:     <ul class=\"nav nav-tabs\">",
          "58:       <li class=\"active\">",
          "59:         <a href=\"javascript:void(null);\">{{view.allRepositoriesGroups.stackVersion}}</a>",
          "60:       </li>",
          "61:     </ul>",
          "63:     <div class=\"admin-cluster\">",
          "64:       <div class=\"repositories-table\">",
          "65:         <div class=\"thead\">",
          "66:           <div class=\"th os-th\">{{t common.os}}</div>",
          "67:           <div class=\"th name-th\">{{t common.name}}</div>",
          "68:           <div class=\"th url-th\">{{t installer.step1.advancedRepo.localRepo.column.baseUrl}}</div>",
          "69:         </div>",
          "70:         <div class=\"tbody\">",
          "71:           {{#each repoGroup in view.allRepositoriesGroups}}",
          "72:             <div class=\"trow\">",
          "73:               <div class=\"os-td\">",
          "74:                 <label>",
          "75:                   <span class=\"os\">{{repoGroup.name}}</span>",
          "76:                 </label>",
          "77:               </div>",
          "78:               <div style=\"width:89%\">",
          "79:                 {{#each repository in repoGroup.repositories}}",
          "80:                   <div class=\"sub-trow\">",
          "81:                     <div class=\"name-td\">{{repository.repoId}}</div>",
          "82:                     <!--edit mode for current url-->",
          "83:                     {{#if repository.onEdit}}",
          "84:                       <div {{bindAttr class=\":url-td repository.empty-error:textfield-error repository.invalid-error:textfield-error\"}}>",
          "85:                         {{view Ember.TextField valueBinding=\"repository.baseUrl\" class=\"form-control\"}}",
          "86:                       </div>",
          "87:                       <div class=\"clear-td\">",
          "88:                         {{#if repository.clearAll}}",
          "89:                           <a {{action \"clearGroupLocalRepository\" repository target=\"view\" }}>",
          "90:                             <i class=\"glyphicon glyphicon-remove-sign\"></i>",
          "91:                           </a>",
          "92:                         {{/if}}",
          "93:                       </div>",
          "94:                       <div class=\"edit-buttons-td\">",
          "95:                         <a class=\"btn btn-default\" {{action doCancel repository target=\"view\"}}>{{t common.cancel}}</a>",
          "96:                       </div>",
          "97:                       <div class=\"edit-buttons-td\">",
          "98:                         {{#if repository.empty-error}}",
          "99:                           <a class=\"btn btn-primary\" disabled=\"disabled\">{{t common.save}}</a>",
          "100:                         {{else}}",
          "101:                           <a class=\"btn btn-primary\" {{action saveRepoUrls repository target=\"view\"}}>{{t common.save}}</a>",
          "102:                         {{/if}}",
          "103:                       </div>",
          "104:                       <!--non-edit mode for current url-->",
          "105:                     {{else}}",
          "106:                       <div class=\"url-text-td\">",
          "107:                         {{repository.baseUrl}}",
          "108:                       </div>",
          "109:                       <div class=\"edit-td\">",
          "110:                         <a {{action \"onEditClick\" repository target=\"view\" }}>",
          "111:                           <i class=\"glyphicon glyphicon-edit\"></i> {{t common.edit}}",
          "113:                       </div>",
          "114:                     {{/if}}",
          "115:                   </div>",
          "116:                 {{/each}}",
          "117:               </div>",
          "119:           {{/each}}",
          "120:         </div>",
          "124: </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fad78f717ef29183bdbabafa226f5bc1ee61272",
      "candidate_info": {
        "commit_hash": "7fad78f717ef29183bdbabafa226f5bc1ee61272",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/7fad78f717ef29183bdbabafa226f5bc1ee61272",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java"
        ],
        "message": "[AMBARI-24451] ambari.ldap.advanced.group_mapping_rules does not work, LDAP sync does not add admin roles for configured group(s)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java||ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java -> ambari-server/src/main/java/org/apache/ambari/server/security/authorization/Users.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: import org.apache.ambari.server.hooks.HookContextFactory;",
          "37: import org.apache.ambari.server.hooks.HookService;",
          "38: import org.apache.ambari.server.ldap.domain.AmbariLdapConfiguration;",
          "39: import org.apache.ambari.server.orm.dao.GroupDAO;",
          "40: import org.apache.ambari.server.orm.dao.MemberDAO;",
          "41: import org.apache.ambari.server.orm.dao.PermissionDAO;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: import org.apache.ambari.server.ldap.service.AmbariLdapConfigurationProvider;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:   private PasswordEncoder passwordEncoder;",
          "123:   @Inject",
          "126:   @Inject",
          "127:   protected Configuration configuration;",
          "",
          "[Removed Lines]",
          "124:   protected AmbariLdapConfiguration ldapConfiguration;",
          "",
          "[Added Lines]",
          "125:   protected AmbariLdapConfigurationProvider ldapConfigurationProvider;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "897:   private void processLdapAdminGroupMappingRules(Set<MemberEntity> membershipsToCreate) {",
          "899:     String adminGroupMappings = ldapConfiguration.groupMappingRules();",
          "902:       return;",
          "903:     }",
          "",
          "[Removed Lines]",
          "900:     if (Strings.isNullOrEmpty(adminGroupMappings) || membershipsToCreate.isEmpty()) {",
          "901:       LOG.info(\"Nothing to do. LDAP admin group mappings: {}, Memberships to handle: {}\", adminGroupMappings, membershipsToCreate.size());",
          "",
          "[Added Lines]",
          "900:     if (membershipsToCreate.isEmpty()) {",
          "901:       LOG.debug(\"There are no new memberships for which to process administrator group mapping rules.\");",
          "902:       return;",
          "903:     }",
          "905:     AmbariLdapConfiguration ldapConfiguration = ldapConfigurationProvider.get();",
          "906:     if (ldapConfiguration == null) {",
          "907:       LOG.warn(\"The LDAP configuration is not available - no administrator group mappings will be processed.\");",
          "908:       return;",
          "909:     }",
          "912:     if (Strings.isNullOrEmpty(adminGroupMappings)) {",
          "913:       LOG.debug(\"There are no administrator group mappings to be processed.\");",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java||ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java -> ambari-server/src/test/java/org/apache/ambari/server/security/authorization/TestUsers.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.apache.ambari.server.security.authorization;",
          "20: import static org.junit.Assert.assertEquals;",
          "21: import static org.junit.Assert.assertNotNull;",
          "22: import static org.junit.Assert.assertNotSame;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.apache.ambari.server.configuration.AmbariServerConfigurationKey.GROUP_MAPPING_RULES;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: import java.sql.SQLException;",
          "28: import java.util.Collection;",
          "29: import java.util.List;",
          "31: import org.apache.ambari.server.AmbariException;",
          "32: import org.apache.ambari.server.H2DatabaseCleaner;",
          "33: import org.apache.ambari.server.orm.GuiceJpaInitializer;",
          "34: import org.apache.ambari.server.orm.InMemoryDefaultTestModule;",
          "35: import org.apache.ambari.server.orm.dao.GroupDAO;",
          "36: import org.apache.ambari.server.orm.dao.PermissionDAO;",
          "37: import org.apache.ambari.server.orm.dao.PrincipalDAO;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import java.util.Collections;",
          "35: import org.apache.ambari.server.configuration.AmbariServerConfigurationCategory;",
          "36: import org.apache.ambari.server.events.AmbariConfigurationChangedEvent;",
          "37: import org.apache.ambari.server.events.JpaInitializedEvent;",
          "38: import org.apache.ambari.server.events.publishers.AmbariEventPublisher;",
          "41: import org.apache.ambari.server.orm.dao.AmbariConfigurationDAO;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39: import org.apache.ambari.server.orm.dao.ResourceDAO;",
          "40: import org.apache.ambari.server.orm.dao.ResourceTypeDAO;",
          "41: import org.apache.ambari.server.orm.dao.UserDAO;",
          "42: import org.apache.ambari.server.orm.entities.PermissionEntity;",
          "43: import org.apache.ambari.server.orm.entities.PrincipalEntity;",
          "44: import org.apache.ambari.server.orm.entities.PrincipalTypeEntity;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: import org.apache.ambari.server.orm.entities.AmbariConfigurationEntity;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46: import org.apache.ambari.server.orm.entities.ResourceTypeEntity;",
          "47: import org.apache.ambari.server.orm.entities.UserAuthenticationEntity;",
          "48: import org.apache.ambari.server.orm.entities.UserEntity;",
          "49: import org.junit.After;",
          "50: import org.junit.Before;",
          "51: import org.junit.Test;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: import org.apache.ambari.server.security.ldap.LdapBatchDto;",
          "58: import org.apache.ambari.server.security.ldap.LdapGroupDto;",
          "59: import org.apache.ambari.server.security.ldap.LdapUserDto;",
          "60: import org.apache.ambari.server.security.ldap.LdapUserGroupMemberDto;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "195:     try {",
          "196:       users.modifyAuthentication(foundLocalAuthenticationEntity, \"user\", null, false);",
          "197:       fail(\"Null password should not be allowed\");",
          "200:       assertEquals(\"The new password does not meet the Ambari password requirements\", e.getLocalizedMessage());",
          "201:     }",
          "203:     try {",
          "204:       users.modifyAuthentication(foundLocalAuthenticationEntity, \"user\", \"\", false);",
          "205:       fail(\"Empty password should not be allowed\");",
          "208:       assertEquals(\"The new password does not meet the Ambari password requirements\", e.getLocalizedMessage());",
          "209:     }",
          "210:   }",
          "",
          "[Removed Lines]",
          "198:     }",
          "199:     catch (AmbariException e) {",
          "206:     }",
          "207:     catch (AmbariException e) {",
          "",
          "[Added Lines]",
          "210:     } catch (AmbariException e) {",
          "217:     } catch (AmbariException e) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "528:     assertEquals(3, userEntity2.getAuthenticationEntities().size());",
          "529:   }",
          "532:     assertNotNull(userEntity);",
          "533:     Collection<UserAuthenticationEntity> authenticationEntities = userEntity.getAuthenticationEntities();",
          "534:     assertNotNull(authenticationEntities);",
          "",
          "[Removed Lines]",
          "531:     private UserAuthenticationEntity getAuthenticationEntity(UserEntity userEntity, UserAuthenticationType type) {",
          "",
          "[Added Lines]",
          "541:   @Test",
          "542:   public void testProcessLdapSync() {",
          "544:     AmbariConfigurationEntity entity = new AmbariConfigurationEntity();",
          "545:     entity.setCategoryName(GROUP_MAPPING_RULES.getConfigurationCategory().getCategoryName());",
          "546:     entity.setPropertyName(GROUP_MAPPING_RULES.key());",
          "547:     entity.setPropertyValue(\"admins\");",
          "548:     injector.getInstance(AmbariConfigurationDAO.class).create(entity);",
          "550:     AmbariEventPublisher eventPublisher = injector.getInstance(AmbariEventPublisher.class);",
          "551:     eventPublisher.publish(new JpaInitializedEvent());",
          "552:     eventPublisher.publish(new AmbariConfigurationChangedEvent(AmbariServerConfigurationCategory.LDAP_CONFIGURATION.name()));",
          "554:     LdapBatchDto batchInfo = new LdapBatchDto();",
          "555:     LdapUserDto userToBeCreated;",
          "556:     LdapGroupDto groupToBeCreated;",
          "558:     userToBeCreated = new LdapUserDto();",
          "559:     userToBeCreated.setDn(\"dn=user1\");",
          "560:     userToBeCreated.setUid(\"user1\");",
          "561:     userToBeCreated.setUserName(\"User1\");",
          "562:     batchInfo.getUsersToBeCreated().add(userToBeCreated);",
          "564:     userToBeCreated = new LdapUserDto();",
          "565:     userToBeCreated.setDn(\"dn=user2\");",
          "566:     userToBeCreated.setUid(\"user2\");",
          "567:     userToBeCreated.setUserName(\"User2\");",
          "568:     batchInfo.getUsersToBeCreated().add(userToBeCreated);",
          "570:     groupToBeCreated = new LdapGroupDto();",
          "571:     groupToBeCreated.setGroupName(\"admins\");",
          "572:     groupToBeCreated.setMemberAttributes(Collections.singleton(\"dn=User1\"));",
          "573:     batchInfo.getGroupsToBeCreated().add(groupToBeCreated);",
          "575:     groupToBeCreated = new LdapGroupDto();",
          "576:     groupToBeCreated.setGroupName(\"non-admins\");",
          "577:     groupToBeCreated.setMemberAttributes(Collections.singleton(\"dn=User2\"));",
          "578:     batchInfo.getGroupsToBeCreated().add(groupToBeCreated);",
          "580:     batchInfo.getMembershipToAdd().add(new LdapUserGroupMemberDto(\"admins\", \"user1\"));",
          "581:     batchInfo.getMembershipToAdd().add(new LdapUserGroupMemberDto(\"non-admins\", \"user2\"));",
          "583:     users.processLdapSync(batchInfo);",
          "585:     assertNotNull(users.getUser(\"user1\"));",
          "586:     assertNotNull(users.getUser(\"user2\"));",
          "588:     Collection<AmbariGrantedAuthority> authorities;",
          "590:     authorities = users.getUserAuthorities(\"user1\");",
          "591:     assertNotNull(authorities);",
          "592:     assertEquals(1, authorities.size());",
          "593:     assertEquals(\"AMBARI.ADMINISTRATOR\", authorities.iterator().next().getPrivilegeEntity().getPermission().getPermissionName());",
          "595:     authorities = users.getUserAuthorities(\"user2\");",
          "596:     assertNotNull(authorities);",
          "597:     assertEquals(0, authorities.size());",
          "598:   }",
          "600:   private UserAuthenticationEntity getAuthenticationEntity(UserEntity userEntity, UserAuthenticationType type) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9be05937acf2fa57c1d562793a668ad7552d80fb",
      "candidate_info": {
        "commit_hash": "9be05937acf2fa57c1d562793a668ad7552d80fb",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9be05937acf2fa57c1d562793a668ad7552d80fb",
        "files": [
          "ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py",
          "ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py",
          "ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py",
          "ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py",
          "ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py"
        ],
        "message": "AMBARI-22951 Export JAVA_HOME env variable in shell script for Ranger (mugdha) (#2023)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py||ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py",
          "ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py||ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py",
          "ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py||ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py",
          "ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py||ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py",
          "ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py||ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py||ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py": [
          "File: ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py -> ambari-server/src/main/resources/common-services/RANGER/0.4.0/package/scripts/setup_ranger_xml.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:     create_parents=True",
          "121:   )",
          "123:   if params.stack_supports_pid:",
          "124:     File(format('{ranger_conf}/ranger-admin-env-piddir.sh'),",
          "125:       content = format(\"export RANGER_PID_DIR_PATH={ranger_pid_dir}\\nexport RANGER_USER={unix_user}\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:   File(format('{ranger_conf}/ranger-admin-env.sh'),",
          "124:     content = format(\"export JAVA_HOME={java_home}\"),",
          "125:     owner = params.unix_user,",
          "126:     group = params.unix_group,",
          "127:     mode = 0755",
          "128:   )",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py||ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py": [
          "File: ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py -> ambari-server/src/main/resources/common-services/RANGER_KMS/0.5.0.2.3/package/scripts/kms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:       create_parents=True",
          "236:     )",
          "238:     if params.stack_supports_pid:",
          "239:       File(format('{kms_conf_dir}/ranger-kms-env-piddir.sh'),",
          "240:         content = format(\"export RANGER_KMS_PID_DIR_PATH={ranger_kms_pid_dir}\\nexport KMS_USER={kms_user}\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     File(format('{kms_conf_dir}/ranger-kms-env.sh'),",
          "239:       content = format(\"export JAVA_HOME={java_home}\"),",
          "240:       owner = params.kms_user,",
          "241:       group = params.kms_group,",
          "242:       mode = 0755",
          "243:     )",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py||ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py": [
          "File: ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py -> ambari-server/src/test/python/stacks/2.5/RANGER/test_ranger_admin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "265:       create_parents=True",
          "266:     )",
          "268:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env-piddir.sh',",
          "269:       content = 'export RANGER_PID_DIR_PATH=/var/run/ranger\\nexport RANGER_USER=ranger',",
          "270:       owner = 'ranger',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env.sh',",
          "269:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "270:       owner = 'ranger',",
          "271:       group = 'ranger',",
          "272:       mode = 0755",
          "273:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "429:       create_parents=True",
          "430:     )",
          "432:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env-piddir.sh',",
          "433:       content = 'export RANGER_PID_DIR_PATH=/var/run/ranger\\nexport RANGER_USER=ranger',",
          "434:       owner = 'ranger',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "439:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env.sh',",
          "440:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "441:       owner = 'ranger',",
          "442:       group = 'ranger',",
          "443:       mode = 0755",
          "444:     )",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py||ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py": [
          "File: ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py -> ambari-server/src/test/python/stacks/2.5/RANGER_KMS/test_kms_server.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:       create_parents=True",
          "369:     )",
          "371:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-kms-env-piddir.sh',",
          "372:       content = 'export RANGER_KMS_PID_DIR_PATH=/var/run/ranger_kms\\nexport KMS_USER=kms',",
          "373:       owner = 'kms',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "371:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-kms-env.sh',",
          "372:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "373:       owner = 'kms',",
          "374:       group = 'kms',",
          "375:       mode = 0755",
          "376:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "819:       create_parents=True",
          "820:     )",
          "822:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-kms-env-piddir.sh',",
          "823:       content = 'export RANGER_KMS_PID_DIR_PATH=/var/run/ranger_kms\\nexport KMS_USER=kms',",
          "824:       owner = 'kms',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-kms/conf/ranger-kms-env.sh',",
          "830:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "831:       owner = 'kms',",
          "832:       group = 'kms',",
          "833:       mode = 0755",
          "834:     )",
          "",
          "---------------"
        ],
        "ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py||ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py": [
          "File: ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py -> ambari-server/src/test/python/stacks/2.6/RANGER/test_ranger_admin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "308:       create_parents=True",
          "309:     )",
          "311:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env-piddir.sh',",
          "312:       content = 'export RANGER_PID_DIR_PATH=/var/run/ranger\\nexport RANGER_USER=ranger',",
          "313:       owner = 'ranger',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env.sh',",
          "312:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "313:       owner = 'ranger',",
          "314:       group = 'ranger',",
          "315:       mode = 0755",
          "316:     )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "488:       create_parents=True",
          "489:     )",
          "491:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env-piddir.sh',",
          "492:       content = 'export RANGER_PID_DIR_PATH=/var/run/ranger\\nexport RANGER_USER=ranger',",
          "493:       owner = 'ranger',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "498:     self.assertResourceCalled('File', '/usr/hdp/current/ranger-admin/conf/ranger-admin-env.sh',",
          "499:       content = 'export JAVA_HOME=/usr/jdk64/jdk1.7.0_45',",
          "500:       owner = 'ranger',",
          "501:       group = 'ranger',",
          "502:       mode = 0755",
          "503:     )",
          "",
          "---------------"
        ]
      }
    }
  ]
}