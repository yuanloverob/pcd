{
  "cve_id": "CVE-2023-33008",
  "cve_desc": "Deserialization of Untrusted Data vulnerability in Apache Software Foundation Apache Johnzon.\n\n\nA malicious attacker can craft up some JSON input that uses large numbers (numbers such as\u00a01e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion (Denial of service risk). Apache Johnzon 1.2.21 mitigates this by setting a scale limit of 1000 (by default) to the BigDecimal. \n\n\nThis issue affects Apache Johnzon: through 1.2.20.\n\n",
  "repo": "apache/johnzon",
  "patch_hash": "34ad9a6b296ae7b4667c3cf0037998e451499ea4",
  "patch_info": {
    "commit_hash": "34ad9a6b296ae7b4667c3cf0037998e451499ea4",
    "repo": "apache/johnzon",
    "commit_url": "https://github.com/apache/johnzon/commit/34ad9a6b296ae7b4667c3cf0037998e451499ea4",
    "files": [
      "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
      "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
    ],
    "message": "fix(JOHNZON-397): sets the maxBigDecimalScale if it's our JsonProvider impl\n\nSigned-off-by: Jean-Louis Monteiro <jlmonteiro@tomitribe.com>",
    "before_after_code_files": [
      "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
      "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
    ]
  },
  "patch_diff": {
    "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java": [
      "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: import static java.util.Locale.ROOT;",
      "26: import org.apache.johnzon.mapper.access.AccessMode;",
      "27: import org.apache.johnzon.mapper.access.BaseAccessMode;",
      "28: import org.apache.johnzon.mapper.access.FieldAccessMode;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: import org.apache.johnzon.mapper.util.JsonProviderUtil;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "123:                 provider = this.provider;",
      "124:             } else {",
      "125:                 provider = JsonProvider.provider();",
      "126:                 this.provider = provider;",
      "127:             }",
      "128:             final Map<String, Object> config = new HashMap<String, Object>();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "127:                 JsonProviderUtil.setMaxBigDecimalScale(provider, maxBigDecimalScale);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "141:             }",
      "143:             if (readerFactory == null) {",
      "145:                 if (supportsComments) {",
      "146:                     config.put(\"org.apache.johnzon.supports-comments\", \"true\");",
      "147:                 }",
      "",
      "[Removed Lines]",
      "144:                 config.remove(JsonGenerator.PRETTY_PRINTING); // doesnt mean anything anymore for reader",
      "",
      "[Added Lines]",
      "146:                 config.remove(JsonGenerator.PRETTY_PRINTING); // doesn't mean anything anymore for reader",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "158:             }",
      "159:         } else if (this.provider == null) {",
      "160:             this.provider = JsonProvider.provider();",
      "161:         }",
      "162:         if (builderFactory == null) {",
      "163:             builderFactory = provider.createBuilderFactory(emptyMap());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:             JsonProviderUtil.setMaxBigDecimalScale(provider, maxBigDecimalScale);",
      "",
      "---------------"
    ],
    "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java": [
      "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.johnzon.mapper.util;",
      "19: import jakarta.json.spi.JsonProvider;",
      "20: import org.apache.johnzon.core.JsonProviderImpl;",
      "22: import java.lang.reflect.Method;",
      "27: public final class JsonProviderUtil {",
      "29:     private final static Method SET_MAX_BIG_DECIMAL_SCALE;",
      "31:     static {",
      "32:         try {",
      "33:             SET_MAX_BIG_DECIMAL_SCALE =",
      "34:                 JsonProviderImpl.class.getDeclaredMethod(\"setMaxBigDecimalScale\", Integer.TYPE);",
      "35:             SET_MAX_BIG_DECIMAL_SCALE.setAccessible(true);",
      "36:         } catch (final NoSuchMethodException e) {",
      "37:             throw new RuntimeException(e);",
      "38:         }",
      "39:     }",
      "41:     private JsonProviderUtil() {",
      "43:     }",
      "57:     public static void setMaxBigDecimalScale(final JsonProvider provider, final int value) {",
      "58:         if (!\"org.apache.johnzon.core.JsonProviderImpl\".equals(provider.getClass().getName())) return;",
      "60:         try {",
      "61:             SET_MAX_BIG_DECIMAL_SCALE.invoke(provider, value);",
      "62:         } catch (final Exception e) {",
      "63:             throw new RuntimeException(e);",
      "64:         }",
      "65:     }",
      "67: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a2a1fe919ce266fdd39879eab9fa629e5347217c",
      "candidate_info": {
        "commit_hash": "a2a1fe919ce266fdd39879eab9fa629e5347217c",
        "repo": "apache/johnzon",
        "commit_url": "https://github.com/apache/johnzon/commit/a2a1fe919ce266fdd39879eab9fa629e5347217c",
        "files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ],
        "message": "fix: use the right import for this branch (cherry-pick issue)\n\nSigned-off-by: Jean-Louis Monteiro <jlmonteiro@tomitribe.com>",
        "before_after_code_files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ],
          "candidate": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ]
        }
      },
      "candidate_diff": {
        "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java": [
          "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.johnzon.mapper.util;",
          "20: import org.apache.johnzon.core.JsonProviderImpl;",
          "22: import java.lang.reflect.Method;",
          "",
          "[Removed Lines]",
          "19: import jakarta.json.spi.JsonProvider;",
          "",
          "[Added Lines]",
          "19: import javax.json.spi.JsonProvider;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "94998a129931e1a2afdab1c981fa1b0f0c4111db",
      "candidate_info": {
        "commit_hash": "94998a129931e1a2afdab1c981fa1b0f0c4111db",
        "repo": "apache/johnzon",
        "commit_url": "https://github.com/apache/johnzon/commit/94998a129931e1a2afdab1c981fa1b0f0c4111db",
        "files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ],
        "message": "fix: checkstyle\n\nSigned-off-by: Jean-Louis Monteiro <jlmonteiro@tomitribe.com>",
        "before_after_code_files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ],
          "candidate": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ]
        }
      },
      "candidate_diff": {
        "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java": [
          "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     public static void setMaxBigDecimalScale(final JsonProvider provider, final int value) {",
          "60:         try {",
          "61:             SET_MAX_BIG_DECIMAL_SCALE.invoke(provider, value);",
          "",
          "[Removed Lines]",
          "58:         if (!\"org.apache.johnzon.core.JsonProviderImpl\".equals(provider.getClass().getName())) return;",
          "",
          "[Added Lines]",
          "58:         if (!\"org.apache.johnzon.core.JsonProviderImpl\".equals(provider.getClass().getName())) {",
          "59:             return;",
          "60:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e29ba98f91711e774b125b481f637115d5f5c8b",
      "candidate_info": {
        "commit_hash": "6e29ba98f91711e774b125b481f637115d5f5c8b",
        "repo": "apache/johnzon",
        "commit_url": "https://github.com/apache/johnzon/commit/6e29ba98f91711e774b125b481f637115d5f5c8b",
        "files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ],
        "message": "fix(JOHNZON-397): sets the maxBigDecimalScale if it's our JsonProvider impl\n\nSigned-off-by: Jean-Louis Monteiro <jlmonteiro@tomitribe.com>",
        "before_after_code_files": [
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
          "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ],
          "candidate": [
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
            "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java"
          ]
        }
      },
      "candidate_diff": {
        "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java": [
          "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/MapperBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import static java.util.Locale.ROOT;",
          "26: import org.apache.johnzon.mapper.access.AccessMode;",
          "27: import org.apache.johnzon.mapper.access.BaseAccessMode;",
          "28: import org.apache.johnzon.mapper.access.FieldAccessMode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.johnzon.mapper.util.JsonProviderUtil;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:                 provider = this.provider;",
          "125:             } else {",
          "126:                 provider = JsonProvider.provider();",
          "127:                 this.provider = provider;",
          "128:             }",
          "129:             final Map<String, Object> config = new HashMap<String, Object>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "128:                 JsonProviderUtil.setMaxBigDecimalScale(provider, maxBigDecimalScale);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142:             }",
          "144:             if (readerFactory == null) {",
          "146:                 if (supportsComments) {",
          "147:                     config.put(\"org.apache.johnzon.supports-comments\", \"true\");",
          "148:                 }",
          "",
          "[Removed Lines]",
          "145:                 config.remove(JsonGenerator.PRETTY_PRINTING); // doesnt mean anything anymore for reader",
          "",
          "[Added Lines]",
          "147:                 config.remove(JsonGenerator.PRETTY_PRINTING); // doesn't mean anything anymore for reader",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:             }",
          "160:         } else if (this.provider == null) {",
          "161:             this.provider = JsonProvider.provider();",
          "162:         }",
          "163:         if (builderFactory == null) {",
          "164:             builderFactory = provider.createBuilderFactory(emptyMap());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:             JsonProviderUtil.setMaxBigDecimalScale(provider, maxBigDecimalScale);",
          "",
          "---------------"
        ],
        "johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java||johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java": [
          "File: johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java -> johnzon-mapper/src/main/java/org/apache/johnzon/mapper/util/JsonProviderUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.johnzon.mapper.util;",
          "19: import jakarta.json.spi.JsonProvider;",
          "20: import org.apache.johnzon.core.JsonProviderImpl;",
          "22: import java.lang.reflect.Method;",
          "27: public final class JsonProviderUtil {",
          "29:     private final static Method SET_MAX_BIG_DECIMAL_SCALE;",
          "31:     static {",
          "32:         try {",
          "33:             SET_MAX_BIG_DECIMAL_SCALE =",
          "34:                 JsonProviderImpl.class.getDeclaredMethod(\"setMaxBigDecimalScale\", Integer.TYPE);",
          "35:             SET_MAX_BIG_DECIMAL_SCALE.setAccessible(true);",
          "36:         } catch (final NoSuchMethodException e) {",
          "37:             throw new RuntimeException(e);",
          "38:         }",
          "39:     }",
          "41:     private JsonProviderUtil() {",
          "43:     }",
          "57:     public static void setMaxBigDecimalScale(final JsonProvider provider, final int value) {",
          "58:         if (!\"org.apache.johnzon.core.JsonProviderImpl\".equals(provider.getClass().getName())) return;",
          "60:         try {",
          "61:             SET_MAX_BIG_DECIMAL_SCALE.invoke(provider, value);",
          "62:         } catch (final Exception e) {",
          "63:             throw new RuntimeException(e);",
          "64:         }",
          "65:     }",
          "67: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}