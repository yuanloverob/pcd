{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "abd449433b0a573e26e4ee4dbea5e9cd6144286c",
      "candidate_info": {
        "commit_hash": "abd449433b0a573e26e4ee4dbea5e9cd6144286c",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/abd449433b0a573e26e4ee4dbea5e9cd6144286c",
        "files": [
          "src/ContentManager/FileGenerator.php",
          "src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php",
          "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php",
          "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php": [
          "File: src/ContentManager/FileGenerator.php -> src/ContentManager/FileGenerator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:         }",
          "358:         if (array_key_exists('modified_relations', $relations) && count($relations['modified_relations']) > 0) {",
          "359:             $schema_up .= $this->migration_parser->getAlterMigrationRelationshipSchemaUp($table, $relations);",
          "361:         }",
          "363:         $schema_down .= $this->migration_parser->getAlterMigrationSchemaDown($table, $rows, $prefix, $relations);",
          "",
          "[Removed Lines]",
          "360:             $schema_down .= $this->migration_parser->getAlterMigrationRelationshipSchemaDown($table, $relations) . PHP_EOL;",
          "",
          "[Added Lines]",
          "359:             $schema_down .= $this->migration_parser->getAlterMigrationRelationshipSchemaDown($table, $relations).PHP_EOL;",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoDatabaseController.php||src/Controllers/BadasoDatabaseController.php": [
          "File: src/Controllers/BadasoDatabaseController.php -> src/Controllers/BadasoDatabaseController.php"
        ],
        "src/Helpers/MigrationParser.php||src/Helpers/MigrationParser.php": [
          "File: src/Helpers/MigrationParser.php -> src/Helpers/MigrationParser.php"
        ]
      }
    },
    {
      "candidate_hash": "d2370492c7475b44c60d8ce6e09e6fd206fc33ad",
      "candidate_info": {
        "commit_hash": "d2370492c7475b44c60d8ce6e09e6fd206fc33ad",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/d2370492c7475b44c60d8ce6e09e6fd206fc33ad",
        "files": [
          "src/resources/js/components/BadasoNotificationMessage.vue"
        ],
        "message": "bugfix [v2] update notification",
        "before_after_code_files": [
          "src/resources/js/components/BadasoNotificationMessage.vue||src/resources/js/components/BadasoNotificationMessage.vue"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/resources/js/components/BadasoNotificationMessage.vue||src/resources/js/components/BadasoNotificationMessage.vue": [
          "File: src/resources/js/components/BadasoNotificationMessage.vue -> src/resources/js/components/BadasoNotificationMessage.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:             }}",
          "49:           </p>",
          "53:             <p>{{ message.createdAt }}</p>",
          "54:           </vs-row>",
          "55:         </div>",
          "",
          "[Removed Lines]",
          "51:           <vs-row>",
          "52:             <vs-icon icon=\"schedule\" :color=\"topbarFontColor\"></vs-icon>",
          "",
          "[Added Lines]",
          "51:           <vs-row style=\"align-items: center;\">",
          "52:             <vs-icon icon=\"schedule\" :color=\"topbarFontColor\" style=\"margin-right: 5px;\"></vs-icon>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110: </template>",
          "112: <script>",
          "113: export default {",
          "114:   data() {",
          "115:     return {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113: import moment from 'moment';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:             item.style = {",
          "158:               backgroundColor: !item.isRead ? \"#f0f5f9\" : \"#ffffff\",",
          "159:             };",
          "160:             return item;",
          "161:           });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:             if(item.createdAt){",
          "162:               item.createdAt = moment(item.createdAt).utc().format('YYYY-MM-DD HH:mm:ss');",
          "163:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ccaeb9c5207efb898207728afb62c15fa60ee1e6",
      "candidate_info": {
        "commit_hash": "ccaeb9c5207efb898207728afb62c15fa60ee1e6",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/ccaeb9c5207efb898207728afb62c15fa60ee1e6",
        "files": [
          "src/Commands/BadasoTestSetup.php",
          "src/Helpers/CallHelperTest.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Commands/BadasoTestSetup.php||src/Commands/BadasoTestSetup.php",
          "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoTestSetup.php||src/Commands/BadasoTestSetup.php": [
          "File: src/Commands/BadasoTestSetup.php -> src/Commands/BadasoTestSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: class BadasoTestSetup extends Command",
          "9: {",
          "12:     public static $BADASO_UNIT_TEST_PATHS = [",
          "14:     ];",
          "15:     public static $BADASO_FEATURE_TEST_PATHS = [",
          "17:     ];",
          "",
          "[Removed Lines]",
          "11:     public static $PHPUNIT_XML_PATH = \"phpunit.xml\";",
          "13:         \"./packages/badaso/core/tests/Unit\",",
          "16:         \"./packages/badaso/core/tests/Feature\",",
          "",
          "[Added Lines]",
          "10:     public static $PHPUNIT_XML_PATH = 'phpunit.xml';",
          "12:         './packages/badaso/core/tests/Unit',",
          "15:         './packages/badaso/core/tests/Feature',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:                     foreach ($badaso_test_paths as $_ => $badaso_test_path) {",
          "80:                             $test_suite_features->item($index_test_suite_feature)->appendChild($new_directory);",
          "81:                         }",
          "",
          "[Removed Lines]",
          "76:                         if (!in_array($badaso_test_path, $now_test_paths)) {",
          "77:                             $new_directory = $document->createElement(\"directory\", $badaso_test_path);",
          "78:                             $new_directory->setAttribute(\"suffix\", \"Test.php\");",
          "",
          "[Added Lines]",
          "75:                         if (! in_array($badaso_test_path, $now_test_paths)) {",
          "76:                             $new_directory = $document->createElement('directory', $badaso_test_path);",
          "77:                             $new_directory->setAttribute('suffix', 'Test.php');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:                     foreach ($badaso_test_paths as $_ => $badaso_test_path) {",
          "102:                             $test_suite_features->item($index_test_suite_feature)->appendChild($new_directory);",
          "103:                         }",
          "",
          "[Removed Lines]",
          "98:                         if (!in_array($badaso_test_path, $now_test_paths)) {",
          "99:                             $new_directory = $document->createElement(\"directory\", $badaso_test_path);",
          "100:                             $new_directory->setAttribute(\"suffix\", \"Test.php\");",
          "",
          "[Added Lines]",
          "97:                         if (! in_array($badaso_test_path, $now_test_paths)) {",
          "98:                             $new_directory = $document->createElement('directory', $badaso_test_path);",
          "99:                             $new_directory->setAttribute('suffix', 'Test.php');",
          "",
          "---------------"
        ],
        "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php": [
          "File: src/Helpers/CallHelperTest.php -> src/Helpers/CallHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: class CallHelperTest",
          "12: {",
          "16:     public static function getTokenUserAdminAuthorize()",
          "17:     {",
          "",
          "[Removed Lines]",
          "13:     static $KEY_TOKEN_ADMIN_AUTHORIZE = \"TOKEN_ADMIN_AUTHORIZE\";",
          "14:     static $ADMINISTRATOR_ROLE_ID = 1;",
          "",
          "[Added Lines]",
          "13:     public static $KEY_TOKEN_ADMIN_AUTHORIZE = 'TOKEN_ADMIN_AUTHORIZE';",
          "14:     public static $ADMINISTRATOR_ROLE_ID = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32:     public static function getDataCreateOrUpdateUserAdmin()",
          "33:     {",
          "35:         $username = $name;",
          "36:         $email = \"{$name}@test.com\";",
          "37:         $password = Hash::make($name);",
          "",
          "[Removed Lines]",
          "34:         $name = env(\"BADASO_USER_NAME\", \"badaso.test\");",
          "",
          "[Added Lines]",
          "35:         $name = env('BADASO_USER_NAME', 'badaso.test');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:         $user = User::where('email', $data_create_or_update_user_admin['email'])",
          "61:             ->first();",
          "64:             $user = User::create($data_create_or_update_user_admin);",
          "65:         } else {",
          "66:             $user->update($data_create_or_update_user_admin);",
          "67:         }",
          "69:         $user_role = UserRole::where('user_id', $user->id)->first();",
          "71:             $user_role = UserRole::create(['user_id' => $user->id, 'role_id' => self::$ADMINISTRATOR_ROLE_ID]);",
          "72:         }",
          "74:         return $user;",
          "75:     }",
          "78:     public static function handleUserAdminAuthorize(TestCase $test_case)",
          "79:     {",
          "80:         $user = self::getUserAdminRole();",
          "82:             'email' =>  $user->email,",
          "83:             'password' => $user->name,",
          "85:         ]);",
          "86:         $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "63:         if (!isset($user)) {",
          "70:         if (!isset($user_role)) {",
          "81:         $response = $test_case->json('POST', CallHelperTest::getUrlApiV1Prefix(\"/auth/login\"), [",
          "84:             'remember' => false",
          "",
          "[Added Lines]",
          "64:         if (! isset($user)) {",
          "71:         if (! isset($user_role)) {",
          "81:         $response = $test_case->json('POST', CallHelperTest::getUrlApiV1Prefix('/auth/login'), [",
          "84:             'remember' => false,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "102:     public static function withAuthorizeBearer(TestCase $test_case): TestCase",
          "103:     {",
          "105:     }",
          "108:         Cache::store('file')->set($key, $value);",
          "109:     }",
          "112:         return Cache::store('file')->get($key);",
          "113:     }",
          "116:         Cache::store('file')->clear();",
          "117:     }",
          "118: }",
          "",
          "[Removed Lines]",
          "104:         return $test_case->withHeader(\"Authorization\", self::getTokenUserAdminAuthorizeBearer());",
          "107:     public static function setCache($key, $value){",
          "111:     public static function getCache($key){",
          "115:     public static function clearCache(){",
          "",
          "[Added Lines]",
          "104:         return $test_case->withHeader('Authorization', self::getTokenUserAdminAuthorizeBearer());",
          "107:     public static function setCache($key, $value)",
          "108:     {",
          "112:     public static function getCache($key)",
          "113:     {",
          "117:     public static function clearCache()",
          "118:     {",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: class BadasoApiCrudManagementTest extends TestCase",
          "12: {",
          "13:     private $KEY_LIST_CREATE_TABLES = 'LIST_CREATE_TABLES';",
          "18:     private function getFields(): array",
          "19:     {",
          "",
          "[Removed Lines]",
          "14:     private $KEY_DATA_TABLE_CRUD_MANAGEMENT_LOG = \"DATA_TABLE_CRUD_MANAGEMENT_LOG\";",
          "15:     private $KEY_DATA_RESPONSE_ADD_CRUD_MANAGEMENT = \"DATA_RESPONSE_ADD_CRUD_MANAGEMENT\";",
          "16:     private $TABLE_TEST_PREFIX = \"test_table_\";",
          "",
          "[Added Lines]",
          "14:     private $KEY_DATA_TABLE_CRUD_MANAGEMENT_LOG = 'DATA_TABLE_CRUD_MANAGEMENT_LOG';",
          "15:     private $KEY_DATA_RESPONSE_ADD_CRUD_MANAGEMENT = 'DATA_RESPONSE_ADD_CRUD_MANAGEMENT';",
          "16:     private $TABLE_TEST_PREFIX = 'test_table_';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:         $table_names = [];",
          "132:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "133:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "135:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "136:                     $table->id();",
          "",
          "[Removed Lines]",
          "134:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "134:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:                                 $table_name_relation = $table_names[0];",
          "142:                                 $table->{$schema_type}($badaso_type)->nullable()->unsigned();",
          "145:                             }",
          "146:                         } else {",
          "147:                             $table->{$schema_type}($badaso_type)->nullable();",
          "",
          "[Removed Lines]",
          "144:                                 $table->foreign($badaso_type)->references(\"id\")->on($table_name_relation)->onDelete('cascade');",
          "",
          "[Added Lines]",
          "144:                                 $table->foreign($badaso_type)->references('id')->on($table_name_relation)->onDelete('cascade');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:     public function testBrowseCrudManagement()",
          "182:     {",
          "183:         $response = CallHelperTest::withAuthorizeBearer($this)",
          "185:         $response->assertSuccessful();",
          "187:         $expect_table = config('badaso-watch-tables');",
          "",
          "[Removed Lines]",
          "184:             ->json('GET', CallHelperTest::getUrlApiV1Prefix(\"/crud\"));",
          "",
          "[Added Lines]",
          "184:             ->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud'));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "207:         $data_table_crud_management_log = [];",
          "208:         $data_response_add_crud_management = [];",
          "209:         foreach ($table_names as $index_table_name => $table_name) {",
          "211:             $rows = [",
          "212:                 [",
          "225:                 ],",
          "226:                 [",
          "239:                 ],",
          "240:                 [",
          "253:                 ],",
          "254:                 [",
          "268:             ];",
          "269:             foreach ($const_fields as $key => ['badaso_type' => $badaso_type, 'schema_type' => $schema_type]) {",
          "273:                 $row = [",
          "286:                 ];",
          "288:                 if ($badaso_type == 'relation') {",
          "",
          "[Removed Lines]",
          "213:                     \"field\" => \"id\",",
          "214:                     \"type\" => \"integer\",",
          "215:                     \"displayName\" => \"Id\",",
          "216:                     \"required\" => rand(0, 1),",
          "217:                     \"browse\" => rand(0, 1),",
          "218:                     \"read\" => rand(0, 1),",
          "219:                     \"edit\" => rand(0, 1),",
          "220:                     \"add\" => rand(0, 1),",
          "221:                     \"delete\" => rand(0, 1),",
          "222:                     \"details\" => json_encode((object) []),",
          "223:                     \"order\" => 1,",
          "224:                     \"setRelation\" => false",
          "227:                     \"field\" => \"created_at\",",
          "228:                     \"type\" => \"datetime\",",
          "229:                     \"displayName\" => \"Created At\",",
          "230:                     \"required\" => rand(0, 1),",
          "231:                     \"browse\" => rand(0, 1),",
          "232:                     \"read\" => rand(0, 1),",
          "233:                     \"edit\" => rand(0, 1),",
          "234:                     \"add\" => rand(0, 1),",
          "235:                     \"delete\" => rand(0, 1),",
          "236:                     \"details\" => json_encode((object) []),",
          "237:                     \"order\" => 1,",
          "238:                     \"setRelation\" => false",
          "241:                     \"field\" => \"updated_at\",",
          "242:                     \"type\" => \"datetime\",",
          "243:                     \"displayName\" => \"Update At\",",
          "244:                     \"required\" => rand(0, 1),",
          "245:                     \"browse\" => rand(0, 1),",
          "246:                     \"read\" => rand(0, 1),",
          "247:                     \"edit\" => rand(0, 1),",
          "248:                     \"add\" => rand(0, 1),",
          "249:                     \"delete\" => rand(0, 1),",
          "250:                     \"details\" => json_encode((object) []),",
          "251:                     \"order\" => 1,",
          "252:                     \"setRelation\" => false",
          "255:                     \"field\" => \"deleted_at\",",
          "256:                     \"type\" => \"datetime\",",
          "257:                     \"displayName\" => \"Deleted At\",",
          "258:                     \"required\" => rand(0, 1),",
          "259:                     \"browse\" => rand(0, 1),",
          "260:                     \"read\" => rand(0, 1),",
          "261:                     \"edit\" => rand(0, 1),",
          "262:                     \"add\" => rand(0, 1),",
          "263:                     \"delete\" => rand(0, 1),",
          "264:                     \"details\" => json_encode((object) []),",
          "265:                     \"order\" => 1,",
          "266:                     \"setRelation\" => false",
          "267:                 ]",
          "270:                 if ($index_table_name == 0 && $badaso_type == 'relation') continue;",
          "272:                 $field_name = ucwords(str_replace([\"_\"], \" \", $badaso_type));",
          "274:                     \"field\" => $badaso_type,",
          "275:                     \"type\" => $badaso_type,",
          "276:                     \"displayName\" => $field_name,",
          "277:                     \"required\" => rand(0, 1),",
          "278:                     \"browse\" => rand(0, 1),",
          "279:                     \"read\" => rand(0, 1),",
          "280:                     \"edit\" => rand(0, 1),",
          "281:                     \"add\" => rand(0, 1),",
          "282:                     \"delete\" => rand(0, 1),",
          "283:                     \"details\" => json_encode((object) []),",
          "284:                     \"order\" => 1,",
          "285:                     \"setRelation\" => false",
          "",
          "[Added Lines]",
          "212:                     'field' => 'id',",
          "213:                     'type' => 'integer',",
          "214:                     'displayName' => 'Id',",
          "215:                     'required' => rand(0, 1),",
          "216:                     'browse' => rand(0, 1),",
          "217:                     'read' => rand(0, 1),",
          "218:                     'edit' => rand(0, 1),",
          "219:                     'add' => rand(0, 1),",
          "220:                     'delete' => rand(0, 1),",
          "221:                     'details' => json_encode((object) []),",
          "222:                     'order' => 1,",
          "223:                     'setRelation' => false,",
          "226:                     'field' => 'created_at',",
          "227:                     'type' => 'datetime',",
          "228:                     'displayName' => 'Created At',",
          "229:                     'required' => rand(0, 1),",
          "230:                     'browse' => rand(0, 1),",
          "231:                     'read' => rand(0, 1),",
          "232:                     'edit' => rand(0, 1),",
          "233:                     'add' => rand(0, 1),",
          "234:                     'delete' => rand(0, 1),",
          "235:                     'details' => json_encode((object) []),",
          "236:                     'order' => 1,",
          "237:                     'setRelation' => false,",
          "240:                     'field' => 'updated_at',",
          "241:                     'type' => 'datetime',",
          "242:                     'displayName' => 'Update At',",
          "243:                     'required' => rand(0, 1),",
          "244:                     'browse' => rand(0, 1),",
          "245:                     'read' => rand(0, 1),",
          "246:                     'edit' => rand(0, 1),",
          "247:                     'add' => rand(0, 1),",
          "248:                     'delete' => rand(0, 1),",
          "249:                     'details' => json_encode((object) []),",
          "250:                     'order' => 1,",
          "251:                     'setRelation' => false,",
          "254:                     'field' => 'deleted_at',",
          "255:                     'type' => 'datetime',",
          "256:                     'displayName' => 'Deleted At',",
          "257:                     'required' => rand(0, 1),",
          "258:                     'browse' => rand(0, 1),",
          "259:                     'read' => rand(0, 1),",
          "260:                     'edit' => rand(0, 1),",
          "261:                     'add' => rand(0, 1),",
          "262:                     'delete' => rand(0, 1),",
          "263:                     'details' => json_encode((object) []),",
          "264:                     'order' => 1,",
          "265:                     'setRelation' => false,",
          "266:                 ],",
          "269:                 if ($index_table_name == 0 && $badaso_type == 'relation') {",
          "270:                     continue;",
          "271:                 }",
          "273:                 $field_name = ucwords(str_replace(['_'], ' ', $badaso_type));",
          "275:                     'field' => $badaso_type,",
          "276:                     'type' => $badaso_type,",
          "277:                     'displayName' => $field_name,",
          "278:                     'required' => rand(0, 1),",
          "279:                     'browse' => rand(0, 1),",
          "280:                     'read' => rand(0, 1),",
          "281:                     'edit' => rand(0, 1),",
          "282:                     'add' => rand(0, 1),",
          "283:                     'delete' => rand(0, 1),",
          "284:                     'details' => json_encode((object) []),",
          "285:                     'order' => 1,",
          "286:                     'setRelation' => false,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "298:             }",
          "299:             $data_table_crud_management_log[$index_table_name]['rows'] = $rows;",
          "302:             $model_data = [];",
          "303:             if (rand(0, 1)) {",
          "306:                 $model_file_name = \"{$model_name}.php\";",
          "307:                 $model_body = <<<PHP",
          "308:                 <?php",
          "",
          "[Removed Lines]",
          "301:             $model = \"\";",
          "305:                 $model_name = str_replace([\" \", \"_\"], \"\", ucwords($table_name));",
          "",
          "[Added Lines]",
          "302:             $model = '';",
          "306:                 $model_name = str_replace([' ', '_'], '', ucwords($table_name));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "315:                 }",
          "316:                 PHP;",
          "317:                 $model_path = app_path(\"Models/$model_file_name\");",
          "319:                     file_put_contents($model_path, $model_body);",
          "320:                 }",
          "",
          "[Removed Lines]",
          "318:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "319:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "332:             }",
          "333:             $data_table_crud_management_log[$index_table_name]['model'] = $model_data;",
          "336:             $controller_data = [];",
          "337:             if (rand(0, 1)) {",
          "340:                 $controller_file_name = \"{$controller_name}.php\";",
          "341:                 $controller_body = <<<PHP",
          "342:                 <?php",
          "",
          "[Removed Lines]",
          "335:             $controller = \"\";",
          "339:                 $controller_name = str_replace([\" \", \"_\"], \"\", ucwords($table_name)) . \"Controller\";",
          "",
          "[Added Lines]",
          "336:             $controller = '';",
          "340:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "345:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "346:                 PHP;",
          "347:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "349:                     file_put_contents($controller_path, $controller_body);",
          "350:                 }",
          "",
          "[Removed Lines]",
          "348:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "349:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "362:             }",
          "363:             $data_table_crud_management_log[$index_table_name]['controller'] = $controller_data;",
          "366:             $request_body = [",
          "386:             ];",
          "388:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "365:             $table_label = ucwords(str_replace([\"_\"], \" \", $table_name));",
          "367:                 \"name\" =>  $table_name,",
          "368:                 \"slug\" =>  $table_name,",
          "369:                 \"displayNameSingular\" =>  $table_label,",
          "370:                 \"displayNamePlural\" =>  $table_label,",
          "371:                 \"icon\" =>  \"add\",",
          "372:                 \"modelName\" =>  $model,",
          "373:                 \"policyName\" =>  \"\",",
          "374:                 \"description\" => \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",",
          "375:                 \"generatePermissions\" =>  rand(0, 1),",
          "376:                 \"createSoftDelete\" =>  rand(0, 1),",
          "377:                 \"serverSide\" =>  rand(0, 1),",
          "378:                 \"details\" =>  json_encode((object)[]),",
          "379:                 \"controller\" =>  $controller,",
          "380:                 \"orderColumn\" =>  \"\",",
          "381:                 \"orderDisplayColumn\" =>  \"\",",
          "382:                 \"orderDirection\" =>  \"\",",
          "383:                 \"notification\" =>   array_slice([\"onCreate\", \"onDelete\", \"onUpdate\", \"onRead\"], 0, rand(0, 3)),",
          "384:                 \"isMaintenance\" => rand(0, 1),",
          "385:                 \"rows\" => $rows,",
          "387:             $response = CallHelperTest::withAuthorizeBearer($this)->json(\"POST\", CallHelperTest::getUrlApiV1Prefix('/crud/add'), $request_body);",
          "",
          "[Added Lines]",
          "366:             $table_label = ucwords(str_replace(['_'], ' ', $table_name));",
          "368:                 'name' =>  $table_name,",
          "369:                 'slug' =>  $table_name,",
          "370:                 'displayNameSingular' =>  $table_label,",
          "371:                 'displayNamePlural' =>  $table_label,",
          "372:                 'icon' =>  'add',",
          "373:                 'modelName' =>  $model,",
          "374:                 'policyName' =>  '',",
          "375:                 'description' => 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',",
          "376:                 'generatePermissions' =>  rand(0, 1),",
          "377:                 'createSoftDelete' =>  rand(0, 1),",
          "378:                 'serverSide' =>  rand(0, 1),",
          "379:                 'details' =>  json_encode((object) []),",
          "380:                 'controller' =>  $controller,",
          "381:                 'orderColumn' =>  '',",
          "382:                 'orderDisplayColumn' =>  '',",
          "383:                 'orderDirection' =>  '',",
          "384:                 'notification' =>   array_slice(['onCreate', 'onDelete', 'onUpdate', 'onRead'], 0, rand(0, 3)),",
          "385:                 'isMaintenance' => rand(0, 1),",
          "386:                 'rows' => $rows,",
          "388:             $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/crud/add'), $request_body);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "405:             $table_name = $data_response_add_crud_management['name'];",
          "406:             $rows = $data_response_add_crud_management['dataRows'];",
          "411:             $model_data = [];",
          "412:             if (rand(0, 1)) {",
          "415:                 $model_file_name = \"{$model_name}.php\";",
          "416:                 $model_body = <<<PHP",
          "417:                 <?php",
          "",
          "[Removed Lines]",
          "408:             $table_label = ucwords(str_replace([\"_\"], \" \", $table_name));",
          "410:             $model = \"\";",
          "414:                 $model_name = str_replace([\" \", \"_\"], \"\", ucwords($table_name));",
          "",
          "[Added Lines]",
          "409:             $table_label = ucwords(str_replace(['_'], ' ', $table_name));",
          "411:             $model = '';",
          "415:                 $model_name = str_replace([' ', '_'], '', ucwords($table_name));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "424:                 }",
          "425:                 PHP;",
          "426:                 $model_path = app_path(\"Models/$model_file_name\");",
          "428:                     file_put_contents($model_path, $model_body);",
          "429:                 }",
          "",
          "[Removed Lines]",
          "427:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "428:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "441:             }",
          "442:             $data_table_crud_management_log[$index]['model'] = $model_data;",
          "445:             $controller_data = [];",
          "446:             if (rand(0, 1)) {",
          "449:                 $controller_file_name = \"{$controller_name}.php\";",
          "450:                 $controller_body = <<<PHP",
          "451:                 <?php",
          "",
          "[Removed Lines]",
          "444:             $controller = \"\";",
          "448:                 $controller_name = str_replace([\" \", \"_\"], \"\", ucwords($table_name)) . \"Controller\";",
          "",
          "[Added Lines]",
          "445:             $controller = '';",
          "449:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "454:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "455:                 PHP;",
          "456:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "458:                     file_put_contents($controller_path, $controller_body);",
          "459:                 }",
          "",
          "[Removed Lines]",
          "457:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "458:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "472:             $data_table_crud_management_log[$index]['controller'] = $controller_data;",
          "474:             $request_body = [",
          "493:             ];",
          "495:             foreach ($request_body as $key => $value) {",
          "496:                 $data_response_add_crud_management[$key] = $value;",
          "497:             }",
          "500:             $response->assertSuccessful();",
          "501:         }",
          "",
          "[Removed Lines]",
          "475:                 \"name\" =>  $table_name,",
          "476:                 \"slug\" =>  $table_name,",
          "477:                 \"displayNameSingular\" =>  $table_label . \"(update)\",",
          "478:                 \"displayNamePlural\" =>  $table_label . \"(update)\",",
          "479:                 \"icon\" =>  \"add\",",
          "480:                 \"modelName\" =>  $model,",
          "481:                 \"policyName\" =>  \"\",",
          "482:                 \"description\" => \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. (update)\",",
          "483:                 \"generatePermissions\" =>  rand(0, 1),",
          "484:                 \"createSoftDelete\" =>  rand(0, 1),",
          "485:                 \"serverSide\" =>  rand(0, 1),",
          "486:                 \"details\" =>  json_encode((object)[]),",
          "487:                 \"controller\" =>  $controller,",
          "488:                 \"orderColumn\" =>  \"\",",
          "489:                 \"orderDisplayColumn\" =>  \"\",",
          "490:                 \"orderDirection\" =>  \"\",",
          "491:                 \"notification\" =>   array_slice([\"onCreate\", \"onDelete\", \"onUpdate\", \"onRead\"], 0, rand(0, 0)),",
          "492:                 \"rows\" => $rows,",
          "499:             $response = CallHelperTest::withAuthorizeBearer($this)->json(\"PUT\", CallHelperTest::getUrlApiV1Prefix('/crud/edit'), $data_response_add_crud_management);",
          "",
          "[Added Lines]",
          "476:                 'name' =>  $table_name,",
          "477:                 'slug' =>  $table_name,",
          "478:                 'displayNameSingular' =>  $table_label.'(update)',",
          "479:                 'displayNamePlural' =>  $table_label.'(update)',",
          "480:                 'icon' =>  'add',",
          "481:                 'modelName' =>  $model,",
          "482:                 'policyName' =>  '',",
          "483:                 'description' => 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. (update)',",
          "484:                 'generatePermissions' =>  rand(0, 1),",
          "485:                 'createSoftDelete' =>  rand(0, 1),",
          "486:                 'serverSide' =>  rand(0, 1),",
          "487:                 'details' =>  json_encode((object) []),",
          "488:                 'controller' =>  $controller,",
          "489:                 'orderColumn' =>  '',",
          "490:                 'orderDisplayColumn' =>  '',",
          "491:                 'orderDirection' =>  '',",
          "492:                 'notification' =>   array_slice(['onCreate', 'onDelete', 'onUpdate', 'onRead'], 0, rand(0, 0)),",
          "493:                 'rows' => $rows,",
          "500:             $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/crud/edit'), $data_response_add_crud_management);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "511:             $request_body = $data_table_crud_management_log['request_body'];",
          "512:             $name = $request_body['name'];",
          "515:                 'table' => $name,",
          "516:             ]);",
          "517:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "514:             $response = CallHelperTest::withAuthorizeBearer($this)->json(\"GET\", CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "[Added Lines]",
          "515:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read'), [",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "526:             $request_body = $data_table_crud_management_log['request_body'];",
          "527:             $slug = $request_body['slug'];",
          "530:                 'slug' => $slug,",
          "531:             ]);",
          "532:             $response->assertSuccessful();",
          "",
          "[Removed Lines]",
          "529:             $response = CallHelperTest::withAuthorizeBearer($this)->json(\"GET\", CallHelperTest::getUrlApiV1Prefix('/crud/read-by-slug'), [",
          "",
          "[Added Lines]",
          "530:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/crud/read-by-slug'), [",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "540:         $data_types = DataType::whereIn('name', $tables)->get();",
          "541:         foreach ($data_types as $key => $data_type) {",
          "542:             $table_name = $data_type['name'];",
          "545:             $id = $data_type->id;",
          "547:                 'id' => $id,",
          "548:             ]);",
          "549:             $response->assertSuccessful();",
          "552:             $controller_name = \"{$name}Controller.php\";",
          "554:             if (file_exists($controller_path)) {",
          "555:                 unlink($controller_path);",
          "556:             }",
          "559:             $model_name = \"{$name}.php\";",
          "561:             if (file_exists($model_path)) {",
          "562:                 unlink($model_path);",
          "563:             }",
          "",
          "[Removed Lines]",
          "543:             $name = ucwords(str_replace(\"_\", \"\", $table_name));",
          "546:             $response = CallHelperTest::withAuthorizeBearer($this)->json(\"DELETE\", CallHelperTest::getUrlApiV1Prefix('/crud/delete'), [",
          "553:             $controller_path = app_path(\"Http/Controllers/\" . $controller_name);",
          "560:             $model_path = app_path(\"Models/\" . $model_name);",
          "",
          "[Added Lines]",
          "544:             $name = ucwords(str_replace('_', '', $table_name));",
          "547:             $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/crud/delete'), [",
          "554:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "561:             $model_path = app_path('Models/'.$model_name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "406d351d447244c9c6666273be8919acc2f13d50",
      "candidate_info": {
        "commit_hash": "406d351d447244c9c6666273be8919acc2f13d50",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/406d351d447244c9c6666273be8919acc2f13d50",
        "files": [
          "src/Controllers/BadasoCRUDController.php",
          "src/Helpers/GetData.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/BadasoCRUDController.php||src/Controllers/BadasoCRUDController.php": [
          "File: src/Controllers/BadasoCRUDController.php -> src/Controllers/BadasoCRUDController.php"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:                 ];",
          "311:                 if (count($destination_table_display_more_column) > 0) {",
          "315:                             $arr_query_select[] = $item_destination_table_display_more_column;",
          "316:                         }",
          "317:                     }",
          "",
          "[Removed Lines]",
          "312:                     foreach ($destination_table_display_more_column as $index =>",
          "313:                         $item_destination_table_display_more_column) {",
          "314:                         if (!in_array($item_destination_table_display_more_column, $arr_query_select)) {",
          "",
          "[Added Lines]",
          "312:                     foreach ($destination_table_display_more_column as $index => $item_destination_table_display_more_column) {",
          "313:                         if (! in_array($item_destination_table_display_more_column, $arr_query_select)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f5e97105ba9999ece876e5942f363d0aea54ffab",
      "candidate_info": {
        "commit_hash": "f5e97105ba9999ece876e5942f363d0aea54ffab",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/f5e97105ba9999ece876e5942f363d0aea54ffab",
        "files": [
          "src/ContentManager/ContentGenerator.php",
          "src/ContentManager/ContentManager.php",
          "src/ContentManager/FileGenerator.php",
          "src/ContentManager/FileSystem.php",
          "src/Controllers/BadasoAuthController.php",
          "src/Database/DatabaseUpdater.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/ContentManager/ContentGenerator.php||src/ContentManager/ContentGenerator.php",
          "src/ContentManager/ContentManager.php||src/ContentManager/ContentManager.php",
          "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php",
          "src/ContentManager/FileSystem.php||src/ContentManager/FileSystem.php",
          "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php",
          "src/Database/DatabaseUpdater.php||src/Database/DatabaseUpdater.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/ContentManager/ContentGenerator.php||src/ContentManager/ContentGenerator.php": [
          "File: src/ContentManager/ContentGenerator.php -> src/ContentManager/ContentGenerator.php"
        ],
        "src/ContentManager/ContentManager.php||src/ContentManager/ContentManager.php": [
          "File: src/ContentManager/ContentManager.php -> src/ContentManager/ContentManager.php"
        ],
        "src/ContentManager/FileGenerator.php||src/ContentManager/FileGenerator.php": [
          "File: src/ContentManager/FileGenerator.php -> src/ContentManager/FileGenerator.php"
        ],
        "src/ContentManager/FileSystem.php||src/ContentManager/FileSystem.php": [
          "File: src/ContentManager/FileSystem.php -> src/ContentManager/FileSystem.php"
        ],
        "src/Controllers/BadasoAuthController.php||src/Controllers/BadasoAuthController.php": [
          "File: src/Controllers/BadasoAuthController.php -> src/Controllers/BadasoAuthController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: use Illuminate\\Support\\Facades\\DB;",
          "8: use Illuminate\\Support\\Facades\\Hash;",
          "9: use Illuminate\\Support\\Facades\\Mail;",
          "11: use stdClass;",
          "12: use Tymon\\JWTAuth\\Exceptions\\JWTException;",
          "13: use Uasoft\\Badaso\\Exceptions\\SingleException;",
          "",
          "[Removed Lines]",
          "10: use PHPOpenSourceSaver\\JWTAuth\\Contracts\\Providers\\Auth;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Database/DatabaseUpdater.php||src/Database/DatabaseUpdater.php": [
          "File: src/Database/DatabaseUpdater.php -> src/Database/DatabaseUpdater.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Uasoft\\Badaso\\Database;",
          "6: use Doctrine\\DBAL\\Schema\\SchemaException;",
          "7: use Doctrine\\DBAL\\Schema\\TableDiff;",
          "8: use Uasoft\\Badaso\\Database\\Schema\\SchemaManager;",
          "",
          "[Removed Lines]",
          "5: use Doctrine\\DBAL\\Schema\\Column;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:         $table_names = [];",
          "247:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "248:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "250:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "251:                     $table->id();",
          "",
          "[Removed Lines]",
          "249:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "249:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:                 }",
          "440:                 PHP;",
          "441:                 $model_path = app_path(\"Models/$model_file_name\");",
          "443:                     file_put_contents($model_path, $model_body);",
          "444:                 }",
          "",
          "[Removed Lines]",
          "442:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "442:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "460:             $controller_data = [];",
          "461:             if (rand(0, 1)) {",
          "464:                 $controller_file_name = \"{$controller_name}.php\";",
          "465:                 $controller_body = <<<PHP",
          "466:                 <?php",
          "",
          "[Removed Lines]",
          "463:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "463:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "469:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "470:                 PHP;",
          "471:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "473:                     file_put_contents($controller_path, $controller_body);",
          "474:                 }",
          "",
          "[Removed Lines]",
          "472:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "472:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "526:         $table_names = 'table_public';",
          "527:         Schema::dropIfExists($table_names);",
          "530:                 $table->id();",
          "531:                 $table->text('name')->nullable();",
          "532:                 $table->bigInteger('user_id')->nullable()->unsigned();",
          "534:                 $table->softDeletes();",
          "535:                 $table->timestamps();",
          "536:             });",
          "",
          "[Removed Lines]",
          "528:         if (!Schema::hasTable($table_names)) {",
          "529:             Schema::create($table_names, function (Blueprint $table) use ($table_names) {",
          "533:                 $table->foreign('user_id')->references('id')->on(config('badaso.database.prefix') . 'users')->onDelete('cascade');",
          "",
          "[Added Lines]",
          "528:         if (! Schema::hasTable($table_names)) {",
          "529:             Schema::create($table_names, function (Blueprint $table) {",
          "533:                 $table->foreign('user_id')->references('id')->on(config('badaso.database.prefix').'users')->onDelete('cascade');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "651:         $response->assertSuccessful();",
          "655:         foreach ($permissions as $key => $value) {",
          "656:             $permission_id = $value->id;",
          "657:         }",
          "658:         $request_data = [",
          "659:             'always_allow' =>  false,",
          "660:             'is_public' =>  true,",
          "662:             'id' => $permission_id,",
          "663:         ];",
          "664:         $response_permission = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/permissions/edit'), $request_data);",
          "",
          "[Removed Lines]",
          "654:         $permissions = Permission::where('key', 'browse_' . $table_name)->get();",
          "661:             'key' =>  'browse_' . $table_name,",
          "",
          "[Added Lines]",
          "654:         $permissions = Permission::where('key', 'browse_'.$table_name)->get();",
          "661:             'key' =>  'browse_'.$table_name,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1090:             if ($table['table'] == 'table_relation') {",
          "1091:                 for ($i = 0; $i < 2; $i++) {",
          "1092:                     $field[$i] = [",
          "1095:                         'fieldType' => 'bigint',",
          "1096:                         'fieldLength' => null,",
          "1097:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1093:                         'id' => $name_table[$i] . '_id',",
          "1094:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "[Added Lines]",
          "1093:                         'id' => $name_table[$i].'_id',",
          "1094:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1104:                     array_push($table['rows'], $field[$i]);",
          "1105:                 }",
          "1106:                 $table['relations'] = [",
          "1109:                         'target_table' => $name_table[1],",
          "1110:                         'target_field' => 'id',",
          "1111:                         'on_delete' => 'cascade',",
          "1112:                         'on_update' => 'restrict',",
          "1113:                     ],",
          "1116:                         'target_table' => $name_table[0],",
          "1117:                         'target_field' => 'id',",
          "1118:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1107:                     $name_table[1] . '_id' => [",
          "1108:                         'source_field' => $name_table[1] . '_id',",
          "1114:                     $name_table[0] . '_id' => [",
          "1115:                         'source_field' => $name_table[0] . '_id',",
          "",
          "[Added Lines]",
          "1107:                     $name_table[1].'_id' => [",
          "1108:                         'source_field' => $name_table[1].'_id',",
          "1114:                     $name_table[0].'_id' => [",
          "1115:                         'source_field' => $name_table[0].'_id',",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1126:         foreach ($name_table as $key => $crud_table) {",
          "1127:             $crud_table = [",
          "1128:                 'name' => $crud_table,",
          "1130:                 'displayNameSingular' => $crud_table,",
          "1131:                 'displayNamePlural' => $crud_table,",
          "1132:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1129:                 'slug' => 'table-' . $key + 1,",
          "",
          "[Added Lines]",
          "1129:                 'slug' => 'table-'.$key + 1,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1253:         foreach ($name_table as $key => $table) {",
          "1254:             if ($table == 'table-2') {",
          "1255:                 for ($i = 1; $i < 4; $i++) {",
          "1257:                         'data' => [",
          "1259:                         ],",
          "1260:                     ]);",
          "1261:                 }",
          "1262:             } else {",
          "1264:                 $response->assertSuccessful();",
          "1265:             }",
          "1266:         }",
          "1270:         $response->assertSuccessful();",
          "1271:         $data_browse = $response['data']['data'][0];",
          "1275:             'data' => [",
          "1276:                 'id' => $data_browse['id'],",
          "1277:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1256:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1258:                             'name' => 'option ' . $i,",
          "1263:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1269:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1274:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "[Added Lines]",
          "1256:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1258:                             'name' => 'option '.$i,",
          "1263:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1269:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1274:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1281:         $response->assertSuccessful();",
          "1285:             'slug' => $table,",
          "1286:             'data' => [",
          "1287:                 [",
          "",
          "[Removed Lines]",
          "1284:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "[Added Lines]",
          "1284:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1647:                 }",
          "1648:                 PHP;",
          "1649:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1651:                     file_put_contents($model_path, $model_body);",
          "1652:                 }",
          "",
          "[Removed Lines]",
          "1650:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1650:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1668:             $controller_data = [];",
          "1669:             if (rand(0, 1)) {",
          "1672:                 $controller_file_name = \"{$controller_name}.php\";",
          "1673:                 $controller_body = <<<PHP",
          "1674:                 <?php",
          "",
          "[Removed Lines]",
          "1671:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1671:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1677:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1678:                 PHP;",
          "1679:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1681:                     file_put_contents($controller_path, $controller_body);",
          "1682:                 }",
          "",
          "[Removed Lines]",
          "1680:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1680:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1697:             $request_body = [",
          "1698:                 'name' =>  $table_name,",
          "1699:                 'slug' =>  $table_name,",
          "1702:                 'icon' =>  'add',",
          "1703:                 'modelName' =>  $model,",
          "1704:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "1700:                 'displayNameSingular' =>  $table_label . '(update)',",
          "1701:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "[Added Lines]",
          "1700:                 'displayNameSingular' =>  $table_label.'(update)',",
          "1701:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1784:             $controller_name = \"{$name}Controller.php\";",
          "1786:             if (file_exists($controller_path)) {",
          "1787:                 unlink($controller_path);",
          "1788:             }",
          "1791:             $model_name = \"{$name}.php\";",
          "1793:             if (file_exists($model_path)) {",
          "1794:                 unlink($model_path);",
          "1795:             }",
          "",
          "[Removed Lines]",
          "1785:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "1792:             $model_path = app_path('Models/' . $model_name);",
          "",
          "[Added Lines]",
          "1785:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "1792:             $model_path = app_path('Models/'.$model_name);",
          "",
          "---------------"
        ]
      }
    }
  ]
}