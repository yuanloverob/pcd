{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9feb582b5e101576677dcc49fe6dcf009aa22c6a",
      "candidate_info": {
        "commit_hash": "9feb582b5e101576677dcc49fe6dcf009aa22c6a",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9feb582b5e101576677dcc49fe6dcf009aa22c6a",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java"
        ],
        "message": "PDFBOX-4892: avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883233 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:         if (!cMap.hasCIDMappings() && cMap.hasUnicodeMappings())",
          "209:         {",
          "211:         }",
          "213:         return cMap.toCID(code);",
          "",
          "[Removed Lines]",
          "210:             return cMap.toUnicode(code).codePointAt(0); // actually: code -> CID",
          "",
          "[Added Lines]",
          "210:             String unicode = cMap.toUnicode(code);",
          "211:             if (unicode != null)",
          "212:             {",
          "213:                 return unicode.codePointAt(0); // actually: code -> CID",
          "214:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b3658c84f8a139dd02a592dacc1f217fe95503c",
      "candidate_info": {
        "commit_hash": "6b3658c84f8a139dd02a592dacc1f217fe95503c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6b3658c84f8a139dd02a592dacc1f217fe95503c",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java"
        ],
        "message": "PDFBOX-5236: allow general graphics state operators within text mode\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891431 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java",
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1258:     public void setLineWidth(float lineWidth) throws IOException",
          "1259:     {",
          "1264:         writeOperand(lineWidth);",
          "1265:         writeOperator(OperatorName.SET_LINE_WIDTH);",
          "1266:     }",
          "",
          "[Removed Lines]",
          "1260:         if (inTextMode)",
          "1261:         {",
          "1262:             throw new IllegalStateException(\"Error: setLineWidth is not allowed within a text block.\");",
          "1263:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1276:     public void setLineJoinStyle(int lineJoinStyle) throws IOException",
          "1277:     {",
          "1282:         if (lineJoinStyle >= 0 && lineJoinStyle <= 2)",
          "1283:         {",
          "1284:             writeOperand(lineJoinStyle);",
          "",
          "[Removed Lines]",
          "1278:         if (inTextMode)",
          "1279:         {",
          "1280:             throw new IllegalStateException(\"Error: setLineJoinStyle is not allowed within a text block.\");",
          "1281:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1301:     public void setLineCapStyle(int lineCapStyle) throws IOException",
          "1302:     {",
          "1307:         if (lineCapStyle >= 0 && lineCapStyle <= 2)",
          "1308:         {",
          "1309:             writeOperand(lineCapStyle);",
          "",
          "[Removed Lines]",
          "1303:         if (inTextMode)",
          "1304:         {",
          "1305:             throw new IllegalStateException(\"Error: setLineCapStyle is not allowed within a text block.\");",
          "1306:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1326:     public void setLineDashPattern(float[] pattern, float phase) throws IOException",
          "1327:     {",
          "1332:         write(\"[\");",
          "1333:         for (float value : pattern)",
          "1334:         {",
          "",
          "[Removed Lines]",
          "1328:         if (inTextMode)",
          "1329:         {",
          "1330:             throw new IllegalStateException(\"Error: setLineDashPattern is not allowed within a text block.\");",
          "1331:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1348:     public void setMiterLimit(float miterLimit) throws IOException",
          "1349:     {",
          "1354:         if (miterLimit <= 0.0)",
          "1355:         {",
          "1356:             throw new IllegalArgumentException(\"A miter limit <= 0 is invalid and will not render in Acrobat Reader\");",
          "",
          "[Removed Lines]",
          "1350:         if (inTextMode)",
          "1351:         {",
          "1352:             throw new IllegalStateException(\"Error: setMiterLimit is not allowed within a text block.\");",
          "1353:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "2171:     public void setLineWidth(float lineWidth) throws IOException",
          "2172:     {",
          "2177:         writeOperand(lineWidth);",
          "2178:         writeOperator(OperatorName.SET_LINE_WIDTH);",
          "2179:     }",
          "",
          "[Removed Lines]",
          "2173:         if (inTextMode)",
          "2174:         {",
          "2175:             throw new IllegalStateException(\"Error: setLineWidth is not allowed within a text block.\");",
          "2176:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2189:     public void setLineJoinStyle(int lineJoinStyle) throws IOException",
          "2190:     {",
          "2195:         if (lineJoinStyle >= 0 && lineJoinStyle <= 2)",
          "2196:         {",
          "2197:             writeOperand(lineJoinStyle);",
          "",
          "[Removed Lines]",
          "2191:         if (inTextMode)",
          "2192:         {",
          "2193:             throw new IllegalStateException(\"Error: setLineJoinStyle is not allowed within a text block.\");",
          "2194:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2214:     public void setLineCapStyle(int lineCapStyle) throws IOException",
          "2215:     {",
          "2220:         if (lineCapStyle >= 0 && lineCapStyle <= 2)",
          "2221:         {",
          "2222:             writeOperand(lineCapStyle);",
          "",
          "[Removed Lines]",
          "2216:         if (inTextMode)",
          "2217:         {",
          "2218:             throw new IllegalStateException(\"Error: setLineCapStyle is not allowed within a text block.\");",
          "2219:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2239:     public void setLineDashPattern(float[] pattern, float phase) throws IOException",
          "2240:     {",
          "2245:         write(\"[\");",
          "2246:         for (float value : pattern)",
          "2247:         {",
          "",
          "[Removed Lines]",
          "2241:         if (inTextMode)",
          "2242:         {",
          "2243:             throw new IllegalStateException(\"Error: setLineDashPattern is not allowed within a text block.\");",
          "2244:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2261:     public void setMiterLimit(float miterLimit) throws IOException",
          "2262:     {",
          "2267:         if (miterLimit <= 0.0)",
          "2268:         {",
          "2269:             throw new IllegalArgumentException(\"A miter limit <= 0 is invalid and will not render in Acrobat Reader\");",
          "",
          "[Removed Lines]",
          "2263:         if (inTextMode)",
          "2264:         {",
          "2265:             throw new IllegalStateException(\"Error: setMiterLimit is not allowed within a text block.\");",
          "2266:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/TestPDPageContentStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.pdfbox.cos.COSNumber;",
          "26: import org.apache.pdfbox.pdfparser.PDFStreamParser;",
          "27: import org.apache.pdfbox.pdmodel.PDPageContentStream.AppendMode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:         contentStream.close();",
          "179:         doc.close();",
          "180:     }",
          "181: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188:     public void testGeneralGraphicStateOperatorTextMode() throws IOException",
          "189:     {",
          "190:         PDDocument doc = new PDDocument();",
          "191:         PDPage page = new PDPage();",
          "192:         doc.addPage(page);",
          "193:         PDPageContentStream contentStream = new PDPageContentStream(doc, page);",
          "194:         contentStream.beginText();",
          "196:         contentStream.setLineCapStyle(0);",
          "198:         contentStream.setLineJoinStyle(0);",
          "200:         contentStream.setLineWidth(10f);",
          "202:         contentStream.setLineDashPattern(new float[] { 2, 1 }, 0f);",
          "204:         contentStream.setMiterLimit(1.0f);",
          "206:         contentStream.setGraphicsStateParameters(new PDExtendedGraphicsState());",
          "208:         contentStream.endText();",
          "209:         contentStream.close();",
          "210:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7f77270f656d20a59f75e799642fbe3fbe4f660",
      "candidate_info": {
        "commit_hash": "f7f77270f656d20a59f75e799642fbe3fbe4f660",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f7f77270f656d20a59f75e799642fbe3fbe4f660",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5168: fix syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888856 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "770:                     {",
          "771:                         return new Area();",
          "772:                     }",
          "774:             }",
          "775:         }",
          "776:         float phaseStart = dashPattern.getPhase();",
          "",
          "[Removed Lines]",
          "773:                 }",
          "",
          "[Added Lines]",
          "773:                 };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e54c989743a70ccefeddc748c43d67becdbe215d",
      "candidate_info": {
        "commit_hash": "e54c989743a70ccefeddc748c43d67becdbe215d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e54c989743a70ccefeddc748c43d67becdbe215d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ],
        "message": "PDFBOX-4892: refactor / reformat / simplify confusing code; avoid ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887894 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: import java.util.ArrayList;",
          "25: import java.util.List;",
          "26: import java.util.Map;",
          "27: import org.apache.pdfbox.cos.COSArray;",
          "28: import org.apache.pdfbox.cos.COSBase;",
          "29: import org.apache.pdfbox.cos.COSDictionary;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.commons.logging.Log;",
          "29: import org.apache.commons.logging.LogFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: public class PDStream implements COSObjectable",
          "48: {",
          "49:     private final COSStream stream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:     private static final Log LOG = LogFactory.getLog(PDStream.class);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "344:     public List<Object> getDecodeParms() throws IOException",
          "345:     {",
          "355:         if (dp instanceof COSDictionary)",
          "356:         {",
          "363:         {",
          "364:             COSArray array = (COSArray) dp;",
          "365:             List<Object> actuals = new ArrayList<Object>(array.size());",
          "366:             for (int i = 0; i < array.size(); i++)",
          "367:             {",
          "371:             }",
          "373:         }",
          "376:     }",
          "",
          "[Removed Lines]",
          "346:         List<Object> retval = null;",
          "348:         COSBase dp = stream.getDictionaryObject(COSName.DECODE_PARMS);",
          "349:         if (dp == null)",
          "350:         {",
          "353:             dp = stream.getDictionaryObject(COSName.DP);",
          "354:         }",
          "357:             Map<?, ?> map = COSDictionaryMap",
          "358:                     .convertBasicTypesToMap((COSDictionary) dp);",
          "359:             retval = new COSArrayList<Object>(map, dp, stream,",
          "360:                     COSName.DECODE_PARMS);",
          "361:         }",
          "362:         else if (dp instanceof COSArray)",
          "368:                 actuals.add(COSDictionaryMap",
          "369:                         .convertBasicTypesToMap((COSDictionary) array",
          "370:                                 .getObject(i)));",
          "372:             retval = new COSArrayList<Object>(actuals, array);",
          "375:         return retval;",
          "",
          "[Added Lines]",
          "352:         COSBase dp = stream.getDictionaryObject(COSName.DECODE_PARMS, COSName.DP);",
          "355:             Map<?, ?> map = COSDictionaryMap.convertBasicTypesToMap((COSDictionary) dp);",
          "356:             return new COSArrayList<Object>(map, dp, stream, COSName.DECODE_PARMS);",
          "357:         }",
          "359:         if (dp instanceof COSArray)",
          "365:                 COSBase base = array.getObject(i);",
          "366:                 if (base instanceof COSDictionary)",
          "367:                 {",
          "368:                     actuals.add(COSDictionaryMap.convertBasicTypesToMap((COSDictionary) base));",
          "369:                 }",
          "370:                 else",
          "371:                 {",
          "372:                     LOG.warn(\"Expected COSDictionary, got \" + base + \", ignored\");",
          "373:                 }",
          "375:             return new COSArrayList<Object>(actuals, array);",
          "378:         return null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "454:     public List<Object> getFileDecodeParams() throws IOException",
          "455:     {",
          "458:         COSBase dp = stream.getDictionaryObject(COSName.F_DECODE_PARMS);",
          "459:         if (dp instanceof COSDictionary)",
          "460:         {",
          "467:         {",
          "468:             COSArray array = (COSArray) dp;",
          "469:             List<Object> actuals = new ArrayList<Object>(array.size());",
          "470:             for (int i = 0; i < array.size(); i++)",
          "471:             {",
          "475:             }",
          "477:         }",
          "480:     }",
          "",
          "[Removed Lines]",
          "456:         List<Object> retval = null;",
          "461:             Map<?, ?> map = COSDictionaryMap",
          "462:                     .convertBasicTypesToMap((COSDictionary) dp);",
          "463:             retval = new COSArrayList<Object>(map, dp, stream,",
          "464:                     COSName.F_DECODE_PARMS);",
          "465:         }",
          "466:         else if (dp instanceof COSArray)",
          "472:                 actuals.add(COSDictionaryMap",
          "473:                         .convertBasicTypesToMap((COSDictionary) array",
          "474:                                 .getObject(i)));",
          "476:             retval = new COSArrayList<Object>(actuals, array);",
          "479:         return retval;",
          "",
          "[Added Lines]",
          "462:             Map<?, ?> map = COSDictionaryMap.convertBasicTypesToMap((COSDictionary) dp);",
          "463:             return new COSArrayList<Object>(map, dp, stream, COSName.F_DECODE_PARMS);",
          "464:         }",
          "466:         if (dp instanceof COSArray)",
          "472:                 COSBase base = array.getObject(i);",
          "473:                 if (base instanceof COSDictionary)",
          "474:                 {",
          "475:                     actuals.add(COSDictionaryMap.convertBasicTypesToMap((COSDictionary) base));",
          "476:                 }",
          "477:                 else",
          "478:                 {",
          "479:                     LOG.warn(\"Expected COSDictionary, got \" + base + \", ignored\");",
          "480:                 }",
          "482:             return new COSArrayList<Object>(actuals, array);",
          "485:         return null;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487:     public void setFileDecodeParams(List<?> decodeParams)",
          "488:     {",
          "491:     }",
          "",
          "[Removed Lines]",
          "489:         stream.setItem(\"FDecodeParams\",",
          "490:                 COSArrayList.converterToCOSArray(decodeParams));",
          "",
          "[Added Lines]",
          "495:         stream.setItem(\"FDecodeParams\", COSArrayList.converterToCOSArray(decodeParams));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbe0fdf73e97c997606e4d60641cc2df9c4f8dff",
      "candidate_info": {
        "commit_hash": "bbe0fdf73e97c997606e4d60641cc2df9c4f8dff",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/bbe0fdf73e97c997606e4d60641cc2df9c4f8dff",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ],
        "message": "PDFBOX-5254: add test\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892139 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:         flattenAndCompare(sourceUrl, targetFileName);",
          "279:     }",
          "286:     @Test",
          "287:     public void testFlattenPDFBox4955() throws IOException",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "286:     @Test",
          "287:     public void testFlattenPDFBox5254() throws IOException",
          "288:     {",
          "289:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/13005793/f1040sb%20test.pdf\";",
          "290:         String targetFileName = \"PDFBOX-4889-5254.pdf\";",
          "292:         flattenAndCompare(sourceUrl, targetFileName);",
          "293:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}