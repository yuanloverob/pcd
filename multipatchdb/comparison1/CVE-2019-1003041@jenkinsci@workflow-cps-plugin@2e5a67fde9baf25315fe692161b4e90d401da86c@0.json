{
  "cve_id": "CVE-2019-1003041",
  "cve_desc": "A sandbox bypass vulnerability in Jenkins Pipeline: Groovy Plugin 2.64 and earlier allows attackers to invoke arbitrary constructors in sandboxed scripts.",
  "repo": "jenkinsci/workflow-cps-plugin",
  "patch_hash": "2e5a67fde9baf25315fe692161b4e90d401da86c",
  "patch_info": {
    "commit_hash": "2e5a67fde9baf25315fe692161b4e90d401da86c",
    "repo": "jenkinsci/workflow-cps-plugin",
    "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/2e5a67fde9baf25315fe692161b4e90d401da86c",
    "files": [
      "pom.xml",
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
    ],
    "message": "[SECURITY-1353] Problems with casts",
    "before_after_code_files": [
      "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
      "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
    ]
  },
  "patch_diff": {
    "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java": [
      "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.util.logging.Level;",
      "20: import java.util.logging.Logger;",
      "21: import jenkins.model.Jenkins;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException;",
      "23: import org.kohsuke.groovy.sandbox.impl.Checker;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "94:         String n = method.getName();",
      "96:         if (c == ScriptBytecodeAdapter.class && n.equals(\"asType\")) {",
      "97:             return true;",
      "98:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "99:             Object object = args[0];",
      "100:             Class<?> type = (Class<?>) args[1];",
      "101:             try {",
      "102:                 Checker.preCheckedCast(type, object, true, true, false);",
      "103:             } catch (RuntimeException x) {",
      "104:                 throw x;",
      "105:             } catch (Error x) {",
      "106:                 throw x;",
      "107:             } catch (Throwable x) {",
      "108:                 throw new RuntimeException(x);",
      "109:             }",
      "",
      "---------------"
    ],
    "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
      "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "51: import org.junit.Ignore;",
      "52: import org.junit.Rule;",
      "53: import org.junit.Test;",
      "54: import org.jvnet.hudson.test.BuildWatcher;",
      "55: import org.jvnet.hudson.test.Issue;",
      "56: import org.jvnet.hudson.test.JenkinsRule;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "54: import org.junit.rules.ErrorCollector;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:     @ClassRule public static BuildWatcher buildWatcher = new BuildWatcher();",
      "63:     @Rule public LoggerRule logging = new LoggerRule();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:     @Rule public ErrorCollector errors = new ErrorCollector();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "282:     @Test public void typeCoercion() throws Exception {",
      "283:         logging.record(CpsTransformer.class, Level.FINEST);",
      "284:         WorkflowJob job = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
      "296:     }",
      "299:     @Test public void positionalConstructors() throws Exception {",
      "300:         logging.record(CpsTransformer.class, Level.FINEST);",
      "301:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
      "314:     }",
      "316:     @Issue(\"SECURITY-567\")",
      "",
      "[Removed Lines]",
      "285:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
      "286:         WorkflowRun b = job.scheduleBuild2(0).get();",
      "287:         assertNull(jenkins.jenkins.getSystemMessage());",
      "288:         jenkins.assertBuildStatus(Result.FAILURE, b);",
      "289:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
      "291:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
      "292:         b = job.scheduleBuild2(0).get();",
      "293:         assertNull(jenkins.jenkins.getSystemMessage());",
      "294:         jenkins.assertBuildStatus(Result.FAILURE, b);",
      "295:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
      "298:     @Issue(\"SECURITY-580\")",
      "303:         p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
      "304:         jenkins.buildAndAssertSuccess(p);",
      "305:         p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
      "306:         jenkins.buildAndAssertSuccess(p);",
      "307:         p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
      "308:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "310:         p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
      "311:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "312:         p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
      "313:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "",
      "[Added Lines]",
      "287:         errors.checkSucceeds(() -> {",
      "288:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
      "289:             WorkflowRun b = job.scheduleBuild2(0).get();",
      "290:             assertNull(jenkins.jenkins.getSystemMessage());",
      "291:             jenkins.assertBuildStatus(Result.FAILURE, b);",
      "292:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
      "293:             return null;",
      "294:         });",
      "296:         errors.checkSucceeds(() -> {",
      "297:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
      "298:             WorkflowRun b = job.scheduleBuild2(0).get();",
      "299:             assertNull(jenkins.jenkins.getSystemMessage());",
      "300:             jenkins.assertBuildStatus(Result.FAILURE, b);",
      "301:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
      "302:             return null;",
      "303:         });",
      "305:         errors.checkSucceeds(() -> {",
      "306:             job.setDefinition(new CpsFlowDefinition(\"def x = (double) Math.max(2, 3); echo(/max is $x/)\", true));",
      "307:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
      "308:             return null;",
      "309:         });",
      "310:         errors.checkSucceeds(() -> {",
      "311:             job.setDefinition(new CpsFlowDefinition(\"def x = Math.max(2, 3) as double; echo(/max is $x/)\", true));",
      "312:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
      "313:             return null;",
      "314:         });",
      "315:         errors.checkSucceeds(() -> {",
      "316:             job.setDefinition(new CpsFlowDefinition(\"double x = Math.max(2, 3); echo(/max is $x/)\", true));",
      "317:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
      "318:             return null;",
      "319:         });",
      "322:     @Issue({\"SECURITY-580\", \"SECURITY-1353\"})",
      "327:         errors.checkSucceeds(() -> {",
      "328:             p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
      "329:             jenkins.buildAndAssertSuccess(p);",
      "330:             return null;",
      "331:         });",
      "332:         errors.checkSucceeds(() -> {",
      "333:             p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
      "334:             jenkins.buildAndAssertSuccess(p);",
      "335:             return null;",
      "336:         });",
      "337:         errors.checkSucceeds(() -> {",
      "338:             p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
      "339:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "340:             return null;",
      "341:         });",
      "343:         errors.checkSucceeds(() -> {",
      "344:             p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
      "345:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "346:             return null;",
      "347:         });",
      "348:         errors.checkSucceeds(() -> {",
      "349:             p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
      "350:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "351:             return null;",
      "352:         });",
      "353:         errors.checkSucceeds(() -> {",
      "354:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.asType(['/tmp'], File); echo(/$f/)\", true));",
      "355:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "356:             return null;",
      "357:         });",
      "358:         errors.checkSucceeds(() -> {",
      "359:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.castToType(['/tmp'], File); echo(/$f/)\", true));",
      "360:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod org.codehaus.groovy.runtime.ScriptBytecodeAdapter castToType java.lang.Object java.lang.Class\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "361:             return null;",
      "362:         });",
      "363:         errors.checkSucceeds(() -> {",
      "364:             p.setDefinition(new CpsFlowDefinition(\"def f = org.kohsuke.groovy.sandbox.impl.Checker.checkedCast(File, ['/tmp'], true, false, false); echo(/$f/)\", true));",
      "365:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
      "366:             return null;",
      "367:         });",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "45b2b046ceed2cc69a4d91d73a45285b7370660b",
      "candidate_info": {
        "commit_hash": "45b2b046ceed2cc69a4d91d73a45285b7370660b",
        "repo": "jenkinsci/workflow-cps-plugin",
        "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/45b2b046ceed2cc69a4d91d73a45285b7370660b",
        "files": [
          "pom.xml",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
        ],
        "message": "[SECURITY-1353] Problems with casts\n\n(cherry picked from commit 2e5a67fde9baf25315fe692161b4e90d401da86c)",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.util.logging.Level;",
          "20: import java.util.logging.Logger;",
          "21: import jenkins.model.Jenkins;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException;",
          "23: import org.kohsuke.groovy.sandbox.impl.Checker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         String n = method.getName();",
          "96:         if (c == ScriptBytecodeAdapter.class && n.equals(\"asType\")) {",
          "97:             return true;",
          "98:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:             Object object = args[0];",
          "100:             Class<?> type = (Class<?>) args[1];",
          "101:             try {",
          "102:                 Checker.preCheckedCast(type, object, true, true, false);",
          "103:             } catch (RuntimeException x) {",
          "104:                 throw x;",
          "105:             } catch (Error x) {",
          "106:                 throw x;",
          "107:             } catch (Throwable x) {",
          "108:                 throw new RuntimeException(x);",
          "109:             }",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: import org.junit.Ignore;",
          "52: import org.junit.Rule;",
          "53: import org.junit.Test;",
          "54: import org.jvnet.hudson.test.BuildWatcher;",
          "55: import org.jvnet.hudson.test.Issue;",
          "56: import org.jvnet.hudson.test.JenkinsRule;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: import org.junit.rules.ErrorCollector;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     @ClassRule public static BuildWatcher buildWatcher = new BuildWatcher();",
          "63:     @Rule public LoggerRule logging = new LoggerRule();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     @Rule public ErrorCollector errors = new ErrorCollector();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "284:     @Test public void typeCoercion() throws Exception {",
          "285:         logging.record(CpsTransformer.class, Level.FINEST);",
          "286:         WorkflowJob job = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "298:     }",
          "301:     @Test public void positionalConstructors() throws Exception {",
          "302:         logging.record(CpsTransformer.class, Level.FINEST);",
          "303:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "316:     }",
          "318:     @Issue(\"SECURITY-567\")",
          "",
          "[Removed Lines]",
          "287:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
          "288:         WorkflowRun b = job.scheduleBuild2(0).get();",
          "289:         assertNull(jenkins.jenkins.getSystemMessage());",
          "290:         jenkins.assertBuildStatus(Result.FAILURE, b);",
          "291:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "293:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
          "294:         b = job.scheduleBuild2(0).get();",
          "295:         assertNull(jenkins.jenkins.getSystemMessage());",
          "296:         jenkins.assertBuildStatus(Result.FAILURE, b);",
          "297:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "300:     @Issue(\"SECURITY-580\")",
          "305:         p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
          "306:         jenkins.buildAndAssertSuccess(p);",
          "307:         p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
          "308:         jenkins.buildAndAssertSuccess(p);",
          "309:         p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
          "310:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "312:         p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
          "313:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "314:         p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
          "315:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "",
          "[Added Lines]",
          "289:         errors.checkSucceeds(() -> {",
          "290:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
          "291:             WorkflowRun b = job.scheduleBuild2(0).get();",
          "292:             assertNull(jenkins.jenkins.getSystemMessage());",
          "293:             jenkins.assertBuildStatus(Result.FAILURE, b);",
          "294:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "295:             return null;",
          "296:         });",
          "298:         errors.checkSucceeds(() -> {",
          "299:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
          "300:             WorkflowRun b = job.scheduleBuild2(0).get();",
          "301:             assertNull(jenkins.jenkins.getSystemMessage());",
          "302:             jenkins.assertBuildStatus(Result.FAILURE, b);",
          "303:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "304:             return null;",
          "305:         });",
          "307:         errors.checkSucceeds(() -> {",
          "308:             job.setDefinition(new CpsFlowDefinition(\"def x = (double) Math.max(2, 3); echo(/max is $x/)\", true));",
          "309:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "310:             return null;",
          "311:         });",
          "312:         errors.checkSucceeds(() -> {",
          "313:             job.setDefinition(new CpsFlowDefinition(\"def x = Math.max(2, 3) as double; echo(/max is $x/)\", true));",
          "314:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "315:             return null;",
          "316:         });",
          "317:         errors.checkSucceeds(() -> {",
          "318:             job.setDefinition(new CpsFlowDefinition(\"double x = Math.max(2, 3); echo(/max is $x/)\", true));",
          "319:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "320:             return null;",
          "321:         });",
          "324:     @Issue({\"SECURITY-580\", \"SECURITY-1353\"})",
          "329:         errors.checkSucceeds(() -> {",
          "330:             p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
          "331:             jenkins.buildAndAssertSuccess(p);",
          "332:             return null;",
          "333:         });",
          "334:         errors.checkSucceeds(() -> {",
          "335:             p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
          "336:             jenkins.buildAndAssertSuccess(p);",
          "337:             return null;",
          "338:         });",
          "339:         errors.checkSucceeds(() -> {",
          "340:             p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
          "341:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "342:             return null;",
          "343:         });",
          "345:         errors.checkSucceeds(() -> {",
          "346:             p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
          "347:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "348:             return null;",
          "349:         });",
          "350:         errors.checkSucceeds(() -> {",
          "351:             p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
          "352:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "353:             return null;",
          "354:         });",
          "355:         errors.checkSucceeds(() -> {",
          "356:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.asType(['/tmp'], File); echo(/$f/)\", true));",
          "357:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "358:             return null;",
          "359:         });",
          "360:         errors.checkSucceeds(() -> {",
          "361:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.castToType(['/tmp'], File); echo(/$f/)\", true));",
          "362:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod org.codehaus.groovy.runtime.ScriptBytecodeAdapter castToType java.lang.Object java.lang.Class\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "363:             return null;",
          "364:         });",
          "365:         errors.checkSucceeds(() -> {",
          "366:             p.setDefinition(new CpsFlowDefinition(\"def f = org.kohsuke.groovy.sandbox.impl.Checker.checkedCast(File, ['/tmp'], true, false, false); echo(/$f/)\", true));",
          "367:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "368:             return null;",
          "369:         });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1faf152adf9870f905a7847d461ef9594d559231",
      "candidate_info": {
        "commit_hash": "1faf152adf9870f905a7847d461ef9594d559231",
        "repo": "jenkinsci/workflow-cps-plugin",
        "commit_url": "https://github.com/jenkinsci/workflow-cps-plugin/commit/1faf152adf9870f905a7847d461ef9594d559231",
        "files": [
          "pom.xml",
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
        ],
        "message": "[SECURITY-1353] Problems with casts\n\n(cherry picked from commit 2e5a67fde9baf25315fe692161b4e90d401da86c)",
        "before_after_code_files": [
          "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
          ],
          "candidate": [
            "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
            "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java||src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java": [
          "File: src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java -> src/main/java/org/jenkinsci/plugins/workflow/cps/CpsWhitelist.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.util.logging.Level;",
          "20: import java.util.logging.Logger;",
          "21: import jenkins.model.Jenkins;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException;",
          "23: import org.kohsuke.groovy.sandbox.impl.Checker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:         String n = method.getName();",
          "96:         if (c == ScriptBytecodeAdapter.class && n.equals(\"asType\")) {",
          "97:             return true;",
          "98:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:             Object object = args[0];",
          "100:             Class<?> type = (Class<?>) args[1];",
          "101:             try {",
          "102:                 Checker.preCheckedCast(type, object, true, true, false);",
          "103:             } catch (RuntimeException x) {",
          "104:                 throw x;",
          "105:             } catch (Error x) {",
          "106:                 throw x;",
          "107:             } catch (Throwable x) {",
          "108:                 throw new RuntimeException(x);",
          "109:             }",
          "",
          "---------------"
        ],
        "src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java||src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java": [
          "File: src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java -> src/test/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition2Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: import org.junit.Ignore;",
          "52: import org.junit.Rule;",
          "53: import org.junit.Test;",
          "54: import org.jvnet.hudson.test.BuildWatcher;",
          "55: import org.jvnet.hudson.test.Issue;",
          "56: import org.jvnet.hudson.test.JenkinsRule;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: import org.junit.rules.ErrorCollector;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     @ClassRule public static BuildWatcher buildWatcher = new BuildWatcher();",
          "63:     @Rule public LoggerRule logging = new LoggerRule();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     @Rule public ErrorCollector errors = new ErrorCollector();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "284:     @Test public void typeCoercion() throws Exception {",
          "285:         logging.record(CpsTransformer.class, Level.FINEST);",
          "286:         WorkflowJob job = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "298:     }",
          "301:     @Test public void positionalConstructors() throws Exception {",
          "302:         logging.record(CpsTransformer.class, Level.FINEST);",
          "303:         WorkflowJob p = jenkins.jenkins.createProject(WorkflowJob.class, \"p\");",
          "316:     }",
          "318:     @Issue(\"SECURITY-567\")",
          "",
          "[Removed Lines]",
          "287:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
          "288:         WorkflowRun b = job.scheduleBuild2(0).get();",
          "289:         assertNull(jenkins.jenkins.getSystemMessage());",
          "290:         jenkins.assertBuildStatus(Result.FAILURE, b);",
          "291:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "293:         job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
          "294:         b = job.scheduleBuild2(0).get();",
          "295:         assertNull(jenkins.jenkins.getSystemMessage());",
          "296:         jenkins.assertBuildStatus(Result.FAILURE, b);",
          "297:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "300:     @Issue(\"SECURITY-580\")",
          "305:         p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
          "306:         jenkins.buildAndAssertSuccess(p);",
          "307:         p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
          "308:         jenkins.buildAndAssertSuccess(p);",
          "309:         p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
          "310:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "312:         p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
          "313:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "314:         p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
          "315:         jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "",
          "[Added Lines]",
          "289:         errors.checkSucceeds(() -> {",
          "290:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; println((Jenkins as I).instance)\", true));",
          "291:             WorkflowRun b = job.scheduleBuild2(0).get();",
          "292:             assertNull(jenkins.jenkins.getSystemMessage());",
          "293:             jenkins.assertBuildStatus(Result.FAILURE, b);",
          "294:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "295:             return null;",
          "296:         });",
          "298:         errors.checkSucceeds(() -> {",
          "299:             job.setDefinition(new CpsFlowDefinition(\"interface I {Object getInstance()}; I i = {Jenkins.instance}; println(i.instance)\", true));",
          "300:             WorkflowRun b = job.scheduleBuild2(0).get();",
          "301:             assertNull(jenkins.jenkins.getSystemMessage());",
          "302:             jenkins.assertBuildStatus(Result.FAILURE, b);",
          "303:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod jenkins.model.Jenkins getInstance\", b);",
          "304:             return null;",
          "305:         });",
          "307:         errors.checkSucceeds(() -> {",
          "308:             job.setDefinition(new CpsFlowDefinition(\"def x = (double) Math.max(2, 3); echo(/max is $x/)\", true));",
          "309:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "310:             return null;",
          "311:         });",
          "312:         errors.checkSucceeds(() -> {",
          "313:             job.setDefinition(new CpsFlowDefinition(\"def x = Math.max(2, 3) as double; echo(/max is $x/)\", true));",
          "314:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "315:             return null;",
          "316:         });",
          "317:         errors.checkSucceeds(() -> {",
          "318:             job.setDefinition(new CpsFlowDefinition(\"double x = Math.max(2, 3); echo(/max is $x/)\", true));",
          "319:             jenkins.assertLogContains(\"max is 3\", jenkins.buildAndAssertSuccess(job));",
          "320:             return null;",
          "321:         });",
          "324:     @Issue({\"SECURITY-580\", \"SECURITY-1353\"})",
          "329:         errors.checkSucceeds(() -> {",
          "330:             p.setDefinition(new CpsFlowDefinition(\"def u = ['http://nowhere.net/'] as URL; echo(/$u/)\", true));",
          "331:             jenkins.buildAndAssertSuccess(p);",
          "332:             return null;",
          "333:         });",
          "334:         errors.checkSucceeds(() -> {",
          "335:             p.setDefinition(new CpsFlowDefinition(\"URL u = ['http://nowhere.net/']; echo(/$u/)\", true));",
          "336:             jenkins.buildAndAssertSuccess(p);",
          "337:             return null;",
          "338:         });",
          "339:         errors.checkSucceeds(() -> {",
          "340:             p.setDefinition(new CpsFlowDefinition(\"def f = new File('/tmp'); echo(/$f/)\", true));",
          "341:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "342:             return null;",
          "343:         });",
          "345:         errors.checkSucceeds(() -> {",
          "346:             p.setDefinition(new CpsFlowDefinition(\"def f = ['/tmp'] as File; echo(/$f/)\", true));",
          "347:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "348:             return null;",
          "349:         });",
          "350:         errors.checkSucceeds(() -> {",
          "351:             p.setDefinition(new CpsFlowDefinition(\"File f = ['/tmp']; echo(/$f/)\", true));",
          "352:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "353:             return null;",
          "354:         });",
          "355:         errors.checkSucceeds(() -> {",
          "356:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.asType(['/tmp'], File); echo(/$f/)\", true));",
          "357:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "358:             return null;",
          "359:         });",
          "360:         errors.checkSucceeds(() -> {",
          "361:             p.setDefinition(new CpsFlowDefinition(\"def f = org.codehaus.groovy.runtime.ScriptBytecodeAdapter.castToType(['/tmp'], File); echo(/$f/)\", true));",
          "362:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use staticMethod org.codehaus.groovy.runtime.ScriptBytecodeAdapter castToType java.lang.Object java.lang.Class\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "363:             return null;",
          "364:         });",
          "365:         errors.checkSucceeds(() -> {",
          "366:             p.setDefinition(new CpsFlowDefinition(\"def f = org.kohsuke.groovy.sandbox.impl.Checker.checkedCast(File, ['/tmp'], true, false, false); echo(/$f/)\", true));",
          "367:             jenkins.assertLogContains(\"org.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use new java.io.File java.lang.String\", jenkins.assertBuildStatus(Result.FAILURE, p.scheduleBuild2(0)));",
          "368:             return null;",
          "369:         });",
          "",
          "---------------"
        ]
      }
    }
  ]
}