{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0c98fa5924eadaee33713ccd8a9be6419d50cab1",
      "candidate_info": {
        "commit_hash": "0c98fa5924eadaee33713ccd8a9be6419d50cab1",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/0c98fa5924eadaee33713ccd8a9be6419d50cab1",
        "files": [
          ".changeset/nine-elephants-retire.md",
          ".changeset/nine-eyes-relax.md",
          ".changeset/serious-ties-compete.md",
          "packages/graphiql-react/src/schema.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx"
        ],
        "message": "feat(graphiql): pass introspection data to `schema` prop (#2574)\n\n* allow passing introspection data as alternative to schema instance\n\n* set schema correctly after refetching",
        "before_after_code_files": [
          "packages/graphiql-react/src/schema.tsx||packages/graphiql-react/src/schema.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/schema.tsx||packages/graphiql-react/src/schema.tsx": [
          "File: packages/graphiql-react/src/schema.tsx -> packages/graphiql-react/src/schema.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   GraphQLError,",
          "13:   GraphQLSchema,",
          "14:   IntrospectionQuery,",
          "15:   validateSchema,",
          "16: } from 'graphql';",
          "17: import {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:   isSchema,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   dangerouslyAssumeSchemaIsValid?: boolean;",
          "56:   fetcher: Fetcher;",
          "57:   onSchemaChange?(schema: GraphQLSchema): void;",
          "59: } & IntrospectionArgs;",
          "61: export function SchemaContextProvider(props: SchemaContextProviderProps) {",
          "",
          "[Removed Lines]",
          "58:   schema?: GraphQLSchema | null;",
          "",
          "[Added Lines]",
          "59:   schema?: GraphQLSchema | IntrospectionQuery | null;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:     nonNull: true,",
          "64:     caller: SchemaContextProvider,",
          "65:   });",
          "69:   const [isFetching, setIsFetching] = useState(false);",
          "70:   const [fetchError, setFetchError] = useState<string | null>(null);",
          "",
          "[Removed Lines]",
          "66:   const [schema, setSchema] = useState<MaybeGraphQLSchema>(",
          "67:     props.schema || null,",
          "68:   );",
          "",
          "[Added Lines]",
          "67:   const [schema, setSchema] = useState<MaybeGraphQLSchema>();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:   useEffect(() => {",
          "77:   }, [props.schema]);",
          "",
          "[Removed Lines]",
          "76:     setSchema(props.schema);",
          "",
          "[Added Lines]",
          "75:     setSchema(",
          "76:       isSchema(props.schema) ||",
          "77:         props.schema === null ||",
          "78:         props.schema === undefined",
          "79:         ? props.schema",
          "80:         : undefined,",
          "81:     );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "105:   const { fetcher, onSchemaChange } = props;",
          "106:   useEffect(() => {",
          "109:       return;",
          "110:     }",
          "112:     let isActive = true;",
          "149:         const fetch2 = fetcherReturnToPromise(",
          "",
          "[Removed Lines]",
          "108:     if (props.schema !== undefined) {",
          "114:     const parsedHeaders = parseHeaderString(headersRef.current);",
          "115:     if (!parsedHeaders.isValidJSON) {",
          "116:       setFetchError('Introspection failed as headers are invalid.');",
          "117:       return;",
          "118:     }",
          "120:     const fetcherOpts: FetcherOpts = parsedHeaders.headers",
          "121:       ? { headers: parsedHeaders.headers }",
          "122:       : {};",
          "124:     const fetch = fetcherReturnToPromise(",
          "125:       fetcher(",
          "126:         {",
          "127:           query: introspectionQuery,",
          "128:           operationName: introspectionQueryName,",
          "129:         },",
          "130:         fetcherOpts,",
          "131:       ),",
          "132:     );",
          "134:     if (!isPromise(fetch)) {",
          "135:       setFetchError('Fetcher did not return a Promise for introspection.');",
          "136:       return;",
          "137:     }",
          "139:     setIsFetching(true);",
          "141:     fetch",
          "142:       .then(result => {",
          "143:         if (typeof result === 'object' && result !== null && 'data' in result) {",
          "144:           return result;",
          "145:         }",
          "",
          "[Added Lines]",
          "117:     if (isSchema(props.schema) || props.schema === null) {",
          "122:     setSchema(undefined);",
          "124:     const maybeIntrospectionData = props.schema;",
          "125:     async function introspect() {",
          "126:       if (maybeIntrospectionData) {",
          "128:         return maybeIntrospectionData;",
          "129:       }",
          "131:       const parsedHeaders = parseHeaderString(headersRef.current);",
          "132:       if (!parsedHeaders.isValidJSON) {",
          "133:         setFetchError('Introspection failed as headers are invalid.');",
          "134:         return;",
          "135:       }",
          "137:       const fetcherOpts: FetcherOpts = parsedHeaders.headers",
          "138:         ? { headers: parsedHeaders.headers }",
          "139:         : {};",
          "141:       const fetch = fetcherReturnToPromise(",
          "142:         fetcher(",
          "143:           {",
          "144:             query: introspectionQuery,",
          "145:             operationName: introspectionQueryName,",
          "146:           },",
          "147:           fetcherOpts,",
          "148:         ),",
          "149:       );",
          "151:       if (!isPromise(fetch)) {",
          "152:         setFetchError('Fetcher did not return a Promise for introspection.');",
          "153:         return;",
          "154:       }",
          "156:       setIsFetching(true);",
          "158:       let result = await fetch;",
          "160:       if (",
          "161:         typeof result !== 'object' ||",
          "162:         result === null ||",
          "163:         !('data' in result)",
          "164:       ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "160:             'Fetcher did not return a Promise for introspection.',",
          "161:           );",
          "162:         }",
          "168:           return;",
          "169:         }",
          "195:         }",
          "198:       })",
          "199:       .catch(error => {",
          "",
          "[Removed Lines]",
          "163:         return fetch2;",
          "164:       })",
          "165:       .then(result => {",
          "167:         if (!isActive) {",
          "171:         if (result?.data && '__schema' in result.data) {",
          "172:           try {",
          "173:             const newSchema = buildClientSchema(",
          "174:               result.data as IntrospectionQuery,",
          "175:             );",
          "180:             setSchema(current => {",
          "181:               if (current === undefined) {",
          "182:                 onSchemaChange?.(newSchema);",
          "183:                 return newSchema;",
          "184:               }",
          "185:               return current;",
          "186:             });",
          "187:           } catch (error) {",
          "188:             setFetchError(formatError(error as Error));",
          "189:           }",
          "190:         } else {",
          "192:           const responseString =",
          "193:             typeof result === 'string' ? result : formatResult(result);",
          "194:           setFetchError(responseString);",
          "197:         setIsFetching(false);",
          "",
          "[Added Lines]",
          "181:         result = await fetch2;",
          "182:       }",
          "184:       setIsFetching(false);",
          "186:       if (result?.data && '__schema' in result.data) {",
          "187:         return result.data as IntrospectionQuery;",
          "188:       }",
          "191:       const responseString =",
          "192:         typeof result === 'string' ? result : formatResult(result);",
          "193:       setFetchError(responseString);",
          "194:     }",
          "196:     introspect()",
          "197:       .then(introspectionData => {",
          "199:         if (!isActive || !introspectionData) {",
          "203:         try {",
          "204:           const newSchema = buildClientSchema(introspectionData);",
          "209:           setSchema(current => {",
          "210:             if (current === undefined) {",
          "211:               onSchemaChange?.(newSchema);",
          "212:               return newSchema;",
          "213:             }",
          "214:             return current;",
          "215:           });",
          "216:         } catch (error) {",
          "217:           setFetchError(formatError(error as Error));",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   ValidationRule,",
          "19:   FragmentDefinitionNode,",
          "20:   DocumentNode,",
          "21: } from 'graphql';",
          "23: import {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:   IntrospectionQuery,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "107:   fetcher: Fetcher;",
          "",
          "[Removed Lines]",
          "111:   schema?: GraphQLSchema | null;",
          "",
          "[Added Lines]",
          "114:   schema?: GraphQLSchema | IntrospectionQuery | null;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c36504a804d8cc54a5136340152999b4a1a2c69f",
      "candidate_info": {
        "commit_hash": "c36504a804d8cc54a5136340152999b4a1a2c69f",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/c36504a804d8cc54a5136340152999b4a1a2c69f",
        "files": [
          ".changeset/old-mugs-buy.md",
          ".vscode/tasks.json",
          "package.json",
          "packages/graphql-language-service-cli/README.md",
          "packages/graphql-language-service-server/README.md",
          "packages/graphql-language-service-server/package.json",
          "packages/graphql-language-service/package.json",
          "packages/monaco-graphql/README.md",
          "packages/vscode-graphql/.vscodeignore",
          "packages/vscode-graphql/esbuild.js",
          "packages/vscode-graphql/package.json",
          "packages/vscode-graphql/src/extension.ts",
          "packages/vscode-graphql/src/server/index.ts",
          "packages/vscode-graphql/tsconfig.json",
          "packages/vscode-graphql/yarn.lock",
          "scripts/canary-release.js",
          "yarn.lock"
        ],
        "message": "release `vscode-graphql@0.4.2` from the monorepo (#2288)\n\n- fix esbuild bundling issues with vscode-graphql [#2269](https://github.com/graphql/graphiql/issues/2269) by fixing esbuild version\n- remove `graphql-language-service` dependency on `graphql-config`, which is only for types\n- remove direct `vscode-graphql` dependency on `graphql-config`, which previously existed for op exec client\n- resolve `graphql-config` to `4.3.0` in `graphql-language-server`",
        "before_after_code_files": [
          "packages/vscode-graphql/esbuild.js||packages/vscode-graphql/esbuild.js",
          "packages/vscode-graphql/src/extension.ts||packages/vscode-graphql/src/extension.ts",
          "packages/vscode-graphql/src/server/index.ts||packages/vscode-graphql/src/server/index.ts",
          "packages/vscode-graphql/yarn.lock||packages/vscode-graphql/yarn.lock",
          "scripts/canary-release.js||scripts/canary-release.js",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/vscode-graphql/esbuild.js||packages/vscode-graphql/esbuild.js": [
          "File: packages/vscode-graphql/esbuild.js -> packages/vscode-graphql/esbuild.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: const { build } = require('esbuild');",
          "2: const [, , arg] = process.argv;",
          "4: const logger = console.log;",
          "6: build({",
          "7:   entryPoints: ['src/extension.ts', 'src/server/index.ts'],",
          "8:   bundle: true,",
          "9:   minify: arg === '--minify',",
          "10:   platform: 'node',",
          "11:   outdir: 'out/',",
          "12:   external: ['vscode'],",
          "13:   format: 'cjs',",
          "14:   sourcemap: true,",
          "15:   watch: arg === '--watch',",
          "16: })",
          "17:   .then(({ errors, warnings }) => {",
          "18:     if (warnings.length) {",
          "19:       logger.warn(...warnings);",
          "20:     }",
          "21:     if (errors.length) {",
          "22:       logger.error(...errors);",
          "23:     }",
          "24:     logger.log('successfully bundled vscode-graphql \ud83d\ude80');",
          "25:     process.exit();",
          "26:   })",
          "27:   .catch(err => {",
          "28:     logger.error(err);",
          "29:     process.exit(1);",
          "30:   });",
          "",
          "---------------"
        ],
        "packages/vscode-graphql/src/extension.ts||packages/vscode-graphql/src/extension.ts": [
          "File: packages/vscode-graphql/src/extension.ts -> packages/vscode-graphql/src/extension.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     console.log('Extension \"vscode-graphql\" is now active!');",
          "29:   }",
          "32:   const serverModule = context.asAbsolutePath(serverPath);",
          "34:   const debugOptions = {",
          "",
          "[Removed Lines]",
          "31:   const serverPath = path.join('out/server', 'server.js');",
          "",
          "[Added Lines]",
          "31:   const serverPath = path.join('out', 'server', 'index.js');",
          "",
          "---------------"
        ],
        "packages/vscode-graphql/src/server/index.ts||packages/vscode-graphql/src/server/index.ts": [
          "File: packages/vscode-graphql/src/server/index.ts -> packages/vscode-graphql/src/server/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { startServer } from 'graphql-language-service-server';",
          "",
          "[Removed Lines]",
          "1: import 'babel-polyfill';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/vscode-graphql/yarn.lock||packages/vscode-graphql/yarn.lock": [
          "File: packages/vscode-graphql/yarn.lock -> packages/vscode-graphql/yarn.lock"
        ],
        "scripts/canary-release.js||scripts/canary-release.js": [
          "File: scripts/canary-release.js -> scripts/canary-release.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: const semver = require('semver');",
          "3: const cp = require('child_process');",
          "4: const { basename } = require('path');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: const { execa } = import('execa');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:   return semver.inc(version, `pre${type}`, true, 'canary-' + gitHash);",
          "20: }",
          "38: }",
          "40: async function updateVersions() {",
          "",
          "[Removed Lines]",
          "22: function getRelevantChangesets(baseBranch) {",
          "23:   const comparePoint = cp",
          "24:     .spawnSync('git', ['merge-base', `origin/${baseBranch}`, 'HEAD'])",
          "25:     .stdout.toString()",
          "26:     .trim();",
          "27:   const listModifiedFiles = cp",
          "28:     .spawnSync('git', ['diff', '--name-only', comparePoint])",
          "29:     .stdout.toString()",
          "30:     .trim()",
          "31:     .split('\\n');",
          "33:   const items = listModifiedFiles",
          "34:     .filter(f => f.startsWith('.changeset'))",
          "35:     .map(f => basename(f, '.md'));",
          "37:   return items;",
          "",
          "[Added Lines]",
          "23: const execOpts = { stderr: 'inherit', stdout: 'inherit' };",
          "25: const git = async (...commands) => execa('git', commands, execOpts);",
          "27: async function preReleaseVSCode(version) {",
          "28:   try {",
          "29:     await execa(",
          "30:       'yarn',",
          "31:       ['workspace', `vscode-graphql`, 'run', 'release', '--pre'],",
          "32:       execOpts,",
          "33:     );",
          "34:   } catch (err) {",
          "35:     console.error('vscode-graphql pre-release failed on publish:', err);",
          "36:     process.exit(1);",
          "37:   }",
          "38:   try {",
          "39:     await git('add', `packages/vscode-graphql/package.json`);",
          "40:     await git('commit', `-m`, `pre-release \\`vscode-graphql@${version}\\``);",
          "41:     await git('push');",
          "42:   } catch (err) {",
          "43:     console.error('vscode-graphql pre-release failed on git command:', err);",
          "44:     process.exit(1);",
          "45:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:   const changesets = (await readChangesets(cwd)).filter(change =>",
          "46:     modifiedChangesets.includes(change.id),",
          "47:   );",
          "49:   if (changesets.length === 0) {",
          "50:     console.warn(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   const isMain = process.env.GITHUB_REF_NAME?.includes('main');",
          "58:   let vscodeRelease = false;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:       process.exit(1);",
          "68:     } else {",
          "69:       for (const release of releasePlan.releases) {",
          "70:         if (release.type !== 'none') {",
          "71:           release.newVersion = getNewVersion(release.oldVersion, release.type);",
          "72:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         if (",
          "82:           release.name.includes('vscode-graphql') &&",
          "83:           release.changesets?.type !== 'none'",
          "84:         ) {",
          "86:           release.newVersion = vscodeRelease = semver.patch(release.oldVersion);",
          "87:         }",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "4221:     tslib \"^2\"",
          "4223: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
          "4225:   dependencies:",
          "4226:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.1.0\"",
          "4227:     meros \"^1.1.4\"",
          "4233:   dependencies:",
          "4235:     dataloader \"2.0.0\"",
          "4236:     tslib \"~2.3.0\"",
          "4237:     value-or-promise \"1.0.11\"",
          "4243:   dependencies:",
          "4247:     dataloader \"2.0.0\"",
          "4248:     tslib \"~2.3.0\"",
          "4249:     value-or-promise \"1.0.11\"",
          "4255:   dependencies:",
          "4258:     globby \"^11.0.3\"",
          "4259:     tslib \"~2.3.0\"",
          "4260:     unixify \"^1.0.0\"",
          "4266:   dependencies:",
          "4268:     resolve-from \"5.0.0\"",
          "4269:     tslib \"~2.3.0\"",
          "4275:   dependencies:",
          "4277:     globby \"^11.0.3\"",
          "4278:     tslib \"~2.3.0\"",
          "4279:     unixify \"^1.0.0\"",
          "4291: \"@graphql-tools/load@^7.5.3\":",
          "4292:   version \"7.5.3\"",
          "4293:   resolved \"https://registry.yarnpkg.com/@graphql-tools/load/-/load-7.5.3.tgz#e7414d11e53ad8b78d5a74a0bd7ae958fa717a5c\"",
          "",
          "[Removed Lines]",
          "4224:   version \"0.4.2\"",
          "4229: \"@graphql-tools/batch-execute@^8.3.1\":",
          "4230:   version \"8.3.1\"",
          "4231:   resolved \"https://registry.yarnpkg.com/@graphql-tools/batch-execute/-/batch-execute-8.3.1.tgz#0b74c54db5ac1c5b9a273baefc034c2343ebbb74\"",
          "4232:   integrity sha512-63kHY8ZdoO5FoeDXYHnAak1R3ysMViMPwWC2XUblFckuVLMUPmB2ONje8rjr2CvzWBHAW8c1Zsex+U3xhKtGIA==",
          "4234:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4239: \"@graphql-tools/delegate@^8.4.1\", \"@graphql-tools/delegate@^8.4.2\":",
          "4240:   version \"8.4.2\"",
          "4241:   resolved \"https://registry.yarnpkg.com/@graphql-tools/delegate/-/delegate-8.4.2.tgz#a61d45719855720304e3656800342cfa17d82558\"",
          "4242:   integrity sha512-CjggOhiL4WtyG2I3kux+1/p8lQxSFHBj0gwa0NxnQ6Vsnpw7Ig5VP1ovPnitFuBv2k4QdC37Nj2xv2n7DRn8fw==",
          "4244:     \"@graphql-tools/batch-execute\" \"^8.3.1\"",
          "4245:     \"@graphql-tools/schema\" \"^8.3.1\"",
          "4246:     \"@graphql-tools/utils\" \"^8.5.3\"",
          "4251: \"@graphql-tools/graphql-file-loader@^7.3.2\":",
          "4252:   version \"7.3.3\"",
          "4253:   resolved \"https://registry.yarnpkg.com/@graphql-tools/graphql-file-loader/-/graphql-file-loader-7.3.3.tgz#7cee2f84f08dc13fa756820b510248b857583d36\"",
          "4254:   integrity sha512-6kUJZiNpYKVhum9E5wfl5PyLLupEDYdH7c8l6oMrk6c7EPEVs6iSUyB7yQoWrtJccJLULBW2CRQ5IHp5JYK0mA==",
          "4256:     \"@graphql-tools/import\" \"^6.5.7\"",
          "4257:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4262: \"@graphql-tools/import@^6.5.7\":",
          "4263:   version \"6.6.1\"",
          "4264:   resolved \"https://registry.yarnpkg.com/@graphql-tools/import/-/import-6.6.1.tgz#2a7e1ceda10103ffeb8652a48ddc47150b035485\"",
          "4265:   integrity sha512-i9WA6k+erJMci822o9w9DoX+uncVBK60LGGYW8mdbhX0l7wEubUpA000thJ1aarCusYh0u+ZT9qX0HyVPXu25Q==",
          "4267:     \"@graphql-tools/utils\" \"8.5.3\"",
          "4271: \"@graphql-tools/json-file-loader@^7.3.2\":",
          "4272:   version \"7.3.3\"",
          "4273:   resolved \"https://registry.yarnpkg.com/@graphql-tools/json-file-loader/-/json-file-loader-7.3.3.tgz#45cfde77b9dc4ab6c21575305ae537d2814d237f\"",
          "4274:   integrity sha512-CN2Qk9rt+Gepa3rb3X/mpxYA5MIYLwZBPj2Njw6lbZ6AaxG+O1ArDCL5ACoiWiBimn1FCOM778uhRM9znd0b3Q==",
          "4276:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4281: \"@graphql-tools/load@^7.4.1\":",
          "4282:   version \"7.4.1\"",
          "4283:   resolved \"https://registry.yarnpkg.com/@graphql-tools/load/-/load-7.4.1.tgz#aa572fcef11d6028097b6ef39c13fa9d62e5a441\"",
          "4284:   integrity sha512-UvBodW5hRHpgBUBVz5K5VIhJDOTFIbRRAGD6sQ2l9J5FDKBEs3u/6JjZDzbdL96br94D5cEd2Tk6auaHpTn7mQ==",
          "4285:   dependencies:",
          "4286:     \"@graphql-tools/schema\" \"8.3.1\"",
          "4287:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4288:     p-limit \"3.1.0\"",
          "4289:     tslib \"~2.3.0\"",
          "",
          "[Added Lines]",
          "4224:   version \"0.4.3\"",
          "4229: \"@graphql-tools/batch-execute@8.4.2\":",
          "4230:   version \"8.4.2\"",
          "4231:   resolved \"https://registry.yarnpkg.com/@graphql-tools/batch-execute/-/batch-execute-8.4.2.tgz#9cd05c9bcb0eb29435547ea5fae202d4c6f2ecb7\"",
          "4232:   integrity sha512-5/el640oG/jfjQCjCRDdtIALyUib8YPONM2NSmckp2g1nOrPTAx/isz3Uptp9y5OI1UXXhONiKy5euTbgsGoXw==",
          "4234:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4239: \"@graphql-tools/delegate@8.7.2\":",
          "4240:   version \"8.7.2\"",
          "4241:   resolved \"https://registry.yarnpkg.com/@graphql-tools/delegate/-/delegate-8.7.2.tgz#1db19ef4fded58615b4d5f3678950eda860f5aff\"",
          "4242:   integrity sha512-SSmx5N6Cq23KRT0YepdmcYugey7MDZSXxtJ8KHHdc5eW9IAHXZWsJWdVnI9woU9omsnE6svnxblZb1UUBl7AUg==",
          "4244:     \"@graphql-tools/batch-execute\" \"8.4.2\"",
          "4245:     \"@graphql-tools/schema\" \"8.3.7\"",
          "4246:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4248:     graphql-executor \"0.0.22\"",
          "4252: \"@graphql-tools/graphql-file-loader@^7.3.7\":",
          "4253:   version \"7.3.8\"",
          "4254:   resolved \"https://registry.yarnpkg.com/@graphql-tools/graphql-file-loader/-/graphql-file-loader-7.3.8.tgz#ddd643109077def01c186038d58431ba940c0d2f\"",
          "4255:   integrity sha512-SpQZQ0klbox/kxYCLFBTmhLuQFm7P6usWVIqwROK4JSomwCuccc2zDsr1H7ayDpanD3yfkzMsl6gPkOkAo52pA==",
          "4257:     \"@graphql-tools/import\" \"6.6.10\"",
          "4258:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4263: \"@graphql-tools/import@6.6.10\":",
          "4264:   version \"6.6.10\"",
          "4265:   resolved \"https://registry.yarnpkg.com/@graphql-tools/import/-/import-6.6.10.tgz#b77d19c8e5b6d376c517aa16f959b14197840669\"",
          "4266:   integrity sha512-yHdlEPTvIjrngtQFNgkMQJt/DjG3hQKvc6Mb8kaatFV4yERN5zx+0vpdrwxTwRNG1N7bI/YCkbrc7PXOb+g89Q==",
          "4268:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4272: \"@graphql-tools/json-file-loader@^7.3.7\":",
          "4273:   version \"7.3.8\"",
          "4274:   resolved \"https://registry.yarnpkg.com/@graphql-tools/json-file-loader/-/json-file-loader-7.3.8.tgz#49b946bdaf9d5b54df726515c2d2305c83a8d1d0\"",
          "4275:   integrity sha512-W3nVLAp8m787A17wja7ysayij7WMRu+lF8LeCWr9eoyiCuw65i63y0G4eqZ5+Q0+E2BYWlKJyk/Z0vsFVJGMUA==",
          "4277:     \"@graphql-tools/utils\" \"8.6.6\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4298:     p-limit \"3.1.0\"",
          "4299:     tslib \"~2.3.0\"",
          "4301: \"@graphql-tools/merge@8.2.4\":",
          "4302:   version \"8.2.4\"",
          "4303:   resolved \"https://registry.yarnpkg.com/@graphql-tools/merge/-/merge-8.2.4.tgz#f903545e5693c75418f95671bca1be6bc51bfa53\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4292: \"@graphql-tools/load@^7.5.5\":",
          "4293:   version \"7.5.7\"",
          "4294:   resolved \"https://registry.yarnpkg.com/@graphql-tools/load/-/load-7.5.7.tgz#8197e1e7be23c0a62721c3c8266ab5f777ea6bfd\"",
          "4295:   integrity sha512-Z4oKf4MdBvl0EyubmvPL14ldhovKz8C61rQPHD8pjnC8Z0RbvW0a/sns/yuHuCVZoJMsSboU65DPzPTIoQUM4w==",
          "4296:   dependencies:",
          "4297:     \"@graphql-tools/schema\" \"8.3.7\"",
          "4298:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4299:     p-limit \"3.1.0\"",
          "4300:     tslib \"~2.3.0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4306:     \"@graphql-tools/utils\" \"8.6.3\"",
          "4307:     tslib \"~2.3.0\"",
          "4313:   dependencies:",
          "4315:     tslib \"~2.3.0\"",
          "4327: \"@graphql-tools/schema@8.3.3\":",
          "4328:   version \"8.3.3\"",
          "4329:   resolved \"https://registry.yarnpkg.com/@graphql-tools/schema/-/schema-8.3.3.tgz#b69ea495026976f16e697253f08aa7905e7f6265\"",
          "",
          "[Removed Lines]",
          "4309: \"@graphql-tools/merge@^8.2.1\":",
          "4310:   version \"8.2.1\"",
          "4311:   resolved \"https://registry.yarnpkg.com/@graphql-tools/merge/-/merge-8.2.1.tgz#bf83aa06a0cfc6a839e52a58057a84498d0d51ff\"",
          "4312:   integrity sha512-Q240kcUszhXiAYudjuJgNuLgy9CryDP3wp83NOZQezfA6h3ByYKU7xI6DiKrdjyVaGpYN3ppUmdj0uf5GaXzMA==",
          "4314:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4317: \"@graphql-tools/schema@8.3.1\", \"@graphql-tools/schema@^8.3.1\":",
          "4318:   version \"8.3.1\"",
          "4319:   resolved \"https://registry.yarnpkg.com/@graphql-tools/schema/-/schema-8.3.1.tgz#1ee9da494d2da457643b3c93502b94c3c4b68c74\"",
          "4320:   integrity sha512-3R0AJFe715p4GwF067G5i0KCr/XIdvSfDLvTLEiTDQ8V/hwbOHEKHKWlEBHGRQwkG5lwFQlW1aOn7VnlPERnWQ==",
          "4321:   dependencies:",
          "4322:     \"@graphql-tools/merge\" \"^8.2.1\"",
          "4323:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4324:     tslib \"~2.3.0\"",
          "4325:     value-or-promise \"1.0.11\"",
          "",
          "[Added Lines]",
          "4310: \"@graphql-tools/merge@8.2.7\", \"@graphql-tools/merge@^8.2.6\":",
          "4311:   version \"8.2.7\"",
          "4312:   resolved \"https://registry.yarnpkg.com/@graphql-tools/merge/-/merge-8.2.7.tgz#add05bcc47df6b7390f31acbcadd986e160d58f9\"",
          "4313:   integrity sha512-rKxjNogqu1UYAG/y5FOb6lJsmSQbWA+jq4inWjNEVX54VGGE7/WGnmPaqcsyomNOfS3vIRS6NnG+DxiQSqetjg==",
          "4315:     \"@graphql-tools/utils\" \"8.6.6\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4334:     tslib \"~2.3.0\"",
          "4335:     value-or-promise \"1.0.11\"",
          "4341:   dependencies:",
          "4347:     \"@types/ws\" \"^8.0.0\"",
          "4349:     dset \"^3.1.0\"",
          "4351:     graphql-sse \"^1.0.1\"",
          "4352:     graphql-ws \"^5.4.1\"",
          "4355:     subscriptions-transport-ws \"^0.11.0\"",
          "4369: \"@graphql-tools/utils@8.6.3\":",
          "4370:   version \"8.6.3\"",
          "",
          "[Removed Lines]",
          "4337: \"@graphql-tools/url-loader@^7.4.2\":",
          "4338:   version \"7.5.2\"",
          "4339:   resolved \"https://registry.yarnpkg.com/@graphql-tools/url-loader/-/url-loader-7.5.2.tgz#fb3737fd1269ab61b195b63052179b6049d90ce1\"",
          "4340:   integrity sha512-EilHqbhUY/qg55SSEdklDhPXgSz9+9a63SX3mcD8J2qwZHJD/wOLcyKs8m6BXfuGwUiuB0j3fmDSEVmva2onBg==",
          "4342:     \"@graphql-tools/delegate\" \"^8.4.1\"",
          "4343:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "4344:     \"@graphql-tools/wrap\" \"^8.3.1\"",
          "4345:     \"@n1ru4l/graphql-live-query\" \"0.9.0\"",
          "4346:     \"@types/websocket\" \"1.0.4\"",
          "4348:     cross-undici-fetch \"^0.0.20\"",
          "4350:     extract-files \"11.0.0\"",
          "4353:     isomorphic-ws \"4.0.1\"",
          "4354:     meros \"1.1.4\"",
          "4356:     sync-fetch \"0.3.1\"",
          "4357:     tslib \"~2.3.0\"",
          "4358:     valid-url \"1.0.9\"",
          "4359:     value-or-promise \"1.0.11\"",
          "4360:     ws \"8.2.3\"",
          "4362: \"@graphql-tools/utils@8.5.3\", \"@graphql-tools/utils@^8.5.1\", \"@graphql-tools/utils@^8.5.3\":",
          "4363:   version \"8.5.3\"",
          "4364:   resolved \"https://registry.yarnpkg.com/@graphql-tools/utils/-/utils-8.5.3.tgz#404062e62cae9453501197039687749c4885356e\"",
          "4365:   integrity sha512-HDNGWFVa8QQkoQB0H1lftvaO1X5xUaUDk1zr1qDe0xN1NL0E/CrQdJ5UKLqOvH4hkqVUPxQsyOoAZFkaH6rLHg==",
          "4366:   dependencies:",
          "4367:     tslib \"~2.3.0\"",
          "",
          "[Added Lines]",
          "4328: \"@graphql-tools/schema@8.3.7\":",
          "4329:   version \"8.3.7\"",
          "4330:   resolved \"https://registry.yarnpkg.com/@graphql-tools/schema/-/schema-8.3.7.tgz#6e2be8e17a1f97f4d11d5b787c414ec29400fde2\"",
          "4331:   integrity sha512-7byr9J6rfMPFPfiR4u65dy20xHATTvbgOY7KYd1sYPnMKKfRZe0tUgpnE+noXcfob7N8s366WaVh7bEoztQMwg==",
          "4333:     \"@graphql-tools/merge\" \"8.2.7\"",
          "4334:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4335:     tslib \"~2.3.0\"",
          "4336:     value-or-promise \"1.0.11\"",
          "4338: \"@graphql-tools/url-loader@^7.9.7\":",
          "4339:   version \"7.9.9\"",
          "4340:   resolved \"https://registry.yarnpkg.com/@graphql-tools/url-loader/-/url-loader-7.9.9.tgz#9c002e4babf6ba70b74b809bd7c7669572998109\"",
          "4341:   integrity sha512-qhjBJ3oCXZrzvJchVwtrahr48TXOHPYZ4YXklGrbJVoJs3LP0a7CYUwuXeiNuN+dpgaxkb175sIEN9m0FadGRw==",
          "4342:   dependencies:",
          "4343:     \"@graphql-tools/delegate\" \"8.7.2\"",
          "4344:     \"@graphql-tools/utils\" \"8.6.6\"",
          "4345:     \"@graphql-tools/wrap\" \"8.4.11\"",
          "4346:     \"@n1ru4l/graphql-live-query\" \"^0.9.0\"",
          "4347:     \"@types/websocket\" \"^1.0.4\"",
          "4349:     cross-undici-fetch \"^0.1.19\"",
          "4351:     extract-files \"^11.0.0\"",
          "4354:     isomorphic-ws \"^4.0.1\"",
          "4355:     meros \"^1.1.4\"",
          "4357:     sync-fetch \"^0.3.1\"",
          "4358:     tslib \"^2.3.0\"",
          "4359:     value-or-promise \"^1.0.11\"",
          "4360:     ws \"^8.3.0\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4373:   dependencies:",
          "4374:     tslib \"~2.3.0\"",
          "4380:   dependencies:",
          "4384:     tslib \"~2.3.0\"",
          "4385:     value-or-promise \"1.0.11\"",
          "",
          "[Removed Lines]",
          "4376: \"@graphql-tools/wrap@^8.3.1\":",
          "4377:   version \"8.3.2\"",
          "4378:   resolved \"https://registry.yarnpkg.com/@graphql-tools/wrap/-/wrap-8.3.2.tgz#d3bcecb7529d071e4ecc4dfc75b9566e3da79d4f\"",
          "4379:   integrity sha512-7DcOBFB+Dd84x9dxSm7qS4iJONMyfLnCJb8A19vGPffpu4SMJ3sFcgwibKFu5l6mMUiigKgXna2RRgWI+02bKQ==",
          "4381:     \"@graphql-tools/delegate\" \"^8.4.2\"",
          "4382:     \"@graphql-tools/schema\" \"^8.3.1\"",
          "4383:     \"@graphql-tools/utils\" \"^8.5.3\"",
          "",
          "[Added Lines]",
          "4369: \"@graphql-tools/utils@8.6.6\", \"@graphql-tools/utils@^8.6.5\":",
          "4370:   version \"8.6.6\"",
          "4371:   resolved \"https://registry.yarnpkg.com/@graphql-tools/utils/-/utils-8.6.6.tgz#f7c88d32818b748f3e3867ed87a562769b544417\"",
          "4372:   integrity sha512-wjY2ljKLCnnbRrDNPPgPNqCujou0LFSOWcxAjV6DYUlfFWTsAEvlYmsmY4T+K12wI/fnqoJ2bUwIlap1plFDMg==",
          "4373:   dependencies:",
          "4374:     tslib \"~2.3.0\"",
          "4376: \"@graphql-tools/wrap@8.4.11\":",
          "4377:   version \"8.4.11\"",
          "4378:   resolved \"https://registry.yarnpkg.com/@graphql-tools/wrap/-/wrap-8.4.11.tgz#3898a589f74a3250de96d52ade2e2e89bfed3d9a\"",
          "4379:   integrity sha512-bif9yNZCoG1fFTGuIV4UblsJI95VSufl0RReXdr6f2yNbnqjSzgoDMB17WQlLrNOBrXa7r8N5aWBr5hBGhtGig==",
          "4381:     \"@graphql-tools/delegate\" \"8.7.2\"",
          "4382:     \"@graphql-tools/schema\" \"8.3.7\"",
          "4383:     \"@graphql-tools/utils\" \"8.6.6\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4995:     call-me-maybe \"^1.0.1\"",
          "4996:     glob-to-regexp \"^0.3.0\"",
          "4999:   version \"0.9.0\"",
          "5000:   resolved \"https://registry.yarnpkg.com/@n1ru4l/graphql-live-query/-/graphql-live-query-0.9.0.tgz#defaebdd31f625bee49e6745934f36312532b2bc\"",
          "5001:   integrity sha512-BTpWy1e+FxN82RnLz4x1+JcEewVdfmUhV1C6/XYD5AjS7PQp9QFF7K8bCD6gzPTr2l+prvqOyVueQhFJxB1vfg==",
          "",
          "[Removed Lines]",
          "4998: \"@n1ru4l/graphql-live-query@0.9.0\":",
          "",
          "[Added Lines]",
          "4998: \"@n1ru4l/graphql-live-query@^0.9.0\":",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6497:     \"@types/webpack-sources\" \"*\"",
          "6498:     source-map \"^0.6.0\"",
          "6504:   dependencies:",
          "6505:     \"@types/node\" \"*\"",
          "",
          "[Removed Lines]",
          "6500: \"@types/websocket@1.0.4\":",
          "6501:   version \"1.0.4\"",
          "6502:   resolved \"https://registry.yarnpkg.com/@types/websocket/-/websocket-1.0.4.tgz#1dc497280d8049a5450854dd698ee7e6ea9e60b8\"",
          "6503:   integrity sha512-qn1LkcFEKK8RPp459jkjzsfpbsx36BBt3oC3pITYtkoBw/aVX+EZFa5j3ThCRTNpLFvIMr5dSTD4RaMdilIOpA==",
          "",
          "[Added Lines]",
          "6500: \"@types/websocket@^1.0.4\":",
          "6501:   version \"1.0.5\"",
          "6502:   resolved \"https://registry.yarnpkg.com/@types/websocket/-/websocket-1.0.5.tgz#3fb80ed8e07f88e51961211cd3682a3a4a81569c\"",
          "6503:   integrity sha512-NbsqiNX9CnEfC1Z0Vf4mE1SgAJ07JnRYcNex7AJ9zAVzmiGHmjKFEk7O4TJIsgv2B1sLEb6owKFZrACwdYngsQ==",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7439:     tunnel \"0.0.6\"",
          "7440:     typed-rest-client \"^1.8.4\"",
          "7442: babel-code-frame@^6.22.0:",
          "7443:   version \"6.26.0\"",
          "7444:   resolved \"https://registry.yarnpkg.com/babel-code-frame/-/babel-code-frame-6.26.0.tgz#63fd43f7dc1e3bb7ce35947db8fe369a3f58c74b\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7442: azure-devops-node-api@^7.2.0:",
          "7443:   version \"7.2.0\"",
          "7444:   resolved \"https://registry.yarnpkg.com/azure-devops-node-api/-/azure-devops-node-api-7.2.0.tgz#131d4e01cf12ebc6e45569b5e0c5c249e4114d6d\"",
          "7445:   integrity sha512-pMfGJ6gAQ7LRKTHgiRF+8iaUUeGAI0c8puLaqHLc7B8AR7W6GJLozK9RFeUHFjEGybC9/EB3r67WPd7e46zQ8w==",
          "7446:   dependencies:",
          "7447:     os \"0.1.1\"",
          "7448:     tunnel \"0.0.4\"",
          "7449:     typed-rest-client \"1.2.0\"",
          "7450:     underscore \"1.8.3\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8716:     domhandler \"^4.2.0\"",
          "8717:     domutils \"^2.7.0\"",
          "8720:   version \"1.0.0-rc.10\"",
          "8721:   resolved \"https://registry.yarnpkg.com/cheerio/-/cheerio-1.0.0-rc.10.tgz#2ba3dcdfcc26e7956fc1f440e61d51c643379f3e\"",
          "8722:   integrity sha512-g0J0q/O6mW8z5zxQ3A8E8J1hUgp4SMOvEoW/x84OwyHKe/Zccz83PVT4y5Crcr530FV6NgmKI1qvGTKVl9XXVw==",
          "",
          "[Removed Lines]",
          "8719: cheerio@^1.0.0-rc.9:",
          "",
          "[Added Lines]",
          "8729: cheerio@^1.0.0-rc.1, cheerio@^1.0.0-rc.9:",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "9099:   resolved \"https://registry.yarnpkg.com/comma-separated-tokens/-/comma-separated-tokens-1.0.8.tgz#632b80b6117867a158f1080ad498b2fbe7e3f5ea\"",
          "9100:   integrity sha512-GHuDRO12Sypu2cV70d1dkA2EUmXHgntrzbpvOB+Qy+49ypNfGgFQIC2fhhXbnyrJRynDCAARsT7Ou0M6hirpfw==",
          "9103:   version \"2.20.3\"",
          "9104:   resolved \"https://registry.yarnpkg.com/commander/-/commander-2.20.3.tgz#fd485e84c03eb4881c20722ba48035e8531aeb33\"",
          "9105:   integrity sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
          "",
          "[Removed Lines]",
          "9102: commander@^2.18.0, commander@^2.19.0, commander@^2.20.0, commander@~2.20.3:",
          "",
          "[Added Lines]",
          "9112: commander@^2.18.0, commander@^2.19.0, commander@^2.20.0, commander@^2.8.1, commander@~2.20.3:",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "9512:     shebang-command \"^1.2.0\"",
          "9513:     which \"^1.2.9\"",
          "9519:   dependencies:",
          "9520:     abort-controller \"^3.0.0\"",
          "9525: crypto-browserify@^3.11.0:",
          "9526:   version \"3.12.0\"",
          "",
          "[Removed Lines]",
          "9515: cross-undici-fetch@^0.0.20:",
          "9516:   version \"0.0.20\"",
          "9517:   resolved \"https://registry.yarnpkg.com/cross-undici-fetch/-/cross-undici-fetch-0.0.20.tgz#6b7c5ac82a3601edd439f37275ac0319d77a120a\"",
          "9518:   integrity sha512-5d3WBC4VRHpFndECK9bx4TngXrw0OUXdhX561Ty1ZoqMASz9uf55BblhTC1CO6GhMWnvk9SOqYEXQliq6D2P4A==",
          "9521:     form-data \"^4.0.0\"",
          "9522:     node-fetch \"^2.6.5\"",
          "9523:     undici \"^4.9.3\"",
          "",
          "[Added Lines]",
          "9525: cross-undici-fetch@^0.1.19:",
          "9526:   version \"0.1.28\"",
          "9527:   resolved \"https://registry.yarnpkg.com/cross-undici-fetch/-/cross-undici-fetch-0.1.28.tgz#40b7071b9ab2d1d6aff889836205e1972092e8d1\"",
          "9528:   integrity sha512-/nLMyVE5IC9PQdBtmgjpGZfK0wo8UupomAPx+7HlbEgVDkZOa9xCiZP9goo5aLYofP0gHXgovjXdXrE2obANag==",
          "9531:     form-data-encoder \"^1.7.1\"",
          "9532:     formdata-node \"^4.3.1\"",
          "9533:     node-fetch \"^2.6.7\"",
          "9534:     undici \"^5.0.0\"",
          "9535:     web-streams-polyfill \"^3.2.0\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10080:   resolved \"https://registry.yarnpkg.com/delegates/-/delegates-1.0.0.tgz#84c6e159b81904fdca59a0ef44cd870d31250f9a\"",
          "10081:   integrity sha1-hMbhWbgZBP3KWaDvRM2HDTElD5o=",
          "10083: depd@~1.1.2:",
          "10084:   version \"1.1.2\"",
          "10085:   resolved \"https://registry.yarnpkg.com/depd/-/depd-1.1.2.tgz#9bcd52e14c097763e749b274c4346ed2e560b5a9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10095: denodeify@^1.2.1:",
          "10096:   version \"1.2.1\"",
          "10097:   resolved \"https://registry.yarnpkg.com/denodeify/-/denodeify-1.2.1.tgz#3a36287f5034e699e7577901052c2e6c94251631\"",
          "10098:   integrity sha1-OjYof1A05pnnV3kBBSwubJQlFjE=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "10149:     address \"^1.0.1\"",
          "10150:     debug \"^2.6.0\"",
          "10152: diff-sequences@^24.9.0:",
          "10153:   version \"24.9.0\"",
          "10154:   resolved \"https://registry.yarnpkg.com/diff-sequences/-/diff-sequences-24.9.0.tgz#5715d6244e2aa65f48bba0bc972db0b0b11e95b5\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10169: didyoumean@^1.2.1:",
          "10170:   version \"1.2.2\"",
          "10171:   resolved \"https://registry.yarnpkg.com/didyoumean/-/didyoumean-1.2.2.tgz#989346ffe9e839b4555ecf5666edea0d3e8ad037\"",
          "10172:   integrity sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "10559:   dependencies:",
          "10560:     ansi-colors \"^4.1.1\"",
          "10563:   version \"1.1.2\"",
          "10564:   resolved \"https://registry.yarnpkg.com/entities/-/entities-1.1.2.tgz#bdfa735299664dfafd34529ed4f8522a275fea56\"",
          "10565:   integrity sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==",
          "",
          "[Removed Lines]",
          "10562: entities@^1.1.1, entities@^1.1.2:",
          "",
          "[Added Lines]",
          "10584: entities@^1.1.1, entities@^1.1.2, entities@~1.1.1:",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10788:   resolved \"https://registry.yarnpkg.com/esbuild-windows-arm64/-/esbuild-windows-arm64-0.13.15.tgz#482173070810df22a752c686509c370c3be3b3c3\"",
          "10789:   integrity sha512-zzvyCVVpbwQQATaf3IG8mu1IwGEiDxKkYUdA4FpoCHi1KtPa13jeScYDjlW0Qh+ebWzpKfR2ZwvqAQkSWNcKjA==",
          "10792:   version \"0.13.15\"",
          "10793:   resolved \"https://registry.yarnpkg.com/esbuild/-/esbuild-0.13.15.tgz#db56a88166ee373f87dbb2d8798ff449e0450cdf\"",
          "10794:   integrity sha512-raCxt02HBKv8RJxE8vkTSCXGIyKHdEdGfUmiYb8wnabnaEmHzyW7DCHb5tEN0xU8ryqg5xw54mcwnYkC4x3AIw==",
          "",
          "[Removed Lines]",
          "10791: esbuild@0.13.15, esbuild@^0.13.12:",
          "",
          "[Added Lines]",
          "10813: esbuild@0.12.15:",
          "10814:   version \"0.12.15\"",
          "10815:   resolved \"https://registry.yarnpkg.com/esbuild/-/esbuild-0.12.15.tgz#9d99cf39aeb2188265c5983e983e236829f08af0\"",
          "10816:   integrity sha512-72V4JNd2+48eOVCXx49xoSWHgC3/cCy96e7mbXKY+WOWghN00cCmlGnwVLRhRHorvv0dgCyuMYBZlM2xDM5OQw==",
          "10818: esbuild@^0.13.12:",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11446:     snapdragon \"^0.8.1\"",
          "11447:     to-regex \"^3.0.1\"",
          "11450:   version \"11.0.0\"",
          "11451:   resolved \"https://registry.yarnpkg.com/extract-files/-/extract-files-11.0.0.tgz#b72d428712f787eef1f5193aff8ab5351ca8469a\"",
          "11452:   integrity sha512-FuoE1qtbJ4bBVvv94CC7s0oTnKUGvQs+Rjf1L2SJFfS+HTVVjhPFtehPdQ0JiGPqVNfSSZvL5yzHHQq2Z4WNhQ==",
          "",
          "[Removed Lines]",
          "11449: extract-files@11.0.0:",
          "",
          "[Added Lines]",
          "11476: extract-files@^11.0.0:",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "11929:     tapable \"^1.0.0\"",
          "11930:     worker-rpc \"^0.1.0\"",
          "11932: form-data@^3.0.0:",
          "11933:   version \"3.0.1\"",
          "11934:   resolved \"https://registry.yarnpkg.com/form-data/-/form-data-3.0.1.tgz#ebd53791b78356a99af9a300d4282c4d5eb9755f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11959: form-data-encoder@^1.7.1:",
          "11960:   version \"1.7.2\"",
          "11961:   resolved \"https://registry.yarnpkg.com/form-data-encoder/-/form-data-encoder-1.7.2.tgz#1f1ae3dccf58ed4690b86d87e4f57c654fbab040\"",
          "11962:   integrity sha512-qfqtYan3rxrnCk1VYaA4H+Ms9xdpPqvLZa6xmMgFvhO32x7/3J/ExcTd6qpxM0vH2GdMI+poehyBZvqfMTto8A==",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "11938:     combined-stream \"^1.0.8\"",
          "11939:     mime-types \"^2.1.12\"",
          "11950: form-data@~2.3.2:",
          "11951:   version \"2.3.3\"",
          "11952:   resolved \"https://registry.yarnpkg.com/form-data/-/form-data-2.3.3.tgz#dcce52c05f644f298c6a7ab936bd724ceffbf3a6\"",
          "",
          "[Removed Lines]",
          "11941: form-data@^4.0.0:",
          "11942:   version \"4.0.0\"",
          "11943:   resolved \"https://registry.yarnpkg.com/form-data/-/form-data-4.0.0.tgz#93919daeaf361ee529584b9b31664dc12c9fa452\"",
          "11944:   integrity sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==",
          "11945:   dependencies:",
          "11946:     asynckit \"^0.4.0\"",
          "11947:     combined-stream \"^1.0.8\"",
          "11948:     mime-types \"^2.1.12\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "11961:   resolved \"https://registry.yarnpkg.com/format/-/format-0.2.2.tgz#d6170107e9efdc4ed30c9dc39016df942b5cb58b\"",
          "11962:   integrity sha1-1hcBB+nv3E7TDJ3DkBbflCtctYs=",
          "11964: forwarded@~0.1.2:",
          "11965:   version \"0.1.2\"",
          "11966:   resolved \"https://registry.yarnpkg.com/forwarded/-/forwarded-0.1.2.tgz#98c23dab1175657b8c0573e8ceccd91b0ff18c84\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11987: formdata-node@^4.3.1:",
          "11988:   version \"4.3.2\"",
          "11989:   resolved \"https://registry.yarnpkg.com/formdata-node/-/formdata-node-4.3.2.tgz#0262e94931e36db7239c2b08bdb6aaf18ec47d21\"",
          "11990:   integrity sha512-k7lYJyzDOSL6h917favP8j1L0/wNyylzU+x+1w4p5haGVHNlP58dbpdJhiCUsDbWsa9HwEtLp89obQgXl2e0qg==",
          "11991:   dependencies:",
          "11992:     node-domexception \"1.0.0\"",
          "11993:     web-streams-polyfill \"4.0.0-beta.1\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "12526:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "12528: \"graphiql@file:packages/graphiql\":",
          "12530:   dependencies:",
          "12532:     codemirror \"^5.58.2\"",
          "12534:     copy-to-clipboard \"^3.2.0\"",
          "12535:     entities \"^2.0.0\"",
          "12536:     escape-html \"^1.0.3\"",
          "",
          "[Removed Lines]",
          "12529:   version \"1.8.0\"",
          "12531:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "12533:     codemirror-graphql \"^1.2.14\"",
          "",
          "[Added Lines]",
          "12560:   version \"1.8.4\"",
          "12562:     \"@graphiql/toolkit\" \"^0.4.3\"",
          "12564:     codemirror-graphql \"^1.2.15\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "12538:     markdown-it \"^12.2.0\"",
          "12539:     set-value \"^4.1.0\"",
          "12545:   dependencies:",
          "12546:     \"@endemolshinegroup/cosmiconfig-typescript-loader\" \"3.0.2\"",
          "12553:     cosmiconfig \"7.0.1\"",
          "12554:     cosmiconfig-toml-loader \"1.0.0\"",
          "12556:     string-env-interpolation \"1.0.1\"",
          "12558: graphql-sse@^1.0.1:",
          "12559:   version \"1.0.6\"",
          "12560:   resolved \"https://registry.yarnpkg.com/graphql-sse/-/graphql-sse-1.0.6.tgz#4f98e0a06f2020542ed054399116108491263224\"",
          "",
          "[Removed Lines]",
          "12541: graphql-config@^4.1.0:",
          "12542:   version \"4.1.0\"",
          "12543:   resolved \"https://registry.yarnpkg.com/graphql-config/-/graphql-config-4.1.0.tgz#a3b28d3fb537952ebeb69c75e4430605a10695e3\"",
          "12544:   integrity sha512-Myqay6pmdcmX3KqoH+bMbeKZ1cTODpHS2CxF1ZzNnfTE+YUpGTcp01bOw6LpzamRb0T/WTYtGFbZeXGo9Hab2Q==",
          "12547:     \"@graphql-tools/graphql-file-loader\" \"^7.3.2\"",
          "12548:     \"@graphql-tools/json-file-loader\" \"^7.3.2\"",
          "12549:     \"@graphql-tools/load\" \"^7.4.1\"",
          "12550:     \"@graphql-tools/merge\" \"^8.2.1\"",
          "12551:     \"@graphql-tools/url-loader\" \"^7.4.2\"",
          "12552:     \"@graphql-tools/utils\" \"^8.5.1\"",
          "12555:     minimatch \"3.0.4\"",
          "",
          "[Added Lines]",
          "12572: graphql-config@^4.3.0:",
          "12573:   version \"4.3.0\"",
          "12574:   resolved \"https://registry.yarnpkg.com/graphql-config/-/graphql-config-4.3.0.tgz#b9bb7bf9c892a90e66ea937e8d7ed170eb1fd5e2\"",
          "12575:   integrity sha512-Uiu3X7+s5c056WyrvdZVz2vG1fhAipMlYmtiCU/4Z2mX79OXDr1SqIon2MprC/pExIWJfAQZCcjYDY76fPBUQg==",
          "12578:     \"@graphql-tools/graphql-file-loader\" \"^7.3.7\"",
          "12579:     \"@graphql-tools/json-file-loader\" \"^7.3.7\"",
          "12580:     \"@graphql-tools/load\" \"^7.5.5\"",
          "12581:     \"@graphql-tools/merge\" \"^8.2.6\"",
          "12582:     \"@graphql-tools/url-loader\" \"^7.9.7\"",
          "12583:     \"@graphql-tools/utils\" \"^8.6.5\"",
          "12586:     minimatch \"4.2.1\"",
          "12589: graphql-executor@0.0.22:",
          "12590:   version \"0.0.22\"",
          "12591:   resolved \"https://registry.yarnpkg.com/graphql-executor/-/graphql-executor-0.0.22.tgz#14bc466bb27ab38346998e0b375cba55685eed94\"",
          "12592:   integrity sha512-WbKSnSHFn6REKKH4T6UAwDM3mLUnYMQlQLNG0Fw+Lkb3ilCnL3m5lkJ7411LAI9sF7BvPbthovVZhsEUh9Xfag==",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "13947:     node-fetch \"^2.6.1\"",
          "13948:     whatwg-fetch \"^3.4.1\"",
          "13951:   version \"4.0.1\"",
          "13952:   resolved \"https://registry.yarnpkg.com/isomorphic-ws/-/isomorphic-ws-4.0.1.tgz#55fd4cd6c5e6491e76dc125938dd863f5cd4f2dc\"",
          "13953:   integrity sha512-BhBvN2MBpWTaSHdWRb/bwdZJ1WaehQ2L1KngkCkfLUGF0mAWAT1sQUQacEmQ0jXkFw/czDXPNQSL5u2/Krsz1w==",
          "",
          "[Removed Lines]",
          "13950: isomorphic-ws@4.0.1:",
          "",
          "[Added Lines]",
          "13986: isomorphic-ws@^4.0.1:",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "15693:   resolved \"https://registry.yarnpkg.com/lodash.uniq/-/lodash.uniq-4.5.0.tgz#d0225373aeb652adc1bc82e4945339a842754773\"",
          "15694:   integrity sha1-0CJTc662Uq3BvILklFM5qEJ1R3M=",
          "15697:   version \"4.17.21\"",
          "15698:   resolved \"https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c\"",
          "15699:   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
          "",
          "[Removed Lines]",
          "15696: lodash@^4.17.11, lodash@^4.17.12, lodash@^4.17.13, lodash@^4.17.14, lodash@^4.17.15, lodash@^4.17.19, lodash@^4.17.21, lodash@^4.7.0:",
          "",
          "[Added Lines]",
          "15732: lodash@^4.17.10, lodash@^4.17.11, lodash@^4.17.12, lodash@^4.17.13, lodash@^4.17.14, lodash@^4.17.15, lodash@^4.17.19, lodash@^4.17.21, lodash@^4.7.0:",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "15897:     mdurl \"^1.0.1\"",
          "15898:     uc.micro \"^1.0.5\"",
          "15900: markdown-to-jsx@^6.11.4:",
          "15901:   version \"6.11.4\"",
          "15902:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15936: markdown-it@^8.3.1:",
          "15937:   version \"8.4.2\"",
          "15938:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-8.4.2.tgz#386f98998dc15a37722aa7722084f4020bdd9b54\"",
          "15939:   integrity sha512-GcRz3AWTqSUphY3vsUqQSFMbgR38a4Lh3GWlHRh/7MRwz8mcu9n2IO7HOh+bXHrR9kOPDl5RNCaEsrneb+xhHQ==",
          "15940:   dependencies:",
          "15941:     argparse \"^1.0.7\"",
          "15942:     entities \"~1.1.1\"",
          "15943:     linkify-it \"^2.0.0\"",
          "15944:     mdurl \"^1.0.1\"",
          "15945:     uc.micro \"^1.0.5\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16051:   resolved \"https://registry.yarnpkg.com/merge/-/merge-1.2.1.tgz#38bebf80c3220a8a487b6fcfb3941bb11720c145\"",
          "16052:   integrity sha512-VjFo4P5Whtj4vsLzsYBu5ayHhoHJ0UqNm7ibvShmbmoz7tGi0vXaoJbGdB+GmDMLUdg8DpQXEIeVDAe8MaABvQ==",
          "16055:   version \"1.1.4\"",
          "16056:   resolved \"https://registry.yarnpkg.com/meros/-/meros-1.1.4.tgz#c17994d3133db8b23807f62bec7f0cb276cfd948\"",
          "16057:   integrity sha512-E9ZXfK9iQfG9s73ars9qvvvbSIkJZF5yOo9j4tcwM5tN8mUKfj/EKN5PzOr3ZH0y5wL7dLAHw3RVEfpQV9Q7VQ==",
          "",
          "[Removed Lines]",
          "16054: meros@1.1.4, meros@^1.1.4:",
          "",
          "[Added Lines]",
          "16101: meros@^1.1.4:",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "16236:   dependencies:",
          "16237:     brace-expansion \"^1.1.7\"",
          "16239: minimatch@^3.0.3:",
          "16240:   version \"3.1.2\"",
          "16241:   resolved \"https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16286: minimatch@4.2.1:",
          "16287:   version \"4.2.1\"",
          "16288:   resolved \"https://registry.yarnpkg.com/minimatch/-/minimatch-4.2.1.tgz#40d9d511a46bdc4e563c22c3080cde9c0d8299b4\"",
          "16289:   integrity sha512-9Uq1ChtSZO+Mxa/CL1eGizn2vRn3MlLgzhT0Iz8zaY8NdvxvB0d5QdPFmCKf7JKA9Lerx5vRrnwO03jsSfGG9g==",
          "16290:   dependencies:",
          "16291:     brace-expansion \"^1.1.7\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "16507:   dependencies:",
          "16508:     minimatch \"^3.0.2\"",
          "16510: node-environment-flags@^1.0.5:",
          "16511:   version \"1.0.6\"",
          "16512:   resolved \"https://registry.yarnpkg.com/node-environment-flags/-/node-environment-flags-1.0.6.tgz#a30ac13621f6f7d674260a54dede048c3982c088\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16564: node-domexception@1.0.0:",
          "16565:   version \"1.0.0\"",
          "16566:   resolved \"https://registry.yarnpkg.com/node-domexception/-/node-domexception-1.0.0.tgz#6888db46a1f71c0b76b3f7555016b63fe64766e5\"",
          "16567:   integrity sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "16520:   resolved \"https://registry.yarnpkg.com/node-fetch/-/node-fetch-2.6.1.tgz#045bd323631f76ed2e2b55573394416b639a0052\"",
          "16521:   integrity sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw==",
          "16527:   dependencies:",
          "16528:     whatwg-url \"^5.0.0\"",
          "",
          "[Removed Lines]",
          "16523: node-fetch@^2.6.5:",
          "16524:   version \"2.6.6\"",
          "16525:   resolved \"https://registry.yarnpkg.com/node-fetch/-/node-fetch-2.6.6.tgz#1751a7c01834e8e1697758732e9efb6eeadfaf89\"",
          "16526:   integrity sha512-Z8/6vRlTUChSdIgMa51jxQ4lrw/Jy5SOW10ObaA47/RElsAN2c5Pn8bTgFGWn/ibwzXTE8qwr1Yzx28vsecXEA==",
          "",
          "[Added Lines]",
          "16582: node-fetch@^2.6.7:",
          "16583:   version \"2.6.7\"",
          "16584:   resolved \"https://registry.yarnpkg.com/node-fetch/-/node-fetch-2.6.7.tgz#24de9fba827e3b4ae44dc8b20256a379160052ad\"",
          "16585:   integrity sha512-ZjMPFEfVx5j+y2yF35Kzx5sF7kDzxuDj6ziH4FFbOp87zKDZNx8yExJIb05OGF4Nlt9IHFIMBkRl41VdvcNdbQ==",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "16997:   resolved \"https://registry.yarnpkg.com/os-browserify/-/os-browserify-0.3.0.tgz#854373c7f5c2315914fc9bfc6bd8238fdda1ec27\"",
          "16998:   integrity sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=",
          "17001:   version \"1.0.2\"",
          "17002:   resolved \"https://registry.yarnpkg.com/os-homedir/-/os-homedir-1.0.2.tgz#ffbc4988336e0e833de0c168c7ef152121aa7fb3\"",
          "17003:   integrity sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
          "17006:   version \"1.0.2\"",
          "17007:   resolved \"https://registry.yarnpkg.com/os-tmpdir/-/os-tmpdir-1.0.2.tgz#bbe67406c79aa85c5cfec766fe5734555dfa1274\"",
          "17008:   integrity sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
          "17010: ospath@^1.2.2:",
          "17011:   version \"1.2.2\"",
          "17012:   resolved \"https://registry.yarnpkg.com/ospath/-/ospath-1.2.2.tgz#1276639774a3f8ef2572f7fe4280e0ea4550c07b\"",
          "",
          "[Removed Lines]",
          "17000: os-homedir@^1.0.1:",
          "17005: os-tmpdir@~1.0.2:",
          "",
          "[Added Lines]",
          "17059: os-homedir@^1.0.0, os-homedir@^1.0.1:",
          "17064: os-tmpdir@^1.0.0, os-tmpdir@~1.0.1, os-tmpdir@~1.0.2:",
          "17069: os@0.1.1:",
          "17070:   version \"0.1.1\"",
          "17071:   resolved \"https://registry.yarnpkg.com/os/-/os-0.1.1.tgz#208845e89e193ad4d971474b93947736a56d13f3\"",
          "17072:   integrity sha1-IIhF6J4ZOtTZcUdLk5R3NqVtE/M=",
          "17074: osenv@^0.1.3:",
          "17075:   version \"0.1.5\"",
          "17076:   resolved \"https://registry.yarnpkg.com/osenv/-/osenv-0.1.5.tgz#85cdfafaeb28e8677f416e287592b5f3f49ea410\"",
          "17077:   integrity sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",
          "17078:   dependencies:",
          "17079:     os-homedir \"^1.0.0\"",
          "17080:     os-tmpdir \"^1.0.0\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "20915:     es-abstract \"^1.17.0-next.1\"",
          "20916:     has-symbols \"^1.0.1\"",
          "20919:   version \"0.3.1\"",
          "20920:   resolved \"https://registry.yarnpkg.com/sync-fetch/-/sync-fetch-0.3.1.tgz#62aa82c4b4d43afd6906bfd7b5f92056458509f0\"",
          "20921:   integrity sha512-xj5qiCDap/03kpci5a+qc5wSJjc8ZSixgG2EUmH1B8Ea2sfWclQA7eH40hiHPCtkCn6MCk4Wb+dqcXdCy2PP3g==",
          "",
          "[Removed Lines]",
          "20918: sync-fetch@0.3.1:",
          "",
          "[Added Lines]",
          "20990: sync-fetch@^0.3.1:",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "21128:   resolved \"https://registry.yarnpkg.com/tiny-emitter/-/tiny-emitter-2.1.0.tgz#1d1a56edfc51c43e863cbb5382a72330e3555423\"",
          "21129:   integrity sha512-NB6Dk1A9xgQPMoGqC5CVXn123gWyte215ONT5Pp5a0yt4nlEoO1ZWeCwpncaekPHXO60i47ihFnZPiRPjRMq4Q==",
          "21131: tmp@^0.0.33:",
          "21132:   version \"0.0.33\"",
          "21133:   resolved \"https://registry.yarnpkg.com/tmp/-/tmp-0.0.33.tgz#6d34335889768d21b2bcda0aa277ced3b1bfadf9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21203: tmp@0.0.29:",
          "21204:   version \"0.0.29\"",
          "21205:   resolved \"https://registry.yarnpkg.com/tmp/-/tmp-0.0.29.tgz#f25125ff0dd9da3ccb0c2dd371ee1288bb9128c0\"",
          "21206:   integrity sha1-8lEl/w3Z2jzLDC3Tce4SiLuRKMA=",
          "21207:   dependencies:",
          "21208:     os-tmpdir \"~1.0.1\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "21360:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-1.13.0.tgz#c881e13cc7015894ed914862d276436fa9a47043\"",
          "21361:   integrity sha512-i/6DQjL8Xf3be4K/E6Wgpekn5Qasl1usyw++dAA35Ue5orEn65VIxOA+YvNNl9HV3qv70T7CNwjODHZrLwvd1Q==",
          "21364:   version \"2.3.1\"",
          "21365:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.3.1.tgz#e8a335add5ceae51aa261d32a490158ef042ef01\"",
          "21366:   integrity sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw==",
          "",
          "[Removed Lines]",
          "21363: tslib@^2, tslib@^2.2.0, tslib@~2.3.0:",
          "",
          "[Added Lines]",
          "21442: tslib@^2, tslib@^2.2.0, tslib@^2.3.0, tslib@~2.3.0:",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "21406:   dependencies:",
          "21407:     safe-buffer \"^5.0.1\"",
          "21409: tunnel@0.0.6:",
          "21410:   version \"0.0.6\"",
          "21411:   resolved \"https://registry.yarnpkg.com/tunnel/-/tunnel-0.0.6.tgz#72f1314b34a5b192db012324df2cc587ca47f92c\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21488: tunnel@0.0.4:",
          "21489:   version \"0.0.4\"",
          "21490:   resolved \"https://registry.yarnpkg.com/tunnel/-/tunnel-0.0.4.tgz#2d3785a158c174c9a16dc2c046ec5fc5f1742213\"",
          "21491:   integrity sha1-LTeFoVjBdMmhbcLARuxfxfF0IhM=",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "21461:     media-typer \"0.3.0\"",
          "21462:     mime-types \"~2.1.24\"",
          "21464: typed-rest-client@^1.8.4:",
          "21465:   version \"1.8.6\"",
          "21466:   resolved \"https://registry.yarnpkg.com/typed-rest-client/-/typed-rest-client-1.8.6.tgz#d8facd6abd98cbd8ad14cccf056ca5cc306919d7\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21548: typed-rest-client@1.2.0:",
          "21549:   version \"1.2.0\"",
          "21550:   resolved \"https://registry.yarnpkg.com/typed-rest-client/-/typed-rest-client-1.2.0.tgz#723085d203f38d7d147271e5ed3a75488eb44a02\"",
          "21551:   integrity sha512-FrUshzZ1yxH8YwGR29PWWnfksLEILbWJydU7zfIRkyH7kAEzB62uMAl2WY6EyolWpLpVHeJGgQm45/MaruaHpw==",
          "21552:   dependencies:",
          "21553:     tunnel \"0.0.4\"",
          "21554:     underscore \"1.8.3\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "21542:   resolved \"https://registry.yarnpkg.com/unc-path-regex/-/unc-path-regex-0.1.2.tgz#e73dd3d7b0d7c5ed86fbac6b0ae7d8c6a69d50fa\"",
          "21543:   integrity sha1-5z3T17DXxe2G+6xrCufYxqadUPo=",
          "21545: underscore@^1.12.1:",
          "21546:   version \"1.13.2\"",
          "21547:   resolved \"https://registry.yarnpkg.com/underscore/-/underscore-1.13.2.tgz#276cea1e8b9722a8dbed0100a407dda572125881\"",
          "21548:   integrity sha512-ekY1NhRzq0B08g4bGuX4wd2jZx5GnKz6mKSqFL4nqBlfyMGiG10gDFhDTMEfYmDL6Jy0FUIZp7wiRB+0BP7J2g==",
          "21555: unfetch@^4.1.0:",
          "21556:   version \"4.1.0\"",
          "",
          "[Removed Lines]",
          "21550: undici@^4.9.3:",
          "21551:   version \"4.10.2\"",
          "21552:   resolved \"https://registry.yarnpkg.com/undici/-/undici-4.10.2.tgz#27e360f2d4202ef98dfc1c8e13dcd329660a6d7c\"",
          "21553:   integrity sha512-QoQH4PpV3dqJwr4h1HazggbB4f5CBknvYANjI9hxXCml+AAzLoh4HBkce0Jc0wW/pmVbrus8Gfeo8QounE+/9g==",
          "",
          "[Added Lines]",
          "21637: underscore@1.8.3:",
          "21638:   version \"1.8.3\"",
          "21639:   resolved \"https://registry.yarnpkg.com/underscore/-/underscore-1.8.3.tgz#4f3fb53b106e6097fcf9cb4109f2a5e9bdfa5022\"",
          "21640:   integrity sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=",
          "21647: undici@^5.0.0:",
          "21648:   version \"5.0.0\"",
          "21649:   resolved \"https://registry.yarnpkg.com/undici/-/undici-5.0.0.tgz#3c1e08c7f0df90c485d5d8dbb0517e11e34f2090\"",
          "21650:   integrity sha512-VhUpiZ3No1DOPPQVQnsDZyfcbTTcHdcgWej1PdFnSvOeJmOVDgiOHkunJmBLfmjt4CqgPQddPVjSWW0dsTs5Yg==",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "21707:   resolved \"https://registry.yarnpkg.com/urix/-/urix-0.1.0.tgz#da937f7a62e21fec1fd18d49b35c2935067a6c72\"",
          "21708:   integrity sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=",
          "21710: url-join@^4.0.1:",
          "21711:   version \"4.0.1\"",
          "21712:   resolved \"https://registry.yarnpkg.com/url-join/-/url-join-4.0.1.tgz#b642e21a2646808ffa178c4c5fda39844e12cde7\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21807: url-join@^1.1.0:",
          "21808:   version \"1.1.0\"",
          "21809:   resolved \"https://registry.yarnpkg.com/url-join/-/url-join-1.1.0.tgz#741c6c2f4596c4830d6718460920d0c92202dc78\"",
          "21810:   integrity sha1-dBxsL0WWxIMNZxhGCSDQySIC3Hg=",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "21849:   dependencies:",
          "21850:     homedir-polyfill \"^1.0.1\"",
          "21857: validate-npm-package-license@^3.0.1:",
          "21858:   version \"3.0.4\"",
          "21859:   resolved \"https://registry.yarnpkg.com/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz#fc91f6b9c7ba15c857f4cb2c5defeec39d4f410a\"",
          "",
          "[Removed Lines]",
          "21852: valid-url@1.0.9:",
          "21853:   version \"1.0.9\"",
          "21854:   resolved \"https://registry.yarnpkg.com/valid-url/-/valid-url-1.0.9.tgz#1c14479b40f1397a75782f115e4086447433a200\"",
          "21855:   integrity sha1-HBRHm0DxOXp1eC8RXkCGRHQzogA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "21869:   dependencies:",
          "21870:     builtins \"^1.0.3\"",
          "21873:   version \"1.0.11\"",
          "21874:   resolved \"https://registry.yarnpkg.com/value-or-promise/-/value-or-promise-1.0.11.tgz#3e90299af31dd014fe843fe309cefa7c1d94b140\"",
          "21875:   integrity sha512-41BrgH+dIbCFXClcSapVs5M6GkENd3gQOJpEfPDNa71LsUGMXDL0jMWpI/Rh7WhX+Aalfz2TTS3Zt5pUsbnhLg==",
          "",
          "[Removed Lines]",
          "21872: value-or-promise@1.0.11:",
          "",
          "[Added Lines]",
          "21969: value-or-promise@1.0.11, value-or-promise@^1.0.11:",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "21929:   resolved \"https://registry.yarnpkg.com/void-elements/-/void-elements-2.0.1.tgz#c066afb582bb1cb4128d60ea92392e94d5e9dbec\"",
          "21930:   integrity sha1-wGavtYK7HLQSjWDqkjkulNXp2+w=",
          "21936:   dependencies:",
          "21938:     chalk \"^2.4.2\"",
          "21941:     glob \"^7.0.6\"",
          "21946:     mime \"^1.3.4\"",
          "21947:     minimatch \"^3.0.3\"",
          "21948:     parse-semver \"^1.1.1\"",
          "21949:     read \"^1.0.7\"",
          "21950:     semver \"^5.1.0\"",
          "21955:     yauzl \"^2.3.1\"",
          "21956:     yazl \"^2.2.2\"",
          "",
          "[Removed Lines]",
          "21932: vsce@2.6.7:",
          "21933:   version \"2.6.7\"",
          "21934:   resolved \"https://registry.yarnpkg.com/vsce/-/vsce-2.6.7.tgz#e590ff957d07910c471334857627c3e7f57e87bc\"",
          "21935:   integrity sha512-5dEtdi/yzWQbOU7JDUSOs8lmSzzkewBR5P122BUkmXE6A/DEdFsKNsg2773NGXJTwwF1MfsOgUR6QVF3cLLJNQ==",
          "21937:     azure-devops-node-api \"^11.0.1\"",
          "21939:     cheerio \"^1.0.0-rc.9\"",
          "21940:     commander \"^6.1.0\"",
          "21942:     hosted-git-info \"^4.0.2\"",
          "21943:     keytar \"^7.7.0\"",
          "21944:     leven \"^3.1.0\"",
          "21945:     markdown-it \"^12.3.2\"",
          "21951:     tmp \"^0.2.1\"",
          "21952:     typed-rest-client \"^1.8.4\"",
          "21953:     url-join \"^4.0.1\"",
          "21954:     xml2js \"^0.4.23\"",
          "",
          "[Added Lines]",
          "22029: vsce-yarn-patch@^1.66.2:",
          "22030:   version \"1.66.2\"",
          "22031:   resolved \"https://registry.yarnpkg.com/vsce-yarn-patch/-/vsce-yarn-patch-1.66.2.tgz#b217a9d73ee715ad41ec44393a5d78ed0955ab44\"",
          "22032:   integrity sha512-IJjBF/WQWQvEIikI93qDEhiugjVFDgibqsBa2roawp5abeovPZ9/bzLt0b9AylBtP60q2qSMWsGtf1hZBAs7fw==",
          "22034:     azure-devops-node-api \"^7.2.0\"",
          "22036:     cheerio \"^1.0.0-rc.1\"",
          "22037:     commander \"^2.8.1\"",
          "22038:     denodeify \"^1.2.1\"",
          "22039:     didyoumean \"^1.2.1\"",
          "22041:     lodash \"^4.17.10\"",
          "22042:     markdown-it \"^8.3.1\"",
          "22045:     osenv \"^0.1.3\"",
          "22049:     tmp \"0.0.29\"",
          "22050:     typed-rest-client \"1.2.0\"",
          "22051:     url-join \"^1.1.0\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "22132:   dependencies:",
          "22133:     defaults \"^1.0.3\"",
          "22135: webidl-conversions@^3.0.0:",
          "22136:   version \"3.0.1\"",
          "22137:   resolved \"https://registry.yarnpkg.com/webidl-conversions/-/webidl-conversions-3.0.1.tgz#24534275e2a7bc6be7bc86611cc16ae0a5654871\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22232: web-streams-polyfill@4.0.0-beta.1:",
          "22233:   version \"4.0.0-beta.1\"",
          "22234:   resolved \"https://registry.yarnpkg.com/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.1.tgz#3b19b9817374b7cee06d374ba7eeb3aeb80e8c95\"",
          "22235:   integrity sha512-3ux37gEX670UUphBF9AMCq8XM6iQ8Ac6A+DSRRjDoRBm1ufCkaCDdNVbaqq60PsEkdNlLKrGtv/YBP4EJXqNtQ==",
          "22237: web-streams-polyfill@^3.2.0:",
          "22238:   version \"3.2.1\"",
          "22239:   resolved \"https://registry.yarnpkg.com/web-streams-polyfill/-/web-streams-polyfill-3.2.1.tgz#71c2718c52b45fd49dbeee88634b3a60ceab42a6\"",
          "22240:   integrity sha512-e0MO3wdXWKrLbL0DgGnUV7WHVuw9OUvL4hjgnPkIeEvESk74gAITi5G606JtZPp39cd8HA9VQzCIvA49LpPN5Q==",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "22605:   dependencies:",
          "22606:     mkdirp \"^0.5.1\"",
          "22613: \"ws@^5.2.0 || ^6.0.0 || ^7.0.0\", ws@^7.4.6:",
          "22614:   version \"7.5.5\"",
          "22615:   resolved \"https://registry.yarnpkg.com/ws/-/ws-7.5.5.tgz#8b4bc4af518cfabd0473ae4f99144287b33eb881\"",
          "",
          "[Removed Lines]",
          "22608: ws@8.2.3:",
          "22609:   version \"8.2.3\"",
          "22610:   resolved \"https://registry.yarnpkg.com/ws/-/ws-8.2.3.tgz#63a56456db1b04367d0b721a0b80cae6d8becbba\"",
          "22611:   integrity sha512-wBuoj1BDpC6ZQ1B7DWQBYVLphPWkm8i9Y0/3YdHjHKHiohOJ1ws+3OccDWtH+PoC9DZD5WOTrJvNbWvjS6JWaA==",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dfe3ece4e8ab6b3400888f7f357e394db63439d",
      "candidate_info": {
        "commit_hash": "7dfe3ece4e8ab6b3400888f7f357e394db63439d",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/7dfe3ece4e8ab6b3400888f7f357e394db63439d",
        "files": [
          ".changeset/dull-pears-clap.md",
          ".changeset/early-roses-shop.md",
          "packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/query-editor.tsx",
          "packages/graphiql-react/src/editor/response-editor.tsx",
          "packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/utility/resize.tsx",
          "packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/support/commands.ts",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/ResultViewer.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css",
          "packages/graphiql/src/css/doc-explorer.css",
          "packages/graphiql/src/utility/elementPosition.ts"
        ],
        "message": "add generic `DragResizeContainer` component for drag-resizing elements to `@graphiql/react` (#2461)\n\n* add `DragResizeContainer` component\n\n* use `DragResizeContainer` for horizontal editor sizing\n\n* use `DragResizeContainer` for secondary editors\n\n* use `DragResizeContainer` for resizing docs\n\n* remove unused refs\n\n* remove `headerEditorEnabled` from state\n\n* simplify state\n\n* fix resizing of editors\n\n* rename reset to show and restore size when programmatically hiding and showing elements\n\n* use hooks for greater programatic flexibility",
        "before_after_code_files": [
          "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/query-editor.tsx||packages/graphiql-react/src/editor/query-editor.tsx",
          "packages/graphiql-react/src/editor/response-editor.tsx||packages/graphiql-react/src/editor/response-editor.tsx",
          "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/utility/resize.tsx||packages/graphiql-react/src/utility/resize.tsx",
          "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/ResultViewer.tsx||packages/graphiql/src/components/ResultViewer.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css",
          "packages/graphiql/src/css/doc-explorer.css||packages/graphiql/src/css/doc-explorer.css",
          "packages/graphiql/src/utility/elementPosition.ts||packages/graphiql/src/utility/elementPosition.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx": [
          "File: packages/graphiql-react/src/editor/header-editor.tsx -> packages/graphiql-react/src/editor/header-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   useKeyMap,",
          "11:   useMergeQuery,",
          "12:   usePrettifyEditors,",
          "14: } from './hooks';",
          "16: export type UseHeaderEditorArgs = {",
          "",
          "[Removed Lines]",
          "13:   useResizeEditor,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117:   useKeyMap(headerEditor, ['Shift-Ctrl-P'], prettify);",
          "118:   useKeyMap(headerEditor, ['Shift-Ctrl-M'], merge);",
          "122:   return ref;",
          "123: }",
          "",
          "[Removed Lines]",
          "120:   useResizeEditor(headerEditor, ref);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts": [
          "File: packages/graphiql-react/src/editor/hooks.ts -> packages/graphiql-react/src/editor/hooks.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:   }, [editor, keys, callback]);",
          "123: }",
          "142: export type CopyQueryCallback = (query: string) => void;",
          "144: export function useCopyQuery({",
          "",
          "[Removed Lines]",
          "125: export function useResizeEditor(",
          "126:   editor: CodeMirrorEditor | null,",
          "127:   ref: RefObject<HTMLDivElement>,",
          "128: ) {",
          "129:   const sizeRef = useRef<number>();",
          "130:   useEffect(() => {",
          "131:     if (!ref.current || !editor) {",
          "132:       return;",
          "133:     }",
          "134:     const size = ref.current.clientHeight;",
          "135:     if (size !== sizeRef.current) {",
          "136:       editor.setSize(null, null); // TODO: added the args here. double check no effects. might be version issue",
          "137:     }",
          "138:     sizeRef.current = size;",
          "139:   });",
          "140: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/query-editor.tsx||packages/graphiql-react/src/editor/query-editor.tsx": [
          "File: packages/graphiql-react/src/editor/query-editor.tsx -> packages/graphiql-react/src/editor/query-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   useKeyMap,",
          "29:   useMergeQuery,",
          "30:   usePrettifyEditors,",
          "32: } from './hooks';",
          "33: import { CodeMirrorEditor, CodeMirrorType } from './types';",
          "34: import { normalizeWhitespace } from './whitespace';",
          "",
          "[Removed Lines]",
          "31:   useResizeEditor,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: export type UseQueryEditorArgs = {",
          "39:   editorTheme?: string;",
          "40:   externalFragments?: string | FragmentDefinitionNode[];",
          "41:   onEdit?(value: string, documentAST?: DocumentNode): void;",
          "42:   onEditOperationName?: EditCallback;",
          "44:   readOnly?: boolean;",
          "45:   validationRules?: ValidationRule[];",
          "46: };",
          "",
          "[Removed Lines]",
          "43:   onCopyQuery?: CopyQueryCallback;",
          "",
          "[Added Lines]",
          "40:   onClickReference?: OnClickReference;",
          "41:   onCopyQuery?: CopyQueryCallback;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48: export function useQueryEditor({",
          "49:   editorTheme = 'graphiql',",
          "50:   externalFragments,",
          "51:   onEdit,",
          "52:   onEditOperationName,",
          "54:   readOnly = false,",
          "55:   validationRules,",
          "56: }: UseQueryEditorArgs = {}) {",
          "",
          "[Removed Lines]",
          "53:   onCopyQuery,",
          "",
          "[Added Lines]",
          "51:   onClickReference,",
          "52:   onCopyQuery,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "93:       } else if (reference.kind === 'EnumValue' && reference.type) {",
          "94:         explorer.push({ name: reference.type.name, def: reference.type });",
          "95:       }",
          "96:     };",
          "99:   useEffect(() => {",
          "100:     let isActive = true;",
          "",
          "[Removed Lines]",
          "97:   }, [explorer]);",
          "",
          "[Added Lines]",
          "97:       onClickReference?.(reference);",
          "99:   }, [explorer, onClickReference]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "335:   );",
          "336:   useKeyMap(queryEditor, ['Shift-Ctrl-M'], merge);",
          "340:   return ref;",
          "341: }",
          "",
          "[Removed Lines]",
          "338:   useResizeEditor(queryEditor, ref);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/response-editor.tsx||packages/graphiql-react/src/editor/response-editor.tsx": [
          "File: packages/graphiql-react/src/editor/response-editor.tsx -> packages/graphiql-react/src/editor/response-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import { commonKeys, importCodeMirror } from './common';",
          "8: import { ImagePreview } from './components';",
          "9: import { useEditorContext } from './context';",
          "11: import { CodeMirrorEditor } from './types';",
          "13: export type ResponseTooltipType = ComponentType<{ pos: Position }>;",
          "",
          "[Removed Lines]",
          "10: import { useResizeEditor, useSynchronizeValue } from './hooks';",
          "",
          "[Added Lines]",
          "10: import { useSynchronizeValue } from './hooks';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122:   useSynchronizeValue(responseEditor, value);",
          "126:   useEffect(() => {",
          "127:     if (fetchError) {",
          "128:       responseEditor?.setValue(fetchError);",
          "",
          "[Removed Lines]",
          "124:   useResizeEditor(responseEditor, ref);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx": [
          "File: packages/graphiql-react/src/editor/variable-editor.tsx -> packages/graphiql-react/src/editor/variable-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   useKeyMap,",
          "11:   useMergeQuery,",
          "12:   usePrettifyEditors,",
          "14: } from './hooks';",
          "15: import { CodeMirrorType } from './types';",
          "",
          "[Removed Lines]",
          "13:   useResizeEditor,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "135:   useKeyMap(variableEditor, ['Shift-Ctrl-P'], prettify);",
          "136:   useKeyMap(variableEditor, ['Shift-Ctrl-M'], merge);",
          "140:   return ref;",
          "141: }",
          "",
          "[Removed Lines]",
          "138:   useResizeEditor(variableEditor, ref);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   StorageContextProvider,",
          "40:   useStorageContext,",
          "41: } from './storage';",
          "43: import type {",
          "44:   EditorContextType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import { useDragResize } from './utility/resize';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:   StorageContext,",
          "97:   StorageContextProvider,",
          "98:   useStorageContext,",
          "99: };",
          "101: export type {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:   useDragResize,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/utility/resize.tsx||packages/graphiql-react/src/utility/resize.tsx": [
          "File: packages/graphiql-react/src/utility/resize.tsx -> packages/graphiql-react/src/utility/resize.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   useCallback,",
          "3:   useEffect,",
          "4:   useLayoutEffect,",
          "5:   useMemo,",
          "6:   useRef,",
          "7:   useState,",
          "8: } from 'react';",
          "10: import { useStorageContext } from '../storage';",
          "11: import debounce from './debounce';",
          "13: type ResizableElement = 'first' | 'second';",
          "15: type UseDragResizeArgs = {",
          "16:   defaultSizeRelation?: number;",
          "17:   direction: 'horizontal' | 'vertical';",
          "18:   initiallyHidden?: ResizableElement;",
          "19:   onHiddenElementChange?(hiddenElement: ResizableElement | null): void;",
          "20:   sizeThresholdFirst?: number;",
          "21:   sizeThresholdSecond?: number;",
          "22:   storageKey?: string;",
          "23: };",
          "25: export function useDragResize({",
          "26:   defaultSizeRelation = DEFAULT_FLEX,",
          "27:   direction,",
          "28:   initiallyHidden,",
          "29:   onHiddenElementChange,",
          "30:   sizeThresholdFirst = 100,",
          "31:   sizeThresholdSecond = 100,",
          "32:   storageKey,",
          "33: }: UseDragResizeArgs) {",
          "34:   const storage = useStorageContext();",
          "36:   const store = useCallback(",
          "37:     debounce(500, (value: string) => {",
          "38:       if (storage && storageKey) {",
          "39:         storage.set(storageKey, value);",
          "40:       }",
          "41:     }),",
          "42:     [storage, storageKey],",
          "43:   );",
          "45:   const [hiddenElement, _setHiddenElement] = useState<ResizableElement | null>(",
          "46:     () => {",
          "47:       const storedValue =",
          "48:         storage && storageKey ? storage.get(storageKey) : null;",
          "49:       if (storedValue === HIDE_FIRST || initiallyHidden === 'first') {",
          "50:         return 'first';",
          "51:       }",
          "52:       if (storedValue === HIDE_SECOND || initiallyHidden === 'second') {",
          "53:         return 'second';",
          "54:       }",
          "55:       return null;",
          "56:     },",
          "57:   );",
          "59:   const setHiddenElement = useCallback(",
          "60:     (element: ResizableElement | null) => {",
          "61:       _setHiddenElement(element);",
          "62:       onHiddenElementChange?.(element);",
          "63:     },",
          "64:     [onHiddenElementChange],",
          "65:   );",
          "67:   const firstRef = useRef<HTMLDivElement>(null);",
          "68:   const dragBarRef = useRef<HTMLDivElement>(null);",
          "69:   const secondRef = useRef<HTMLDivElement>(null);",
          "71:   const defaultFlexRef = useRef(`${defaultSizeRelation}`);",
          "76:   useLayoutEffect(() => {",
          "77:     const storedValue =",
          "78:       storage && storageKey",
          "79:         ? storage.get(storageKey) || defaultFlexRef.current",
          "80:         : defaultFlexRef.current;",
          "81:     const flexDirection = direction === 'horizontal' ? 'row' : 'column';",
          "83:     if (firstRef.current) {",
          "84:       firstRef.current.style.display = 'flex';",
          "85:       firstRef.current.style.flexDirection = flexDirection;",
          "86:       firstRef.current.style.flex =",
          "87:         storedValue === HIDE_FIRST || storedValue === HIDE_SECOND",
          "88:           ? defaultFlexRef.current",
          "89:           : storedValue;",
          "90:     }",
          "92:     if (secondRef.current) {",
          "93:       secondRef.current.style.display = 'flex';",
          "94:       secondRef.current.style.flexDirection = flexDirection;",
          "95:       secondRef.current.style.flex = '1';",
          "96:     }",
          "98:     if (dragBarRef.current) {",
          "99:       dragBarRef.current.style.display = 'flex';",
          "100:       dragBarRef.current.style.flexDirection = flexDirection;",
          "101:     }",
          "102:   }, [direction, storage, storageKey]);",
          "104:   const hide = useCallback((resizableElement: ResizableElement) => {",
          "105:     const element =",
          "106:       resizableElement === 'first' ? firstRef.current : secondRef.current;",
          "107:     if (!element) {",
          "108:       return;",
          "109:     }",
          "115:     element.style.left = '-1000px';",
          "116:     element.style.position = 'absolute';",
          "117:     element.style.opacity = '0';",
          "118:     element.style.height = '500px';",
          "119:     element.style.width = '500px';",
          "123:     if (firstRef.current) {",
          "124:       const flex = parseFloat(firstRef.current.style.flex);",
          "125:       if (!Number.isFinite(flex) || flex < 1) {",
          "126:         firstRef.current.style.flex = '1';",
          "127:       }",
          "128:       firstRef.current.style.flex;",
          "129:     }",
          "130:   }, []);",
          "132:   const show = useCallback(",
          "133:     (resizableElement: ResizableElement) => {",
          "134:       const element =",
          "135:         resizableElement === 'first' ? firstRef.current : secondRef.current;",
          "136:       if (!element) {",
          "137:         return;",
          "138:       }",
          "140:       element.style.width = '';",
          "141:       element.style.height = '';",
          "142:       element.style.opacity = '';",
          "143:       element.style.position = '';",
          "144:       element.style.left = '';",
          "146:       if (firstRef.current && storage && storageKey) {",
          "147:         const storedValue = storage?.get(storageKey);",
          "148:         if (",
          "149:           storedValue &&",
          "150:           storedValue !== HIDE_FIRST &&",
          "151:           storedValue !== HIDE_SECOND",
          "152:         ) {",
          "153:           firstRef.current.style.flex = storedValue;",
          "154:         }",
          "155:       }",
          "156:     },",
          "157:     [storage, storageKey],",
          "158:   );",
          "163:   useLayoutEffect(() => {",
          "164:     if (hiddenElement === 'first') {",
          "165:       hide('first');",
          "166:     } else {",
          "167:       show('first');",
          "168:     }",
          "169:     if (hiddenElement === 'second') {",
          "170:       hide('second');",
          "171:     } else {",
          "172:       show('second');",
          "173:     }",
          "174:   }, [hiddenElement, hide, show]);",
          "176:   useEffect(() => {",
          "177:     if (!dragBarRef.current || !firstRef.current || !secondRef.current) {",
          "178:       return;",
          "179:     }",
          "180:     const dragBarContainer = dragBarRef.current;",
          "181:     const firstContainer = firstRef.current;",
          "182:     const wrapper = firstContainer.parentElement!;",
          "184:     const eventProperty = direction === 'horizontal' ? 'clientX' : 'clientY';",
          "185:     const rectProperty = direction === 'horizontal' ? 'left' : 'top';",
          "186:     const adjacentRectProperty =",
          "187:       direction === 'horizontal' ? 'right' : 'bottom';",
          "188:     const sizeProperty =",
          "189:       direction === 'horizontal' ? 'clientWidth' : 'clientHeight';",
          "191:     function handleMouseDown(downEvent: MouseEvent) {",
          "192:       downEvent.preventDefault();",
          "196:       const offset =",
          "197:         downEvent[eventProperty] -",
          "198:         dragBarContainer.getBoundingClientRect()[rectProperty];",
          "200:       function handleMouseMove(moveEvent: MouseEvent) {",
          "201:         if (moveEvent.buttons === 0) {",
          "202:           return handleMouseUp();",
          "203:         }",
          "205:         const firstSize =",
          "206:           moveEvent[eventProperty] -",
          "207:           wrapper.getBoundingClientRect()[rectProperty] -",
          "208:           offset;",
          "209:         const secondSize =",
          "210:           wrapper.getBoundingClientRect()[adjacentRectProperty] -",
          "211:           moveEvent[eventProperty] +",
          "212:           offset -",
          "213:           dragBarContainer[sizeProperty];",
          "215:         if (firstSize < sizeThresholdFirst) {",
          "217:           setHiddenElement('first');",
          "218:           store(HIDE_FIRST);",
          "219:         } else if (secondSize < sizeThresholdSecond) {",
          "221:           setHiddenElement('second');",
          "222:           store(HIDE_SECOND);",
          "223:         } else {",
          "226:           setHiddenElement(null);",
          "227:           const newFlex = `${firstSize / secondSize}`;",
          "228:           firstContainer.style.flex = newFlex;",
          "229:           store(newFlex);",
          "230:         }",
          "231:       }",
          "233:       function handleMouseUp() {",
          "234:         document.removeEventListener('mousemove', handleMouseMove);",
          "235:         document.removeEventListener('mouseup', handleMouseUp);",
          "236:       }",
          "238:       document.addEventListener('mousemove', handleMouseMove);",
          "239:       document.addEventListener('mouseup', handleMouseUp);",
          "240:     }",
          "242:     dragBarContainer.addEventListener('mousedown', handleMouseDown);",
          "244:     function reset() {",
          "245:       if (firstRef.current) {",
          "246:         firstRef.current.style.flex = defaultFlexRef.current;",
          "247:       }",
          "248:       store(defaultFlexRef.current);",
          "249:       setHiddenElement(null);",
          "250:     }",
          "252:     dragBarContainer.addEventListener('dblclick', reset);",
          "254:     return () => {",
          "255:       dragBarContainer.removeEventListener('mousedown', handleMouseDown);",
          "256:       dragBarContainer.removeEventListener('dblclick', reset);",
          "257:     };",
          "258:   }, [",
          "259:     direction,",
          "260:     setHiddenElement,",
          "261:     sizeThresholdFirst,",
          "262:     sizeThresholdSecond,",
          "263:     store,",
          "264:   ]);",
          "266:   return useMemo(",
          "267:     () => ({",
          "268:       dragBarRef,",
          "269:       hiddenElement,",
          "270:       firstRef,",
          "271:       setHiddenElement,",
          "272:       secondRef,",
          "273:     }),",
          "274:     [hiddenElement, setHiddenElement],",
          "275:   );",
          "276: }",
          "278: const DEFAULT_FLEX = 1;",
          "279: const HIDE_FIRST = 'hide-first';",
          "280: const HIDE_SECOND = 'hide-second';",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts": [
          "File: packages/graphiql/__mocks__/@graphiql/react.ts -> packages/graphiql/__mocks__/@graphiql/react.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   StorageContextProvider,",
          "16:   useAutoCompleteLeafs,",
          "17:   useCopyQuery,",
          "18:   useEditorContext,",
          "19:   useExecutionContext,",
          "20:   useExplorerContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18:   useDragResize,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:   StorageContextProvider,",
          "66:   useAutoCompleteLeafs,",
          "67:   useCopyQuery,",
          "68:   useEditorContext,",
          "69:   useExecutionContext,",
          "70:   useExplorerContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:   useDragResize,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "154:       setValue(newValue: string) {",
          "155:         setCode(newValue);",
          "156:       },",
          "157:     });",
          "158:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:       refresh() {},",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts": [
          "File: packages/graphiql/cypress/integration/docs.spec.ts -> packages/graphiql/cypress/integration/docs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   it('Toggles doc pane back off', () => {",
          "14:     cy.get('.docExplorerWrap button.docExplorerHide').click();",
          "16:   });",
          "17: });",
          "",
          "[Removed Lines]",
          "15:     cy.get('.doc-explorer').should('not.exist');",
          "",
          "[Added Lines]",
          "15:     cy.get('.doc-explorer').should('not.be.visible');",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
          "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:   it('Shows the expected error when the schema is invalid', () => {",
          "49:     cy.visit(`/?bad=true`);",
          "50:     cy.wait(200);",
          "52:       expect(element.get(0).innerText).to.contain('Names must');",
          "53:     });",
          "54:   });",
          "",
          "[Removed Lines]",
          "51:     cy.get('section#graphiql-result-viewer').should(element => {",
          "",
          "[Added Lines]",
          "51:     cy.get('section.result-window').should(element => {",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
          "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   cy.visitWithOp(op);",
          "122:   cy.clickExecuteQuery();",
          "123:   cy.wait(timeout);",
          "125:     expect(normalizeWhitespace(element.get(0).innerText)).to.equal(",
          "126:       JSON.stringify(mockSuccess, null, 2),",
          "127:     );",
          "",
          "[Removed Lines]",
          "124:   cy.get('section#graphiql-result-viewer').should(element => {",
          "",
          "[Added Lines]",
          "124:   cy.get('section.result-window').should(element => {",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import SearchResults from './DocExplorer/SearchResults';",
          "20: import TypeDoc from './DocExplorer/TypeDoc';",
          "29:   const {",
          "30:     fetchError,",
          "31:     isFetching,",
          "",
          "[Removed Lines]",
          "28: export function DocExplorer() {",
          "",
          "[Added Lines]",
          "22: type DocExplorerProps = {",
          "23:   onClose?(): void;",
          "24: };",
          "32: export function DocExplorer(props: DocExplorerProps) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122:             className=\"docExplorerHide\"",
          "123:             onClick={() => {",
          "124:               hide();",
          "125:             }}",
          "126:             aria-label=\"Close Documentation Explorer\">",
          "127:             {'\\u2715'}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:               props.onClose?.();",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import React, {",
          "9:   ComponentType,",
          "10:   PropsWithChildren,",
          "12:   ReactNode,",
          "13:   forwardRef,",
          "14:   ForwardRefExoticComponent,",
          "",
          "[Removed Lines]",
          "11:   MouseEventHandler,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:   StorageContextProvider,",
          "32:   useAutoCompleteLeafs,",
          "33:   useCopyQuery,",
          "34:   useEditorContext,",
          "35:   useExecutionContext,",
          "36:   useExplorerContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:   useDragResize,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: import { QueryEditor } from './QueryEditor';",
          "58: import { VariableEditor } from './VariableEditor';",
          "59: import { HeaderEditor } from './HeaderEditor';",
          "61: import { DocExplorer } from './DocExplorer';",
          "62: import { QueryHistory } from './QueryHistory';",
          "64: import find from '../utility/find';",
          "67: import { formatError, formatResult } from '@graphiql/toolkit';",
          "68: import type { Fetcher, GetDefaultFieldNamesFn } from '@graphiql/toolkit';",
          "70: import { Tab, TabAddButton, Tabs } from './Tabs';",
          "74: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
          "76: if (majorVersion < 16) {",
          "",
          "[Removed Lines]",
          "60: import { ResultViewer, RESULT_VIEWER_ID } from './ResultViewer';",
          "63: import debounce from '../utility/debounce';",
          "65: import { getLeft, getTop } from '../utility/elementPosition';",
          "72: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
          "",
          "[Added Lines]",
          "60: import { ResultViewer } from './ResultViewer';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "87:   export let g: GraphiQL;",
          "88: }",
          "97: export type GraphiQLToolbarConfig = {",
          "98:   additionalContent?: React.ReactNode;",
          "99: };",
          "",
          "[Removed Lines]",
          "90: export type Maybe<T> = T | null | undefined;",
          "92: type OnMouseMoveFn = Maybe<",
          "93:   (moveEvent: MouseEvent | React.MouseEvent<Element>) => void",
          "94: >;",
          "95: type OnMouseUpFn = Maybe<() => void>;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299:   children?: ReactNode;",
          "300: };",
          "",
          "[Removed Lines]",
          "302: export type GraphiQLState = {",
          "303:   editorFlex: number;",
          "304:   secondaryEditorOpen: boolean;",
          "305:   secondaryEditorHeight: number;",
          "306:   variableEditorActive: boolean;",
          "307:   headerEditorActive: boolean;",
          "308:   headerEditorEnabled: boolean;",
          "309:   docExplorerWidth: number;",
          "310: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "510:   | 'defaultQuery'",
          "511:   | 'docExplorerOpen'",
          "512:   | 'fetcher'",
          "513:   | 'inputValueDeprecation'",
          "514:   | 'introspectionQueryName'",
          "515:   | 'maxHistoryLength'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492:   | 'headers'",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "519:   | 'schema'",
          "520:   | 'schemaDescription'",
          "521:   | 'storage'",
          "522: >;",
          "524: const GraphiQLConsumeContexts = forwardRef<",
          "525:   GraphiQLWithContext,",
          "526:   GraphiQLWithContextProviderProps",
          "531:   const editorContext = useEditorContext({ nonNull: true });",
          "532:   const executionContext = useExecutionContext({ nonNull: true });",
          "533:   const explorerContext = useExplorerContext();",
          "",
          "[Removed Lines]",
          "527: >(function GraphiQLConsumeContexts(",
          "528:   { getDefaultFieldNames, onCopyQuery, ...props },",
          "529:   ref,",
          "530: ) {",
          "",
          "[Added Lines]",
          "502:   | 'variables'",
          "508: >(function GraphiQLConsumeContexts({ getDefaultFieldNames, ...props }, ref) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "536:   const storageContext = useStorageContext();",
          "538:   const autoCompleteLeafs = useAutoCompleteLeafs({ getDefaultFieldNames });",
          "540:   const merge = useMergeQuery();",
          "541:   const prettify = usePrettifyEditors();",
          "543:   return (",
          "544:     <GraphiQLWithContext",
          "545:       {...props}",
          "",
          "[Removed Lines]",
          "539:   const copy = useCopyQuery({ onCopyQuery });",
          "",
          "[Added Lines]",
          "517:   const copy = useCopyQuery({ onCopyQuery: props.onCopyQuery });",
          "521:   const docResize = useDragResize({",
          "522:     defaultSizeRelation: 3,",
          "523:     direction: 'horizontal',",
          "524:     initiallyHidden: explorerContext?.isVisible ? undefined : 'second',",
          "525:     onHiddenElementChange: resizableElement => {",
          "526:       if (resizableElement === 'second') {",
          "527:         explorerContext?.hide();",
          "528:       } else {",
          "529:         explorerContext?.show();",
          "530:       }",
          "531:     },",
          "532:     sizeThresholdSecond: 200,",
          "533:     storageKey: 'docExplorerFlex',",
          "534:   });",
          "535:   const editorResize = useDragResize({",
          "536:     direction: 'horizontal',",
          "537:     storageKey: 'editorFlex',",
          "538:   });",
          "539:   const secondaryEditorResize = useDragResize({",
          "540:     defaultSizeRelation: 3,",
          "541:     direction: 'vertical',",
          "542:     initiallyHidden: (() => {",
          "544:       if (props.defaultVariableEditorOpen !== undefined) {",
          "545:         return props.defaultVariableEditorOpen ? undefined : 'second';",
          "546:       }",
          "548:       if (props.defaultSecondaryEditorOpen !== undefined) {",
          "549:         return props.defaultSecondaryEditorOpen ? undefined : 'second';",
          "550:       }",
          "552:       return editorContext.initialVariables || editorContext.initialHeaders",
          "553:         ? undefined",
          "554:         : 'second';",
          "555:     })(),",
          "556:     sizeThresholdSecond: 60,",
          "557:     storageKey: 'secondaryEditorFlex',",
          "558:   });",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "553:       copy={copy}",
          "554:       merge={merge}",
          "555:       prettify={prettify}",
          "556:       ref={ref}",
          "557:     />",
          "558:   );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573:       docResize={docResize}",
          "574:       editorResize={editorResize}",
          "575:       secondaryEditorResize={secondaryEditorResize}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "561: type GraphiQLWithContextConsumerProps = Omit<",
          "562:   GraphiQLWithContextProviderProps,",
          "564: > & {",
          "565:   editorContext: EditorContextType;",
          "566:   executionContext: ExecutionContextType;",
          "",
          "[Removed Lines]",
          "563:   'fetcher' | 'getDefaultFieldNames' | 'onCopyQuery'",
          "",
          "[Added Lines]",
          "583:   'fetcher' | 'getDefaultFieldNames'",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "573:   copy(): void;",
          "574:   merge(): void;",
          "575:   prettify(): void;",
          "576: };",
          "578: class GraphiQLWithContext extends React.Component<",
          "579:   GraphiQLWithContextConsumerProps,",
          "580:   GraphiQLState",
          "581: > {",
          "586:   constructor(props: GraphiQLWithContextConsumerProps) {",
          "587:     super(props);",
          "625:   }",
          "627:   render() {",
          "",
          "[Removed Lines]",
          "583:   graphiqlContainer: Maybe<HTMLDivElement>;",
          "584:   editorBarComponent: Maybe<HTMLDivElement>;",
          "589:     const variables =",
          "590:       props.variables ?? props.storageContext?.get('variables') ?? undefined;",
          "592:     const headers =",
          "593:       props.headers ?? props.storageContext?.get('headers') ?? undefined;",
          "596:     let secondaryEditorOpen;",
          "597:     if (props.defaultVariableEditorOpen !== undefined) {",
          "598:       secondaryEditorOpen = props.defaultVariableEditorOpen;",
          "599:     } else if (props.defaultSecondaryEditorOpen !== undefined) {",
          "600:       secondaryEditorOpen = props.defaultSecondaryEditorOpen;",
          "601:     } else {",
          "602:       secondaryEditorOpen = Boolean(variables || headers);",
          "603:     }",
          "605:     const headerEditorEnabled = props.headerEditorEnabled ?? true;",
          "608:     this.state = {",
          "609:       editorFlex: Number(this.props.storageContext?.get('editorFlex')) || 1,",
          "610:       secondaryEditorOpen,",
          "611:       secondaryEditorHeight:",
          "612:         Number(this.props.storageContext?.get('secondaryEditorHeight')) || 200,",
          "613:       variableEditorActive:",
          "614:         this.props.storageContext?.get('variableEditorActive') === 'true' ||",
          "615:         props.headerEditorEnabled",
          "616:           ? this.props.storageContext?.get('headerEditorActive') !== 'true'",
          "617:           : true,",
          "618:       headerEditorActive:",
          "619:         this.props.storageContext?.get('headerEditorActive') === 'true',",
          "620:       headerEditorEnabled,",
          "621:       docExplorerWidth:",
          "622:         Number(this.props.storageContext?.get('docExplorerWidth')) ||",
          "623:         DEFAULT_DOC_EXPLORER_WIDTH,",
          "624:     };",
          "",
          "[Added Lines]",
          "597:   docResize: ReturnType<typeof useDragResize>;",
          "598:   editorResize: ReturnType<typeof useDragResize>;",
          "599:   secondaryEditorResize: ReturnType<typeof useDragResize>;",
          "600: };",
          "602: export type GraphiQLState = {",
          "603:   activeSecondaryEditor: 'variable' | 'header';",
          "614:     this.state = { activeSecondaryEditor: 'variable' };",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "675:       isChildComponentType(child, GraphiQL.Footer),",
          "676:     );",
          "698:     return (",
          "719:             </div>",
          "749:                       this.props.executionContext.stop();",
          "756:                   }}",
          "757:                 />",
          "807:                   </div>",
          "809:                     <div",
          "819:                     </div>",
          "821:                 </div>",
          "831:                     editorTheme={this.props.editorTheme}",
          "835:                   />",
          "843:                 </div>",
          "851:             </div>",
          "852:           </div>",
          "853:         </div>",
          "860:             />",
          "862:           </div>",
          "864:       </div>",
          "865:     );",
          "866:   }",
          "",
          "[Removed Lines]",
          "678:     const queryWrapStyle = {",
          "679:       WebkitFlex: this.state.editorFlex,",
          "680:       flex: this.state.editorFlex,",
          "681:     };",
          "683:     const docWrapStyle = {",
          "684:       display: 'block',",
          "685:       width: this.state.docExplorerWidth,",
          "686:     };",
          "687:     const docExplorerWrapClasses =",
          "688:       'docExplorerWrap' +",
          "689:       (this.state.docExplorerWidth < 200 ? ' doc-explorer-narrow' : '');",
          "691:     const secondaryEditorOpen = this.state.secondaryEditorOpen;",
          "692:     const secondaryEditorStyle = {",
          "693:       height: secondaryEditorOpen",
          "694:         ? this.state.secondaryEditorHeight",
          "695:         : undefined,",
          "696:     };",
          "699:       <div",
          "700:         ref={n => {",
          "701:           this.graphiqlContainer = n;",
          "702:         }}",
          "703:         data-testid=\"graphiql-container\"",
          "704:         className=\"graphiql-container\">",
          "705:         {this.props.historyContext?.isVisible && (",
          "706:           <div",
          "707:             className=\"historyPaneWrap\"",
          "708:             style={{ width: '230px', zIndex: 7 }}>",
          "709:             <QueryHistory />",
          "710:           </div>",
          "711:         )}",
          "712:         <div className=\"editorWrap\">",
          "713:           <div className=\"topBarWrap\">",
          "714:             {this.props.beforeTopBarContent}",
          "715:             <div className=\"topBar\">",
          "716:               {logo}",
          "717:               <ExecuteButton />",
          "718:               {toolbar}",
          "720:             {this.props.explorerContext &&",
          "721:               !this.props.explorerContext.isVisible && (",
          "722:                 <button",
          "723:                   className=\"docExplorerShow\"",
          "724:                   onClick={() => {",
          "725:                     this.props.explorerContext?.show();",
          "726:                   }}",
          "727:                   aria-label=\"Open Documentation Explorer\">",
          "728:                   Docs",
          "729:                 </button>",
          "730:               )}",
          "731:           </div>",
          "732:           {this.props.tabs ? (",
          "733:             <Tabs",
          "734:               tabsProps={{",
          "735:                 'aria-label': 'Select active operation',",
          "736:               }}>",
          "737:               {this.props.editorContext.tabs.map((tab, index) => (",
          "738:                 <Tab",
          "739:                   key={tab.id}",
          "740:                   isActive={index === this.props.editorContext.activeTabIndex}",
          "741:                   title={tab.title}",
          "742:                   isCloseable={this.props.editorContext.tabs.length > 1}",
          "743:                   onSelect={() => {",
          "744:                     this.props.executionContext.stop();",
          "745:                     this.props.editorContext.changeTab(index);",
          "746:                   }}",
          "747:                   onClose={() => {",
          "748:                     if (this.props.editorContext.activeTabIndex === index) {",
          "750:                     }",
          "751:                     this.props.editorContext.closeTab(index);",
          "752:                   }}",
          "753:                   tabProps={{",
          "754:                     'aria-controls': 'sessionWrap',",
          "755:                     id: `session-tab-${index}`,",
          "758:               ))}",
          "759:               <TabAddButton",
          "760:                 onClick={() => {",
          "761:                   this.props.editorContext.addTab();",
          "762:                 }}",
          "763:               />",
          "764:             </Tabs>",
          "765:           ) : null}",
          "766:           <div",
          "767:             ref={n => {",
          "768:               this.editorBarComponent = n;",
          "769:             }}",
          "770:             role=\"tabpanel\"",
          "771:             id=\"sessionWrap\"",
          "772:             className=\"editorBar\"",
          "773:             aria-labelledby={`session-tab-${this.props.editorContext.activeTabIndex}`}",
          "774:             onDoubleClick={this.handleResetResize}",
          "775:             onMouseDown={this.handleResizeStart}>",
          "776:             <div className=\"queryWrap\" style={queryWrapStyle}>",
          "777:               <QueryEditor",
          "778:                 editorTheme={this.props.editorTheme}",
          "779:                 externalFragments={this.props.externalFragments}",
          "780:                 onEdit={this.props.onEditQuery}",
          "781:                 onEditOperationName={this.props.onEditOperationName}",
          "782:                 readOnly={this.props.readOnly}",
          "783:                 validationRules={this.props.validationRules}",
          "784:               />",
          "785:               <section",
          "786:                 className=\"variable-editor secondary-editor\"",
          "787:                 style={secondaryEditorStyle}",
          "788:                 aria-label={",
          "789:                   this.state.variableEditorActive",
          "790:                     ? 'Query Variables'",
          "791:                     : 'Request Headers'",
          "792:                 }>",
          "793:                 <div",
          "794:                   className=\"secondary-editor-title variable-editor-title\"",
          "795:                   id=\"secondary-editor-title\"",
          "796:                   style={{",
          "797:                     cursor: secondaryEditorOpen ? 'row-resize' : 'n-resize',",
          "798:                   }}",
          "799:                   onMouseDown={this.handleSecondaryEditorResizeStart}>",
          "800:                   <div",
          "801:                     className={`variable-editor-title-text${",
          "802:                       this.state.variableEditorActive ? ' active' : ''",
          "803:                     }`}",
          "804:                     onClick={this.handleOpenVariableEditorTab}",
          "805:                     onMouseDown={this.handleTabClickPropagation}>",
          "806:                     Query Variables",
          "808:                   {this.state.headerEditorEnabled && (",
          "810:                       style={{",
          "811:                         marginLeft: '20px',",
          "812:                       }}",
          "813:                       className={`variable-editor-title-text${",
          "814:                         this.state.headerEditorActive ? ' active' : ''",
          "815:                       }`}",
          "816:                       onClick={this.handleOpenHeaderEditorTab}",
          "817:                       onMouseDown={this.handleTabClickPropagation}>",
          "818:                       Request Headers",
          "820:                   )}",
          "822:                 <VariableEditor",
          "823:                   onEdit={this.props.onEditVariables}",
          "824:                   editorTheme={this.props.editorTheme}",
          "825:                   readOnly={this.props.readOnly}",
          "826:                   active={this.state.variableEditorActive}",
          "827:                 />",
          "828:                 {this.state.headerEditorEnabled && (",
          "829:                   <HeaderEditor",
          "830:                     active={this.state.headerEditorActive}",
          "832:                     onEdit={this.props.onEditHeaders}",
          "833:                     readOnly={this.props.readOnly}",
          "834:                     shouldPersistHeaders={this.props.shouldPersistHeaders}",
          "836:                 )}",
          "837:               </section>",
          "838:             </div>",
          "839:             <div className=\"resultWrap\">",
          "840:               {this.props.executionContext.isFetching && (",
          "841:                 <div className=\"spinner-container\">",
          "842:                   <div className=\"spinner\" />",
          "844:               )}",
          "845:               <ResultViewer",
          "846:                 value={this.props.response}",
          "847:                 editorTheme={this.props.editorTheme}",
          "848:                 ResponseTooltip={this.props.ResultsTooltip}",
          "849:               />",
          "850:               {footer}",
          "854:         {this.props.explorerContext?.isVisible && (",
          "855:           <div className={docExplorerWrapClasses} style={docWrapStyle}>",
          "856:             <div",
          "857:               className=\"docExplorerResizer\"",
          "858:               onDoubleClick={this.handleDocsResetResize}",
          "859:               onMouseDown={this.handleDocsResizeStart}",
          "861:             <DocExplorer />",
          "863:         )}",
          "",
          "[Added Lines]",
          "669:       <div data-testid=\"graphiql-container\" className=\"graphiql-container\">",
          "670:         <div ref={this.props.docResize.firstRef}>",
          "671:           {this.props.historyContext?.isVisible && (",
          "672:             <div",
          "673:               className=\"historyPaneWrap\"",
          "674:               style={{ width: '230px', zIndex: 7 }}>",
          "675:               <QueryHistory />",
          "677:           )}",
          "678:           <div className=\"editorWrap\">",
          "679:             <div className=\"topBarWrap\">",
          "680:               {this.props.beforeTopBarContent}",
          "681:               <div className=\"topBar\">",
          "682:                 {logo}",
          "683:                 <ExecuteButton />",
          "684:                 {toolbar}",
          "685:               </div>",
          "686:               {this.props.explorerContext &&",
          "687:                 !this.props.explorerContext.isVisible && (",
          "688:                   <button",
          "689:                     className=\"docExplorerShow\"",
          "690:                     onClick={() => {",
          "691:                       this.props.explorerContext?.show();",
          "692:                       this.props.docResize.setHiddenElement(null);",
          "693:                     }}",
          "694:                     aria-label=\"Open Documentation Explorer\">",
          "695:                     Docs",
          "696:                   </button>",
          "697:                 )}",
          "698:             </div>",
          "699:             {this.props.tabs ? (",
          "700:               <Tabs",
          "701:                 tabsProps={{",
          "702:                   'aria-label': 'Select active operation',",
          "703:                 }}>",
          "704:                 {this.props.editorContext.tabs.map((tab, index) => (",
          "705:                   <Tab",
          "706:                     key={tab.id}",
          "707:                     isActive={index === this.props.editorContext.activeTabIndex}",
          "708:                     title={tab.title}",
          "709:                     isCloseable={this.props.editorContext.tabs.length > 1}",
          "710:                     onSelect={() => {",
          "712:                       this.props.editorContext.changeTab(index);",
          "713:                     }}",
          "714:                     onClose={() => {",
          "715:                       if (this.props.editorContext.activeTabIndex === index) {",
          "716:                         this.props.executionContext.stop();",
          "717:                       }",
          "718:                       this.props.editorContext.closeTab(index);",
          "719:                     }}",
          "720:                     tabProps={{",
          "721:                       'aria-controls': 'sessionWrap',",
          "722:                       id: `session-tab-${index}`,",
          "723:                     }}",
          "724:                   />",
          "725:                 ))}",
          "726:                 <TabAddButton",
          "727:                   onClick={() => {",
          "728:                     this.props.editorContext.addTab();",
          "731:               </Tabs>",
          "732:             ) : null}",
          "733:             <div",
          "734:               role=\"tabpanel\"",
          "735:               id=\"sessionWrap\"",
          "736:               className=\"editorBar\"",
          "737:               aria-labelledby={`session-tab-${this.props.editorContext.activeTabIndex}`}>",
          "738:               <div ref={this.props.editorResize.firstRef}>",
          "739:                 <div className=\"queryWrap\">",
          "740:                   <div ref={this.props.secondaryEditorResize.firstRef}>",
          "741:                     <QueryEditor",
          "742:                       editorTheme={this.props.editorTheme}",
          "743:                       externalFragments={this.props.externalFragments}",
          "744:                       onClickReference={() => {",
          "745:                         if (this.props.docResize.hiddenElement === 'second') {",
          "746:                           this.props.docResize.setHiddenElement(null);",
          "747:                         }",
          "748:                       }}",
          "749:                       onCopyQuery={this.props.onCopyQuery}",
          "750:                       onEdit={this.props.onEditQuery}",
          "751:                       onEditOperationName={this.props.onEditOperationName}",
          "752:                       readOnly={this.props.readOnly}",
          "753:                       validationRules={this.props.validationRules}",
          "754:                     />",
          "756:                   <div ref={this.props.secondaryEditorResize.dragBarRef}>",
          "758:                       className=\"secondary-editor-title variable-editor-title\"",
          "759:                       id=\"secondary-editor-title\">",
          "760:                       <div",
          "761:                         className={`variable-editor-title-text${",
          "762:                           this.state.activeSecondaryEditor === 'variable'",
          "763:                             ? ' active'",
          "764:                             : ''",
          "765:                         }`}",
          "766:                         onClick={() => {",
          "767:                           if (",
          "768:                             this.props.secondaryEditorResize.hiddenElement ===",
          "769:                             'second'",
          "770:                           ) {",
          "771:                             this.props.secondaryEditorResize.setHiddenElement(",
          "772:                               null,",
          "773:                             );",
          "774:                           }",
          "775:                           this.setState(",
          "776:                             {",
          "777:                               activeSecondaryEditor: 'variable',",
          "778:                             },",
          "779:                             () => {",
          "780:                               this.props.editorContext.variableEditor?.refresh();",
          "781:                             },",
          "782:                           );",
          "783:                         }}>",
          "784:                         Query Variables",
          "785:                       </div>",
          "786:                       {this.props.headerEditorEnabled && (",
          "787:                         <div",
          "788:                           style={{",
          "789:                             marginLeft: '20px',",
          "790:                           }}",
          "791:                           className={`variable-editor-title-text${",
          "792:                             this.state.activeSecondaryEditor === 'header'",
          "793:                               ? ' active'",
          "794:                               : ''",
          "795:                           }`}",
          "796:                           onClick={() => {",
          "797:                             if (",
          "798:                               this.props.secondaryEditorResize.hiddenElement ===",
          "799:                               'second'",
          "800:                             ) {",
          "801:                               this.props.secondaryEditorResize.setHiddenElement(",
          "802:                                 null,",
          "803:                               );",
          "804:                             }",
          "805:                             this.setState(",
          "806:                               {",
          "807:                                 activeSecondaryEditor: 'header',",
          "808:                               },",
          "809:                               () => {",
          "810:                                 this.props.editorContext.headerEditor?.refresh();",
          "811:                               },",
          "812:                             );",
          "813:                           }}>",
          "814:                           Request Headers",
          "815:                         </div>",
          "816:                       )}",
          "818:                   </div>",
          "819:                   <div ref={this.props.secondaryEditorResize.secondRef}>",
          "820:                     <section",
          "821:                       className=\"variable-editor secondary-editor\"",
          "822:                       aria-label={",
          "823:                         this.state.activeSecondaryEditor === 'variable'",
          "824:                           ? 'Query Variables'",
          "825:                           : 'Request Headers'",
          "826:                       }>",
          "827:                       <VariableEditor",
          "828:                         onEdit={this.props.onEditVariables}",
          "829:                         editorTheme={this.props.editorTheme}",
          "830:                         readOnly={this.props.readOnly}",
          "831:                         active={this.state.activeSecondaryEditor === 'variable'}",
          "832:                       />",
          "833:                       {this.props.headerEditorEnabled && (",
          "834:                         <HeaderEditor",
          "835:                           active={this.state.activeSecondaryEditor === 'header'}",
          "836:                           editorTheme={this.props.editorTheme}",
          "837:                           onEdit={this.props.onEditHeaders}",
          "838:                           readOnly={this.props.readOnly}",
          "839:                           shouldPersistHeaders={this.props.shouldPersistHeaders}",
          "840:                         />",
          "841:                       )}",
          "842:                     </section>",
          "843:                   </div>",
          "845:               </div>",
          "846:               <div ref={this.props.editorResize.dragBarRef}>",
          "847:                 <div className=\"editor-drag-bar\" />",
          "848:               </div>",
          "849:               <div ref={this.props.editorResize.secondRef}>",
          "850:                 <div className=\"resultWrap\">",
          "851:                   {this.props.executionContext.isFetching && (",
          "852:                     <div className=\"spinner-container\">",
          "853:                       <div className=\"spinner\" />",
          "854:                     </div>",
          "855:                   )}",
          "856:                   <ResultViewer",
          "857:                     value={this.props.response}",
          "859:                     ResponseTooltip={this.props.ResultsTooltip}",
          "861:                   {footer}",
          "863:               </div>",
          "867:         <div ref={this.props.docResize.dragBarRef}>",
          "868:           <div className=\"docExplorerResizer\" />",
          "869:         </div>",
          "870:         <div ref={this.props.docResize.secondRef}>",
          "871:           <div className=\"docExplorerWrap\">",
          "872:             <DocExplorer",
          "873:               onClose={() => this.props.docResize.setHiddenElement('second')}",
          "876:         </div>",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "889:   public autoCompleteLeafs() {",
          "890:     return this.props.autoCompleteLeafs();",
          "891:   }",
          "1103: }",
          "",
          "[Removed Lines]",
          "895:   private handleResizeStart = (downEvent: React.MouseEvent) => {",
          "896:     if (!this._didClickDragBar(downEvent)) {",
          "897:       return;",
          "898:     }",
          "900:     downEvent.preventDefault();",
          "902:     const offset = downEvent.clientX - getLeft(downEvent.target as HTMLElement);",
          "904:     let onMouseMove: OnMouseMoveFn = moveEvent => {",
          "905:       if (moveEvent.buttons === 0) {",
          "906:         return onMouseUp!();",
          "907:       }",
          "909:       const editorBar = this.editorBarComponent as HTMLElement;",
          "910:       const leftSize = moveEvent.clientX - getLeft(editorBar) - offset;",
          "911:       const rightSize = editorBar.clientWidth - leftSize;",
          "912:       this.setState({ editorFlex: leftSize / rightSize });",
          "913:       debounce(500, () =>",
          "914:         this.props.storageContext?.set(",
          "915:           'editorFlex',",
          "916:           JSON.stringify(this.state.editorFlex),",
          "917:         ),",
          "918:       )();",
          "919:     };",
          "921:     let onMouseUp: OnMouseUpFn = () => {",
          "922:       document.removeEventListener('mousemove', onMouseMove!);",
          "923:       document.removeEventListener('mouseup', onMouseUp!);",
          "924:       onMouseMove = null;",
          "925:       onMouseUp = null;",
          "926:     };",
          "928:     document.addEventListener('mousemove', onMouseMove);",
          "929:     document.addEventListener('mouseup', onMouseUp);",
          "930:   };",
          "932:   handleResetResize = () => {",
          "933:     this.setState({ editorFlex: 1 });",
          "934:     this.props.storageContext?.set(",
          "935:       'editorFlex',",
          "936:       JSON.stringify(this.state.editorFlex),",
          "937:     );",
          "938:   };",
          "940:   private _didClickDragBar(event: React.MouseEvent) {",
          "942:     if (event.button !== 0 || event.ctrlKey) {",
          "943:       return false;",
          "944:     }",
          "945:     const target = event.target;",
          "946:     if (!(target instanceof Element)) {",
          "947:       return false;",
          "948:     }",
          "950:     if (target.className.indexOf('CodeMirror-gutter') !== 0) {",
          "951:       return false;",
          "952:     }",
          "954:     const resultWindow = target.closest('section');",
          "955:     return resultWindow ? resultWindow.id === RESULT_VIEWER_ID : false;",
          "956:   }",
          "958:   private handleDocsResizeStart: MouseEventHandler<",
          "959:     HTMLDivElement",
          "960:   > = downEvent => {",
          "961:     downEvent.preventDefault();",
          "963:     const hadWidth = this.state.docExplorerWidth;",
          "964:     const offset = downEvent.clientX - getLeft(downEvent.target as HTMLElement);",
          "966:     let onMouseMove: OnMouseMoveFn = moveEvent => {",
          "967:       if (moveEvent.buttons === 0) {",
          "968:         return onMouseUp!();",
          "969:       }",
          "971:       const app = this.graphiqlContainer as HTMLElement;",
          "972:       const cursorPos = moveEvent.clientX - getLeft(app) - offset;",
          "973:       const docsSize = app.clientWidth - cursorPos;",
          "975:       if (docsSize < 100) {",
          "976:         this.props.explorerContext?.hide();",
          "977:       } else {",
          "978:         this.props.explorerContext?.show();",
          "979:         this.setState({ docExplorerWidth: Math.min(docsSize, 650) });",
          "980:         debounce(500, () =>",
          "981:           this.props.storageContext?.set(",
          "982:             'docExplorerWidth',",
          "983:             JSON.stringify(this.state.docExplorerWidth),",
          "984:           ),",
          "985:         )();",
          "986:       }",
          "987:     };",
          "989:     let onMouseUp: OnMouseUpFn = () => {",
          "990:       if (this.props.explorerContext && !this.props.explorerContext.isVisible) {",
          "991:         this.setState({ docExplorerWidth: hadWidth });",
          "992:         debounce(500, () =>",
          "993:           this.props.storageContext?.set(",
          "994:             'docExplorerWidth',",
          "995:             JSON.stringify(this.state.docExplorerWidth),",
          "996:           ),",
          "997:         )();",
          "998:       }",
          "1000:       document.removeEventListener('mousemove', onMouseMove!);",
          "1001:       document.removeEventListener('mouseup', onMouseUp!);",
          "1002:       onMouseMove = null;",
          "1003:       onMouseUp = null;",
          "1004:     };",
          "1006:     document.addEventListener('mousemove', onMouseMove!);",
          "1007:     document.addEventListener('mouseup', onMouseUp);",
          "1008:   };",
          "1010:   private handleDocsResetResize = () => {",
          "1011:     this.setState({",
          "1012:       docExplorerWidth: DEFAULT_DOC_EXPLORER_WIDTH,",
          "1013:     });",
          "1014:     debounce(500, () =>",
          "1015:       this.props.storageContext?.set(",
          "1016:         'docExplorerWidth',",
          "1017:         JSON.stringify(this.state.docExplorerWidth),",
          "1018:       ),",
          "1019:     )();",
          "1020:   };",
          "1023:   private handleTabClickPropagation: MouseEventHandler<",
          "1024:     HTMLDivElement",
          "1025:   > = downEvent => {",
          "1026:     downEvent.preventDefault();",
          "1027:     downEvent.stopPropagation();",
          "1028:   };",
          "1030:   private handleOpenHeaderEditorTab: MouseEventHandler<",
          "1031:     HTMLDivElement",
          "1032:   > = _clickEvent => {",
          "1033:     this.setState({",
          "1034:       headerEditorActive: true,",
          "1035:       variableEditorActive: false,",
          "1036:       secondaryEditorOpen: true,",
          "1037:     });",
          "1038:   };",
          "1040:   private handleOpenVariableEditorTab: MouseEventHandler<",
          "1041:     HTMLDivElement",
          "1042:   > = _clickEvent => {",
          "1043:     this.setState({",
          "1044:       headerEditorActive: false,",
          "1045:       variableEditorActive: true,",
          "1046:       secondaryEditorOpen: true,",
          "1047:     });",
          "1048:   };",
          "1050:   private handleSecondaryEditorResizeStart: MouseEventHandler<",
          "1051:     HTMLDivElement",
          "1052:   > = downEvent => {",
          "1053:     downEvent.preventDefault();",
          "1055:     let didMove = false;",
          "1056:     const wasOpen = this.state.secondaryEditorOpen;",
          "1057:     const hadHeight = this.state.secondaryEditorHeight;",
          "1058:     const offset = downEvent.clientY - getTop(downEvent.target as HTMLElement);",
          "1060:     let onMouseMove: OnMouseMoveFn = moveEvent => {",
          "1061:       if (moveEvent.buttons === 0) {",
          "1062:         return onMouseUp!();",
          "1063:       }",
          "1065:       didMove = true;",
          "1067:       const editorBar = this.editorBarComponent as HTMLElement;",
          "1068:       const topSize = moveEvent.clientY - getTop(editorBar) - offset;",
          "1069:       const bottomSize = editorBar.clientHeight - topSize;",
          "1070:       if (bottomSize < 60) {",
          "1071:         this.setState({",
          "1072:           secondaryEditorOpen: false,",
          "1073:           secondaryEditorHeight: hadHeight,",
          "1074:         });",
          "1075:       } else {",
          "1076:         this.setState({",
          "1077:           secondaryEditorOpen: true,",
          "1078:           secondaryEditorHeight: bottomSize,",
          "1079:         });",
          "1080:       }",
          "1081:       debounce(500, () =>",
          "1082:         this.props.storageContext?.set(",
          "1083:           'secondaryEditorHeight',",
          "1084:           JSON.stringify(this.state.secondaryEditorHeight),",
          "1085:         ),",
          "1086:       )();",
          "1087:     };",
          "1089:     let onMouseUp: OnMouseUpFn = () => {",
          "1090:       if (!didMove) {",
          "1091:         this.setState({ secondaryEditorOpen: !wasOpen });",
          "1092:       }",
          "1094:       document.removeEventListener('mousemove', onMouseMove!);",
          "1095:       document.removeEventListener('mouseup', onMouseUp!);",
          "1096:       onMouseMove = null;",
          "1097:       onMouseUp = null;",
          "1098:     };",
          "1100:     document.addEventListener('mousemove', onMouseMove);",
          "1101:     document.addEventListener('mouseup', onMouseUp);",
          "1102:   };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/ResultViewer.tsx||packages/graphiql/src/components/ResultViewer.tsx": [
          "File: packages/graphiql/src/components/ResultViewer.tsx -> packages/graphiql/src/components/ResultViewer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import { useResponseEditor, UseResponseEditorArgs } from '@graphiql/react';",
          "9: import React from 'react';",
          "",
          "[Removed Lines]",
          "11: export const RESULT_VIEWER_ID = 'graphiql-result-viewer';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:   const ref = useResponseEditor(props);",
          "21:   return (",
          "22:     <section",
          "24:       className=\"result-window\"",
          "25:       aria-label=\"Result Window\"",
          "26:       aria-live=\"polite\"",
          "",
          "[Removed Lines]",
          "23:       id={RESULT_VIEWER_ID}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:   });",
          "131:   it('defaults to closed docExplorer', () => {",
          "132:     const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "134:   });",
          "136:   it('accepts a defaultVariableEditorOpen param', () => {",
          "",
          "[Removed Lines]",
          "133:     expect(container.querySelector('.docExplorerWrap')).not.toBeInTheDocument();",
          "",
          "[Added Lines]",
          "133:     expect(container.querySelector('.docExplorerWrap')).not.toBeVisible();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:     );",
          "140:     const queryVariables = container1.querySelector('.variable-editor');",
          "144:     const secondaryEditorTitle = container1.querySelector(",
          "145:       '#secondary-editor-title',",
          "146:     );",
          "147:     fireEvent.mouseDown(secondaryEditorTitle);",
          "151:     const { container: container2 } = render(",
          "152:       <GraphiQL fetcher={noOpFetcher} defaultVariableEditorOpen />,",
          "153:     );",
          "154:     expect(",
          "158:     const { container: container3 } = render(",
          "159:       <GraphiQL",
          "",
          "[Removed Lines]",
          "142:     expect(queryVariables.style.height).toEqual('');",
          "148:     fireEvent.mouseMove(secondaryEditorTitle);",
          "149:     expect(queryVariables.style.height).toEqual('200px');",
          "155:       container2.querySelector('[aria-label=\"Query Variables\"]')?.style.height,",
          "156:     ).toEqual('200px');",
          "",
          "[Added Lines]",
          "142:     expect(queryVariables).not.toBeVisible();",
          "148:     fireEvent.mouseMove(secondaryEditorTitle, { buttons: 1, clientY: 50 });",
          "149:     expect(queryVariables).toBeVisible();",
          "155:       container2.querySelector('[aria-label=\"Query Variables\"]'),",
          "156:     ).toBeVisible();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:       />,",
          "164:     );",
          "165:     const queryVariables3 = container3.querySelector('.variable-editor');",
          "167:   });",
          "169:   it('defaults to closed history panel', () => {",
          "",
          "[Removed Lines]",
          "166:     expect(queryVariables3?.style.height).toEqual('');",
          "",
          "[Added Lines]",
          "166:     expect(queryVariables3).not.toBeVisible();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "490:   });",
          "492:   it('readjusts the query wrapper flex style field when the result panel is resized', async () => {",
          "494:       .spyOn(Element.prototype, 'clientWidth', 'get')",
          "497:     const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "499:     await wait();",
          "504:     const queryWrap = container.querySelector('.queryWrap');",
          "507:       button: 0,",
          "508:       ctrlKey: false,",
          "509:     });",
          "512:       buttons: 1,",
          "513:       clientX: 700,",
          "514:     });",
          "521:   });",
          "523:   it('allows for resizing the doc explorer correctly', () => {",
          "525:       .spyOn(Element.prototype, 'clientWidth', 'get')",
          "528:     const { container, getByLabelText } = render(",
          "529:       <GraphiQL fetcher={noOpFetcher} />,",
          "",
          "[Removed Lines]",
          "493:     const spy = jest",
          "495:       .mockReturnValue(900);",
          "501:     const codeMirrorGutter = container.querySelector(",
          "502:       '.result-window .CodeMirror-gutter',",
          "503:     );",
          "506:     fireEvent.mouseDown(codeMirrorGutter, {",
          "511:     fireEvent.mouseMove(codeMirrorGutter, {",
          "516:     fireEvent.mouseUp(codeMirrorGutter);",
          "518:     expect(queryWrap.style.flex).toEqual('3.5');",
          "520:     spy.mockRestore();",
          "524:     const spy = jest",
          "526:       .mockReturnValue(1200);",
          "",
          "[Added Lines]",
          "494:     const clientWitdhSpy = jest",
          "496:       .mockReturnValue(0);",
          "498:     const boundingClientRectSpy = jest",
          "499:       .spyOn(Element.prototype, 'getBoundingClientRect')",
          "500:       .mockReturnValue({ left: 0, right: 900 });",
          "506:     const dragBar = container.querySelector('.editor-drag-bar');",
          "509:     fireEvent.mouseDown(dragBar, {",
          "514:     fireEvent.mouseMove(dragBar, {",
          "519:     fireEvent.mouseUp(dragBar);",
          "522:     expect(queryWrap.parentElement.style.flex).toEqual('3.5');",
          "524:     clientWitdhSpy.mockRestore();",
          "525:     boundingClientRectSpy.mockRestore();",
          "530:     const clientWidthSpy = jest",
          "532:       .mockReturnValue(0);",
          "534:     const boundingClientRectSpy = jest",
          "535:       .spyOn(Element.prototype, 'getBoundingClientRect')",
          "536:       .mockReturnValue({ left: 0, right: 1200 });",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "546:     fireEvent.mouseUp(docExplorerResizer);",
          "553:   });",
          "555:   describe('Tabs', () => {",
          "",
          "[Removed Lines]",
          "548:     expect(container.querySelector('.docExplorerWrap').style.width).toBe(",
          "549:       '403px',",
          "550:     );",
          "552:     spy.mockRestore();",
          "",
          "[Added Lines]",
          "559:     expect(",
          "560:       container.querySelector('.editorWrap').parentElement.style.flex,",
          "561:     ).toBe('1.977667493796526');",
          "563:     clientWidthSpy.mockRestore();",
          "564:     boundingClientRectSpy.mockRestore();",
          "",
          "---------------"
        ],
        "packages/graphiql/src/css/app.css||packages/graphiql/src/css/app.css": [
          "File: packages/graphiql/src/css/app.css -> packages/graphiql/src/css/app.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: }",
          "108: .graphiql-container .resultWrap {",
          "110:   display: flex;",
          "111:   flex-direction: column;",
          "112:   flex: 1;",
          "",
          "[Removed Lines]",
          "109:   border-left: solid 1px #e0e0e0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:   background: white;",
          "120:   box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);",
          "121:   position: relative;",
          "122:   z-index: 3;",
          "123: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:   width: 100%;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130: .graphiql-container .docExplorerResizer {",
          "131:   cursor: col-resize;",
          "132:   height: 100%;",
          "134:   position: absolute;",
          "136:   width: 10px;",
          "137:   z-index: 10;",
          "138: }",
          "",
          "[Removed Lines]",
          "133:   left: -5px;",
          "135:   top: 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "155: .graphiql-container .secondary-editor {",
          "156:   display: flex;",
          "157:   flex-direction: column;",
          "159:   position: relative;",
          "160: }",
          "",
          "[Removed Lines]",
          "158:   height: 30px;",
          "",
          "[Added Lines]",
          "156:   height: 100%;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "164:   border-bottom: 1px solid #d6d6d6;",
          "165:   border-top: 1px solid #e0e0e0;",
          "166:   color: #777;",
          "167:   font-variant: small-caps;",
          "168:   font-weight: bold;",
          "169:   letter-spacing: 1px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:   cursor: row-resize;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "209: }",
          "211: .graphiql-container .result-window .CodeMirror-gutters {",
          "212:   background-color: #eeeeee;",
          "214:   cursor: col-resize;",
          "215: }",
          "",
          "[Removed Lines]",
          "213:   border-color: #e0e0e0;",
          "",
          "[Added Lines]",
          "211:   background-color: #f6f7f8;",
          "212:   border: none;",
          "213: }",
          "215: .editor-drag-bar {",
          "216:   width: 12px;",
          "218:   border-left: 1px solid #e0e0e0;",
          "219:   border-right: 1px solid #e0e0e0;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/css/doc-explorer.css||packages/graphiql/src/css/doc-explorer.css": [
          "File: packages/graphiql/src/css/doc-explorer.css -> packages/graphiql/src/css/doc-explorer.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   line-height: 14px;",
          "39: }",
          "45: .graphiql-container .doc-explorer-back:before {",
          "46:   border-left: 2px solid #3b5998;",
          "47:   border-top: 2px solid #3b5998;",
          "",
          "[Removed Lines]",
          "41: .doc-explorer-narrow .doc-explorer-back {",
          "42:   width: 0;",
          "43: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:   top: 47px;",
          "72: }",
          "78: .graphiql-container .doc-type-description p:first-child,",
          "79: .graphiql-container .doc-type-description blockquote:first-child {",
          "80:   margin-top: 0;",
          "",
          "[Removed Lines]",
          "74: .graphiql-container .doc-explorer-contents {",
          "75:   min-width: 300px;",
          "76: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/elementPosition.ts||packages/graphiql/src/utility/elementPosition.ts": [
          "File: packages/graphiql/src/utility/elementPosition.ts -> packages/graphiql/src/utility/elementPosition.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92522cb9ef679f0c1bb0ea0315c38909071cd454",
      "candidate_info": {
        "commit_hash": "92522cb9ef679f0c1bb0ea0315c38909071cd454",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/92522cb9ef679f0c1bb0ea0315c38909071cd454",
        "files": [
          ".eslintrc.js",
          "examples/graphiql-webpack/src/index.jsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx",
          "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/DocExplorer/Directive.tsx",
          "packages/graphiql/src/components/DocExplorer/FieldDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "packages/graphiql/src/components/DocExplorer/TypeDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/TypeLink.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/Tabs.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx"
        ],
        "message": "enable `react/jsx-curly-brace-presence` and disable `react/jsx-no-literals` (#2273)",
        "before_after_code_files": [
          ".eslintrc.js||.eslintrc.js",
          "examples/graphiql-webpack/src/index.jsx||examples/graphiql-webpack/src/index.jsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx",
          "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx",
          "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx||packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx",
          "packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/DocExplorer/Directive.tsx||packages/graphiql/src/components/DocExplorer/Directive.tsx",
          "packages/graphiql/src/components/DocExplorer/FieldDoc.tsx||packages/graphiql/src/components/DocExplorer/FieldDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx||packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchResults.tsx||packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "packages/graphiql/src/components/DocExplorer/TypeDoc.tsx||packages/graphiql/src/components/DocExplorer/TypeDoc.tsx",
          "packages/graphiql/src/components/DocExplorer/TypeLink.tsx||packages/graphiql/src/components/DocExplorer/TypeLink.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/Tabs.tsx||packages/graphiql/src/components/Tabs.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        ".eslintrc.js||.eslintrc.js": [
          "File: .eslintrc.js -> .eslintrc.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   },",
          "36:   extends: [",
          "38:     'plugin:import/typescript',",
          "39:     'plugin:react/recommended',",
          "40:     'plugin:react-hooks/recommended',",
          "41:   ],",
          "43:   globals: {",
          "",
          "[Removed Lines]",
          "37:     'prettier',",
          "",
          "[Added Lines]",
          "40:     'prettier',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275:     'prefer-object-spread/prefer-object-spread': 1,",
          "278:     'react/jsx-boolean-value': 'error',",
          "279:     'react/jsx-handler-names': 'error',",
          "280:     'react/jsx-key': 'error',",
          "281:     'react/jsx-no-duplicate-props': 'error',",
          "283:     'react/jsx-no-undef': 'error',",
          "284:     'react/jsx-pascal-case': 'error',",
          "285:     'react/jsx-uses-react': 'error',",
          "",
          "[Removed Lines]",
          "282:     'react/jsx-no-literals': 'error',",
          "",
          "[Added Lines]",
          "278:     'react/jsx-curly-brace-presence': 'error',",
          "",
          "---------------"
        ],
        "examples/graphiql-webpack/src/index.jsx||examples/graphiql-webpack/src/index.jsx": [
          "File: examples/graphiql-webpack/src/index.jsx -> examples/graphiql-webpack/src/index.jsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import GraphiQL from 'graphiql';",
          "4: import 'graphiql/graphiql.css';",
          "9: GraphiQL.Logo = Logo;",
          "",
          "[Removed Lines]",
          "6: const Logo = () => <span>{'My Corp'}</span>;",
          "",
          "[Added Lines]",
          "6: const Logo = () => <span>My Corp</span>;",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     } else if (!schema) {",
          "92:     } else if (navItem.search) {",
          "93:       content = (",
          "94:         <SearchResults",
          "",
          "[Removed Lines]",
          "91:       content = <div className=\"error-container\">{'No Schema Available'}</div>;",
          "",
          "[Added Lines]",
          "91:       content = <div className=\"error-container\">No Schema Available</div>;",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer/FieldDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:   if (field && 'args' in field && field.args.length > 0) {",
          "23:     argsDef = (",
          "24:       <div className=\"doc-category\">",
          "26:         {field.args.map((arg: GraphQLArgument) => (",
          "27:           <div key={arg.name} className=\"doc-category-item\">",
          "28:             <div>",
          "",
          "[Removed Lines]",
          "25:         <div className=\"doc-category-title\">{'arguments'}</div>",
          "",
          "[Added Lines]",
          "25:         <div className=\"doc-category-title\">arguments</div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:         />",
          "52:       )}",
          "53:       <div className=\"doc-category\">",
          "55:         <TypeLink type={field?.type} onClick={onClickType} />",
          "56:       </div>",
          "57:       {argsDef}",
          "",
          "[Removed Lines]",
          "54:         <div className=\"doc-category-title\">{'type'}</div>",
          "",
          "[Added Lines]",
          "54:         <div className=\"doc-category-title\">type</div>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer/SchemaDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     <div>",
          "28:       <MarkdownContent",
          "29:         className=\"doc-type-description\"",
          "33:       />",
          "34:       <div className=\"doc-category\">",
          "36:         <div className=\"doc-category-item\">",
          "38:           {': '}",
          "39:           <TypeLink type={queryType} onClick={onClickType} />",
          "40:         </div>",
          "41:         {mutationType && (",
          "42:           <div className=\"doc-category-item\">",
          "44:             {': '}",
          "45:             <TypeLink type={mutationType} onClick={onClickType} />",
          "46:           </div>",
          "47:         )}",
          "48:         {subscriptionType && (",
          "49:           <div className=\"doc-category-item\">",
          "51:             {': '}",
          "52:             <TypeLink type={subscriptionType} onClick={onClickType} />",
          "53:           </div>",
          "",
          "[Removed Lines]",
          "30:         markdown={",
          "31:           'A GraphQL schema provides a root type for each kind of operation.'",
          "32:         }",
          "35:         <div className=\"doc-category-title\">{'root types'}</div>",
          "37:           <span className=\"keyword\">{'query'}</span>",
          "43:             <span className=\"keyword\">{'mutation'}</span>",
          "50:             <span className=\"keyword\">{'subscription'}</span>",
          "",
          "[Added Lines]",
          "30:         markdown=\"A GraphQL schema provides a root type for each kind of operation.\"",
          "33:         <div className=\"doc-category-title\">root types</div>",
          "35:           <span className=\"keyword\">query</span>",
          "41:             <span className=\"keyword\">mutation</span>",
          "48:             <span className=\"keyword\">subscription</span>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer/SearchResults.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:       matchedWithin.length + matchedTypes.length + matchedFields.length ===",
          "129:       0",
          "130:     ) {",
          "132:     }",
          "134:     if (withinType && matchedTypes.length + matchedFields.length > 0) {",
          "",
          "[Removed Lines]",
          "131:       return <span className=\"doc-alert-text\">{'No results found.'}</span>;",
          "",
          "[Added Lines]",
          "131:       return <span className=\"doc-alert-text\">No results found.</span>;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:         <div>",
          "137:           {matchedWithin}",
          "138:           <div className=\"doc-category\">",
          "140:             {matchedTypes}",
          "141:             {matchedFields}",
          "142:           </div>",
          "",
          "[Removed Lines]",
          "139:             <div className=\"doc-category-title\">{'other results'}</div>",
          "",
          "[Added Lines]",
          "139:             <div className=\"doc-category-title\">other results</div>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:       const fields = Object.keys(fieldMap).map(name => fieldMap[name]);",
          "92:       fieldsDef = (",
          "93:         <div className=\"doc-category\">",
          "95:           {fields",
          "96:             .filter(field =>",
          "97:               'isDeprecated' in field ? !field.isDeprecated : true,",
          "",
          "[Removed Lines]",
          "94:           <div className=\"doc-category-title\">{'fields'}</div>",
          "",
          "[Added Lines]",
          "94:           <div className=\"doc-category-title\">fields</div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:       if (deprecatedFields.length > 0) {",
          "115:         deprecatedFieldsDef = (",
          "116:           <div className=\"doc-category\">",
          "118:             {!this.state.showDeprecated ? (",
          "119:               <button className=\"show-btn\" onClick={this.handleShowDeprecated}>",
          "121:               </button>",
          "122:             ) : (",
          "123:               deprecatedFields.map(field => (",
          "",
          "[Removed Lines]",
          "117:             <div className=\"doc-category-title\">{'deprecated fields'}</div>",
          "120:                 {'Show deprecated fields...'}",
          "",
          "[Added Lines]",
          "117:             <div className=\"doc-category-title\">deprecated fields</div>",
          "120:                 Show deprecated fields...",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:       const values = type.getValues();",
          "142:       valuesDef = (",
          "143:         <div className=\"doc-category\">",
          "145:           {values",
          "146:             .filter(value => !value.isDeprecated)",
          "147:             .map(value => (",
          "",
          "[Removed Lines]",
          "144:           <div className=\"doc-category-title\">{'values'}</div>",
          "",
          "[Added Lines]",
          "144:           <div className=\"doc-category-title\">values</div>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:       if (deprecatedValues.length > 0) {",
          "155:         deprecatedValuesDef = (",
          "156:           <div className=\"doc-category\">",
          "158:             {!this.state.showDeprecated ? (",
          "159:               <button className=\"show-btn\" onClick={this.handleShowDeprecated}>",
          "161:               </button>",
          "162:             ) : (",
          "163:               deprecatedValues.map(value => (",
          "",
          "[Removed Lines]",
          "157:             <div className=\"doc-category-title\">{'deprecated values'}</div>",
          "160:                 {'Show deprecated values...'}",
          "",
          "[Added Lines]",
          "157:             <div className=\"doc-category-title\">deprecated values</div>",
          "160:                 Show deprecated values...",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx||packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx -> packages/graphiql-2-rfc-context/src/components/DocExplorer/TypeLink.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: function renderType(type: Maybe<GraphQLType>, onClick: OnClickTypeFunction) {",
          "30:   if (type instanceof GraphQLNonNull) {",
          "37:   }",
          "38:   if (type instanceof GraphQLList) {",
          "46:   }",
          "47:   return (",
          "48:     <a",
          "",
          "[Removed Lines]",
          "31:     return (",
          "32:       <span>",
          "33:         {renderType(type.ofType, onClick)}",
          "34:         {'!'}",
          "35:       </span>",
          "36:     );",
          "39:     return (",
          "40:       <span>",
          "41:         {'['}",
          "42:         {renderType(type.ofType, onClick)}",
          "43:         {']'}",
          "44:       </span>",
          "45:     );",
          "",
          "[Added Lines]",
          "31:     return <span>{renderType(type.ofType, onClick)}!</span>;",
          "34:     return <span>[{renderType(type.ofType, onClick)}]</span>;",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx||packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx -> packages/graphiql-2-rfc-context/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:       <section aria-label=\"Operation Editor\">",
          "270:           <QueryEditor",
          "271:             onHintInformationRender={this.handleHintInformationRender}",
          "272:             onClickReference={this.handleClickReference}",
          "",
          "[Removed Lines]",
          "269:         <SessionTabs tabs={[`Operation`, `Explorer`]} name={`operation`}>",
          "",
          "[Added Lines]",
          "269:         <SessionTabs tabs={[`Operation`, `Explorer`]} name=\"operation\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "274:             readOnly={this.props.readOnly}",
          "275:             editorOptions={this.props.operationEditorOptions}",
          "276:           />",
          "278:         </SessionTabs>",
          "279:       </section>",
          "280:     );",
          "282:     const variables = (",
          "283:       <section aria-label=\"Query Variables\">",
          "285:           <VariableEditor",
          "286:             onHintInformationRender={this.handleHintInformationRender}",
          "287:             onPrettifyQuery={this.handlePrettifyQuery}",
          "",
          "[Removed Lines]",
          "277:           <div>{`Explorer`}</div>",
          "284:         <SessionTabs tabs={[`Variables`, `Console`]} name={`variables`}>",
          "",
          "[Added Lines]",
          "277:           <div>Explorer</div>",
          "284:         <SessionTabs tabs={[`Variables`, `Console`]} name=\"variables\">",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "290:             readOnly={this.props.readOnly}",
          "291:             editorOptions={this.props.variablesEditorOptions}",
          "292:           />",
          "294:         </SessionTabs>",
          "295:       </section>",
          "296:     );",
          "",
          "[Removed Lines]",
          "293:           <div>{`Console`}</div>",
          "",
          "[Added Lines]",
          "293:           <div>Console</div>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "299:       <section aria-label=\"Response Editor\">",
          "300:         <SessionTabs",
          "301:           tabs={[`Response`, `Extensions`, `Playground`]}",
          "303:           <>",
          "304:             {this.state.isWaitingForResponse && (",
          "305:               <div className=\"spinner-container\">",
          "",
          "[Removed Lines]",
          "302:           name={`results`}>",
          "",
          "[Added Lines]",
          "302:           name=\"results\">",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "312:             />",
          "313:             {footer}",
          "314:           </>",
          "317:         </SessionTabs>",
          "318:       </section>",
          "319:     );",
          "",
          "[Removed Lines]",
          "315:           <div>{`Extensions`}</div>",
          "316:           <div>{`Playground`}</div>",
          "",
          "[Added Lines]",
          "315:           <div>Extensions</div>",
          "316:           <div>Playground</div>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "748:     <div className=\"title\">",
          "749:       {props.children || (",
          "750:         <span>",
          "754:         </span>",
          "755:       )}",
          "756:     </div>",
          "",
          "[Removed Lines]",
          "751:           {'Graph'}",
          "752:           <em>{'i'}</em>",
          "753:           {'QL'}",
          "",
          "[Added Lines]",
          "751:           Graph",
          "752:           <em>i</em>",
          "753:           QL",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql-2-rfc-context/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:       it('can be overridden using the exported type', () => {",
          "367:         const { container } = render(",
          "368:           <GraphiQL fetcher={noOpFetcher}>",
          "370:           </GraphiQL>,",
          "371:         );",
          "",
          "[Removed Lines]",
          "369:             <GraphiQL.Logo>{'My Great Logo'}</GraphiQL.Logo>",
          "",
          "[Added Lines]",
          "369:             <GraphiQL.Logo>My Great Logo</GraphiQL.Logo>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "376:       });",
          "378:       it('can be overridden using a named component', () => {",
          "382:         WrappedLogo.displayName = 'GraphiQLLogo';",
          "384:         const { getByText } = render(",
          "",
          "[Removed Lines]",
          "379:         const WrappedLogo = wrap(",
          "380:           <GraphiQL.Logo>{'My Great Logo'}</GraphiQL.Logo>,",
          "381:         );",
          "",
          "[Added Lines]",
          "379:         const WrappedLogo = wrap(<GraphiQL.Logo>My Great Logo</GraphiQL.Logo>);",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Layout.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: const explorer = {",
          "18:   input: (",
          "19:     <List>",
          "21:     </List>",
          "22:   ),",
          "23:   response: (",
          "24:     <List>",
          "26:     </List>",
          "27:   ),",
          "28:   console: (",
          "29:     <List>",
          "31:     </List>",
          "32:   ),",
          "33: };",
          "",
          "[Removed Lines]",
          "20:       <ListRow>{'Input'}</ListRow>",
          "25:       <ListRow>{'Response'}</ListRow>",
          "30:       <ListRow>{'Console/Inspector'}</ListRow>",
          "",
          "[Added Lines]",
          "20:       <ListRow>Input</ListRow>",
          "25:       <ListRow>Response</ListRow>",
          "30:       <ListRow>Console/Inspector</ListRow>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     <NavItem label=\"Schema\">",
          "37:       <Logo size=\"1em\" />",
          "38:     </NavItem>",
          "42:   </Nav>",
          "43: );",
          "44: const slots = { nav, explorer };",
          "",
          "[Removed Lines]",
          "39:     <NavItem label=\"Pig\u2019s nose\">{'\ud83d\udc3d'}</NavItem>",
          "40:     <NavItem label=\"Farmer\">{'\ud83d\udc68\u200d\ud83c\udf3e'}</NavItem>",
          "41:     <NavItem label=\"Bee\">{'\ud83d\udc1d'}</NavItem>",
          "",
          "[Added Lines]",
          "39:     <NavItem label=\"Pig\u2019s nose\">\ud83d\udc3d</NavItem>",
          "40:     <NavItem label=\"Farmer\">\ud83d\udc68\u200d\ud83c\udf3e</NavItem>",
          "41:     <NavItem label=\"Bee\">\ud83d\udc1d</NavItem>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:           size: 'sidebar',",
          "62:           component: (",
          "63:             <List>",
          "65:             </List>",
          "66:           ),",
          "67:         },",
          "",
          "[Removed Lines]",
          "64:               <ListRow>{'Sidebar'}</ListRow>",
          "",
          "[Added Lines]",
          "64:               <ListRow>Sidebar</ListRow>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:           size: 'aside',",
          "71:           component: (",
          "72:             <List>",
          "74:             </List>",
          "75:           ),",
          "76:         },",
          "",
          "[Removed Lines]",
          "73:               <ListRow>{'aside'}</ListRow>",
          "",
          "[Added Lines]",
          "73:               <ListRow>aside</ListRow>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "79:           size: 'aside',",
          "80:           component: (",
          "81:             <List>",
          "83:             </List>",
          "84:           ),",
          "85:         },",
          "",
          "[Removed Lines]",
          "82:               <ListRow>{'Another aside'}</ListRow>",
          "",
          "[Added Lines]",
          "82:               <ListRow>Another aside</ListRow>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "99:           size: 'full-screen',",
          "100:           component: (",
          "101:             <List>",
          "103:             </List>",
          "104:           ),",
          "105:         },",
          "",
          "[Removed Lines]",
          "102:               <ListRow>{'Woooo'}</ListRow>",
          "",
          "[Added Lines]",
          "102:               <ListRow>Woooo</ListRow>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/List/List.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     <List>",
          "23:       <ListRow padding>",
          "24:         <div>",
          "28:         </div>",
          "29:       </ListRow>",
          "30:       <ListRow padding flex>",
          "32:         {longText}",
          "34:       </ListRow>",
          "35:     </List>",
          "36:   </div>",
          "",
          "[Removed Lines]",
          "25:           {",
          "26:             'Lists are a vertical stack of components and form the basis of most modules. This one is very long'",
          "27:           }",
          "31:         {'You normally want 1 flex area that grows forever like this one'}",
          "33:         {'the end'}",
          "",
          "[Added Lines]",
          "25:           Lists are a vertical stack of components and form the basis of most",
          "26:           modules. This one is very long",
          "30:         You normally want 1 flex area that grows forever like this one",
          "32:         the end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: export const WithStackedRows = () => (",
          "40:   <div style={{ height: '100vh', display: 'grid' }}>",
          "41:     <List>",
          "46:       <ListRow padding flex>",
          "48:         {longText}",
          "50:       </ListRow>",
          "53:     </List>",
          "54:   </div>",
          "55: );",
          "",
          "[Removed Lines]",
          "42:       <ListRow padding>{'Title'}</ListRow>",
          "43:       <ListRow padding>{'Navigation'}</ListRow>",
          "44:       <ListRow padding>{'Search'}</ListRow>",
          "45:       <ListRow padding>{'Filter'}</ListRow>",
          "47:         {'Actual content'}",
          "49:         {'Actual content ends here'}",
          "51:       <ListRow padding>{'Footer'}</ListRow>",
          "52:       <ListRow padding>{'Footers footer'}</ListRow>",
          "",
          "[Added Lines]",
          "41:       <ListRow padding>Title</ListRow>",
          "42:       <ListRow padding>Navigation</ListRow>",
          "43:       <ListRow padding>Search</ListRow>",
          "44:       <ListRow padding>Filter</ListRow>",
          "46:         Actual content",
          "48:         Actual content ends here",
          "50:       <ListRow padding>Footer</ListRow>",
          "51:       <ListRow padding>Footers footer</ListRow>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Nav.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     <NavItem label=\"Schema\">",
          "22:       <Logo size=\"1em\" />",
          "23:     </NavItem>",
          "27:   </Nav>",
          "28: );",
          "",
          "[Removed Lines]",
          "24:     <NavItem label=\"Pig\u2019s nose\">{'\ud83d\udc3d'}</NavItem>",
          "25:     <NavItem label=\"Farmer\">{'\ud83d\udc68\u200d\ud83c\udf3e'}</NavItem>",
          "26:     <NavItem label=\"Bee\">{'\ud83d\udc1d'}</NavItem>",
          "",
          "[Added Lines]",
          "24:     <NavItem label=\"Pig\u2019s nose\">\ud83d\udc3d</NavItem>",
          "25:     <NavItem label=\"Farmer\">\ud83d\udc68\u200d\ud83c\udf3e</NavItem>",
          "26:     <NavItem label=\"Bee\">\ud83d\udc1d</NavItem>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Resizer/Resizer.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:   <Resizer",
          "18:     border=\"bottom\"",
          "19:     handlerStyle={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>",
          "21:   </Resizer>",
          "22: );",
          "",
          "[Removed Lines]",
          "20:     <main>{`Main content`}</main>",
          "",
          "[Added Lines]",
          "20:     <main>Main content</main>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Toolbar/Tabs.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:   <List>",
          "34:     <ListRow>",
          "35:       <ManagedTabs tabs={['One', 'Two', 'Three']}>",
          "39:       </ManagedTabs>",
          "40:     </ListRow>",
          "41:     <ListRow>",
          "",
          "[Removed Lines]",
          "36:         <p>{'One'}</p>",
          "37:         <p>{'Two'}</p>",
          "38:         <p>{'Three'}</p>",
          "",
          "[Added Lines]",
          "36:         <p>One</p>",
          "37:         <p>Two</p>",
          "38:         <p>Three</p>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:           'nested',",
          "47:           <>",
          "48:             {'Component '}",
          "50:           </>,",
          "51:         ]}>",
          "56:       </ManagedTabs>",
          "57:     </ListRow>",
          "58:     <ListRow flex>",
          "59:       <div style={{ height: '100px', display: 'grid' }}>",
          "60:         <ManagedTabs tabs={['Very tall', 'tabs']}>",
          "63:         </ManagedTabs>",
          "64:       </div>",
          "65:     </ListRow>",
          "",
          "[Removed Lines]",
          "49:             <small style={{ background: 'yellow', padding: 3 }}>{'2'}</small>",
          "52:         <p>{'With'}</p>",
          "53:         <p>{'a'}</p>",
          "54:         <p>{'nested'}</p>",
          "55:         <p>{'component'}</p>",
          "61:           <p>{'a'}</p>",
          "62:           <p>{'b'}</p>",
          "",
          "[Added Lines]",
          "49:             <small style={{ background: 'yellow', padding: 3 }}>2</small>",
          "52:         <p>With</p>",
          "53:         <p>a</p>",
          "54:         <p>nested</p>",
          "55:         <p>component</p>",
          "61:           <p>a</p>",
          "62:           <p>b</p>",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Toolbar/Toolbar.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: export const Basic = () => (",
          "19:   <List>",
          "20:     <ListRow padding>",
          "24:     </ListRow>",
          "25:     <ListRow>",
          "26:       <Toolbar justifyContent=\"center\">",
          "30:       </Toolbar>",
          "31:     </ListRow>",
          "32:     <ListRow>",
          "33:       <Toolbar justifyContent=\"flex-start\">",
          "37:       </Toolbar>",
          "38:     </ListRow>",
          "39:     <ListRow>",
          "40:       <Toolbar justifyContent=\"flex-end\">",
          "44:       </Toolbar>",
          "45:     </ListRow>",
          "46:     <ListRow>",
          "47:       <Toolbar justifyContent=\"space-between\">",
          "51:       </Toolbar>",
          "52:     </ListRow>",
          "53:   </List>",
          "",
          "[Removed Lines]",
          "21:       <p>{`Toolbars group together widgets in a flexbox. You can cutomize what type of",
          "22:       justification to use and if elements go together it'll add dividers",
          "23:       between them`}</p>",
          "27:         <Content>{'Some text'}</Content>",
          "28:         <Content>{'Some text'}</Content>",
          "29:         <Content>{'Some text'}</Content>",
          "34:         <Content>{'Some text'}</Content>",
          "35:         <Content>{'Some text'}</Content>",
          "36:         <Content>{'Some text'}</Content>",
          "41:         <Content>{'Some text'}</Content>",
          "42:         <Content>{'Some text'}</Content>",
          "43:         <Content>{'Some text'}</Content>",
          "48:         <Content>{'Some text'}</Content>",
          "49:         <Content>{'Some text'}</Content>",
          "50:         <Content>{'Some text'}</Content>",
          "",
          "[Added Lines]",
          "21:       <p>",
          "22:         Toolbars group together widgets in a flexbox. You can customize what",
          "23:         type of justification to use and if elements go together it&apos;ll add",
          "24:         dividers between them",
          "25:       </p>",
          "29:         <Content>Some text</Content>",
          "30:         <Content>Some text</Content>",
          "31:         <Content>Some text</Content>",
          "36:         <Content>Some text</Content>",
          "37:         <Content>Some text</Content>",
          "38:         <Content>Some text</Content>",
          "43:         <Content>Some text</Content>",
          "44:         <Content>Some text</Content>",
          "45:         <Content>Some text</Content>",
          "50:         <Content>Some text</Content>",
          "51:         <Content>Some text</Content>",
          "52:         <Content>Some text</Content>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:   <List>",
          "58:     <ListRow padding>",
          "59:       <p>",
          "61:       </p>",
          "62:     </ListRow>",
          "63:     <ListRow>",
          "",
          "[Removed Lines]",
          "60:         {`The dividers don't nest so if you have tabs inside a toolbar the tabs won't get dividers`}",
          "",
          "[Added Lines]",
          "62:         The dividers don&apos;t nest so if you have tabs inside a toolbar the",
          "63:         tabs won&apos;t get dividers",
          "",
          "---------------"
        ],
        "packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx||packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx": [
          "File: packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx -> packages/graphiql-2-rfc-context/src/components/common/Type.stories.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: export const type = () => (",
          "19:   <List>",
          "20:     <ListRow padding>",
          "22:     </ListRow>",
          "23:     <ListRow padding>",
          "25:     </ListRow>",
          "27:   </List>",
          "28: );",
          "",
          "[Removed Lines]",
          "21:       <SectionHeader>{'Title'}</SectionHeader>",
          "24:       <Explainer>{'Small explainer text'}</Explainer>",
          "26:     <ListRow padding>{'Normal text'}</ListRow>",
          "",
          "[Added Lines]",
          "21:       <SectionHeader>Title</SectionHeader>",
          "24:       <Explainer>Small explainer text</Explainer>",
          "26:     <ListRow padding>Normal text</ListRow>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:     let content;",
          "84:     if (schemaErrors) {",
          "88:     } else if (schema === undefined) {",
          "90:       content = (",
          "",
          "[Removed Lines]",
          "85:       content = (",
          "86:         <div className=\"error-container\">{'Error fetching schema'}</div>",
          "87:       );",
          "",
          "[Added Lines]",
          "85:       content = <div className=\"error-container\">Error fetching schema</div>;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     } else if (!schema) {",
          "99:     } else if (navItem.search) {",
          "100:       content = (",
          "101:         <SearchResults",
          "",
          "[Removed Lines]",
          "98:       content = <div className=\"error-container\">{'No Schema Available'}</div>;",
          "",
          "[Added Lines]",
          "96:       content = <div className=\"error-container\">No Schema Available</div>;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/Directive.tsx||packages/graphiql/src/components/DocExplorer/Directive.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/Directive.tsx -> packages/graphiql/src/components/DocExplorer/Directive.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: export default function Directive({ directive }: DirectiveProps) {",
          "16:   return (",
          "17:     <span className=\"doc-category-item\" id={directive.name.value}>",
          "20:     </span>",
          "21:   );",
          "22: }",
          "",
          "[Removed Lines]",
          "18:       {'@'}",
          "19:       {directive.name.value}",
          "",
          "[Added Lines]",
          "18:       @{directive.name.value}",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/FieldDoc.tsx||packages/graphiql/src/components/DocExplorer/FieldDoc.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/FieldDoc.tsx -> packages/graphiql/src/components/DocExplorer/FieldDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   if (field && 'args' in field && field.args.length > 0) {",
          "26:     argsDef = (",
          "27:       <div id=\"doc-args\" className=\"doc-category\">",
          "29:         {field.args",
          "30:           .filter(arg => !arg.deprecationReason)",
          "31:           .map((arg: GraphQLArgument) => (",
          "",
          "[Removed Lines]",
          "28:         <div className=\"doc-category-title\">{'arguments'}</div>",
          "",
          "[Added Lines]",
          "28:         <div className=\"doc-category-title\">arguments</div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     if (deprecatedArgs.length > 0) {",
          "54:       deprecatedArgsDef = (",
          "55:         <div id=\"doc-deprecated-args\" className=\"doc-category\">",
          "57:           {!showDeprecated ? (",
          "58:             <button",
          "59:               className=\"show-btn\"",
          "60:               onClick={() => handleShowDeprecated(!showDeprecated)}>",
          "62:             </button>",
          "63:           ) : (",
          "64:             deprecatedArgs.map((arg, i) => (",
          "",
          "[Removed Lines]",
          "56:           <div className=\"doc-category-title\">{'deprecated arguments'}</div>",
          "61:               {'Show deprecated arguments...'}",
          "",
          "[Added Lines]",
          "56:           <div className=\"doc-category-title\">deprecated arguments</div>",
          "61:               Show deprecated arguments...",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:   ) {",
          "94:     directivesDef = (",
          "95:       <div id=\"doc-directives\" className=\"doc-category\">",
          "97:         {field.astNode.directives.map((directive: DirectiveNode) => (",
          "98:           <div key={directive.name.value} className=\"doc-category-item\">",
          "99:             <div>",
          "",
          "[Removed Lines]",
          "96:         <div className=\"doc-category-title\">{'directives'}</div>",
          "",
          "[Added Lines]",
          "96:         <div className=\"doc-category-title\">directives</div>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:         />",
          "119:       )}",
          "120:       <div className=\"doc-category\">",
          "122:         <TypeLink type={field?.type} onClick={onClickType} />",
          "123:       </div>",
          "124:       {argsDef}",
          "",
          "[Removed Lines]",
          "121:         <div className=\"doc-category-title\">{'type'}</div>",
          "",
          "[Added Lines]",
          "121:         <div className=\"doc-category-title\">type</div>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx||packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx -> packages/graphiql/src/components/DocExplorer/SchemaDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:         }",
          "34:       />",
          "35:       <div className=\"doc-category\">",
          "37:         <div className=\"doc-category-item\">",
          "39:           {': '}",
          "40:           <TypeLink type={queryType} onClick={onClickType} />",
          "41:         </div>",
          "42:         {mutationType && (",
          "43:           <div className=\"doc-category-item\">",
          "45:             {': '}",
          "46:             <TypeLink type={mutationType} onClick={onClickType} />",
          "47:           </div>",
          "48:         )}",
          "49:         {subscriptionType && (",
          "50:           <div className=\"doc-category-item\">",
          "52:             {': '}",
          "53:             <TypeLink type={subscriptionType} onClick={onClickType} />",
          "54:           </div>",
          "",
          "[Removed Lines]",
          "36:         <div className=\"doc-category-title\">{'root types'}</div>",
          "38:           <span className=\"keyword\">{'query'}</span>",
          "44:             <span className=\"keyword\">{'mutation'}</span>",
          "51:             <span className=\"keyword\">{'subscription'}</span>",
          "",
          "[Added Lines]",
          "36:         <div className=\"doc-category-title\">root types</div>",
          "38:           <span className=\"keyword\">query</span>",
          "44:             <span className=\"keyword\">mutation</span>",
          "51:             <span className=\"keyword\">subscription</span>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/SearchResults.tsx||packages/graphiql/src/components/DocExplorer/SearchResults.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/SearchResults.tsx -> packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:       matchedWithin.length + matchedTypes.length + matchedFields.length ===",
          "129:       0",
          "130:     ) {",
          "132:     }",
          "134:     if (withinType && matchedTypes.length + matchedFields.length > 0) {",
          "",
          "[Removed Lines]",
          "131:       return <span className=\"doc-alert-text\">{'No results found.'}</span>;",
          "",
          "[Added Lines]",
          "131:       return <span className=\"doc-alert-text\">No results found.</span>;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:         <div>",
          "137:           {matchedWithin}",
          "138:           <div className=\"doc-category\">",
          "140:             {matchedTypes}",
          "141:             {matchedFields}",
          "142:           </div>",
          "",
          "[Removed Lines]",
          "139:             <div className=\"doc-category-title\">{'other results'}</div>",
          "",
          "[Added Lines]",
          "139:             <div className=\"doc-category-title\">other results</div>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/TypeDoc.tsx||packages/graphiql/src/components/DocExplorer/TypeDoc.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/TypeDoc.tsx -> packages/graphiql/src/components/DocExplorer/TypeDoc.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:       const fields = Object.keys(fieldMap).map(name => fieldMap[name]);",
          "92:       fieldsDef = (",
          "93:         <div id=\"doc-fields\" className=\"doc-category\">",
          "95:           {fields",
          "96:             .filter(field => !field.deprecationReason)",
          "97:             .map(field => (",
          "",
          "[Removed Lines]",
          "94:           <div className=\"doc-category-title\">{'fields'}</div>",
          "",
          "[Added Lines]",
          "94:           <div className=\"doc-category-title\">fields</div>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:       if (deprecatedFields.length > 0) {",
          "113:         deprecatedFieldsDef = (",
          "114:           <div id=\"doc-deprecated-fields\" className=\"doc-category\">",
          "116:             {!this.state.showDeprecated ? (",
          "117:               <button className=\"show-btn\" onClick={this.handleShowDeprecated}>",
          "119:               </button>",
          "120:             ) : (",
          "121:               deprecatedFields.map(field => (",
          "",
          "[Removed Lines]",
          "115:             <div className=\"doc-category-title\">{'deprecated fields'}</div>",
          "118:                 {'Show deprecated fields...'}",
          "",
          "[Added Lines]",
          "115:             <div className=\"doc-category-title\">deprecated fields</div>",
          "118:                 Show deprecated fields...",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139:       const values = type.getValues();",
          "140:       valuesDef = (",
          "141:         <div className=\"doc-category\">",
          "143:           {values",
          "144:             .filter(value => Boolean(!value.deprecationReason))",
          "145:             .map(value => (",
          "",
          "[Removed Lines]",
          "142:           <div className=\"doc-category-title\">{'values'}</div>",
          "",
          "[Added Lines]",
          "142:           <div className=\"doc-category-title\">values</div>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "154:       if (deprecatedValues.length > 0) {",
          "155:         deprecatedValuesDef = (",
          "156:           <div className=\"doc-category\">",
          "158:             {!this.state.showDeprecated ? (",
          "159:               <button className=\"show-btn\" onClick={this.handleShowDeprecated}>",
          "161:               </button>",
          "162:             ) : (",
          "163:               deprecatedValues.map(value => (",
          "",
          "[Removed Lines]",
          "157:             <div className=\"doc-category-title\">{'deprecated values'}</div>",
          "160:                 {'Show deprecated values...'}",
          "",
          "[Added Lines]",
          "157:             <div className=\"doc-category-title\">deprecated values</div>",
          "160:                 Show deprecated values...",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/TypeLink.tsx||packages/graphiql/src/components/DocExplorer/TypeLink.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/TypeLink.tsx -> packages/graphiql/src/components/DocExplorer/TypeLink.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: function renderType(type: Maybe<GraphQLType>, onClick: OnClickTypeFunction) {",
          "30:   if (type instanceof GraphQLNonNull) {",
          "37:   }",
          "38:   if (type instanceof GraphQLList) {",
          "46:   }",
          "47:   return (",
          "48:     <a",
          "",
          "[Removed Lines]",
          "31:     return (",
          "32:       <span>",
          "33:         {renderType(type.ofType, onClick)}",
          "34:         {'!'}",
          "35:       </span>",
          "36:     );",
          "39:     return (",
          "40:       <span>",
          "41:         {'['}",
          "42:         {renderType(type.ofType, onClick)}",
          "43:         {']'}",
          "44:       </span>",
          "45:     );",
          "",
          "[Added Lines]",
          "31:     return <span>{renderType(type.ofType, onClick)}!</span>;",
          "34:     return <span>[{renderType(type.ofType, onClick)}]</span>;",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "922:                 className=\"docExplorerShow\"",
          "923:                 onClick={this.handleToggleDocs}",
          "924:                 aria-label=\"Open Documentation Explorer\">",
          "926:               </button>",
          "927:             )}",
          "928:           </div>",
          "",
          "[Removed Lines]",
          "925:                 {'Docs'}",
          "",
          "[Added Lines]",
          "927:                 Docs",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "998:                     }`}",
          "999:                     onClick={this.handleOpenVariableEditorTab}",
          "1000:                     onMouseDown={this.handleTabClickPropogation}>",
          "1002:                   </div>",
          "1003:                   {this.state.headerEditorEnabled && (",
          "1004:                     <div",
          "",
          "[Removed Lines]",
          "1001:                     {'Query Variables'}",
          "",
          "[Added Lines]",
          "1003:                     Query Variables",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1010:                       }`}",
          "1011:                       onClick={this.handleOpenHeaderEditorTab}",
          "1012:                       onMouseDown={this.handleTabClickPropogation}>",
          "1014:                     </div>",
          "1015:                   )}",
          "1016:                 </div>",
          "",
          "[Removed Lines]",
          "1013:                       {'Request Headers'}",
          "",
          "[Added Lines]",
          "1015:                       Request Headers",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2155:     <div className=\"title\">",
          "2156:       {props.children || (",
          "2157:         <span>",
          "2161:         </span>",
          "2162:       )}",
          "2163:     </div>",
          "2164:   );",
          "2165: }",
          "2166: GraphiQLLogo.displayName = 'GraphiQLLogo';",
          "",
          "[Removed Lines]",
          "2158:           {'Graph'}",
          "2159:           <em>{'i'}</em>",
          "2160:           {'QL'}",
          "",
          "[Added Lines]",
          "2160:           Graph",
          "2161:           <em>i</em>",
          "2162:           QL",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx": [
          "File: packages/graphiql/src/components/QueryHistory.tsx -> packages/graphiql/src/components/QueryHistory.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     return (",
          "112:       <section aria-label=\"History\">",
          "113:         <div className=\"history-title-bar\">",
          "115:           <div className=\"doc-explorer-rhs\">{this.props.children}</div>",
          "116:         </div>",
          "117:         <ul className=\"history-contents\">{queryNodes}</ul>",
          "",
          "[Removed Lines]",
          "114:           <div className=\"history-title\">{'History'}</div>",
          "",
          "[Added Lines]",
          "114:           <div className=\"history-title\">History</div>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/Tabs.tsx||packages/graphiql/src/components/Tabs.tsx": [
          "File: packages/graphiql/src/components/Tabs.tsx -> packages/graphiql/src/components/Tabs.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: export function TabAddButton(props: { onClick: () => void }) {",
          "54:   return (",
          "55:     <button onClick={props.onClick} className=\"tab-add\" title=\"Create new tab\">",
          "57:     </button>",
          "58:   );",
          "59: }",
          "",
          "[Removed Lines]",
          "56:       <span>{'+'}</span>",
          "",
          "[Added Lines]",
          "56:       <span>+</span>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "399:       it('can be overridden using the exported type', () => {",
          "400:         const { container } = render(",
          "401:           <GraphiQL fetcher={noOpFetcher}>",
          "403:           </GraphiQL>,",
          "404:         );",
          "",
          "[Removed Lines]",
          "402:             <GraphiQL.Logo>{'My Great Logo'}</GraphiQL.Logo>",
          "",
          "[Added Lines]",
          "404:             <GraphiQL.Logo>My Great Logo</GraphiQL.Logo>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "409:       });",
          "411:       it('can be overridden using a named component', () => {",
          "415:         WrappedLogo.displayName = 'GraphiQLLogo';",
          "417:         const { getByText } = render(",
          "",
          "[Removed Lines]",
          "412:         const WrappedLogo = wrap(",
          "413:           <GraphiQL.Logo>{'My Great Logo'}</GraphiQL.Logo>,",
          "414:         );",
          "",
          "[Added Lines]",
          "414:         const WrappedLogo = wrap(<GraphiQL.Logo>My Great Logo</GraphiQL.Logo>);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2025ba06c5aa8e8ac68d29538ff135f3efc8e46",
      "candidate_info": {
        "commit_hash": "f2025ba06c5aa8e8ac68d29538ff135f3efc8e46",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/f2025ba06c5aa8e8ac68d29538ff135f3efc8e46",
        "files": [
          ".changeset/kind-dolphins-drop.md",
          "packages/graphiql-react/src/editor/completion.ts",
          "packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/package.json",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/VariableEditor.tsx",
          "packages/graphiql/src/index.ts",
          "packages/graphiql/src/utility/onHasCompletion.ts"
        ],
        "message": "add `useVariableEditor` hook to `@graphiql/react` (#2409)\n\n* add useVariableEditor hook\n\n* remove unused props\n\n* fix getting and setting headers\n\n* remove variables from react state and get them from editor state\n\n* mock useVariableEditor and mock editor getter and setter\n\n* add changeset",
        "before_after_code_files": [
          "packages/graphiql-react/src/editor/completion.ts||packages/graphiql-react/src/editor/completion.ts",
          "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/VariableEditor.tsx||packages/graphiql/src/components/VariableEditor.tsx",
          "packages/graphiql/src/index.ts||packages/graphiql/src/index.ts",
          "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/editor/completion.ts||packages/graphiql-react/src/editor/completion.ts": [
          "File: packages/graphiql-react/src/editor/completion.ts -> packages/graphiql-react/src/editor/completion.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   _cm: Editor,",
          "19:   data: EditorChange | undefined,",
          "20:   onHintInformationRender: (el: HTMLDivElement) => void,",
          "",
          "[Removed Lines]",
          "17: export default function onHasCompletion(",
          "",
          "[Added Lines]",
          "17: export function onHasCompletion(",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx": [
          "File: packages/graphiql-react/src/editor/context.tsx -> packages/graphiql-react/src/editor/context.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: export type EditorContextType = {",
          "6:   headerEditor: CodeMirrorEditor | null;",
          "7:   queryEditor: CodeMirrorEditor | null;",
          "8:   setHeaderEditor(newEditor: CodeMirrorEditor): void;",
          "9:   setQueryEditor(newEditor: CodeMirrorEditor): void;",
          "10: };",
          "12: export const EditorContext = createContext<EditorContextType>({",
          "13:   headerEditor: null,",
          "14:   queryEditor: null,",
          "15:   setHeaderEditor() {},",
          "16:   setQueryEditor() {},",
          "17: });",
          "19: export function EditorContextProvider(props: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:   variableEditor: CodeMirrorEditor | null;",
          "11:   setVariableEditor(newEditor: CodeMirrorEditor): void;",
          "17:   variableEditor: null,",
          "20:   setVariableEditor() {},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     null,",
          "25:   );",
          "26:   const [queryEditor, setQueryEditor] = useState<CodeMirrorEditor | null>(null);",
          "27:   return (",
          "28:     <EditorContext.Provider",
          "30:       {props.children}",
          "31:     </EditorContext.Provider>",
          "32:   );",
          "",
          "[Removed Lines]",
          "29:       value={{ headerEditor, queryEditor, setHeaderEditor, setQueryEditor }}>",
          "",
          "[Added Lines]",
          "31:   const [variableEditor, setVariableEditor] = useState<CodeMirrorEditor | null>(",
          "32:     null,",
          "33:   );",
          "36:       value={{",
          "37:         headerEditor,",
          "38:         queryEditor,",
          "39:         variableEditor,",
          "40:         setHeaderEditor,",
          "41:         setQueryEditor,",
          "42:         setVariableEditor,",
          "43:       }}>",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts": [
          "File: packages/graphiql-react/src/editor/hooks.ts -> packages/graphiql-react/src/editor/hooks.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { EditorChange } from 'codemirror';",
          "2: import { RefObject, useEffect, useRef } from 'react';",
          "5: import { CodeMirrorEditor } from './types';",
          "7: export function useSynchronizeValue(",
          "",
          "[Removed Lines]",
          "4: import onHasCompletion from './completion';",
          "",
          "[Added Lines]",
          "4: import { onHasCompletion } from './completion';",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts": [
          "File: packages/graphiql-react/src/editor/index.ts -> packages/graphiql-react/src/editor/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { EditorContext, EditorContextProvider } from './context';",
          "2: import { useHeaderEditor } from './header-editor';",
          "3: import { useQueryEditor } from './query-editor';",
          "5: import type { EditorContextType } from './context';",
          "6: import type { UseHeaderEditorArgs } from './header-editor';",
          "7: import type { UseQueryEditorArgs } from './query-editor';",
          "9: export {",
          "10:   EditorContext,",
          "11:   EditorContextProvider,",
          "12:   useHeaderEditor,",
          "13:   useQueryEditor,",
          "14: };",
          "",
          "[Removed Lines]",
          "16: export type { EditorContextType, UseHeaderEditorArgs, UseQueryEditorArgs };",
          "",
          "[Added Lines]",
          "1: import { onHasCompletion } from './completion';",
          "5: import { useVariableEditor } from './variable-editor';",
          "10: import type { UseVariableEditorArgs } from './variable-editor';",
          "13:   onHasCompletion,",
          "18:   useVariableEditor,",
          "21: export type {",
          "22:   EditorContextType,",
          "23:   UseHeaderEditorArgs,",
          "24:   UseQueryEditorArgs,",
          "25:   UseVariableEditorArgs,",
          "26: };",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx": [
          "File: packages/graphiql-react/src/editor/variable-editor.tsx -> packages/graphiql-react/src/editor/variable-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import type { VariableToType } from 'graphql-language-service';",
          "2: import { MutableRefObject, useContext, useEffect, useRef } from 'react';",
          "4: import { commonKeys, importCodeMirror } from './common';",
          "5: import { EditorContext } from './context';",
          "6: import {",
          "7:   CompletionCallback,",
          "8:   EditCallback,",
          "9:   EmptyCallback,",
          "10:   useChangeHandler,",
          "11:   useCompletion,",
          "12:   useKeyMap,",
          "13:   useResizeEditor,",
          "14:   useSynchronizeValue,",
          "15: } from './hooks';",
          "16: import { CodeMirrorEditor, CodeMirrorType } from './types';",
          "18: export type UseVariableEditorArgs = {",
          "19:   editorTheme?: string;",
          "20:   onEdit?: EditCallback;",
          "21:   onHintInformationRender?: CompletionCallback;",
          "22:   onPrettifyQuery?: EmptyCallback;",
          "23:   onMergeQuery?: EmptyCallback;",
          "24:   onRunQuery?: EmptyCallback;",
          "25:   readOnly?: boolean;",
          "26:   value?: string;",
          "27:   variableToType?: VariableToType;",
          "28: };",
          "30: export function useVariableEditor({",
          "31:   editorTheme = 'graphiql',",
          "32:   onEdit,",
          "33:   onHintInformationRender,",
          "34:   onMergeQuery,",
          "35:   onPrettifyQuery,",
          "36:   onRunQuery,",
          "37:   readOnly = false,",
          "38:   value,",
          "39:   variableToType,",
          "40: }: UseVariableEditorArgs = {}) {",
          "41:   const context = useContext(EditorContext);",
          "42:   const ref = useRef<HTMLDivElement>(null);",
          "43:   const codeMirrorRef = useRef<CodeMirrorType>();",
          "45:   if (!context) {",
          "46:     throw new Error(",
          "47:       'Tried to call the `useVariableEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "48:     );",
          "49:   }",
          "51:   const { variableEditor, setVariableEditor } = context;",
          "53:   useEffect(() => {",
          "54:     let isActive = true;",
          "56:     importCodeMirror([",
          "57:       import('codemirror-graphql/esm/variables/hint'),",
          "58:       import('codemirror-graphql/esm/variables/lint'),",
          "59:       import('codemirror-graphql/esm/variables/mode'),",
          "60:     ]).then(CodeMirror => {",
          "62:       if (!isActive) {",
          "63:         return;",
          "64:       }",
          "66:       codeMirrorRef.current = CodeMirror;",
          "68:       const container = ref.current;",
          "69:       if (!container) {",
          "70:         return;",
          "71:       }",
          "73:       const newEditor = CodeMirror(container, {",
          "74:         value: '',",
          "75:         lineNumbers: true,",
          "76:         tabSize: 2,",
          "77:         mode: 'graphql-variables',",
          "78:         theme: editorTheme,",
          "79:         keyMap: 'sublime',",
          "80:         autoCloseBrackets: true,",
          "81:         matchBrackets: true,",
          "82:         showCursorWhenSelecting: true,",
          "83:         readOnly: readOnly ? 'nocursor' : false,",
          "84:         foldGutter: true,",
          "85:         lint: {",
          "87:           variableToType: undefined,",
          "88:         },",
          "89:         hintOptions: {",
          "90:           closeOnUnfocus: false,",
          "91:           completeSingle: false,",
          "92:           container,",
          "94:           variableToType: undefined,",
          "95:         },",
          "96:         gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],",
          "97:         extraKeys: commonKeys,",
          "98:       });",
          "100:       newEditor.addKeyMap({",
          "101:         'Cmd-Space'() {",
          "102:           newEditor.showHint({ completeSingle: false, container });",
          "103:         },",
          "104:         'Ctrl-Space'() {",
          "105:           newEditor.showHint({ completeSingle: false, container });",
          "106:         },",
          "107:         'Alt-Space'() {",
          "108:           newEditor.showHint({ completeSingle: false, container });",
          "109:         },",
          "110:         'Shift-Space'() {",
          "111:           newEditor.showHint({ completeSingle: false, container });",
          "112:         },",
          "113:       });",
          "115:       newEditor.on('keyup', (editorInstance, event) => {",
          "116:         const code = event.keyCode;",
          "117:         if (",
          "118:           (code >= 65 && code <= 90) || // letters",
          "119:           (!event.shiftKey && code >= 48 && code <= 57) || // numbers",
          "120:           (event.shiftKey && code === 189) || // underscore",
          "121:           (event.shiftKey && code === 222) // \"",
          "122:         ) {",
          "123:           editorInstance.execCommand('autocomplete');",
          "124:         }",
          "125:       });",
          "127:       setVariableEditor(newEditor);",
          "128:     });",
          "130:     return () => {",
          "131:       isActive = false;",
          "132:     };",
          "133:   }, [editorTheme, readOnly, setVariableEditor]);",
          "135:   useSynchronizeVariableTypes(variableEditor, variableToType, codeMirrorRef);",
          "137:   useSynchronizeValue(variableEditor, value);",
          "139:   useChangeHandler(variableEditor, onEdit);",
          "141:   useCompletion(variableEditor, onHintInformationRender);",
          "143:   useKeyMap(variableEditor, ['Cmd-Enter', 'Ctrl-Enter'], onRunQuery);",
          "144:   useKeyMap(variableEditor, ['Shift-Ctrl-P'], onPrettifyQuery);",
          "145:   useKeyMap(variableEditor, ['Shift-Ctrl-M'], onMergeQuery);",
          "147:   useResizeEditor(variableEditor, ref);",
          "149:   return ref;",
          "150: }",
          "152: function useSynchronizeVariableTypes(",
          "153:   editor: CodeMirrorEditor | null,",
          "154:   variableToType: VariableToType | undefined,",
          "155:   codeMirrorRef: MutableRefObject<CodeMirrorType | undefined>,",
          "156: ) {",
          "157:   useEffect(() => {",
          "158:     if (!editor) {",
          "159:       return;",
          "160:     }",
          "162:     const didChange = editor.options.lint.variableToType !== variableToType;",
          "164:     editor.options.lint.variableToType = variableToType;",
          "165:     editor.options.hintOptions.variableToType = variableToType;",
          "167:     if (didChange && codeMirrorRef.current) {",
          "168:       codeMirrorRef.current.signal(editor, 'change', editor);",
          "169:     }",
          "170:   }, [editor, variableToType, codeMirrorRef]);",
          "171: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import {",
          "2:   EditorContext,",
          "3:   EditorContextProvider,",
          "4:   useHeaderEditor,",
          "5:   useQueryEditor,",
          "6: } from './editor';",
          "7: import {",
          "8:   ExplorerContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:   onHasCompletion,",
          "7:   useVariableEditor,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:   EditorContextType,",
          "15:   UseHeaderEditorArgs,",
          "16:   UseQueryEditorArgs,",
          "17: } from './editor';",
          "18: import type {",
          "19:   ExplorerContextType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:   UseVariableEditorArgs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "27:   EditorContext,",
          "28:   EditorContextProvider,",
          "29:   useHeaderEditor,",
          "30:   useQueryEditor,",
          "32:   ExplorerContext,",
          "33:   ExplorerContextProvider,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   onHasCompletion,",
          "35:   useVariableEditor,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "39:   EditorContextType,",
          "40:   UseHeaderEditorArgs,",
          "41:   UseQueryEditorArgs,",
          "43:   ExplorerContextType,",
          "44:   ExplorerFieldDef,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47:   UseVariableEditorArgs,",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts": [
          "File: packages/graphiql/__mocks__/@graphiql/react.ts -> packages/graphiql/__mocks__/@graphiql/react.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:   useExplorerNavStack,",
          "7:   useHeaderEditor as _useHeaderEditor,",
          "8:   useQueryEditor as _useQueryEditor,",
          "9: } from '@graphiql/react';",
          "10: import type {",
          "11:   EditorContextType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:   useVariableEditor as _useVariableEditor,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:   UseHeaderEditorArgs,",
          "17:   UseQueryEditorArgs,",
          "18: } from '@graphiql/react';",
          "21: export {",
          "22:   EditorContext,",
          "",
          "[Removed Lines]",
          "19: import { useEffect, useRef, useState } from 'react';",
          "",
          "[Added Lines]",
          "20: import { useContext, useEffect, useRef, useState } from 'react';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:   UseQueryEditorArgs,",
          "37: };",
          "40:   const [code, setCode] = useState(value);",
          "41:   const ref = useRef<HTMLDivElement>(null);",
          "43:   useEffect(() => {",
          "44:     if (!ref.current) {",
          "45:       return;",
          "",
          "[Removed Lines]",
          "39: function useMockedEditor(value?: string, onEdit?: (newValue: string) => void) {",
          "",
          "[Added Lines]",
          "40: function useMockedEditor(",
          "41:   name: string,",
          "42:   value?: string,",
          "43:   onEdit?: (newValue: string) => void,",
          "44: ) {",
          "48:   const context = useContext(EditorContext);",
          "49:   const setEditor =",
          "50:     context[`set${name.slice(0, 1).toUpperCase()}${name.slice(1)}Editor`];",
          "52:   const getValueRef = useRef<() => string>();",
          "53:   useEffect(() => {",
          "54:     getValueRef.current = () => code;",
          "55:   }, [code]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "60:     mockWrapper.appendChild(mockTextArea);",
          "62:     ref.current.appendChild(mockWrapper);",
          "63:   });",
          "65:   useEffect(() => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:     setEditor({",
          "79:       getValue() {",
          "80:         return getValueRef.current();",
          "81:       },",
          "82:       setValue(newValue: string) {",
          "83:         setCode(newValue);",
          "84:       },",
          "85:     });",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "106:   onEdit,",
          "107:   value,",
          "108: }) {",
          "110: };",
          "112: export const useQueryEditor: typeof _useQueryEditor = function useQueryEditor({",
          "113:   onEdit,",
          "114:   value,",
          "115: }) {",
          "117: };",
          "",
          "[Removed Lines]",
          "109:   return useMockedEditor(value, onEdit);",
          "116:   return useMockedEditor(value, onEdit);",
          "",
          "[Added Lines]",
          "132:   return useMockedEditor('header', value, onEdit);",
          "139:   return useMockedEditor('query', value, onEdit);",
          "140: };",
          "142: export const useVariableEditor: typeof _useVariableEditor = function useVariableEditor({",
          "143:   onEdit,",
          "144:   value,",
          "145: }) {",
          "146:   return useMockedEditor('variable', value, onEdit);",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "327: export type GraphiQLState = {",
          "328:   schema?: GraphQLSchema | null;",
          "329:   query?: string;",
          "331:   operationName?: string;",
          "332:   docExplorerOpen: boolean;",
          "333:   response?: string;",
          "",
          "[Removed Lines]",
          "330:   variables?: string;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "456:   graphiqlContainer: Maybe<HTMLDivElement>;",
          "457:   resultComponent: Maybe<ResultViewer>;",
          "459:   _queryHistory: Maybe<QueryHistory>;",
          "460:   _historyStore: Maybe<HistoryStore>;",
          "461:   editorBarComponent: Maybe<HTMLDivElement>;",
          "",
          "[Removed Lines]",
          "458:   variableEditorComponent: Maybe<VariableEditor>;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:       tabs: tabsState,",
          "636:       schema,",
          "637:       query: activeTab?.query,",
          "639:       operationName: activeTab?.operationName,",
          "640:       response: activeTab?.response ?? response,",
          "641:       docExplorerOpen,",
          "",
          "[Removed Lines]",
          "638:       variables: activeTab?.variables,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "693:   UNSAFE_componentWillReceiveProps(nextProps: GraphiQLWithContextProps) {",
          "694:     let nextSchema = this.state.schema;",
          "695:     let nextQuery = this.state.query;",
          "697:     let nextOperationName = this.state.operationName;",
          "698:     let nextResponse = this.state.response;",
          "",
          "[Removed Lines]",
          "696:     let nextVariables = this.state.variables;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "703:     if (nextProps.query !== undefined && this.props.query !== nextProps.query) {",
          "704:       nextQuery = nextProps.query;",
          "705:     }",
          "712:     if (nextProps.operationName !== undefined) {",
          "713:       nextOperationName = nextProps.operationName;",
          "714:     }",
          "",
          "[Removed Lines]",
          "706:     if (",
          "707:       nextProps.variables !== undefined &&",
          "708:       this.props.variables !== nextProps.variables",
          "709:     ) {",
          "710:       nextVariables = nextProps.variables;",
          "711:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "757:       {",
          "758:         schema: nextSchema,",
          "759:         query: nextQuery,",
          "761:         operationName: nextOperationName,",
          "762:         response: nextResponse,",
          "763:       },",
          "",
          "[Removed Lines]",
          "760:         variables: nextVariables,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "773:   componentDidUpdate() {",
          "780:   }",
          "",
          "[Removed Lines]",
          "776:     this.codeMirrorSizer.updateSizes([",
          "777:       this.variableEditorComponent,",
          "778:       this.resultComponent,",
          "779:     ]);",
          "",
          "[Added Lines]",
          "765:     this.codeMirrorSizer.updateSizes([this.resultComponent]);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "913:               ref={node => {",
          "914:                 this._queryHistory = node;",
          "915:               }}",
          "919:               onSelectQuery={this.handleSelectHistoryQuery}",
          "920:               storage={this._storage}",
          "923:               <button",
          "924:                 className=\"docExplorerHide\"",
          "925:                 onClick={this.handleToggleHistory}",
          "",
          "[Removed Lines]",
          "916:               operationName={this.state.operationName}",
          "917:               query={this.state.query}",
          "918:               variables={this.state.variables}",
          "921:               maxHistoryLength={this.state.maxHistoryLength}",
          "922:               queryID={this._editorQueryID}>",
          "",
          "[Added Lines]",
          "904:               maxHistoryLength={this.state.maxHistoryLength}>",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1037:                   )}",
          "1038:                 </div>",
          "1039:                 <VariableEditor",
          "1044:                   variableToType={this.state.variableToType}",
          "1045:                   onEdit={this.handleEditVariables}",
          "1046:                   onHintInformationRender={this.handleHintInformationRender}",
          "",
          "[Removed Lines]",
          "1040:                   ref={n => {",
          "1041:                     this.variableEditorComponent = n;",
          "1042:                   }}",
          "1043:                   value={this.state.variables}",
          "",
          "[Added Lines]",
          "1022:                   value={this.props.variables}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1128:   public getVariableEditor() {",
          "1133:   }",
          "",
          "[Removed Lines]",
          "1129:     if (this.variableEditorComponent) {",
          "1130:       return this.variableEditorComponent.getCodeMirror();",
          "1131:     }",
          "1132:     return null;",
          "",
          "[Added Lines]",
          "1108:     return this.props.editorContext?.variableEditor || null;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1149:   public refresh() {",
          "1150:     this.props.editorContext?.queryEditor?.refresh();",
          "1154:     this.props.editorContext?.headerEditor?.refresh();",
          "1155:     if (this.resultComponent) {",
          "1156:       this.resultComponent.getCodeMirror().refresh();",
          "",
          "[Removed Lines]",
          "1151:     if (this.variableEditorComponent) {",
          "1152:       this.variableEditorComponent.getCodeMirror().refresh();",
          "1153:     }",
          "",
          "[Added Lines]",
          "1127:     this.props.editorContext?.variableEditor?.refresh();",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1483:     const editedQuery = this.autoCompleteLeafs() || this.state.query || '';",
          "1485:     const headers = getHeaders(this.props);",
          "1486:     const shouldPersistHeaders = this.state.shouldPersistHeaders;",
          "1487:     let operationName = this.state.operationName;",
          "",
          "[Removed Lines]",
          "1484:     const variables = this.state.variables;",
          "",
          "[Added Lines]",
          "1458:     const variables = getVariables(this.props);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1800:     this.setState(",
          "1801:       state => ({",
          "1802:         ...state,",
          "1804:         tabs: tabsStateEditVariablesReducer(value, state.tabs),",
          "1805:       }),",
          "1806:       this.persistTabsState,",
          "",
          "[Removed Lines]",
          "1803:         variables: value,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1815:     this.setState(",
          "1816:       state => ({",
          "1817:         ...state,",
          "1819:         tabs: tabsStateEditHeadersReducer(value, state.tabs),",
          "1820:       }),",
          "1821:       this.persistTabsState,",
          "",
          "[Removed Lines]",
          "1818:         headers: value,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1910:       this.handleEditQuery(query);",
          "1911:     }",
          "1912:     if (variables) {",
          "1914:     }",
          "1915:     if (headers) {",
          "1917:     }",
          "1918:     if (operationName) {",
          "1919:       this.handleEditOperationName(operationName);",
          "",
          "[Removed Lines]",
          "1913:       this.handleEditVariables(variables);",
          "1916:       this.handleEditHeaders(headers);",
          "",
          "[Added Lines]",
          "1885:       setVariables(this.props, variables);",
          "1888:       setHeaders(this.props, headers);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2308:   state: GraphiQLState,",
          "2309:   props: GraphiQLWithContextProps,",
          "2310: ): GraphiQLState {",
          "2311:   const headers = getHeaders(props);",
          "2313:   const oldActiveTabIndex = state.tabs.activeTabIndex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2283:   const variables = getVariables(props);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2319:     return {",
          "2320:       ...currentTab,",
          "2321:       query: state.query,",
          "2323:       operationName: state.operationName,",
          "2324:       headers,",
          "2325:       response: state.response,",
          "2326:       hash: idFromTabContents({",
          "2327:         query: state.query,",
          "2329:         headers,",
          "2330:       }),",
          "2331:     };",
          "",
          "[Removed Lines]",
          "2322:       variables: state.variables,",
          "2328:         variables: state.variables,",
          "",
          "[Added Lines]",
          "2295:       variables,",
          "2301:         variables,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2334:   const newActiveTab = state.tabs.tabs[index];",
          "2336:   if (typeof newActiveTab.headers !== 'undefined') {",
          "2337:     setHeaders(props, newActiveTab.headers);",
          "2338:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2309:   if (typeof newActiveTab.variables !== 'undefined') {",
          "2310:     setVariables(props, newActiveTab.variables);",
          "2311:   }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2340:   return {",
          "2341:     ...state,",
          "2342:     query: newActiveTab.query,",
          "2344:     operationName: newActiveTab.operationName,",
          "2345:     response: newActiveTab.response,",
          "2346:     tabs: { ...state.tabs, tabs, activeTabIndex: index },",
          "",
          "[Removed Lines]",
          "2343:     variables: newActiveTab.variables,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2360:     tabs: state.tabs.tabs.filter((_tab, i) => index !== i),",
          "2361:   };",
          "2362:   const activeTab = newTabsState.tabs[newActiveTabIndex];",
          "2363:   if (typeof activeTab.headers !== 'undefined') {",
          "2364:     setHeaders(props, activeTab.headers);",
          "2365:   }",
          "2366:   return {",
          "2367:     ...state,",
          "2368:     query: activeTab.query,",
          "2370:     operationName: activeTab.operationName,",
          "2371:     response: activeTab.response,",
          "2372:     tabs: newTabsState,",
          "",
          "[Removed Lines]",
          "2369:     variables: activeTab.variables,",
          "",
          "[Added Lines]",
          "2338:   if (typeof activeTab.variables !== 'undefined') {",
          "2339:     setVariables(props, activeTab.variables);",
          "2340:   }",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2377:   state: GraphiQLState,",
          "2378:   props: GraphiQLWithContextProps,",
          "2379: ): GraphiQLState {",
          "2380:   const headers = getHeaders(props);",
          "2382:   const oldActiveTabIndex = state.tabs.activeTabIndex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2357:   const variables = getVariables(props);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2404:     return {",
          "2405:       ...tab,",
          "2406:       headers,",
          "2408:       query: state.query,",
          "2409:       operationName: state.operationName,",
          "2410:       response: state.response,",
          "2411:     };",
          "2412:   });",
          "2414:   if (typeof newTab.headers !== 'undefined') {",
          "2415:     setHeaders(props, newTab.headers);",
          "2416:   }",
          "2418:   return {",
          "2419:     ...state,",
          "2421:     query: newTab.query,",
          "2422:     operationName: newTab.operationName,",
          "2423:     response: newTab.response,",
          "",
          "[Removed Lines]",
          "2407:       variables: state.variables,",
          "2420:     variables: newTab.variables,",
          "",
          "[Added Lines]",
          "2385:       variables,",
          "2392:   if (typeof newTab.variables !== 'undefined') {",
          "2393:     setVariables(props, newTab.variables);",
          "2394:   }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2429:   };",
          "2430: }",
          "2432: function getHeaders(props: GraphiQLWithContextProps) {",
          "2434: }",
          "2436: function setHeaders(props: GraphiQLWithContextProps, value: string) {",
          "",
          "[Removed Lines]",
          "2433:   return props.headers ?? props.editorContext?.headerEditor?.getValue();",
          "",
          "[Added Lines]",
          "2412: function getVariables(props: GraphiQLWithContextProps) {",
          "2413:   return props.editorContext?.variableEditor?.getValue();",
          "2414: }",
          "2416: function setVariables(props: GraphiQLWithContextProps, value: string) {",
          "2417:   props.editorContext?.variableEditor?.setValue(value);",
          "2418: }",
          "2421:   return props.editorContext?.headerEditor?.getValue();",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx": [
          "File: packages/graphiql/src/components/QueryHistory.tsx -> packages/graphiql/src/components/QueryHistory.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import HistoryStore from '../utility/HistoryStore';",
          "18: type QueryHistoryProps = {",
          "24:   onSelectQuery: HandleSelectQueryFn;",
          "25:   storage: StorageAPI;",
          "26:   maxHistoryLength: number;",
          "",
          "[Removed Lines]",
          "19:   query?: string;",
          "20:   variables?: string;",
          "21:   headers?: string;",
          "22:   operationName?: string;",
          "23:   queryID?: number;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/VariableEditor.tsx||packages/graphiql/src/components/VariableEditor.tsx": [
          "File: packages/graphiql/src/components/VariableEditor.tsx -> packages/graphiql/src/components/VariableEditor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import React from 'react';",
          "37:   active?: boolean;",
          "38: };",
          "",
          "[Removed Lines]",
          "9: import { GraphQLType } from 'graphql';",
          "10: import type * as CM from 'codemirror';",
          "13: import onHasCompletion from '../utility/onHasCompletion';",
          "14: import commonKeys from '../utility/commonKeys';",
          "15: import { importCodeMirror } from '../utility/importCodeMirror';",
          "16: import { CodeMirrorEditor } from '../types';",
          "18: declare module CodeMirror {",
          "19:   export interface Editor extends CM.Editor {}",
          "20:   export interface ShowHintOptions {",
          "21:     completeSingle: boolean;",
          "22:     hint: any;",
          "23:     container: HTMLElement | null;",
          "24:   }",
          "25: }",
          "27: type VariableEditorProps = {",
          "28:   variableToType?: { [variable: string]: GraphQLType };",
          "29:   value?: string;",
          "30:   onEdit: (value: string) => void;",
          "31:   readOnly?: boolean;",
          "32:   onHintInformationRender: (value: HTMLDivElement) => void;",
          "33:   onPrettifyQuery: (value?: string) => void;",
          "34:   onMergeQuery: (value?: string) => void;",
          "35:   onRunQuery: (value?: string) => void;",
          "36:   editorTheme?: string;",
          "",
          "[Added Lines]",
          "7: import { useVariableEditor, UseVariableEditorArgs } from '@graphiql/react';",
          "10: type VariableEditorProps = UseVariableEditorArgs & {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "266: }",
          "",
          "[Removed Lines]",
          "53: export class VariableEditor extends React.Component<VariableEditorProps> {",
          "54:   CodeMirror: any;",
          "55:   editor: CodeMirrorEditor | null = null;",
          "56:   cachedValue: string;",
          "57:   private _node: HTMLElement | null = null;",
          "58:   ignoreChangeEvent: boolean = false;",
          "60:   constructor(props: VariableEditorProps) {",
          "61:     super(props);",
          "66:     this.cachedValue = props.value || '';",
          "67:   }",
          "69:   componentDidMount() {",
          "70:     this.initializeEditor()",
          "71:       .then(editor => {",
          "72:         editor.on('change', this._onEdit);",
          "73:         editor.on('keyup', this._onKeyUp);",
          "75:         editor.on('hasCompletion', this._onHasCompletion);",
          "76:       })",
          "77:       .catch(console.error);",
          "78:   }",
          "80:   componentDidUpdate(prevProps: VariableEditorProps) {",
          "81:     if (!this.editor) {",
          "82:       return;",
          "83:     }",
          "84:     if (!this.CodeMirror) {",
          "85:       return;",
          "86:     }",
          "91:     this.ignoreChangeEvent = true;",
          "92:     if (this.props.variableToType !== prevProps.variableToType) {",
          "93:       this.editor.options.lint.variableToType = this.props.variableToType;",
          "94:       this.editor.options.hintOptions.variableToType = this.props.variableToType;",
          "95:       this.CodeMirror.signal(this.editor, 'change', this.editor);",
          "96:     }",
          "97:     if (",
          "98:       this.props.value !== prevProps.value &&",
          "99:       this.props.value !== this.cachedValue",
          "100:     ) {",
          "101:       const thisValue = this.props.value || '';",
          "102:       this.cachedValue = thisValue;",
          "103:       this.editor.setValue(thisValue);",
          "104:     }",
          "105:     this.ignoreChangeEvent = false;",
          "106:   }",
          "108:   componentWillUnmount() {",
          "109:     if (!this.editor) {",
          "110:       return;",
          "111:     }",
          "112:     this.editor.off('change', this._onEdit);",
          "113:     this.editor.off('keyup', this._onKeyUp);",
          "115:     this.editor.off('hasCompletion', this._onHasCompletion);",
          "116:     this.editor = null;",
          "117:   }",
          "119:   render() {",
          "120:     return (",
          "121:       <div",
          "122:         className=\"codemirrorWrap\"",
          "125:         style={{",
          "126:           position: this.props.active ? 'relative' : 'absolute',",
          "127:           visibility: this.props.active ? 'visible' : 'hidden',",
          "128:         }}",
          "129:         ref={node => {",
          "130:           this._node = node as HTMLDivElement;",
          "131:         }}",
          "132:       />",
          "133:     );",
          "134:   }",
          "136:   addonModules = () => [",
          "137:     import('codemirror-graphql/variables/hint'),",
          "138:     import('codemirror-graphql/variables/lint'),",
          "139:     import('codemirror-graphql/variables/mode'),",
          "140:   ];",
          "142:   async initializeEditor() {",
          "143:     this.CodeMirror = await importCodeMirror(this.addonModules());",
          "145:     const editor = (this.editor = this.CodeMirror(this._node!, {",
          "146:       value: this.props.value || '',",
          "147:       lineNumbers: true,",
          "148:       tabSize: 2,",
          "149:       mode: 'graphql-variables',",
          "150:       theme: this.props.editorTheme || 'graphiql',",
          "151:       keyMap: 'sublime',",
          "152:       autoCloseBrackets: true,",
          "153:       matchBrackets: true,",
          "154:       showCursorWhenSelecting: true,",
          "155:       readOnly: this.props.readOnly ? 'nocursor' : false,",
          "156:       foldGutter: {",
          "157:         minFoldSize: 4,",
          "158:       },",
          "159:       lint: {",
          "160:         variableToType: this.props.variableToType,",
          "161:       },",
          "162:       hintOptions: {",
          "163:         variableToType: this.props.variableToType,",
          "164:         closeOnUnfocus: false,",
          "165:         completeSingle: false,",
          "166:         container: this._node,",
          "167:       },",
          "168:       gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],",
          "169:       extraKeys: {",
          "170:         'Cmd-Space': () =>",
          "171:           this.editor!.showHint({",
          "172:             completeSingle: false,",
          "173:             container: this._node,",
          "174:           } as CodeMirror.ShowHintOptions),",
          "175:         'Ctrl-Space': () =>",
          "176:           this.editor!.showHint({",
          "177:             completeSingle: false,",
          "178:             container: this._node,",
          "179:           } as CodeMirror.ShowHintOptions),",
          "180:         'Alt-Space': () =>",
          "181:           this.editor!.showHint({",
          "182:             completeSingle: false,",
          "183:             container: this._node,",
          "184:           } as CodeMirror.ShowHintOptions),",
          "185:         'Shift-Space': () =>",
          "186:           this.editor!.showHint({",
          "187:             completeSingle: false,",
          "188:             container: this._node,",
          "189:           } as CodeMirror.ShowHintOptions),",
          "190:         'Cmd-Enter': () => {",
          "191:           if (this.props.onRunQuery) {",
          "192:             this.props.onRunQuery();",
          "193:           }",
          "194:         },",
          "195:         'Ctrl-Enter': () => {",
          "196:           if (this.props.onRunQuery) {",
          "197:             this.props.onRunQuery();",
          "198:           }",
          "199:         },",
          "200:         'Shift-Ctrl-P': () => {",
          "201:           if (this.props.onPrettifyQuery) {",
          "202:             this.props.onPrettifyQuery();",
          "203:           }",
          "204:         },",
          "206:         'Shift-Ctrl-M': () => {",
          "207:           if (this.props.onMergeQuery) {",
          "208:             this.props.onMergeQuery();",
          "209:           }",
          "210:         },",
          "212:         ...commonKeys,",
          "213:       },",
          "214:     })) as CodeMirrorEditor;",
          "215:     return editor;",
          "216:   }",
          "222:   getCodeMirror() {",
          "223:     return this.editor as CM.Editor;",
          "224:   }",
          "229:   getClientHeight() {",
          "230:     return this._node && this._node.clientHeight;",
          "231:   }",
          "233:   private _onKeyUp = (_cm: CodeMirror.Editor, event: KeyboardEvent) => {",
          "234:     const code = event.keyCode;",
          "235:     if (!this.editor) {",
          "236:       return;",
          "237:     }",
          "238:     if (",
          "239:       (code >= 65 && code <= 90) || // letters",
          "240:       (!event.shiftKey && code >= 48 && code <= 57) || // numbers",
          "241:       (event.shiftKey && code === 189) || // underscore",
          "242:       (event.shiftKey && code === 222) // \"",
          "243:     ) {",
          "244:       this.editor.execCommand('autocomplete');",
          "245:     }",
          "246:   };",
          "248:   private _onEdit = () => {",
          "249:     if (!this.editor) {",
          "250:       return;",
          "251:     }",
          "252:     if (!this.ignoreChangeEvent) {",
          "253:       this.cachedValue = this.editor.getValue();",
          "254:       if (this.props.onEdit) {",
          "255:         this.props.onEdit(this.cachedValue);",
          "256:       }",
          "257:     }",
          "258:   };",
          "260:   private _onHasCompletion = (",
          "261:     instance: CM.Editor,",
          "262:     changeObj?: CM.EditorChange,",
          "263:   ) => {",
          "264:     onHasCompletion(instance, changeObj, this.props.onHintInformationRender);",
          "265:   };",
          "",
          "[Added Lines]",
          "20: export function VariableEditor({ active, ...hookArgs }: VariableEditorProps) {",
          "21:   const ref = useVariableEditor(hookArgs);",
          "22:   return (",
          "23:     <div",
          "24:       className=\"codemirrorWrap\"",
          "27:       style={{",
          "28:         position: active ? 'relative' : 'absolute',",
          "29:         visibility: active ? 'visible' : 'hidden',",
          "30:       }}",
          "31:       ref={ref}",
          "32:     />",
          "33:   );",
          "",
          "---------------"
        ],
        "packages/graphiql/src/index.ts||packages/graphiql/src/index.ts": [
          "File: packages/graphiql/src/index.ts -> packages/graphiql/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: export { fillLeafs } from './utility/fillLeafs';",
          "50: export { default as mergeAst } from './utility/mergeAst';",
          "51: export { default as getSelectedOperationName } from './utility/getSelectedOperationName';",
          "53: export { Storage } from './utility/StorageAPI';",
          "",
          "[Removed Lines]",
          "52: export { default as onHasCompletion } from './utility/onHasCompletion';",
          "",
          "[Added Lines]",
          "57: import { onHasCompletion as _onHasCompletion } from '@graphiql/react';",
          "59: export const onHasCompletion: typeof _onHasCompletion = function onHasCompletion(",
          "60:   ...args",
          "61: ) {",
          "62:   console.warn(",
          "63:     'Importing `onHasCompletion` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `onHasCompletion` function provided by the `@graphiql/react` package.',",
          "64:   );",
          "65:   return _onHasCompletion(...args);",
          "66: };",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
          "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}