{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "de949e28b1f3657f825f7365f03e564e8d6d24ff",
      "candidate_info": {
        "commit_hash": "de949e28b1f3657f825f7365f03e564e8d6d24ff",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/de949e28b1f3657f825f7365f03e564e8d6d24ff",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/kafka/2018-11-14/api-2.json",
          "models/apis/kafka/2018-11-14/docs-2.json",
          "models/apis/servicediscovery/2017-03-14/api-2.json",
          "models/apis/servicediscovery/2017-03-14/docs-2.json",
          "models/apis/snowball/2016-06-30/api-2.json",
          "models/apis/snowball/2016-06-30/docs-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/kafka/api.go",
          "service/servicediscovery/api.go",
          "service/servicediscovery/doc.go",
          "service/servicediscovery/errors.go",
          "service/snowball/api.go",
          "service/snowball/snowballiface/interface.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.38.35 (2021-05-06) (#3899)\n\nRelease v1.38.35 (2021-05-06)\n===\n\n### Service Client Updates\n* `service/kafka`: Updates service API and documentation\n* `service/servicediscovery`: Updates service API and documentation\n* `service/snowball`: Updates service API and documentation\n  * AWS Snow Family adds APIs for ordering and managing Snow jobs with long term pricing\n* `service/ssm`: Updates service API and documentation\n  * SSM feature release - ChangeCalendar integration with StateManager.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/kafka/api.go||service/kafka/api.go",
          "service/servicediscovery/api.go||service/servicediscovery/api.go",
          "service/servicediscovery/doc.go||service/servicediscovery/doc.go",
          "service/servicediscovery/errors.go||service/servicediscovery/errors.go",
          "service/snowball/api.go||service/snowball/api.go",
          "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2940:     \"us-west-2\":  endpoint{},",
          "2941:    },",
          "2942:   },",
          "2943:   \"firehose\": service{",
          "2945:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2943:   \"finspace\": service{",
          "2945:    Endpoints: endpoints{",
          "2946:     \"ca-central-1\": endpoint{},",
          "2947:     \"eu-west-1\":    endpoint{},",
          "2948:     \"us-east-1\":    endpoint{},",
          "2949:     \"us-east-2\":    endpoint{},",
          "2950:     \"us-west-2\":    endpoint{},",
          "2951:    },",
          "2952:   },",
          "2953:   \"finspace-api\": service{",
          "2955:    Endpoints: endpoints{",
          "2956:     \"ca-central-1\": endpoint{},",
          "2957:     \"eu-west-1\":    endpoint{},",
          "2958:     \"us-east-1\":    endpoint{},",
          "2959:     \"us-east-2\":    endpoint{},",
          "2960:     \"us-west-2\":    endpoint{},",
          "2961:    },",
          "2962:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3892:   \"lakeformation\": service{",
          "3894:    Endpoints: endpoints{",
          "3895:     \"ap-east-1\":      endpoint{},",
          "3896:     \"ap-northeast-1\": endpoint{},",
          "3897:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3915:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6864:     \"ca-central-1\":   endpoint{},",
          "6865:     \"eu-central-1\":   endpoint{},",
          "6866:     \"eu-north-1\":     endpoint{},",
          "6867:     \"eu-west-1\":      endpoint{},",
          "6868:     \"eu-west-2\":      endpoint{},",
          "6869:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6888:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.38.34\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.38.35\"",
          "",
          "---------------"
        ],
        "service/kafka/api.go||service/kafka/api.go": [
          "File: service/kafka/api.go -> service/kafka/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5698:  BootstrapBrokerString *string `locationName:\"bootstrapBrokerString\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5703:  BootstrapBrokerStringSaslIam *string `locationName:\"bootstrapBrokerStringSaslIam\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5724:  return s",
          "5725: }",
          "5728: func (s *GetBootstrapBrokersOutput) SetBootstrapBrokerStringSaslScram(v string) *GetBootstrapBrokersOutput {",
          "5729:  s.BootstrapBrokerStringSaslScram = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5733: func (s *GetBootstrapBrokersOutput) SetBootstrapBrokerStringSaslIam(v string) *GetBootstrapBrokersOutput {",
          "5734:  s.BootstrapBrokerStringSaslIam = &v",
          "5735:  return s",
          "5736: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5782:  return s",
          "5783: }",
          "5786: type InternalServerErrorException struct {",
          "5787:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5796: type Iam struct {",
          "5797:  _ struct{} `type:\"structure\"`",
          "5799:  Enabled *bool `locationName:\"enabled\" type:\"boolean\"`",
          "5800: }",
          "5803: func (s Iam) String() string {",
          "5804:  return awsutil.Prettify(s)",
          "5805: }",
          "5808: func (s Iam) GoString() string {",
          "5809:  return s.String()",
          "5810: }",
          "5813: func (s *Iam) SetEnabled(v bool) *Iam {",
          "5814:  s.Enabled = &v",
          "5815:  return s",
          "5816: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7242: type Sasl struct {",
          "7243:  _ struct{} `type:\"structure\"`",
          "7245:  Scram *Scram `locationName:\"scram\" type:\"structure\"`",
          "7246: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7278:  Iam *Iam `locationName:\"iam\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7255:  return s.String()",
          "7256: }",
          "7259: func (s *Sasl) SetScram(v *Scram) *Sasl {",
          "7260:  s.Scram = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7294: func (s *Sasl) SetIam(v *Iam) *Sasl {",
          "7295:  s.Iam = v",
          "7296:  return s",
          "7297: }",
          "",
          "---------------"
        ],
        "service/servicediscovery/api.go||service/servicediscovery/api.go": [
          "File: service/servicediscovery/api.go -> service/servicediscovery/api.go"
        ],
        "service/servicediscovery/doc.go||service/servicediscovery/doc.go": [
          "File: service/servicediscovery/doc.go -> service/servicediscovery/doc.go"
        ],
        "service/servicediscovery/errors.go||service/servicediscovery/errors.go": [
          "File: service/servicediscovery/errors.go -> service/servicediscovery/errors.go"
        ],
        "service/snowball/api.go||service/snowball/api.go": [
          "File: service/snowball/api.go -> service/snowball/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:  return out, req.Send()",
          "482: }",
          "484: const opCreateReturnShippingLabel = \"CreateReturnShippingLabel\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "518: const opCreateLongTermPricing = \"CreateLongTermPricing\"",
          "544: func (c *Snowball) CreateLongTermPricingRequest(input *CreateLongTermPricingInput) (req *request.Request, output *CreateLongTermPricingOutput) {",
          "545:  op := &request.Operation{",
          "546:   Name:       opCreateLongTermPricing,",
          "547:   HTTPMethod: \"POST\",",
          "548:   HTTPPath:   \"/\",",
          "549:  }",
          "551:  if input == nil {",
          "552:   input = &CreateLongTermPricingInput{}",
          "553:  }",
          "555:  output = &CreateLongTermPricingOutput{}",
          "556:  req = c.newRequest(op, input, output)",
          "557:  return",
          "558: }",
          "580: func (c *Snowball) CreateLongTermPricing(input *CreateLongTermPricingInput) (*CreateLongTermPricingOutput, error) {",
          "581:  req, out := c.CreateLongTermPricingRequest(input)",
          "582:  return out, req.Send()",
          "583: }",
          "594: func (c *Snowball) CreateLongTermPricingWithContext(ctx aws.Context, input *CreateLongTermPricingInput, opts ...request.Option) (*CreateLongTermPricingOutput, error) {",
          "595:  req, out := c.CreateLongTermPricingRequest(input)",
          "596:  req.SetContext(ctx)",
          "597:  req.ApplyOptions(opts...)",
          "598:  return out, req.Send()",
          "599: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1814:  return p.Err()",
          "1815: }",
          "1817: const opUpdateCluster = \"UpdateCluster\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1934: const opListLongTermPricing = \"ListLongTermPricing\"",
          "1960: func (c *Snowball) ListLongTermPricingRequest(input *ListLongTermPricingInput) (req *request.Request, output *ListLongTermPricingOutput) {",
          "1961:  op := &request.Operation{",
          "1962:   Name:       opListLongTermPricing,",
          "1963:   HTTPMethod: \"POST\",",
          "1964:   HTTPPath:   \"/\",",
          "1965:  }",
          "1967:  if input == nil {",
          "1968:   input = &ListLongTermPricingInput{}",
          "1969:  }",
          "1971:  output = &ListLongTermPricingOutput{}",
          "1972:  req = c.newRequest(op, input, output)",
          "1973:  return",
          "1974: }",
          "1997: func (c *Snowball) ListLongTermPricing(input *ListLongTermPricingInput) (*ListLongTermPricingOutput, error) {",
          "1998:  req, out := c.ListLongTermPricingRequest(input)",
          "1999:  return out, req.Send()",
          "2000: }",
          "2011: func (c *Snowball) ListLongTermPricingWithContext(ctx aws.Context, input *ListLongTermPricingInput, opts ...request.Option) (*ListLongTermPricingOutput, error) {",
          "2012:  req, out := c.ListLongTermPricingRequest(input)",
          "2013:  req.SetContext(ctx)",
          "2014:  req.ApplyOptions(opts...)",
          "2015:  return out, req.Send()",
          "2016: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2106:  return out, req.Send()",
          "2107: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2310: const opUpdateLongTermPricing = \"UpdateLongTermPricing\"",
          "2336: func (c *Snowball) UpdateLongTermPricingRequest(input *UpdateLongTermPricingInput) (req *request.Request, output *UpdateLongTermPricingOutput) {",
          "2337:  op := &request.Operation{",
          "2338:   Name:       opUpdateLongTermPricing,",
          "2339:   HTTPMethod: \"POST\",",
          "2340:   HTTPPath:   \"/\",",
          "2341:  }",
          "2343:  if input == nil {",
          "2344:   input = &UpdateLongTermPricingInput{}",
          "2345:  }",
          "2347:  output = &UpdateLongTermPricingOutput{}",
          "2348:  req = c.newRequest(op, input, output)",
          "2349:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2350:  return",
          "2351: }",
          "2370: func (c *Snowball) UpdateLongTermPricing(input *UpdateLongTermPricingInput) (*UpdateLongTermPricingOutput, error) {",
          "2371:  req, out := c.UpdateLongTermPricingRequest(input)",
          "2372:  return out, req.Send()",
          "2373: }",
          "2384: func (c *Snowball) UpdateLongTermPricingWithContext(ctx aws.Context, input *UpdateLongTermPricingInput, opts ...request.Option) (*UpdateLongTermPricingOutput, error) {",
          "2385:  req, out := c.UpdateLongTermPricingRequest(input)",
          "2386:  req.SetContext(ctx)",
          "2387:  req.ApplyOptions(opts...)",
          "2388:  return out, req.Send()",
          "2389: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2947:  TaxDocuments *TaxDocuments `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "2944:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "",
          "[Added Lines]",
          "3236:  SnowballType *string `type:\"string\" required:\"true\" enum:\"Type\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2984:  if s.ShippingOption == nil {",
          "2985:   invalidParams.Add(request.NewErrParamRequired(\"ShippingOption\"))",
          "2986:  }",
          "2987:  if s.Resources != nil {",
          "2988:   if err := s.Resources.Validate(); err != nil {",
          "2989:    invalidParams.AddNested(\"Resources\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3279:  if s.SnowballType == nil {",
          "3280:   invalidParams.Add(request.NewErrParamRequired(\"SnowballType\"))",
          "3281:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3116:  KmsKeyARN *string `type:\"string\"`",
          "3120:  Notification *Notification `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3418:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3199:  if s.ForwardingAddressId != nil && len(*s.ForwardingAddressId) < 40 {",
          "3200:   invalidParams.Add(request.NewErrParamMinLen(\"ForwardingAddressId\", 40))",
          "3201:  }",
          "3202:  if s.Resources != nil {",
          "3203:   if err := s.Resources.Validate(); err != nil {",
          "3204:    invalidParams.AddNested(\"Resources\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3512:  if s.LongTermPricingId != nil && len(*s.LongTermPricingId) < 41 {",
          "3513:   invalidParams.Add(request.NewErrParamMinLen(\"LongTermPricingId\", 41))",
          "3514:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3253:  return s",
          "3254: }",
          "3257: func (s *CreateJobInput) SetNotification(v *Notification) *CreateJobInput {",
          "3258:  s.Notification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3570: func (s *CreateJobInput) SetLongTermPricingId(v string) *CreateJobInput {",
          "3571:  s.LongTermPricingId = &v",
          "3572:  return s",
          "3573: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3318:  return s",
          "3319: }",
          "3321: type CreateReturnShippingLabelInput struct {",
          "3322:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3640: type CreateLongTermPricingInput struct {",
          "3641:  _ struct{} `type:\"structure\"`",
          "3645:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "3651:  LongTermPricingType *string `type:\"string\" required:\"true\" enum:\"LongTermPricingType\"`",
          "3654:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "3655: }",
          "3658: func (s CreateLongTermPricingInput) String() string {",
          "3659:  return awsutil.Prettify(s)",
          "3660: }",
          "3663: func (s CreateLongTermPricingInput) GoString() string {",
          "3664:  return s.String()",
          "3665: }",
          "3668: func (s *CreateLongTermPricingInput) Validate() error {",
          "3669:  invalidParams := request.ErrInvalidParams{Context: \"CreateLongTermPricingInput\"}",
          "3670:  if s.LongTermPricingType == nil {",
          "3671:   invalidParams.Add(request.NewErrParamRequired(\"LongTermPricingType\"))",
          "3672:  }",
          "3674:  if invalidParams.Len() > 0 {",
          "3675:   return invalidParams",
          "3676:  }",
          "3677:  return nil",
          "3678: }",
          "3681: func (s *CreateLongTermPricingInput) SetIsLongTermPricingAutoRenew(v bool) *CreateLongTermPricingInput {",
          "3682:  s.IsLongTermPricingAutoRenew = &v",
          "3683:  return s",
          "3684: }",
          "3687: func (s *CreateLongTermPricingInput) SetLongTermPricingType(v string) *CreateLongTermPricingInput {",
          "3688:  s.LongTermPricingType = &v",
          "3689:  return s",
          "3690: }",
          "3693: func (s *CreateLongTermPricingInput) SetSnowballType(v string) *CreateLongTermPricingInput {",
          "3694:  s.SnowballType = &v",
          "3695:  return s",
          "3696: }",
          "3698: type CreateLongTermPricingOutput struct {",
          "3699:  _ struct{} `type:\"structure\"`",
          "3702:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "3703: }",
          "3706: func (s CreateLongTermPricingOutput) String() string {",
          "3707:  return awsutil.Prettify(s)",
          "3708: }",
          "3711: func (s CreateLongTermPricingOutput) GoString() string {",
          "3712:  return s.String()",
          "3713: }",
          "3716: func (s *CreateLongTermPricingOutput) SetLongTermPricingId(v string) *CreateLongTermPricingOutput {",
          "3717:  s.LongTermPricingId = &v",
          "3718:  return s",
          "3719: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3742:  _ struct{} `type:\"structure\"`",
          "3746: }",
          "",
          "[Removed Lines]",
          "3745:  JobId *string `min:\"39\" type:\"string\"`",
          "",
          "[Added Lines]",
          "4147:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3759: func (s *DescribeReturnShippingLabelInput) Validate() error {",
          "3760:  invalidParams := request.ErrInvalidParams{Context: \"DescribeReturnShippingLabelInput\"}",
          "3761:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3762:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3763:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4163:  if s.JobId == nil {",
          "4164:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "4165:  }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4727:  KmsKeyARN *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5135:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4839:  return s",
          "4840: }",
          "4843: func (s *JobMetadata) SetNotification(v *Notification) *JobMetadata {",
          "4844:  s.Notification = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5255: func (s *JobMetadata) SetLongTermPricingId(v string) *JobMetadata {",
          "5256:  s.LongTermPricingId = &v",
          "5257:  return s",
          "5258: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5446:  return s",
          "5447: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5867: type ListLongTermPricingInput struct {",
          "5868:  _ struct{} `type:\"structure\"`",
          "5871:  MaxResults *int64 `type:\"integer\"`",
          "5875:  NextToken *string `min:\"1\" type:\"string\"`",
          "5876: }",
          "5879: func (s ListLongTermPricingInput) String() string {",
          "5880:  return awsutil.Prettify(s)",
          "5881: }",
          "5884: func (s ListLongTermPricingInput) GoString() string {",
          "5885:  return s.String()",
          "5886: }",
          "5889: func (s *ListLongTermPricingInput) Validate() error {",
          "5890:  invalidParams := request.ErrInvalidParams{Context: \"ListLongTermPricingInput\"}",
          "5891:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "5892:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "5893:  }",
          "5895:  if invalidParams.Len() > 0 {",
          "5896:   return invalidParams",
          "5897:  }",
          "5898:  return nil",
          "5899: }",
          "5902: func (s *ListLongTermPricingInput) SetMaxResults(v int64) *ListLongTermPricingInput {",
          "5903:  s.MaxResults = &v",
          "5904:  return s",
          "5905: }",
          "5908: func (s *ListLongTermPricingInput) SetNextToken(v string) *ListLongTermPricingInput {",
          "5909:  s.NextToken = &v",
          "5910:  return s",
          "5911: }",
          "5913: type ListLongTermPricingOutput struct {",
          "5914:  _ struct{} `type:\"structure\"`",
          "5918:  LongTermPricingEntries []*LongTermPricingListEntry `type:\"list\"`",
          "5922:  NextToken *string `min:\"1\" type:\"string\"`",
          "5923: }",
          "5926: func (s ListLongTermPricingOutput) String() string {",
          "5927:  return awsutil.Prettify(s)",
          "5928: }",
          "5931: func (s ListLongTermPricingOutput) GoString() string {",
          "5932:  return s.String()",
          "5933: }",
          "5936: func (s *ListLongTermPricingOutput) SetLongTermPricingEntries(v []*LongTermPricingListEntry) *ListLongTermPricingOutput {",
          "5937:  s.LongTermPricingEntries = v",
          "5938:  return s",
          "5939: }",
          "5942: func (s *ListLongTermPricingOutput) SetNextToken(v string) *ListLongTermPricingOutput {",
          "5943:  s.NextToken = &v",
          "5944:  return s",
          "5945: }",
          "5949: type LongTermPricingListEntry struct {",
          "5950:  _ struct{} `type:\"structure\"`",
          "5953:  CurrentActiveJob *string `min:\"39\" type:\"string\"`",
          "5958:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "5961:  JobIds []*string `type:\"list\"`",
          "5964:  LongTermPricingEndDate *time.Time `type:\"timestamp\"`",
          "5967:  LongTermPricingId *string `min:\"41\" type:\"string\"`",
          "5970:  LongTermPricingStartDate *time.Time `type:\"timestamp\"`",
          "5973:  LongTermPricingStatus *string `min:\"1\" type:\"string\"`",
          "5976:  LongTermPricingType *string `type:\"string\" enum:\"LongTermPricingType\"`",
          "5979:  ReplacementJob *string `min:\"39\" type:\"string\"`",
          "5983:  SnowballType *string `type:\"string\" enum:\"Type\"`",
          "5984: }",
          "5987: func (s LongTermPricingListEntry) String() string {",
          "5988:  return awsutil.Prettify(s)",
          "5989: }",
          "5992: func (s LongTermPricingListEntry) GoString() string {",
          "5993:  return s.String()",
          "5994: }",
          "5997: func (s *LongTermPricingListEntry) SetCurrentActiveJob(v string) *LongTermPricingListEntry {",
          "5998:  s.CurrentActiveJob = &v",
          "5999:  return s",
          "6000: }",
          "6003: func (s *LongTermPricingListEntry) SetIsLongTermPricingAutoRenew(v bool) *LongTermPricingListEntry {",
          "6004:  s.IsLongTermPricingAutoRenew = &v",
          "6005:  return s",
          "6006: }",
          "6009: func (s *LongTermPricingListEntry) SetJobIds(v []*string) *LongTermPricingListEntry {",
          "6010:  s.JobIds = v",
          "6011:  return s",
          "6012: }",
          "6015: func (s *LongTermPricingListEntry) SetLongTermPricingEndDate(v time.Time) *LongTermPricingListEntry {",
          "6016:  s.LongTermPricingEndDate = &v",
          "6017:  return s",
          "6018: }",
          "6021: func (s *LongTermPricingListEntry) SetLongTermPricingId(v string) *LongTermPricingListEntry {",
          "6022:  s.LongTermPricingId = &v",
          "6023:  return s",
          "6024: }",
          "6027: func (s *LongTermPricingListEntry) SetLongTermPricingStartDate(v time.Time) *LongTermPricingListEntry {",
          "6028:  s.LongTermPricingStartDate = &v",
          "6029:  return s",
          "6030: }",
          "6033: func (s *LongTermPricingListEntry) SetLongTermPricingStatus(v string) *LongTermPricingListEntry {",
          "6034:  s.LongTermPricingStatus = &v",
          "6035:  return s",
          "6036: }",
          "6039: func (s *LongTermPricingListEntry) SetLongTermPricingType(v string) *LongTermPricingListEntry {",
          "6040:  s.LongTermPricingType = &v",
          "6041:  return s",
          "6042: }",
          "6045: func (s *LongTermPricingListEntry) SetReplacementJob(v string) *LongTermPricingListEntry {",
          "6046:  s.ReplacementJob = &v",
          "6047:  return s",
          "6048: }",
          "6051: func (s *LongTermPricingListEntry) SetSnowballType(v string) *LongTermPricingListEntry {",
          "6052:  s.SnowballType = &v",
          "6053:  return s",
          "6054: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "6175:  return s.String()",
          "6176: }",
          "6179: type WirelessConnection struct {",
          "6180:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6789: type UpdateLongTermPricingInput struct {",
          "6790:  _ struct{} `type:\"structure\"`",
          "6795:  IsLongTermPricingAutoRenew *bool `type:\"boolean\"`",
          "6800:  LongTermPricingId *string `min:\"41\" type:\"string\" required:\"true\"`",
          "6804:  ReplacementJob *string `min:\"39\" type:\"string\"`",
          "6805: }",
          "6808: func (s UpdateLongTermPricingInput) String() string {",
          "6809:  return awsutil.Prettify(s)",
          "6810: }",
          "6813: func (s UpdateLongTermPricingInput) GoString() string {",
          "6814:  return s.String()",
          "6815: }",
          "6818: func (s *UpdateLongTermPricingInput) Validate() error {",
          "6819:  invalidParams := request.ErrInvalidParams{Context: \"UpdateLongTermPricingInput\"}",
          "6820:  if s.LongTermPricingId == nil {",
          "6821:   invalidParams.Add(request.NewErrParamRequired(\"LongTermPricingId\"))",
          "6822:  }",
          "6823:  if s.LongTermPricingId != nil && len(*s.LongTermPricingId) < 41 {",
          "6824:   invalidParams.Add(request.NewErrParamMinLen(\"LongTermPricingId\", 41))",
          "6825:  }",
          "6826:  if s.ReplacementJob != nil && len(*s.ReplacementJob) < 39 {",
          "6827:   invalidParams.Add(request.NewErrParamMinLen(\"ReplacementJob\", 39))",
          "6828:  }",
          "6830:  if invalidParams.Len() > 0 {",
          "6831:   return invalidParams",
          "6832:  }",
          "6833:  return nil",
          "6834: }",
          "6837: func (s *UpdateLongTermPricingInput) SetIsLongTermPricingAutoRenew(v bool) *UpdateLongTermPricingInput {",
          "6838:  s.IsLongTermPricingAutoRenew = &v",
          "6839:  return s",
          "6840: }",
          "6843: func (s *UpdateLongTermPricingInput) SetLongTermPricingId(v string) *UpdateLongTermPricingInput {",
          "6844:  s.LongTermPricingId = &v",
          "6845:  return s",
          "6846: }",
          "6849: func (s *UpdateLongTermPricingInput) SetReplacementJob(v string) *UpdateLongTermPricingInput {",
          "6850:  s.ReplacementJob = &v",
          "6851:  return s",
          "6852: }",
          "6854: type UpdateLongTermPricingOutput struct {",
          "6855:  _ struct{} `type:\"structure\"`",
          "6856: }",
          "6859: func (s UpdateLongTermPricingOutput) String() string {",
          "6860:  return awsutil.Prettify(s)",
          "6861: }",
          "6864: func (s UpdateLongTermPricingOutput) GoString() string {",
          "6865:  return s.String()",
          "6866: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6219:  CapacityT8 = \"T8\"",
          "6222:  CapacityNoPreference = \"NoPreference\"",
          "6223: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6912:  CapacityT14 = \"T14\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "6231:   CapacityT42,",
          "6232:   CapacityT98,",
          "6233:   CapacityT8,",
          "6234:   CapacityNoPreference,",
          "6235:  }",
          "6236: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6927:   CapacityT14,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "6343:  }",
          "6344: }",
          "6346: const (",
          "6348:  ShipmentStateReceived = \"RECEIVED\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7040: const (",
          "7042:  LongTermPricingTypeOneYear = \"OneYear\"",
          "7045:  LongTermPricingTypeThreeYear = \"ThreeYear\"",
          "7046: )",
          "7049: func LongTermPricingType_Values() []string {",
          "7050:  return []string{",
          "7051:   LongTermPricingTypeOneYear,",
          "7052:   LongTermPricingTypeThreeYear,",
          "7053:  }",
          "7054: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "6427:  TypeSnc1Hdd = \"SNC1_HDD\"",
          "6428: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7140:  TypeSnc1Ssd = \"SNC1_SSD\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "6436:   TypeEdgeCg,",
          "6437:   TypeEdgeS,",
          "6438:   TypeSnc1Hdd,",
          "6439:  }",
          "6440: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7152:   TypeSnc1Ssd,",
          "",
          "---------------"
        ],
        "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go": [
          "File: service/snowball/snowballiface/interface.go -> service/snowball/snowballiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  CreateJobWithContext(aws.Context, *snowball.CreateJobInput, ...request.Option) (*snowball.CreateJobOutput, error)",
          "81:  CreateJobRequest(*snowball.CreateJobInput) (*request.Request, *snowball.CreateJobOutput)",
          "83:  CreateReturnShippingLabel(*snowball.CreateReturnShippingLabelInput) (*snowball.CreateReturnShippingLabelOutput, error)",
          "84:  CreateReturnShippingLabelWithContext(aws.Context, *snowball.CreateReturnShippingLabelInput, ...request.Option) (*snowball.CreateReturnShippingLabelOutput, error)",
          "85:  CreateReturnShippingLabelRequest(*snowball.CreateReturnShippingLabelInput) (*request.Request, *snowball.CreateReturnShippingLabelOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  CreateLongTermPricing(*snowball.CreateLongTermPricingInput) (*snowball.CreateLongTermPricingOutput, error)",
          "84:  CreateLongTermPricingWithContext(aws.Context, *snowball.CreateLongTermPricingInput, ...request.Option) (*snowball.CreateLongTermPricingOutput, error)",
          "85:  CreateLongTermPricingRequest(*snowball.CreateLongTermPricingInput) (*request.Request, *snowball.CreateLongTermPricingOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  ListJobsPages(*snowball.ListJobsInput, func(*snowball.ListJobsOutput, bool) bool) error",
          "143:  ListJobsPagesWithContext(aws.Context, *snowball.ListJobsInput, func(*snowball.ListJobsOutput, bool) bool, ...request.Option) error",
          "145:  UpdateCluster(*snowball.UpdateClusterInput) (*snowball.UpdateClusterOutput, error)",
          "146:  UpdateClusterWithContext(aws.Context, *snowball.UpdateClusterInput, ...request.Option) (*snowball.UpdateClusterOutput, error)",
          "147:  UpdateClusterRequest(*snowball.UpdateClusterInput) (*request.Request, *snowball.UpdateClusterOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:  ListLongTermPricing(*snowball.ListLongTermPricingInput) (*snowball.ListLongTermPricingOutput, error)",
          "150:  ListLongTermPricingWithContext(aws.Context, *snowball.ListLongTermPricingInput, ...request.Option) (*snowball.ListLongTermPricingOutput, error)",
          "151:  ListLongTermPricingRequest(*snowball.ListLongTermPricingInput) (*request.Request, *snowball.ListLongTermPricingOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "153:  UpdateJobShipmentState(*snowball.UpdateJobShipmentStateInput) (*snowball.UpdateJobShipmentStateOutput, error)",
          "154:  UpdateJobShipmentStateWithContext(aws.Context, *snowball.UpdateJobShipmentStateInput, ...request.Option) (*snowball.UpdateJobShipmentStateOutput, error)",
          "155:  UpdateJobShipmentStateRequest(*snowball.UpdateJobShipmentStateInput) (*request.Request, *snowball.UpdateJobShipmentStateOutput)",
          "156: }",
          "158: var _ SnowballAPI = (*snowball.Snowball)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:  UpdateLongTermPricing(*snowball.UpdateLongTermPricingInput) (*snowball.UpdateLongTermPricingOutput, error)",
          "166:  UpdateLongTermPricingWithContext(aws.Context, *snowball.UpdateLongTermPricingInput, ...request.Option) (*snowball.UpdateLongTermPricingOutput, error)",
          "167:  UpdateLongTermPricingRequest(*snowball.UpdateLongTermPricingInput) (*request.Request, *snowball.UpdateLongTermPricingOutput)",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15707:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "15710:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15713:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15833:  return s",
          "15834: }",
          "15837: func (s *AssociationDescription) SetComplianceSeverity(v string) *AssociationDescription {",
          "15838:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15843: func (s *AssociationDescription) SetCalendarNames(v []*string) *AssociationDescription {",
          "15844:  s.CalendarNames = v",
          "15845:  return s",
          "15846: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16621:  AssociationVersion *string `type:\"string\"`",
          "16624:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16639:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "16727:  return s",
          "16728: }",
          "16731: func (s *AssociationVersionInfo) SetComplianceSeverity(v string) *AssociationVersionInfo {",
          "16732:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16749: func (s *AssociationVersionInfo) SetCalendarNames(v []*string) *AssociationVersionInfo {",
          "16750:  s.CalendarNames = v",
          "16751:  return s",
          "16752: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "19809:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "19812:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19839:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "19977:  return s",
          "19978: }",
          "19981: func (s *CreateAssociationBatchRequestEntry) SetComplianceSeverity(v string) *CreateAssociationBatchRequestEntry {",
          "19982:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20011: func (s *CreateAssociationBatchRequestEntry) SetCalendarNames(v []*string) *CreateAssociationBatchRequestEntry {",
          "20012:  s.CalendarNames = v",
          "20013:  return s",
          "20014: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "20066:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "20069:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20108:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "20247:  return s",
          "20248: }",
          "20251: func (s *CreateAssociationInput) SetComplianceSeverity(v string) *CreateAssociationInput {",
          "20252:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20293: func (s *CreateAssociationInput) SetCalendarNames(v []*string) *CreateAssociationInput {",
          "20294:  s.CalendarNames = v",
          "20295:  return s",
          "20296: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "49150:  AutomationTargetParameterName *string `min:\"1\" type:\"string\"`",
          "49153:  ComplianceSeverity *string `type:\"string\" enum:\"AssociationComplianceSeverity\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49204:  CalendarNames []*string `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "49327:  return s",
          "49328: }",
          "49331: func (s *UpdateAssociationInput) SetComplianceSeverity(v string) *UpdateAssociationInput {",
          "49332:  s.ComplianceSeverity = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49385: func (s *UpdateAssociationInput) SetCalendarNames(v []*string) *UpdateAssociationInput {",
          "49386:  s.CalendarNames = v",
          "49387:  return s",
          "49388: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9cea62e3181231c6ca00fbc2120bd5fd448aaee1",
      "candidate_info": {
        "commit_hash": "9cea62e3181231c6ca00fbc2120bd5fd448aaee1",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/9cea62e3181231c6ca00fbc2120bd5fd448aaee1",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/eventbridge/2015-10-07/api-2.json",
          "models/apis/eventbridge/2015-10-07/docs-2.json",
          "models/apis/events/2015-10-07/api-2.json",
          "models/apis/events/2015-10-07/docs-2.json",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/iotsitewise/2019-12-02/api-2.json",
          "models/apis/iotsitewise/2019-12-02/docs-2.json",
          "models/apis/rds/2014-10-31/docs-2.json",
          "models/apis/resource-groups/2017-11-27/docs-2.json",
          "models/apis/resource-groups/2017-11-27/paginators-1.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/cloudwatchevents/api.go",
          "service/eventbridge/api.go",
          "service/glue/api.go",
          "service/glue/glueiface/interface.go",
          "service/iotsitewise/api.go",
          "service/iotsitewise/iotsitewiseiface/interface.go",
          "service/rds/api.go",
          "service/resourcegroups/api.go",
          "service/resourcegroups/doc.go",
          "service/resourcegroupstaggingapi/doc.go"
        ],
        "message": "Release v1.34.28 (2020-09-21) ===\n\n### Service Client Updates\n* `service/eventbridge`: Updates service API and documentation\n* `service/events`: Updates service API and documentation\n  * Add support for Redshift Data API Targets\n* `service/glue`: Updates service API and documentation\n  * Adding support to update multiple partitions of a table in a single request\n* `service/iotsitewise`: Updates service API and documentation\n* `service/rds`: Updates service documentation\n  * Documentation updates for the RDS DescribeExportTasks API\n* `service/resource-groups`: Updates service documentation and paginators\n* `service/resourcegroupstaggingapi`: Updates service documentation\n  * Documentation updates for the Resource Groups Tagging API.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/cloudwatchevents/api.go||service/cloudwatchevents/api.go",
          "service/eventbridge/api.go||service/eventbridge/api.go",
          "service/glue/api.go||service/glue/api.go",
          "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go",
          "service/iotsitewise/api.go||service/iotsitewise/api.go",
          "service/iotsitewise/iotsitewiseiface/interface.go||service/iotsitewise/iotsitewiseiface/interface.go",
          "service/rds/api.go||service/rds/api.go",
          "service/resourcegroups/api.go||service/resourcegroups/api.go",
          "service/resourcegroups/doc.go||service/resourcegroups/doc.go",
          "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2199:     \"sa-east-1\":  endpoint{},",
          "2200:     \"us-east-1\":  endpoint{},",
          "2201:     \"us-east-2\":  endpoint{},",
          "2202:     \"us-west-2\":  endpoint{},",
          "2203:    },",
          "2204:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2202:     \"us-west-1\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5565:       Region: \"ap-northeast-2\",",
          "5566:      },",
          "5567:     },",
          "5568:     \"fips-ap-south-1\": endpoint{",
          "5569:      Hostname: \"snowball-fips.ap-south-1.amazonaws.com\",",
          "5570:      CredentialScope: credentialScope{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5569:     \"fips-ap-northeast-3\": endpoint{",
          "5570:      Hostname: \"snowball-fips.ap-northeast-3.amazonaws.com\",",
          "5571:      CredentialScope: credentialScope{",
          "5572:       Region: \"ap-northeast-3\",",
          "5573:      },",
          "5574:     },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.27\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.28\"",
          "",
          "---------------"
        ],
        "service/cloudwatchevents/api.go||service/cloudwatchevents/api.go": [
          "File: service/cloudwatchevents/api.go -> service/cloudwatchevents/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7006:  return s",
          "7007: }",
          "7009: type RemovePermissionInput struct {",
          "7010:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7013: type RedshiftDataParameters struct {",
          "7014:  _ struct{} `type:\"structure\"`",
          "7019:  Database *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7022:  DbUser *string `min:\"1\" type:\"string\"`",
          "7026:  SecretManagerArn *string `min:\"1\" type:\"string\"`",
          "7031:  Sql *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7035:  StatementName *string `min:\"1\" type:\"string\"`",
          "7039:  WithEvent *bool `type:\"boolean\"`",
          "7040: }",
          "7043: func (s RedshiftDataParameters) String() string {",
          "7044:  return awsutil.Prettify(s)",
          "7045: }",
          "7048: func (s RedshiftDataParameters) GoString() string {",
          "7049:  return s.String()",
          "7050: }",
          "7053: func (s *RedshiftDataParameters) Validate() error {",
          "7054:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftDataParameters\"}",
          "7055:  if s.Database == nil {",
          "7056:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "7057:  }",
          "7058:  if s.Database != nil && len(*s.Database) < 1 {",
          "7059:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "7060:  }",
          "7061:  if s.DbUser != nil && len(*s.DbUser) < 1 {",
          "7062:   invalidParams.Add(request.NewErrParamMinLen(\"DbUser\", 1))",
          "7063:  }",
          "7064:  if s.SecretManagerArn != nil && len(*s.SecretManagerArn) < 1 {",
          "7065:   invalidParams.Add(request.NewErrParamMinLen(\"SecretManagerArn\", 1))",
          "7066:  }",
          "7067:  if s.Sql == nil {",
          "7068:   invalidParams.Add(request.NewErrParamRequired(\"Sql\"))",
          "7069:  }",
          "7070:  if s.Sql != nil && len(*s.Sql) < 1 {",
          "7071:   invalidParams.Add(request.NewErrParamMinLen(\"Sql\", 1))",
          "7072:  }",
          "7073:  if s.StatementName != nil && len(*s.StatementName) < 1 {",
          "7074:   invalidParams.Add(request.NewErrParamMinLen(\"StatementName\", 1))",
          "7075:  }",
          "7077:  if invalidParams.Len() > 0 {",
          "7078:   return invalidParams",
          "7079:  }",
          "7080:  return nil",
          "7081: }",
          "7084: func (s *RedshiftDataParameters) SetDatabase(v string) *RedshiftDataParameters {",
          "7085:  s.Database = &v",
          "7086:  return s",
          "7087: }",
          "7090: func (s *RedshiftDataParameters) SetDbUser(v string) *RedshiftDataParameters {",
          "7091:  s.DbUser = &v",
          "7092:  return s",
          "7093: }",
          "7096: func (s *RedshiftDataParameters) SetSecretManagerArn(v string) *RedshiftDataParameters {",
          "7097:  s.SecretManagerArn = &v",
          "7098:  return s",
          "7099: }",
          "7102: func (s *RedshiftDataParameters) SetSql(v string) *RedshiftDataParameters {",
          "7103:  s.Sql = &v",
          "7104:  return s",
          "7105: }",
          "7108: func (s *RedshiftDataParameters) SetStatementName(v string) *RedshiftDataParameters {",
          "7109:  s.StatementName = &v",
          "7110:  return s",
          "7111: }",
          "7114: func (s *RedshiftDataParameters) SetWithEvent(v bool) *RedshiftDataParameters {",
          "7115:  s.WithEvent = &v",
          "7116:  return s",
          "7117: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7785:  KinesisParameters *KinesisParameters `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7903:  RedshiftDataParameters *RedshiftDataParameters `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7847:    invalidParams.AddNested(\"KinesisParameters\", err.(request.ErrInvalidParams))",
          "7848:   }",
          "7849:  }",
          "7850:  if s.RunCommandParameters != nil {",
          "7851:   if err := s.RunCommandParameters.Validate(); err != nil {",
          "7852:    invalidParams.AddNested(\"RunCommandParameters\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7968:  if s.RedshiftDataParameters != nil {",
          "7969:   if err := s.RedshiftDataParameters.Validate(); err != nil {",
          "7970:    invalidParams.AddNested(\"RedshiftDataParameters\", err.(request.ErrInvalidParams))",
          "7971:   }",
          "7972:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7913:  return s",
          "7914: }",
          "7917: func (s *Target) SetRoleArn(v string) *Target {",
          "7918:  s.RoleArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8040: func (s *Target) SetRedshiftDataParameters(v *RedshiftDataParameters) *Target {",
          "8041:  s.RedshiftDataParameters = v",
          "8042:  return s",
          "8043: }",
          "",
          "---------------"
        ],
        "service/eventbridge/api.go||service/eventbridge/api.go": [
          "File: service/eventbridge/api.go -> service/eventbridge/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7006:  return s",
          "7007: }",
          "7009: type RemovePermissionInput struct {",
          "7010:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7013: type RedshiftDataParameters struct {",
          "7014:  _ struct{} `type:\"structure\"`",
          "7019:  Database *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7022:  DbUser *string `min:\"1\" type:\"string\"`",
          "7026:  SecretManagerArn *string `min:\"1\" type:\"string\"`",
          "7031:  Sql *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7035:  StatementName *string `min:\"1\" type:\"string\"`",
          "7039:  WithEvent *bool `type:\"boolean\"`",
          "7040: }",
          "7043: func (s RedshiftDataParameters) String() string {",
          "7044:  return awsutil.Prettify(s)",
          "7045: }",
          "7048: func (s RedshiftDataParameters) GoString() string {",
          "7049:  return s.String()",
          "7050: }",
          "7053: func (s *RedshiftDataParameters) Validate() error {",
          "7054:  invalidParams := request.ErrInvalidParams{Context: \"RedshiftDataParameters\"}",
          "7055:  if s.Database == nil {",
          "7056:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "7057:  }",
          "7058:  if s.Database != nil && len(*s.Database) < 1 {",
          "7059:   invalidParams.Add(request.NewErrParamMinLen(\"Database\", 1))",
          "7060:  }",
          "7061:  if s.DbUser != nil && len(*s.DbUser) < 1 {",
          "7062:   invalidParams.Add(request.NewErrParamMinLen(\"DbUser\", 1))",
          "7063:  }",
          "7064:  if s.SecretManagerArn != nil && len(*s.SecretManagerArn) < 1 {",
          "7065:   invalidParams.Add(request.NewErrParamMinLen(\"SecretManagerArn\", 1))",
          "7066:  }",
          "7067:  if s.Sql == nil {",
          "7068:   invalidParams.Add(request.NewErrParamRequired(\"Sql\"))",
          "7069:  }",
          "7070:  if s.Sql != nil && len(*s.Sql) < 1 {",
          "7071:   invalidParams.Add(request.NewErrParamMinLen(\"Sql\", 1))",
          "7072:  }",
          "7073:  if s.StatementName != nil && len(*s.StatementName) < 1 {",
          "7074:   invalidParams.Add(request.NewErrParamMinLen(\"StatementName\", 1))",
          "7075:  }",
          "7077:  if invalidParams.Len() > 0 {",
          "7078:   return invalidParams",
          "7079:  }",
          "7080:  return nil",
          "7081: }",
          "7084: func (s *RedshiftDataParameters) SetDatabase(v string) *RedshiftDataParameters {",
          "7085:  s.Database = &v",
          "7086:  return s",
          "7087: }",
          "7090: func (s *RedshiftDataParameters) SetDbUser(v string) *RedshiftDataParameters {",
          "7091:  s.DbUser = &v",
          "7092:  return s",
          "7093: }",
          "7096: func (s *RedshiftDataParameters) SetSecretManagerArn(v string) *RedshiftDataParameters {",
          "7097:  s.SecretManagerArn = &v",
          "7098:  return s",
          "7099: }",
          "7102: func (s *RedshiftDataParameters) SetSql(v string) *RedshiftDataParameters {",
          "7103:  s.Sql = &v",
          "7104:  return s",
          "7105: }",
          "7108: func (s *RedshiftDataParameters) SetStatementName(v string) *RedshiftDataParameters {",
          "7109:  s.StatementName = &v",
          "7110:  return s",
          "7111: }",
          "7114: func (s *RedshiftDataParameters) SetWithEvent(v bool) *RedshiftDataParameters {",
          "7115:  s.WithEvent = &v",
          "7116:  return s",
          "7117: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7785:  KinesisParameters *KinesisParameters `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7903:  RedshiftDataParameters *RedshiftDataParameters `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7847:    invalidParams.AddNested(\"KinesisParameters\", err.(request.ErrInvalidParams))",
          "7848:   }",
          "7849:  }",
          "7850:  if s.RunCommandParameters != nil {",
          "7851:   if err := s.RunCommandParameters.Validate(); err != nil {",
          "7852:    invalidParams.AddNested(\"RunCommandParameters\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7968:  if s.RedshiftDataParameters != nil {",
          "7969:   if err := s.RedshiftDataParameters.Validate(); err != nil {",
          "7970:    invalidParams.AddNested(\"RedshiftDataParameters\", err.(request.ErrInvalidParams))",
          "7971:   }",
          "7972:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7913:  return s",
          "7914: }",
          "7917: func (s *Target) SetRoleArn(v string) *Target {",
          "7918:  s.RoleArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8040: func (s *Target) SetRedshiftDataParameters(v *RedshiftDataParameters) *Target {",
          "8041:  s.RedshiftDataParameters = v",
          "8042:  return s",
          "8043: }",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1081:  return out, req.Send()",
          "1082: }",
          "1084: const opCancelMLTaskRun = \"CancelMLTaskRun\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1084: const opBatchUpdatePartition = \"BatchUpdatePartition\"",
          "1110: func (c *Glue) BatchUpdatePartitionRequest(input *BatchUpdatePartitionInput) (req *request.Request, output *BatchUpdatePartitionOutput) {",
          "1111:  op := &request.Operation{",
          "1112:   Name:       opBatchUpdatePartition,",
          "1113:   HTTPMethod: \"POST\",",
          "1114:   HTTPPath:   \"/\",",
          "1115:  }",
          "1117:  if input == nil {",
          "1118:   input = &BatchUpdatePartitionInput{}",
          "1119:  }",
          "1121:  output = &BatchUpdatePartitionOutput{}",
          "1122:  req = c.newRequest(op, input, output)",
          "1123:  return",
          "1124: }",
          "1154: func (c *Glue) BatchUpdatePartition(input *BatchUpdatePartitionInput) (*BatchUpdatePartitionOutput, error) {",
          "1155:  req, out := c.BatchUpdatePartitionRequest(input)",
          "1156:  return out, req.Send()",
          "1157: }",
          "1168: func (c *Glue) BatchUpdatePartitionWithContext(ctx aws.Context, input *BatchUpdatePartitionInput, opts ...request.Option) (*BatchUpdatePartitionOutput, error) {",
          "1169:  req, out := c.BatchUpdatePartitionRequest(input)",
          "1170:  req.SetContext(ctx)",
          "1171:  req.ApplyOptions(opts...)",
          "1172:  return out, req.Send()",
          "1173: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15052:  return s",
          "15053: }",
          "15056: type BinaryColumnStatisticsData struct {",
          "15057:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15147: type BatchUpdatePartitionFailureEntry struct {",
          "15148:  _ struct{} `type:\"structure\"`",
          "15151:  ErrorDetail *ErrorDetail `type:\"structure\"`",
          "15154:  PartitionValueList []*string `type:\"list\"`",
          "15155: }",
          "15158: func (s BatchUpdatePartitionFailureEntry) String() string {",
          "15159:  return awsutil.Prettify(s)",
          "15160: }",
          "15163: func (s BatchUpdatePartitionFailureEntry) GoString() string {",
          "15164:  return s.String()",
          "15165: }",
          "15168: func (s *BatchUpdatePartitionFailureEntry) SetErrorDetail(v *ErrorDetail) *BatchUpdatePartitionFailureEntry {",
          "15169:  s.ErrorDetail = v",
          "15170:  return s",
          "15171: }",
          "15174: func (s *BatchUpdatePartitionFailureEntry) SetPartitionValueList(v []*string) *BatchUpdatePartitionFailureEntry {",
          "15175:  s.PartitionValueList = v",
          "15176:  return s",
          "15177: }",
          "15179: type BatchUpdatePartitionInput struct {",
          "15180:  _ struct{} `type:\"structure\"`",
          "15184:  CatalogId *string `min:\"1\" type:\"string\"`",
          "15189:  DatabaseName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "15194:  Entries []*BatchUpdatePartitionRequestEntry `min:\"1\" type:\"list\" required:\"true\"`",
          "15199:  TableName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "15200: }",
          "15203: func (s BatchUpdatePartitionInput) String() string {",
          "15204:  return awsutil.Prettify(s)",
          "15205: }",
          "15208: func (s BatchUpdatePartitionInput) GoString() string {",
          "15209:  return s.String()",
          "15210: }",
          "15213: func (s *BatchUpdatePartitionInput) Validate() error {",
          "15214:  invalidParams := request.ErrInvalidParams{Context: \"BatchUpdatePartitionInput\"}",
          "15215:  if s.CatalogId != nil && len(*s.CatalogId) < 1 {",
          "15216:   invalidParams.Add(request.NewErrParamMinLen(\"CatalogId\", 1))",
          "15217:  }",
          "15218:  if s.DatabaseName == nil {",
          "15219:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseName\"))",
          "15220:  }",
          "15221:  if s.DatabaseName != nil && len(*s.DatabaseName) < 1 {",
          "15222:   invalidParams.Add(request.NewErrParamMinLen(\"DatabaseName\", 1))",
          "15223:  }",
          "15224:  if s.Entries == nil {",
          "15225:   invalidParams.Add(request.NewErrParamRequired(\"Entries\"))",
          "15226:  }",
          "15227:  if s.Entries != nil && len(s.Entries) < 1 {",
          "15228:   invalidParams.Add(request.NewErrParamMinLen(\"Entries\", 1))",
          "15229:  }",
          "15230:  if s.TableName == nil {",
          "15231:   invalidParams.Add(request.NewErrParamRequired(\"TableName\"))",
          "15232:  }",
          "15233:  if s.TableName != nil && len(*s.TableName) < 1 {",
          "15234:   invalidParams.Add(request.NewErrParamMinLen(\"TableName\", 1))",
          "15235:  }",
          "15236:  if s.Entries != nil {",
          "15237:   for i, v := range s.Entries {",
          "15238:    if v == nil {",
          "15239:     continue",
          "15240:    }",
          "15241:    if err := v.Validate(); err != nil {",
          "15242:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"Entries\", i), err.(request.ErrInvalidParams))",
          "15243:    }",
          "15244:   }",
          "15245:  }",
          "15247:  if invalidParams.Len() > 0 {",
          "15248:   return invalidParams",
          "15249:  }",
          "15250:  return nil",
          "15251: }",
          "15254: func (s *BatchUpdatePartitionInput) SetCatalogId(v string) *BatchUpdatePartitionInput {",
          "15255:  s.CatalogId = &v",
          "15256:  return s",
          "15257: }",
          "15260: func (s *BatchUpdatePartitionInput) SetDatabaseName(v string) *BatchUpdatePartitionInput {",
          "15261:  s.DatabaseName = &v",
          "15262:  return s",
          "15263: }",
          "15266: func (s *BatchUpdatePartitionInput) SetEntries(v []*BatchUpdatePartitionRequestEntry) *BatchUpdatePartitionInput {",
          "15267:  s.Entries = v",
          "15268:  return s",
          "15269: }",
          "15272: func (s *BatchUpdatePartitionInput) SetTableName(v string) *BatchUpdatePartitionInput {",
          "15273:  s.TableName = &v",
          "15274:  return s",
          "15275: }",
          "15277: type BatchUpdatePartitionOutput struct {",
          "15278:  _ struct{} `type:\"structure\"`",
          "15282:  Errors []*BatchUpdatePartitionFailureEntry `type:\"list\"`",
          "15283: }",
          "15286: func (s BatchUpdatePartitionOutput) String() string {",
          "15287:  return awsutil.Prettify(s)",
          "15288: }",
          "15291: func (s BatchUpdatePartitionOutput) GoString() string {",
          "15292:  return s.String()",
          "15293: }",
          "15296: func (s *BatchUpdatePartitionOutput) SetErrors(v []*BatchUpdatePartitionFailureEntry) *BatchUpdatePartitionOutput {",
          "15297:  s.Errors = v",
          "15298:  return s",
          "15299: }",
          "15302: type BatchUpdatePartitionRequestEntry struct {",
          "15303:  _ struct{} `type:\"structure\"`",
          "15308:  PartitionInput *PartitionInput `type:\"structure\" required:\"true\"`",
          "15313:  PartitionValueList []*string `type:\"list\" required:\"true\"`",
          "15314: }",
          "15317: func (s BatchUpdatePartitionRequestEntry) String() string {",
          "15318:  return awsutil.Prettify(s)",
          "15319: }",
          "15322: func (s BatchUpdatePartitionRequestEntry) GoString() string {",
          "15323:  return s.String()",
          "15324: }",
          "15327: func (s *BatchUpdatePartitionRequestEntry) Validate() error {",
          "15328:  invalidParams := request.ErrInvalidParams{Context: \"BatchUpdatePartitionRequestEntry\"}",
          "15329:  if s.PartitionInput == nil {",
          "15330:   invalidParams.Add(request.NewErrParamRequired(\"PartitionInput\"))",
          "15331:  }",
          "15332:  if s.PartitionValueList == nil {",
          "15333:   invalidParams.Add(request.NewErrParamRequired(\"PartitionValueList\"))",
          "15334:  }",
          "15335:  if s.PartitionInput != nil {",
          "15336:   if err := s.PartitionInput.Validate(); err != nil {",
          "15337:    invalidParams.AddNested(\"PartitionInput\", err.(request.ErrInvalidParams))",
          "15338:   }",
          "15339:  }",
          "15341:  if invalidParams.Len() > 0 {",
          "15342:   return invalidParams",
          "15343:  }",
          "15344:  return nil",
          "15345: }",
          "15348: func (s *BatchUpdatePartitionRequestEntry) SetPartitionInput(v *PartitionInput) *BatchUpdatePartitionRequestEntry {",
          "15349:  s.PartitionInput = v",
          "15350:  return s",
          "15351: }",
          "15354: func (s *BatchUpdatePartitionRequestEntry) SetPartitionValueList(v []*string) *BatchUpdatePartitionRequestEntry {",
          "15355:  s.PartitionValueList = v",
          "15356:  return s",
          "15357: }",
          "",
          "---------------"
        ],
        "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go": [
          "File: service/glue/glueiface/interface.go -> service/glue/glueiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:  BatchStopJobRunWithContext(aws.Context, *glue.BatchStopJobRunInput, ...request.Option) (*glue.BatchStopJobRunOutput, error)",
          "109:  BatchStopJobRunRequest(*glue.BatchStopJobRunInput) (*request.Request, *glue.BatchStopJobRunOutput)",
          "111:  CancelMLTaskRun(*glue.CancelMLTaskRunInput) (*glue.CancelMLTaskRunOutput, error)",
          "112:  CancelMLTaskRunWithContext(aws.Context, *glue.CancelMLTaskRunInput, ...request.Option) (*glue.CancelMLTaskRunOutput, error)",
          "113:  CancelMLTaskRunRequest(*glue.CancelMLTaskRunInput) (*request.Request, *glue.CancelMLTaskRunOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:  BatchUpdatePartition(*glue.BatchUpdatePartitionInput) (*glue.BatchUpdatePartitionOutput, error)",
          "112:  BatchUpdatePartitionWithContext(aws.Context, *glue.BatchUpdatePartitionInput, ...request.Option) (*glue.BatchUpdatePartitionOutput, error)",
          "113:  BatchUpdatePartitionRequest(*glue.BatchUpdatePartitionInput) (*request.Request, *glue.BatchUpdatePartitionOutput)",
          "",
          "---------------"
        ],
        "service/iotsitewise/api.go||service/iotsitewise/api.go": [
          "File: service/iotsitewise/api.go -> service/iotsitewise/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1122:  return out, req.Send()",
          "1123: }",
          "1125: const opCreateProject = \"CreateProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1123: const opCreatePresignedPortalUrl = \"CreatePresignedPortalUrl\"",
          "1149: func (c *IoTSiteWise) CreatePresignedPortalUrlRequest(input *CreatePresignedPortalUrlInput) (req *request.Request, output *CreatePresignedPortalUrlOutput) {",
          "1150:  op := &request.Operation{",
          "1151:   Name:       opCreatePresignedPortalUrl,",
          "1152:   HTTPMethod: \"GET\",",
          "1153:   HTTPPath:   \"/portals/{portalId}/presigned-url\",",
          "1154:  }",
          "1156:  if input == nil {",
          "1157:   input = &CreatePresignedPortalUrlInput{}",
          "1158:  }",
          "1160:  output = &CreatePresignedPortalUrlOutput{}",
          "1161:  req = c.newRequest(op, input, output)",
          "1162:  req.Handlers.Build.PushBackNamed(protocol.NewHostPrefixHandler(\"monitor.\", nil))",
          "1163:  req.Handlers.Build.PushBackNamed(protocol.ValidateEndpointHostHandler)",
          "1164:  return",
          "1165: }",
          "1199: func (c *IoTSiteWise) CreatePresignedPortalUrl(input *CreatePresignedPortalUrlInput) (*CreatePresignedPortalUrlOutput, error) {",
          "1200:  req, out := c.CreatePresignedPortalUrlRequest(input)",
          "1201:  return out, req.Send()",
          "1202: }",
          "1213: func (c *IoTSiteWise) CreatePresignedPortalUrlWithContext(ctx aws.Context, input *CreatePresignedPortalUrlInput, opts ...request.Option) (*CreatePresignedPortalUrlOutput, error) {",
          "1214:  req, out := c.CreatePresignedPortalUrlRequest(input)",
          "1215:  req.SetContext(ctx)",
          "1216:  req.ApplyOptions(opts...)",
          "1217:  return out, req.Send()",
          "1218: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8619:  ClientToken *string `locationName:\"clientToken\" min:\"36\" type:\"string\" idempotencyToken:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8733:  PortalAuthMode *string `locationName:\"portalAuthMode\" type:\"string\" enum:\"AuthMode\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8708:  return s",
          "8709: }",
          "8712: func (s *CreatePortalInput) SetPortalContactEmail(v string) *CreatePortalInput {",
          "8713:  s.PortalContactEmail = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8826: func (s *CreatePortalInput) SetPortalAuthMode(v string) *CreatePortalInput {",
          "8827:  s.PortalAuthMode = &v",
          "8828:  return s",
          "8829: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8817:  return s",
          "8818: }",
          "8820: type CreateProjectInput struct {",
          "8821:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8944: type CreatePresignedPortalUrlInput struct {",
          "8945:  _ struct{} `type:\"structure\"`",
          "8950:  PortalId *string `location:\"uri\" locationName:\"portalId\" min:\"36\" type:\"string\" required:\"true\"`",
          "8955:  SessionDurationSeconds *int64 `location:\"querystring\" locationName:\"sessionDurationSeconds\" min:\"900\" type:\"integer\"`",
          "8956: }",
          "8959: func (s CreatePresignedPortalUrlInput) String() string {",
          "8960:  return awsutil.Prettify(s)",
          "8961: }",
          "8964: func (s CreatePresignedPortalUrlInput) GoString() string {",
          "8965:  return s.String()",
          "8966: }",
          "8969: func (s *CreatePresignedPortalUrlInput) Validate() error {",
          "8970:  invalidParams := request.ErrInvalidParams{Context: \"CreatePresignedPortalUrlInput\"}",
          "8971:  if s.PortalId == nil {",
          "8972:   invalidParams.Add(request.NewErrParamRequired(\"PortalId\"))",
          "8973:  }",
          "8974:  if s.PortalId != nil && len(*s.PortalId) < 36 {",
          "8975:   invalidParams.Add(request.NewErrParamMinLen(\"PortalId\", 36))",
          "8976:  }",
          "8977:  if s.SessionDurationSeconds != nil && *s.SessionDurationSeconds < 900 {",
          "8978:   invalidParams.Add(request.NewErrParamMinValue(\"SessionDurationSeconds\", 900))",
          "8979:  }",
          "8981:  if invalidParams.Len() > 0 {",
          "8982:   return invalidParams",
          "8983:  }",
          "8984:  return nil",
          "8985: }",
          "8988: func (s *CreatePresignedPortalUrlInput) SetPortalId(v string) *CreatePresignedPortalUrlInput {",
          "8989:  s.PortalId = &v",
          "8990:  return s",
          "8991: }",
          "8994: func (s *CreatePresignedPortalUrlInput) SetSessionDurationSeconds(v int64) *CreatePresignedPortalUrlInput {",
          "8995:  s.SessionDurationSeconds = &v",
          "8996:  return s",
          "8997: }",
          "8999: type CreatePresignedPortalUrlOutput struct {",
          "9000:  _ struct{} `type:\"structure\"`",
          "9008:  PresignedPortalUrl *string `locationName:\"presignedPortalUrl\" min:\"1\" type:\"string\" required:\"true\"`",
          "9009: }",
          "9012: func (s CreatePresignedPortalUrlOutput) String() string {",
          "9013:  return awsutil.Prettify(s)",
          "9014: }",
          "9017: func (s CreatePresignedPortalUrlOutput) GoString() string {",
          "9018:  return s.String()",
          "9019: }",
          "9022: func (s *CreatePresignedPortalUrlOutput) SetPresignedPortalUrl(v string) *CreatePresignedPortalUrlOutput {",
          "9023:  s.PresignedPortalUrl = &v",
          "9024:  return s",
          "9025: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10596:  PortalArn *string `locationName:\"portalArn\" min:\"1\" type:\"string\" required:\"true\"`",
          "10601:  PortalClientId *string `locationName:\"portalClientId\" min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10807:  PortalAuthMode *string `locationName:\"portalAuthMode\" type:\"string\" enum:\"AuthMode\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10666:  return s",
          "10667: }",
          "10670: func (s *DescribePortalOutput) SetPortalClientId(v string) *DescribePortalOutput {",
          "10671:  s.PortalClientId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10886: func (s *DescribePortalOutput) SetPortalAuthMode(v string) *DescribePortalOutput {",
          "10887:  s.PortalAuthMode = &v",
          "10888:  return s",
          "10889: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11792:  return s",
          "11793: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12018: type IAMUserIdentity struct {",
          "12019:  _ struct{} `type:\"structure\"`",
          "12030:  Arn *string `locationName:\"arn\" min:\"1\" type:\"string\" required:\"true\"`",
          "12031: }",
          "12034: func (s IAMUserIdentity) String() string {",
          "12035:  return awsutil.Prettify(s)",
          "12036: }",
          "12039: func (s IAMUserIdentity) GoString() string {",
          "12040:  return s.String()",
          "12041: }",
          "12044: func (s *IAMUserIdentity) Validate() error {",
          "12045:  invalidParams := request.ErrInvalidParams{Context: \"IAMUserIdentity\"}",
          "12046:  if s.Arn == nil {",
          "12047:   invalidParams.Add(request.NewErrParamRequired(\"Arn\"))",
          "12048:  }",
          "12049:  if s.Arn != nil && len(*s.Arn) < 1 {",
          "12050:   invalidParams.Add(request.NewErrParamMinLen(\"Arn\", 1))",
          "12051:  }",
          "12053:  if invalidParams.Len() > 0 {",
          "12054:   return invalidParams",
          "12055:  }",
          "12056:  return nil",
          "12057: }",
          "12060: func (s *IAMUserIdentity) SetArn(v string) *IAMUserIdentity {",
          "12061:  s.Arn = &v",
          "12062:  return s",
          "12063: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "11800: type Identity struct {",
          "11801:  _ struct{} `type:\"structure\"`",
          "11804:  Group *GroupIdentity `locationName:\"group\" type:\"structure\"`",
          "11807:  User *UserIdentity `locationName:\"user\" type:\"structure\"`",
          "11808: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12077:  IamUser *IAMUserIdentity `locationName:\"iamUser\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11825:    invalidParams.AddNested(\"Group\", err.(request.ErrInvalidParams))",
          "11826:   }",
          "11827:  }",
          "11828:  if s.User != nil {",
          "11829:   if err := s.User.Validate(); err != nil {",
          "11830:    invalidParams.AddNested(\"User\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12101:  if s.IamUser != nil {",
          "12102:   if err := s.IamUser.Validate(); err != nil {",
          "12103:    invalidParams.AddNested(\"IamUser\", err.(request.ErrInvalidParams))",
          "12104:   }",
          "12105:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11843:  return s",
          "11844: }",
          "11847: func (s *Identity) SetUser(v *UserIdentity) *Identity {",
          "11848:  s.User = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12125: func (s *Identity) SetIamUser(v *IAMUserIdentity) *Identity {",
          "12126:  s.IamUser = v",
          "12127:  return s",
          "12128: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "12180: type ListAccessPoliciesInput struct {",
          "12181:  _ struct{} `type:\"structure\"`",
          "12184:  IdentityId *string `location:\"querystring\" locationName:\"identityId\" min:\"1\" type:\"string\"`",
          "12188:  IdentityType *string `location:\"querystring\" locationName:\"identityType\" type:\"string\" enum:\"IdentityType\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12470:  IamArn *string `location:\"querystring\" locationName:\"iamArn\" min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "12217: func (s *ListAccessPoliciesInput) Validate() error {",
          "12218:  invalidParams := request.ErrInvalidParams{Context: \"ListAccessPoliciesInput\"}",
          "12219:  if s.IdentityId != nil && len(*s.IdentityId) < 1 {",
          "12220:   invalidParams.Add(request.NewErrParamMinLen(\"IdentityId\", 1))",
          "12221:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12509:  if s.IamArn != nil && len(*s.IamArn) < 1 {",
          "12510:   invalidParams.Add(request.NewErrParamMinLen(\"IamArn\", 1))",
          "12511:  }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "12235:  return nil",
          "12236: }",
          "12239: func (s *ListAccessPoliciesInput) SetIdentityId(v string) *ListAccessPoliciesInput {",
          "12240:  s.IdentityId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12532: func (s *ListAccessPoliciesInput) SetIamArn(v string) *ListAccessPoliciesInput {",
          "12533:  s.IamArn = &v",
          "12534:  return s",
          "12535: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "16115:  }",
          "16116: }",
          "16118: const (",
          "16120:  BatchPutAssetPropertyValueErrorCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16420: const (",
          "16422:  AuthModeIam = \"IAM\"",
          "16425:  AuthModeSso = \"SSO\"",
          "16426: )",
          "16429: func AuthMode_Values() []string {",
          "16430:  return []string{",
          "16431:   AuthModeIam,",
          "16432:   AuthModeSso,",
          "16433:  }",
          "16434: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "16203:  IdentityTypeGroup = \"GROUP\"",
          "16204: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16524:  IdentityTypeIam = \"IAM\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "16208:  return []string{",
          "16209:   IdentityTypeUser,",
          "16210:   IdentityTypeGroup,",
          "16211:  }",
          "16212: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16532:   IdentityTypeIam,",
          "",
          "---------------"
        ],
        "service/iotsitewise/iotsitewiseiface/interface.go||service/iotsitewise/iotsitewiseiface/interface.go": [
          "File: service/iotsitewise/iotsitewiseiface/interface.go -> service/iotsitewise/iotsitewiseiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:  CreatePortalWithContext(aws.Context, *iotsitewise.CreatePortalInput, ...request.Option) (*iotsitewise.CreatePortalOutput, error)",
          "101:  CreatePortalRequest(*iotsitewise.CreatePortalInput) (*request.Request, *iotsitewise.CreatePortalOutput)",
          "103:  CreateProject(*iotsitewise.CreateProjectInput) (*iotsitewise.CreateProjectOutput, error)",
          "104:  CreateProjectWithContext(aws.Context, *iotsitewise.CreateProjectInput, ...request.Option) (*iotsitewise.CreateProjectOutput, error)",
          "105:  CreateProjectRequest(*iotsitewise.CreateProjectInput) (*request.Request, *iotsitewise.CreateProjectOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:  CreatePresignedPortalUrl(*iotsitewise.CreatePresignedPortalUrlInput) (*iotsitewise.CreatePresignedPortalUrlOutput, error)",
          "104:  CreatePresignedPortalUrlWithContext(aws.Context, *iotsitewise.CreatePresignedPortalUrlInput, ...request.Option) (*iotsitewise.CreatePresignedPortalUrlOutput, error)",
          "105:  CreatePresignedPortalUrlRequest(*iotsitewise.CreatePresignedPortalUrlInput) (*request.Request, *iotsitewise.CreatePresignedPortalUrlOutput)",
          "",
          "---------------"
        ],
        "service/rds/api.go||service/rds/api.go": [
          "File: service/rds/api.go -> service/rds/api.go"
        ],
        "service/resourcegroups/api.go||service/resourcegroups/api.go": [
          "File: service/resourcegroups/api.go -> service/resourcegroups/api.go"
        ],
        "service/resourcegroups/doc.go||service/resourcegroups/doc.go": [
          "File: service/resourcegroups/doc.go -> service/resourcegroups/doc.go"
        ],
        "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go": [
          "File: service/resourcegroupstaggingapi/doc.go -> service/resourcegroupstaggingapi/doc.go"
        ]
      }
    },
    {
      "candidate_hash": "b66277f2bb9edd6eb8e63fc8ae85de83bc8f08a4",
      "candidate_info": {
        "commit_hash": "b66277f2bb9edd6eb8e63fc8ae85de83bc8f08a4",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/b66277f2bb9edd6eb8e63fc8ae85de83bc8f08a4",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/chime/2018-05-01/api-2.json",
          "models/apis/personalize-runtime/2018-05-22/api-2.json",
          "models/apis/personalize-runtime/2018-05-22/docs-2.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/api-2.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/docs-2.json",
          "models/apis/storagegateway/2013-06-30/api-2.json",
          "models/apis/storagegateway/2013-06-30/docs-2.json",
          "models/apis/wafv2/2019-07-29/api-2.json",
          "models/apis/wafv2/2019-07-29/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/chime/api.go",
          "service/personalizeruntime/api.go",
          "service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go",
          "service/storagegateway/api.go",
          "service/wafv2/api.go"
        ],
        "message": "Release v1.33.17 (2020-07-31) (#3453)\n\nRelease v1.33.17 (2020-07-31)\n===\n\n### Service Client Updates\n* `service/chime`: Updates service API\n  * This release increases the CreateMeetingWithAttendee max attendee limit to 10.\n* `service/personalize-runtime`: Updates service API and documentation\n* `service/resourcegroupstaggingapi`: Updates service API and documentation\n  * Updates to the list of services supported by this API.\n* `service/storagegateway`: Updates service API and documentation\n  * Add support for gateway VM deprecation dates\n* `service/wafv2`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/chime/api.go||service/chime/api.go",
          "service/personalizeruntime/api.go||service/personalizeruntime/api.go",
          "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go",
          "service/storagegateway/api.go||service/storagegateway/api.go",
          "service/wafv2/api.go||service/wafv2/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2915:     Protocols: []string{\"https\"},",
          "2916:    },",
          "2917:    Endpoints: endpoints{",
          "2918:     \"ap-east-1\":      endpoint{},",
          "2919:     \"ap-northeast-1\": endpoint{},",
          "2920:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2918:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2924:     \"ca-central-1\":   endpoint{},",
          "2925:     \"eu-central-1\":   endpoint{},",
          "2926:     \"eu-north-1\":     endpoint{},",
          "2927:     \"eu-west-1\":      endpoint{},",
          "2928:     \"eu-west-2\":      endpoint{},",
          "2929:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2928:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4185:     },",
          "4186:    },",
          "4187:    Endpoints: endpoints{",
          "4188:     \"ap-south-1\":     endpoint{},",
          "4189:     \"ap-southeast-2\": endpoint{},",
          "4190:     \"eu-central-1\":   endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4190:     \"ap-northeast-2\": endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.33.16\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.33.17\"",
          "",
          "---------------"
        ],
        "service/chime/api.go||service/chime/api.go": [
          "File: service/chime/api.go -> service/chime/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26047:  ErrorCodeThrottled = \"Throttled\"",
          "26050:  ErrorCodeUnauthorized = \"Unauthorized\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26050:  ErrorCodeThrottling = \"Throttling\"",
          "",
          "---------------"
        ],
        "service/personalizeruntime/api.go||service/personalizeruntime/api.go": [
          "File: service/personalizeruntime/api.go -> service/personalizeruntime/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:  Context map[string]*string `locationName:\"context\" type:\"map\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:  FilterArn *string `locationName:\"filterArn\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255:  return s",
          "256: }",
          "259: func (s *GetPersonalizedRankingInput) SetInputList(v []*string) *GetPersonalizedRankingInput {",
          "260:  s.InputList = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263: func (s *GetPersonalizedRankingInput) SetFilterArn(v string) *GetPersonalizedRankingInput {",
          "264:  s.FilterArn = &v",
          "265:  return s",
          "266: }",
          "",
          "---------------"
        ],
        "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go": [
          "File: service/resourcegroupstaggingapi/api.go -> service/resourcegroupstaggingapi/api.go"
        ],
        "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go": [
          "File: service/resourcegroupstaggingapi/doc.go -> service/resourcegroupstaggingapi/doc.go"
        ],
        "service/storagegateway/api.go||service/storagegateway/api.go": [
          "File: service/storagegateway/api.go -> service/storagegateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11965:  CloudWatchLogGroupARN *string `type:\"string\"`",
          "11968:  Ec2InstanceId *string `type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11969:  DeprecationDate *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12014:  NextUpdateAvailabilityDate *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12021:  SoftwareUpdatesEndDate *string `min:\"1\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12039:  return s",
          "12040: }",
          "12043: func (s *DescribeGatewayInformationOutput) SetEc2InstanceId(v string) *DescribeGatewayInformationOutput {",
          "12044:  s.Ec2InstanceId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12050: func (s *DescribeGatewayInformationOutput) SetDeprecationDate(v string) *DescribeGatewayInformationOutput {",
          "12051:  s.DeprecationDate = &v",
          "12052:  return s",
          "12053: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "12117:  return s",
          "12118: }",
          "12121: func (s *DescribeGatewayInformationOutput) SetTags(v []*Tag) *DescribeGatewayInformationOutput {",
          "12122:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12134: func (s *DescribeGatewayInformationOutput) SetSoftwareUpdatesEndDate(v string) *DescribeGatewayInformationOutput {",
          "12135:  s.SoftwareUpdatesEndDate = &v",
          "12136:  return s",
          "12137: }",
          "",
          "---------------"
        ],
        "service/wafv2/api.go||service/wafv2/api.go": [
          "File: service/wafv2/api.go -> service/wafv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9738:  LogDestinationConfigs []*string `min:\"1\" type:\"list\" required:\"true\"`",
          "9743:  RedactedFields []*FieldToMatch `type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9743:  ManagedByFirewallManager *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9797:  return s",
          "9798: }",
          "9801: func (s *LoggingConfiguration) SetRedactedFields(v []*FieldToMatch) *LoggingConfiguration {",
          "9802:  s.RedactedFields = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9808: func (s *LoggingConfiguration) SetManagedByFirewallManager(v bool) *LoggingConfiguration {",
          "9809:  s.ManagedByFirewallManager = &v",
          "9810:  return s",
          "9811: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0fcac5fd4736edb61bf642e97e63f1f5fc103708",
      "candidate_info": {
        "commit_hash": "0fcac5fd4736edb61bf642e97e63f1f5fc103708",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/0fcac5fd4736edb61bf642e97e63f1f5fc103708",
        "files": [
          "CHANGELOG.md",
          "aws/version.go",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/greengrass/2017-06-07/api-2.json",
          "models/apis/route53/2013-04-01/docs-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/apis/s3control/2018-08-20/docs-2.json",
          "models/apis/s3control/2018-08-20/paginators-1.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/apis/ssm/2014-11-06/docs-2.json",
          "service/ec2/api.go",
          "service/greengrass/api.go",
          "service/route53/api.go",
          "service/s3/api.go",
          "service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go",
          "service/s3control/api.go",
          "service/s3control/s3controliface/interface.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.38.4 (2021-03-24) (#3833)\n\nRelease v1.38.4 (2021-03-24)\n===\n\n### Service Client Updates\n* `service/ec2`: Updates service API and documentation\n  * maximumEfaInterfaces added to DescribeInstanceTypes API\n* `service/greengrass`: Updates service API\n  * Updated the parameters to make name required for CreateGroup API.\n* `service/route53`: Updates service documentation\n  * Documentation updates for route53\n* `service/s3`: Updates service documentation and examples\n  * Documentation updates for Amazon S3\n* `service/s3control`: Updates service documentation and paginators\n  * Documentation updates for s3-control\n* `service/ssm`: Updates service API and documentation\n  * This release allows SSM Explorer customers to enable OpsData sources across their organization when creating a resource data sync.",
        "before_after_code_files": [
          "aws/version.go||aws/version.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/greengrass/api.go||service/greengrass/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/examples_test.go||service/s3/examples_test.go",
          "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
          "service/s3control/api.go||service/s3control/api.go",
          "service/s3control/s3controliface/interface.go||service/s3control/s3controliface/interface.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ],
          "candidate": [
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go",
            "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.38.3\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.38.4\"",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "79401:  return s",
          "79402: }",
          "79405: type EgressOnlyInternetGateway struct {",
          "79406:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79408: type EfaInfo struct {",
          "79409:  _ struct{} `type:\"structure\"`",
          "79412:  MaximumEfaInterfaces *int64 `locationName:\"maximumEfaInterfaces\" type:\"integer\"`",
          "79413: }",
          "79416: func (s EfaInfo) String() string {",
          "79417:  return awsutil.Prettify(s)",
          "79418: }",
          "79421: func (s EfaInfo) GoString() string {",
          "79422:  return s.String()",
          "79423: }",
          "79426: func (s *EfaInfo) SetMaximumEfaInterfaces(v int64) *EfaInfo {",
          "79427:  s.MaximumEfaInterfaces = &v",
          "79428:  return s",
          "79429: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100591:  DefaultNetworkCardIndex *int64 `locationName:\"defaultNetworkCardIndex\" type:\"integer\"`",
          "100594:  EfaSupported *bool `locationName:\"efaSupported\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100621:  EfaInfo *EfaInfo `locationName:\"efaInfo\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100635:  return s",
          "100636: }",
          "100639: func (s *NetworkInfo) SetEfaSupported(v bool) *NetworkInfo {",
          "100640:  s.EfaSupported = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100669: func (s *NetworkInfo) SetEfaInfo(v *EfaInfo) *NetworkInfo {",
          "100670:  s.EfaInfo = v",
          "100671:  return s",
          "100672: }",
          "",
          "---------------"
        ],
        "service/greengrass/api.go||service/greengrass/api.go": [
          "File: service/greengrass/api.go -> service/greengrass/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9193:  InitialVersion *GroupVersion `type:\"structure\"`",
          "9198:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "",
          "[Removed Lines]",
          "9195:  Name *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "9196:  Name *string `type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9208:  return s.String()",
          "9209: }",
          "9212: func (s *CreateGroupInput) SetAmznClientToken(v string) *CreateGroupInput {",
          "9213:  s.AmznClientToken = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9213: func (s *CreateGroupInput) Validate() error {",
          "9214:  invalidParams := request.ErrInvalidParams{Context: \"CreateGroupInput\"}",
          "9215:  if s.Name == nil {",
          "9216:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "9217:  }",
          "9219:  if invalidParams.Len() > 0 {",
          "9220:   return invalidParams",
          "9221:  }",
          "9222:  return nil",
          "9223: }",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:  fmt.Println(result)",
          "129: }",
          "134: func ExampleS3_CreateBucket_shared00() {",
          "135:  svc := s3.New(session.New())",
          "136:  input := &s3.CreateBucketInput{",
          "137:   Bucket: aws.String(\"examplebucket\"),",
          "138:  }",
          "140:  result, err := svc.CreateBucket(input)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:   CreateBucketConfiguration: &s3.CreateBucketConfiguration{",
          "140:    LocationConstraint: aws.String(\"eu-west-1\"),",
          "141:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:  fmt.Println(result)",
          "160: }",
          "166: func ExampleS3_CreateBucket_shared01() {",
          "167:  svc := s3.New(session.New())",
          "168:  input := &s3.CreateBucketInput{",
          "169:   Bucket: aws.String(\"examplebucket\"),",
          "173:  }",
          "175:  result, err := svc.CreateBucket(input)",
          "",
          "[Removed Lines]",
          "170:   CreateBucketConfiguration: &s3.CreateBucketConfiguration{",
          "171:    LocationConstraint: aws.String(\"eu-west-1\"),",
          "172:   },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:  fmt.Println(result)",
          "412: }",
          "417: func ExampleS3_DeleteObject_shared00() {",
          "418:  svc := s3.New(session.New())",
          "419:  input := &s3.DeleteObjectInput{",
          "422:  }",
          "424:  result, err := svc.DeleteObject(input)",
          "",
          "[Removed Lines]",
          "420:   Bucket: aws.String(\"examplebucket\"),",
          "421:   Key:    aws.String(\"objectkey.jpg\"),",
          "",
          "[Added Lines]",
          "420:   Bucket: aws.String(\"ExampleBucket\"),",
          "421:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "439:  fmt.Println(result)",
          "440: }",
          "445: func ExampleS3_DeleteObject_shared01() {",
          "446:  svc := s3.New(session.New())",
          "447:  input := &s3.DeleteObjectInput{",
          "450:  }",
          "452:  result, err := svc.DeleteObject(input)",
          "",
          "[Removed Lines]",
          "448:   Bucket: aws.String(\"ExampleBucket\"),",
          "449:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "448:   Bucket: aws.String(\"examplebucket\"),",
          "449:   Key:    aws.String(\"objectkey.jpg\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1808:  fmt.Println(result)",
          "1809: }",
          "1816: func ExampleS3_PutObject_shared00() {",
          "1817:  svc := s3.New(session.New())",
          "1818:  input := &s3.PutObjectInput{",
          "1822:  }",
          "1824:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1819:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1820:   Bucket: aws.String(\"examplebucket\"),",
          "1821:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "1818:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1819:   Bucket:  aws.String(\"examplebucket\"),",
          "1820:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1821:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1869:  fmt.Println(result)",
          "1870: }",
          "1876: func ExampleS3_PutObject_shared02() {",
          "1877:  svc := s3.New(session.New())",
          "1878:  input := &s3.PutObjectInput{",
          "1884:  }",
          "1886:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1879:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1880:   Bucket:               aws.String(\"examplebucket\"),",
          "1881:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1882:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1883:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "1879:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1880:   Bucket: aws.String(\"examplebucket\"),",
          "1881:   Key:    aws.String(\"exampleobject\"),",
          "1882:   Metadata: map[string]*string{",
          "1883:    \"metadata1\": aws.String(\"value1\"),",
          "1884:    \"metadata2\": aws.String(\"value2\"),",
          "1885:   },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1901:  fmt.Println(result)",
          "1902: }",
          "1908: func ExampleS3_PutObject_shared03() {",
          "1909:  svc := s3.New(session.New())",
          "1910:  input := &s3.PutObjectInput{",
          "1912:   Bucket: aws.String(\"examplebucket\"),",
          "1918:  }",
          "1920:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1913:   Key:    aws.String(\"exampleobject\"),",
          "1914:   Metadata: map[string]*string{",
          "1915:    \"metadata1\": aws.String(\"value1\"),",
          "1916:    \"metadata2\": aws.String(\"value2\"),",
          "1917:   },",
          "",
          "[Added Lines]",
          "1914:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1916:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1935:  fmt.Println(result)",
          "1936: }",
          "1943: func ExampleS3_PutObject_shared04() {",
          "1944:  svc := s3.New(session.New())",
          "1945:  input := &s3.PutObjectInput{",
          "1950:  }",
          "1952:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1946:   ACL:    aws.String(\"authenticated-read\"),",
          "1947:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1948:   Bucket: aws.String(\"examplebucket\"),",
          "1949:   Key:    aws.String(\"exampleobject\"),",
          "",
          "[Added Lines]",
          "1945:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1946:   Bucket:               aws.String(\"examplebucket\"),",
          "1947:   Key:                  aws.String(\"exampleobject\"),",
          "1948:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1949:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1967:  fmt.Println(result)",
          "1968: }",
          "1974: func ExampleS3_PutObject_shared05() {",
          "1975:  svc := s3.New(session.New())",
          "1976:  input := &s3.PutObjectInput{",
          "1981:  }",
          "1983:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1977:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1978:   Bucket:  aws.String(\"examplebucket\"),",
          "1979:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1980:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1978:   ACL:    aws.String(\"authenticated-read\"),",
          "1979:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1980:   Bucket: aws.String(\"examplebucket\"),",
          "1981:   Key:    aws.String(\"exampleobject\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1998:  fmt.Println(result)",
          "1999: }",
          "2006: func ExampleS3_PutObject_shared06() {",
          "2007:  svc := s3.New(session.New())",
          "2008:  input := &s3.PutObjectInput{",
          "2010:   Bucket:               aws.String(\"examplebucket\"),",
          "2012:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2014:  }",
          "2016:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2009:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "2011:   Key:                  aws.String(\"exampleobject\"),",
          "2013:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "2009:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2011:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "2013:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2175:  fmt.Println(result)",
          "2176: }",
          "2182: func ExampleS3_UploadPartCopy_shared00() {",
          "2183:  svc := s3.New(session.New())",
          "2184:  input := &s3.UploadPartCopyInput{",
          "2190:  }",
          "2192:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2185:   Bucket:     aws.String(\"examplebucket\"),",
          "2186:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2187:   Key:        aws.String(\"examplelargeobject\"),",
          "2188:   PartNumber: aws.Int64(1),",
          "2189:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2185:   Bucket:          aws.String(\"examplebucket\"),",
          "2186:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2187:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2188:   Key:             aws.String(\"examplelargeobject\"),",
          "2189:   PartNumber:      aws.Int64(2),",
          "2190:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2207:  fmt.Println(result)",
          "2208: }",
          "2214: func ExampleS3_UploadPartCopy_shared01() {",
          "2215:  svc := s3.New(session.New())",
          "2216:  input := &s3.UploadPartCopyInput{",
          "2223:  }",
          "2225:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2217:   Bucket:          aws.String(\"examplebucket\"),",
          "2218:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2219:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2220:   Key:             aws.String(\"examplelargeobject\"),",
          "2221:   PartNumber:      aws.Int64(2),",
          "2222:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2218:   Bucket:     aws.String(\"examplebucket\"),",
          "2219:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2220:   Key:        aws.String(\"examplelargeobject\"),",
          "2221:   PartNumber: aws.Int64(1),",
          "2222:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ],
        "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
          "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
        ],
        "service/s3control/api.go||service/s3control/api.go": [
          "File: service/s3control/api.go -> service/s3control/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3696:   Name:       opListStorageLensConfigurations,",
          "3697:   HTTPMethod: \"GET\",",
          "3698:   HTTPPath:   \"/v20180820/storagelens\",",
          "3699:  }",
          "3701:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3699:   Paginator: &request.Paginator{",
          "3700:    InputTokens:     []string{\"NextToken\"},",
          "3701:    OutputTokens:    []string{\"NextToken\"},",
          "3702:    LimitToken:      \"\",",
          "3703:    TruncationToken: \"\",",
          "3704:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3749:  return out, req.Send()",
          "3750: }",
          "3752: const opPutAccessPointConfigurationForObjectLambda = \"PutAccessPointConfigurationForObjectLambda\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3775: func (c *S3Control) ListStorageLensConfigurationsPages(input *ListStorageLensConfigurationsInput, fn func(*ListStorageLensConfigurationsOutput, bool) bool) error {",
          "3776:  return c.ListStorageLensConfigurationsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "3777: }",
          "3786: func (c *S3Control) ListStorageLensConfigurationsPagesWithContext(ctx aws.Context, input *ListStorageLensConfigurationsInput, fn func(*ListStorageLensConfigurationsOutput, bool) bool, opts ...request.Option) error {",
          "3787:  p := request.Pagination{",
          "3788:   NewRequest: func() (*request.Request, error) {",
          "3789:    var inCpy *ListStorageLensConfigurationsInput",
          "3790:    if input != nil {",
          "3791:     tmp := *input",
          "3792:     inCpy = &tmp",
          "3793:    }",
          "3794:    req, _ := c.ListStorageLensConfigurationsRequest(inCpy)",
          "3795:    req.SetContext(ctx)",
          "3796:    req.ApplyOptions(opts...)",
          "3797:    return req, nil",
          "3798:   },",
          "3799:  }",
          "3801:  for p.Next() {",
          "3802:   if !fn(p.Page().(*ListStorageLensConfigurationsOutput), !p.HasNextPage()) {",
          "3803:    break",
          "3804:   }",
          "3805:  }",
          "3807:  return p.Err()",
          "3808: }",
          "",
          "---------------"
        ],
        "service/s3control/s3controliface/interface.go||service/s3control/s3controliface/interface.go": [
          "File: service/s3control/s3controliface/interface.go -> service/s3control/s3controliface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:  ListStorageLensConfigurationsWithContext(aws.Context, *s3control.ListStorageLensConfigurationsInput, ...request.Option) (*s3control.ListStorageLensConfigurationsOutput, error)",
          "221:  ListStorageLensConfigurationsRequest(*s3control.ListStorageLensConfigurationsInput) (*request.Request, *s3control.ListStorageLensConfigurationsOutput)",
          "223:  PutAccessPointConfigurationForObjectLambda(*s3control.PutAccessPointConfigurationForObjectLambdaInput) (*s3control.PutAccessPointConfigurationForObjectLambdaOutput, error)",
          "224:  PutAccessPointConfigurationForObjectLambdaWithContext(aws.Context, *s3control.PutAccessPointConfigurationForObjectLambdaInput, ...request.Option) (*s3control.PutAccessPointConfigurationForObjectLambdaOutput, error)",
          "225:  PutAccessPointConfigurationForObjectLambdaRequest(*s3control.PutAccessPointConfigurationForObjectLambdaInput) (*request.Request, *s3control.PutAccessPointConfigurationForObjectLambdaOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:  ListStorageLensConfigurationsPages(*s3control.ListStorageLensConfigurationsInput, func(*s3control.ListStorageLensConfigurationsOutput, bool) bool) error",
          "224:  ListStorageLensConfigurationsPagesWithContext(aws.Context, *s3control.ListStorageLensConfigurationsInput, func(*s3control.ListStorageLensConfigurationsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "45159:  AwsOrganizationsSource *ResourceDataSyncAwsOrganizationsSource `type:\"structure\"`",
          "45163:  IncludeFutureRegions *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45169:  EnableAllOpsDataSources *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45215:  return s",
          "45216: }",
          "45219: func (s *ResourceDataSyncSource) SetIncludeFutureRegions(v bool) *ResourceDataSyncSource {",
          "45220:  s.IncludeFutureRegions = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45229: func (s *ResourceDataSyncSource) SetEnableAllOpsDataSources(v bool) *ResourceDataSyncSource {",
          "45230:  s.EnableAllOpsDataSources = &v",
          "45231:  return s",
          "45232: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45254:  AwsOrganizationsSource *ResourceDataSyncAwsOrganizationsSource `type:\"structure\"`",
          "45258:  IncludeFutureRegions *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45278:  EnableAllOpsDataSources *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45297:  return s",
          "45298: }",
          "45301: func (s *ResourceDataSyncSourceWithState) SetIncludeFutureRegions(v bool) *ResourceDataSyncSourceWithState {",
          "45302:  s.IncludeFutureRegions = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45325: func (s *ResourceDataSyncSourceWithState) SetEnableAllOpsDataSources(v bool) *ResourceDataSyncSourceWithState {",
          "45326:  s.EnableAllOpsDataSources = &v",
          "45327:  return s",
          "45328: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc3cbc74eeb21478df1c804e31b958ca7a0d7d1a",
      "candidate_info": {
        "commit_hash": "cc3cbc74eeb21478df1c804e31b958ca7a0d7d1a",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/cc3cbc74eeb21478df1c804e31b958ca7a0d7d1a",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/apigateway/2015-07-09/api-2.json",
          "models/apis/apigateway/2015-07-09/docs-2.json",
          "models/apis/apigatewayv2/2018-11-29/api-2.json",
          "models/apis/apigatewayv2/2018-11-29/docs-2.json",
          "models/apis/cloudfront/2020-05-31/docs-2.json",
          "models/apis/comprehend/2017-11-27/api-2.json",
          "models/apis/comprehend/2017-11-27/docs-2.json",
          "models/apis/es/2015-01-01/api-2.json",
          "models/apis/es/2015-01-01/docs-2.json",
          "models/apis/kendra/2019-02-03/api-2.json",
          "models/apis/kendra/2019-02-03/docs-2.json",
          "models/apis/transcribe-streaming/2017-10-26/api-2.json",
          "models/apis/transcribe-streaming/2017-10-26/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/apigateway/api.go",
          "service/apigatewayv2/api.go",
          "service/cloudfront/api.go",
          "service/comprehend/api.go",
          "service/comprehend/comprehendiface/interface.go",
          "service/elasticsearchservice/api.go",
          "service/kendra/api.go",
          "service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go"
        ],
        "message": "Release v1.34.26 (2020-09-17) ===\n\n### Service Client Updates\n* `service/apigateway`: Updates service API and documentation\n  * Adds support for mutual TLS authentication for public regional REST Apis\n* `service/apigatewayv2`: Updates service API and documentation\n  * Adds support for mutual TLS authentication and disableAPIExecuteEndpoint for public regional HTTP Apis\n* `service/cloudfront`: Updates service documentation\n  * Documentation updates for CloudFront\n* `service/comprehend`: Updates service API and documentation\n* `service/es`: Updates service API and documentation\n  * Adds support for data plane audit logging in Amazon Elasticsearch Service.\n* `service/kendra`: Updates service API and documentation\n  * Amazon Kendra now supports additional file formats and metadata for FAQs.\n* `service/transcribe-streaming`: Updates service API and documentation",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/apigateway/api.go||service/apigateway/api.go",
          "service/apigatewayv2/api.go||service/apigatewayv2/api.go",
          "service/cloudfront/api.go||service/cloudfront/api.go",
          "service/comprehend/api.go||service/comprehend/api.go",
          "service/comprehend/comprehendiface/interface.go||service/comprehend/comprehendiface/interface.go",
          "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go",
          "service/kendra/api.go||service/kendra/api.go",
          "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go",
          "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:     Protocols: []string{\"https\"},",
          "350:    },",
          "351:    Endpoints: endpoints{",
          "352:     \"ap-east-1\":      endpoint{},",
          "353:     \"ap-northeast-1\": endpoint{},",
          "354:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     \"ca-central-1\":   endpoint{},",
          "359:     \"eu-central-1\":   endpoint{},",
          "360:     \"eu-north-1\":     endpoint{},",
          "361:     \"eu-west-1\":      endpoint{},",
          "362:     \"eu-west-2\":      endpoint{},",
          "363:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "362:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1250:     \"ca-central-1\":   endpoint{},",
          "1251:     \"eu-central-1\":   endpoint{},",
          "1252:     \"eu-north-1\":     endpoint{},",
          "1253:     \"eu-west-1\":      endpoint{},",
          "1254:     \"eu-west-2\":      endpoint{},",
          "1255:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1255:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.25\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.26\"",
          "",
          "---------------"
        ],
        "service/apigateway/api.go||service/apigateway/api.go": [
          "File: service/apigateway/api.go -> service/apigateway/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "12717:  EndpointConfiguration *EndpointConfiguration `locationName:\"endpointConfiguration\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12725:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12800:  return s",
          "12801: }",
          "12804: func (s *CreateDomainNameInput) SetRegionalCertificateArn(v string) *CreateDomainNameInput {",
          "12805:  s.RegionalCertificateArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12812: func (s *CreateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *CreateDomainNameInput {",
          "12813:  s.MutualTlsAuthentication = v",
          "12814:  return s",
          "12815: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15537:  EndpointConfiguration *EndpointConfiguration `locationName:\"endpointConfiguration\" type:\"structure\"`",
          "15541:  RegionalCertificateArn *string `locationName:\"regionalCertificateArn\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15557:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "15627:  return s",
          "15628: }",
          "15631: func (s *DomainName) SetRegionalCertificateArn(v string) *DomainName {",
          "15632:  s.RegionalCertificateArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15651: func (s *DomainName) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *DomainName {",
          "15652:  s.MutualTlsAuthentication = v",
          "15653:  return s",
          "15654: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "20942:  return s",
          "20943: }",
          "20946: type NotFoundException struct {",
          "20947:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20974: type MutualTlsAuthentication struct {",
          "20975:  _ struct{} `type:\"structure\"`",
          "20983:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "20987:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "20993:  TruststoreWarnings []*string `locationName:\"truststoreWarnings\" type:\"list\"`",
          "20994: }",
          "20997: func (s MutualTlsAuthentication) String() string {",
          "20998:  return awsutil.Prettify(s)",
          "20999: }",
          "21002: func (s MutualTlsAuthentication) GoString() string {",
          "21003:  return s.String()",
          "21004: }",
          "21007: func (s *MutualTlsAuthentication) SetTruststoreUri(v string) *MutualTlsAuthentication {",
          "21008:  s.TruststoreUri = &v",
          "21009:  return s",
          "21010: }",
          "21013: func (s *MutualTlsAuthentication) SetTruststoreVersion(v string) *MutualTlsAuthentication {",
          "21014:  s.TruststoreVersion = &v",
          "21015:  return s",
          "21016: }",
          "21019: func (s *MutualTlsAuthentication) SetTruststoreWarnings(v []*string) *MutualTlsAuthentication {",
          "21020:  s.TruststoreWarnings = v",
          "21021:  return s",
          "21022: }",
          "21027: type MutualTlsAuthenticationInput struct {",
          "21028:  _ struct{} `type:\"structure\"`",
          "21036:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "21040:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "21041: }",
          "21044: func (s MutualTlsAuthenticationInput) String() string {",
          "21045:  return awsutil.Prettify(s)",
          "21046: }",
          "21049: func (s MutualTlsAuthenticationInput) GoString() string {",
          "21050:  return s.String()",
          "21051: }",
          "21054: func (s *MutualTlsAuthenticationInput) SetTruststoreUri(v string) *MutualTlsAuthenticationInput {",
          "21055:  s.TruststoreUri = &v",
          "21056:  return s",
          "21057: }",
          "21060: func (s *MutualTlsAuthenticationInput) SetTruststoreVersion(v string) *MutualTlsAuthenticationInput {",
          "21061:  s.TruststoreVersion = &v",
          "21062:  return s",
          "21063: }",
          "",
          "---------------"
        ],
        "service/apigatewayv2/api.go||service/apigatewayv2/api.go": [
          "File: service/apigatewayv2/api.go -> service/apigatewayv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6435:  Description *string `locationName:\"description\" type:\"string\"`",
          "6439:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6441:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6523:  return s",
          "6524: }",
          "6527: func (s *Api) SetDisableSchemaValidation(v bool) *Api {",
          "6528:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6533: func (s *Api) SetDisableExecuteApiEndpoint(v bool) *Api {",
          "6534:  s.DisableExecuteApiEndpoint = &v",
          "6535:  return s",
          "6536: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7007:  Description *string `locationName:\"description\" type:\"string\"`",
          "7009:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7021:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7095:  return s",
          "7096: }",
          "7099: func (s *CreateApiInput) SetDisableSchemaValidation(v bool) *CreateApiInput {",
          "7100:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7113: func (s *CreateApiInput) SetDisableExecuteApiEndpoint(v bool) *CreateApiInput {",
          "7114:  s.DisableExecuteApiEndpoint = &v",
          "7115:  return s",
          "7116: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7303:  Description *string `locationName:\"description\" type:\"string\"`",
          "7305:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "7307:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7325:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7378:  return s",
          "7379: }",
          "7382: func (s *CreateApiOutput) SetDisableSchemaValidation(v bool) *CreateApiOutput {",
          "7383:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7404: func (s *CreateApiOutput) SetDisableExecuteApiEndpoint(v bool) *CreateApiOutput {",
          "7405:  s.DisableExecuteApiEndpoint = &v",
          "7406:  return s",
          "7407: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7845:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "7848:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "7849: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7878:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7883:  return s",
          "7884: }",
          "7887: func (s *CreateDomainNameInput) SetTags(v map[string]*string) *CreateDomainNameInput {",
          "7888:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7920: func (s *CreateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *CreateDomainNameInput {",
          "7921:  s.MutualTlsAuthentication = v",
          "7922:  return s",
          "7923: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7904:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "7907:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "7908: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7948:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7935:  return s",
          "7936: }",
          "7939: func (s *CreateDomainNameOutput) SetTags(v map[string]*string) *CreateDomainNameOutput {",
          "7940:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7983: func (s *CreateDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *CreateDomainNameOutput {",
          "7984:  s.MutualTlsAuthentication = v",
          "7985:  return s",
          "7986: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "10783:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "10786:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "10787: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10836:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "10814:  return s",
          "10815: }",
          "10818: func (s *DomainName) SetTags(v map[string]*string) *DomainName {",
          "10819:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10871: func (s *DomainName) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *DomainName {",
          "10872:  s.MutualTlsAuthentication = v",
          "10873:  return s",
          "10874: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "11299:  Description *string `locationName:\"description\" type:\"string\"`",
          "11301:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "11303:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11360:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "11374:  return s",
          "11375: }",
          "11378: func (s *GetApiOutput) SetDisableSchemaValidation(v bool) *GetApiOutput {",
          "11379:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11439: func (s *GetApiOutput) SetDisableExecuteApiEndpoint(v bool) *GetApiOutput {",
          "11440:  s.DisableExecuteApiEndpoint = &v",
          "11441:  return s",
          "11442: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "12012:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "12015:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "12016: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12084:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "12043:  return s",
          "12044: }",
          "12047: func (s *GetDomainNameOutput) SetTags(v map[string]*string) *GetDomainNameOutput {",
          "12048:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12119: func (s *GetDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *GetDomainNameOutput {",
          "12120:  s.MutualTlsAuthentication = v",
          "12121:  return s",
          "12122: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "14123:  Description *string `locationName:\"description\" type:\"string\"`",
          "14125:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "14127:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14203:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14198:  return s",
          "14199: }",
          "14202: func (s *ImportApiOutput) SetDisableSchemaValidation(v bool) *ImportApiOutput {",
          "14203:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14282: func (s *ImportApiOutput) SetDisableExecuteApiEndpoint(v bool) *ImportApiOutput {",
          "14283:  s.DisableExecuteApiEndpoint = &v",
          "14284:  return s",
          "14285: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "14719:  return s",
          "14720: }",
          "14724: type NotFoundException struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14811: type MutualTlsAuthentication struct {",
          "14812:  _ struct{} `type:\"structure\"`",
          "14820:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "14824:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "14830:  TruststoreWarnings []*string `locationName:\"truststoreWarnings\" type:\"list\"`",
          "14831: }",
          "14834: func (s MutualTlsAuthentication) String() string {",
          "14835:  return awsutil.Prettify(s)",
          "14836: }",
          "14839: func (s MutualTlsAuthentication) GoString() string {",
          "14840:  return s.String()",
          "14841: }",
          "14844: func (s *MutualTlsAuthentication) SetTruststoreUri(v string) *MutualTlsAuthentication {",
          "14845:  s.TruststoreUri = &v",
          "14846:  return s",
          "14847: }",
          "14850: func (s *MutualTlsAuthentication) SetTruststoreVersion(v string) *MutualTlsAuthentication {",
          "14851:  s.TruststoreVersion = &v",
          "14852:  return s",
          "14853: }",
          "14856: func (s *MutualTlsAuthentication) SetTruststoreWarnings(v []*string) *MutualTlsAuthentication {",
          "14857:  s.TruststoreWarnings = v",
          "14858:  return s",
          "14859: }",
          "14864: type MutualTlsAuthenticationInput struct {",
          "14865:  _ struct{} `type:\"structure\"`",
          "14873:  TruststoreUri *string `locationName:\"truststoreUri\" type:\"string\"`",
          "14877:  TruststoreVersion *string `locationName:\"truststoreVersion\" type:\"string\"`",
          "14878: }",
          "14881: func (s MutualTlsAuthenticationInput) String() string {",
          "14882:  return awsutil.Prettify(s)",
          "14883: }",
          "14886: func (s MutualTlsAuthenticationInput) GoString() string {",
          "14887:  return s.String()",
          "14888: }",
          "14891: func (s *MutualTlsAuthenticationInput) SetTruststoreUri(v string) *MutualTlsAuthenticationInput {",
          "14892:  s.TruststoreUri = &v",
          "14893:  return s",
          "14894: }",
          "14897: func (s *MutualTlsAuthenticationInput) SetTruststoreVersion(v string) *MutualTlsAuthenticationInput {",
          "14898:  s.TruststoreVersion = &v",
          "14899:  return s",
          "14900: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "14898:  Description *string `locationName:\"description\" type:\"string\"`",
          "14900:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "14902:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15080:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "14973:  return s",
          "14974: }",
          "14977: func (s *ReimportApiOutput) SetDisableSchemaValidation(v bool) *ReimportApiOutput {",
          "14978:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15159: func (s *ReimportApiOutput) SetDisableExecuteApiEndpoint(v bool) *ReimportApiOutput {",
          "15160:  s.DisableExecuteApiEndpoint = &v",
          "15161:  return s",
          "15162: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "15782:  Description *string `locationName:\"description\" type:\"string\"`",
          "15784:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15972:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "15866:  return s",
          "15867: }",
          "15870: func (s *UpdateApiInput) SetDisableSchemaValidation(v bool) *UpdateApiInput {",
          "15871:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16060: func (s *UpdateApiInput) SetDisableExecuteApiEndpoint(v bool) *UpdateApiInput {",
          "16061:  s.DisableExecuteApiEndpoint = &v",
          "16062:  return s",
          "16063: }",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "16072:  Description *string `locationName:\"description\" type:\"string\"`",
          "16074:  DisableSchemaValidation *bool `locationName:\"disableSchemaValidation\" type:\"boolean\"`",
          "16076:  ImportInfo []*string `locationName:\"importInfo\" type:\"list\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16270:  DisableExecuteApiEndpoint *bool `locationName:\"disableExecuteApiEndpoint\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "16147:  return s",
          "16148: }",
          "16151: func (s *UpdateApiOutput) SetDisableSchemaValidation(v bool) *UpdateApiOutput {",
          "16152:  s.DisableSchemaValidation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16349: func (s *UpdateApiOutput) SetDisableExecuteApiEndpoint(v bool) *UpdateApiOutput {",
          "16350:  s.DisableExecuteApiEndpoint = &v",
          "16351:  return s",
          "16352: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "16618:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "16619: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16827:  MutualTlsAuthentication *MutualTlsAuthenticationInput `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "16656:  return s",
          "16657: }",
          "16659: type UpdateDomainNameOutput struct {",
          "16660:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16869: func (s *UpdateDomainNameInput) SetMutualTlsAuthentication(v *MutualTlsAuthenticationInput) *UpdateDomainNameInput {",
          "16870:  s.MutualTlsAuthentication = v",
          "16871:  return s",
          "16872: }",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "16671:  DomainNameConfigurations []*DomainNameConfiguration `locationName:\"domainNameConfigurations\" type:\"list\"`",
          "16674:  Tags map[string]*string `locationName:\"tags\" type:\"map\"`",
          "16675: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16891:  MutualTlsAuthentication *MutualTlsAuthentication `locationName:\"mutualTlsAuthentication\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "16702:  return s",
          "16703: }",
          "16706: func (s *UpdateDomainNameOutput) SetTags(v map[string]*string) *UpdateDomainNameOutput {",
          "16707:  s.Tags = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16926: func (s *UpdateDomainNameOutput) SetMutualTlsAuthentication(v *MutualTlsAuthentication) *UpdateDomainNameOutput {",
          "16927:  s.MutualTlsAuthentication = v",
          "16928:  return s",
          "16929: }",
          "",
          "---------------"
        ],
        "service/cloudfront/api.go||service/cloudfront/api.go": [
          "File: service/cloudfront/api.go -> service/cloudfront/api.go"
        ],
        "service/comprehend/api.go||service/comprehend/api.go": [
          "File: service/comprehend/api.go -> service/comprehend/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1845:  return out, req.Send()",
          "1846: }",
          "1848: const opDescribeSentimentDetectionJob = \"DescribeSentimentDetectionJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1848: const opDescribePiiEntitiesDetectionJob = \"DescribePiiEntitiesDetectionJob\"",
          "1874: func (c *Comprehend) DescribePiiEntitiesDetectionJobRequest(input *DescribePiiEntitiesDetectionJobInput) (req *request.Request, output *DescribePiiEntitiesDetectionJobOutput) {",
          "1875:  op := &request.Operation{",
          "1876:   Name:       opDescribePiiEntitiesDetectionJob,",
          "1877:   HTTPMethod: \"POST\",",
          "1878:   HTTPPath:   \"/\",",
          "1879:  }",
          "1881:  if input == nil {",
          "1882:   input = &DescribePiiEntitiesDetectionJobInput{}",
          "1883:  }",
          "1885:  output = &DescribePiiEntitiesDetectionJobOutput{}",
          "1886:  req = c.newRequest(op, input, output)",
          "1887:  return",
          "1888: }",
          "1916: func (c *Comprehend) DescribePiiEntitiesDetectionJob(input *DescribePiiEntitiesDetectionJobInput) (*DescribePiiEntitiesDetectionJobOutput, error) {",
          "1917:  req, out := c.DescribePiiEntitiesDetectionJobRequest(input)",
          "1918:  return out, req.Send()",
          "1919: }",
          "1930: func (c *Comprehend) DescribePiiEntitiesDetectionJobWithContext(ctx aws.Context, input *DescribePiiEntitiesDetectionJobInput, opts ...request.Option) (*DescribePiiEntitiesDetectionJobOutput, error) {",
          "1931:  req, out := c.DescribePiiEntitiesDetectionJobRequest(input)",
          "1932:  req.SetContext(ctx)",
          "1933:  req.ApplyOptions(opts...)",
          "1934:  return out, req.Send()",
          "1935: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2299:  return out, req.Send()",
          "2300: }",
          "2302: const opDetectSentiment = \"DetectSentiment\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2391: const opDetectPiiEntities = \"DetectPiiEntities\"",
          "2417: func (c *Comprehend) DetectPiiEntitiesRequest(input *DetectPiiEntitiesInput) (req *request.Request, output *DetectPiiEntitiesOutput) {",
          "2418:  op := &request.Operation{",
          "2419:   Name:       opDetectPiiEntities,",
          "2420:   HTTPMethod: \"POST\",",
          "2421:   HTTPPath:   \"/\",",
          "2422:  }",
          "2424:  if input == nil {",
          "2425:   input = &DetectPiiEntitiesInput{}",
          "2426:  }",
          "2428:  output = &DetectPiiEntitiesOutput{}",
          "2429:  req = c.newRequest(op, input, output)",
          "2430:  return",
          "2431: }",
          "2463: func (c *Comprehend) DetectPiiEntities(input *DetectPiiEntitiesInput) (*DetectPiiEntitiesOutput, error) {",
          "2464:  req, out := c.DetectPiiEntitiesRequest(input)",
          "2465:  return out, req.Send()",
          "2466: }",
          "2477: func (c *Comprehend) DetectPiiEntitiesWithContext(ctx aws.Context, input *DetectPiiEntitiesInput, opts ...request.Option) (*DetectPiiEntitiesOutput, error) {",
          "2478:  req, out := c.DetectPiiEntitiesRequest(input)",
          "2479:  req.SetContext(ctx)",
          "2480:  req.ApplyOptions(opts...)",
          "2481:  return out, req.Send()",
          "2482: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3453:  return p.Err()",
          "3454: }",
          "3456: const opListSentimentDetectionJobs = \"ListSentimentDetectionJobs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3638: const opListPiiEntitiesDetectionJobs = \"ListPiiEntitiesDetectionJobs\"",
          "3664: func (c *Comprehend) ListPiiEntitiesDetectionJobsRequest(input *ListPiiEntitiesDetectionJobsInput) (req *request.Request, output *ListPiiEntitiesDetectionJobsOutput) {",
          "3665:  op := &request.Operation{",
          "3666:   Name:       opListPiiEntitiesDetectionJobs,",
          "3667:   HTTPMethod: \"POST\",",
          "3668:   HTTPPath:   \"/\",",
          "3669:  }",
          "3671:  if input == nil {",
          "3672:   input = &ListPiiEntitiesDetectionJobsInput{}",
          "3673:  }",
          "3675:  output = &ListPiiEntitiesDetectionJobsOutput{}",
          "3676:  req = c.newRequest(op, input, output)",
          "3677:  return",
          "3678: }",
          "3705: func (c *Comprehend) ListPiiEntitiesDetectionJobs(input *ListPiiEntitiesDetectionJobsInput) (*ListPiiEntitiesDetectionJobsOutput, error) {",
          "3706:  req, out := c.ListPiiEntitiesDetectionJobsRequest(input)",
          "3707:  return out, req.Send()",
          "3708: }",
          "3719: func (c *Comprehend) ListPiiEntitiesDetectionJobsWithContext(ctx aws.Context, input *ListPiiEntitiesDetectionJobsInput, opts ...request.Option) (*ListPiiEntitiesDetectionJobsOutput, error) {",
          "3720:  req, out := c.ListPiiEntitiesDetectionJobsRequest(input)",
          "3721:  req.SetContext(ctx)",
          "3722:  req.ApplyOptions(opts...)",
          "3723:  return out, req.Send()",
          "3724: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4212:  return out, req.Send()",
          "4213: }",
          "4242:  op := &request.Operation{",
          "4244:   HTTPMethod: \"POST\",",
          "4245:   HTTPPath:   \"/\",",
          "4246:  }",
          "4248:  if input == nil {",
          "4250:  }",
          "4253:  req = c.newRequest(op, input, output)",
          "4254:  return",
          "4255: }",
          "",
          "[Removed Lines]",
          "4215: const opStartSentimentDetectionJob = \"StartSentimentDetectionJob\"",
          "4241: func (c *Comprehend) StartSentimentDetectionJobRequest(input *StartSentimentDetectionJobInput) (req *request.Request, output *StartSentimentDetectionJobOutput) {",
          "4243:   Name:       opStartSentimentDetectionJob,",
          "4249:   input = &StartSentimentDetectionJobInput{}",
          "4252:  output = &StartSentimentDetectionJobOutput{}",
          "",
          "[Added Lines]",
          "4485: const opStartPiiEntitiesDetectionJob = \"StartPiiEntitiesDetectionJob\"",
          "4511: func (c *Comprehend) StartPiiEntitiesDetectionJobRequest(input *StartPiiEntitiesDetectionJobInput) (req *request.Request, output *StartPiiEntitiesDetectionJobOutput) {",
          "4513:   Name:       opStartPiiEntitiesDetectionJob,",
          "4519:   input = &StartPiiEntitiesDetectionJobInput{}",
          "4522:  output = &StartPiiEntitiesDetectionJobOutput{}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4286:  return out, req.Send()",
          "4287: }",
          "4300:  req.SetContext(ctx)",
          "4301:  req.ApplyOptions(opts...)",
          "4302:  return out, req.Send()",
          "4303: }",
          "4332:  op := &request.Operation{",
          "4334:   HTTPMethod: \"POST\",",
          "4335:   HTTPPath:   \"/\",",
          "4336:  }",
          "4338:  if input == nil {",
          "4340:  }",
          "4343:  req = c.newRequest(op, input, output)",
          "4344:  return",
          "4345: }",
          "",
          "[Removed Lines]",
          "4284: func (c *Comprehend) StartSentimentDetectionJob(input *StartSentimentDetectionJobInput) (*StartSentimentDetectionJobOutput, error) {",
          "4285:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4298: func (c *Comprehend) StartSentimentDetectionJobWithContext(ctx aws.Context, input *StartSentimentDetectionJobInput, opts ...request.Option) (*StartSentimentDetectionJobOutput, error) {",
          "4299:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4305: const opStartTopicsDetectionJob = \"StartTopicsDetectionJob\"",
          "4331: func (c *Comprehend) StartTopicsDetectionJobRequest(input *StartTopicsDetectionJobInput) (req *request.Request, output *StartTopicsDetectionJobOutput) {",
          "4333:   Name:       opStartTopicsDetectionJob,",
          "4339:   input = &StartTopicsDetectionJobInput{}",
          "4342:  output = &StartTopicsDetectionJobOutput{}",
          "",
          "[Added Lines]",
          "4553: func (c *Comprehend) StartPiiEntitiesDetectionJob(input *StartPiiEntitiesDetectionJobInput) (*StartPiiEntitiesDetectionJobOutput, error) {",
          "4554:  req, out := c.StartPiiEntitiesDetectionJobRequest(input)",
          "4567: func (c *Comprehend) StartPiiEntitiesDetectionJobWithContext(ctx aws.Context, input *StartPiiEntitiesDetectionJobInput, opts ...request.Option) (*StartPiiEntitiesDetectionJobOutput, error) {",
          "4568:  req, out := c.StartPiiEntitiesDetectionJobRequest(input)",
          "4574: const opStartSentimentDetectionJob = \"StartSentimentDetectionJob\"",
          "4600: func (c *Comprehend) StartSentimentDetectionJobRequest(input *StartSentimentDetectionJobInput) (req *request.Request, output *StartSentimentDetectionJobOutput) {",
          "4602:   Name:       opStartSentimentDetectionJob,",
          "4608:   input = &StartSentimentDetectionJobInput{}",
          "4611:  output = &StartSentimentDetectionJobOutput{}",
          "4643: func (c *Comprehend) StartSentimentDetectionJob(input *StartSentimentDetectionJobInput) (*StartSentimentDetectionJobOutput, error) {",
          "4644:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4645:  return out, req.Send()",
          "4646: }",
          "4657: func (c *Comprehend) StartSentimentDetectionJobWithContext(ctx aws.Context, input *StartSentimentDetectionJobInput, opts ...request.Option) (*StartSentimentDetectionJobOutput, error) {",
          "4658:  req, out := c.StartSentimentDetectionJobRequest(input)",
          "4659:  req.SetContext(ctx)",
          "4660:  req.ApplyOptions(opts...)",
          "4661:  return out, req.Send()",
          "4662: }",
          "4664: const opStartTopicsDetectionJob = \"StartTopicsDetectionJob\"",
          "4690: func (c *Comprehend) StartTopicsDetectionJobRequest(input *StartTopicsDetectionJobInput) (req *request.Request, output *StartTopicsDetectionJobOutput) {",
          "4691:  op := &request.Operation{",
          "4692:   Name:       opStartTopicsDetectionJob,",
          "4693:   HTTPMethod: \"POST\",",
          "4694:   HTTPPath:   \"/\",",
          "4695:  }",
          "4697:  if input == nil {",
          "4698:   input = &StartTopicsDetectionJobInput{}",
          "4699:  }",
          "4701:  output = &StartTopicsDetectionJobOutput{}",
          "4702:  req = c.newRequest(op, input, output)",
          "4703:  return",
          "4704: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4680:  return out, req.Send()",
          "4681: }",
          "4683: const opStopSentimentDetectionJob = \"StopSentimentDetectionJob\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5042: const opStopPiiEntitiesDetectionJob = \"StopPiiEntitiesDetectionJob\"",
          "5068: func (c *Comprehend) StopPiiEntitiesDetectionJobRequest(input *StopPiiEntitiesDetectionJobInput) (req *request.Request, output *StopPiiEntitiesDetectionJobOutput) {",
          "5069:  op := &request.Operation{",
          "5070:   Name:       opStopPiiEntitiesDetectionJob,",
          "5071:   HTTPMethod: \"POST\",",
          "5072:   HTTPPath:   \"/\",",
          "5073:  }",
          "5075:  if input == nil {",
          "5076:   input = &StopPiiEntitiesDetectionJobInput{}",
          "5077:  }",
          "5079:  output = &StopPiiEntitiesDetectionJobOutput{}",
          "5080:  req = c.newRequest(op, input, output)",
          "5081:  return",
          "5082: }",
          "5106: func (c *Comprehend) StopPiiEntitiesDetectionJob(input *StopPiiEntitiesDetectionJobInput) (*StopPiiEntitiesDetectionJobOutput, error) {",
          "5107:  req, out := c.StopPiiEntitiesDetectionJobRequest(input)",
          "5108:  return out, req.Send()",
          "5109: }",
          "5120: func (c *Comprehend) StopPiiEntitiesDetectionJobWithContext(ctx aws.Context, input *StopPiiEntitiesDetectionJobInput, opts ...request.Option) (*StopPiiEntitiesDetectionJobOutput, error) {",
          "5121:  req, out := c.StopPiiEntitiesDetectionJobRequest(input)",
          "5122:  req.SetContext(ctx)",
          "5123:  req.ApplyOptions(opts...)",
          "5124:  return out, req.Send()",
          "5125: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7458:  return s",
          "7459: }",
          "7461: type DescribeSentimentDetectionJobInput struct {",
          "7462:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7905: type DescribePiiEntitiesDetectionJobInput struct {",
          "7906:  _ struct{} `type:\"structure\"`",
          "7912:  JobId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "7913: }",
          "7916: func (s DescribePiiEntitiesDetectionJobInput) String() string {",
          "7917:  return awsutil.Prettify(s)",
          "7918: }",
          "7921: func (s DescribePiiEntitiesDetectionJobInput) GoString() string {",
          "7922:  return s.String()",
          "7923: }",
          "7926: func (s *DescribePiiEntitiesDetectionJobInput) Validate() error {",
          "7927:  invalidParams := request.ErrInvalidParams{Context: \"DescribePiiEntitiesDetectionJobInput\"}",
          "7928:  if s.JobId == nil {",
          "7929:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "7930:  }",
          "7931:  if s.JobId != nil && len(*s.JobId) < 1 {",
          "7932:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 1))",
          "7933:  }",
          "7935:  if invalidParams.Len() > 0 {",
          "7936:   return invalidParams",
          "7937:  }",
          "7938:  return nil",
          "7939: }",
          "7942: func (s *DescribePiiEntitiesDetectionJobInput) SetJobId(v string) *DescribePiiEntitiesDetectionJobInput {",
          "7943:  s.JobId = &v",
          "7944:  return s",
          "7945: }",
          "7947: type DescribePiiEntitiesDetectionJobOutput struct {",
          "7948:  _ struct{} `type:\"structure\"`",
          "7951:  PiiEntitiesDetectionJobProperties *PiiEntitiesDetectionJobProperties `type:\"structure\"`",
          "7952: }",
          "7955: func (s DescribePiiEntitiesDetectionJobOutput) String() string {",
          "7956:  return awsutil.Prettify(s)",
          "7957: }",
          "7960: func (s DescribePiiEntitiesDetectionJobOutput) GoString() string {",
          "7961:  return s.String()",
          "7962: }",
          "7965: func (s *DescribePiiEntitiesDetectionJobOutput) SetPiiEntitiesDetectionJobProperties(v *PiiEntitiesDetectionJobProperties) *DescribePiiEntitiesDetectionJobOutput {",
          "7966:  s.PiiEntitiesDetectionJobProperties = v",
          "7967:  return s",
          "7968: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7841:  return s",
          "7842: }",
          "7845:  _ struct{} `type:\"structure\"`",
          "7851:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "",
          "[Removed Lines]",
          "7844: type DetectSentimentInput struct {",
          "",
          "[Added Lines]",
          "8353: type DetectPiiEntitiesInput struct {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7858: }",
          "7862:  return awsutil.Prettify(s)",
          "7863: }",
          "7867:  return s.String()",
          "7868: }",
          "7873:  if s.LanguageCode == nil {",
          "7874:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "7875:  }",
          "",
          "[Removed Lines]",
          "7857:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7861: func (s DetectSentimentInput) String() string {",
          "7866: func (s DetectSentimentInput) GoString() string {",
          "7871: func (s *DetectSentimentInput) Validate() error {",
          "7872:  invalidParams := request.ErrInvalidParams{Context: \"DetectSentimentInput\"}",
          "",
          "[Added Lines]",
          "8365:  Text *string `min:\"1\" type:\"string\" required:\"true\"`",
          "8369: func (s DetectPiiEntitiesInput) String() string {",
          "8374: func (s DetectPiiEntitiesInput) GoString() string {",
          "8379: func (s *DetectPiiEntitiesInput) Validate() error {",
          "8380:  invalidParams := request.ErrInvalidParams{Context: \"DetectPiiEntitiesInput\"}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7887: }",
          "7891:  s.LanguageCode = &v",
          "7892:  return s",
          "7893: }",
          "7897:  s.Text = &v",
          "7898:  return s",
          "7899: }",
          "7910: }",
          "7914:  return awsutil.Prettify(s)",
          "7915: }",
          "7919:  return s.String()",
          "7920: }",
          "7931:  return s",
          "7932: }",
          "7935:  _ struct{} `type:\"structure\"`",
          "7948:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "7949: }",
          "7953:  return awsutil.Prettify(s)",
          "7954: }",
          "7958:  return s.String()",
          "7959: }",
          "7963:  invalidParams := request.ErrInvalidParams{Context: \"DetectSyntaxInput\"}",
          "7964:  if s.LanguageCode == nil {",
          "7965:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "",
          "[Removed Lines]",
          "7890: func (s *DetectSentimentInput) SetLanguageCode(v string) *DetectSentimentInput {",
          "7896: func (s *DetectSentimentInput) SetText(v string) *DetectSentimentInput {",
          "7901: type DetectSentimentOutput struct {",
          "7902:  _ struct{} `type:\"structure\" sensitive:\"true\"`",
          "7906:  Sentiment *string `type:\"string\" enum:\"SentimentType\"`",
          "7909:  SentimentScore *SentimentScore `type:\"structure\"`",
          "7913: func (s DetectSentimentOutput) String() string {",
          "7918: func (s DetectSentimentOutput) GoString() string {",
          "7923: func (s *DetectSentimentOutput) SetSentiment(v string) *DetectSentimentOutput {",
          "7924:  s.Sentiment = &v",
          "7925:  return s",
          "7926: }",
          "7929: func (s *DetectSentimentOutput) SetSentimentScore(v *SentimentScore) *DetectSentimentOutput {",
          "7930:  s.SentimentScore = v",
          "7934: type DetectSyntaxInput struct {",
          "7942:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"SyntaxLanguageCode\"`",
          "7952: func (s DetectSyntaxInput) String() string {",
          "7957: func (s DetectSyntaxInput) GoString() string {",
          "7962: func (s *DetectSyntaxInput) Validate() error {",
          "",
          "[Added Lines]",
          "8398: func (s *DetectPiiEntitiesInput) SetLanguageCode(v string) *DetectPiiEntitiesInput {",
          "8404: func (s *DetectPiiEntitiesInput) SetText(v string) *DetectPiiEntitiesInput {",
          "8409: type DetectPiiEntitiesOutput struct {",
          "8410:  _ struct{} `type:\"structure\"`",
          "8415:  Entities []*PiiEntity `type:\"list\"`",
          "8419: func (s DetectPiiEntitiesOutput) String() string {",
          "8424: func (s DetectPiiEntitiesOutput) GoString() string {",
          "8429: func (s *DetectPiiEntitiesOutput) SetEntities(v []*PiiEntity) *DetectPiiEntitiesOutput {",
          "8430:  s.Entities = v",
          "8434: type DetectSentimentInput struct {",
          "8441:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "8451: func (s DetectSentimentInput) String() string {",
          "8456: func (s DetectSentimentInput) GoString() string {",
          "8461: func (s *DetectSentimentInput) Validate() error {",
          "8462:  invalidParams := request.ErrInvalidParams{Context: \"DetectSentimentInput\"}",
          "8463:  if s.LanguageCode == nil {",
          "8464:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "8465:  }",
          "8466:  if s.Text == nil {",
          "8467:   invalidParams.Add(request.NewErrParamRequired(\"Text\"))",
          "8468:  }",
          "8469:  if s.Text != nil && len(*s.Text) < 1 {",
          "8470:   invalidParams.Add(request.NewErrParamMinLen(\"Text\", 1))",
          "8471:  }",
          "8473:  if invalidParams.Len() > 0 {",
          "8474:   return invalidParams",
          "8475:  }",
          "8476:  return nil",
          "8477: }",
          "8480: func (s *DetectSentimentInput) SetLanguageCode(v string) *DetectSentimentInput {",
          "8481:  s.LanguageCode = &v",
          "8482:  return s",
          "8483: }",
          "8486: func (s *DetectSentimentInput) SetText(v string) *DetectSentimentInput {",
          "8487:  s.Text = &v",
          "8488:  return s",
          "8489: }",
          "8491: type DetectSentimentOutput struct {",
          "8492:  _ struct{} `type:\"structure\" sensitive:\"true\"`",
          "8496:  Sentiment *string `type:\"string\" enum:\"SentimentType\"`",
          "8499:  SentimentScore *SentimentScore `type:\"structure\"`",
          "8500: }",
          "8503: func (s DetectSentimentOutput) String() string {",
          "8504:  return awsutil.Prettify(s)",
          "8505: }",
          "8508: func (s DetectSentimentOutput) GoString() string {",
          "8509:  return s.String()",
          "8510: }",
          "8513: func (s *DetectSentimentOutput) SetSentiment(v string) *DetectSentimentOutput {",
          "8514:  s.Sentiment = &v",
          "8515:  return s",
          "8516: }",
          "8519: func (s *DetectSentimentOutput) SetSentimentScore(v *SentimentScore) *DetectSentimentOutput {",
          "8520:  s.SentimentScore = v",
          "8521:  return s",
          "8522: }",
          "8524: type DetectSyntaxInput struct {",
          "8525:  _ struct{} `type:\"structure\"`",
          "8532:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"SyntaxLanguageCode\"`",
          "8538:  Text *string `min:\"1\" type:\"string\" required:\"true\" sensitive:\"true\"`",
          "8539: }",
          "8542: func (s DetectSyntaxInput) String() string {",
          "8543:  return awsutil.Prettify(s)",
          "8544: }",
          "8547: func (s DetectSyntaxInput) GoString() string {",
          "8548:  return s.String()",
          "8549: }",
          "8552: func (s *DetectSyntaxInput) Validate() error {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "11197:  return s",
          "11198: }",
          "11200: type ListSentimentDetectionJobsInput struct {",
          "11201:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11790: type ListPiiEntitiesDetectionJobsInput struct {",
          "11791:  _ struct{} `type:\"structure\"`",
          "11796:  Filter *PiiEntitiesDetectionJobFilter `type:\"structure\"`",
          "11799:  MaxResults *int64 `min:\"1\" type:\"integer\"`",
          "11802:  NextToken *string `min:\"1\" type:\"string\"`",
          "11803: }",
          "11806: func (s ListPiiEntitiesDetectionJobsInput) String() string {",
          "11807:  return awsutil.Prettify(s)",
          "11808: }",
          "11811: func (s ListPiiEntitiesDetectionJobsInput) GoString() string {",
          "11812:  return s.String()",
          "11813: }",
          "11816: func (s *ListPiiEntitiesDetectionJobsInput) Validate() error {",
          "11817:  invalidParams := request.ErrInvalidParams{Context: \"ListPiiEntitiesDetectionJobsInput\"}",
          "11818:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "11819:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "11820:  }",
          "11821:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "11822:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "11823:  }",
          "11824:  if s.Filter != nil {",
          "11825:   if err := s.Filter.Validate(); err != nil {",
          "11826:    invalidParams.AddNested(\"Filter\", err.(request.ErrInvalidParams))",
          "11827:   }",
          "11828:  }",
          "11830:  if invalidParams.Len() > 0 {",
          "11831:   return invalidParams",
          "11832:  }",
          "11833:  return nil",
          "11834: }",
          "11837: func (s *ListPiiEntitiesDetectionJobsInput) SetFilter(v *PiiEntitiesDetectionJobFilter) *ListPiiEntitiesDetectionJobsInput {",
          "11838:  s.Filter = v",
          "11839:  return s",
          "11840: }",
          "11843: func (s *ListPiiEntitiesDetectionJobsInput) SetMaxResults(v int64) *ListPiiEntitiesDetectionJobsInput {",
          "11844:  s.MaxResults = &v",
          "11845:  return s",
          "11846: }",
          "11849: func (s *ListPiiEntitiesDetectionJobsInput) SetNextToken(v string) *ListPiiEntitiesDetectionJobsInput {",
          "11850:  s.NextToken = &v",
          "11851:  return s",
          "11852: }",
          "11854: type ListPiiEntitiesDetectionJobsOutput struct {",
          "11855:  _ struct{} `type:\"structure\"`",
          "11858:  NextToken *string `min:\"1\" type:\"string\"`",
          "11861:  PiiEntitiesDetectionJobPropertiesList []*PiiEntitiesDetectionJobProperties `type:\"list\"`",
          "11862: }",
          "11865: func (s ListPiiEntitiesDetectionJobsOutput) String() string {",
          "11866:  return awsutil.Prettify(s)",
          "11867: }",
          "11870: func (s ListPiiEntitiesDetectionJobsOutput) GoString() string {",
          "11871:  return s.String()",
          "11872: }",
          "11875: func (s *ListPiiEntitiesDetectionJobsOutput) SetNextToken(v string) *ListPiiEntitiesDetectionJobsOutput {",
          "11876:  s.NextToken = &v",
          "11877:  return s",
          "11878: }",
          "11881: func (s *ListPiiEntitiesDetectionJobsOutput) SetPiiEntitiesDetectionJobPropertiesList(v []*PiiEntitiesDetectionJobProperties) *ListPiiEntitiesDetectionJobsOutput {",
          "11882:  s.PiiEntitiesDetectionJobPropertiesList = v",
          "11883:  return s",
          "11884: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "11556:  return s.String()",
          "11557: }",
          "11562:  return s",
          "11563: }",
          "11568:  return s",
          "11569: }",
          "",
          "[Removed Lines]",
          "11560: func (s *PartOfSpeechTag) SetScore(v float64) *PartOfSpeechTag {",
          "11561:  s.Score = &v",
          "11566: func (s *PartOfSpeechTag) SetTag(v string) *PartOfSpeechTag {",
          "11567:  s.Tag = &v",
          "",
          "[Added Lines]",
          "12246: func (s *PartOfSpeechTag) SetScore(v float64) *PartOfSpeechTag {",
          "12247:  s.Score = &v",
          "12248:  return s",
          "12249: }",
          "12252: func (s *PartOfSpeechTag) SetTag(v string) *PartOfSpeechTag {",
          "12253:  s.Tag = &v",
          "12254:  return s",
          "12255: }",
          "12258: type PiiEntitiesDetectionJobFilter struct {",
          "12259:  _ struct{} `type:\"structure\"`",
          "12262:  JobName *string `min:\"1\" type:\"string\"`",
          "12266:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "12271:  SubmitTimeAfter *time.Time `type:\"timestamp\"`",
          "12276:  SubmitTimeBefore *time.Time `type:\"timestamp\"`",
          "12277: }",
          "12280: func (s PiiEntitiesDetectionJobFilter) String() string {",
          "12281:  return awsutil.Prettify(s)",
          "12282: }",
          "12285: func (s PiiEntitiesDetectionJobFilter) GoString() string {",
          "12286:  return s.String()",
          "12287: }",
          "12290: func (s *PiiEntitiesDetectionJobFilter) Validate() error {",
          "12291:  invalidParams := request.ErrInvalidParams{Context: \"PiiEntitiesDetectionJobFilter\"}",
          "12292:  if s.JobName != nil && len(*s.JobName) < 1 {",
          "12293:   invalidParams.Add(request.NewErrParamMinLen(\"JobName\", 1))",
          "12294:  }",
          "12296:  if invalidParams.Len() > 0 {",
          "12297:   return invalidParams",
          "12298:  }",
          "12299:  return nil",
          "12300: }",
          "12303: func (s *PiiEntitiesDetectionJobFilter) SetJobName(v string) *PiiEntitiesDetectionJobFilter {",
          "12304:  s.JobName = &v",
          "12305:  return s",
          "12306: }",
          "12309: func (s *PiiEntitiesDetectionJobFilter) SetJobStatus(v string) *PiiEntitiesDetectionJobFilter {",
          "12310:  s.JobStatus = &v",
          "12311:  return s",
          "12312: }",
          "12315: func (s *PiiEntitiesDetectionJobFilter) SetSubmitTimeAfter(v time.Time) *PiiEntitiesDetectionJobFilter {",
          "12316:  s.SubmitTimeAfter = &v",
          "12317:  return s",
          "12318: }",
          "12321: func (s *PiiEntitiesDetectionJobFilter) SetSubmitTimeBefore(v time.Time) *PiiEntitiesDetectionJobFilter {",
          "12322:  s.SubmitTimeBefore = &v",
          "12323:  return s",
          "12324: }",
          "12327: type PiiEntitiesDetectionJobProperties struct {",
          "12328:  _ struct{} `type:\"structure\"`",
          "12332:  DataAccessRoleArn *string `min:\"20\" type:\"string\"`",
          "12335:  EndTime *time.Time `type:\"timestamp\"`",
          "12338:  InputDataConfig *InputDataConfig `type:\"structure\"`",
          "12341:  JobId *string `min:\"1\" type:\"string\"`",
          "12344:  JobName *string `min:\"1\" type:\"string\"`",
          "12348:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "12351:  LanguageCode *string `type:\"string\" enum:\"LanguageCode\"`",
          "12354:  Message *string `type:\"string\"`",
          "12358:  Mode *string `type:\"string\" enum:\"PiiEntitiesDetectionMode\"`",
          "12362:  OutputDataConfig *PiiOutputDataConfig `type:\"structure\"`",
          "12369:  RedactionConfig *RedactionConfig `type:\"structure\"`",
          "12372:  SubmitTime *time.Time `type:\"timestamp\"`",
          "12373: }",
          "12376: func (s PiiEntitiesDetectionJobProperties) String() string {",
          "12377:  return awsutil.Prettify(s)",
          "12378: }",
          "12381: func (s PiiEntitiesDetectionJobProperties) GoString() string {",
          "12382:  return s.String()",
          "12383: }",
          "12386: func (s *PiiEntitiesDetectionJobProperties) SetDataAccessRoleArn(v string) *PiiEntitiesDetectionJobProperties {",
          "12387:  s.DataAccessRoleArn = &v",
          "12388:  return s",
          "12389: }",
          "12392: func (s *PiiEntitiesDetectionJobProperties) SetEndTime(v time.Time) *PiiEntitiesDetectionJobProperties {",
          "12393:  s.EndTime = &v",
          "12394:  return s",
          "12395: }",
          "12398: func (s *PiiEntitiesDetectionJobProperties) SetInputDataConfig(v *InputDataConfig) *PiiEntitiesDetectionJobProperties {",
          "12399:  s.InputDataConfig = v",
          "12400:  return s",
          "12401: }",
          "12404: func (s *PiiEntitiesDetectionJobProperties) SetJobId(v string) *PiiEntitiesDetectionJobProperties {",
          "12405:  s.JobId = &v",
          "12406:  return s",
          "12407: }",
          "12410: func (s *PiiEntitiesDetectionJobProperties) SetJobName(v string) *PiiEntitiesDetectionJobProperties {",
          "12411:  s.JobName = &v",
          "12412:  return s",
          "12413: }",
          "12416: func (s *PiiEntitiesDetectionJobProperties) SetJobStatus(v string) *PiiEntitiesDetectionJobProperties {",
          "12417:  s.JobStatus = &v",
          "12418:  return s",
          "12419: }",
          "12422: func (s *PiiEntitiesDetectionJobProperties) SetLanguageCode(v string) *PiiEntitiesDetectionJobProperties {",
          "12423:  s.LanguageCode = &v",
          "12424:  return s",
          "12425: }",
          "12428: func (s *PiiEntitiesDetectionJobProperties) SetMessage(v string) *PiiEntitiesDetectionJobProperties {",
          "12429:  s.Message = &v",
          "12430:  return s",
          "12431: }",
          "12434: func (s *PiiEntitiesDetectionJobProperties) SetMode(v string) *PiiEntitiesDetectionJobProperties {",
          "12435:  s.Mode = &v",
          "12436:  return s",
          "12437: }",
          "12440: func (s *PiiEntitiesDetectionJobProperties) SetOutputDataConfig(v *PiiOutputDataConfig) *PiiEntitiesDetectionJobProperties {",
          "12441:  s.OutputDataConfig = v",
          "12442:  return s",
          "12443: }",
          "12446: func (s *PiiEntitiesDetectionJobProperties) SetRedactionConfig(v *RedactionConfig) *PiiEntitiesDetectionJobProperties {",
          "12447:  s.RedactionConfig = v",
          "12448:  return s",
          "12449: }",
          "12452: func (s *PiiEntitiesDetectionJobProperties) SetSubmitTime(v time.Time) *PiiEntitiesDetectionJobProperties {",
          "12453:  s.SubmitTime = &v",
          "12454:  return s",
          "12455: }",
          "12458: type PiiEntity struct {",
          "12459:  _ struct{} `type:\"structure\"`",
          "12466:  BeginOffset *int64 `type:\"integer\"`",
          "12472:  EndOffset *int64 `type:\"integer\"`",
          "12476:  Score *float64 `type:\"float\"`",
          "12479:  Type *string `type:\"string\" enum:\"PiiEntityType\"`",
          "12480: }",
          "12483: func (s PiiEntity) String() string {",
          "12484:  return awsutil.Prettify(s)",
          "12485: }",
          "12488: func (s PiiEntity) GoString() string {",
          "12489:  return s.String()",
          "12490: }",
          "12493: func (s *PiiEntity) SetBeginOffset(v int64) *PiiEntity {",
          "12494:  s.BeginOffset = &v",
          "12495:  return s",
          "12496: }",
          "12499: func (s *PiiEntity) SetEndOffset(v int64) *PiiEntity {",
          "12500:  s.EndOffset = &v",
          "12501:  return s",
          "12502: }",
          "12505: func (s *PiiEntity) SetScore(v float64) *PiiEntity {",
          "12506:  s.Score = &v",
          "12507:  return s",
          "12508: }",
          "12511: func (s *PiiEntity) SetType(v string) *PiiEntity {",
          "12512:  s.Type = &v",
          "12513:  return s",
          "12514: }",
          "12518: type PiiOutputDataConfig struct {",
          "12519:  _ struct{} `type:\"structure\"`",
          "12523:  KmsKeyId *string `type:\"string\"`",
          "12529:  S3Uri *string `type:\"string\" required:\"true\"`",
          "12530: }",
          "12533: func (s PiiOutputDataConfig) String() string {",
          "12534:  return awsutil.Prettify(s)",
          "12535: }",
          "12538: func (s PiiOutputDataConfig) GoString() string {",
          "12539:  return s.String()",
          "12540: }",
          "12543: func (s *PiiOutputDataConfig) SetKmsKeyId(v string) *PiiOutputDataConfig {",
          "12544:  s.KmsKeyId = &v",
          "12545:  return s",
          "12546: }",
          "12549: func (s *PiiOutputDataConfig) SetS3Uri(v string) *PiiOutputDataConfig {",
          "12550:  s.S3Uri = &v",
          "12551:  return s",
          "12552: }",
          "12555: type RedactionConfig struct {",
          "12556:  _ struct{} `type:\"structure\"`",
          "12559:  MaskCharacter *string `min:\"1\" type:\"string\"`",
          "12563:  MaskMode *string `type:\"string\" enum:\"PiiEntitiesDetectionMaskMode\"`",
          "12567:  PiiEntityTypes []*string `type:\"list\"`",
          "12568: }",
          "12571: func (s RedactionConfig) String() string {",
          "12572:  return awsutil.Prettify(s)",
          "12573: }",
          "12576: func (s RedactionConfig) GoString() string {",
          "12577:  return s.String()",
          "12578: }",
          "12581: func (s *RedactionConfig) Validate() error {",
          "12582:  invalidParams := request.ErrInvalidParams{Context: \"RedactionConfig\"}",
          "12583:  if s.MaskCharacter != nil && len(*s.MaskCharacter) < 1 {",
          "12584:   invalidParams.Add(request.NewErrParamMinLen(\"MaskCharacter\", 1))",
          "12585:  }",
          "12587:  if invalidParams.Len() > 0 {",
          "12588:   return invalidParams",
          "12589:  }",
          "12590:  return nil",
          "12591: }",
          "12594: func (s *RedactionConfig) SetMaskCharacter(v string) *RedactionConfig {",
          "12595:  s.MaskCharacter = &v",
          "12596:  return s",
          "12597: }",
          "12600: func (s *RedactionConfig) SetMaskMode(v string) *RedactionConfig {",
          "12601:  s.MaskMode = &v",
          "12606: func (s *RedactionConfig) SetPiiEntityTypes(v []*string) *RedactionConfig {",
          "12607:  s.PiiEntityTypes = v",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "12844:  return s",
          "12845: }",
          "12847: type StartSentimentDetectionJobInput struct {",
          "12848:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13887: type StartPiiEntitiesDetectionJobInput struct {",
          "13888:  _ struct{} `type:\"structure\"`",
          "13892:  ClientRequestToken *string `min:\"1\" type:\"string\" idempotencyToken:\"true\"`",
          "13898:  DataAccessRoleArn *string `min:\"20\" type:\"string\" required:\"true\"`",
          "13903:  InputDataConfig *InputDataConfig `type:\"structure\" required:\"true\"`",
          "13906:  JobName *string `min:\"1\" type:\"string\"`",
          "13911:  LanguageCode *string `type:\"string\" required:\"true\" enum:\"LanguageCode\"`",
          "13917:  Mode *string `type:\"string\" required:\"true\" enum:\"PiiEntitiesDetectionMode\"`",
          "13923:  OutputDataConfig *OutputDataConfig `type:\"structure\" required:\"true\"`",
          "13930:  RedactionConfig *RedactionConfig `type:\"structure\"`",
          "13931: }",
          "13934: func (s StartPiiEntitiesDetectionJobInput) String() string {",
          "13935:  return awsutil.Prettify(s)",
          "13936: }",
          "13939: func (s StartPiiEntitiesDetectionJobInput) GoString() string {",
          "13940:  return s.String()",
          "13941: }",
          "13944: func (s *StartPiiEntitiesDetectionJobInput) Validate() error {",
          "13945:  invalidParams := request.ErrInvalidParams{Context: \"StartPiiEntitiesDetectionJobInput\"}",
          "13946:  if s.ClientRequestToken != nil && len(*s.ClientRequestToken) < 1 {",
          "13947:   invalidParams.Add(request.NewErrParamMinLen(\"ClientRequestToken\", 1))",
          "13948:  }",
          "13949:  if s.DataAccessRoleArn == nil {",
          "13950:   invalidParams.Add(request.NewErrParamRequired(\"DataAccessRoleArn\"))",
          "13951:  }",
          "13952:  if s.DataAccessRoleArn != nil && len(*s.DataAccessRoleArn) < 20 {",
          "13953:   invalidParams.Add(request.NewErrParamMinLen(\"DataAccessRoleArn\", 20))",
          "13954:  }",
          "13955:  if s.InputDataConfig == nil {",
          "13956:   invalidParams.Add(request.NewErrParamRequired(\"InputDataConfig\"))",
          "13957:  }",
          "13958:  if s.JobName != nil && len(*s.JobName) < 1 {",
          "13959:   invalidParams.Add(request.NewErrParamMinLen(\"JobName\", 1))",
          "13960:  }",
          "13961:  if s.LanguageCode == nil {",
          "13962:   invalidParams.Add(request.NewErrParamRequired(\"LanguageCode\"))",
          "13963:  }",
          "13964:  if s.Mode == nil {",
          "13965:   invalidParams.Add(request.NewErrParamRequired(\"Mode\"))",
          "13966:  }",
          "13967:  if s.OutputDataConfig == nil {",
          "13968:   invalidParams.Add(request.NewErrParamRequired(\"OutputDataConfig\"))",
          "13969:  }",
          "13970:  if s.InputDataConfig != nil {",
          "13971:   if err := s.InputDataConfig.Validate(); err != nil {",
          "13972:    invalidParams.AddNested(\"InputDataConfig\", err.(request.ErrInvalidParams))",
          "13973:   }",
          "13974:  }",
          "13975:  if s.OutputDataConfig != nil {",
          "13976:   if err := s.OutputDataConfig.Validate(); err != nil {",
          "13977:    invalidParams.AddNested(\"OutputDataConfig\", err.(request.ErrInvalidParams))",
          "13978:   }",
          "13979:  }",
          "13980:  if s.RedactionConfig != nil {",
          "13981:   if err := s.RedactionConfig.Validate(); err != nil {",
          "13982:    invalidParams.AddNested(\"RedactionConfig\", err.(request.ErrInvalidParams))",
          "13983:   }",
          "13984:  }",
          "13986:  if invalidParams.Len() > 0 {",
          "13987:   return invalidParams",
          "13988:  }",
          "13989:  return nil",
          "13990: }",
          "13993: func (s *StartPiiEntitiesDetectionJobInput) SetClientRequestToken(v string) *StartPiiEntitiesDetectionJobInput {",
          "13994:  s.ClientRequestToken = &v",
          "13995:  return s",
          "13996: }",
          "13999: func (s *StartPiiEntitiesDetectionJobInput) SetDataAccessRoleArn(v string) *StartPiiEntitiesDetectionJobInput {",
          "14000:  s.DataAccessRoleArn = &v",
          "14001:  return s",
          "14002: }",
          "14005: func (s *StartPiiEntitiesDetectionJobInput) SetInputDataConfig(v *InputDataConfig) *StartPiiEntitiesDetectionJobInput {",
          "14006:  s.InputDataConfig = v",
          "14007:  return s",
          "14008: }",
          "14011: func (s *StartPiiEntitiesDetectionJobInput) SetJobName(v string) *StartPiiEntitiesDetectionJobInput {",
          "14012:  s.JobName = &v",
          "14013:  return s",
          "14014: }",
          "14017: func (s *StartPiiEntitiesDetectionJobInput) SetLanguageCode(v string) *StartPiiEntitiesDetectionJobInput {",
          "14018:  s.LanguageCode = &v",
          "14019:  return s",
          "14020: }",
          "14023: func (s *StartPiiEntitiesDetectionJobInput) SetMode(v string) *StartPiiEntitiesDetectionJobInput {",
          "14024:  s.Mode = &v",
          "14025:  return s",
          "14026: }",
          "14029: func (s *StartPiiEntitiesDetectionJobInput) SetOutputDataConfig(v *OutputDataConfig) *StartPiiEntitiesDetectionJobInput {",
          "14030:  s.OutputDataConfig = v",
          "14031:  return s",
          "14032: }",
          "14035: func (s *StartPiiEntitiesDetectionJobInput) SetRedactionConfig(v *RedactionConfig) *StartPiiEntitiesDetectionJobInput {",
          "14036:  s.RedactionConfig = v",
          "14037:  return s",
          "14038: }",
          "14040: type StartPiiEntitiesDetectionJobOutput struct {",
          "14041:  _ struct{} `type:\"structure\"`",
          "14044:  JobId *string `min:\"1\" type:\"string\"`",
          "14047:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "14048: }",
          "14051: func (s StartPiiEntitiesDetectionJobOutput) String() string {",
          "14052:  return awsutil.Prettify(s)",
          "14053: }",
          "14056: func (s StartPiiEntitiesDetectionJobOutput) GoString() string {",
          "14057:  return s.String()",
          "14058: }",
          "14061: func (s *StartPiiEntitiesDetectionJobOutput) SetJobId(v string) *StartPiiEntitiesDetectionJobOutput {",
          "14062:  s.JobId = &v",
          "14063:  return s",
          "14064: }",
          "14067: func (s *StartPiiEntitiesDetectionJobOutput) SetJobStatus(v string) *StartPiiEntitiesDetectionJobOutput {",
          "14068:  s.JobStatus = &v",
          "14069:  return s",
          "14070: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "13456:  return s",
          "13457: }",
          "13459: type StopSentimentDetectionJobInput struct {",
          "13460:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14684: type StopPiiEntitiesDetectionJobInput struct {",
          "14685:  _ struct{} `type:\"structure\"`",
          "14690:  JobId *string `min:\"1\" type:\"string\" required:\"true\"`",
          "14691: }",
          "14694: func (s StopPiiEntitiesDetectionJobInput) String() string {",
          "14695:  return awsutil.Prettify(s)",
          "14696: }",
          "14699: func (s StopPiiEntitiesDetectionJobInput) GoString() string {",
          "14700:  return s.String()",
          "14701: }",
          "14704: func (s *StopPiiEntitiesDetectionJobInput) Validate() error {",
          "14705:  invalidParams := request.ErrInvalidParams{Context: \"StopPiiEntitiesDetectionJobInput\"}",
          "14706:  if s.JobId == nil {",
          "14707:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "14708:  }",
          "14709:  if s.JobId != nil && len(*s.JobId) < 1 {",
          "14710:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 1))",
          "14711:  }",
          "14713:  if invalidParams.Len() > 0 {",
          "14714:   return invalidParams",
          "14715:  }",
          "14716:  return nil",
          "14717: }",
          "14720: func (s *StopPiiEntitiesDetectionJobInput) SetJobId(v string) *StopPiiEntitiesDetectionJobInput {",
          "14721:  s.JobId = &v",
          "14722:  return s",
          "14723: }",
          "14725: type StopPiiEntitiesDetectionJobOutput struct {",
          "14726:  _ struct{} `type:\"structure\"`",
          "14729:  JobId *string `min:\"1\" type:\"string\"`",
          "14732:  JobStatus *string `type:\"string\" enum:\"JobStatus\"`",
          "14733: }",
          "14736: func (s StopPiiEntitiesDetectionJobOutput) String() string {",
          "14737:  return awsutil.Prettify(s)",
          "14738: }",
          "14741: func (s StopPiiEntitiesDetectionJobOutput) GoString() string {",
          "14742:  return s.String()",
          "14743: }",
          "14746: func (s *StopPiiEntitiesDetectionJobOutput) SetJobId(v string) *StopPiiEntitiesDetectionJobOutput {",
          "14747:  s.JobId = &v",
          "14748:  return s",
          "14749: }",
          "14752: func (s *StopPiiEntitiesDetectionJobOutput) SetJobStatus(v string) *StopPiiEntitiesDetectionJobOutput {",
          "14753:  s.JobStatus = &v",
          "14754:  return s",
          "14755: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "14851:  }",
          "14852: }",
          "14854: const (",
          "14856:  SentimentTypePositive = \"POSITIVE\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16152: const (",
          "16154:  PiiEntitiesDetectionMaskModeMask = \"MASK\"",
          "16157:  PiiEntitiesDetectionMaskModeReplaceWithPiiEntityType = \"REPLACE_WITH_PII_ENTITY_TYPE\"",
          "16158: )",
          "16161: func PiiEntitiesDetectionMaskMode_Values() []string {",
          "16162:  return []string{",
          "16163:   PiiEntitiesDetectionMaskModeMask,",
          "16164:   PiiEntitiesDetectionMaskModeReplaceWithPiiEntityType,",
          "16165:  }",
          "16166: }",
          "16168: const (",
          "16170:  PiiEntitiesDetectionModeOnlyRedaction = \"ONLY_REDACTION\"",
          "16173:  PiiEntitiesDetectionModeOnlyOffsets = \"ONLY_OFFSETS\"",
          "16174: )",
          "16177: func PiiEntitiesDetectionMode_Values() []string {",
          "16178:  return []string{",
          "16179:   PiiEntitiesDetectionModeOnlyRedaction,",
          "16180:   PiiEntitiesDetectionModeOnlyOffsets,",
          "16181:  }",
          "16182: }",
          "16184: const (",
          "16186:  PiiEntityTypeBankAccountNumber = \"BANK_ACCOUNT_NUMBER\"",
          "16189:  PiiEntityTypeBankRouting = \"BANK_ROUTING\"",
          "16192:  PiiEntityTypeCreditDebitNumber = \"CREDIT_DEBIT_NUMBER\"",
          "16195:  PiiEntityTypeCreditDebitCvv = \"CREDIT_DEBIT_CVV\"",
          "16198:  PiiEntityTypeCreditDebitExpiry = \"CREDIT_DEBIT_EXPIRY\"",
          "16201:  PiiEntityTypePin = \"PIN\"",
          "16204:  PiiEntityTypeEmail = \"EMAIL\"",
          "16207:  PiiEntityTypeAddress = \"ADDRESS\"",
          "16210:  PiiEntityTypeName = \"NAME\"",
          "16213:  PiiEntityTypePhone = \"PHONE\"",
          "16216:  PiiEntityTypeSsn = \"SSN\"",
          "16219:  PiiEntityTypeDateTime = \"DATE_TIME\"",
          "16222:  PiiEntityTypePassportNumber = \"PASSPORT_NUMBER\"",
          "16225:  PiiEntityTypeDriverId = \"DRIVER_ID\"",
          "16228:  PiiEntityTypeUrl = \"URL\"",
          "16231:  PiiEntityTypeAge = \"AGE\"",
          "16234:  PiiEntityTypeUsername = \"USERNAME\"",
          "16237:  PiiEntityTypePassword = \"PASSWORD\"",
          "16240:  PiiEntityTypeAwsAccessKey = \"AWS_ACCESS_KEY\"",
          "16243:  PiiEntityTypeAwsSecretKey = \"AWS_SECRET_KEY\"",
          "16246:  PiiEntityTypeIpAddress = \"IP_ADDRESS\"",
          "16249:  PiiEntityTypeMacAddress = \"MAC_ADDRESS\"",
          "16252:  PiiEntityTypeAll = \"ALL\"",
          "16253: )",
          "16256: func PiiEntityType_Values() []string {",
          "16257:  return []string{",
          "16258:   PiiEntityTypeBankAccountNumber,",
          "16259:   PiiEntityTypeBankRouting,",
          "16260:   PiiEntityTypeCreditDebitNumber,",
          "16261:   PiiEntityTypeCreditDebitCvv,",
          "16262:   PiiEntityTypeCreditDebitExpiry,",
          "16263:   PiiEntityTypePin,",
          "16264:   PiiEntityTypeEmail,",
          "16265:   PiiEntityTypeAddress,",
          "16266:   PiiEntityTypeName,",
          "16267:   PiiEntityTypePhone,",
          "16268:   PiiEntityTypeSsn,",
          "16269:   PiiEntityTypeDateTime,",
          "16270:   PiiEntityTypePassportNumber,",
          "16271:   PiiEntityTypeDriverId,",
          "16272:   PiiEntityTypeUrl,",
          "16273:   PiiEntityTypeAge,",
          "16274:   PiiEntityTypeUsername,",
          "16275:   PiiEntityTypePassword,",
          "16276:   PiiEntityTypeAwsAccessKey,",
          "16277:   PiiEntityTypeAwsSecretKey,",
          "16278:   PiiEntityTypeIpAddress,",
          "16279:   PiiEntityTypeMacAddress,",
          "16280:   PiiEntityTypeAll,",
          "16281:  }",
          "16282: }",
          "",
          "---------------"
        ],
        "service/comprehend/comprehendiface/interface.go||service/comprehend/comprehendiface/interface.go": [
          "File: service/comprehend/comprehendiface/interface.go -> service/comprehend/comprehendiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  DescribeKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.DescribeKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.DescribeKeyPhrasesDetectionJobOutput, error)",
          "137:  DescribeKeyPhrasesDetectionJobRequest(*comprehend.DescribeKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.DescribeKeyPhrasesDetectionJobOutput)",
          "139:  DescribeSentimentDetectionJob(*comprehend.DescribeSentimentDetectionJobInput) (*comprehend.DescribeSentimentDetectionJobOutput, error)",
          "140:  DescribeSentimentDetectionJobWithContext(aws.Context, *comprehend.DescribeSentimentDetectionJobInput, ...request.Option) (*comprehend.DescribeSentimentDetectionJobOutput, error)",
          "141:  DescribeSentimentDetectionJobRequest(*comprehend.DescribeSentimentDetectionJobInput) (*request.Request, *comprehend.DescribeSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:  DescribePiiEntitiesDetectionJob(*comprehend.DescribePiiEntitiesDetectionJobInput) (*comprehend.DescribePiiEntitiesDetectionJobOutput, error)",
          "140:  DescribePiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.DescribePiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.DescribePiiEntitiesDetectionJobOutput, error)",
          "141:  DescribePiiEntitiesDetectionJobRequest(*comprehend.DescribePiiEntitiesDetectionJobInput) (*request.Request, *comprehend.DescribePiiEntitiesDetectionJobOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:  DetectKeyPhrasesWithContext(aws.Context, *comprehend.DetectKeyPhrasesInput, ...request.Option) (*comprehend.DetectKeyPhrasesOutput, error)",
          "157:  DetectKeyPhrasesRequest(*comprehend.DetectKeyPhrasesInput) (*request.Request, *comprehend.DetectKeyPhrasesOutput)",
          "159:  DetectSentiment(*comprehend.DetectSentimentInput) (*comprehend.DetectSentimentOutput, error)",
          "160:  DetectSentimentWithContext(aws.Context, *comprehend.DetectSentimentInput, ...request.Option) (*comprehend.DetectSentimentOutput, error)",
          "161:  DetectSentimentRequest(*comprehend.DetectSentimentInput) (*request.Request, *comprehend.DetectSentimentOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:  DetectPiiEntities(*comprehend.DetectPiiEntitiesInput) (*comprehend.DetectPiiEntitiesOutput, error)",
          "164:  DetectPiiEntitiesWithContext(aws.Context, *comprehend.DetectPiiEntitiesInput, ...request.Option) (*comprehend.DetectPiiEntitiesOutput, error)",
          "165:  DetectPiiEntitiesRequest(*comprehend.DetectPiiEntitiesInput) (*request.Request, *comprehend.DetectPiiEntitiesOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:  ListKeyPhrasesDetectionJobsPages(*comprehend.ListKeyPhrasesDetectionJobsInput, func(*comprehend.ListKeyPhrasesDetectionJobsOutput, bool) bool) error",
          "211:  ListKeyPhrasesDetectionJobsPagesWithContext(aws.Context, *comprehend.ListKeyPhrasesDetectionJobsInput, func(*comprehend.ListKeyPhrasesDetectionJobsOutput, bool) bool, ...request.Option) error",
          "213:  ListSentimentDetectionJobs(*comprehend.ListSentimentDetectionJobsInput) (*comprehend.ListSentimentDetectionJobsOutput, error)",
          "214:  ListSentimentDetectionJobsWithContext(aws.Context, *comprehend.ListSentimentDetectionJobsInput, ...request.Option) (*comprehend.ListSentimentDetectionJobsOutput, error)",
          "215:  ListSentimentDetectionJobsRequest(*comprehend.ListSentimentDetectionJobsInput) (*request.Request, *comprehend.ListSentimentDetectionJobsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:  ListPiiEntitiesDetectionJobs(*comprehend.ListPiiEntitiesDetectionJobsInput) (*comprehend.ListPiiEntitiesDetectionJobsOutput, error)",
          "222:  ListPiiEntitiesDetectionJobsWithContext(aws.Context, *comprehend.ListPiiEntitiesDetectionJobsInput, ...request.Option) (*comprehend.ListPiiEntitiesDetectionJobsOutput, error)",
          "223:  ListPiiEntitiesDetectionJobsRequest(*comprehend.ListPiiEntitiesDetectionJobsInput) (*request.Request, *comprehend.ListPiiEntitiesDetectionJobsOutput)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "244:  StartKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.StartKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.StartKeyPhrasesDetectionJobOutput, error)",
          "245:  StartKeyPhrasesDetectionJobRequest(*comprehend.StartKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.StartKeyPhrasesDetectionJobOutput)",
          "247:  StartSentimentDetectionJob(*comprehend.StartSentimentDetectionJobInput) (*comprehend.StartSentimentDetectionJobOutput, error)",
          "248:  StartSentimentDetectionJobWithContext(aws.Context, *comprehend.StartSentimentDetectionJobInput, ...request.Option) (*comprehend.StartSentimentDetectionJobOutput, error)",
          "249:  StartSentimentDetectionJobRequest(*comprehend.StartSentimentDetectionJobInput) (*request.Request, *comprehend.StartSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:  StartPiiEntitiesDetectionJob(*comprehend.StartPiiEntitiesDetectionJobInput) (*comprehend.StartPiiEntitiesDetectionJobOutput, error)",
          "260:  StartPiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.StartPiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.StartPiiEntitiesDetectionJobOutput, error)",
          "261:  StartPiiEntitiesDetectionJobRequest(*comprehend.StartPiiEntitiesDetectionJobInput) (*request.Request, *comprehend.StartPiiEntitiesDetectionJobOutput)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "264:  StopKeyPhrasesDetectionJobWithContext(aws.Context, *comprehend.StopKeyPhrasesDetectionJobInput, ...request.Option) (*comprehend.StopKeyPhrasesDetectionJobOutput, error)",
          "265:  StopKeyPhrasesDetectionJobRequest(*comprehend.StopKeyPhrasesDetectionJobInput) (*request.Request, *comprehend.StopKeyPhrasesDetectionJobOutput)",
          "267:  StopSentimentDetectionJob(*comprehend.StopSentimentDetectionJobInput) (*comprehend.StopSentimentDetectionJobOutput, error)",
          "268:  StopSentimentDetectionJobWithContext(aws.Context, *comprehend.StopSentimentDetectionJobInput, ...request.Option) (*comprehend.StopSentimentDetectionJobOutput, error)",
          "269:  StopSentimentDetectionJobRequest(*comprehend.StopSentimentDetectionJobInput) (*request.Request, *comprehend.StopSentimentDetectionJobOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:  StopPiiEntitiesDetectionJob(*comprehend.StopPiiEntitiesDetectionJobInput) (*comprehend.StopPiiEntitiesDetectionJobOutput, error)",
          "284:  StopPiiEntitiesDetectionJobWithContext(aws.Context, *comprehend.StopPiiEntitiesDetectionJobInput, ...request.Option) (*comprehend.StopPiiEntitiesDetectionJobOutput, error)",
          "285:  StopPiiEntitiesDetectionJobRequest(*comprehend.StopPiiEntitiesDetectionJobInput) (*request.Request, *comprehend.StopPiiEntitiesDetectionJobOutput)",
          "",
          "---------------"
        ],
        "service/elasticsearchservice/api.go||service/elasticsearchservice/api.go": [
          "File: service/elasticsearchservice/api.go -> service/elasticsearchservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "11311:  LogTypeEsApplicationLogs = \"ES_APPLICATION_LOGS\"",
          "11312: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11317:  LogTypeAuditLogs = \"AUDIT_LOGS\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11317:   LogTypeIndexSlowLogs,",
          "11318:   LogTypeSearchSlowLogs,",
          "11319:   LogTypeEsApplicationLogs,",
          "11320:  }",
          "11321: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11326:   LogTypeAuditLogs,",
          "",
          "---------------"
        ],
        "service/kendra/api.go||service/kendra/api.go": [
          "File: service/kendra/api.go -> service/kendra/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3642:  Description *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3650:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3733:  return s",
          "3734: }",
          "3737: func (s *CreateFaqInput) SetIndexId(v string) *CreateFaqInput {",
          "3738:  s.IndexId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3745: func (s *CreateFaqInput) SetFileFormat(v string) *CreateFaqInput {",
          "3746:  s.FileFormat = &v",
          "3747:  return s",
          "3748: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5057:  ErrorMessage *string `min:\"1\" type:\"string\"`",
          "5060:  Id *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5074:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5107:  return s",
          "5108: }",
          "5111: func (s *DescribeFaqOutput) SetId(v string) *DescribeFaqOutput {",
          "5112:  s.Id = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5128: func (s *DescribeFaqOutput) SetFileFormat(v string) *DescribeFaqOutput {",
          "5129:  s.FileFormat = &v",
          "5130:  return s",
          "5131: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5861:  CreatedAt *time.Time `type:\"timestamp\"`",
          "5864:  Id *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5887:  FileFormat *string `type:\"string\" enum:\"FaqFileFormat\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5890:  return s",
          "5891: }",
          "5894: func (s *FaqSummary) SetId(v string) *FaqSummary {",
          "5895:  s.Id = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5920: func (s *FaqSummary) SetFileFormat(v string) *FaqSummary {",
          "5921:  s.FileFormat = &v",
          "5922:  return s",
          "5923: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "10404:  }",
          "10405: }",
          "10407: const (",
          "10409:  FaqStatusCreating = \"CREATING\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10439: const (",
          "10441:  FaqFileFormatCsv = \"CSV\"",
          "10444:  FaqFileFormatCsvWithHeader = \"CSV_WITH_HEADER\"",
          "10447:  FaqFileFormatJson = \"JSON\"",
          "10448: )",
          "10451: func FaqFileFormat_Values() []string {",
          "10452:  return []string{",
          "10453:   FaqFileFormatCsv,",
          "10454:   FaqFileFormatCsvWithHeader,",
          "10455:   FaqFileFormatJson,",
          "10456:  }",
          "10457: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/api.go||service/transcribestreamingservice/api.go": [
          "File: service/transcribestreamingservice/api.go -> service/transcribestreamingservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:  Alternatives []*Alternative `type:\"list\"`",
          "964:  EndTime *float64 `type:\"double\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "967:  ChannelId *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "995:  return s",
          "996: }",
          "999: func (s *Result) SetEndTime(v float64) *Result {",
          "1000:  s.EndTime = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1006: func (s *Result) SetChannelId(v string) *Result {",
          "1007:  s.ChannelId = &v",
          "1008:  return s",
          "1009: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1107: type StartStreamTranscriptionInput struct {",
          "1108:  _ struct{} `type:\"structure\" payload:\"AudioStream\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1131:  EnableChannelIdentification *bool `location:\"header\" locationName:\"x-amzn-transcribe-enable-channel-identification\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1124:  MediaSampleRateHertz *int64 `location:\"header\" locationName:\"x-amzn-transcribe-sample-rate\" min:\"8000\" type:\"integer\" required:\"true\"`",
          "1132:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "1129:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Added Lines]",
          "1150:  NumberOfChannels *int64 `location:\"header\" locationName:\"x-amzn-transcribe-number-of-channels\" min:\"2\" type:\"integer\"`",
          "1155:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" min:\"36\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1171:  if s.MediaSampleRateHertz != nil && *s.MediaSampleRateHertz < 8000 {",
          "1172:   invalidParams.Add(request.NewErrParamMinValue(\"MediaSampleRateHertz\", 8000))",
          "1173:  }",
          "1174:  if s.VocabularyFilterName != nil && len(*s.VocabularyFilterName) < 1 {",
          "1175:   invalidParams.Add(request.NewErrParamMinLen(\"VocabularyFilterName\", 1))",
          "1176:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1200:  if s.NumberOfChannels != nil && *s.NumberOfChannels < 2 {",
          "1201:   invalidParams.Add(request.NewErrParamMinValue(\"NumberOfChannels\", 2))",
          "1202:  }",
          "1203:  if s.SessionId != nil && len(*s.SessionId) < 36 {",
          "1204:   invalidParams.Add(request.NewErrParamMinLen(\"SessionId\", 36))",
          "1205:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1184:  return nil",
          "1185: }",
          "1188: func (s *StartStreamTranscriptionInput) SetLanguageCode(v string) *StartStreamTranscriptionInput {",
          "1189:  s.LanguageCode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1220: func (s *StartStreamTranscriptionInput) SetEnableChannelIdentification(v bool) *StartStreamTranscriptionInput {",
          "1221:  s.EnableChannelIdentification = &v",
          "1222:  return s",
          "1223: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1202:  return s",
          "1203: }",
          "1206: func (s *StartStreamTranscriptionInput) SetSessionId(v string) *StartStreamTranscriptionInput {",
          "1207:  s.SessionId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1244: func (s *StartStreamTranscriptionInput) SetNumberOfChannels(v int64) *StartStreamTranscriptionInput {",
          "1245:  s.NumberOfChannels = &v",
          "1246:  return s",
          "1247: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1238:  eventStream *StartStreamTranscriptionEventStream",
          "1241:  LanguageCode *string `location:\"header\" locationName:\"x-amzn-transcribe-language-code\" type:\"string\" enum:\"LanguageCode\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1285:  EnableChannelIdentification *bool `location:\"header\" locationName:\"x-amzn-transcribe-enable-channel-identification\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1248:  MediaSampleRateHertz *int64 `location:\"header\" locationName:\"x-amzn-transcribe-sample-rate\" min:\"8000\" type:\"integer\"`",
          "1251:  RequestId *string `location:\"header\" locationName:\"x-amzn-request-id\" type:\"string\"`",
          "1257:  ShowSpeakerLabel *bool `location:\"header\" locationName:\"x-amzn-transcribe-show-speaker-label\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "1254:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" type:\"string\"`",
          "",
          "[Added Lines]",
          "1298:  NumberOfChannels *int64 `location:\"header\" locationName:\"x-amzn-transcribe-number-of-channels\" min:\"2\" type:\"integer\"`",
          "1304:  SessionId *string `location:\"header\" locationName:\"x-amzn-transcribe-session-id\" min:\"36\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1276:  return s.String()",
          "1277: }",
          "1280: func (s *StartStreamTranscriptionOutput) SetLanguageCode(v string) *StartStreamTranscriptionOutput {",
          "1281:  s.LanguageCode = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1330: func (s *StartStreamTranscriptionOutput) SetEnableChannelIdentification(v bool) *StartStreamTranscriptionOutput {",
          "1331:  s.EnableChannelIdentification = &v",
          "1332:  return s",
          "1333: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1294:  return s",
          "1295: }",
          "1298: func (s *StartStreamTranscriptionOutput) SetRequestId(v string) *StartStreamTranscriptionOutput {",
          "1299:  s.RequestId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1354: func (s *StartStreamTranscriptionOutput) SetNumberOfChannels(v int64) *StartStreamTranscriptionOutput {",
          "1355:  s.NumberOfChannels = &v",
          "1356:  return s",
          "1357: }",
          "",
          "---------------"
        ],
        "service/transcribestreamingservice/eventstream_test.go||service/transcribestreamingservice/eventstream_test.go": [
          "File: service/transcribestreamingservice/eventstream_test.go -> service/transcribestreamingservice/eventstream_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         Transcript: aws.String(\"string value goes here\"),",
          "316:        },",
          "317:       },",
          "318:       EndTime:   aws.Float64(123.45),",
          "319:       IsPartial: aws.Bool(true),",
          "320:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:         Transcript: aws.String(\"string value goes here\"),",
          "411:        },",
          "412:       },",
          "413:       EndTime:   aws.Float64(123.45),",
          "414:       IsPartial: aws.Bool(true),",
          "415:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "505:         Transcript: aws.String(\"string value goes here\"),",
          "506:        },",
          "507:       },",
          "508:       EndTime:   aws.Float64(123.45),",
          "509:       IsPartial: aws.Bool(true),",
          "510:       ResultId:  aws.String(\"string value goes here\"),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:       ChannelId: aws.String(\"string value goes here\"),",
          "",
          "---------------"
        ]
      }
    }
  ]
}