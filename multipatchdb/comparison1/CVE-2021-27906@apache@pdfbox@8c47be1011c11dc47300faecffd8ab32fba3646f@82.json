{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "991c9e4260e68df82a191094be4ee2d160ea45fb",
      "candidate_info": {
        "commit_hash": "991c9e4260e68df82a191094be4ee2d160ea45fb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/991c9e4260e68df82a191094be4ee2d160ea45fb",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java"
        ],
        "message": "PDFBOX-2941: restore code, type 1 fonts are not vector fonts in 2.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889509 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java||debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java||debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java -> debugger/src/main/java/org/apache/pdfbox/debugger/fontencodingpane/SimpleFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:                 glyphs[index][2] = font.toUnicode(index);",
          "75:                 try",
          "76:                 {",
          "79:                 }",
          "80:                 catch (IOException ex)",
          "81:                 {",
          "",
          "[Removed Lines]",
          "78:                     glyphs[index][3] = ((PDVectorFont) font).getPath(index);",
          "",
          "[Added Lines]",
          "77:                     if (font instanceof PDVectorFont)",
          "78:                     {",
          "80:                         glyphs[index][3] = ((PDVectorFont) font).getPath(index);",
          "81:                     }",
          "82:                     else",
          "83:                     {",
          "85:                         glyphs[index][3] = font.getPath(glyphName);",
          "86:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8925d919bd918ab017ebb2b2fa8c105d575148f4",
      "candidate_info": {
        "commit_hash": "8925d919bd918ab017ebb2b2fa8c105d575148f4",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/8925d919bd918ab017ebb2b2fa8c105d575148f4",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889588 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "519:         if (isDynamicXfa(srcCatalog.getAcroForm()))",
          "520:         {",
          "521:             throw new IOException(\"Error: can't merge source document containing dynamic XFA form content.\");",
          "524:         PDDocumentInformation destInfo = destination.getDocumentInformation();",
          "525:         PDDocumentInformation srcInfo = source.getDocumentInformation();",
          "526:         mergeInto(srcInfo.getCOSObject(), destInfo.getCOSObject(), Collections.<COSName>emptySet());",
          "",
          "[Removed Lines]",
          "522:         }",
          "",
          "[Added Lines]",
          "522:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "607:             LOG.warn(\"Removed /IDTree from /Names dictionary, doesn't belong there\");",
          "608:         }",
          "611:         PDDocumentNameDestinationDictionary srcDests = srcCatalog.getDests();",
          "612:         if (srcDests != null)",
          "613:         {",
          "614:             if (destDests == null)",
          "615:             {",
          "616:                 destCatalog.getCOSObject().setItem(COSName.DESTS, cloner.cloneForNewDocument(srcDests));",
          "",
          "[Removed Lines]",
          "610:         PDDocumentNameDestinationDictionary destDests = destCatalog.getDests();",
          "",
          "[Added Lines]",
          "613:             PDDocumentNameDestinationDictionary destDests = destCatalog.getDests();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "621:             }",
          "622:         }",
          "625:         PDDocumentOutline srcOutline = srcCatalog.getDocumentOutline();",
          "626:         if (srcOutline != null)",
          "627:         {",
          "628:             if (destOutline == null || destOutline.getFirstChild() == null)",
          "629:             {",
          "630:                 PDDocumentOutline cloned = new PDDocumentOutline((COSDictionary) cloner.cloneForNewDocument(srcOutline));",
          "",
          "[Removed Lines]",
          "624:         PDDocumentOutline destOutline = destCatalog.getDocumentOutline();",
          "",
          "[Added Lines]",
          "627:             PDDocumentOutline destOutline = destCatalog.getDocumentOutline();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "653:         }",
          "655:         PageMode destPageMode = destCatalog.getPageMode();",
          "657:         if (destPageMode == null)",
          "658:         {",
          "659:             destCatalog.setPageMode(srcPageMode);",
          "660:         }",
          "",
          "[Removed Lines]",
          "656:         PageMode srcPageMode = srcCatalog.getPageMode();",
          "",
          "[Added Lines]",
          "658:             PageMode srcPageMode = srcCatalog.getPageMode();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe8bb0a201156bde5bbca6bbddbe79b52d1b1d1e",
      "candidate_info": {
        "commit_hash": "fe8bb0a201156bde5bbca6bbddbe79b52d1b1d1e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fe8bb0a201156bde5bbca6bbddbe79b52d1b1d1e",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ],
        "message": "PDFBOX-5254: revert last change\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892140 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:         flattenAndCompare(sourceUrl, targetFileName);",
          "279:     }",
          "",
          "[Removed Lines]",
          "286:     @Test",
          "287:     public void testFlattenPDFBox5254() throws IOException",
          "288:     {",
          "289:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/13005793/f1040sb%20test.pdf\";",
          "290:         String targetFileName = \"PDFBOX-4889-5254.pdf\";",
          "292:         flattenAndCompare(sourceUrl, targetFileName);",
          "293:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e778eb9c3a11c9056cbaa3d162577d6404fbd90d",
      "candidate_info": {
        "commit_hash": "e778eb9c3a11c9056cbaa3d162577d6404fbd90d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/e778eb9c3a11c9056cbaa3d162577d6404fbd90d",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java"
        ],
        "message": "PDFBOX-4847: add getter for sRGB\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881094 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:         return COSName.ICCBASED.getName();",
          "183:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:     public boolean issRGB()",
          "191:     {",
          "192:         return isRGB;",
          "193:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65b3e5335b8fc2375fd39ab73098e883ff0f13d7",
      "candidate_info": {
        "commit_hash": "65b3e5335b8fc2375fd39ab73098e883ff0f13d7",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/65b3e5335b8fc2375fd39ab73098e883ff0f13d7",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887890 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1001:         COSBase bool = getDictionaryObject(firstKey, secondKey);",
          "1002:         if (bool instanceof COSBoolean)",
          "1003:         {",
          "1005:         }",
          "1006:         return retval;",
          "1007:     }",
          "",
          "[Removed Lines]",
          "1004:             retval = ((COSBoolean) bool).getValue();",
          "",
          "[Added Lines]",
          "1004:             retval = bool == COSBoolean.TRUE;",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:     @Override",
          "107:     public String toString()",
          "108:     {",
          "110:     }",
          "",
          "[Removed Lines]",
          "109:         return \"COSObject{\" + Long.toString(objectNumber) + \", \" + Integer.toString(generationNumber) + \"}\";",
          "",
          "[Added Lines]",
          "109:         return \"COSObject{\" + objectNumber + \", \" + generationNumber + \"}\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}