{
  "cve_id": "CVE-2020-25613",
  "cve_desc": "An issue was discovered in Ruby through 2.5.8, 2.6.x through 2.6.6, and 2.7.x through 2.7.1. WEBrick, a simple HTTP server bundled with Ruby, had not checked the transfer-encoding header value rigorously. An attacker may potentially exploit this issue to bypass a reverse proxy (which also has a poor header check), which may lead to an HTTP Request Smuggling attack.",
  "repo": "ruby/webrick",
  "patch_hash": "8946bb38b4d87549f0d99ed73c62c41933f97cc7",
  "patch_info": {
    "commit_hash": "8946bb38b4d87549f0d99ed73c62c41933f97cc7",
    "repo": "ruby/webrick",
    "commit_url": "https://github.com/ruby/webrick/commit/8946bb38b4d87549f0d99ed73c62c41933f97cc7",
    "files": [
      "lib/webrick/httprequest.rb"
    ],
    "message": "Make it more strict to interpret some headers\n\nSome regexps were too tolerant.",
    "before_after_code_files": [
      "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
    ]
  },
  "patch_diff": {
    "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb": [
      "File: lib/webrick/httprequest.rb -> lib/webrick/httprequest.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "227:         raise HTTPStatus::BadRequest, \"bad URI `#{@unparsed_uri}'.\"",
      "228:       end",
      "231:         @keep_alive = false",
      "233:         @keep_alive = true",
      "234:       elsif @http_version < \"1.1\"",
      "235:         @keep_alive = false",
      "",
      "[Removed Lines]",
      "230:       if /close/io =~ self[\"connection\"]",
      "232:       elsif /keep-alive/io =~ self[\"connection\"]",
      "",
      "[Added Lines]",
      "230:       if /\\Aclose\\z/io =~ self[\"connection\"]",
      "232:       elsif /\\Akeep-alive\\z/io =~ self[\"connection\"]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "508:       return unless socket",
      "509:       if tc = self['transfer-encoding']",
      "510:         case tc",
      "512:         else raise HTTPStatus::NotImplemented, \"Transfer-Encoding: #{tc}.\"",
      "513:         end",
      "514:       elsif self['content-length'] || @remaining_size",
      "",
      "[Removed Lines]",
      "511:         when /chunked/io then read_chunked(socket, block)",
      "",
      "[Added Lines]",
      "511:         when /\\Achunked\\z/io then read_chunked(socket, block)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "076ac636bf48b7a492887ce4de7041de23e6c00d",
      "candidate_info": {
        "commit_hash": "076ac636bf48b7a492887ce4de7041de23e6c00d",
        "repo": "ruby/webrick",
        "commit_url": "https://github.com/ruby/webrick/commit/076ac636bf48b7a492887ce4de7041de23e6c00d",
        "files": [
          "lib/webrick/httprequest.rb"
        ],
        "message": "Make it more strict to interpret some headers\n\nSome regexps were too tolerant.",
        "before_after_code_files": [
          "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ],
          "candidate": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb": [
          "File: lib/webrick/httprequest.rb -> lib/webrick/httprequest.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:         raise HTTPStatus::BadRequest, \"bad URI `#{@unparsed_uri}'.\"",
          "227:       end",
          "230:         @keep_alive = false",
          "232:         @keep_alive = true",
          "233:       elsif @http_version < \"1.1\"",
          "234:         @keep_alive = false",
          "",
          "[Removed Lines]",
          "229:       if /close/io =~ self[\"connection\"]",
          "231:       elsif /keep-alive/io =~ self[\"connection\"]",
          "",
          "[Added Lines]",
          "229:       if /\\Aclose\\z/io =~ self[\"connection\"]",
          "231:       elsif /\\Akeep-alive\\z/io =~ self[\"connection\"]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "503:       return unless socket",
          "504:       if tc = self['transfer-encoding']",
          "505:         case tc",
          "507:         else raise HTTPStatus::NotImplemented, \"Transfer-Encoding: #{tc}.\"",
          "508:         end",
          "509:       elsif self['content-length'] || @remaining_size",
          "",
          "[Removed Lines]",
          "506:         when /chunked/io then read_chunked(socket, block)",
          "",
          "[Added Lines]",
          "506:         when /\\Achunked\\z/io then read_chunked(socket, block)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7618049fa57ddad2efff2a7bc7dad7d2d8a311b1",
      "candidate_info": {
        "commit_hash": "7618049fa57ddad2efff2a7bc7dad7d2d8a311b1",
        "repo": "ruby/webrick",
        "commit_url": "https://github.com/ruby/webrick/commit/7618049fa57ddad2efff2a7bc7dad7d2d8a311b1",
        "files": [
          "lib/webrick/httprequest.rb"
        ],
        "message": "Make it more strict to interpret some headers\n\nSome regexps were too tolerant.",
        "before_after_code_files": [
          "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ],
          "candidate": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb": [
          "File: lib/webrick/httprequest.rb -> lib/webrick/httprequest.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:         raise HTTPStatus::BadRequest, \"bad URI `#{@unparsed_uri}'.\"",
          "227:       end",
          "230:         @keep_alive = false",
          "232:         @keep_alive = true",
          "233:       elsif @http_version < \"1.1\"",
          "234:         @keep_alive = false",
          "",
          "[Removed Lines]",
          "229:       if /close/io =~ self[\"connection\"]",
          "231:       elsif /keep-alive/io =~ self[\"connection\"]",
          "",
          "[Added Lines]",
          "229:       if /\\Aclose\\z/io =~ self[\"connection\"]",
          "231:       elsif /\\Akeep-alive\\z/io =~ self[\"connection\"]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "503:       return unless socket",
          "504:       if tc = self['transfer-encoding']",
          "505:         case tc",
          "507:         else raise HTTPStatus::NotImplemented, \"Transfer-Encoding: #{tc}.\"",
          "508:         end",
          "509:       elsif self['content-length'] || @remaining_size",
          "",
          "[Removed Lines]",
          "506:         when /chunked/io then read_chunked(socket, block)",
          "",
          "[Added Lines]",
          "506:         when /\\Achunked\\z/io then read_chunked(socket, block)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af2efdcdf826f25592202d187c53963e7932e4b9",
      "candidate_info": {
        "commit_hash": "af2efdcdf826f25592202d187c53963e7932e4b9",
        "repo": "ruby/webrick",
        "commit_url": "https://github.com/ruby/webrick/commit/af2efdcdf826f25592202d187c53963e7932e4b9",
        "files": [
          "lib/webrick/httprequest.rb"
        ],
        "message": "Make it more strict to interpret some headers\n\nSome regexps were too tolerant.",
        "before_after_code_files": [
          "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ],
          "candidate": [
            "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/webrick/httprequest.rb||lib/webrick/httprequest.rb": [
          "File: lib/webrick/httprequest.rb -> lib/webrick/httprequest.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:         raise HTTPStatus::BadRequest, \"bad URI `#{@unparsed_uri}'.\"",
          "227:       end",
          "230:         @keep_alive = false",
          "232:         @keep_alive = true",
          "233:       elsif @http_version < \"1.1\"",
          "234:         @keep_alive = false",
          "",
          "[Removed Lines]",
          "229:       if /close/io =~ self[\"connection\"]",
          "231:       elsif /keep-alive/io =~ self[\"connection\"]",
          "",
          "[Added Lines]",
          "229:       if /\\Aclose\\z/io =~ self[\"connection\"]",
          "231:       elsif /\\Akeep-alive\\z/io =~ self[\"connection\"]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "503:       return unless socket",
          "504:       if tc = self['transfer-encoding']",
          "505:         case tc",
          "507:         else raise HTTPStatus::NotImplemented, \"Transfer-Encoding: #{tc}.\"",
          "508:         end",
          "509:       elsif self['content-length'] || @remaining_size",
          "",
          "[Removed Lines]",
          "506:         when /chunked/io then read_chunked(socket, block)",
          "",
          "[Added Lines]",
          "506:         when /\\Achunked\\z/io then read_chunked(socket, block)",
          "",
          "---------------"
        ]
      }
    }
  ]
}