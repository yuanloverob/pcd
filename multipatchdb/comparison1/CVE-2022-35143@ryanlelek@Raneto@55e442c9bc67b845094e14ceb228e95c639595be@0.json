{
  "cve_id": "CVE-2022-35143",
  "cve_desc": "Renato v0.17.0 employs weak password complexity requirements, allowing attackers to crack user passwords via brute-force attacks.",
  "repo": "ryanlelek/Raneto",
  "patch_hash": "55e442c9bc67b845094e14ceb228e95c639595be",
  "patch_info": {
    "commit_hash": "55e442c9bc67b845094e14ceb228e95c639595be",
    "repo": "ryanlelek/Raneto",
    "commit_url": "https://github.com/ryanlelek/Raneto/commit/55e442c9bc67b845094e14ceb228e95c639595be",
    "files": [
      "README.md",
      "app/functions/get_filepath.js",
      "app/functions/sanitize.js",
      "app/routes/category.create.route.js",
      "app/routes/home.route.js",
      "app/routes/page.create.route.js",
      "app/routes/page.delete.route.js",
      "app/routes/page.edit.route.js",
      "app/routes/search.route.js",
      "example/config.default.js",
      "package.json"
    ],
    "message": "Merge pull request #370 from gilbitron/20220802-security\n\nSecurity Fixes 2022-08-02",
    "before_after_code_files": [
      "app/functions/get_filepath.js||app/functions/get_filepath.js",
      "app/functions/sanitize.js||app/functions/sanitize.js",
      "app/routes/category.create.route.js||app/routes/category.create.route.js",
      "app/routes/home.route.js||app/routes/home.route.js",
      "app/routes/page.create.route.js||app/routes/page.create.route.js",
      "app/routes/page.delete.route.js||app/routes/page.delete.route.js",
      "app/routes/page.edit.route.js||app/routes/page.edit.route.js",
      "app/routes/search.route.js||app/routes/search.route.js",
      "example/config.default.js||example/config.default.js"
    ]
  },
  "patch_diff": {
    "app/functions/get_filepath.js||app/functions/get_filepath.js": [
      "File: app/functions/get_filepath.js -> app/functions/get_filepath.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: 'use strict';",
      "8: function get_filepath (p) {",
      "",
      "[Removed Lines]",
      "5: var path     = require('path');",
      "6: var sanitize = require('sanitize-filename');",
      "",
      "[Added Lines]",
      "5: var path              = require('path');",
      "6: var sanitizeFilename  = require('sanitize-filename');",
      "7: var sanitize          = require('./sanitize.js');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "14:   if (p.category) {",
      "16:   }",
      "19:   if (p.filename) {",
      "21:   }",
      "",
      "[Removed Lines]",
      "15:     filepath += '/' + sanitize(p.category);",
      "20:     filepath += '/' + sanitize(p.filename);",
      "",
      "[Added Lines]",
      "16:     filepath += '/' + sanitizeFilename(sanitize(p.category));",
      "21:     filepath += '/' + sanitizeFilename(sanitize(p.filename));",
      "",
      "---------------"
    ],
    "app/functions/sanitize.js||app/functions/sanitize.js": [
      "File: app/functions/sanitize.js -> app/functions/sanitize.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: 'use strict';",
      "5: var validator = require('validator');",
      "8: var invalidChars = '&\\'\"/><';",
      "11: function sanitizer (str) {",
      "12:   str = validator.blacklist(str, invalidChars);",
      "13:   str = validator.trim(str);",
      "14:   str = validator.escape(str);",
      "15:   return str;",
      "16: }",
      "19: module.exports = exports = sanitizer;",
      "",
      "---------------"
    ],
    "app/routes/category.create.route.js||app/routes/category.create.route.js": [
      "File: app/routes/category.create.route.js -> app/routes/category.create.route.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: function route_category_create (config) {",
      "9:   return function (req, res, next) {",
      "12:       content  : config.content_dir,",
      "13:       category : req.body.category",
      "15:       if (error) {",
      "16:         return res.json({",
      "17:           status  : 1,",
      "",
      "[Removed Lines]",
      "11:     fs.mkdir(get_filepath({",
      "14:     }), function (error) {",
      "",
      "[Added Lines]",
      "13:     var filepath = get_filepath({",
      "16:     });",
      "18:     fs.mkdir(filepath, function (error) {",
      "",
      "---------------"
    ],
    "app/routes/home.route.js||app/routes/home.route.js": [
      "File: app/routes/home.route.js -> app/routes/home.route.js"
    ],
    "app/routes/page.create.route.js||app/routes/page.create.route.js": [
      "File: app/routes/page.create.route.js -> app/routes/page.create.route.js"
    ],
    "app/routes/page.delete.route.js||app/routes/page.delete.route.js": [
      "File: app/routes/page.delete.route.js -> app/routes/page.delete.route.js"
    ],
    "app/routes/page.edit.route.js||app/routes/page.edit.route.js": [
      "File: app/routes/page.edit.route.js -> app/routes/page.edit.route.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: var fs               = require('fs-extra');",
      "6: var get_filepath     = require('../functions/get_filepath.js');",
      "7: var create_meta_info = require('../functions/create_meta_info.js');",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: var validator        = require('validator');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:     var complete_content = create_content(req.body);",
      "45:     try {",
      "48:       res.json({",
      "49:         status  : 0,",
      "",
      "[Removed Lines]",
      "46:       await fs.writeFile(filepath, complete_content);",
      "",
      "[Added Lines]",
      "51:     var sanitized_content = validator.escape(complete_content);",
      "54:       await fs.writeFile(filepath, sanitized_content);",
      "",
      "---------------"
    ],
    "app/routes/search.route.js||app/routes/search.route.js": [
      "File: app/routes/search.route.js -> app/routes/search.route.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: 'use strict';",
      "6: var _s                             = require('underscore.string');",
      "7: var remove_image_content_directory = require('../functions/remove_image_content_directory.js');",
      "10: const contentsHandler = require('../core/contents');",
      "12: function route_search (config) {",
      "",
      "[Removed Lines]",
      "5: var validator                      = require('validator');",
      "9: const searchHandler = require('../core/search');",
      "",
      "[Added Lines]",
      "8: var sanitize                       = require('../functions/sanitize.js');",
      "10: const searchHandler   = require('../core/search');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "16:     if (!req.query.search) { return next(); }",
      "",
      "[Removed Lines]",
      "19:     var tagFreeQuery   = _s.stripTags(req.query.search);",
      "22:     var invalidChars   = '&\\'\"/';",
      "23:     var sanitizedQuery = validator.blacklist(tagFreeQuery, invalidChars);",
      "26:     var searchQuery    = sanitizedQuery.toString(sanitizedQuery).trim();",
      "28:     var searchResults  = await searchHandler(searchQuery, config);",
      "29:     var pageListSearch = remove_image_content_directory(config, await contentsHandler(null, config));",
      "",
      "[Added Lines]",
      "20:     var rawQuery   = _s.stripTags(req.query.search);",
      "21:     var sanitizedQuery = sanitize(rawQuery);",
      "24:     var searchResults = [];",
      "25:     var pageListSearch = [];",
      "26:     try {",
      "27:       searchResults = await searchHandler(sanitizedQuery, config);",
      "28:       pageListSearch = remove_image_content_directory(config, await contentsHandler(null, config));",
      "29:     } catch (e) {",
      "31:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "41:     return res.render('search', {",
      "42:       config,",
      "43:       pages         : pageListSearch,",
      "45:       searchResults,",
      "46:       body_class    : 'page-search',",
      "47:       lang          : config.lang,",
      "",
      "[Removed Lines]",
      "44:       search        : searchQuery,",
      "",
      "[Added Lines]",
      "46:       search        : sanitizedQuery,",
      "",
      "---------------"
    ],
    "example/config.default.js||example/config.default.js": [
      "File: example/config.default.js -> example/config.default.js"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "900c58b53b60fabe54bf6f5227f04aac2e1ebeec",
      "candidate_info": {
        "commit_hash": "900c58b53b60fabe54bf6f5227f04aac2e1ebeec",
        "repo": "ryanlelek/Raneto",
        "commit_url": "https://github.com/ryanlelek/Raneto/commit/900c58b53b60fabe54bf6f5227f04aac2e1ebeec",
        "files": [
          "README.md",
          "example/config.default.js"
        ],
        "message": "Fix: Document importance of username/password setup",
        "before_after_code_files": [
          "example/config.default.js||example/config.default.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ryanlelek/Raneto/pull/370"
        ],
        "olp_code_files": {
          "patch": [
            "example/config.default.js||example/config.default.js"
          ],
          "candidate": [
            "example/config.default.js||example/config.default.js"
          ]
        }
      },
      "candidate_diff": {
        "example/config.default.js||example/config.default.js": [
          "File: example/config.default.js -> example/config.default.js"
        ]
      }
    },
    {
      "candidate_hash": "7ee6ae89cbdcc77156f29b1ef86343b85cbce922",
      "candidate_info": {
        "commit_hash": "7ee6ae89cbdcc77156f29b1ef86343b85cbce922",
        "repo": "ryanlelek/Raneto",
        "commit_url": "https://github.com/ryanlelek/Raneto/commit/7ee6ae89cbdcc77156f29b1ef86343b85cbce922",
        "files": [
          "app/routes/search.route.js"
        ],
        "message": "Fix: Better sanitization for search query parameter",
        "before_after_code_files": [
          "app/routes/search.route.js||app/routes/search.route.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ryanlelek/Raneto/pull/370"
        ],
        "olp_code_files": {
          "patch": [
            "app/routes/search.route.js||app/routes/search.route.js"
          ],
          "candidate": [
            "app/routes/search.route.js||app/routes/search.route.js"
          ]
        }
      },
      "candidate_diff": {
        "app/routes/search.route.js||app/routes/search.route.js": [
          "File: app/routes/search.route.js -> app/routes/search.route.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     if (!req.query.search) { return next(); }",
          "",
          "[Removed Lines]",
          "19:     var tagFreeQuery   = _s.stripTags(req.query.search);",
          "22:     var invalidChars   = '&\\'\"/';",
          "23:     var sanitizedQuery = validator.blacklist(tagFreeQuery, invalidChars);",
          "26:     var searchQuery    = sanitizedQuery.toString(sanitizedQuery).trim();",
          "28:     var searchResults  = await searchHandler(searchQuery, config);",
          "29:     var pageListSearch = remove_image_content_directory(config, await contentsHandler(null, config));",
          "",
          "[Added Lines]",
          "19:     var rawQuery   = _s.stripTags(req.query.search);",
          "24:     var invalidChars   = '&\\'\"/><';",
          "25:     var sanitizedQuery = validator.blacklist(rawQuery, invalidChars);",
          "27:     sanitizedQuery = validator.trim(sanitizedQuery);",
          "28:     sanitizedQuery = validator.escape(sanitizedQuery);",
          "31:     var searchResults = [];",
          "32:     var pageListSearch = [];",
          "33:     try {",
          "34:       searchResults = await searchHandler(sanitizedQuery, config);",
          "35:       pageListSearch = remove_image_content_directory(config, await contentsHandler(null, config));",
          "36:     } catch (e) {",
          "38:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:     return res.render('search', {",
          "42:       config,",
          "43:       pages         : pageListSearch,",
          "45:       searchResults,",
          "46:       body_class    : 'page-search',",
          "47:       lang          : config.lang,",
          "",
          "[Removed Lines]",
          "44:       search        : searchQuery,",
          "",
          "[Added Lines]",
          "53:       search        : sanitizedQuery,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88c86ca181daeb4a89f69e93de96bd77094fe0e9",
      "candidate_info": {
        "commit_hash": "88c86ca181daeb4a89f69e93de96bd77094fe0e9",
        "repo": "ryanlelek/Raneto",
        "commit_url": "https://github.com/ryanlelek/Raneto/commit/88c86ca181daeb4a89f69e93de96bd77094fe0e9",
        "files": [
          "app/functions/get_filepath.js",
          "app/functions/sanitize.js",
          "app/routes/category.create.route.js",
          "app/routes/home.route.js",
          "app/routes/page.create.route.js",
          "app/routes/page.delete.route.js",
          "app/routes/page.edit.route.js",
          "app/routes/search.route.js"
        ],
        "message": "Fix: Better sanitization/escape on Search Query and Page Actions",
        "before_after_code_files": [
          "app/functions/get_filepath.js||app/functions/get_filepath.js",
          "app/functions/sanitize.js||app/functions/sanitize.js",
          "app/routes/category.create.route.js||app/routes/category.create.route.js",
          "app/routes/home.route.js||app/routes/home.route.js",
          "app/routes/page.create.route.js||app/routes/page.create.route.js",
          "app/routes/page.delete.route.js||app/routes/page.delete.route.js",
          "app/routes/page.edit.route.js||app/routes/page.edit.route.js",
          "app/routes/search.route.js||app/routes/search.route.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ryanlelek/Raneto/pull/370"
        ],
        "olp_code_files": {
          "patch": [
            "app/functions/get_filepath.js||app/functions/get_filepath.js",
            "app/functions/sanitize.js||app/functions/sanitize.js",
            "app/routes/category.create.route.js||app/routes/category.create.route.js",
            "app/routes/home.route.js||app/routes/home.route.js",
            "app/routes/page.create.route.js||app/routes/page.create.route.js",
            "app/routes/page.delete.route.js||app/routes/page.delete.route.js",
            "app/routes/page.edit.route.js||app/routes/page.edit.route.js",
            "app/routes/search.route.js||app/routes/search.route.js"
          ],
          "candidate": [
            "app/functions/get_filepath.js||app/functions/get_filepath.js",
            "app/functions/sanitize.js||app/functions/sanitize.js",
            "app/routes/category.create.route.js||app/routes/category.create.route.js",
            "app/routes/home.route.js||app/routes/home.route.js",
            "app/routes/page.create.route.js||app/routes/page.create.route.js",
            "app/routes/page.delete.route.js||app/routes/page.delete.route.js",
            "app/routes/page.edit.route.js||app/routes/page.edit.route.js",
            "app/routes/search.route.js||app/routes/search.route.js"
          ]
        }
      },
      "candidate_diff": {
        "app/functions/get_filepath.js||app/functions/get_filepath.js": [
          "File: app/functions/get_filepath.js -> app/functions/get_filepath.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: 'use strict';",
          "8: function get_filepath (p) {",
          "",
          "[Removed Lines]",
          "5: var path     = require('path');",
          "6: var sanitize = require('sanitize-filename');",
          "",
          "[Added Lines]",
          "5: var path              = require('path');",
          "6: var sanitizeFilename  = require('sanitize-filename');",
          "7: var sanitize          = require('./sanitize.js');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:   if (p.category) {",
          "16:   }",
          "19:   if (p.filename) {",
          "21:   }",
          "",
          "[Removed Lines]",
          "15:     filepath += '/' + sanitize(p.category);",
          "20:     filepath += '/' + sanitize(p.filename);",
          "",
          "[Added Lines]",
          "16:     filepath += '/' + sanitizeFilename(sanitize(p.category));",
          "21:     filepath += '/' + sanitizeFilename(sanitize(p.filename));",
          "",
          "---------------"
        ],
        "app/functions/sanitize.js||app/functions/sanitize.js": [
          "File: app/functions/sanitize.js -> app/functions/sanitize.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: 'use strict';",
          "5: var validator = require('validator');",
          "8: var invalidChars = '&\\'\"/><';",
          "11: function sanitizer (str) {",
          "12:   str = validator.blacklist(str, invalidChars);",
          "13:   str = validator.trim(str);",
          "14:   str = validator.escape(str);",
          "15:   return str;",
          "16: }",
          "19: module.exports = exports = sanitizer;",
          "",
          "---------------"
        ],
        "app/routes/category.create.route.js||app/routes/category.create.route.js": [
          "File: app/routes/category.create.route.js -> app/routes/category.create.route.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: function route_category_create (config) {",
          "9:   return function (req, res, next) {",
          "12:       content  : config.content_dir,",
          "13:       category : req.body.category",
          "15:       if (error) {",
          "16:         return res.json({",
          "17:           status  : 1,",
          "",
          "[Removed Lines]",
          "11:     fs.mkdir(get_filepath({",
          "14:     }), function (error) {",
          "",
          "[Added Lines]",
          "13:     var filepath = get_filepath({",
          "16:     });",
          "18:     fs.mkdir(filepath, function (error) {",
          "",
          "---------------"
        ],
        "app/routes/home.route.js||app/routes/home.route.js": [
          "File: app/routes/home.route.js -> app/routes/home.route.js"
        ],
        "app/routes/page.create.route.js||app/routes/page.create.route.js": [
          "File: app/routes/page.create.route.js -> app/routes/page.create.route.js"
        ],
        "app/routes/page.delete.route.js||app/routes/page.delete.route.js": [
          "File: app/routes/page.delete.route.js -> app/routes/page.delete.route.js"
        ],
        "app/routes/page.edit.route.js||app/routes/page.edit.route.js": [
          "File: app/routes/page.edit.route.js -> app/routes/page.edit.route.js"
        ],
        "app/routes/search.route.js||app/routes/search.route.js": [
          "File: app/routes/search.route.js -> app/routes/search.route.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: 'use strict';",
          "6: var _s                             = require('underscore.string');",
          "7: var remove_image_content_directory = require('../functions/remove_image_content_directory.js');",
          "10: const contentsHandler = require('../core/contents');",
          "12: function route_search (config) {",
          "",
          "[Removed Lines]",
          "5: var validator                      = require('validator');",
          "9: const searchHandler = require('../core/search');",
          "",
          "[Added Lines]",
          "8: var sanitize                       = require('../functions/sanitize.js');",
          "10: const searchHandler   = require('../core/search');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:     var rawQuery   = _s.stripTags(req.query.search);",
          "31:     var searchResults = [];",
          "",
          "[Removed Lines]",
          "24:     var invalidChars   = '&\\'\"/><';",
          "25:     var sanitizedQuery = validator.blacklist(rawQuery, invalidChars);",
          "27:     sanitizedQuery = validator.trim(sanitizedQuery);",
          "28:     sanitizedQuery = validator.escape(sanitizedQuery);",
          "",
          "[Added Lines]",
          "21:     var sanitizedQuery = sanitize(rawQuery);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80c5d798a823c6396b160c890d55bbb29f39653a",
      "candidate_info": {
        "commit_hash": "80c5d798a823c6396b160c890d55bbb29f39653a",
        "repo": "ryanlelek/Raneto",
        "commit_url": "https://github.com/ryanlelek/Raneto/commit/80c5d798a823c6396b160c890d55bbb29f39653a",
        "files": [
          "README.md",
          "app/routes/page.edit.route.js"
        ],
        "message": "Fix: Escaping HTML on submit of page edit. Use Markdown instead for links, images, etc.",
        "before_after_code_files": [
          "app/routes/page.edit.route.js||app/routes/page.edit.route.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/ryanlelek/Raneto/pull/370"
        ],
        "olp_code_files": {
          "patch": [
            "app/routes/page.edit.route.js||app/routes/page.edit.route.js"
          ],
          "candidate": [
            "app/routes/page.edit.route.js||app/routes/page.edit.route.js"
          ]
        }
      },
      "candidate_diff": {
        "app/routes/page.edit.route.js||app/routes/page.edit.route.js": [
          "File: app/routes/page.edit.route.js -> app/routes/page.edit.route.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: var fs               = require('fs-extra');",
          "6: var get_filepath     = require('../functions/get_filepath.js');",
          "7: var create_meta_info = require('../functions/create_meta_info.js');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: var validator        = require('validator');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     var complete_content = create_content(req.body);",
          "46:     try {",
          "49:       res.json({",
          "50:         status  : 0,",
          "",
          "[Removed Lines]",
          "47:       await fs.writeFile(filepath, complete_content);",
          "",
          "[Added Lines]",
          "51:     var sanitized_content = validator.escape(complete_content);",
          "54:       await fs.writeFile(filepath, sanitized_content);",
          "",
          "---------------"
        ]
      }
    }
  ]
}