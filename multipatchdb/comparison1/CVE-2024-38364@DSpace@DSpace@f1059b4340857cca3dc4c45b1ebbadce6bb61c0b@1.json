{
  "cve_id": "CVE-2024-38364",
  "cve_desc": "DSpace is an open source software is a turnkey repository application used by more than 2,000 organizations and institutions worldwide to provide durable access to digital resources. In DSpace 7.0 through 7.6.1, when an HTML, XML or JavaScript Bitstream is downloaded, the user's browser may execute any embedded JavaScript. If that embedded JavaScript is malicious, there is a risk of an XSS attack. This vulnerability has been patched in version 7.6.2.",
  "repo": "DSpace/DSpace",
  "patch_hash": "f1059b4340857cca3dc4c45b1ebbadce6bb61c0b",
  "patch_info": {
    "commit_hash": "f1059b4340857cca3dc4c45b1ebbadce6bb61c0b",
    "repo": "DSpace/DSpace",
    "commit_url": "https://github.com/DSpace/DSpace/commit/f1059b4340857cca3dc4c45b1ebbadce6bb61c0b",
    "files": [
      "dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java",
      "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java",
      "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java",
      "dspace/config/dspace.cfg",
      "dspace/config/registries/bitstream-formats.xml"
    ],
    "message": "Merge pull request #9638 from tdonohue/avoid_inline_js\n\nUpdate configuration to always download HTML/JS/XML Bitstreams (no inline display)",
    "before_after_code_files": [
      "dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java||dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java",
      "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java",
      "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java",
      "dspace/config/dspace.cfg||dspace/config/dspace.cfg"
    ]
  },
  "patch_diff": {
    "dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java||dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java": [
      "File: dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java -> dspace-server-webapp/src/main/java/org/dspace/app/rest/BitstreamRestController.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import jakarta.servlet.http.HttpServletResponse;",
      "21: import jakarta.ws.rs.core.Response;",
      "22: import org.apache.catalina.connector.ClientAbortException;",
      "23: import org.apache.commons.lang3.StringUtils;",
      "24: import org.apache.logging.log4j.Logger;",
      "25: import org.dspace.app.rest.converter.ConverterService;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "23: import org.apache.commons.collections4.ListUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "204:             || responseCode.equals(Response.Status.Family.REDIRECTION);",
      "205:     }",
      "207:     private boolean checkFormatForContentDisposition(BitstreamFormat format) {",
      "211:         }",
      "213:         boolean download = formats.contains(format.getMIMEType());",
      "214:         if (!download) {",
      "215:             for (String ext : format.getExtensions()) {",
      "",
      "[Removed Lines]",
      "209:         if (format == null) {",
      "210:             return false;",
      "212:         List<String> formats = List.of((configurationService.getArrayProperty(\"webui.content_disposition_format\")));",
      "",
      "[Added Lines]",
      "219:         if (format == null || format.getSupportLevel() == BitstreamFormat.UNKNOWN) {",
      "220:             return true;",
      "224:         List<String> configuredFormats = List.of(configurationService.",
      "225:                                                      getArrayProperty(\"webui.content_disposition_format\"));",
      "228:         if (configuredFormats.contains(\"*\")) {",
      "229:             return true;",
      "230:         }",
      "235:         List<String> downloadOnlyFormats = List.of(\"text/html\", \"text/javascript\", \"text/xml\", \"rdf\");",
      "238:         List<String> formats = ListUtils.union(downloadOnlyFormats, configuredFormats);",
      "",
      "---------------"
    ],
    "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java": [
      "File: dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java -> dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamFormatRestRepositoryIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     @Autowired",
      "57:     private BitstreamFormatConverter bitstreamFormatConverter;",
      "61:     @Test",
      "62:     public void findAllPaginationTest() throws Exception {",
      "",
      "[Removed Lines]",
      "59:     private final int DEFAULT_AMOUNT_FORMATS = 85;",
      "",
      "[Added Lines]",
      "59:     private final int DEFAULT_AMOUNT_FORMATS = 86;",
      "",
      "---------------"
    ],
    "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java": [
      "File: dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java -> dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1265:         Bitstream rtf;",
      "1266:         Bitstream xml;",
      "1267:         Bitstream txt;",
      "1269:         try (InputStream is = IOUtils.toInputStream(content, CharEncoding.UTF_8)) {",
      "1270:             rtf = BitstreamBuilder.createBitstream(context, item, is)",
      "1271:                                   .withMimeType(\"text/richtext\").build();",
      "",
      "[Removed Lines]",
      "1268:         Bitstream html;",
      "",
      "[Added Lines]",
      "1267:         Bitstream csv;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1273:                                   .withMimeType(\"text/xml\").build();",
      "1274:             txt = BitstreamBuilder.createBitstream(context, item, is)",
      "1275:                                   .withMimeType(\"text/plain\").build();",
      "1278:         }",
      "1279:         context.restoreAuthSystemState();",
      "",
      "[Removed Lines]",
      "1276:             html = BitstreamBuilder.createBitstream(context, item, is)",
      "1277:                                    .withMimeType(\"text/html\").build();",
      "",
      "[Added Lines]",
      "1275:             csv = BitstreamBuilder.createBitstream(context, item, is)",
      "1276:                                    .withMimeType(\"text/csv\").build();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1283:         verifyBitstreamDownload(xml, \"text/xml;charset=UTF-8\", true);",
      "1284:         verifyBitstreamDownload(txt, \"text/plain;charset=UTF-8\", true);",
      "1287:     }",
      "1289:     private void verifyBitstreamDownload(Bitstream file, String contentType, boolean shouldDownload) throws Exception {",
      "1290:         String token = getAuthToken(admin.getEmail(), password);",
      "1291:         String header = getClient(token).perform(get(\"/api/core/bitstreams/\" + file.getID() + \"/content\")",
      "",
      "[Removed Lines]",
      "1286:         verifyBitstreamDownload(html, \"text/html;charset=UTF-8\", false);",
      "",
      "[Added Lines]",
      "1285:         verifyBitstreamDownload(csv, \"text/csv;charset=UTF-8\", false);",
      "1286:     }",
      "1288:     @Test",
      "1289:     public void checkHardcodedContentDispositionFormats() throws Exception {",
      "1292:         context.turnOffAuthorisationSystem();",
      "1293:         Community community = CommunityBuilder.createCommunity(context).build();",
      "1294:         Collection collection = CollectionBuilder.createCollection(context, community).build();",
      "1295:         Item item = ItemBuilder.createItem(context, collection).build();",
      "1296:         String content = \"Test Content\";",
      "1297:         Bitstream html;",
      "1298:         Bitstream js;",
      "1299:         Bitstream rdf;",
      "1300:         Bitstream xml;",
      "1301:         Bitstream unknown;",
      "1302:         Bitstream svg;",
      "1303:         try (InputStream is = IOUtils.toInputStream(content, CharEncoding.UTF_8)) {",
      "1304:             html = BitstreamBuilder.createBitstream(context, item, is)",
      "1305:                                    .withMimeType(\"text/html\").build();",
      "1306:             js = BitstreamBuilder.createBitstream(context, item, is)",
      "1307:                                  .withMimeType(\"text/javascript\").build();",
      "1309:             rdf = BitstreamBuilder.createBitstream(context, item, is)",
      "1310:                                   .withMimeType(\"application/rdf+xml; charset=utf-8\").build();",
      "1311:             xml = BitstreamBuilder.createBitstream(context, item, is)",
      "1312:                                   .withMimeType(\"text/xml\").build();",
      "1313:             unknown = BitstreamBuilder.createBitstream(context, item, is)",
      "1314:                                       .withMimeType(\"application/octet-stream\").build();",
      "1315:             svg = BitstreamBuilder.createBitstream(context, item, is)",
      "1316:                                   .withMimeType(\"image/svg+xml\").build();",
      "1318:         }",
      "1319:         context.restoreAuthSystemState();",
      "1323:         verifyBitstreamDownload(html, \"text/html;charset=UTF-8\", true);",
      "1324:         verifyBitstreamDownload(js, \"text/javascript;charset=UTF-8\", true);",
      "1325:         verifyBitstreamDownload(rdf, \"application/rdf+xml;charset=UTF-8\", true);",
      "1326:         verifyBitstreamDownload(xml, \"text/xml;charset=UTF-8\", true);",
      "1328:         verifyBitstreamDownload(unknown, \"application/octet-stream;charset=UTF-8\", true);",
      "1331:         verifyBitstreamDownload(svg, \"application/octet-stream;charset=UTF-8\", true);",
      "1334:     @Test",
      "1335:     public void checkWildcardContentDispositionFormats() throws Exception {",
      "1337:         configurationService.setProperty(\"webui.content_disposition_format\", \"*\");",
      "1339:         context.turnOffAuthorisationSystem();",
      "1340:         Community community = CommunityBuilder.createCommunity(context).build();",
      "1341:         Collection collection = CollectionBuilder.createCollection(context, community).build();",
      "1342:         Item item = ItemBuilder.createItem(context, collection).build();",
      "1343:         String content = \"Test Content\";",
      "1344:         Bitstream csv;",
      "1345:         Bitstream jpg;",
      "1346:         Bitstream mpg;",
      "1347:         Bitstream pdf;",
      "1348:         try (InputStream is = IOUtils.toInputStream(content, CharEncoding.UTF_8)) {",
      "1349:             csv = BitstreamBuilder.createBitstream(context, item, is)",
      "1350:                                   .withMimeType(\"text/csv\").build();",
      "1351:             jpg = BitstreamBuilder.createBitstream(context, item, is)",
      "1352:                                    .withMimeType(\"image/jpeg\").build();",
      "1353:             mpg = BitstreamBuilder.createBitstream(context, item, is)",
      "1354:                                   .withMimeType(\"video/mpeg\").build();",
      "1355:             pdf = BitstreamBuilder.createBitstream(context, item, is)",
      "1356:                                   .withMimeType(\"application/pdf\").build();",
      "1357:         }",
      "1358:         context.restoreAuthSystemState();",
      "1361:         verifyBitstreamDownload(csv, \"text/csv;charset=UTF-8\", true);",
      "1362:         verifyBitstreamDownload(jpg, \"image/jpeg;charset=UTF-8\", true);",
      "1363:         verifyBitstreamDownload(mpg, \"video/mpeg;charset=UTF-8\", true);",
      "1364:         verifyBitstreamDownload(pdf, \"application/pdf;charset=UTF-8\", true);",
      "1365:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1294:                                          .andExpect(content().contentType(contentType))",
      "1295:                                          .andReturn().getResponse().getHeader(\"content-disposition\");",
      "1296:         if (shouldDownload) {",
      "1299:         } else {",
      "1302:         }",
      "1303:     }",
      "1304: }",
      "",
      "[Removed Lines]",
      "1297:             assertTrue(header.contains(\"attachment\"));",
      "1298:             assertFalse(header.contains(\"inline\"));",
      "1300:             assertTrue(header.contains(\"inline\"));",
      "1301:             assertFalse(header.contains(\"attachment\"));",
      "",
      "[Added Lines]",
      "1376:             assertTrue(\"Content-Disposition should contain 'attachment' for \" + contentType,",
      "1377:                        header.contains(\"attachment\"));",
      "1378:             assertFalse(\"Content-Disposition should NOT contain 'inline' for \" + contentType,",
      "1379:                         header.contains(\"inline\"));",
      "1381:             assertTrue(\"Content-Disposition should contain 'inline' for \" + contentType,",
      "1382:                        header.contains(\"inline\"));",
      "1383:             assertFalse(\"Content-Disposition should NOT contain 'attachment' for \" + contentType,",
      "1384:                         header.contains(\"attachment\"));",
      "",
      "---------------"
    ],
    "dspace/config/dspace.cfg||dspace/config/dspace.cfg": [
      "File: dspace/config/dspace.cfg -> dspace/config/dspace.cfg",
      "--- Hunk 1 ---",
      "[Context before]",
      "1385: #### Content Attachment Disposition Formats ####",
      "1386: #",
      "1390: webui.content_disposition_format = text/richtext",
      "1392: #### Multi-file HTML document/site settings #####",
      "",
      "[Removed Lines]",
      "1387: # Set which mimetypes, file extensions will NOT be opened inline",
      "1388: # Files with these mimetypes/extensions will always be downloaded,",
      "1389: # regardless of the threshold above",
      "",
      "[Added Lines]",
      "1387: # Set which mimetypes or file extensions will NOT be opened inline.",
      "1388: # Files with these mimetypes/extensions will always be downloaded, regardless of the threshold above.",
      "1389: # NOTE: For security reasons, some file formats (e.g. HTML, XML, RDF, JS) will always be downloaded regardless",
      "1390: # of the settings here. This blocks these formats from executing embedded JavaScript when opened inline.",
      "1391: # For additional security, you may choose to set this to \"*\" to force all formats to always be downloaded",
      "1392: # (i.e. disables all formats from opening inline within the user's browser).",
      "1393: #",
      "1394: # By default, RTF is always downloaded because most browsers attempt to display it as plain text.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e6bfb833eed8228aa8f9ab66ec3277284d747b0d",
      "candidate_info": {
        "commit_hash": "e6bfb833eed8228aa8f9ab66ec3277284d747b0d",
        "repo": "DSpace/DSpace",
        "commit_url": "https://github.com/DSpace/DSpace/commit/e6bfb833eed8228aa8f9ab66ec3277284d747b0d",
        "files": [
          "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java"
        ],
        "message": "Add a test to prove the default settings are to always download these formats",
        "before_after_code_files": [
          "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DSpace/DSpace/pull/9638"
        ],
        "olp_code_files": {
          "patch": [
            "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java"
          ],
          "candidate": [
            "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java"
          ]
        }
      },
      "candidate_diff": {
        "dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java||dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java": [
          "File: dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java -> dspace-server-webapp/src/test/java/org/dspace/app/rest/BitstreamRestControllerIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1286:         verifyBitstreamDownload(html, \"text/html;charset=UTF-8\", false);",
          "1287:     }",
          "1289:     private void verifyBitstreamDownload(Bitstream file, String contentType, boolean shouldDownload) throws Exception {",
          "1290:         String token = getAuthToken(admin.getEmail(), password);",
          "1291:         String header = getClient(token).perform(get(\"/api/core/bitstreams/\" + file.getID() + \"/content\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288:     @Test",
          "1289:     public void checkDefaultContentDispositionFormats() throws Exception {",
          "1292:         context.turnOffAuthorisationSystem();",
          "1293:         Community community = CommunityBuilder.createCommunity(context).build();",
          "1294:         Collection collection = CollectionBuilder.createCollection(context, community).build();",
          "1295:         Item item = ItemBuilder.createItem(context, collection).build();",
          "1296:         String content = \"Test Content\";",
          "1297:         Bitstream html;",
          "1298:         Bitstream js;",
          "1299:         Bitstream xml;",
          "1300:         try (InputStream is = IOUtils.toInputStream(content, CharEncoding.UTF_8)) {",
          "1301:             html = BitstreamBuilder.createBitstream(context, item, is)",
          "1302:                                    .withMimeType(\"text/html\").build();",
          "1303:             js = BitstreamBuilder.createBitstream(context, item, is)",
          "1304:                                   .withMimeType(\"text/javascript\").build();",
          "1305:             xml = BitstreamBuilder.createBitstream(context, item, is)",
          "1306:                                   .withMimeType(\"text/xml\").build();",
          "1307:         }",
          "1308:         context.restoreAuthSystemState();",
          "1312:         verifyBitstreamDownload(html, \"text/html;charset=UTF-8\", true);",
          "1313:         verifyBitstreamDownload(js, \"text/javascript;charset=UTF-8\", true);",
          "1314:         verifyBitstreamDownload(xml, \"text/xml;charset=UTF-8\", true);",
          "1315:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}