{
  "cve_id": "CVE-2024-34515",
  "cve_desc": "image-optimizer before 1.7.3 allows PHAR deserialization, e.g., the phar:// protocol in arguments to file_exists().",
  "repo": "spatie/image-optimizer",
  "patch_hash": "89847b55fbb44b3bcde0283bff8cc5abb5e51b82",
  "patch_info": {
    "commit_hash": "89847b55fbb44b3bcde0283bff8cc5abb5e51b82",
    "repo": "spatie/image-optimizer",
    "commit_url": "https://github.com/spatie/image-optimizer/commit/89847b55fbb44b3bcde0283bff8cc5abb5e51b82",
    "files": [
      "src/Image.php",
      "src/OptimizerChain.php"
    ],
    "message": "Merge pull request #211 from Sonicrrrr/main\n\nUpdate Image.php",
    "before_after_code_files": [
      "src/Image.php||src/Image.php",
      "src/OptimizerChain.php||src/OptimizerChain.php"
    ]
  },
  "patch_diff": {
    "src/Image.php||src/Image.php": [
      "File: src/Image.php -> src/Image.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: class Image",
      "8: {",
      "9:     protected $pathToImage = '';",
      "11:     public function __construct(string $pathToImage)",
      "12:     {",
      "14:             throw new InvalidArgumentException(\"`{$pathToImage}` does not exist\");",
      "15:         }",
      "",
      "[Removed Lines]",
      "13:         if (! file_exists($pathToImage)) {",
      "",
      "[Added Lines]",
      "10:     protected const ALLOWED_PROTOCOLS = ['file'];",
      "12:     protected const WINDOWS_LOCAL_FILENAME_REGEX = '/^[a-z]:(?:[\\\\\\\\\\/]?(?:[\\w\\s!#()-]+|[\\.]{1,2})+)*[\\\\\\\\\\/]?/i';",
      "15:         if (!$this->isProtocolAllowed($pathToImage)) {",
      "16:             throw new InvalidArgumentException(\\sprintf('The output file scheme is not supported. Expected one of [\\'%s\\'].', \\implode('\\', \\'', self::ALLOWED_PROTOCOLS)));",
      "17:         }",
      "19:         if (!file_exists($pathToImage)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "34:         return strtolower($extension);",
      "35:     }",
      "36: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42:     protected function isProtocolAllowed($filename)",
      "43:     {",
      "44:         if (false === $parsedFilename = \\parse_url($filename)) {",
      "45:             throw new InvalidArgumentException('The filename is not valid.');",
      "46:         }",
      "48:         $protocol = isset($parsedFilename['scheme']) ? \\mb_strtolower($parsedFilename['scheme']) : 'file';",
      "50:         if (",
      "51:             \\PHP_OS_FAMILY === 'Windows'",
      "52:             && \\strlen($protocol) === 1",
      "53:             && \\preg_match(self::WINDOWS_LOCAL_FILENAME_REGEX, $filename)",
      "54:         ) {",
      "55:             $protocol = 'file';",
      "56:         }",
      "58:         return \\in_array($protocol, self::ALLOWED_PROTOCOLS, true);",
      "59:     }",
      "",
      "---------------"
    ],
    "src/OptimizerChain.php||src/OptimizerChain.php": [
      "File: src/OptimizerChain.php -> src/OptimizerChain.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:     public function optimize(string $pathToImage, string $pathToOutput = null)",
      "65:     {",
      "66:         if ($pathToOutput) {",
      "69:             $pathToImage = $pathToOutput;",
      "70:         }",
      "72:         $image = new Image($pathToImage);",
      "74:         $this->logger->info(\"Start optimizing {$pathToImage}\");",
      "76:         foreach ($this->optimizers as $optimizer) {",
      "",
      "[Removed Lines]",
      "67:             copy($pathToImage, $pathToOutput);",
      "",
      "[Added Lines]",
      "67:             $check = copy($pathToImage, $pathToOutput);",
      "68:             if($check == false){",
      "69:                 throw new InvalidArgumentException(\"Cannot copy file\");",
      "70:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "53011bad641476e316c02c8157b07ab1ca89c8ef",
      "candidate_info": {
        "commit_hash": "53011bad641476e316c02c8157b07ab1ca89c8ef",
        "repo": "spatie/image-optimizer",
        "commit_url": "https://github.com/spatie/image-optimizer/commit/53011bad641476e316c02c8157b07ab1ca89c8ef",
        "files": [
          "src/OptimizerChain.php"
        ],
        "message": "Update OptimizerChain.php\n\nUpdate code to fix vulnerability",
        "before_after_code_files": [
          "src/OptimizerChain.php||src/OptimizerChain.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/spatie/image-optimizer/pull/211"
        ],
        "olp_code_files": {
          "patch": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ],
          "candidate": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ]
        }
      },
      "candidate_diff": {
        "src/OptimizerChain.php||src/OptimizerChain.php": [
          "File: src/OptimizerChain.php -> src/OptimizerChain.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:             if($check == false){",
          "69:                 throw new InvalidArgumentException(\"Cannot copy file\");",
          "70:             }",
          "71:         }",
          "72:         $image = new Image($pathToImage);",
          "73:         $this->logger->info(\"Start optimizing {$pathToImage}\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:             $pathToImage = $pathToOutput;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "284a082b1814a846560ee1c91360bbdf3b4cb885",
      "candidate_info": {
        "commit_hash": "284a082b1814a846560ee1c91360bbdf3b4cb885",
        "repo": "spatie/image-optimizer",
        "commit_url": "https://github.com/spatie/image-optimizer/commit/284a082b1814a846560ee1c91360bbdf3b4cb885",
        "files": [
          "src/Image.php"
        ],
        "message": "Update Image.php\n\nFix the bug related to Deserialization of Untrusted Data",
        "before_after_code_files": [
          "src/Image.php||src/Image.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/spatie/image-optimizer/pull/211"
        ],
        "olp_code_files": {
          "patch": [
            "src/Image.php||src/Image.php"
          ],
          "candidate": [
            "src/Image.php||src/Image.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Image.php||src/Image.php": [
          "File: src/Image.php -> src/Image.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: class Image",
          "8: {",
          "9:     protected $pathToImage = '';",
          "11:     public function __construct(string $pathToImage)",
          "12:     {",
          "14:             throw new InvalidArgumentException(\"`{$pathToImage}` does not exist\");",
          "15:         }",
          "",
          "[Removed Lines]",
          "13:         if (! file_exists($pathToImage)) {",
          "",
          "[Added Lines]",
          "10:     protected const ALLOWED_PROTOCOLS = ['file'];",
          "12:     protected const WINDOWS_LOCAL_FILENAME_REGEX = '/^[a-z]:(?:[\\\\\\\\\\/]?(?:[\\w\\s!#()-]+|[\\.]{1,2})+)*[\\\\\\\\\\/]?/i';",
          "15:         if (!$this->isProtocolAllowed($pathToImage)) {",
          "16:             throw new InvalidArgumentException(\\sprintf('The output file scheme is not supported. Expected one of [\\'%s\\'].', \\implode('\\', \\'', self::ALLOWED_PROTOCOLS)));",
          "17:         }",
          "19:         if (!file_exists($pathToImage)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:         return strtolower($extension);",
          "35:     }",
          "36: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     protected function isProtocolAllowed($filename)",
          "43:     {",
          "44:         if (false === $parsedFilename = \\parse_url($filename)) {",
          "45:             throw new InvalidArgumentException('The filename is not valid.');",
          "46:         }",
          "48:         $protocol = isset($parsedFilename['scheme']) ? \\mb_strtolower($parsedFilename['scheme']) : 'file';",
          "50:         if (",
          "51:             \\PHP_OS_FAMILY === 'Windows'",
          "52:             && \\strlen($protocol) === 1",
          "53:             && \\preg_match(self::WINDOWS_LOCAL_FILENAME_REGEX, $filename)",
          "54:         ) {",
          "55:             $protocol = 'file';",
          "56:         }",
          "58:         return \\in_array($protocol, self::ALLOWED_PROTOCOLS, true);",
          "59:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2537386a3830ef28a2403d17cf363d17f8ae848",
      "candidate_info": {
        "commit_hash": "f2537386a3830ef28a2403d17cf363d17f8ae848",
        "repo": "spatie/image-optimizer",
        "commit_url": "https://github.com/spatie/image-optimizer/commit/f2537386a3830ef28a2403d17cf363d17f8ae848",
        "files": [
          "src/OptimizerChain.php"
        ],
        "message": "Update OptimizerChain.php\n\nFix bugs related to Deserialization of Untrusted Data",
        "before_after_code_files": [
          "src/OptimizerChain.php||src/OptimizerChain.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/spatie/image-optimizer/pull/211"
        ],
        "olp_code_files": {
          "patch": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ],
          "candidate": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ]
        }
      },
      "candidate_diff": {
        "src/OptimizerChain.php||src/OptimizerChain.php": [
          "File: src/OptimizerChain.php -> src/OptimizerChain.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:     public function optimize(string $pathToImage, string $pathToOutput = null)",
          "65:     {",
          "66:         if ($pathToOutput) {",
          "67:             copy($pathToImage, $pathToOutput);",
          "69:             $pathToImage = $pathToOutput;",
          "70:         }",
          "74:         $this->logger->info(\"Start optimizing {$pathToImage}\");",
          "76:         foreach ($this->optimizers as $optimizer) {",
          "",
          "[Removed Lines]",
          "72:         $image = new Image($pathToImage);",
          "",
          "[Added Lines]",
          "69:         $image = new Image($pathToImage);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "769e08534cc2e4ff3b906de278050419738a9ed3",
      "candidate_info": {
        "commit_hash": "769e08534cc2e4ff3b906de278050419738a9ed3",
        "repo": "spatie/image-optimizer",
        "commit_url": "https://github.com/spatie/image-optimizer/commit/769e08534cc2e4ff3b906de278050419738a9ed3",
        "files": [
          "src/OptimizerChain.php"
        ],
        "message": "Update OptimizerChain.php\n\nFix phar deserialization vulnerability",
        "before_after_code_files": [
          "src/OptimizerChain.php||src/OptimizerChain.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/spatie/image-optimizer/pull/211"
        ],
        "olp_code_files": {
          "patch": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ],
          "candidate": [
            "src/OptimizerChain.php||src/OptimizerChain.php"
          ]
        }
      },
      "candidate_diff": {
        "src/OptimizerChain.php||src/OptimizerChain.php": [
          "File: src/OptimizerChain.php -> src/OptimizerChain.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:     public function optimize(string $pathToImage, string $pathToOutput = null)",
          "65:     {",
          "70:         if ($pathToOutput) {",
          "74:         }",
          "76:         $this->logger->info(\"Start optimizing {$pathToImage}\");",
          "78:         foreach ($this->optimizers as $optimizer) {",
          "",
          "[Removed Lines]",
          "69:         $image = new Image($pathToImage);",
          "71:             copy($pathToImage, $pathToOutput);",
          "73:             $pathToImage = $pathToOutput;",
          "",
          "[Added Lines]",
          "67:             $check = copy($pathToImage, $pathToOutput);",
          "68:             if($check == false){",
          "69:                 throw new InvalidArgumentException(\"Cannot copy file\");",
          "70:             }",
          "72:         $image = new Image($pathToImage);",
          "",
          "---------------"
        ]
      }
    }
  ]
}