{
  "cve_id": "CVE-2022-31777",
  "cve_desc": "A stored cross-site scripting (XSS) vulnerability in Apache Spark 3.2.1 and earlier, and 3.3.0, allows remote attackers to execute arbitrary JavaScript in the web browser of a user, by including a malicious payload into the logs which would be returned in logs rendered in the UI.",
  "repo": "apache/spark",
  "patch_hash": "ad90195de56688ce0898691eb9d04297ab0871ad",
  "patch_info": {
    "commit_hash": "ad90195de56688ce0898691eb9d04297ab0871ad",
    "repo": "apache/spark",
    "commit_url": "https://github.com/apache/spark/commit/ad90195de56688ce0898691eb9d04297ab0871ad",
    "files": [
      "core/src/main/resources/org/apache/spark/ui/static/log-view.js"
    ],
    "message": "[SPARK-39505][UI] Escape log content rendered in UI\n\n### What changes were proposed in this pull request?\n\nEscape log content rendered to the UI.\n\n### Why are the changes needed?\n\nLog content may contain reserved characters or other code in the log and be misinterpreted in the UI as HTML.\n\n### Does this PR introduce _any_ user-facing change?\n\nNo\n\n### How was this patch tested?\n\nExisting tests\n\nCloses #36902 from srowen/LogViewEscape.\n\nAuthored-by: Sean Owen <srowen@gmail.com>\nSigned-off-by: Dongjoon Hyun <dongjoon@apache.org>",
    "before_after_code_files": [
      "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
    ]
  },
  "patch_diff": {
    "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js": [
      "File: core/src/main/resources/org/apache/spark/ui/static/log-view.js -> core/src/main/resources/org/apache/spark/ui/static/log-view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "85:       if (retStartByte == 0) {",
      "86:         disableMoreButton();",
      "87:       }",
      "90:       curLogLength = curLogLength + (startByte - retStartByte);",
      "91:       startByte = retStartByte;",
      "",
      "[Removed Lines]",
      "88:       $(\"pre\", \".log-content\").prepend(cleanData);",
      "",
      "[Added Lines]",
      "88:       $(\"pre\", \".log-content\").prepend(document.createTextNode(cleanData));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "115:             var retLogLength = dataInfo[2];",
      "117:             var cleanData = data.substring(newlineIndex + 1);",
      "120:             curLogLength = curLogLength + (retEndByte - retStartByte);",
      "121:             endByte = retEndByte;",
      "",
      "[Removed Lines]",
      "118:             $(\"pre\", \".log-content\").append(cleanData);",
      "",
      "[Added Lines]",
      "118:             $(\"pre\", \".log-content\").append(document.createTextNode(cleanData));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0db78424201cd7b2e2bcffb9de3c2a12a0c67b44",
      "candidate_info": {
        "commit_hash": "0db78424201cd7b2e2bcffb9de3c2a12a0c67b44",
        "repo": "apache/spark",
        "commit_url": "https://github.com/apache/spark/commit/0db78424201cd7b2e2bcffb9de3c2a12a0c67b44",
        "files": [
          "python/pyspark/sql/readwriter.py"
        ],
        "message": "[SPARK-40117][PYTHON][SQL] Convert condition to java in DataFrameWriterV2.overwrite\n\n### What changes were proposed in this pull request?\n\nFix DataFrameWriterV2.overwrite() fails to convert the condition parameter to java. This prevents the function from being called.\n\nIt is caused by the following commit that deleted the `_to_java_column` call instead of fixing it: https://github.com/apache/spark/commit/a1e459ed9f6777fb8d5a2d09fda666402f9230b9\n\n### Why are the changes needed?\n\nDataFrameWriterV2.overwrite() cannot be called.\n\n### Does this PR introduce _any_ user-facing change?\n\nNo\n\n### How was this patch tested?\n\nManually checked whether the arguments are sent to JVM or not.\n\nCloses #37547 from looi/fix-overwrite.\n\nAuthored-by: Wenli Looi <wlooi@ucalgary.ca>\nSigned-off-by: Hyukjin Kwon <gurwls223@apache.org>\n(cherry picked from commit 46379863ab0dd2ee8fcf1e31e76476ff18397f60)\nSigned-off-by: Hyukjin Kwon <gurwls223@apache.org>",
        "before_after_code_files": [
          "python/pyspark/sql/readwriter.py||python/pyspark/sql/readwriter.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jack-steven-root/spark/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "python/pyspark/sql/readwriter.py||python/pyspark/sql/readwriter.py": [
          "File: python/pyspark/sql/readwriter.py -> python/pyspark/sql/readwriter.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1465:         Overwrite rows matching the given filter condition with the contents of the data frame in",
          "1466:         the output table.",
          "1467:         \"\"\"",
          "1468:         self._jwriter.overwrite(condition)",
          "1470:     @since(3.1)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1468:         condition = _to_java_column(condition)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14bc8ec1d0ce5fcafd6b85b02cba2a4880b6a41d",
      "candidate_info": {
        "commit_hash": "14bc8ec1d0ce5fcafd6b85b02cba2a4880b6a41d",
        "repo": "apache/spark",
        "commit_url": "https://github.com/apache/spark/commit/14bc8ec1d0ce5fcafd6b85b02cba2a4880b6a41d",
        "files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ],
        "message": "[SPARK-39505][UI] Escape log content rendered in UI\n\n### What changes were proposed in this pull request?\n\nEscape log content rendered to the UI.\n\n### Why are the changes needed?\n\nLog content may contain reserved characters or other code in the log and be misinterpreted in the UI as HTML.\n\n### Does this PR introduce _any_ user-facing change?\n\nNo\n\n### How was this patch tested?\n\nExisting tests\n\nCloses #36902 from srowen/LogViewEscape.\n\nAuthored-by: Sean Owen <srowen@gmail.com>\nSigned-off-by: Dongjoon Hyun <dongjoon@apache.org>",
        "before_after_code_files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ],
          "candidate": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js": [
          "File: core/src/main/resources/org/apache/spark/ui/static/log-view.js -> core/src/main/resources/org/apache/spark/ui/static/log-view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:       if (retStartByte == 0) {",
          "83:         disableMoreButton();",
          "84:       }",
          "87:       curLogLength = curLogLength + (startByte - retStartByte);",
          "88:       startByte = retStartByte;",
          "",
          "[Removed Lines]",
          "85:       $(\"pre\", \".log-content\").prepend(cleanData);",
          "",
          "[Added Lines]",
          "85:       $(\"pre\", \".log-content\").prepend(document.createTextNode(cleanData));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:             var retLogLength = dataInfo[2];",
          "114:             var cleanData = data.substring(newlineIndex + 1);",
          "117:             curLogLength = curLogLength + (retEndByte - retStartByte);",
          "118:             endByte = retEndByte;",
          "",
          "[Removed Lines]",
          "115:             $(\"pre\", \".log-content\").append(cleanData);",
          "",
          "[Added Lines]",
          "115:             $(\"pre\", \".log-content\").append(document.createTextNode(cleanData));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37dbf1cc99ab888342d04b0bf41619ff597ddab9",
      "candidate_info": {
        "commit_hash": "37dbf1cc99ab888342d04b0bf41619ff597ddab9",
        "repo": "apache/spark",
        "commit_url": "https://github.com/apache/spark/commit/37dbf1cc99ab888342d04b0bf41619ff597ddab9",
        "files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ],
        "message": "[SPARK-39505][UI] Escape log content rendered in UI\n\n### What changes were proposed in this pull request?\n\nEscape log content rendered to the UI.\n\n### Why are the changes needed?\n\nLog content may contain reserved characters or other code in the log and be misinterpreted in the UI as HTML.\n\n### Does this PR introduce _any_ user-facing change?\n\nNo\n\n### How was this patch tested?\n\nExisting tests\n\nCloses #36902 from srowen/LogViewEscape.\n\nAuthored-by: Sean Owen <srowen@gmail.com>\nSigned-off-by: Dongjoon Hyun <dongjoon@apache.org>",
        "before_after_code_files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ],
          "candidate": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js": [
          "File: core/src/main/resources/org/apache/spark/ui/static/log-view.js -> core/src/main/resources/org/apache/spark/ui/static/log-view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:       if (retStartByte == 0) {",
          "86:         disableMoreButton();",
          "87:       }",
          "90:       curLogLength = curLogLength + (startByte - retStartByte);",
          "91:       startByte = retStartByte;",
          "",
          "[Removed Lines]",
          "88:       $(\"pre\", \".log-content\").prepend(cleanData);",
          "",
          "[Added Lines]",
          "88:       $(\"pre\", \".log-content\").prepend(document.createTextNode(cleanData));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:             var retLogLength = dataInfo[2];",
          "117:             var cleanData = data.substring(newlineIndex + 1);",
          "120:             curLogLength = curLogLength + (retEndByte - retStartByte);",
          "121:             endByte = retEndByte;",
          "",
          "[Removed Lines]",
          "118:             $(\"pre\", \".log-content\").append(cleanData);",
          "",
          "[Added Lines]",
          "118:             $(\"pre\", \".log-content\").append(document.createTextNode(cleanData));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07edae97342ae3095b370a3f780b61c94241e771",
      "candidate_info": {
        "commit_hash": "07edae97342ae3095b370a3f780b61c94241e771",
        "repo": "apache/spark",
        "commit_url": "https://github.com/apache/spark/commit/07edae97342ae3095b370a3f780b61c94241e771",
        "files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ],
        "message": "[SPARK-39505][UI] Escape log content rendered in UI\n\n### What changes were proposed in this pull request?\n\nEscape log content rendered to the UI.\n\n### Why are the changes needed?\n\nLog content may contain reserved characters or other code in the log and be misinterpreted in the UI as HTML.\n\n### Does this PR introduce _any_ user-facing change?\n\nNo\n\n### How was this patch tested?\n\nExisting tests\n\nCloses #36902 from srowen/LogViewEscape.\n\nAuthored-by: Sean Owen <srowen@gmail.com>\nSigned-off-by: Dongjoon Hyun <dongjoon@apache.org>",
        "before_after_code_files": [
          "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ],
          "candidate": [
            "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/resources/org/apache/spark/ui/static/log-view.js||core/src/main/resources/org/apache/spark/ui/static/log-view.js": [
          "File: core/src/main/resources/org/apache/spark/ui/static/log-view.js -> core/src/main/resources/org/apache/spark/ui/static/log-view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:       if (retStartByte == 0) {",
          "86:         disableMoreButton();",
          "87:       }",
          "90:       curLogLength = curLogLength + (startByte - retStartByte);",
          "91:       startByte = retStartByte;",
          "",
          "[Removed Lines]",
          "88:       $(\"pre\", \".log-content\").prepend(cleanData);",
          "",
          "[Added Lines]",
          "88:       $(\"pre\", \".log-content\").prepend(document.createTextNode(cleanData));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:             var retLogLength = dataInfo[2];",
          "117:             var cleanData = data.substring(newlineIndex + 1);",
          "120:             curLogLength = curLogLength + (retEndByte - retStartByte);",
          "121:             endByte = retEndByte;",
          "",
          "[Removed Lines]",
          "118:             $(\"pre\", \".log-content\").append(cleanData);",
          "",
          "[Added Lines]",
          "118:             $(\"pre\", \".log-content\").append(document.createTextNode(cleanData));",
          "",
          "---------------"
        ]
      }
    }
  ]
}