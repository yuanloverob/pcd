{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9077387f576b73da57698dd0cc0b3d287789d0d1",
      "candidate_info": {
        "commit_hash": "9077387f576b73da57698dd0cc0b3d287789d0d1",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9077387f576b73da57698dd0cc0b3d287789d0d1",
        "files": [
          "src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php",
          "src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php"
        ],
        "message": "add new migration column",
        "before_after_code_files": [
          "src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php||src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php",
          "src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php||src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php||src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php": [
          "File: src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php -> src/Migrations/2022_03_18_075818_add_event_column_to_activity_log_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Illuminate\\Support\\Facades\\Schema;",
          "4: use Illuminate\\Database\\Schema\\Blueprint;",
          "5: use Illuminate\\Database\\Migrations\\Migration;",
          "7: class AddEventColumnToActivityLogTable extends Migration",
          "8: {",
          "9:     public function up()",
          "10:     {",
          "11:         Schema::connection(config('activitylog.database_connection'))->table(config('activitylog.table_name'), function (Blueprint $table) {",
          "12:             $table->string('event')->nullable()->after('subject_type');",
          "13:         });",
          "14:     }",
          "16:     public function down()",
          "17:     {",
          "18:         Schema::connection(config('activitylog.database_connection'))->table(config('activitylog.table_name'), function (Blueprint $table) {",
          "19:             $table->dropColumn('event');",
          "20:         });",
          "21:     }",
          "22: }",
          "",
          "---------------"
        ],
        "src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php||src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php": [
          "File: src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php -> src/Migrations/2022_03_18_075819_add_batch_uuid_column_to_activity_log_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Illuminate\\Support\\Facades\\Schema;",
          "4: use Illuminate\\Database\\Schema\\Blueprint;",
          "5: use Illuminate\\Database\\Migrations\\Migration;",
          "7: class AddBatchUuidColumnToActivityLogTable extends Migration",
          "8: {",
          "9:     public function up()",
          "10:     {",
          "11:         Schema::connection(config('activitylog.database_connection'))->table(config('activitylog.table_name'), function (Blueprint $table) {",
          "12:             $table->uuid('batch_uuid')->nullable()->after('properties');",
          "13:         });",
          "14:     }",
          "16:     public function down()",
          "17:     {",
          "18:         Schema::connection(config('activitylog.database_connection'))->table(config('activitylog.table_name'), function (Blueprint $table) {",
          "19:             $table->dropColumn('batch_uuid');",
          "20:         });",
          "21:     }",
          "22: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0f85547fd4fb99a3703b83d2b341e26aaeb2190",
      "candidate_info": {
        "commit_hash": "a0f85547fd4fb99a3703b83d2b341e26aaeb2190",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/a0f85547fd4fb99a3703b83d2b341e26aaeb2190",
        "files": [
          "src/Database/Types/Mysql/EnumType.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Database/Types/Mysql/EnumType.php||src/Database/Types/Mysql/EnumType.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Database/Types/Mysql/EnumType.php||src/Database/Types/Mysql/EnumType.php": [
          "File: src/Database/Types/Mysql/EnumType.php -> src/Database/Types/Mysql/EnumType.php"
        ]
      }
    },
    {
      "candidate_hash": "49530dae343f61e87f87189b0d075c00b84dc6c9",
      "candidate_info": {
        "commit_hash": "49530dae343f61e87f87189b0d075c00b84dc6c9",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/49530dae343f61e87f87189b0d075c00b84dc6c9",
        "files": [
          "src/Helpers/CallHelperTest.php",
          "src/resources/js/components/BadasoSidebarItem.vue",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "integration testing",
        "before_after_code_files": [
          "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php",
          "src/resources/js/components/BadasoSidebarItem.vue||src/resources/js/components/BadasoSidebarItem.vue",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Helpers/CallHelperTest.php||src/Helpers/CallHelperTest.php": [
          "File: src/Helpers/CallHelperTest.php -> src/Helpers/CallHelperTest.php"
        ],
        "src/resources/js/components/BadasoSidebarItem.vue||src/resources/js/components/BadasoSidebarItem.vue": [
          "File: src/resources/js/components/BadasoSidebarItem.vue -> src/resources/js/components/BadasoSidebarItem.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <template>",
          "2:   <div",
          "3:     :class=\"{ 'vs-sidebar-item-active': getActive }\"",
          "5:     @click=\"setIndexActive\"",
          "6:   >",
          "7:     <router-link v-if=\"to && target === '_self'\" :to=\"to\">",
          "",
          "[Removed Lines]",
          "4:     class=\"vs-sidebar--item\"",
          "",
          "[Added Lines]",
          "4:     class=\"vs-sidebar--item \"",
          "",
          "---------------"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "414:                 if ($badaso_type == 'relation') {",
          "415:                     $destination_field['badaso_type'] = 'id';",
          "417:                     $row['relationType'] = ['belongs_to', 'has_one', 'has_many'][rand(0, 2)];",
          "418:                     $row['relationType'] = true;",
          "419:                     $row['destinationTable'] = $table_names[0];",
          "420:                     $row['destinationTableColumn'] = $destination_field['badaso_type'];",
          "421:                     $row['destinationTableDisplayColumn'] = $destination_field['badaso_type'];",
          "422:                     $row['required'] = false;",
          "423:                 }",
          "425:                 $rows[] = $row;",
          "426:             }",
          "427:             $data_table_crud_management_log[$index_table_name]['rows'] = $rows;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "416:                     $destination_more_field['badaso_type'] = ['select_multiple'];",
          "423:                     $row['destinationTableDisplayMoreColumn'] = $destination_more_field['badaso_type'];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "752:     public function testRelationDataBySlugEntityResultCrudManagement()",
          "753:     {",
          "762:     }",
          "764:     public function testEditCrudManagement()",
          "",
          "[Removed Lines]",
          "754:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "755:         foreach ($tables as $key => $slug) {",
          "756:             $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/table/relation-data-by-slug'), [",
          "757:                 'slug' => $slug,",
          "758:             ]);",
          "760:             $response->assertSuccessful();",
          "761:         }",
          "",
          "[Added Lines]",
          "760:             $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_TABLES);",
          "761:             foreach ($tables as $key => $slug) {",
          "762:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/table/relation-data-by-slug'), [",
          "763:                     'slug' => $slug,",
          "764:                 ]);",
          "766:                 $response->assertSuccessful();",
          "767:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2a5322906dcb3fed02891fca204d0eed908d0da",
      "candidate_info": {
        "commit_hash": "b2a5322906dcb3fed02891fca204d0eed908d0da",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/b2a5322906dcb3fed02891fca204d0eed908d0da",
        "files": [
          "src/Controllers/Controller.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         if ($user = auth()->user()) {",
          "41:             $permissions = DB::SELECT('",
          "42:                 SELECT *",
          "48:                 WHERE u.id = :user_id",
          "49:                 AND p.key = :permission",
          "50:             ', [",
          "51:                 'user_id'    => $user->id,",
          "53:             ]);",
          "55:             if (count($permissions) > 0) {",
          "",
          "[Removed Lines]",
          "43:                 FROM ' . $prefix . 'permissions p",
          "44:                 JOIN ' . $prefix . 'role_permissions rp ON p.id = rp.permission_id",
          "45:                 JOIN ' . $prefix . 'roles r ON rp.role_id  = r.id",
          "46:                 JOIN ' . $prefix . 'user_roles ur ON r.id = ur.role_id",
          "47:                 JOIN ' . $prefix . 'users u ON ur.user_id = u.id",
          "52:                 'permission' => $method . '_' . $data_type->name,",
          "",
          "[Added Lines]",
          "43:                 FROM '.$prefix.'permissions p",
          "44:                 JOIN '.$prefix.'role_permissions rp ON p.id = rp.permission_id",
          "45:                 JOIN '.$prefix.'roles r ON rp.role_id  = r.id",
          "46:                 JOIN '.$prefix.'user_roles ur ON r.id = ur.role_id",
          "47:                 JOIN '.$prefix.'users u ON ur.user_id = u.id",
          "52:                 'permission' => $method.'_'.$data_type->name,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:                     $destination_table_column = array_key_exists('destination_table_column', $relation_detail) ? $relation_detail['destination_table_column'] : null;",
          "93:                     if ($relation_type == 'belongs_to') {",
          "95:                     }",
          "96:                 }",
          "97:             }",
          "",
          "[Removed Lines]",
          "94:                         $rules[$row->field][] = 'exists:' . $destination_table . ',' . $destination_table_column;",
          "",
          "[Added Lines]",
          "94:                         $rules[$row->field][] = 'exists:'.$destination_table.','.$destination_table_column;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:             $model = app($data_type->model_name);",
          "270:             foreach ($data as $key => $value) {",
          "271:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "273:                     $model->{$key} = $this->getContentByType($data_type, $data_row, $value);",
          "274:                 }",
          "275:             }",
          "",
          "[Removed Lines]",
          "272:                 if (!is_null($data_row)) {",
          "",
          "[Added Lines]",
          "272:                 if (! is_null($data_row)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "281:             $data['updated_at'] = $timestamp;",
          "282:             foreach ($data as $key => $value) {",
          "283:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "285:                     $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "286:                 } else {",
          "287:                     if (in_array($key, ['created_at', 'updated_at'])) {",
          "",
          "[Removed Lines]",
          "284:                 if (!is_null($data_row)) {",
          "",
          "[Added Lines]",
          "284:                 if (! is_null($data_row)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "320:                         $files = explode(',', $model->{$data_row->field});",
          "321:                         foreach ($files as $file) {",
          "322:                             if (is_array($value)) {",
          "324:                                     $this->handleDeleteFile($file);",
          "325:                                 }",
          "326:                             } else {",
          "",
          "[Removed Lines]",
          "323:                                 if (!in_array($file, $value)) {",
          "",
          "[Added Lines]",
          "323:                                 if (! in_array($file, $value)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "353:                         $files = explode(',', $model->{$data_row->field});",
          "354:                         foreach ($files as $file) {",
          "355:                             if (is_array($value)) {",
          "357:                                     $this->handleDeleteFile($file);",
          "358:                                 }",
          "359:                             } else {",
          "",
          "[Removed Lines]",
          "356:                                 if (!in_array($file, $value)) {",
          "",
          "[Added Lines]",
          "356:                                 if (! in_array($file, $value)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "384:         if ($data_type->model_name) {",
          "385:             $model = app($data_type->model_name);",
          "386:             $model = $model::find($id);",
          "388:                 foreach ($data_rows as $data_row) {",
          "389:                     if (in_array($data_row->type, [",
          "390:                         'upload_image',",
          "",
          "[Removed Lines]",
          "387:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "387:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "412:             }",
          "413:         } else {",
          "414:             $model = DB::table($data_type->name)->where('id', $id)->first();",
          "416:                 foreach ($data_rows as $data_row) {",
          "417:                     if (in_array($data_row->type, [",
          "418:                         'upload_image',",
          "",
          "[Removed Lines]",
          "415:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "415:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "451:         if ($data_type->model_name) {",
          "452:             $model = app($data_type->model_name);",
          "453:             $model = $model::find($id);",
          "455:                 foreach ($data_rows as $data_row) {",
          "456:                     if (in_array($data_row->type, [",
          "457:                         'upload_image',",
          "",
          "[Removed Lines]",
          "454:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "454:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "471:             }",
          "472:         } else {",
          "473:             $model = DB::table($data_type->name)->where('id', $id)->first();",
          "475:                 foreach ($data_rows as $data_row) {",
          "476:                     if (in_array($data_row->type, [",
          "477:                         'upload_image',",
          "",
          "[Removed Lines]",
          "474:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "474:             if (! is_null($model)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fcca47f3f74f4df65cacb2a66ff3368fd6077dc3",
      "candidate_info": {
        "commit_hash": "fcca47f3f74f4df65cacb2a66ff3368fd6077dc3",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/fcca47f3f74f4df65cacb2a66ff3368fd6077dc3",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "fix crudmanagement test",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:                     'badaso_type' => 'upload_file_multiple',",
          "235:                     'schema_type' => 'string',",
          "236:                     'details' => json_encode((object) []),",
          "245:                 ],",
          "246:             ];",
          "247:     }",
          "",
          "[Removed Lines]",
          "237:                     'example' => [",
          "238:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "239:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "240:                     ],",
          "241:                     'example_update' => [",
          "242:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "243:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "244:                     ],",
          "",
          "[Added Lines]",
          "237:                     'example' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\']\",",
          "238:                     'example_update' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png\\']\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251:         $table_names = [];",
          "252:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "253:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "255:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "256:                     $table->id();",
          "",
          "[Removed Lines]",
          "254:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "248:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "444:                 }",
          "445:                 PHP;",
          "446:                 $model_path = app_path(\"Models/$model_file_name\");",
          "448:                     file_put_contents($model_path, $model_body);",
          "449:                 }",
          "",
          "[Removed Lines]",
          "447:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "441:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "465:             $controller_data = [];",
          "466:             if (rand(0, 1)) {",
          "469:                 $controller_file_name = \"{$controller_name}.php\";",
          "470:                 $controller_body = <<<PHP",
          "471:                 <?php",
          "",
          "[Removed Lines]",
          "468:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "462:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "474:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "475:                 PHP;",
          "476:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "478:                     file_put_contents($controller_path, $controller_body);",
          "479:                 }",
          "",
          "[Removed Lines]",
          "477:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "471:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "917:             if ($table['table'] == 'table_relation') {",
          "918:                 for ($i = 0; $i < 2; $i++) {",
          "919:                     $field[$i] = [",
          "922:                         'fieldType' => 'bigint',",
          "923:                         'fieldLength' => null,",
          "924:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "920:                         'id' => $name_table[$i].'_id',",
          "921:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "[Added Lines]",
          "914:                         'id' => $name_table[$i] . '_id',",
          "915:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "931:                     array_push($table['rows'], $field[$i]);",
          "932:                 }",
          "933:                 $table['relations'] = [",
          "936:                         'target_table' => $name_table[1],",
          "937:                         'target_field' => 'id',",
          "938:                         'on_delete' => 'cascade',",
          "939:                         'on_update' => 'restrict',",
          "940:                     ],",
          "943:                         'target_table' => $name_table[0],",
          "944:                         'target_field' => 'id',",
          "945:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "934:                     $name_table[1].'_id' => [",
          "935:                         'source_field' => $name_table[1].'_id',",
          "941:                     $name_table[0].'_id' => [",
          "942:                         'source_field' => $name_table[0].'_id',",
          "",
          "[Added Lines]",
          "928:                     $name_table[1] . '_id' => [",
          "929:                         'source_field' => $name_table[1] . '_id',",
          "935:                     $name_table[0] . '_id' => [",
          "936:                         'source_field' => $name_table[0] . '_id',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "953:         foreach ($name_table as $key => $crud_table) {",
          "954:             $crud_table = [",
          "955:                 'name' => $crud_table,",
          "957:                 'displayNameSingular' => $crud_table,",
          "958:                 'displayNamePlural' => $crud_table,",
          "959:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "956:                 'slug' => 'table-'.$key + 1,",
          "",
          "[Added Lines]",
          "950:                 'slug' => 'table-' . $key + 1,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1080:         foreach ($name_table as $key => $table) {",
          "1081:             if ($table == 'table-2') {",
          "1082:                 for ($i = 1; $i < 4; $i++) {",
          "1084:                         'data' => [",
          "1086:                         ],",
          "1087:                     ]);",
          "1088:                 }",
          "1089:             } else {",
          "1091:                 $response->assertSuccessful();",
          "1092:             }",
          "1093:         }",
          "1097:         $response->assertSuccessful();",
          "1098:         $data_browse = $response['data']['data'][0];",
          "1102:             'data' => [",
          "1103:                 'id' => $data_browse['id'],",
          "1104:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1083:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1085:                             'name' => 'option '.$i,",
          "1090:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1096:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1101:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "[Added Lines]",
          "1077:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1079:                             'name' => 'option ' . $i,",
          "1084:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1090:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1095:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1108:         $response->assertSuccessful();",
          "1112:             'slug' => $table,",
          "1113:             'data' => [",
          "1114:                 [",
          "",
          "[Removed Lines]",
          "1111:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "[Added Lines]",
          "1105:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1475:                 }",
          "1476:                 PHP;",
          "1477:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1479:                     file_put_contents($model_path, $model_body);",
          "1480:                 }",
          "",
          "[Removed Lines]",
          "1478:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1472:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1496:             $controller_data = [];",
          "1497:             if (rand(0, 1)) {",
          "1500:                 $controller_file_name = \"{$controller_name}.php\";",
          "1501:                 $controller_body = <<<PHP",
          "1502:                 <?php",
          "",
          "[Removed Lines]",
          "1499:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1493:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1505:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1506:                 PHP;",
          "1507:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1509:                     file_put_contents($controller_path, $controller_body);",
          "1510:                 }",
          "",
          "[Removed Lines]",
          "1508:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1502:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1525:             $request_body = [",
          "1526:                 'name' =>  $table_name,",
          "1527:                 'slug' =>  $table_name,",
          "1530:                 'icon' =>  'add',",
          "1531:                 'modelName' =>  $model,",
          "1532:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "1528:                 'displayNameSingular' =>  $table_label.'(update)',",
          "1529:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "[Added Lines]",
          "1522:                 'displayNameSingular' =>  $table_label . '(update)',",
          "1523:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1612:             $controller_name = \"{$name}Controller.php\";",
          "1614:             if (file_exists($controller_path)) {",
          "1615:                 unlink($controller_path);",
          "1616:             }",
          "1619:             $model_name = \"{$name}.php\";",
          "1621:             if (file_exists($model_path)) {",
          "1622:                 unlink($model_path);",
          "1623:             }",
          "",
          "[Removed Lines]",
          "1613:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "1620:             $model_path = app_path('Models/'.$model_name);",
          "",
          "[Added Lines]",
          "1607:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "1614:             $model_path = app_path('Models/' . $model_name);",
          "",
          "---------------"
        ]
      }
    }
  ]
}