{
  "cve_id": "CVE-2024-12678",
  "cve_desc": "Nomad Community and Nomad Enterprise (\"Nomad\") allocations are vulnerable to privilege escalation within a namespace through unredacted workload identity tokens. This vulnerability, identified as CVE-2024-12678, is fixed in Nomad Community Edition 1.9.4 and Nomad Enterprise 1.9.4, 1.8.8, and 1.7.16.",
  "repo": "hashicorp/nomad",
  "patch_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
  "patch_info": {
    "commit_hash": "359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "repo": "hashicorp/nomad",
    "commit_url": "https://github.com/hashicorp/nomad/commit/359a71861ef044cb5d749a36ff0e44b172c8f1a6",
    "files": [
      ".changelog/24683.txt",
      "command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go",
      "nomad/structs/structs.go"
    ],
    "message": "Backport of sec: fix alloc workload identity namespace permission into release/1.9.x (#24685)\n\nCo-authored-by: Deniz Onur Duzgun <59659739+dduzgun-security@users.noreply.github.com>",
    "before_after_code_files": [
      "command/agent/node_endpoint.go||command/agent/node_endpoint.go",
      "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go",
      "nomad/structs/structs.go||nomad/structs/structs.go"
    ]
  },
  "patch_diff": {
    "command/agent/node_endpoint.go||command/agent/node_endpoint.go": [
      "File: command/agent/node_endpoint.go -> command/agent/node_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:   out.Allocs = make([]*structs.Allocation, 0)",
      "106:  }",
      "107:  for _, alloc := range out.Allocs {",
      "108:   alloc.SetEventDisplayMessages()",
      "109:  }",
      "110:  return out.Allocs, nil",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   alloc = alloc.Sanitize()",
      "",
      "---------------"
    ],
    "nomad/alloc_endpoint.go||nomad/alloc_endpoint.go": [
      "File: nomad/alloc_endpoint.go -> nomad/alloc_endpoint.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "172:    }",
      "176:    if out != nil {",
      "178:     if !aclObj.AllowClientOp() && !allowNsOp(aclObj, out.Namespace) {",
      "179:      return structs.NewErrUnknownAllocation(args.AllocID)",
      "",
      "[Removed Lines]",
      "175:    reply.Alloc = out",
      "",
      "[Added Lines]",
      "176:     out = out.Sanitize()",
      "177:     reply.Alloc = out",
      "",
      "---------------"
    ],
    "nomad/structs/structs.go||nomad/structs/structs.go": [
      "File: nomad/structs/structs.go -> nomad/structs/structs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "11199:  return a.ID",
      "11200: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11205: func (a *Allocation) Sanitize() *Allocation {",
      "11206:  if a == nil {",
      "11207:   return nil",
      "11208:  }",
      "11210:  if a.SignedIdentities == nil {",
      "11211:   return a",
      "11212:  }",
      "11214:  clean := a.Copy()",
      "11215:  clean.SignedIdentities = nil",
      "11216:  return clean",
      "11217: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "efa555311524f981aa2bef82f67c88e1cc2b5a1f",
      "candidate_info": {
        "commit_hash": "efa555311524f981aa2bef82f67c88e1cc2b5a1f",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/efa555311524f981aa2bef82f67c88e1cc2b5a1f",
        "files": [
          ".changelog/24991.txt",
          "drivers/docker/coordinator.go",
          "drivers/docker/coordinator_test.go"
        ],
        "message": "backport of commit 62ef621582d5e9d6da544d9baaadfb39b502fc07 (#25054)\n\nCo-authored-by: Daniel Bennett <dbennett@hashicorp.com>",
        "before_after_code_files": [
          "drivers/docker/coordinator.go||drivers/docker/coordinator.go",
          "drivers/docker/coordinator_test.go||drivers/docker/coordinator_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/docker/coordinator.go||drivers/docker/coordinator.go": [
          "File: drivers/docker/coordinator.go -> drivers/docker/coordinator.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:  }",
          "44: }",
          "49:  return p",
          "50: }",
          "",
          "[Removed Lines]",
          "47: func (p *pullFuture) wait() *pullFuture {",
          "48:  <-p.waitCh",
          "",
          "[Added Lines]",
          "47: func (p *pullFuture) wait(ctx context.Context) *pullFuture {",
          "48:  select {",
          "49:  case <-ctx.Done():",
          "50:   p.err = fmt.Errorf(\"wait aborted: %w\", ctx.Err())",
          "51:  case <-p.waitCh:",
          "53:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:   d.pullFutures[image] = future",
          "154:   go d.pullImageImpl(image, authOptions, pullTimeout, pullActivityTimeout, future)",
          "155:  }",
          "156:  d.imageLock.Unlock()",
          "161:  d.imageLock.Lock()",
          "162:  defer d.imageLock.Unlock()",
          "",
          "[Removed Lines]",
          "159:  id, user, err := future.wait().result()",
          "",
          "[Added Lines]",
          "166:  id, user, err := future.wait(d.ctx).result()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "182:  defer d.clearPullLogger(imageID)",
          "184:  repo, tag := parseDockerImage(imageID)",
          "186:  defer cancel()",
          "188:  pm := newImageProgressManager(imageID, cancel, pullActivityTimeout, d.handlePullInactivity,",
          "",
          "[Removed Lines]",
          "185:  ctx, cancel := context.WithTimeout(context.Background(), pullTimeout)",
          "",
          "[Added Lines]",
          "193:  pullCtx, cancel := context.WithTimeout(d.ctx, pullTimeout)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:  }",
          "198:  pullOptions := image.PullOptions{RegistryAuth: auth.Auth}",
          "202:   d.logger.Error(\"timeout pulling container\", \"image_ref\", dockerImageRef(repo, tag))",
          "204:   return",
          "205:  }",
          "",
          "[Removed Lines]",
          "199:  reader, err := d.client.ImagePull(d.ctx, dockerImageRef(repo, tag), pullOptions)",
          "201:  if errors.Is(ctx.Err(), context.DeadlineExceeded) {",
          "203:   future.set(\"\", \"\", recoverablePullError(ctx.Err(), imageID))",
          "",
          "[Added Lines]",
          "207:  reader, err := d.client.ImagePull(pullCtx, dockerImageRef(repo, tag), pullOptions)",
          "209:  if errors.Is(err, context.DeadlineExceeded) {",
          "211:   future.set(\"\", \"\", recoverablePullError(err, imageID))",
          "",
          "---------------"
        ],
        "drivers/docker/coordinator_test.go||drivers/docker/coordinator_test.go": [
          "File: drivers/docker/coordinator_test.go -> drivers/docker/coordinator_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "43: func (m *mockImageClient) ImagePull(ctx context.Context, refStr string, opts image.PullOptions) (io.ReadCloser, error) {",
          "45:  m.lock.Lock()",
          "46:  defer m.lock.Unlock()",
          "47:  m.pulled[refStr]++",
          "",
          "[Removed Lines]",
          "44:  time.Sleep(m.pullDelay)",
          "",
          "[Added Lines]",
          "44:  select {",
          "45:  case <-ctx.Done():",
          "46:   return nil, fmt.Errorf(\"mockImageClient.ImagePull aborted: %w\", ctx.Err())",
          "47:  case <-time.After(m.pullDelay):",
          "48:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:  }",
          "362:  coordinator := newDockerCoordinator(config)",
          "366:  readErr := errors.New(\"a bad bad thing happened\")",
          "367:  mock.pullReader = &readErrorer{readErr: readErr}",
          "369:  _, _, err := coordinator.PullImage(\"foo\", nil, uuid.Generate(), nil, timeout, timeout)",
          "370:  must.ErrorIs(t, err, readErr)",
          "371: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "375: func TestDockerCoordinator_PullImage_Timeouts(t *testing.T) {",
          "376:  ci.Parallel(t)",
          "378:  cases := []struct {",
          "379:   name          string",
          "380:   driverTimeout time.Duration // used in driver context to simulate driver/agent shutdown",
          "381:   pullTimeout   time.Duration // user provided `image_pull_timeout`",
          "382:   pullDelay     time.Duration // mock delay - how long it \"actually\" takes to pull the image",
          "383:   expectErr     string",
          "384:  }{",
          "385:   {",
          "386:    name:          \"pull completes\",",
          "387:    pullDelay:     10 * time.Millisecond,",
          "388:    pullTimeout:   200 * time.Millisecond,",
          "389:    driverTimeout: 400 * time.Millisecond,",
          "390:    expectErr:     \"\",",
          "391:   },",
          "392:   {",
          "393:    name:          \"pull timeout\",",
          "394:    pullDelay:     400 * time.Millisecond,",
          "395:    pullTimeout:   10 * time.Millisecond,",
          "396:    driverTimeout: 200 * time.Millisecond,",
          "397:    expectErr:     \"mockImageClient.ImagePull aborted\",",
          "398:   },",
          "399:   {",
          "400:    name:          \"driver shutdown\",",
          "401:    pullDelay:     400 * time.Millisecond,",
          "402:    pullTimeout:   200 * time.Millisecond,",
          "403:    driverTimeout: 10 * time.Millisecond,",
          "404:    expectErr:     \"wait aborted\",",
          "405:   },",
          "406:  }",
          "408:  for _, tc := range cases {",
          "409:   t.Run(tc.name, func(t *testing.T) {",
          "410:    driverCtx, cancel := context.WithTimeout(context.Background(), tc.driverTimeout)",
          "411:    defer cancel()",
          "413:    mapping := map[string]string{\"foo:v1\": \"foo\"}",
          "414:    mock := newMockImageClient(mapping, tc.pullDelay)",
          "415:    config := &dockerCoordinatorConfig{",
          "416:     ctx:         driverCtx,",
          "417:     logger:      testlog.HCLogger(t),",
          "418:     cleanup:     true,",
          "419:     client:      mock,",
          "420:     removeDelay: 1 * time.Millisecond,",
          "421:    }",
          "422:    coordinator := newDockerCoordinator(config)",
          "423:    progressTimeout := 10 * time.Millisecond // does not apply here",
          "425:    id, _, err := coordinator.PullImage(\"foo:v1\", nil, uuid.Generate(), nil,",
          "426:     tc.pullTimeout, progressTimeout)",
          "428:    if tc.expectErr == \"\" {",
          "429:     must.NoError(t, err)",
          "430:     must.Eq(t, \"foo\", id)",
          "431:    } else {",
          "432:     must.ErrorIs(t, err, context.DeadlineExceeded)",
          "433:     must.ErrorContains(t, err, tc.expectErr)",
          "434:    }",
          "435:   })",
          "436:  }",
          "437: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d59d527c072850316152866d1e6f52adcd21c8e",
      "candidate_info": {
        "commit_hash": "3d59d527c072850316152866d1e6f52adcd21c8e",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/3d59d527c072850316152866d1e6f52adcd21c8e",
        "files": [
          "website/content/partials/virt-beta-callout.mdx",
          "website/content/plugins/drivers/virt/client.mdx",
          "website/content/plugins/drivers/virt/index.mdx",
          "website/content/plugins/drivers/virt/installation.mdx",
          "website/content/plugins/drivers/virt/task-config.mdx",
          "website/data/docs-nav-data.json",
          "website/data/plugins-nav-data.json"
        ],
        "message": "backport of commit 0f6561bdfe93d2a5d387c5b0ebbbc946130ed436 (#24218)\n\nCo-authored-by: James Rasell <jrasell@users.noreply.github.com>",
        "before_after_code_files": [
          "website/content/partials/virt-beta-callout.mdx||website/content/partials/virt-beta-callout.mdx",
          "website/content/plugins/drivers/virt/client.mdx||website/content/plugins/drivers/virt/client.mdx",
          "website/content/plugins/drivers/virt/index.mdx||website/content/plugins/drivers/virt/index.mdx",
          "website/content/plugins/drivers/virt/installation.mdx||website/content/plugins/drivers/virt/installation.mdx",
          "website/content/plugins/drivers/virt/task-config.mdx||website/content/plugins/drivers/virt/task-config.mdx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "website/content/partials/virt-beta-callout.mdx||website/content/partials/virt-beta-callout.mdx": [
          "File: website/content/partials/virt-beta-callout.mdx -> website/content/partials/virt-beta-callout.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ~> Beta Feature: The Virt task driver is in beta and under active development.",
          "2: Refer to the [repo README](https://github.com/hashicorp/nomad-driver-virt) for",
          "3: the latest updates. Do not use this driver in production environments.",
          "",
          "---------------"
        ],
        "website/content/plugins/drivers/virt/client.mdx||website/content/plugins/drivers/virt/client.mdx": [
          "File: website/content/plugins/drivers/virt/client.mdx -> website/content/plugins/drivers/virt/client.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ---",
          "2: layout: docs",
          "3: page_title: Client",
          "4: description: Nomad client requirements, capabilities, and configuration options for the Virt task driver.",
          "5: ---",
          "7: # Client",
          "9: @include 'virt-beta-callout.mdx'",
          "11: The `virt` task driver is not built into Nomad. You must [downloaded][releases] onto the client",
          "12: host in the configured plugin directory. The client host must also be capable of running hardware",
          "13: accelerated KVM virtual machines, which you can check by using [kvm-ok][] command.",
          "14: Additional requirements:",
          "16: - Linux",
          "17: - Commands `bridge-utils`, `cloudinit`, `dnsmasq`, and `iptables`",
          "18: - [libvirt daemon][] installed and running",
          "19: - QEMU system packages installed",
          "20: - Nomad client running as root",
          "22: Use the following command to install the package requirements:",
          "24: ```console",
          "25: $ sudo apt-get update && \\",
          "26:   sudo apt-get install -y \\",
          "27:   bridge-utils \\",
          "28:   cloud-init \\",
          "29:   dnsmasq \\",
          "30:   iptables \\",
          "31:   libvirt-daemon-system \\",
          "32:   qemu-system \\",
          "33:   qemu-system-x86 \\",
          "34:   qemu-utils",
          "35: ```",
          "37: ## Client capabilities",
          "39: The `virt` task driver implements the following driver [capabilities][capabilities].",
          "41: | Feature              | Implementation |",
          "42: |----------------------|----------------|",
          "43: | `nomad alloc signal` | false          |",
          "44: | `nomad alloc exec`   | false          |",
          "45: | filesystem isolation | image          |",
          "46: | network isolation    | host           |",
          "47: | volume mounting      | false          |",
          "49: ## Plugin configuration",
          "51: This example shows the default plugin configuration.",
          "53: ```hcl",
          "54: plugin \"nomad-driver-driver\" {",
          "55:   config {",
          "56:     data_dir     = \"/var/lib/virt\"",
          "57:     image_paths  = [\"/var/lib/virt\", \"${ALLOC_DIR}\"]",
          "59:     emulator {",
          "60:       uri      = \"qemu:///system\"",
          "61:       user     = \"\"",
          "62:       password = \"\"",
          "63:     }",
          "64:   }",
          "65: }",
          "66: ```",
          "68: - `data_dir` - (default: `\"/var/lib/virt\"`) - the directory for storing VM configuration files and",
          "69:   intermediate files.",
          "71: - `image_paths` - (default: `[\"/var/lib/virt\", \"${ALLOC_DIR}\"]`) - an allow-list of paths the driver",
          "72:   is allowed to load an image from.",
          "74: - `emulator` - (block)",
          "75:   - `uri` - (default: `\"qemu:///system\"`) - The `uri` specifies which hypervisor to connect to.",
          "76:   - `user` - (default: `\"\"`) - the username to use for authentication.",
          "77:   - `password` - (default: `\"\"`) - the password to use for authentication.",
          "79: ## Client attributes",
          "81: When installed, the `virt` plugin provides the following node attributes that you can use as",
          "82: constraints when authoring jobs.",
          "84: ```",
          "85: driver.virt                              = true",
          "86: driver.virt.active                       = 0",
          "87: driver.virt.emulator.version             = 8002002",
          "88: driver.virt.inactive                     = 0bytes",
          "89: driver.virt.libvirt.version              = 10000000",
          "90: driver.virt.network.default.bridge_name  = virbr0",
          "91: driver.virt.network.default.state        = active",
          "92: ```",
          "94: [releases]: https://releases.hashicorp.com/nomad-driver-virt",
          "95: [kvm-ok]: https://manpages.ubuntu.com/manpages/bionic/man1/kvm-ok.1.html",
          "96: [libvirt daemon]: https://libvirt.org/daemons.html",
          "97: [capabilities]: https://developer.hashicorp.com/nomad/docs/concepts/plugins/task-drivers#task-driver-plugin-api",
          "",
          "---------------"
        ],
        "website/content/plugins/drivers/virt/index.mdx||website/content/plugins/drivers/virt/index.mdx": [
          "File: website/content/plugins/drivers/virt/index.mdx -> website/content/plugins/drivers/virt/index.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ---",
          "2: layout: docs",
          "3: page_title: 'Drivers: virt'",
          "4: description: >-",
          "5:   The virt task driver leverages Linux capabilities and libvirt to run virtual",
          "6:   machines.",
          "7: ---",
          "9: # Virt task driver",
          "11: @include 'virt-beta-callout.mdx'",
          "13: Name: `virt`",
          "15: The `virt` driver utilises the [libvirt][] API to run and manage virtual machines (VMs) via",
          "16: hypervisors such as [QEMU][]. It supports a wide variety of Nomad features including",
          "17: [workload identity][], [task templates][], and [service discovery][].",
          "20: [libvirt]: https://libvirt.org/",
          "21: [QEMU]: https://www.qemu.org/",
          "22: [workload identity]: https://developer.hashicorp.com/nomad/docs/concepts/workload-identity",
          "23: [task templates]: https://developer.hashicorp.com/nomad/docs/job-specification/template",
          "24: [service discovery]: https://developer.hashicorp.com/nomad/docs/networking/service-discovery",
          "25: [github]: https://github.com/hashicorp/nomad-driver-virt",
          "",
          "---------------"
        ],
        "website/content/plugins/drivers/virt/installation.mdx||website/content/plugins/drivers/virt/installation.mdx": [
          "File: website/content/plugins/drivers/virt/installation.mdx -> website/content/plugins/drivers/virt/installation.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ---",
          "2: layout: docs",
          "3: page_title: Installation",
          "4: description: Installation of the virt task driver.",
          "5: ---",
          "7: # Installation",
          "9: @include 'virt-beta-callout.mdx'",
          "11: Use the following instructions to download the task driver for use on your Nomad client host.",
          "13: <Tabs>",
          "14:   <Tab heading=\"Manual installation\" group=\"manual\">",
          "16:     Download a [precompiled binary](https://releases.hashicorp.com/nomad-driver-virt/) and",
          "17:     verify the binary using the available SHA-256 sums. Unzip the package. Make sure that the `nomad-driver-virt` binary is on your",
          "18:     [plugin_dir](/nomad/docs/configuration#plugin_dir) path, specified by the client's config file,",
          "19:     before continuing with the other guides.",
          "21:   </Tab>",
          "22:   <Tab heading=\"Ubuntu/Debian\" group=\"manual\">",
          "24:     Install the required packages.",
          "26:     ```shell-session",
          "27:     $ sudo apt-get update && \\",
          "28:       sudo apt-get install wget gpg coreutils",
          "29:     ```",
          "31:     Add the HashiCorp [GPG key][gpg-key].",
          "33:     ```shell-session",
          "34:     $ wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg",
          "35:     ```",
          "37:     Add the official HashiCorp Linux test repository.",
          "39:     ```shell-session",
          "40:     $ echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) test\" | sudo tee /etc/apt/sources.list.d/hashicorp.list",
          "41:     ```",
          "43:     Update and install.",
          "45:     ```shell-session",
          "46:     $ sudo apt-get update && sudo apt-get install nomad-driver-virt",
          "47:     ```",
          "49:   </Tab>",
          "50:   <Tab heading=\"CentOS/RHEL\" group=\"linux\">",
          "52:     Install `yum-config-manager` to manage your repositories.",
          "54:     ```shell-session",
          "55:     $ sudo yum install -y yum-utils",
          "56:     ```",
          "58:     Use `yum-config-manager` to add the official HashiCorp Linux repository.",
          "60:     ```shell-session",
          "61:     $ sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo",
          "62:     ```",
          "64:     Edit the repo file at `/etc/yum.repos.d/hashicorp.repo` and set `enabled=1` for `[hashicorp-test]`.",
          "66:     Install.",
          "68:     ```shell-session",
          "69:     $ sudo yum -y install nomad-driver-virt",
          "70:     ```",
          "72:   </Tab>",
          "73: </Tabs>",
          "",
          "---------------"
        ],
        "website/content/plugins/drivers/virt/task-config.mdx||website/content/plugins/drivers/virt/task-config.mdx": [
          "File: website/content/plugins/drivers/virt/task-config.mdx -> website/content/plugins/drivers/virt/task-config.mdx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: ---",
          "2: layout: docs",
          "3: page_title: Task Config",
          "4: description: Configure the virt task driver job specification parameters.",
          "5: ---",
          "7: # Task configuration",
          "9: @include 'virt-beta-callout.mdx'",
          "11: Task configuration for an virt task includes setting an `image` to provide the base VM image as",
          "12: well as other parameters required for bootstrapping a VM instance.",
          "14: - `image` - (string: required) - Path to an `.img` cloud image to base the VM disk on. The image should",
          "15:   be located in an allowed path. The cloud image needs to include cloud-init, otherwise certain",
          "16:   task features are not available. You may also downloaded via the [artifact block][].",
          "18: - `use_thin_copy` - (bool: `false`) - Make a thin copy of the image using QEMU, and use it as the",
          "19:   backing cloud image for the VM.",
          "21: - `hostname` - (string: `\"nomad-<task-name>\"`) - The hostname to assign to the VM. As this value is",
          "22:   used as a network host name, it must be a valid DNS label according to RFC 1123. Nomad generates the default",
          "23:   value using the Nomad task name.",
          "25: - `cmds` - (list(string): optional) - List of commands to execute on the VM once it is running.",
          "26:   These commands can provide you with a quick way to start a process on the newly created",
          "27:   VM. When used in conjunction with the template, this command list can be a powerful start up tool.",
          "29: - `default_user_password` - (string: `\"\"`) - Initial password for the default user",
          "30:   on the newly created VM. When set, the user must update the password on first connect.",
          "32: - `default_user_authorized_ssh_key` - (string: `\"\"`) - SSH public key  added to the SSH",
          "33:   configuration for the default user of the cloud image distribution.",
          "35: - `user_data ` - (string: `\"\"`) - Path to a cloud-init compliant user data file used as the user-data for the cloud-init configuration.",
          "37: - `primary_disk_size` - (int: required) - Disk space to assign to the VM. Must fit the VM's OS.",
          "39: Example:",
          "40: ```hcl",
          "41: config {",
          "42:   image                           = \"local/focal-server-cloudimg-amd64.img\"",
          "43:   use_thing_copy                  = false",
          "44:   hostname                        = \"\"",
          "45:   cmds                            = [\"python -m http.server 8000\"]",
          "46:   #default_user_password          = \"CHANGE-ME\"",
          "47:   default_user_authorized_ssh_key = \"\"",
          "48:   user_data                       = \"\"",
          "49:   primary_disk_size               = 10000",
          "50: }",
          "51: ```",
          "53: ##### os",
          "55: The VM architecture and machine can be different from the client host. When this is the case, you must set the",
          "56: `os` block. By default, this information matches the client host where the driver",
          "57: plugin is running.",
          "59: - `arch` - (string: `\"\"`) - The VM architecture.",
          "61: - `machine` - (string: `\"\"`) - The machine type.",
          "63: Example:",
          "64: ```hcl",
          "65: config {",
          "66:   os {",
          "67:     arch    = \"x86_64\"",
          "68:     machine = \"pc-i440fx-2.9\"",
          "69:   }",
          "70: }",
          "71: ```",
          "73: ##### network_interface",
          "75: You need to attach tasks to a libvirt network in order to access the internet and route",
          "76: from the local network. The `network_interface` block enables this as a list of network interfaces",
          "77: that the driver should attach to the VM. This feature only supports a single entry.",
          "79: - `bridge` - (block) - Attach the VM to a bridge network. `virbr0`, the default libvirt",
          "80:   network, is a bridge network.",
          "82:   - `name` - The name of the bridge interface to use. This relates to the output from commands",
          "83:   such as `virsh net-info`.",
          "85:   - `ports` - A list of port labels to expose on the host via mapping to the network",
          "86:   interface. These labels must exist within the job specification [network block][].",
          "88: Example:",
          "89: ```hcl",
          "90: config {",
          "91:   network_interface {",
          "92:     bridge {",
          "93:       name  = \"virbr0\"",
          "94:       ports = [\"ssh\", \"http\"]",
          "95:     }",
          "96:   }",
          "97: }",
          "98: ```",
          "100: ### Full example",
          "102: The following job specification displays use of all the configuration options, as well as other",
          "103: blocks that are useful when deploying tasks via the virt driver. You need to modify parameters, such as the",
          "104: `default_user_authorized_ssh_key`, before use depending on your",
          "105: requirements and Nomad setup.",
          "107: ```hcl",
          "108: job \"virt-example\" {",
          "110:   group \"virt-group\" {",
          "112:     network {",
          "113:       mode     = \"host\"",
          "114:       provider = \"nomad\"",
          "115:       port \"ssh\" {",
          "116:         to = 22",
          "117:       }",
          "118:     }",
          "120:     task \"virt-task\" {",
          "122:       driver = \"nomad-driver-virt\"",
          "124:       artifact {",
          "125:         source      = \"http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\"",
          "126:         destination = \"local/focal-server-cloudimg-amd64.img\"",
          "127:         mode        = \"file\"",
          "128:       }",
          "130:       config {",
          "131:         image                           = \"local/focal-server-cloudimg-amd64.img\"",
          "132:         primary_disk_size               = 26000",
          "133:         #default_user_password          = \"CHANGE-ME\"",
          "134:         default_user_authorized_ssh_key = \"ssh-ed25519 AAAAC3NzaC1lZDI...\"",
          "136:         network_interface {",
          "137:           bridge {",
          "138:             name  = \"virbr0\"",
          "139:             ports = [\"ssh\"]",
          "140:           }",
          "141:         }",
          "142:       }",
          "144:       resources {",
          "145:         cores  = 2",
          "146:         memory = 4096",
          "147:       }",
          "148:     }",
          "149:   }",
          "150: }",
          "152: ```",
          "154: [artifact block]: https://developer.hashicorp.com/nomad/docs/job-specification/artifact",
          "155: [network block]: https://developer.hashicorp.com/nomad/docs/job-specification/network",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb4cf437651bf100de2a950c153d3622afab1a6f",
      "candidate_info": {
        "commit_hash": "bb4cf437651bf100de2a950c153d3622afab1a6f",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/bb4cf437651bf100de2a950c153d3622afab1a6f",
        "files": [
          ".changelog/24922.txt",
          "nomad/structs/csi.go",
          "nomad/structs/csi_test.go"
        ],
        "message": "Backport of CSI: don't overwrite context with empty value from request into release/1.9.x (#24928)\n\nCo-authored-by: Tim Gross <tgross@hashicorp.com>",
        "before_after_code_files": [
          "nomad/structs/csi.go||nomad/structs/csi.go",
          "nomad/structs/csi_test.go||nomad/structs/csi_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "nomad/structs/csi.go||nomad/structs/csi.go": [
          "File: nomad/structs/csi.go -> nomad/structs/csi.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "846:    \"volume parameters cannot be updated\"))",
          "847:  }",
          "852:  return errs.ErrorOrNil()",
          "853: }",
          "",
          "[Removed Lines]",
          "851:  v.Context = other.Context",
          "",
          "[Added Lines]",
          "853:  if len(other.Context) != 0 {",
          "854:   v.Context = other.Context",
          "855:  }",
          "",
          "---------------"
        ],
        "nomad/structs/csi_test.go||nomad/structs/csi_test.go": [
          "File: nomad/structs/csi_test.go -> nomad/structs/csi_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "711:       {Segments: map[string]string{\"rack\": \"R2\"}},",
          "712:      },",
          "713:     },",
          "714:    },",
          "715:    update: &CSIVolume{",
          "716:     Topologies: []*CSITopology{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "714:     Context: map[string]string{",
          "716:      \"provisioner_driver\": \"nfs-client\",",
          "717:      \"node_attach_driver\": \"nfs\",",
          "718:      \"server\":             \"192.168.1.170\",",
          "719:      \"share\":              \"/srv/nfs_data/v/csi-volume-nfs\",",
          "720:     },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "745:      test.Sprint(\"should add 2 requested capabilities\"))",
          "746:     test.Eq(t, []string{\"noatime\", \"another\"}, v.MountOptions.MountFlags,",
          "747:      test.Sprint(\"should add mount flag\"))",
          "748:    },",
          "749:   },",
          "750:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755:     test.Eq(t, map[string]string{",
          "756:      \"provisioner_driver\": \"nfs-client\",",
          "757:      \"node_attach_driver\": \"nfs\",",
          "758:      \"server\":             \"192.168.1.170\",",
          "759:      \"share\":              \"/srv/nfs_data/v/csi-volume-nfs\",",
          "760:     }, v.Context,",
          "761:      test.Sprint(\"context should not be overwritten with empty update\"))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6cfbf4419f9f07fd0dfdafd4d32edbbcfe9b4ad0",
      "candidate_info": {
        "commit_hash": "6cfbf4419f9f07fd0dfdafd4d32edbbcfe9b4ad0",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/6cfbf4419f9f07fd0dfdafd4d32edbbcfe9b4ad0",
        "files": [
          ".github/workflows/ember-test-audit.yml",
          ".github/workflows/test-ui.yml",
          "scripts/combine-ui-test-results.js",
          "ui/app/index.html",
          "ui/mirage/factories/job.js",
          "ui/test-reporter.js",
          "ui/testem.js",
          "ui/tests/acceptance/job-detail-test.js",
          "ui/tests/acceptance/regions-test.js",
          "ui/tests/acceptance/server-detail-test.js",
          "ui/tests/acceptance/task-logs-test.js",
          "ui/tests/helpers/module-for-job.js",
          "ui/tests/integration/components/job-page/periodic-test.js",
          "ui/tests/integration/components/job-page/service-test.js",
          "ui/tests/integration/components/task-log-test.js"
        ],
        "message": "Backport of [ui, tests] Various acceptance test fixups (v main) into release/1.9.x (#25177)\n\n* no-op commit due to failed cherry-picking\n\n* [ui, ci] retain artifacts from test runs including test timing (#24555)\n\n* retain artifacts from test runs including test timing\n\n* Pinning commit hashes for action helpers\n\n* trigger for ui-test run\n\n* Trying to isolate down to a simple upload\n\n* Once more with mkdir\n\n* What if we just wrote our own test reporter tho\n\n* Let the partitioned runs handle placement\n\n* Filter out common token logs, add a summary at the end, and note failures in logtime\n\n* Custom reporter cannot also have an output file, he finds out two days late\n\n* Aggregate summary, duration, and removing failure case\n\n* Conditional test report generation\n\n* Timeouts are errors\n\n* Trying with un-partitioned input json file\n\n* Remove the commented-out lines for main-only runs\n\n* combine-ui-test-results as its own script\n\n* Remove the Ember Test Audit workflow (#24637)\n\n* [ui, tests] Various acceptance test fixups (v main) (#25031)\n\n* Add factory hooks for jobs to have previously stable versions and stopped status\n\n* Since #24973 node-read isn't presupposed and so should regex match only on the common url parts\n\n* Job detail tests for title buttons are now bimodal and default to having previously-stable version in history\n\n* prettier plz\n\n* Breaking a thing on purpose to see if my other broken thing is broken\n\n* continue-on-error set to false to get things red when appropriate\n\n* OK what if continue-on-error=true but we do a separate failure reporting after the fact\n\n* fail-fast are you the magic incantation that I need?\n\n* Re-fix my test now that fast-fail is off\n\n* Fix to server-leader by adding a region first, and always()-append to uploading partition results\n\n* Express failure step lists failing tests so you don't have to click back into ember-exam step\n\n* temporary snapshot and logging for flakey test in service job detail\n\n* Bunch of region and tasklogs test fixups\n\n* using allocStatusDistribution to ensure service job always has a non-queued alloc\n\n* Manually remove ember test audit (re-do #24637)\n\n---------\n\nCo-authored-by: temp <temp@hashicorp.com>\nCo-authored-by: Phil Renaud <phil.renaud@hashicorp.com>\nCo-authored-by: Phil Renaud <phil@riotindustries.com>",
        "before_after_code_files": [
          "scripts/combine-ui-test-results.js||scripts/combine-ui-test-results.js",
          "ui/app/index.html||ui/app/index.html",
          "ui/mirage/factories/job.js||ui/mirage/factories/job.js",
          "ui/test-reporter.js||ui/test-reporter.js",
          "ui/testem.js||ui/testem.js",
          "ui/tests/acceptance/job-detail-test.js||ui/tests/acceptance/job-detail-test.js",
          "ui/tests/acceptance/regions-test.js||ui/tests/acceptance/regions-test.js",
          "ui/tests/acceptance/server-detail-test.js||ui/tests/acceptance/server-detail-test.js",
          "ui/tests/acceptance/task-logs-test.js||ui/tests/acceptance/task-logs-test.js",
          "ui/tests/helpers/module-for-job.js||ui/tests/helpers/module-for-job.js",
          "ui/tests/integration/components/job-page/periodic-test.js||ui/tests/integration/components/job-page/periodic-test.js",
          "ui/tests/integration/components/job-page/service-test.js||ui/tests/integration/components/job-page/service-test.js",
          "ui/tests/integration/components/task-log-test.js||ui/tests/integration/components/task-log-test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "scripts/combine-ui-test-results.js||scripts/combine-ui-test-results.js": [
          "File: scripts/combine-ui-test-results.js -> scripts/combine-ui-test-results.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env node",
          "7: 'use strict';",
          "8: const fs = require('fs');",
          "10: const NUM_PARTITIONS = 4;",
          "12: function combineResults() {",
          "13:   const results = [];",
          "14:   let duration = 0;",
          "15:   let aggregateSummary = { total: 0, passed: 0, failed: 0 };",
          "17:   for (let i = 1; i <= NUM_PARTITIONS; i++) {",
          "18:     try {",
          "19:       const data = JSON.parse(",
          "20:         fs.readFileSync(`../test-results/test-results-${i}/test-results.json`).toString()",
          "21:       );",
          "22:       results.push(...data.tests);",
          "23:       duration += data.duration;",
          "24:       aggregateSummary.total += data.summary.total;",
          "25:       aggregateSummary.passed += data.summary.passed;",
          "26:       aggregateSummary.failed += data.summary.failed;",
          "27:     } catch (err) {",
          "28:       console.error(`Error reading partition ${i}:`, err);",
          "29:     }",
          "30:   }",
          "32:   const output = {",
          "33:     timestamp: new Date().toISOString(),",
          "34:     sha: process.env.GITHUB_SHA,",
          "35:     summary: {",
          "36:       total: aggregateSummary.total,",
          "37:       passed: aggregateSummary.passed,",
          "38:       failed: aggregateSummary.failed",
          "39:     },",
          "40:     duration,",
          "41:     tests: results",
          "42:   };",
          "44:   fs.writeFileSync('../ui/combined-test-results.json', JSON.stringify(output, null, 2));",
          "45: }",
          "47: if (require.main === module) {",
          "48:   combineResults();",
          "49: }",
          "51: module.exports = combineResults;",
          "",
          "---------------"
        ],
        "ui/app/index.html||ui/app/index.html": [
          "File: ui/app/index.html -> ui/app/index.html"
        ],
        "ui/mirage/factories/job.js||ui/mirage/factories/job.js": [
          "File: ui/mirage/factories/job.js -> ui/mirage/factories/job.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:   noDeployments: false,",
          "179:   failedPlacements: false,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179:   withPreviousStableVersion: false,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "317:             version: index,",
          "318:             noActiveDeployment: job.noActiveDeployment,",
          "319:             activeDeployment: job.activeDeployment,",
          "320:           });",
          "321:         });",
          "322:     }",
          "324:     if (job.activeDeployment) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:             stable: true,",
          "327:       if (job.withPreviousStableVersion) {",
          "328:         server.create('job-version', {",
          "329:           job,",
          "330:           namespace: job.namespace,",
          "331:           version: 1,",
          "332:           noActiveDeployment: job.noActiveDeployment,",
          "333:           activeDeployment: job.activeDeployment,",
          "334:           stable: true,",
          "335:         });",
          "336:       }",
          "",
          "---------------"
        ],
        "ui/test-reporter.js||ui/test-reporter.js": [
          "File: ui/test-reporter.js -> ui/test-reporter.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: const fs = require('fs');",
          "10: const path = require('path');",
          "12: class JsonReporter {",
          "13:   constructor(out, socket, config) {",
          "14:     this.out = out || process.stdout;",
          "15:     this.results = [];",
          "18:     this.outputFile = config?.fileOptions?.custom_report_file;",
          "19:     this.generateReport = !!this.outputFile;",
          "21:     if (this.generateReport) {",
          "22:       console.log(",
          "23:         `[Reporter] Initializing with output file: ${this.outputFile}`",
          "24:       );",
          "26:       try {",
          "27:         fs.mkdirSync(path.dirname(this.outputFile), { recursive: true });",
          "30:         fs.writeFileSync(",
          "31:           this.outputFile,",
          "32:           JSON.stringify(",
          "33:             {",
          "34:               summary: { total: 0, passed: 0, failed: 0 },",
          "35:               timestamp: new Date().toISOString(),",
          "36:               tests: [],",
          "37:             },",
          "38:             null,",
          "39:             2",
          "40:           )",
          "41:         );",
          "42:         console.log('[Reporter] Initialized results file');",
          "43:       } catch (err) {",
          "44:         console.error('[Reporter] Error initializing results file:', err);",
          "45:       }",
          "46:     } else {",
          "47:       console.log('[Reporter] No report file configured, skipping JSON output');",
          "48:     }",
          "50:     process.on('SIGINT', () => {",
          "51:       console.log('[Reporter] Received SIGINT, finishing up...');",
          "52:       this.finish();",
          "53:       process.exit(0);",
          "54:     });",
          "56:     this.testCounter = 0;",
          "57:     this.startTime = Date.now();",
          "58:   }",
          "60:   filterLogs(logs) {",
          "61:     return logs.filter((log) => {",
          "63:       if (",
          "64:         log.text &&",
          "65:         (log.text.includes('Accessor:') ||",
          "66:           log.text.includes('log in with a JWT') ||",
          "67:           log.text === 'TOKENS:' ||",
          "68:           log.text === '=====================================')",
          "69:       ) {",
          "70:         return false;",
          "71:       }",
          "74:       return log.type !== 'warn';",
          "75:     });",
          "76:   }",
          "78:   report(prefix, data) {",
          "79:     if (!data || !data.name) {",
          "80:       console.log(`[Reporter] Skipping invalid test result: ${data.name}`);",
          "81:       return;",
          "82:     }",
          "84:     this.testCounter++;",
          "85:     console.log(`[Reporter] Test #${this.testCounter}: ${data.name}`);",
          "87:     const partitionMatch = data.name.match(/^Exam Partition (\\d+) - (.*)/);",
          "89:     const result = {",
          "90:       name: partitionMatch ? partitionMatch[2] : data.name.trim(),",
          "91:       partition: partitionMatch ? parseInt(partitionMatch[1], 10) : null,",
          "92:       browser: prefix,",
          "93:       passed: !data.failed,",
          "94:       duration: data.runDuration,",
          "95:       error: data.failed ? data.error : null,",
          "96:       logs: this.filterLogs(data.logs || []),",
          "97:     };",
          "99:     if (result.passed) {",
          "100:       console.log('- [PASS]');",
          "101:     } else {",
          "102:       console.log('- [FAIL]');",
          "103:       console.log('- Error:', result.error);",
          "104:       console.log('- Logs:', result.logs);",
          "105:     }",
          "107:     this.results.push(result);",
          "108:   }",
          "110:   writeCurrentResults() {",
          "111:     console.log('[Reporter] Writing current results...');",
          "112:     try {",
          "113:       const passed = this.results.filter((r) => r.passed).length;",
          "114:       const failed = this.results.filter((r) => !r.passed).length;",
          "115:       const total = this.results.length;",
          "116:       const duration = Date.now() - this.startTime;",
          "118:       const output = {",
          "119:         summary: { total, passed, failed },",
          "120:         timestamp: new Date().toISOString(),",
          "121:         duration,",
          "122:         tests: this.results,",
          "123:       };",
          "125:       if (this.generateReport) {",
          "126:         fs.writeFileSync(this.outputFile, JSON.stringify(output, null, 2));",
          "127:       }",
          "130:       console.log('\\n[Reporter] Test Summary:');",
          "131:       console.log(`- Total:  ${total}`);",
          "132:       console.log(`- Passed: ${passed}`);",
          "133:       console.log(`- Failed: ${failed}`);",
          "134:       console.log(`- Duration: ${duration}ms`);",
          "135:       if (failed > 0) {",
          "136:         console.log('\\n[Reporter] Failed Tests:');",
          "137:         this.results",
          "138:           .filter((r) => !r.passed)",
          "139:           .forEach((r) => {",
          "140:             console.log(`\u274c ${r.name}`);",
          "141:             if (r.error) {",
          "142:               console.error(r.error);",
          "143:             }",
          "144:           });",
          "145:       }",
          "147:       console.log('[Reporter] Successfully wrote results');",
          "148:     } catch (err) {",
          "149:       console.error('[Reporter] Error writing results:', err);",
          "150:     }",
          "151:   }",
          "152:   finish() {",
          "153:     console.log('[Reporter] Finishing up...');",
          "154:     this.writeCurrentResults();",
          "155:     console.log('[Reporter] Done.');",
          "156:   }",
          "157: }",
          "159: module.exports = JsonReporter;",
          "",
          "---------------"
        ],
        "ui/testem.js||ui/testem.js": [
          "File: ui/testem.js -> ui/testem.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: 'use strict';",
          "8: const config = {",
          "9:   test_page: 'tests/index.html?hidepassed',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: const JsonReporter = require('./test-reporter');",
          "15: const getReportPath = () => {",
          "16:   const jsonReportArg = process.argv.find((arg) =>",
          "17:     arg.startsWith('--json-report=')",
          "18:   );",
          "19:   if (jsonReportArg) {",
          "20:     return jsonReportArg.split('=')[1];",
          "21:   }",
          "22:   return null;",
          "23: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   browser_start_timeout: 120,",
          "14:   parallel: -1,",
          "15:   framework: 'qunit',",
          "16:   browser_args: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:   reporter: JsonReporter,",
          "34:   custom_report_file: getReportPath(),",
          "37:   debug: true,",
          "",
          "---------------"
        ],
        "ui/tests/acceptance/job-detail-test.js||ui/tests/acceptance/job-detail-test.js": [
          "File: ui/tests/acceptance/job-detail-test.js -> ui/tests/acceptance/job-detail-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     allocStatusDistribution: {",
          "28:       running: 1,",
          "29:     },",
          "30:   })",
          "31: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:     withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     allocStatusDistribution: {",
          "40:       running: 1,",
          "41:     },",
          "42:   })",
          "43: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:     withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:       running: 1,",
          "53:       failed: 1,",
          "54:     },",
          "55:   })",
          "56: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:       type: 'sysbatch',",
          "66:       createAllocations: false,",
          "67:       noActiveDeployment: true,",
          "68:     });",
          "69:   }",
          "70: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:       withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "80:       namespaceId: namespace.name,",
          "81:       createAllocations: false,",
          "82:       noActiveDeployment: true,",
          "83:     });",
          "84:   }",
          "85: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:       withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "95:       namespaceId: namespace.name,",
          "96:       createAllocations: false,",
          "97:       noActiveDeployment: true,",
          "98:     });",
          "99:   }",
          "100: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:       withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "109:       running: 1,",
          "110:     },",
          "111:     noActiveDeployment: true,",
          "112:   });",
          "113:   return server.db.jobs.where({ parentId: parent.id })[0];",
          "114: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "212:     server.create('job', 'parameterized', {",
          "213:       shallow: true,",
          "214:       noActiveDeployment: true,",
          "215:     }),",
          "216:   {",
          "217:     'the default sort is submitTime descending': async (job, assert) => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:       withPreviousStableVersion: true,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "292: moduleForJob(",
          "293:   'Acceptance | job detail (service)',",
          "294:   'allocations',",
          "296:   {",
          "297:     'the subnav links to deployment': async (job, assert) => {",
          "298:       await JobDetail.tabFor('deployments').visit();",
          "",
          "[Removed Lines]",
          "295:   () => server.create('job', { type: 'service', noActiveDeployment: true }),",
          "",
          "[Added Lines]",
          "303:   () =>",
          "304:     server.create('job', {",
          "305:       type: 'service',",
          "306:       noActiveDeployment: true,",
          "307:       withPreviousStableVersion: true,",
          "308:       allocStatusDistribution: {",
          "309:         running: 1,",
          "310:       },",
          "311:     }),",
          "",
          "---------------"
        ],
        "ui/tests/acceptance/regions-test.js||ui/tests/acceptance/regions-test.js": [
          "File: ui/tests/acceptance/regions-test.js -> ui/tests/acceptance/regions-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { module, test } from 'qunit';",
          "10: import { setupApplicationTest } from 'ember-qunit';",
          "11: import { selectChoose } from 'ember-power-select/test-support';",
          "",
          "[Removed Lines]",
          "8: import { currentURL } from '@ember/test-helpers';",
          "",
          "[Added Lines]",
          "8: import { currentURL, settled } from '@ember/test-helpers';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:     await JobsList.jobs.objectAt(0).clickRow();",
          "81:     await Layout.gutter.visitClients();",
          "82:     await Layout.gutter.visitServers();",
          "86:   });",
          "87: });",
          "",
          "[Removed Lines]",
          "83:     server.pretender.handledRequests.forEach((req) => {",
          "84:       assert.notOk(req.url.includes('region='), req.url);",
          "85:     });",
          "",
          "[Added Lines]",
          "83:     server.pretender.handledRequests",
          "84:       .filter((req) => !req.url.includes('/v1/status/leader'))",
          "85:       .forEach((req) => {",
          "86:         assert.notOk(req.url.includes('region='), req.url);",
          "87:       });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:   });",
          "116:   test('when on the default region, pages do not include the region query param', async function (assert) {",
          "117:     await JobsList.visit();",
          "119:     assert.equal(currentURL(), '/jobs', 'No region query param');",
          "120:     assert.equal(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119:     let managementToken = server.create('token');",
          "120:     window.localStorage.nomadTokenSecret = managementToken.secretId;",
          "122:     await settled();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "143:   });",
          "145:   test('switching regions to the default region, unsets the region query param', async function (assert) {",
          "146:     const startingRegion = server.db.regions[1].id;",
          "147:     const defaultRegion = server.db.regions[0].id;",
          "149:     await JobsList.visit({ region: startingRegion });",
          "151:     await selectChoose('[data-test-region-switcher-parent]', defaultRegion);",
          "153:     assert.notOk(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:     let managementToken = server.create('token');",
          "152:     window.localStorage.nomadTokenSecret = managementToken.secretId;",
          "157:     await settled();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "197:     const appRequests = server.pretender.handledRequests.filter(",
          "198:       (req) =>",
          "199:         !req.responseURL.includes('/v1/regions') &&",
          "201:     );",
          "203:     assert.notOk(",
          "",
          "[Removed Lines]",
          "200:         !req.responseURL.includes('/v1/operator/license')",
          "",
          "[Added Lines]",
          "207:         !req.responseURL.includes('/v1/operator/license') &&",
          "208:         !req.responseURL.includes('/v1/status/leader')",
          "",
          "---------------"
        ],
        "ui/tests/acceptance/server-detail-test.js||ui/tests/acceptance/server-detail-test.js": [
          "File: ui/tests/acceptance/server-detail-test.js -> ui/tests/acceptance/server-detail-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   hooks.beforeEach(async function () {",
          "22:     server.createList('agent', 3);",
          "23:     agent = server.db.agents[0];",
          "24:     await ServerDetail.visit({ name: agent.name });",
          "25:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:     server.create('region', { id: 'global' });",
          "",
          "---------------"
        ],
        "ui/tests/acceptance/task-logs-test.js||ui/tests/acceptance/task-logs-test.js": [
          "File: ui/tests/acceptance/task-logs-test.js -> ui/tests/acceptance/task-logs-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:   test('the stdout log immediately starts streaming', async function (assert) {",
          "64:     await TaskLogs.visit({ id: allocation.id, name: task.name });",
          "69:     assert.ok(",
          "70:       server.pretender.handledRequests.filter((req) =>",
          "71:         logUrlRegex.test(req.url)",
          "",
          "[Removed Lines]",
          "65:     const node = server.db.nodes.find(allocation.nodeId);",
          "66:     const logUrlRegex = new RegExp(",
          "67:       `${node.httpAddr}/v1/client/fs/logs/${allocation.id}`",
          "68:     );",
          "",
          "[Added Lines]",
          "65:     const logUrlRegex = new RegExp(`/v1/client/fs/logs/${allocation.id}`);",
          "",
          "---------------"
        ],
        "ui/tests/helpers/module-for-job.js||ui/tests/helpers/module-for-job.js": [
          "File: ui/tests/helpers/module-for-job.js -> ui/tests/helpers/module-for-job.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     test('the title buttons are dependent on job status', async function (assert) {",
          "94:       if (job.status === 'dead') {",
          "96:         assert.ok(JobDetail.purge.isPresent);",
          "97:         assert.notOk(JobDetail.stop.isPresent);",
          "98:         assert.notOk(JobDetail.execButton.isPresent);",
          "",
          "[Removed Lines]",
          "95:         assert.ok(JobDetail.start.isPresent);",
          "",
          "[Added Lines]",
          "95:         if (job.stopped) {",
          "96:           assert.ok(JobDetail.start.isPresent);",
          "97:         } else {",
          "98:           assert.ok(JobDetail.revert.isPresent);",
          "99:         }",
          "",
          "---------------"
        ],
        "ui/tests/integration/components/job-page/periodic-test.js||ui/tests/integration/components/job-page/periodic-test.js": [
          "File: ui/tests/integration/components/job-page/periodic-test.js -> ui/tests/integration/components/job-page/periodic-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:       childrenCount: 0,",
          "203:       createAllocations: false,",
          "204:       status: 'dead',",
          "205:     });",
          "206:     await this.store.findAll('job');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "205:       withPreviousStableVersion: true,",
          "206:       stopped: true,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:       childrenCount: 0,",
          "224:       createAllocations: false,",
          "225:       status: 'dead',",
          "226:     });",
          "227:     await this.store.findAll('job');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "228:       withPreviousStableVersion: true,",
          "229:       stopped: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "243:       childrenCount: 0,",
          "244:       createAllocations: false,",
          "245:       status: 'dead',",
          "246:     });",
          "247:     await this.store.findAll('job');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:       withPreviousStableVersion: true,",
          "251:       stopped: true,",
          "",
          "---------------"
        ],
        "ui/tests/integration/components/job-page/service-test.js||ui/tests/integration/components/job-page/service-test.js": [
          "File: ui/tests/integration/components/job-page/service-test.js -> ui/tests/integration/components/job-page/service-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:   test('Starting a job sends a post request for the job using the current definition', async function (assert) {",
          "113:     assert.expect(1);",
          "116:     await this.store.findAll('job');",
          "118:     const job = this.store.peekAll('job').findBy('plainId', mirageJob.id);",
          "",
          "[Removed Lines]",
          "115:     const mirageJob = makeMirageJob(this.server, { status: 'dead' });",
          "",
          "[Added Lines]",
          "115:     const mirageJob = makeMirageJob(this.server, {",
          "116:       status: 'dead',",
          "117:       withPreviousStableVersion: true,",
          "118:       stopped: true,",
          "119:     });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     this.server.pretender.post('/v1/job/:id', () => [403, {}, '']);",
          "133:     await this.store.findAll('job');",
          "135:     const job = this.store.peekAll('job').findBy('plainId', mirageJob.id);",
          "",
          "[Removed Lines]",
          "132:     const mirageJob = makeMirageJob(this.server, { status: 'dead' });",
          "",
          "[Added Lines]",
          "136:     const mirageJob = makeMirageJob(this.server, {",
          "137:       status: 'dead',",
          "138:       withPreviousStableVersion: true,",
          "139:       stopped: true,",
          "140:     });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144:   test('Purging a job sends a purge request for the job', async function (assert) {",
          "145:     assert.expect(1);",
          "148:     await this.store.findAll('job');",
          "150:     const job = this.store.peekAll('job').findBy('plainId', mirageJob.id);",
          "",
          "[Removed Lines]",
          "147:     const mirageJob = makeMirageJob(this.server, { status: 'dead' });",
          "",
          "[Added Lines]",
          "155:     const mirageJob = makeMirageJob(this.server, {",
          "156:       status: 'dead',",
          "157:       withPreviousStableVersion: true,",
          "158:     });",
          "",
          "---------------"
        ],
        "ui/tests/integration/components/task-log-test.js||ui/tests/integration/components/task-log-test.js": [
          "File: ui/tests/integration/components/task-log-test.js -> ui/tests/integration/components/task-log-test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import { componentA11yAudit } from 'nomad-ui/tests/helpers/a11y-audit';",
          "12: import Pretender from 'pretender';",
          "13: import { logEncode } from '../../../mirage/data/logs';",
          "15: const HOST = '1.1.1.1:1111';",
          "16: const allowedConnectionTime = 100;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: import { startMirage } from 'nomad-ui/initializers/ember-cli-mirage';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: module('Integration | Component | task log', function (hooks) {",
          "37:   setupRenderingTest(hooks);",
          "40:     const handler = ({ queryParams }) => {",
          "41:       let frames;",
          "42:       let data;",
          "",
          "[Removed Lines]",
          "39:   hooks.beforeEach(function () {",
          "",
          "[Added Lines]",
          "40:   hooks.beforeEach(async function () {",
          "41:     this.server = startMirage();",
          "42:     const managementToken = this.server.create('token');",
          "43:     window.localStorage.nomadTokenSecret = managementToken.secretId;",
          "44:     const tokenService = this.owner.lookup('service:token');",
          "45:     const tokenPromise = tokenService.fetchSelfTokenAndPolicies.perform();",
          "46:     const timeoutPromise = new Promise((_, reject) => {",
          "47:       setTimeout(",
          "48:         () => reject(new Error('Token fetch timed out after 3 seconds')),",
          "49:         3000",
          "50:       );",
          "51:     });",
          "52:     await Promise.race([tokenPromise, timeoutPromise]);",
          "54:     await settled();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ed494139ee7a51b89070573576b5d617c0d72b0",
      "candidate_info": {
        "commit_hash": "2ed494139ee7a51b89070573576b5d617c0d72b0",
        "repo": "hashicorp/nomad",
        "commit_url": "https://github.com/hashicorp/nomad/commit/2ed494139ee7a51b89070573576b5d617c0d72b0",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Backport of chore(deps): bump github.com/hashicorp/consul/api from 1.29.1 to 1.30.0 into release/1.9.x (#24426)\n\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/hashicorp/nomad/pull/25471"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:  github.com/grpc-ecosystem/go-grpc-middleware v1.4.0",
          "45:  github.com/hashicorp/cap v0.6.0",
          "46:  github.com/hashicorp/consul-template v0.39.0",
          "48:  github.com/hashicorp/consul/sdk v0.16.1",
          "49:  github.com/hashicorp/cronexpr v1.1.2",
          "50:  github.com/hashicorp/go-bexpr v0.1.13",
          "",
          "[Removed Lines]",
          "47:  github.com/hashicorp/consul/api v1.29.1",
          "",
          "[Added Lines]",
          "47:  github.com/hashicorp/consul/api v1.30.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "625: github.com/hashicorp/cap v0.6.0/go.mod h1:DwzHkoG6pxSARiqwvAgxmCPUpTTCCw2wVuPrIFOzpe0=",
          "626: github.com/hashicorp/consul-template v0.39.0 h1:Yp2iqdVw3pYW4RbNKPNF/dNpJWEasnAhUTC+wDPtDYM=",
          "627: github.com/hashicorp/consul-template v0.39.0/go.mod h1:eZmtllcY+RK0y/DPXdCuiMWr3m9OPlzBwsmBv1jbCxI=",
          "632: github.com/hashicorp/consul/sdk v0.16.1 h1:V8TxTnImoPD5cj0U9Spl0TUxcytjcbbJeADFF07KdHg=",
          "633: github.com/hashicorp/consul/sdk v0.16.1/go.mod h1:fSXvwxB2hmh1FMZCNl6PwX0Q/1wdWtHJcZ7Ea5tns0s=",
          "634: github.com/hashicorp/cronexpr v1.1.2 h1:wG/ZYIKT+RT3QkOdgYc+xsKWVRgnxJ1OJtjjy84fJ9A=",
          "",
          "[Removed Lines]",
          "628: github.com/hashicorp/consul/api v1.29.1 h1:UEwOjYJrd3lG1x5w7HxDRMGiAUPrb3f103EoeKuuEcc=",
          "629: github.com/hashicorp/consul/api v1.29.1/go.mod h1:lumfRkY/coLuqMICkI7Fh3ylMG31mQSRZyef2c5YvJI=",
          "630: github.com/hashicorp/consul/proto-public v0.6.1 h1:+uzH3olCrksXYWAYHKqK782CtK9scfqH+Unlw3UHhCg=",
          "631: github.com/hashicorp/consul/proto-public v0.6.1/go.mod h1:cXXbOg74KBNGajC+o8RlA502Esf0R9prcoJgiOX/2Tg=",
          "",
          "[Added Lines]",
          "628: github.com/hashicorp/consul/api v1.30.0 h1:ArHVMMILb1nQv8vZSGIwwQd2gtc+oSQZ6CalyiyH2XQ=",
          "629: github.com/hashicorp/consul/api v1.30.0/go.mod h1:B2uGchvaXVW2JhFoS8nqTxMD5PBykr4ebY4JWHTTeLM=",
          "",
          "---------------"
        ]
      }
    }
  ]
}