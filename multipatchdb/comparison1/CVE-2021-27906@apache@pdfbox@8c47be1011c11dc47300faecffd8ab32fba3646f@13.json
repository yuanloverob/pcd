{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "438ea25d23c13f686a329695b919cad0a9a3317c",
      "candidate_info": {
        "commit_hash": "438ea25d23c13f686a329695b919cad0a9a3317c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/438ea25d23c13f686a329695b919cad0a9a3317c",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ],
        "message": "PDFBOX-5043: fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884365 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:             if (widget.getCOSObject().containsKey(\"PMD\"))",
          "175:             {",
          "177:                 continue;",
          "178:             }",
          "",
          "[Removed Lines]",
          "176:                 LOG.warn(\"widget of field \" + field.getFullyQualifiedName() + \" is a PaperMetaData widet, no appearance stream created\");",
          "",
          "[Added Lines]",
          "176:                 LOG.warn(\"widget of field \" + field.getFullyQualifiedName() + \" is a PaperMetaData widget, no appearance stream created\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdd16761d693161bfe45888dd616413330bbfbe5",
      "candidate_info": {
        "commit_hash": "fdd16761d693161bfe45888dd616413330bbfbe5",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fdd16761d693161bfe45888dd616413330bbfbe5",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java"
        ],
        "message": "PDFBOX-5271: increase max depth\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892700 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java",
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/DrawObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:             try",
          "65:             {",
          "66:                 context.increaseLevel();",
          "68:                 {",
          "69:                     LOG.error(\"recursion is too deep, skipping form XObject\");",
          "70:                     return;",
          "",
          "[Removed Lines]",
          "67:                 if (context.getLevel() > 25)",
          "",
          "[Added Lines]",
          "67:                 if (context.getLevel() > 50)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:             try",
          "72:             {",
          "73:                 context.increaseLevel();",
          "75:                 {",
          "76:                     LOG.error(\"recursion is too deep, skipping form XObject\");",
          "77:                     return;",
          "",
          "[Removed Lines]",
          "74:                 if (context.getLevel() > 25)",
          "",
          "[Added Lines]",
          "74:                 if (context.getLevel() > 50)",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:             try",
          "64:             {",
          "65:                 context.increaseLevel();",
          "67:                 {",
          "68:                     LOG.error(\"recursion is too deep, skipping form XObject\");",
          "69:                     return;",
          "",
          "[Removed Lines]",
          "66:                 if (context.getLevel() > 25)",
          "",
          "[Added Lines]",
          "66:                 if (context.getLevel() > 50)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "87512a21869e952f86d6e40ed72d0f5e8fc2d571",
      "candidate_info": {
        "commit_hash": "87512a21869e952f86d6e40ed72d0f5e8fc2d571",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/87512a21869e952f86d6e40ed72d0f5e8fc2d571",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java"
        ],
        "message": "PDFBOX-5187: remove broken implementation, throw exception instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889652 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java||examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java||examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/TSAClient.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:         if (username != null && password != null && !username.isEmpty() && !password.isEmpty())",
          "136:         {",
          "138:         }",
          "",
          "[Removed Lines]",
          "137:             connection.setRequestProperty(username, password);",
          "",
          "[Added Lines]",
          "139:             throw new UnsupportedOperationException(\"authentication not implemented yet\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0488f0d456719acbf04c7ee4c03a9d5278139303",
      "candidate_info": {
        "commit_hash": "0488f0d456719acbf04c7ee4c03a9d5278139303",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0488f0d456719acbf04c7ee4c03a9d5278139303",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java"
        ],
        "message": "PDFBOX-4892: add tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882838 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java||pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java||pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java -> pdfbox/src/test/java/org/apache/pdfbox/io/UnmodifiableCOSDictionaryTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.apache.pdfbox.io;",
          "19: import static org.junit.Assert.fail;",
          "21: import java.util.Calendar;",
          "23: import org.apache.pdfbox.cos.COSDictionary;",
          "24: import org.apache.pdfbox.cos.COSName;",
          "25: import org.apache.pdfbox.pdmodel.font.encoding.Encoding;",
          "26: import org.junit.Test;",
          "28: public class UnmodifiableCOSDictionaryTest",
          "29: {",
          "30:     @Test",
          "31:     public void testUnmodifiableCOSDictionary()",
          "32:     {",
          "33:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "34:         try",
          "35:         {",
          "36:             unmodifiableCOSDictionary.clear();",
          "37:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "38:         }",
          "39:         catch (UnsupportedOperationException exception)",
          "40:         {",
          "42:         }",
          "44:         try",
          "45:         {",
          "46:             unmodifiableCOSDictionary.removeItem(COSName.A);",
          "47:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "48:         }",
          "49:         catch (UnsupportedOperationException exception)",
          "50:         {",
          "52:         }",
          "54:         try",
          "55:         {",
          "56:             unmodifiableCOSDictionary.addAll(new COSDictionary());",
          "57:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "58:         }",
          "59:         catch (UnsupportedOperationException exception)",
          "60:         {",
          "62:         }",
          "64:         try",
          "65:         {",
          "66:             unmodifiableCOSDictionary.mergeInto(new COSDictionary());",
          "67:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "68:         }",
          "69:         catch (UnsupportedOperationException exception)",
          "70:         {",
          "72:         }",
          "74:         try",
          "75:         {",
          "76:             unmodifiableCOSDictionary.setFlag(COSName.A, 0, true);",
          "77:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "78:         }",
          "79:         catch (UnsupportedOperationException exception)",
          "80:         {",
          "82:         }",
          "84:         try",
          "85:         {",
          "86:             unmodifiableCOSDictionary.setNeedToBeUpdated(true);",
          "87:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "88:         }",
          "89:         catch (UnsupportedOperationException exception)",
          "90:         {",
          "92:         }",
          "93:     }",
          "95:     @Test",
          "96:     public void testSetItem()",
          "97:     {",
          "98:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "99:         try",
          "100:         {",
          "101:             unmodifiableCOSDictionary.setItem(COSName.A, COSName.A);",
          "102:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "103:         }",
          "104:         catch (UnsupportedOperationException exception)",
          "105:         {",
          "107:         }",
          "109:         try",
          "110:         {",
          "111:             unmodifiableCOSDictionary.setItem(COSName.A,",
          "112:                     Encoding.getInstance(COSName.STANDARD_ENCODING));",
          "113:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "114:         }",
          "115:         catch (UnsupportedOperationException exception)",
          "116:         {",
          "118:         }",
          "120:         try",
          "121:         {",
          "122:             unmodifiableCOSDictionary.setItem(\"A\", COSName.A);",
          "123:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "124:         }",
          "125:         catch (UnsupportedOperationException exception)",
          "126:         {",
          "128:         }",
          "129:         try",
          "130:         {",
          "131:             unmodifiableCOSDictionary.setItem(\"A\", Encoding.getInstance(COSName.STANDARD_ENCODING));",
          "132:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "133:         }",
          "134:         catch (UnsupportedOperationException exception)",
          "135:         {",
          "137:         }",
          "138:     }",
          "140:     @Test",
          "141:     public void testSetBoolean()",
          "142:     {",
          "143:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "144:         try",
          "145:         {",
          "146:             unmodifiableCOSDictionary.setBoolean(COSName.A, true);",
          "147:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "148:         }",
          "149:         catch (UnsupportedOperationException exception)",
          "150:         {",
          "152:         }",
          "154:         try",
          "155:         {",
          "156:             unmodifiableCOSDictionary.setBoolean(\"A\", true);",
          "157:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "158:         }",
          "159:         catch (UnsupportedOperationException exception)",
          "160:         {",
          "162:         }",
          "163:     }",
          "165:     @Test",
          "166:     public void testSetName()",
          "167:     {",
          "168:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "169:         try",
          "170:         {",
          "171:             unmodifiableCOSDictionary.setName(COSName.A, \"A\");",
          "172:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "173:         }",
          "174:         catch (UnsupportedOperationException exception)",
          "175:         {",
          "177:         }",
          "179:         try",
          "180:         {",
          "181:             unmodifiableCOSDictionary.setName(\"A\", \"A\");",
          "182:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "183:         }",
          "184:         catch (UnsupportedOperationException exception)",
          "185:         {",
          "187:         }",
          "188:     }",
          "190:     @Test",
          "191:     public void testSetDate()",
          "192:     {",
          "193:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "194:         try",
          "195:         {",
          "196:             unmodifiableCOSDictionary.setDate(COSName.A, Calendar.getInstance());",
          "197:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "198:         }",
          "199:         catch (UnsupportedOperationException exception)",
          "200:         {",
          "202:         }",
          "204:         try",
          "205:         {",
          "206:             unmodifiableCOSDictionary.setDate(\"A\", Calendar.getInstance());",
          "207:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "208:         }",
          "209:         catch (UnsupportedOperationException exception)",
          "210:         {",
          "212:         }",
          "213:     }",
          "215:     @Test",
          "216:     public void testSetEmbeddedDate()",
          "217:     {",
          "218:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "219:         try",
          "220:         {",
          "221:             unmodifiableCOSDictionary.setEmbeddedDate(\"Embedded\", COSName.A,",
          "222:                     Calendar.getInstance());",
          "223:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "224:         }",
          "225:         catch (UnsupportedOperationException exception)",
          "226:         {",
          "228:         }",
          "230:         try",
          "231:         {",
          "232:             unmodifiableCOSDictionary.setEmbeddedDate(\"Embedded\", \"A\", Calendar.getInstance());",
          "233:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "234:         }",
          "235:         catch (UnsupportedOperationException exception)",
          "236:         {",
          "238:         }",
          "239:     }",
          "241:     @Test",
          "242:     public void testSetString()",
          "243:     {",
          "244:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "245:         try",
          "246:         {",
          "247:             unmodifiableCOSDictionary.setString(COSName.A, \"A\");",
          "248:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "249:         }",
          "250:         catch (UnsupportedOperationException exception)",
          "251:         {",
          "253:         }",
          "255:         try",
          "256:         {",
          "257:             unmodifiableCOSDictionary.setString(\"A\", \"A\");",
          "258:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "259:         }",
          "260:         catch (UnsupportedOperationException exception)",
          "261:         {",
          "263:         }",
          "264:     }",
          "266:     @Test",
          "267:     public void testSetEmbeddedString()",
          "268:     {",
          "269:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "270:         try",
          "271:         {",
          "272:             unmodifiableCOSDictionary.setEmbeddedString(\"Embedded\", COSName.A, \"A\");",
          "273:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "274:         }",
          "275:         catch (UnsupportedOperationException exception)",
          "276:         {",
          "278:         }",
          "280:         try",
          "281:         {",
          "282:             unmodifiableCOSDictionary.setEmbeddedString(\"Embedded\", \"A\", \"A\");",
          "283:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "284:         }",
          "285:         catch (UnsupportedOperationException exception)",
          "286:         {",
          "288:         }",
          "289:     }",
          "291:     @Test",
          "292:     public void testSetInt()",
          "293:     {",
          "294:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "295:         try",
          "296:         {",
          "297:             unmodifiableCOSDictionary.setInt(COSName.A, 0);",
          "298:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "299:         }",
          "300:         catch (UnsupportedOperationException exception)",
          "301:         {",
          "303:         }",
          "305:         try",
          "306:         {",
          "307:             unmodifiableCOSDictionary.setInt(\"A\", 0);",
          "308:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "309:         }",
          "310:         catch (UnsupportedOperationException exception)",
          "311:         {",
          "313:         }",
          "314:     }",
          "316:     @Test",
          "317:     public void testSetEmbeddedInt()",
          "318:     {",
          "319:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "320:         try",
          "321:         {",
          "322:             unmodifiableCOSDictionary.setEmbeddedInt(\"Embedded\", COSName.A, 0);",
          "323:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "324:         }",
          "325:         catch (UnsupportedOperationException exception)",
          "326:         {",
          "328:         }",
          "330:         try",
          "331:         {",
          "332:             unmodifiableCOSDictionary.setEmbeddedInt(\"Embedded\", \"A\", 0);",
          "333:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "334:         }",
          "335:         catch (UnsupportedOperationException exception)",
          "336:         {",
          "338:         }",
          "339:     }",
          "341:     @Test",
          "342:     public void testSetLong()",
          "343:     {",
          "344:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "345:         try",
          "346:         {",
          "347:             unmodifiableCOSDictionary.setLong(COSName.A, 0);",
          "348:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "349:         }",
          "350:         catch (UnsupportedOperationException exception)",
          "351:         {",
          "353:         }",
          "355:         try",
          "356:         {",
          "357:             unmodifiableCOSDictionary.setLong(\"A\", 0);",
          "358:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "359:         }",
          "360:         catch (UnsupportedOperationException exception)",
          "361:         {",
          "363:         }",
          "364:     }",
          "366:     @Test",
          "367:     public void testSetFloat()",
          "368:     {",
          "369:         COSDictionary unmodifiableCOSDictionary = new COSDictionary().asUnmodifiableDictionary();",
          "370:         try",
          "371:         {",
          "372:             unmodifiableCOSDictionary.setFloat(COSName.A, 0);",
          "373:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "374:         }",
          "375:         catch (UnsupportedOperationException exception)",
          "376:         {",
          "378:         }",
          "380:         try",
          "381:         {",
          "382:             unmodifiableCOSDictionary.setFloat(\"A\", 0);",
          "383:             fail(\"An UnsupportedOperationException should have been thrown\");",
          "384:         }",
          "385:         catch (UnsupportedOperationException exception)",
          "386:         {",
          "388:         }",
          "389:     }",
          "390: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "112aacc812aa292bf1f35aac55f1dcb943bf1ddd",
      "candidate_info": {
        "commit_hash": "112aacc812aa292bf1f35aac55f1dcb943bf1ddd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/112aacc812aa292bf1f35aac55f1dcb943bf1ddd",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java"
        ],
        "message": "PDFBOX-5110: SonarQube fix; readability improvement\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886957 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     @Override",
          "50:     public int read() throws IOException",
          "51:     {",
          "53:         {",
          "58:         }",
          "59:         int result = super.read();",
          "60:         this.position++;",
          "",
          "[Removed Lines]",
          "52:         if (this.range == -1 || getRemaining() <= 0)",
          "54:             if (!nextRange())",
          "55:             {",
          "56:                 return -1; // EOF",
          "57:             }",
          "",
          "[Added Lines]",
          "52:         if ((this.range == -1 || getRemaining() <= 0) && !nextRange())",
          "54:             return -1; // EOF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     @Override",
          "71:     public int read(byte[] b, int off, int len) throws IOException",
          "72:     {",
          "74:         {",
          "79:         }",
          "80:         int bytesRead = super.read(b, off, (int) Math.min(len, getRemaining()));",
          "81:         this.position += bytesRead;",
          "",
          "[Removed Lines]",
          "73:         if (this.range == -1 || getRemaining() <= 0)",
          "75:             if (!nextRange())",
          "76:             {",
          "77:                 return -1; // EOF",
          "78:             }",
          "",
          "[Added Lines]",
          "70:         if ((this.range == -1 || getRemaining() <= 0) && !nextRange())",
          "72:             return -1; // EOF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     private boolean nextRange() throws IOException",
          "106:     {",
          "108:         {",
          "109:             this.range++;",
          "110:             while (this.position < this.ranges[this.range][0])",
          "",
          "[Removed Lines]",
          "107:         if (this.ranges.length > this.range + 1)",
          "",
          "[Added Lines]",
          "101:         if (this.range + 1 < this.ranges.length)",
          "",
          "---------------"
        ]
      }
    }
  ]
}