{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53",
      "candidate_info": {
        "commit_hash": "9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53",
        "files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ],
        "message": "AMBARI-25320 Backport AMBARI-24872 and AMBARI-24723 for ambari 2.7.4 - small adjustment(ihor lukianov)",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:             var instanceId = typeof target.templatedCluster == 'undefined'  ? '' : '&instanceId=' + target.templatedCluster;",
          "260:             var appId = target.app;",
          "261:             if ((appId === 'nifi' || appId === 'druid') && (!instanceId || instanceId === '&instanceId=')) {",
          "263:             }",
          "264:             var precision = target.precision === 'default' || typeof target.precision == 'undefined'  ? '' : '&precision='",
          "265:             + target.precision;",
          "",
          "[Removed Lines]",
          "262:                 instanceId = \"%\"",
          "",
          "[Added Lines]",
          "262:                 instanceId = \"&instanceId=%\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "de31cb0cc6c0bd74b9861547d944d671f2d4d0ce",
      "candidate_info": {
        "commit_hash": "de31cb0cc6c0bd74b9861547d944d671f2d4d0ce",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/de31cb0cc6c0bd74b9861547d944d671f2d4d0ce",
        "files": [
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java"
        ],
        "message": "AMBARI-24386 - [Log Search] Input config validator unable to parse any log entry (#1923) (#1926)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogEntryParseTester.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import java.util.List;",
          "26: import java.util.Map;",
          "28: import org.apache.ambari.logfeeder.conf.LogFeederProps;",
          "29: import org.apache.ambari.logfeeder.input.InputFileMarker;",
          "30: import org.apache.ambari.logfeeder.input.InputManagerImpl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.ambari.logfeeder.conf.LogEntryCacheConfig;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:     ConfigHandler configHandler = new ConfigHandler(null);",
          "83:     configHandler.setInputManager(new InputManagerImpl());",
          "84:     OutputManagerImpl outputManager = new OutputManagerImpl();",
          "85:     LogLevelFilterHandler logLevelFilterHandler = new LogLevelFilterHandler(null);",
          "87:     outputManager.setLogLevelFilterHandler(logLevelFilterHandler);",
          "88:     configHandler.setOutputManager(outputManager);",
          "89:     Input input = configHandler.getTestInput(inputConfig, logId);",
          "90:     final Map<String, Object> result = new HashMap<>();",
          "92:     input.addOutput(new Output<LogFeederProps, InputFileMarker>() {",
          "93:       @Override",
          "94:       public void init(LogFeederProps logFeederProperties) throws Exception {",
          "",
          "[Removed Lines]",
          "86:     logLevelFilterHandler.setLogFeederProps(new LogFeederProps());",
          "91:     input.getFirstFilter().init(new LogFeederProps());",
          "",
          "[Added Lines]",
          "86:     LogFeederProps logFeederProps = new LogFeederProps();",
          "87:     LogEntryCacheConfig logEntryCacheConfig = new LogEntryCacheConfig();",
          "88:     logEntryCacheConfig.setCacheEnabled(false);",
          "89:     logEntryCacheConfig.setCacheSize(0);",
          "90:     logFeederProps.setLogEntryCacheConfig(logEntryCacheConfig);",
          "91:     outputManager.setLogFeederProps(logFeederProps);",
          "93:     logLevelFilterHandler.setLogFeederProps(logFeederProps);",
          "97:     input.init(logFeederProps);",
          "99:     input.getFirstFilter().init(logFeederProps);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2df042144662f26faf256484e30f2059d2ab89ce",
      "candidate_info": {
        "commit_hash": "2df042144662f26faf256484e30f2059d2ab89ce",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2df042144662f26faf256484e30f2059d2ab89ce",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java"
        ],
        "message": "[AMBARI-24447] No subject alternative DNS name exception encountered when Enabling Kerberos against an Active Directory even when SSL verification is off",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java||ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java||ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java -> ambari-server/src/main/java/org/apache/ambari/server/security/InternalSSLSocketFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import java.security.cert.X509Certificate;",
          "28: import javax.net.ssl.SSLContext;",
          "29: import javax.net.ssl.SSLSocketFactory;",
          "30: import javax.net.ssl.TrustManager;",
          "31: import javax.net.ssl.X509TrustManager;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import javax.net.ssl.SSLEngine;",
          "32: import javax.net.ssl.X509ExtendedTrustManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:     public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException {",
          "102:     }",
          "",
          "[Removed Lines]",
          "99:   public static class LenientTrustManager implements X509TrustManager {",
          "",
          "[Added Lines]",
          "101:   public static class LenientTrustManager extends X509ExtendedTrustManager implements X509TrustManager {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:     public X509Certificate[] getAcceptedIssuers() {",
          "109:       return new X509Certificate[0];",
          "110:     }",
          "111:   }",
          "112: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:     @Override",
          "115:     public void checkClientTrusted(X509Certificate[] x509Certificates, String s, Socket socket) throws CertificateException {",
          "117:     }",
          "119:     @Override",
          "120:     public void checkServerTrusted(X509Certificate[] x509Certificates, String s, Socket socket) throws CertificateException {",
          "122:     }",
          "124:     @Override",
          "125:     public void checkClientTrusted(X509Certificate[] x509Certificates, String s, SSLEngine sslEngine) throws CertificateException {",
          "127:     }",
          "129:     @Override",
          "130:     public void checkServerTrusted(X509Certificate[] x509Certificates, String s, SSLEngine sslEngine) throws CertificateException {",
          "132:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "634cecd8b4b6f32b281dbb00a2a05e0baec5e0c7",
      "candidate_info": {
        "commit_hash": "634cecd8b4b6f32b281dbb00a2a05e0baec5e0c7",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/634cecd8b4b6f32b281dbb00a2a05e0baec5e0c7",
        "files": [
          "ambari-web/app/styles/application.less",
          "ambari-web/app/styles/common.less"
        ],
        "message": "AMBARI-24361 Make upgrade progress counter more readable",
        "before_after_code_files": [
          "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less",
          "ambari-web/app/styles/common.less||ambari-web/app/styles/common.less"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/styles/application.less||ambari-web/app/styles/application.less": [
          "File: ambari-web/app/styles/application.less -> ambari-web/app/styles/application.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "2292: .progress-counter {",
          "2293:   position: relative;",
          "2294:   .counters-label {",
          "2295:     font-weight: bold;",
          "2296:     left: 45%;",
          "2297:     position: absolute;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2295:     color: @dark-gray;",
          "",
          "---------------"
        ],
        "ambari-web/app/styles/common.less||ambari-web/app/styles/common.less": [
          "File: ambari-web/app/styles/common.less -> ambari-web/app/styles/common.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: @maintenance-black: #000;",
          "32: @maintenance-grey: #999999;",
          "33: @gray-text: #666;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: @dark-gray: #333;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0af328c569ca6c6aa3d54e787badc06a96b5930",
      "candidate_info": {
        "commit_hash": "e0af328c569ca6c6aa3d54e787badc06a96b5930",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/e0af328c569ca6c6aa3d54e787badc06a96b5930",
        "files": [
          "ambari-web/app/views/common/controls_view.js"
        ],
        "message": "AMBARI-24246. Ambari does not pick the existing hive database from the jdbc url set",
        "before_after_code_files": [
          "ambari-web/app/views/common/controls_view.js||ambari-web/app/views/common/controls_view.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/views/common/controls_view.js||ambari-web/app/views/common/controls_view.js": [
          "File: ambari-web/app/views/common/controls_view.js -> ambari-web/app/views/common/controls_view.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:       }",
          "115:     }",
          "117:     return $.Deferred().resolve().promise();",
          "118:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:     if (['oozie.service.JPAService.jdbc.url__oozie-site', 'javax.jdo.option.ConnectionURL__hive-site'].contains(config.get('id'))) {",
          "119:       controller.set('recommendationsInProgress', true);",
          "120:       controller.runServerSideValidation().done(function () {",
          "121:         controller.set('recommendationsInProgress', false)",
          "122:       });",
          "123:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}