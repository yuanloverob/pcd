{
  "cve_id": "CVE-2023-38670",
  "cve_desc": "Null pointer dereference in paddle.flip in PaddlePaddle before 2.5.0. This resulted in a runtime crash and denial of service.\n",
  "repo": "PaddlePaddle/Paddle",
  "patch_hash": "ed96baeed19b4e11b6cbc2dcc6776245ba5fab13",
  "patch_info": {
    "commit_hash": "ed96baeed19b4e11b6cbc2dcc6776245ba5fab13",
    "repo": "PaddlePaddle/Paddle",
    "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/ed96baeed19b4e11b6cbc2dcc6776245ba5fab13",
    "files": [
      "paddle/fluid/pybind/op_function_common.cc"
    ],
    "message": "check tensor numel in PyObject_CheckLongOrToLong",
    "before_after_code_files": [
      "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc"
    ]
  },
  "patch_diff": {
    "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc": [
      "File: paddle/fluid/pybind/op_function_common.cc -> paddle/fluid/pybind/op_function_common.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: #include \"paddle/fluid/imperative/tracer.h\"",
      "31: #include \"paddle/fluid/imperative/type_defs.h\"",
      "32: #include \"paddle/fluid/operators/ops_extra_info.h\"",
      "33: #include \"paddle/fluid/pybind/imperative.h\"",
      "34: #include \"paddle/phi/common/complex.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: #include \"paddle/fluid/pybind/eager.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:   if ((PyLong_Check(*obj) && !PyBool_Check(*obj)) ||",
      "71:       PyObject_IsInstance(*obj, (PyObject*)g_vartype_pytype) ||  // NOLINT",
      "72:       PyObject_IsInstance(*obj, (PyObject*)g_varbase_pytype) ||  // NOLINT",
      "74:     return true;",
      "75:   }",
      "",
      "[Removed Lines]",
      "73:       PyObject_IsInstance(*obj, (PyObject*)p_tensor_type)) {     // NOLINT",
      "",
      "[Added Lines]",
      "74:       (PyObject_IsInstance(*obj, (PyObject*)p_tensor_type) &&    // NOLINT",
      "75:        (((TensorObject*)(*obj))->tensor.numel() == 1))) {        // NOLINT",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d994d212260373426a26577fd233f6e9b1d76306",
      "candidate_info": {
        "commit_hash": "d994d212260373426a26577fd233f6e9b1d76306",
        "repo": "PaddlePaddle/Paddle",
        "commit_url": "https://github.com/PaddlePaddle/Paddle/commit/d994d212260373426a26577fd233f6e9b1d76306",
        "files": [
          "paddle/fluid/pybind/op_function_common.cc",
          "python/paddle/fluid/tests/unittests/test_flip.py"
        ],
        "message": "Fix \u7a7a\u6307\u9488 (Null pointer) of case 17 paddle.flip (#50028)\n\n* check tensor numel in PyObject_CheckLongOrToLong\n\n* add unittest",
        "before_after_code_files": [
          "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc",
          "python/paddle/fluid/tests/unittests/test_flip.py||python/paddle/fluid/tests/unittests/test_flip.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PaddlePaddle/Paddle/pull/50028"
        ],
        "olp_code_files": {
          "patch": [
            "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc"
          ],
          "candidate": [
            "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc"
          ]
        }
      },
      "candidate_diff": {
        "paddle/fluid/pybind/op_function_common.cc||paddle/fluid/pybind/op_function_common.cc": [
          "File: paddle/fluid/pybind/op_function_common.cc -> paddle/fluid/pybind/op_function_common.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: #include \"paddle/fluid/imperative/tracer.h\"",
          "31: #include \"paddle/fluid/imperative/type_defs.h\"",
          "32: #include \"paddle/fluid/operators/ops_extra_info.h\"",
          "33: #include \"paddle/fluid/pybind/imperative.h\"",
          "34: #include \"paddle/phi/common/complex.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #include \"paddle/fluid/pybind/eager.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:   if ((PyLong_Check(*obj) && !PyBool_Check(*obj)) ||",
          "71:       PyObject_IsInstance(*obj, (PyObject*)g_vartype_pytype) ||  // NOLINT",
          "72:       PyObject_IsInstance(*obj, (PyObject*)g_varbase_pytype) ||  // NOLINT",
          "74:     return true;",
          "75:   }",
          "",
          "[Removed Lines]",
          "73:       PyObject_IsInstance(*obj, (PyObject*)p_tensor_type)) {     // NOLINT",
          "",
          "[Added Lines]",
          "74:       (PyObject_IsInstance(*obj, (PyObject*)p_tensor_type) &&    // NOLINT",
          "75:        (((TensorObject*)(*obj))->tensor.numel() == 1))) {        // NOLINT",
          "",
          "---------------"
        ],
        "python/paddle/fluid/tests/unittests/test_flip.py||python/paddle/fluid/tests/unittests/test_flip.py": [
          "File: python/paddle/fluid/tests/unittests/test_flip.py -> python/paddle/fluid/tests/unittests/test_flip.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:             self.func(p)",
          "199: if __name__ == \"__main__\":",
          "200:     paddle.enable_static()",
          "201:     unittest.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199: class TestFlipError(unittest.TestCase):",
          "200:     def test_axis(self):",
          "201:         paddle.enable_static()",
          "203:         def test_axis_rank():",
          "204:             input = fluid.data(name='input', dtype='float32', shape=[2, 3])",
          "205:             output = paddle.flip(input, axis=[[0]])",
          "207:         self.assertRaises(TypeError, test_axis_rank)",
          "209:         def test_axis_rank2():",
          "210:             input = fluid.data(name='input', dtype='float32', shape=[2, 3])",
          "211:             output = paddle.flip(input, axis=[[0, 0], [1, 1]])",
          "213:         self.assertRaises(TypeError, test_axis_rank2)",
          "",
          "---------------"
        ]
      }
    }
  ]
}