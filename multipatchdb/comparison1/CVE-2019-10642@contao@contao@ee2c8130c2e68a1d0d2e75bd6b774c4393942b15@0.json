{
  "cve_id": "CVE-2019-10642",
  "cve_desc": "Contao 4.7 allows CSRF.",
  "repo": "contao/contao",
  "patch_hash": "ee2c8130c2e68a1d0d2e75bd6b774c4393942b15",
  "patch_info": {
    "commit_hash": "ee2c8130c2e68a1d0d2e75bd6b774c4393942b15",
    "repo": "contao/contao",
    "commit_url": "https://github.com/contao/contao/commit/ee2c8130c2e68a1d0d2e75bd6b774c4393942b15",
    "files": [
      "CHANGELOG.md",
      "core-bundle/src/EventListener/RequestTokenListener.php",
      "core-bundle/src/Framework/ContaoFramework.php",
      "core-bundle/src/Resources/config/listener.yml",
      "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
      "core-bundle/tests/EventListener/RequestTokenListenerTest.php",
      "core-bundle/tests/Framework/ContaoFrameworkTest.php"
    ],
    "message": "Fix the request token check in the front end (see CVE-2019-10642)",
    "before_after_code_files": [
      "core-bundle/src/EventListener/RequestTokenListener.php||core-bundle/src/EventListener/RequestTokenListener.php",
      "core-bundle/src/Framework/ContaoFramework.php||core-bundle/src/Framework/ContaoFramework.php",
      "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
      "core-bundle/tests/EventListener/RequestTokenListenerTest.php||core-bundle/tests/EventListener/RequestTokenListenerTest.php",
      "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php"
    ]
  },
  "patch_diff": {
    "core-bundle/src/EventListener/RequestTokenListener.php||core-bundle/src/EventListener/RequestTokenListener.php": [
      "File: core-bundle/src/EventListener/RequestTokenListener.php -> core-bundle/src/EventListener/RequestTokenListener.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "13: namespace Contao\\CoreBundle\\EventListener;",
      "15: use Contao\\Config;",
      "16: use Contao\\CoreBundle\\Exception\\InvalidRequestTokenException;",
      "17: use Contao\\CoreBundle\\Framework\\ContaoFramework;",
      "18: use Contao\\CoreBundle\\Routing\\ScopeMatcher;",
      "19: use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;",
      "20: use Symfony\\Component\\Security\\Csrf\\CsrfToken;",
      "21: use Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface;",
      "26: class RequestTokenListener",
      "27: {",
      "31:     private $framework;",
      "36:     private $scopeMatcher;",
      "41:     private $csrfTokenManager;",
      "46:     private $csrfTokenName;",
      "48:     public function __construct(ContaoFramework $framework, ScopeMatcher $scopeMatcher, CsrfTokenManagerInterface $csrfTokenManager, string $csrfTokenName)",
      "49:     {",
      "50:         $this->framework = $framework;",
      "51:         $this->scopeMatcher = $scopeMatcher;",
      "52:         $this->csrfTokenManager = $csrfTokenManager;",
      "53:         $this->csrfTokenName = $csrfTokenName;",
      "54:     }",
      "59:     public function onKernelRequest(GetResponseEvent $event): void",
      "60:     {",
      "61:         $request = $event->getRequest();",
      "67:         if (",
      "68:             'POST' !== $request->getRealMethod()",
      "69:             || $request->isXmlHttpRequest()",
      "70:             || false === $request->attributes->get('_token_check')",
      "71:             || (!$request->attributes->has('_token_check') && !$this->scopeMatcher->isContaoRequest($request))",
      "72:         ) {",
      "73:             return;",
      "74:         }",
      "77:         $config = $this->framework->getAdapter(Config::class);",
      "79:         if (\\defined('BYPASS_TOKEN_CHECK')) {",
      "80:             @trigger_error('Defining the BYPASS_TOKEN_CHECK constant has been deprecated and will no longer work in Contao 5.0.', E_USER_DEPRECATED);",
      "82:             return;",
      "83:         }",
      "85:         if ($config->get('disableRefererCheck')) {",
      "86:             @trigger_error('Using the \"disableRefererCheck\" setting has been deprecated and will no longer work in Contao 5.0.', E_USER_DEPRECATED);",
      "88:             return;",
      "89:         }",
      "91:         if ($config->get('requestTokenWhitelist')) {",
      "92:             @trigger_error('Using the \"requestTokenWhitelist\" setting has been deprecated and will no longer work in Contao 5.0.', E_USER_DEPRECATED);",
      "94:             $hostname = gethostbyaddr($request->getClientIp());",
      "96:             foreach ($config->get('requestTokenWhitelist') as $domain) {",
      "97:                 if ($domain === $hostname || preg_match('/\\.' . preg_quote($domain, '/') . '$/', $hostname)) {",
      "98:                     return;",
      "99:                 }",
      "100:             }",
      "101:         }",
      "103:         $token = new CsrfToken($this->csrfTokenName, $request->request->get('REQUEST_TOKEN'));",
      "105:         if ($this->csrfTokenManager->isTokenValid($token)) {",
      "106:             return;",
      "107:         }",
      "109:         throw new InvalidRequestTokenException('Invalid CSRF token. Please reload the page and try again.');",
      "110:     }",
      "111: }",
      "",
      "---------------"
    ],
    "core-bundle/src/Framework/ContaoFramework.php||core-bundle/src/Framework/ContaoFramework.php": [
      "File: core-bundle/src/Framework/ContaoFramework.php -> core-bundle/src/Framework/ContaoFramework.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: use Contao\\ClassLoader;",
      "16: use Contao\\Config;",
      "17: use Contao\\CoreBundle\\Exception\\IncompleteInstallationException;",
      "19: use Contao\\CoreBundle\\Routing\\ScopeMatcher;",
      "20: use Contao\\CoreBundle\\Security\\Authentication\\Token\\TokenChecker;",
      "21: use Contao\\CoreBundle\\Session\\LazySessionAccess;",
      "",
      "[Removed Lines]",
      "18: use Contao\\CoreBundle\\Exception\\InvalidRequestTokenException;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "395:         if (!\\defined('REQUEST_TOKEN')) {",
      "396:             \\define('REQUEST_TOKEN', 'cli' === \\PHP_SAPI ? null : $requestToken->get());",
      "397:         }",
      "404:     }",
      "406:     private function iniSet(string $key, string $value): void",
      "",
      "[Removed Lines]",
      "399:         if ($this->canSkipTokenCheck() || $requestToken->validate($this->request->request->get('REQUEST_TOKEN'))) {",
      "400:             return;",
      "401:         }",
      "403:         throw new InvalidRequestTokenException('Invalid request token. Please reload the page and try again.');",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "419:         return $this->request->getSession();",
      "420:     }",
      "432:     private function registerHookListeners(): void",
      "433:     {",
      "434:         foreach ($this->hookListeners as $hookName => $priorities) {",
      "",
      "[Removed Lines]",
      "422:     private function canSkipTokenCheck(): bool",
      "423:     {",
      "424:         return null === $this->request",
      "425:             || 'POST' !== $this->request->getRealMethod()",
      "426:             || $this->request->isXmlHttpRequest()",
      "427:             || !$this->request->attributes->has('_token_check')",
      "428:             || false === $this->request->attributes->get('_token_check')",
      "429:         ;",
      "430:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php": [
      "File: core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php -> core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "49: use Contao\\CoreBundle\\EventListener\\MergeHttpHeadersListener;",
      "50: use Contao\\CoreBundle\\EventListener\\PrettyErrorScreenListener;",
      "51: use Contao\\CoreBundle\\EventListener\\RefererIdListener;",
      "52: use Contao\\CoreBundle\\EventListener\\ResponseExceptionListener;",
      "53: use Contao\\CoreBundle\\EventListener\\StoreRefererListener;",
      "54: use Contao\\CoreBundle\\EventListener\\SwitchUserListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "52: use Contao\\CoreBundle\\EventListener\\RequestTokenListener;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "119: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
      "120: use Symfony\\Component\\DependencyInjection\\ServiceLocator;",
      "121: use Symfony\\Component\\HttpFoundation\\RequestMatcher;",
      "122: use Symfony\\Component\\Security\\Csrf\\CsrfTokenManager;",
      "124: class ContaoCoreExtensionTest extends TestCase",
      "125: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "123: use Symfony\\Component\\HttpKernel\\EventListener\\AbstractSessionListener;",
      "124: use Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener;",
      "125: use Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener as BaseLocaleListener;",
      "126: use Symfony\\Component\\HttpKernel\\EventListener\\RouterListener;",
      "128: use Symfony\\Component\\Security\\Http\\Firewall;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "161:         $this->assertSame('contao', $extension->getAlias());",
      "162:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "170:     public function testValidatesTheSymfonyListenerPriorities(): void",
      "171:     {",
      "172:         $events = AbstractSessionListener::getSubscribedEvents();",
      "174:         $this->assertSame('onKernelResponse', $events['kernel.response'][0]);",
      "175:         $this->assertSame(-1000, $events['kernel.response'][1]);",
      "177:         $events = BaseLocaleListener::getSubscribedEvents();",
      "179:         $this->assertSame('onKernelRequest', $events['kernel.request'][0][0]);",
      "180:         $this->assertSame(16, $events['kernel.request'][0][1]);",
      "182:         $events = ExceptionListener::getSubscribedEvents();",
      "184:         $this->assertSame('onKernelException', $events['kernel.exception'][1][0]);",
      "185:         $this->assertSame(-128, $events['kernel.exception'][1][1]);",
      "187:         $events = Firewall::getSubscribedEvents();",
      "189:         $this->assertSame('onKernelRequest', $events['kernel.request'][0]);",
      "190:         $this->assertSame(8, $events['kernel.request'][1]);",
      "192:         $events = RouterListener::getSubscribedEvents();",
      "194:         $this->assertSame('onKernelRequest', $events['kernel.request'][0][0]);",
      "195:         $this->assertSame(32, $events['kernel.request'][0][1]);",
      "196:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "508:         $this->assertSame(20, $tags['kernel.event_listener'][0]['priority']);",
      "509:     }",
      "511:     public function testRegistersTheResponseExceptionListener(): void",
      "512:     {",
      "513:         $this->assertTrue($this->container->has('contao.listener.response_exception'));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "545:     public function testRegistersTheRequestTokenListener(): void",
      "546:     {",
      "547:         $this->assertTrue($this->container->has('contao.listener.request_token'));",
      "549:         $definition = $this->container->getDefinition('contao.listener.request_token');",
      "551:         $this->assertSame(RequestTokenListener::class, $definition->getClass());",
      "552:         $this->assertTrue($definition->isPrivate());",
      "553:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
      "554:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
      "555:         $this->assertSame('contao.csrf.token_manager', (string) $definition->getArgument(2));",
      "556:         $this->assertSame('%contao.csrf_token_name%', (string) $definition->getArgument(3));",
      "558:         $tags = $definition->getTags();",
      "560:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
      "561:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
      "562:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
      "563:         $this->assertSame(30, $tags['kernel.event_listener'][0]['priority']);",
      "564:     }",
      "",
      "---------------"
    ],
    "core-bundle/tests/EventListener/RequestTokenListenerTest.php||core-bundle/tests/EventListener/RequestTokenListenerTest.php": [
      "File: core-bundle/tests/EventListener/RequestTokenListenerTest.php -> core-bundle/tests/EventListener/RequestTokenListenerTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "13: namespace Contao\\CoreBundle\\Tests\\EventListener;",
      "15: use Contao\\Config;",
      "16: use Contao\\CoreBundle\\EventListener\\RequestTokenListener;",
      "17: use Contao\\CoreBundle\\Exception\\InvalidRequestTokenException;",
      "18: use Contao\\CoreBundle\\Routing\\ScopeMatcher;",
      "19: use Contao\\CoreBundle\\Tests\\TestCase;",
      "20: use Symfony\\Component\\HttpFoundation\\Request;",
      "21: use Symfony\\Component\\HttpKernel\\Event\\GetResponseEvent;",
      "22: use Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface;",
      "24: class RequestTokenListenerTest extends TestCase",
      "25: {",
      "26:     public function testValidatesTheRequestToken(): void",
      "27:     {",
      "28:         $config = $this->mockConfiguredAdapter(['get' => false]);",
      "29:         $framework = $this->mockContaoFramework([Config::class => $config]);",
      "30:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "32:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "33:         $csrfTokenManager",
      "34:             ->expects($this->once())",
      "35:             ->method('isTokenValid')",
      "36:             ->willReturn(true)",
      "37:         ;",
      "39:         $request = Request::create('/account.html');",
      "40:         $request->setMethod('POST');",
      "41:         $request->attributes->set('_token_check', true);",
      "43:         $event = $this->createMock(GetResponseEvent::class);",
      "44:         $event",
      "45:             ->expects($this->once())",
      "46:             ->method('getRequest')",
      "47:             ->willReturn($request)",
      "48:         ;",
      "50:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "51:         $listener->onKernelRequest($event);",
      "52:     }",
      "54:     public function testValidatesTheRequestTokenUponContaoRequests(): void",
      "55:     {",
      "56:         $config = $this->mockConfiguredAdapter(['get' => false]);",
      "57:         $framework = $this->mockContaoFramework([Config::class => $config]);",
      "59:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "60:         $scopeMatcher",
      "61:             ->expects($this->once())",
      "62:             ->method('isContaoRequest')",
      "63:             ->willReturn(true)",
      "64:         ;",
      "66:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "67:         $csrfTokenManager",
      "68:             ->expects($this->once())",
      "69:             ->method('isTokenValid')",
      "70:             ->willReturn(true)",
      "71:         ;",
      "73:         $request = Request::create('/account.html');",
      "74:         $request->setMethod('POST');",
      "76:         $event = $this->createMock(GetResponseEvent::class);",
      "77:         $event",
      "78:             ->expects($this->once())",
      "79:             ->method('getRequest')",
      "80:             ->willReturn($request)",
      "81:         ;",
      "83:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "84:         $listener->onKernelRequest($event);",
      "85:     }",
      "87:     public function testFailsIfTheRequestTokenIsInvalid(): void",
      "88:     {",
      "89:         $config = $this->mockConfiguredAdapter(['get' => false]);",
      "90:         $framework = $this->mockContaoFramework([Config::class => $config]);",
      "91:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "93:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "94:         $csrfTokenManager",
      "95:             ->expects($this->once())",
      "96:             ->method('isTokenValid')",
      "97:             ->willReturn(false)",
      "98:         ;",
      "100:         $request = Request::create('/account.html');",
      "101:         $request->setMethod('POST');",
      "102:         $request->attributes->set('_token_check', true);",
      "104:         $event = $this->createMock(GetResponseEvent::class);",
      "105:         $event",
      "106:             ->expects($this->once())",
      "107:             ->method('getRequest')",
      "108:             ->willReturn($request)",
      "109:         ;",
      "111:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "113:         $this->expectException(InvalidRequestTokenException::class);",
      "115:         $listener->onKernelRequest($event);",
      "116:     }",
      "118:     public function testDoesNotValidateTheRequestTokenUponNonPostRequests(): void",
      "119:     {",
      "120:         $framework = $this->mockContaoFramework();",
      "121:         $framework",
      "122:             ->expects($this->never())",
      "123:             ->method('getAdapter')",
      "124:         ;",
      "126:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "127:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "129:         $request = Request::create('/account.html');",
      "130:         $request->setMethod('GET');",
      "131:         $request->attributes->set('_token_check', true);",
      "133:         $event = $this->createMock(GetResponseEvent::class);",
      "134:         $event",
      "135:             ->expects($this->once())",
      "136:             ->method('getRequest')",
      "137:             ->willReturn($request)",
      "138:         ;",
      "140:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "141:         $listener->onKernelRequest($event);",
      "142:     }",
      "144:     public function testDoesNotValidateTheRequestTokenUponAjaxRequests(): void",
      "145:     {",
      "146:         $framework = $this->mockContaoFramework();",
      "147:         $framework",
      "148:             ->expects($this->never())",
      "149:             ->method('getAdapter')",
      "150:         ;",
      "152:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "153:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "155:         $request = Request::create('/account.html');",
      "156:         $request->setMethod('POST');",
      "157:         $request->attributes->set('_token_check', true);",
      "158:         $request->headers->set('X-Requested-With', 'XMLHttpRequest');",
      "160:         $event = $this->createMock(GetResponseEvent::class);",
      "161:         $event",
      "162:             ->expects($this->once())",
      "163:             ->method('getRequest')",
      "164:             ->willReturn($request)",
      "165:         ;",
      "167:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "168:         $listener->onKernelRequest($event);",
      "169:     }",
      "171:     public function testDoesNotValidateTheRequestTokenIfTheRequestAttributeIsFalse(): void",
      "172:     {",
      "173:         $framework = $this->mockContaoFramework();",
      "174:         $framework",
      "175:             ->expects($this->never())",
      "176:             ->method('getAdapter')",
      "177:         ;",
      "179:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "180:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "182:         $request = Request::create('/account.html');",
      "183:         $request->setMethod('POST');",
      "184:         $request->attributes->set('_token_check', false);",
      "186:         $event = $this->createMock(GetResponseEvent::class);",
      "187:         $event",
      "188:             ->expects($this->once())",
      "189:             ->method('getRequest')",
      "190:             ->willReturn($request)",
      "191:         ;",
      "193:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "194:         $listener->onKernelRequest($event);",
      "195:     }",
      "197:     public function testDoesNotValidateTheRequestTokenIfNoRequestAttributeAndNotAContaoRequest(): void",
      "198:     {",
      "199:         $framework = $this->mockContaoFramework();",
      "200:         $framework",
      "201:             ->expects($this->never())",
      "202:             ->method('getAdapter')",
      "203:         ;",
      "205:         $scopeMatcher = $this->createMock(ScopeMatcher::class);",
      "206:         $scopeMatcher",
      "207:             ->expects($this->once())",
      "208:             ->method('isContaoRequest')",
      "209:             ->willReturn(false)",
      "210:         ;",
      "212:         $csrfTokenManager = $this->createMock(CsrfTokenManagerInterface::class);",
      "214:         $request = Request::create('/account.html');",
      "215:         $request->setMethod('POST');",
      "217:         $event = $this->createMock(GetResponseEvent::class);",
      "218:         $event",
      "219:             ->expects($this->once())",
      "220:             ->method('getRequest')",
      "221:             ->willReturn($request)",
      "222:         ;",
      "224:         $listener = new RequestTokenListener($framework, $scopeMatcher, $csrfTokenManager, 'contao_csrf_token');",
      "225:         $listener->onKernelRequest($event);",
      "226:     }",
      "227: }",
      "",
      "---------------"
    ],
    "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php": [
      "File: core-bundle/tests/Framework/ContaoFrameworkTest.php -> core-bundle/tests/Framework/ContaoFrameworkTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "328:         error_reporting($errorReporting);",
      "329:     }",
      "",
      "[Removed Lines]",
      "331:     public function testValidatesTheRequestToken(): void",
      "332:     {",
      "333:         $request = Request::create('/contao/login');",
      "334:         $request->attributes->set('_route', 'dummy');",
      "335:         $request->attributes->set('_token_check', true);",
      "336:         $request->setMethod('POST');",
      "337:         $request->request->set('REQUEST_TOKEN', 'foobar');",
      "339:         $framework = $this->mockFramework($request);",
      "340:         $framework->setContainer($this->mockContainer());",
      "341:         $framework->initialize();",
      "343:         $this->addToAssertionCount(1);  // does not throw an exception",
      "344:     }",
      "350:     public function testFailsIfTheRequestTokenIsInvalid(): void",
      "351:     {",
      "352:         $request = Request::create('/contao/login');",
      "353:         $request->attributes->set('_route', 'dummy');",
      "354:         $request->attributes->set('_token_check', true);",
      "355:         $request->setMethod('POST');",
      "356:         $request->request->set('REQUEST_TOKEN', 'invalid');",
      "358:         $requestStack = new RequestStack();",
      "359:         $requestStack->push($request);",
      "361:         $framework = new ContaoFramework(",
      "362:             $requestStack,",
      "363:             $this->mockScopeMatcher(),",
      "364:             $this->createMock(TokenChecker::class),",
      "365:             $this->getTempDir(),",
      "366:             error_reporting()",
      "367:         );",
      "369:         $framework->setContainer($this->mockContainer());",
      "371:         $adapters = [",
      "372:             Config::class => $this->mockConfigAdapter(),",
      "373:             RequestToken::class => $this->mockRequestTokenAdapter(false),",
      "374:         ];",
      "376:         $ref = new \\ReflectionObject($framework);",
      "377:         $adapterCache = $ref->getProperty('adapterCache');",
      "378:         $adapterCache->setAccessible(true);",
      "379:         $adapterCache->setValue($framework, $adapters);",
      "381:         $this->expectException(InvalidRequestTokenException::class);",
      "383:         $framework->initialize();",
      "384:     }",
      "386:     public function testDoesNotValidateTheRequestTokenUponAjaxRequests(): void",
      "387:     {",
      "388:         $request = Request::create('/contao/login');",
      "389:         $request->attributes->set('_route', 'dummy');",
      "390:         $request->attributes->set('_token_check', true);",
      "391:         $request->setMethod('POST');",
      "392:         $request->headers->set('X-Requested-With', 'XMLHttpRequest');",
      "394:         $requestStack = new RequestStack();",
      "395:         $requestStack->push($request);",
      "397:         $framework = new ContaoFramework(",
      "398:             $requestStack,",
      "399:             $this->mockScopeMatcher(),",
      "400:             $this->createMock(TokenChecker::class),",
      "401:             $this->getTempDir(),",
      "402:             error_reporting()",
      "403:         );",
      "405:         $framework->setContainer($this->mockContainer());",
      "407:         $adapters = [",
      "408:             Config::class => $this->mockConfigAdapter(),",
      "409:             RequestToken::class => $this->mockRequestTokenAdapter(false),",
      "410:         ];",
      "412:         $ref = new \\ReflectionObject($framework);",
      "413:         $adapterCache = $ref->getProperty('adapterCache');",
      "414:         $adapterCache->setAccessible(true);",
      "415:         $adapterCache->setValue($framework, $adapters);",
      "417:         $framework->initialize();",
      "419:         $this->addToAssertionCount(1);  // does not throw an exception",
      "420:     }",
      "422:     public function testDoesNotValidateTheRequestTokenIfTheRequestAttributeIsFalse(): void",
      "423:     {",
      "424:         $request = Request::create('/contao/login');",
      "425:         $request->attributes->set('_route', 'dummy');",
      "426:         $request->attributes->set('_token_check', false);",
      "427:         $request->setMethod('POST');",
      "428:         $request->request->set('REQUEST_TOKEN', 'foobar');",
      "430:         $requestStack = new RequestStack();",
      "431:         $requestStack->push($request);",
      "433:         $framework = new ContaoFramework(",
      "434:             $requestStack,",
      "435:             $this->mockScopeMatcher(),",
      "436:             $this->createMock(TokenChecker::class),",
      "437:             $this->getTempDir(),",
      "438:             error_reporting()",
      "439:         );",
      "441:         $framework->setContainer($this->mockContainer());",
      "443:         $adapter = $this->mockAdapter(['get', 'validate']);",
      "444:         $adapter",
      "445:             ->method('get')",
      "446:             ->willReturn('foobar')",
      "447:         ;",
      "449:         $adapter",
      "450:             ->expects($this->never())",
      "451:             ->method('validate')",
      "452:         ;",
      "454:         $adapters = [",
      "455:             Config::class => $this->mockConfigAdapter(),",
      "456:             RequestToken::class => $adapter,",
      "457:         ];",
      "459:         $ref = new \\ReflectionObject($framework);",
      "460:         $adapterCache = $ref->getProperty('adapterCache');",
      "461:         $adapterCache->setAccessible(true);",
      "462:         $adapterCache->setValue($framework, $adapters);",
      "464:         $framework->initialize();",
      "465:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c9ecf9312379f2f383a0acb1f1e4be6427b3d5c4",
      "candidate_info": {
        "commit_hash": "c9ecf9312379f2f383a0acb1f1e4be6427b3d5c4",
        "repo": "contao/contao",
        "commit_url": "https://github.com/contao/contao/commit/c9ecf9312379f2f383a0acb1f1e4be6427b3d5c4",
        "files": [
          "calendar-bundle/composer.json",
          "calendar-bundle/tests/Picker/EventPickerProviderTest.php",
          "comments-bundle/composer.json",
          "composer.json",
          "core-bundle/.gitignore",
          "core-bundle/composer.json",
          "core-bundle/src/Controller/InitializeController.php",
          "core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php",
          "core-bundle/src/EventListener/ExceptionConverterListener.php",
          "core-bundle/src/EventListener/PrettyErrorScreenListener.php",
          "core-bundle/src/EventListener/ResponseExceptionListener.php",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "core-bundle/tests/EventListener/ExceptionConverterListenerTest.php",
          "core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php",
          "core-bundle/tests/Functional/app/AppKernel.php",
          "core-bundle/tests/Functional/app/config/config_test.yml",
          "core-bundle/tests/Picker/ArticlePickerProviderTest.php",
          "core-bundle/tests/Picker/FilePickerProviderTest.php",
          "core-bundle/tests/Picker/PagePickerProviderTest.php",
          "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "core-bundle/tests/Security/Exception/LockedExceptionTest.php",
          "faq-bundle/composer.json",
          "faq-bundle/tests/Picker/FaqPickerProviderTest.php",
          "installation-bundle/composer.json",
          "listing-bundle/composer.json",
          "manager-bundle/composer.json",
          "manager-bundle/src/Api/Command/VersionCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php",
          "manager-bundle/src/HttpKernel/ContaoKernel.php",
          "news-bundle/composer.json",
          "news-bundle/tests/Picker/NewsPickerProviderTest.php",
          "newsletter-bundle/composer.json",
          "phpstan.neon.dist"
        ],
        "message": "Update to Symfony 4.4 (see #1012)\n\nDescription\n-----------\n\n-\n\nCommits\n-------\n\ne674d12b Update to Symfony 4.4\n01e4fba6 Remove all possible BC layers\nb69e1904 Fix the --prefer-lowest tests\nbd93c66c Do not create the test container cache in the core-bundle/tests folder\n53be3922 Fix the coding style",
        "before_after_code_files": [
          "calendar-bundle/tests/Picker/EventPickerProviderTest.php||calendar-bundle/tests/Picker/EventPickerProviderTest.php",
          "core-bundle/src/Controller/InitializeController.php||core-bundle/src/Controller/InitializeController.php",
          "core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php||core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php",
          "core-bundle/src/EventListener/ExceptionConverterListener.php||core-bundle/src/EventListener/ExceptionConverterListener.php",
          "core-bundle/src/EventListener/PrettyErrorScreenListener.php||core-bundle/src/EventListener/PrettyErrorScreenListener.php",
          "core-bundle/src/EventListener/ResponseExceptionListener.php||core-bundle/src/EventListener/ResponseExceptionListener.php",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "core-bundle/tests/EventListener/ExceptionConverterListenerTest.php||core-bundle/tests/EventListener/ExceptionConverterListenerTest.php",
          "core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php||core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php",
          "core-bundle/tests/Functional/app/AppKernel.php||core-bundle/tests/Functional/app/AppKernel.php",
          "core-bundle/tests/Picker/ArticlePickerProviderTest.php||core-bundle/tests/Picker/ArticlePickerProviderTest.php",
          "core-bundle/tests/Picker/FilePickerProviderTest.php||core-bundle/tests/Picker/FilePickerProviderTest.php",
          "core-bundle/tests/Picker/PagePickerProviderTest.php||core-bundle/tests/Picker/PagePickerProviderTest.php",
          "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php||core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "core-bundle/tests/Security/Exception/LockedExceptionTest.php||core-bundle/tests/Security/Exception/LockedExceptionTest.php",
          "faq-bundle/tests/Picker/FaqPickerProviderTest.php||faq-bundle/tests/Picker/FaqPickerProviderTest.php",
          "manager-bundle/src/Api/Command/VersionCommand.php||manager-bundle/src/Api/Command/VersionCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php||manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php||manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php",
          "manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php",
          "manager-bundle/src/HttpKernel/ContaoKernel.php||manager-bundle/src/HttpKernel/ContaoKernel.php",
          "news-bundle/tests/Picker/NewsPickerProviderTest.php||news-bundle/tests/Picker/NewsPickerProviderTest.php",
          "phpstan.neon.dist||phpstan.neon.dist"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ],
          "candidate": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ]
        }
      },
      "candidate_diff": {
        "calendar-bundle/tests/Picker/EventPickerProviderTest.php||calendar-bundle/tests/Picker/EventPickerProviderTest.php": [
          "File: calendar-bundle/tests/Picker/EventPickerProviderTest.php -> calendar-bundle/tests/Picker/EventPickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:         $security",
          "222:             ->expects(null === $accessGranted ? $this->never() : $this->once())",
          "223:             ->method('isGranted')",
          "225:         ;",
          "227:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "224:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "224:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "core-bundle/src/Controller/InitializeController.php||core-bundle/src/Controller/InitializeController.php": [
          "File: core-bundle/src/Controller/InitializeController.php -> core-bundle/src/Controller/InitializeController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         $this->get('event_dispatcher')->dispatch($event, KernelEvents::EXCEPTION);",
          "103:         if (!$response = $event->getResponse()) {",
          "104:             throw $e;",
          "",
          "[Removed Lines]",
          "101:         $e = $event->getException();",
          "",
          "[Added Lines]",
          "101:         $e = $event->getThrowable();",
          "",
          "---------------"
        ],
        "core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php||core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php": [
          "File: core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php -> core-bundle/src/Doctrine/Schema/DcaSchemaProvider.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: use Contao\\Database\\Installer;",
          "17: use Doctrine\\Bundle\\DoctrineBundle\\Registry;",
          "18: use Doctrine\\DBAL\\Connection;",
          "20: use Doctrine\\DBAL\\Platforms\\MySqlPlatform;",
          "21: use Doctrine\\DBAL\\Schema\\Schema;",
          "22: use Doctrine\\DBAL\\Schema\\SchemaConfig;",
          "",
          "[Removed Lines]",
          "19: use Doctrine\\DBAL\\Platforms\\AbstractPlatform;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319:                 $flags[] = 'fulltext';",
          "320:             }",
          "336:             $table->addIndex($columns, $matches[2], $flags, ['lengths' => $lengths]);",
          "337:         }",
          "338:     }",
          "",
          "[Removed Lines]",
          "323:             if (array_filter($lengths) && !method_exists(AbstractPlatform::class, 'supportsColumnLengthIndexes')) {",
          "324:                 $columns = array_combine(",
          "325:                     $columns,",
          "326:                     array_map(",
          "327:                         static function ($column, $length) {",
          "328:                             return $column.($length ? '('.$length.')' : '');",
          "329:                         },",
          "330:                         $columns,",
          "331:                         $lengths",
          "332:                     )",
          "333:                 );",
          "334:             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core-bundle/src/EventListener/ExceptionConverterListener.php||core-bundle/src/EventListener/ExceptionConverterListener.php": [
          "File: core-bundle/src/EventListener/ExceptionConverterListener.php -> core-bundle/src/EventListener/ExceptionConverterListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     public function onKernelException(ExceptionEvent $event): void",
          "57:     {",
          "59:         $class = $this->getTargetClass($exception);",
          "61:         if (null === $class) {",
          "",
          "[Removed Lines]",
          "58:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "58:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:         }",
          "65:         if (null !== ($httpException = $this->convertToHttpException($exception, $class))) {",
          "67:         }",
          "68:     }",
          "",
          "[Removed Lines]",
          "66:             $event->setException($httpException);",
          "",
          "[Added Lines]",
          "66:             $event->setThrowable($httpException);",
          "",
          "---------------"
        ],
        "core-bundle/src/EventListener/PrettyErrorScreenListener.php||core-bundle/src/EventListener/PrettyErrorScreenListener.php": [
          "File: core-bundle/src/EventListener/PrettyErrorScreenListener.php -> core-bundle/src/EventListener/PrettyErrorScreenListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     private function handleException(ExceptionEvent $event): void",
          "95:     {",
          "98:         try {",
          "99:             $isBackendUser = $this->security->isGranted('ROLE_USER');",
          "",
          "[Removed Lines]",
          "96:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "96:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     private function renderBackendException(ExceptionEvent $event): void",
          "131:     {",
          "134:         $this->logException($exception);",
          "135:         $this->renderTemplate('backend', $this->getStatusCodeForException($exception), $event);",
          "",
          "[Removed Lines]",
          "132:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "132:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "180:     private function renderErrorScreenByException(ExceptionEvent $event): void",
          "181:     {",
          "183:         $statusCode = $this->getStatusCodeForException($exception);",
          "184:         $template = null;",
          "",
          "[Removed Lines]",
          "182:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "182:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "227:             'base' => $event->getRequest()->getBasePath(),",
          "228:             'language' => $event->getRequest()->getLocale(),",
          "229:             'adminEmail' => '&#109;&#97;&#105;&#108;&#116;&#111;&#58;'.$encoded,",
          "231:         ];",
          "232:     }",
          "",
          "[Removed Lines]",
          "230:             'exception' => $event->getException()->getMessage(),",
          "",
          "[Added Lines]",
          "230:             'exception' => $event->getThrowable()->getMessage(),",
          "",
          "---------------"
        ],
        "core-bundle/src/EventListener/ResponseExceptionListener.php||core-bundle/src/EventListener/ResponseExceptionListener.php": [
          "File: core-bundle/src/EventListener/ResponseExceptionListener.php -> core-bundle/src/EventListener/ResponseExceptionListener.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     public function onKernelException(ExceptionEvent $event): void",
          "24:     {",
          "27:         if (!$exception instanceof ResponseException) {",
          "28:             return;",
          "",
          "[Removed Lines]",
          "25:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "25:         $exception = $event->getThrowable();",
          "",
          "---------------"
        ],
        "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php": [
          "File: core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php -> core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "133: use Symfony\\Component\\DependencyInjection\\ServiceLocator;",
          "134: use Symfony\\Component\\HttpFoundation\\RequestMatcher;",
          "135: use Symfony\\Component\\HttpKernel\\EventListener\\AbstractSessionListener;",
          "137: use Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener as BaseLocaleListener;",
          "138: use Symfony\\Component\\HttpKernel\\EventListener\\RouterListener;",
          "139: use Symfony\\Component\\Security\\Csrf\\CsrfTokenManager;",
          "",
          "[Removed Lines]",
          "136: use Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener;",
          "",
          "[Added Lines]",
          "136: use Symfony\\Component\\HttpKernel\\EventListener\\ErrorListener;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:         $this->assertSame('onKernelRequest', $events['kernel.request'][1][0]);",
          "193:         $this->assertSame(16, $events['kernel.request'][1][1]);",
          "197:         $this->assertSame('onKernelException', $events['kernel.exception'][1][0]);",
          "198:         $this->assertSame(-128, $events['kernel.exception'][1][1]);",
          "",
          "[Removed Lines]",
          "195:         $events = ExceptionListener::getSubscribedEvents();",
          "",
          "[Added Lines]",
          "195:         $events = ErrorListener::getSubscribedEvents();",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/ExceptionConverterListenerTest.php||core-bundle/tests/EventListener/ExceptionConverterListenerTest.php": [
          "File: core-bundle/tests/EventListener/ExceptionConverterListenerTest.php -> core-bundle/tests/EventListener/ExceptionConverterListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         $listener = new ExceptionConverterListener();",
          "46:         $listener->onKernelException($event);",
          "50:         $this->assertInstanceOf(AccessDeniedHttpException::class, $exception);",
          "51:         $this->assertInstanceOf(AccessDeniedException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "48:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "48:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         $listener = new ExceptionConverterListener();",
          "59:         $listener->onKernelException($event);",
          "63:         $this->assertInstanceOf(InternalServerErrorHttpException::class, $exception);",
          "64:         $this->assertInstanceOf(ForwardPageNotFoundException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "61:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "61:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:         $listener = new ExceptionConverterListener();",
          "72:         $listener->onKernelException($event);",
          "76:         $this->assertInstanceOf(InternalServerErrorHttpException::class, $exception);",
          "77:         $this->assertInstanceOf(InsecureInstallationException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "74:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "74:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:         $listener = new ExceptionConverterListener();",
          "85:         $listener->onKernelException($event);",
          "89:         $this->assertInstanceOf(UnauthorizedHttpException::class, $exception);",
          "90:         $this->assertInstanceOf(InsufficientAuthenticationException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "87:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "87:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "97:         $listener = new ExceptionConverterListener();",
          "98:         $listener->onKernelException($event);",
          "102:         $this->assertInstanceOf(BadRequestHttpException::class, $exception);",
          "103:         $this->assertInstanceOf(InvalidRequestTokenException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "100:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "100:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "110:         $listener = new ExceptionConverterListener();",
          "111:         $listener->onKernelException($event);",
          "115:         $this->assertInstanceOf(NotFoundHttpException::class, $exception);",
          "116:         $this->assertInstanceOf(NoActivePageFoundException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "113:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "113:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "123:         $listener = new ExceptionConverterListener();",
          "124:         $listener->onKernelException($event);",
          "128:         $this->assertInstanceOf(InternalServerErrorHttpException::class, $exception);",
          "129:         $this->assertInstanceOf(NoLayoutSpecifiedException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "126:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "126:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "136:         $listener = new ExceptionConverterListener();",
          "137:         $listener->onKernelException($event);",
          "141:         $this->assertInstanceOf(NotFoundHttpException::class, $exception);",
          "142:         $this->assertInstanceOf(NoRootPageFoundException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "139:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "139:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "149:         $listener = new ExceptionConverterListener();",
          "150:         $listener->onKernelException($event);",
          "154:         $this->assertInstanceOf(NotFoundHttpException::class, $exception);",
          "155:         $this->assertInstanceOf(PageNotFoundException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "152:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "152:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "162:         $listener = new ExceptionConverterListener();",
          "163:         $listener->onKernelException($event);",
          "167:         $this->assertInstanceOf(ServiceUnavailableHttpException::class, $exception);",
          "168:         $this->assertInstanceOf(ServiceUnavailableException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "165:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "165:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "175:         $listener = new ExceptionConverterListener();",
          "176:         $listener->onKernelException($event);",
          "180:         $this->assertInstanceOf('RuntimeException', $exception);",
          "181:     }",
          "",
          "[Removed Lines]",
          "178:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "178:         $exception = $event->getThrowable();",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "187:         $listener = new ExceptionConverterListener();",
          "188:         $listener->onKernelException($event);",
          "192:         $this->assertInstanceOf(NotFoundHttpException::class, $exception);",
          "193:         $this->assertInstanceOf(PageNotFoundException::class, $exception->getPrevious());",
          "",
          "[Removed Lines]",
          "190:         $exception = $event->getException();",
          "",
          "[Added Lines]",
          "190:         $exception = $event->getThrowable();",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php||core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php": [
          "File: core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php -> core-bundle/tests/EventListener/MergeHttpHeadersListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:         $this->assertTrue($response->headers->has('Set-Cookie'));",
          "89:         $this->assertSame('content=foobar; path=/', $allHeaders[0]);",
          "90:         $this->assertSame('new-content=foobar; path=/', $allHeaders[1]);",
          "",
          "[Removed Lines]",
          "87:         $allHeaders = $response->headers->get('Set-Cookie', null, false);",
          "",
          "[Added Lines]",
          "87:         $allHeaders = $response->headers->all('Set-Cookie');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:         $listener->onKernelResponse($responseEvent);",
          "195:         $response = $responseEvent->getResponse();",
          "198:         $this->assertTrue($response->headers->has('Set-Cookie'));",
          "199:         $this->assertCount(1, $allHeaders);",
          "",
          "[Removed Lines]",
          "196:         $allHeaders = $response->headers->get('Set-Cookie', null, false);",
          "",
          "[Added Lines]",
          "196:         $allHeaders = $response->headers->all('Set-Cookie');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207:         $response = $responseEvent->getResponse();",
          "211:         $this->assertTrue($response->headers->has('Set-Cookie'));",
          "212:         $this->assertCount(2, $allHeaders);",
          "",
          "[Removed Lines]",
          "209:         $allHeaders = $response->headers->get('Set-Cookie', null, false);",
          "",
          "[Added Lines]",
          "209:         $allHeaders = $response->headers->all('Set-Cookie');",
          "",
          "---------------"
        ],
        "core-bundle/tests/Functional/app/AppKernel.php||core-bundle/tests/Functional/app/AppKernel.php": [
          "File: core-bundle/tests/Functional/app/AppKernel.php -> core-bundle/tests/Functional/app/AppKernel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public function getProjectDir(): string",
          "53:     {",
          "55:     }",
          "",
          "[Removed Lines]",
          "54:         return \\dirname(__DIR__);",
          "",
          "[Added Lines]",
          "54:         return \\dirname(__DIR__, 3).'/var';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:     public function getCacheDir(): string",
          "68:     {",
          "70:     }",
          "72:     public function getLogDir(): string",
          "73:     {",
          "75:     }",
          "77:     public function registerContainerConfiguration(LoaderInterface $loader): void",
          "",
          "[Removed Lines]",
          "69:         return \\dirname(__DIR__).'/var/cache/'.$this->environment;",
          "74:         return \\dirname(__DIR__).'/var/logs';",
          "",
          "[Added Lines]",
          "69:         return $this->getProjectDir().'/cache/'.$this->environment;",
          "74:         return $this->getProjectDir().'/logs';",
          "",
          "---------------"
        ],
        "core-bundle/tests/Picker/ArticlePickerProviderTest.php||core-bundle/tests/Picker/ArticlePickerProviderTest.php": [
          "File: core-bundle/tests/Picker/ArticlePickerProviderTest.php -> core-bundle/tests/Picker/ArticlePickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:         $security",
          "163:             ->expects(null === $accessGranted ? $this->never() : $this->once())",
          "164:             ->method('isGranted')",
          "166:         ;",
          "168:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "165:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "165:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "core-bundle/tests/Picker/FilePickerProviderTest.php||core-bundle/tests/Picker/FilePickerProviderTest.php": [
          "File: core-bundle/tests/Picker/FilePickerProviderTest.php -> core-bundle/tests/Picker/FilePickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $security",
          "223:             ->expects(null === $accessGranted ? $this->never() : $this->atLeastOnce())",
          "224:             ->method('isGranted')",
          "226:         ;",
          "228:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "225:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "225:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "core-bundle/tests/Picker/PagePickerProviderTest.php||core-bundle/tests/Picker/PagePickerProviderTest.php": [
          "File: core-bundle/tests/Picker/PagePickerProviderTest.php -> core-bundle/tests/Picker/PagePickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:         $security",
          "185:             ->expects(null === $accessGranted ? $this->never() : $this->atLeastOnce())",
          "186:             ->method('isGranted')",
          "188:         ;",
          "190:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "187:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "187:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php||core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php": [
          "File: core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php -> core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     public function testSerializesItself(): void",
          "54:     {",
          "55:         $token = new FrontendPreviewToken(null, true);",
          "73:         $this->assertSame($expected, $serialized);",
          "",
          "[Removed Lines]",
          "56:         $serialized = $token->serialize();",
          "58:         switch (true) {",
          "59:             case false !== strpos($serialized, '\"a:4:{'):",
          "61:                 $expected = serialize([true, serialize(['anon.', true, [], []])]);",
          "62:                 break;",
          "64:             case false !== strpos($serialized, ';a:4:{'):",
          "66:                 $expected = serialize([true, ['anon.', true, [], []]]);",
          "67:                 break;",
          "69:             default:",
          "70:                 $expected = serialize([true, ['anon.', true, [], [], []]]);",
          "71:         }",
          "",
          "[Added Lines]",
          "56:         $serialized = $token->__serialize();",
          "57:         $expected = [true, ['anon.', true, [], [], []]];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:         $this->assertFalse($token->showUnpublished());",
          "81:         $this->assertTrue($token->showUnpublished());",
          "82:     }",
          "",
          "[Removed Lines]",
          "79:         $token->unserialize($expected);",
          "",
          "[Added Lines]",
          "65:         $token->__unserialize($expected);",
          "",
          "---------------"
        ],
        "core-bundle/tests/Security/Exception/LockedExceptionTest.php||core-bundle/tests/Security/Exception/LockedExceptionTest.php": [
          "File: core-bundle/tests/Security/Exception/LockedExceptionTest.php -> core-bundle/tests/Security/Exception/LockedExceptionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     public function testSerializesItself(): void",
          "29:     {",
          "30:         $exception = new LockedException(300, 'foobar');",
          "39:         $this->assertSame($expected, $serialized);",
          "",
          "[Removed Lines]",
          "31:         $serialized = $exception->serialize();",
          "33:         if (false !== strpos($serialized, '\"a:2:{')) {",
          "34:             $expected = serialize([300, serialize([null, serialize([null, 0, 'foobar', __FILE__, 30])])]);",
          "35:         } else {",
          "36:             $expected = serialize([300, [null, [null, 0, 'foobar', __FILE__, 30]]]);",
          "37:         }",
          "",
          "[Added Lines]",
          "31:         $serialized = $exception->__serialize();",
          "32:         $expected = [300, [null, [null, 0, 'foobar', __FILE__, 30]]];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:         $this->assertSame(0, $exception->getLockedSeconds());",
          "44:         $this->assertSame('', $exception->getMessage());",
          "48:         $this->assertSame(300, $exception->getLockedSeconds());",
          "49:         $this->assertSame('foobar', $exception->getMessage());",
          "",
          "[Removed Lines]",
          "46:         $exception->unserialize($serialized);",
          "",
          "[Added Lines]",
          "41:         $exception->__unserialize($serialized);",
          "",
          "---------------"
        ],
        "faq-bundle/tests/Picker/FaqPickerProviderTest.php||faq-bundle/tests/Picker/FaqPickerProviderTest.php": [
          "File: faq-bundle/tests/Picker/FaqPickerProviderTest.php -> faq-bundle/tests/Picker/FaqPickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:         $security",
          "222:             ->expects(null === $accessGranted ? $this->never() : $this->once())",
          "223:             ->method('isGranted')",
          "225:         ;",
          "227:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "224:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "224:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "manager-bundle/src/Api/Command/VersionCommand.php||manager-bundle/src/Api/Command/VersionCommand.php": [
          "File: manager-bundle/src/Api/Command/VersionCommand.php -> manager-bundle/src/Api/Command/VersionCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     {",
          "53:         $output->write(json_encode([",
          "54:             'version' => Application::VERSION,",
          "55:             'commands' => $this->getCommandNames(),",
          "56:             'features' => $this->getFeatures(),",
          "57:         ]));",
          "58:     }",
          "",
          "[Removed Lines]",
          "51:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "51:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "59:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/GenerateJwtCookieCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     {",
          "55:         $cookie = $this->jwtManager->createCookie(['debug' => $input->getOption('debug')]);",
          "57:         $output->write((string) $cookie);",
          "58:     }",
          "59: }",
          "",
          "[Removed Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "59:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/GetConfigCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     {",
          "53:         $output->write(json_encode($this->managerConfig->all()));",
          "54:     }",
          "55: }",
          "",
          "[Removed Lines]",
          "51:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "51:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "55:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/GetDotEnvCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     {",
          "55:         $path = $this->projectDir.'/.env';",
          "57:         if (!file_exists($path)) {",
          "59:         }",
          "61:         $vars = (new Dotenv(false))->parse(file_get_contents($path));",
          "",
          "[Removed Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "58:             return;",
          "",
          "[Added Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "58:             return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:         if (isset($vars[$key])) {",
          "69:             $output->write($vars[$key]);",
          "70:         }",
          "71:     }",
          "72: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php||manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/ParseJwtCookieCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     {",
          "55:         $payload = $this->jwtManager->parseCookie($input->getArgument('content'));",
          "57:         $output->write(json_encode($payload));",
          "58:     }",
          "59: }",
          "",
          "[Removed Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "59:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/RemoveDotEnvCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     {",
          "55:         $file = $this->projectDir.'/.env';",
          "57:         if (!file_exists($file)) {",
          "59:         }",
          "61:         $dotenv = new DotenvDumper($file);",
          "62:         $dotenv->unsetParameter($input->getArgument('key'));",
          "63:         $dotenv->dump();",
          "64:     }",
          "65: }",
          "",
          "[Removed Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "58:             return;",
          "",
          "[Added Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "58:             return 0;",
          "65:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php||manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/SetConfigCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     {",
          "55:         $data = @json_decode($input->getArgument('json'), true);",
          "",
          "[Removed Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "53:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:         }",
          "61:         $this->managerConfig->write($data);",
          "62:     }",
          "63: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php||manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php": [
          "File: manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php -> manager-bundle/src/ContaoManager/ApiCommand/SetDotEnvCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     {",
          "56:         $dotenv = new DotenvDumper($this->projectDir.'/.env');",
          "57:         $dotenv->setParameter($input->getArgument('key'), $input->getArgument('value'));",
          "58:         $dotenv->dump();",
          "59:     }",
          "60: }",
          "",
          "[Removed Lines]",
          "54:     protected function execute(InputInterface $input, OutputInterface $output): void",
          "",
          "[Added Lines]",
          "54:     protected function execute(InputInterface $input, OutputInterface $output): int",
          "60:         return 0;",
          "",
          "---------------"
        ],
        "manager-bundle/src/HttpKernel/ContaoKernel.php||manager-bundle/src/HttpKernel/ContaoKernel.php": [
          "File: manager-bundle/src/HttpKernel/ContaoKernel.php -> manager-bundle/src/HttpKernel/ContaoKernel.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: use Symfony\\Bridge\\ProxyManager\\LazyProxy\\Instantiator\\RuntimeInstantiator;",
          "29: use Symfony\\Component\\Config\\Loader\\LoaderInterface;",
          "30: use Symfony\\Component\\Console\\Input\\InputInterface;",
          "32: use Symfony\\Component\\Dotenv\\Dotenv;",
          "33: use Symfony\\Component\\HttpFoundation\\Request;",
          "34: use Symfony\\Component\\HttpKernel\\HttpKernelInterface;",
          "35: use Symfony\\Component\\HttpKernel\\Kernel;",
          "",
          "[Removed Lines]",
          "31: use Symfony\\Component\\Debug\\Debug;",
          "",
          "[Added Lines]",
          "32: use Symfony\\Component\\ErrorHandler\\Debug;",
          "",
          "---------------"
        ],
        "news-bundle/tests/Picker/NewsPickerProviderTest.php||news-bundle/tests/Picker/NewsPickerProviderTest.php": [
          "File: news-bundle/tests/Picker/NewsPickerProviderTest.php -> news-bundle/tests/Picker/NewsPickerProviderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:         $security",
          "222:             ->expects(null === $accessGranted ? $this->never() : $this->once())",
          "223:             ->method('isGranted')",
          "225:         ;",
          "227:         $menuFactory = $this->createMock(FactoryInterface::class);",
          "",
          "[Removed Lines]",
          "224:             ->willReturn($accessGranted)",
          "",
          "[Added Lines]",
          "224:             ->willReturn($accessGranted ?? false)",
          "",
          "---------------"
        ],
        "phpstan.neon.dist||phpstan.neon.dist": [
          "File: phpstan.neon.dist -> phpstan.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:         services_yml_path: %currentWorkingDirectory%/core-bundle/src/Resources/config/services.yml",
          "8:     symfony:",
          "11:     excludes_analyse:",
          "12:         - %currentWorkingDirectory%/core-bundle/src/Resources/*",
          "",
          "[Removed Lines]",
          "9:         container_xml_path: %currentWorkingDirectory%/core-bundle/tests/Functional/var/cache/phpstan/appContao_CoreBundle_Tests_Functional_app_AppKernelPhpstanDebugContainer.xml",
          "",
          "[Added Lines]",
          "9:         container_xml_path: %currentWorkingDirectory%/core-bundle/var/cache/phpstan/appContao_CoreBundle_Tests_Functional_app_AppKernelPhpstanDebugContainer.xml",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:         # Ignore backwards compatibility layers when preferring lowest dependencies",
          "25:         - '#Method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface::dispatch\\(\\) invoked with 2 parameters, 1 required\\.#'",
          "27:         # Ignore configuration tree errors",
          "28:         - '#Call to an undefined method Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\NodeDefinition::children\\(\\)\\.#'",
          "29:         - '#Call to an undefined method Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\NodeDefinition::addDefaultsIfNotSet\\(\\)\\.#'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:         # Ingore forward compatibility layers",
          "28:         - '#Method Symfony\\\\Component\\\\HttpFoundation\\\\ResponseHeaderBag::all\\(\\) invoked with 1 parameter, 0 required\\.#'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4bcb6dd3beffa76648737277ea3c54ef5300afe",
      "candidate_info": {
        "commit_hash": "c4bcb6dd3beffa76648737277ea3c54ef5300afe",
        "repo": "contao/contao",
        "commit_url": "https://github.com/contao/contao/commit/c4bcb6dd3beffa76648737277ea3c54ef5300afe",
        "files": [
          "calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php",
          "composer.json",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php",
          "manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php",
          "monorepo.yml",
          "news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php"
        ],
        "message": "Test the service arguments more accurately (see #1115)\n\nDescription\n-----------\n\nThis also allows us to distinct between `'@logger'` and `'@?logger'`.\n\nCommits\n-------\n\n2ed70b59 Test the service arguments more accurately",
        "before_after_code_files": [
          "calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php||calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php||faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php",
          "manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php||manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php",
          "news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php||news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ],
          "candidate": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ]
        }
      },
      "candidate_diff": {
        "calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php||calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php": [
          "File: calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php -> calendar-bundle/tests/DependencyInjection/ContaoCalendarExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Contao\\CoreBundle\\Framework\\FrameworkAwareInterface;",
          "22: use PHPUnit\\Framework\\TestCase;",
          "23: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "24: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "26: class ContaoCalendarExtensionTest extends TestCase",
          "27: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "26: use Symfony\\Component\\DependencyInjection\\Reference;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:         $this->assertSame(GeneratePageListener::class, $definition->getClass());",
          "53:         $this->assertTrue($definition->isPublic());",
          "60:     }",
          "62:     public function testRegistersTheInsertTagsListener(): void",
          "",
          "[Removed Lines]",
          "54:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "56:         $tags = $definition->getTags();",
          "58:         $this->assertArrayHasKey('contao.hook', $tags);",
          "59:         $this->assertSame('generatePage', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "57:         $this->assertEquals(",
          "58:             [",
          "59:                 new Reference('contao.framework'),",
          "60:             ],",
          "61:             $definition->getArguments()",
          "62:         );",
          "64:         $this->assertSame(",
          "65:             [",
          "66:                 'contao.hook' => [",
          "67:                     [",
          "68:                         'hook' => 'generatePage',",
          "69:                     ],",
          "70:                 ],",
          "71:             ],",
          "72:             $definition->getTags()",
          "73:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68:         $this->assertSame(InsertTagsListener::class, $definition->getClass());",
          "69:         $this->assertTrue($definition->isPublic());",
          "76:     }",
          "78:     public function testRegistersThePreviewUrlCreateListener(): void",
          "",
          "[Removed Lines]",
          "70:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "72:         $tags = $definition->getTags();",
          "74:         $this->assertArrayHasKey('contao.hook', $tags);",
          "75:         $this->assertSame('replaceInsertTags', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "85:         $this->assertEquals(",
          "86:             [",
          "87:                 new Reference('contao.framework'),",
          "88:             ],",
          "89:             $definition->getArguments()",
          "90:         );",
          "92:         $this->assertSame(",
          "93:             [",
          "94:                 'contao.hook' => [",
          "95:                     [",
          "96:                         'hook' => 'replaceInsertTags',",
          "97:                     ],",
          "98:                 ],",
          "99:             ],",
          "100:             $definition->getTags()",
          "101:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:         $this->assertSame(PreviewUrlCreateListener::class, $definition->getClass());",
          "85:         $this->assertTrue($definition->isPrivate());",
          "94:     }",
          "96:     public function testRegistersThePreviewUrlConvertListener(): void",
          "",
          "[Removed Lines]",
          "86:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "87:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "89:         $tags = $definition->getTags();",
          "91:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "92:         $this->assertSame('contao.preview_url_create', $tags['kernel.event_listener'][0]['event']);",
          "93:         $this->assertSame('onPreviewUrlCreate', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "113:         $this->assertEquals(",
          "114:             [",
          "115:                 new Reference('request_stack'),",
          "116:                 new Reference('contao.framework'),",
          "117:             ],",
          "118:             $definition->getArguments()",
          "119:         );",
          "121:         $this->assertSame(",
          "122:             [",
          "123:                 'kernel.event_listener' => [",
          "124:                     [",
          "125:                         'event' => 'contao.preview_url_create',",
          "126:                         'method' => 'onPreviewUrlCreate',",
          "127:                     ],",
          "128:                 ],",
          "129:             ],",
          "130:             $definition->getTags()",
          "131:         );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "102:         $this->assertSame(PreviewUrlConvertListener::class, $definition->getClass());",
          "103:         $this->assertTrue($definition->isPrivate());",
          "112:     }",
          "114:     public function testRegistersTheEventPickerProvider(): void",
          "",
          "[Removed Lines]",
          "104:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "105:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "107:         $tags = $definition->getTags();",
          "109:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "110:         $this->assertSame('contao.preview_url_convert', $tags['kernel.event_listener'][0]['event']);",
          "111:         $this->assertSame('onPreviewUrlConvert', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "143:         $this->assertEquals(",
          "144:             [",
          "145:                 new Reference('request_stack'),",
          "146:                 new Reference('contao.framework'),",
          "147:             ],",
          "148:             $definition->getArguments()",
          "149:         );",
          "151:         $this->assertSame(",
          "152:             [",
          "153:                 'kernel.event_listener' => [",
          "154:                     [",
          "155:                         'event' => 'contao.preview_url_convert',",
          "156:                         'method' => 'onPreviewUrlConvert',",
          "157:                     ],",
          "158:                 ],",
          "159:             ],",
          "160:             $definition->getTags()",
          "161:         );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:         $this->assertSame(EventPickerProvider::class, $definition->getClass());",
          "121:         $this->assertTrue($definition->isPrivate());",
          "127:         $conditionals = $definition->getInstanceofConditionals();",
          "",
          "[Removed Lines]",
          "122:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "123:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "124:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "125:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "173:         $this->assertEquals(",
          "174:             [",
          "175:                 new Reference('knp_menu.factory'),",
          "176:                 new Reference('router'),",
          "177:                 new Reference('translator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "178:                 new Reference('security.helper'),",
          "179:             ],",
          "180:             $definition->getArguments()",
          "181:         );",
          "183:         $this->assertSame(",
          "184:             [",
          "185:                 'contao.picker_provider' => [",
          "186:                     [",
          "187:                         'priority' => 96,",
          "188:                     ],",
          "189:                 ],",
          "190:             ],",
          "191:             $definition->getTags()",
          "192:         );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "131:         $childDefinition = $conditionals[FrameworkAwareInterface::class];",
          "139:     }",
          "140: }",
          "",
          "[Removed Lines]",
          "133:         $this->assertSame('setFramework', $childDefinition->getMethodCalls()[0][0]);",
          "135:         $tags = $definition->getTags();",
          "137:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "138:         $this->assertSame(96, $tags['contao.picker_provider'][0]['priority']);",
          "",
          "[Added Lines]",
          "200:         $this->assertEquals(",
          "201:             [",
          "202:                 [",
          "203:                     'setFramework',",
          "204:                     [new Reference('contao.framework')],",
          "205:                 ],",
          "206:             ],",
          "207:             $childDefinition->getMethodCalls()",
          "208:         );",
          "",
          "---------------"
        ],
        "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php": [
          "File: core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php -> core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "132: use Symfony\\Cmf\\Component\\Routing\\ProviderBasedGenerator;",
          "133: use Symfony\\Component\\Config\\FileLocator;",
          "134: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "135: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "136: use Symfony\\Component\\DependencyInjection\\ServiceLocator;",
          "137: use Symfony\\Component\\HttpFoundation\\RequestMatcher;",
          "138: use Symfony\\Component\\HttpKernel\\EventListener\\AbstractSessionListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "137: use Symfony\\Component\\DependencyInjection\\Reference;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251:         $this->assertSame(BackendLocaleListener::class, $definition->getClass());",
          "252:         $this->assertTrue($definition->isPrivate());",
          "256:         $this->assertSame(",
          "257:             [",
          "",
          "[Removed Lines]",
          "253:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "254:         $this->assertSame('translator', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "256:         $this->assertEquals(",
          "257:             [",
          "258:                 new Reference('security.helper'),",
          "259:                 new Reference('translator'),",
          "260:             ],",
          "261:             $definition->getArguments()",
          "262:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276:         $this->assertSame(BackendMenuListener::class, $definition->getClass());",
          "277:         $this->assertTrue($definition->isPrivate());",
          "281:         $this->assertSame(",
          "282:             [",
          "",
          "[Removed Lines]",
          "278:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "279:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "287:         $this->assertEquals(",
          "288:             [",
          "289:                 new Reference('security.helper'),",
          "290:                 new Reference('router'),",
          "291:             ],",
          "292:             $definition->getArguments()",
          "293:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "300:         $this->assertSame(BypassMaintenanceListener::class, $definition->getClass());",
          "301:         $this->assertTrue($definition->isPrivate());",
          "304:         $this->assertSame(",
          "305:             [",
          "",
          "[Removed Lines]",
          "302:         $this->assertSame('contao.security.token_checker', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "317:         $this->assertEquals(",
          "318:             [",
          "319:                 new Reference('contao.security.token_checker'),",
          "320:             ],",
          "321:             $definition->getArguments()",
          "322:         );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "347:         $this->assertSame(CommandSchedulerListener::class, $definition->getClass());",
          "348:         $this->assertTrue($definition->isPrivate());",
          "353:         $this->assertSame(",
          "354:             [",
          "",
          "[Removed Lines]",
          "349:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "350:         $this->assertSame('database_connection', (string) $definition->getArgument(1));",
          "351:         $this->assertSame('%fragment.path%', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "370:         $this->assertEquals(",
          "371:             [",
          "372:                 new Reference('contao.framework'),",
          "373:                 new Reference('database_connection'),",
          "374:                 new Reference('%fragment.path%'),",
          "375:             ],",
          "376:             $definition->getArguments()",
          "377:         );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "372:         $this->assertSame(CsrfTokenCookieListener::class, $definition->getClass());",
          "373:         $this->assertTrue($definition->isPrivate());",
          "376:         $this->assertSame(",
          "377:             [",
          "",
          "[Removed Lines]",
          "374:         $this->assertSame('contao.csrf.token_storage', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "401:         $this->assertEquals(",
          "402:             [",
          "403:                 new Reference('contao.csrf.token_storage'),",
          "404:                 new Reference('%contao.csrf_cookie_prefix%'),",
          "405:             ],",
          "406:             $definition->getArguments()",
          "407:         );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "421:         $this->assertSame(DoctrineSchemaListener::class, $definition->getClass());",
          "422:         $this->assertTrue($definition->isPrivate());",
          "425:         $this->assertSame(",
          "426:             [",
          "",
          "[Removed Lines]",
          "423:         $this->assertSame('contao.doctrine.schema_provider', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "457:         $this->assertEquals(",
          "458:             [",
          "459:                 new Reference('contao.doctrine.schema_provider'),",
          "460:             ],",
          "461:             $definition->getArguments()",
          "462:         );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "491:         $this->assertSame(AssetListener::class, $definition->getClass());",
          "492:         $this->assertTrue($definition->isPrivate());",
          "495:         $this->assertSame(",
          "496:             [",
          "",
          "[Removed Lines]",
          "493:         $this->assertSame('assets.packages', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "533:         $this->assertEquals(",
          "534:             [",
          "535:                 new Reference('assets.packages'),",
          "536:             ],",
          "537:             $definition->getArguments()",
          "538:         );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "513:         $this->assertSame(TranslationListener::class, $definition->getClass());",
          "514:         $this->assertTrue($definition->isPrivate());",
          "517:         $this->assertSame(",
          "518:             [",
          "",
          "[Removed Lines]",
          "515:         $this->assertSame('translator', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "561:         $this->assertEquals(",
          "562:             [",
          "563:                 new Reference('translator'),",
          "564:             ],",
          "565:             $definition->getArguments()",
          "566:         );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "535:         $this->assertSame(LocaleListener::class, $definition->getClass());",
          "536:         $this->assertTrue($definition->isPrivate());",
          "541:         $this->assertSame(",
          "542:             [",
          "",
          "[Removed Lines]",
          "537:         $this->assertSame('translator', (string) $definition->getArgument(0));",
          "538:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "539:         $this->assertSame('%contao.locales%', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "589:         $this->assertEquals(",
          "590:             [",
          "591:                 new Reference('translator'),",
          "592:                 new Reference('contao.routing.scope_matcher'),",
          "593:                 new Reference('%contao.locales%'),",
          "594:             ],",
          "595:             $definition->getArguments()",
          "596:         );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "599:         $this->assertSame(MergeHttpHeadersListener::class, $definition->getClass());",
          "600:         $this->assertTrue($definition->isPrivate());",
          "603:         $this->assertSame(",
          "604:             [",
          "",
          "[Removed Lines]",
          "601:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "659:         $this->assertEquals(",
          "660:             [",
          "661:                 new Reference('contao.framework'),",
          "662:             ],",
          "663:             $definition->getArguments()",
          "664:         );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "628:         $this->assertSame(PrettyErrorScreenListener::class, $definition->getClass());",
          "629:         $this->assertTrue($definition->isPrivate());",
          "635:         $this->assertSame(",
          "636:             [",
          "",
          "[Removed Lines]",
          "630:         $this->assertSame('%contao.pretty_error_screens%', (string) $definition->getArgument(0));",
          "631:         $this->assertSame('twig', (string) $definition->getArgument(1));",
          "632:         $this->assertSame('contao.framework', (string) $definition->getArgument(2));",
          "633:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "694:         $this->assertEquals(",
          "695:             [",
          "696:                 new Reference('%contao.pretty_error_screens%'),",
          "697:                 new Reference('twig'),",
          "698:                 new Reference('contao.framework'),",
          "699:                 new Reference('security.helper'),",
          "700:             ],",
          "701:             $definition->getArguments()",
          "702:         );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "655:         $this->assertSame(RefererIdListener::class, $definition->getClass());",
          "656:         $this->assertTrue($definition->isPrivate());",
          "660:         $this->assertSame(",
          "661:             [",
          "",
          "[Removed Lines]",
          "657:         $this->assertSame('contao.token_generator', (string) $definition->getArgument(0));",
          "658:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "727:         $this->assertEquals(",
          "728:             [",
          "729:                 new Reference('contao.token_generator'),",
          "730:                 new Reference('contao.routing.scope_matcher'),",
          "731:             ],",
          "732:             $definition->getArguments()",
          "733:         );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "680:         $this->assertSame(RequestTokenListener::class, $definition->getClass());",
          "681:         $this->assertTrue($definition->isPrivate());",
          "688:         $this->assertSame(",
          "689:             [",
          "",
          "[Removed Lines]",
          "682:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "683:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "684:         $this->assertSame('contao.csrf.token_manager', (string) $definition->getArgument(2));",
          "685:         $this->assertSame('%contao.csrf_token_name%', (string) $definition->getArgument(3));",
          "686:         $this->assertSame('%contao.csrf_cookie_prefix%', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "758:         $this->assertEquals(",
          "759:             [",
          "760:                 new Reference('contao.framework'),",
          "761:                 new Reference('contao.routing.scope_matcher'),",
          "762:                 new Reference('contao.csrf.token_manager'),",
          "763:                 new Reference('%contao.csrf_token_name%'),",
          "764:                 new Reference('%contao.csrf_cookie_prefix%'),",
          "765:             ],",
          "766:             $definition->getArguments()",
          "767:         );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "731:         $this->assertSame(RobotsTxtListener::class, $definition->getClass());",
          "732:         $this->assertTrue($definition->isPrivate());",
          "735:         $this->assertSame(",
          "736:             [",
          "",
          "[Removed Lines]",
          "733:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "815:         $this->assertEquals(",
          "816:             [",
          "817:                 new Reference('contao.framework'),",
          "818:             ],",
          "819:             $definition->getArguments()",
          "820:         );",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "754:         $this->assertSame(SearchIndexListener::class, $definition->getClass());",
          "755:         $this->assertTrue($definition->isPrivate());",
          "759:         $this->assertSame(",
          "760:             [",
          "",
          "[Removed Lines]",
          "756:         $this->assertSame('contao.search.indexer', (string) $definition->getArgument(0));",
          "757:         $this->assertSame('%fragment.path%', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "844:         $this->assertEquals(",
          "845:             [",
          "846:                 new Reference('contao.search.indexer'),",
          "847:                 new Reference('%fragment.path%'),",
          "848:                 SearchIndexListener::FEATURE_INDEX | SearchIndexListener::FEATURE_DELETE,",
          "849:             ],",
          "850:             $definition->getArguments()",
          "851:         );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "778:         $this->assertSame(StoreRefererListener::class, $definition->getClass());",
          "779:         $this->assertTrue($definition->isPrivate());",
          "783:         $this->assertSame(",
          "784:             [",
          "",
          "[Removed Lines]",
          "780:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "781:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "875:         $this->assertEquals(",
          "876:             [",
          "877:                 new Reference('security.helper'),",
          "878:                 new Reference('contao.routing.scope_matcher'),",
          "879:             ],",
          "880:             $definition->getArguments()",
          "881:         );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "802:         $this->assertSame(SwitchUserListener::class, $definition->getClass());",
          "803:         $this->assertTrue($definition->isPrivate());",
          "807:         $this->assertSame(",
          "808:             [",
          "",
          "[Removed Lines]",
          "804:         $this->assertSame('security.token_storage', (string) $definition->getArgument(0));",
          "805:         $this->assertSame('logger', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "905:         $this->assertEquals(",
          "906:             [",
          "907:                 new Reference('security.token_storage'),",
          "908:                 new Reference('logger'),",
          "909:             ],",
          "910:             $definition->getArguments()",
          "911:         );",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "826:         $this->assertSame(TwoFactorFrontendListener::class, $definition->getClass());",
          "827:         $this->assertTrue($definition->isPrivate());",
          "833:         $this->assertSame(",
          "834:             [",
          "",
          "[Removed Lines]",
          "828:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "829:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "830:         $this->assertSame('security.token_storage', (string) $definition->getArgument(2));",
          "831:         $this->assertSame('%scheb_two_factor.security_tokens%', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "935:         $this->assertEquals(",
          "936:             [",
          "937:                 new Reference('contao.framework'),",
          "938:                 new Reference('contao.routing.scope_matcher'),",
          "939:                 new Reference('security.token_storage'),",
          "940:                 new Reference('%scheb_two_factor.security_tokens%'),",
          "941:             ],",
          "942:             $definition->getArguments()",
          "943:         );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "852:         $this->assertSame(EventUserSessionListener::class, $definition->getClass());",
          "853:         $this->assertTrue($definition->isPrivate());",
          "859:         $this->assertSame(",
          "860:             [",
          "",
          "[Removed Lines]",
          "854:         $this->assertSame('database_connection', (string) $definition->getArgument(0));",
          "855:         $this->assertSame('security.helper', (string) $definition->getArgument(1));",
          "856:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(2));",
          "857:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "967:         $this->assertEquals(",
          "968:             [",
          "969:                 new Reference('database_connection'),",
          "970:                 new Reference('security.helper'),",
          "971:                 new Reference('contao.routing.scope_matcher'),",
          "972:                 new Reference('event_dispatcher'),",
          "973:             ],",
          "974:             $definition->getArguments()",
          "975:         );",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "878:         $this->assertSame(ContaoContext::class, $definition->getClass());",
          "879:         $this->assertTrue($definition->isPublic());",
          "883:     }",
          "885:     public function testRegistersTheAssetFilesContext(): void",
          "",
          "[Removed Lines]",
          "880:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "881:         $this->assertSame('staticPlugins', $definition->getArgument(1));",
          "882:         $this->assertSame('%kernel.debug%', $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "999:         $this->assertEquals(",
          "1000:             [",
          "1001:                 new Reference('request_stack'),",
          "1002:                 new Reference('staticPlugins'),",
          "1003:                 new Reference('%kernel.debug%'),",
          "1004:             ],",
          "1005:             $definition->getArguments()",
          "1006:         );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "891:         $this->assertSame(ContaoContext::class, $definition->getClass());",
          "892:         $this->assertTrue($definition->isPublic());",
          "896:     }",
          "898:     public function testRegistersTheContaoCacheClearer(): void",
          "",
          "[Removed Lines]",
          "893:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "894:         $this->assertSame('staticFiles', $definition->getArgument(1));",
          "895:         $this->assertSame('%kernel.debug%', $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "1018:         $this->assertEquals(",
          "1019:             [",
          "1020:                 new Reference('request_stack'),",
          "1021:                 new Reference('staticFiles'),",
          "1022:                 new Reference('%kernel.debug%'),",
          "1023:             ],",
          "1024:             $definition->getArguments()",
          "1025:         );",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "904:         $this->assertSame(ContaoCacheClearer::class, $definition->getClass());",
          "905:         $this->assertTrue($definition->isPublic());",
          "907:     }",
          "909:     public function testRegistersTheContaoCacheWarmer(): void",
          "",
          "[Removed Lines]",
          "906:         $this->assertSame('filesystem', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1037:         $this->assertEquals(",
          "1038:             [",
          "1039:                 new Reference('filesystem'),",
          "1040:             ],",
          "1041:             $definition->getArguments()",
          "1042:         );",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "915:         $this->assertSame(ContaoCacheWarmer::class, $definition->getClass());",
          "916:         $this->assertTrue($definition->isPublic());",
          "923:     }",
          "925:     public function testRegistersTheBackendController(): void",
          "",
          "[Removed Lines]",
          "917:         $this->assertSame('filesystem', (string) $definition->getArgument(0));",
          "918:         $this->assertSame('contao.resource_finder', (string) $definition->getArgument(1));",
          "919:         $this->assertSame('contao.resource_locator', (string) $definition->getArgument(2));",
          "920:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(3));",
          "921:         $this->assertSame('database_connection', (string) $definition->getArgument(4));",
          "922:         $this->assertSame('contao.framework', (string) $definition->getArgument(5));",
          "",
          "[Added Lines]",
          "1054:         $this->assertEquals(",
          "1055:             [",
          "1056:                 new Reference('filesystem'),",
          "1057:                 new Reference('contao.resource_finder'),",
          "1058:                 new Reference('contao.resource_locator'),",
          "1059:                 new Reference('%kernel.project_dir%'),",
          "1060:                 new Reference('database_connection'),",
          "1061:                 new Reference('contao.framework'),",
          "1062:             ],",
          "1063:             $definition->getArguments()",
          "1064:         );",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "938:         $definition = $this->container->getDefinition(BackendCsvImportController::class);",
          "940:         $this->assertTrue($definition->isPublic());",
          "946:     }",
          "948:     public function testRegistersTheFaviconController(): void",
          "",
          "[Removed Lines]",
          "941:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "942:         $this->assertSame('database_connection', (string) $definition->getArgument(1));",
          "943:         $this->assertSame('request_stack', (string) $definition->getArgument(2));",
          "944:         $this->assertSame('translator', (string) $definition->getArgument(3));",
          "945:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "1084:         $this->assertEquals(",
          "1085:             [",
          "1086:                 new Reference('contao.framework'),",
          "1087:                 new Reference('database_connection'),",
          "1088:                 new Reference('request_stack'),",
          "1089:                 new Reference('translator'),",
          "1090:                 new Reference('%kernel.project_dir%'),",
          "1091:             ],",
          "1092:             $definition->getArguments()",
          "1093:         );",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "952:         $definition = $this->container->getDefinition(FaviconController::class);",
          "954:         $this->assertTrue($definition->isPrivate());",
          "958:         $this->assertSame(",
          "959:             [",
          "",
          "[Removed Lines]",
          "955:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "956:         $this->assertSame('fos_http_cache.http.symfony_response_tagger', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1104:         $this->assertEquals(",
          "1105:             [",
          "1106:                 new Reference('contao.framework'),",
          "1107:                 new Reference('fos_http_cache.http.symfony_response_tagger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1108:             ],",
          "1109:             $definition->getArguments()",
          "1110:         );",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1001:         $definition = $this->container->getDefinition(ImagesController::class);",
          "1003:         $this->assertTrue($definition->isPublic());",
          "1008:     }",
          "1010:     public function tesRegistersTheInsertTagsController(): void",
          "",
          "[Removed Lines]",
          "1004:         $this->assertSame('contao.image.image_factory', (string) $definition->getArgument(0));",
          "1005:         $this->assertSame('contao.image.resizer', (string) $definition->getArgument(1));",
          "1006:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(2));",
          "1007:         $this->assertSame('filesystem', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "1159:         $this->assertEquals(",
          "1160:             [",
          "1161:                 new Reference('contao.image.image_factory'),",
          "1162:                 new Reference('contao.image.resizer'),",
          "1163:                 new Reference('%contao.image.target_dir%'),",
          "1164:                 new Reference('filesystem'),",
          "1165:             ],",
          "1166:             $definition->getArguments()",
          "1167:         );",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1014:         $definition = $this->container->getDefinition(InsertTagsController::class);",
          "1016:         $this->assertTrue($definition->isPublic());",
          "1018:     }",
          "1020:     public function testRegistersTheRobotsTxtController(): void",
          "",
          "[Removed Lines]",
          "1017:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1178:         $this->assertEquals(",
          "1179:             [",
          "1180:                 new Reference('contao.framework'),",
          "1181:             ],",
          "1182:             $definition->getArguments()",
          "1183:         );",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1024:         $definition = $this->container->getDefinition(RobotsTxtController::class);",
          "1026:         $this->assertTrue($definition->isPrivate());",
          "1030:         $this->assertSame(",
          "1031:             [",
          "",
          "[Removed Lines]",
          "1027:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1028:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1194:         $this->assertEquals(",
          "1195:             [",
          "1196:                 new Reference('contao.framework'),",
          "1197:                 new Reference('event_dispatcher'),",
          "1198:             ],",
          "1199:             $definition->getArguments()",
          "1200:         );",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1046:         $this->assertSame(ControllerResolver::class, $definition->getClass());",
          "1047:         $this->assertTrue($definition->isPrivate());",
          "1050:     }",
          "1052:     public function testRegistersTheCorsWebsiteRootsConfigProvider(): void",
          "",
          "[Removed Lines]",
          "1048:         $this->assertSame('contao.controller_resolver.inner', (string) $definition->getArgument(0));",
          "1049:         $this->assertSame('contao.fragment.registry', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1221:         $this->assertEquals(",
          "1222:             [",
          "1223:                 new Reference('contao.controller_resolver.inner'),",
          "1224:                 new Reference('contao.fragment.registry'),",
          "1225:             ],",
          "1226:             $definition->getArguments()",
          "1227:         );",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1058:         $this->assertSame(WebsiteRootsConfigProvider::class, $definition->getClass());",
          "1059:         $this->assertTrue($definition->isPrivate());",
          "1062:         $this->assertSame(",
          "1063:             [",
          "",
          "[Removed Lines]",
          "1060:         $this->assertSame('database_connection', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1239:         $this->assertEquals(",
          "1240:             [",
          "1241:                 new Reference('database_connection'),",
          "1242:             ],",
          "1243:             $definition->getArguments()",
          "1244:         );",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1078:         $this->assertSame(CsrfTokenManager::class, $definition->getClass());",
          "1079:         $this->assertTrue($definition->isPublic());",
          "1082:     }",
          "1084:     public function testRegistersTheCsrfTokenStorage(): void",
          "",
          "[Removed Lines]",
          "1080:         $this->assertSame('security.csrf.token_generator', (string) $definition->getArgument(0));",
          "1081:         $this->assertSame('contao.csrf.token_storage', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1265:         $this->assertEquals(",
          "1266:             [",
          "1267:                 new Reference('security.csrf.token_generator'),",
          "1268:                 new Reference('contao.csrf.token_storage'),",
          "1269:             ],",
          "1270:             $definition->getArguments()",
          "1271:         );",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1133:         $this->assertSame(DcaSchemaProvider::class, $definition->getClass());",
          "1134:         $this->assertTrue($definition->isPrivate());",
          "1137:     }",
          "1139:     public function testRegistersTheFragmentHandler(): void",
          "",
          "[Removed Lines]",
          "1135:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1136:         $this->assertSame('doctrine', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1326:         $this->assertEquals(",
          "1327:             [",
          "1328:                 new Reference('contao.framework'),",
          "1329:                 new Reference('doctrine'),",
          "1330:             ],",
          "1331:             $definition->getArguments()",
          "1332:         );",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1145:         $this->assertSame(FragmentHandler::class, $definition->getClass());",
          "1146:         $this->assertTrue($definition->isPrivate());",
          "1147:         $this->assertSame('fragment.handler', $definition->getDecoratedService()[0]);",
          "1154:     }",
          "1156:     public function testRegistersTheFragmentPreHandlers(): void",
          "",
          "[Removed Lines]",
          "1148:         $this->assertNull($definition->getArgument(0));",
          "1149:         $this->assertSame('contao.fragment.handler.inner', (string) $definition->getArgument(1));",
          "1150:         $this->assertSame('request_stack', (string) $definition->getArgument(2));",
          "1151:         $this->assertSame('contao.fragment.registry', (string) $definition->getArgument(3));",
          "1152:         $this->assertSame('contao.fragment.pre_handlers', (string) $definition->getArgument(4));",
          "1153:         $this->assertSame('%kernel.debug%', $definition->getArgument(5));",
          "",
          "[Added Lines]",
          "1345:         $this->assertEquals(",
          "1346:             [",
          "1347:                 null,",
          "1348:                 new Reference('contao.fragment.handler.inner'),",
          "1349:                 new Reference('request_stack'),",
          "1350:                 new Reference('contao.fragment.registry'),",
          "1351:                 new Reference('contao.fragment.pre_handlers'),",
          "1352:                 new Reference('%kernel.debug%'),",
          "1353:             ],",
          "1354:             $definition->getArguments()",
          "1355:         );",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1162:         $this->assertSame(ServiceLocator::class, $definition->getClass());",
          "1163:         $this->assertTrue($definition->isPrivate());",
          "1165:     }",
          "1167:     public function testRegistersTheFragmentRegistry(): void",
          "",
          "[Removed Lines]",
          "1164:         $this->assertSame([], $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1367:         $this->assertEquals(",
          "1368:             [",
          "1369:                 [],",
          "1370:             ],",
          "1371:             $definition->getArguments()",
          "1372:         );",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1183:         $this->assertSame(ForwardFragmentRenderer::class, $definition->getClass());",
          "1184:         $this->assertTrue($definition->isPrivate());",
          "1193:         $this->assertSame(",
          "1194:             [",
          "",
          "[Removed Lines]",
          "1185:         $this->assertSame('http_kernel', (string) $definition->getArgument(0));",
          "1186:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(1));",
          "1188:         $calls = $definition->getMethodCalls();",
          "1190:         $this->assertSame('setFragmentPath', $calls[0][0]);",
          "1191:         $this->assertSame('%fragment.path%', (string) $calls[0][1][0]);",
          "",
          "[Added Lines]",
          "1394:         $this->assertEquals(",
          "1395:             [",
          "1396:                 new Reference('http_kernel'),",
          "1397:                 new Reference('event_dispatcher'),",
          "1398:             ],",
          "1399:             $definition->getArguments()",
          "1400:         );",
          "1402:         $this->assertEquals(",
          "1403:             [",
          "1404:                 [",
          "1405:                     'setFragmentPath',",
          "1406:                     ['%fragment.path%'],",
          "1407:                 ],",
          "1408:             ],",
          "1409:             $definition->getMethodCalls()",
          "1410:         );",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1211:         $this->assertSame(ContaoFramework::class, $definition->getClass());",
          "1212:         $this->assertTrue($definition->isPublic());",
          "1219:         $this->assertSame(",
          "1220:             [",
          "",
          "[Removed Lines]",
          "1213:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "1214:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "1215:         $this->assertSame('contao.security.token_checker', (string) $definition->getArgument(2));",
          "1216:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(3));",
          "1217:         $this->assertSame('%contao.error_level%', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "1433:         $this->assertEquals(",
          "1434:             [",
          "1435:                 new Reference('request_stack'),",
          "1436:                 new Reference('contao.routing.scope_matcher'),",
          "1437:                 new Reference('contao.security.token_checker'),",
          "1438:                 new Reference('%kernel.project_dir%'),",
          "1439:                 new Reference('%contao.error_level%'),",
          "1440:             ],",
          "1441:             $definition->getArguments()",
          "1442:         );",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1235:         $definition = $this->container->findDefinition('contao.image.deferred_image_storage');",
          "1237:         $this->assertTrue($definition->isPrivate());",
          "1241:         if (method_exists($definition->getClass(), 'reset')) {",
          "1242:             $this->assertSame(",
          "",
          "[Removed Lines]",
          "1238:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(0));",
          "1239:         $this->assertSame('filesystem', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1464:         $this->assertEquals(",
          "1465:             [",
          "1466:                 new Reference('%contao.image.target_dir%'),",
          "1467:                 new Reference('filesystem', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1468:             ],",
          "1469:             $definition->getArguments()",
          "1470:         );",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1292:         $this->assertSame(LegacyResizer::class, $definition->getClass());",
          "1293:         $this->assertTrue($definition->isPublic());",
          "1298:     }",
          "1300:     public function testRegistersTheImageFactory(): void",
          "",
          "[Removed Lines]",
          "1294:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(0));",
          "1295:         $this->assertSame('contao.image.resize_calculator', (string) $definition->getArgument(1));",
          "1296:         $this->assertSame('filesystem', (string) $definition->getArgument(2));",
          "1297:         $this->assertSame('contao.image.deferred_image_storage', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "1526:         $this->assertEquals(",
          "1527:             [",
          "1528:                 new Reference('%contao.image.target_dir%'),",
          "1529:                 new Reference('contao.image.resize_calculator'),",
          "1530:                 new Reference('filesystem'),",
          "1531:                 new Reference('contao.image.deferred_image_storage'),",
          "1532:             ],",
          "1533:             $definition->getArguments()",
          "1534:         );",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1306:         $this->assertSame(ImageFactory::class, $definition->getClass());",
          "1307:         $this->assertTrue($definition->isPublic());",
          "1318:     }",
          "1320:     public function testRegistersTheImageSizesService(): void",
          "",
          "[Removed Lines]",
          "1308:         $this->assertSame('contao.image.resizer', (string) $definition->getArgument(0));",
          "1309:         $this->assertSame('contao.image.imagine', (string) $definition->getArgument(1));",
          "1310:         $this->assertSame('contao.image.imagine_svg', (string) $definition->getArgument(2));",
          "1311:         $this->assertSame('filesystem', (string) $definition->getArgument(3));",
          "1312:         $this->assertSame('contao.framework', (string) $definition->getArgument(4));",
          "1313:         $this->assertSame('%contao.image.bypass_cache%', (string) $definition->getArgument(5));",
          "1314:         $this->assertSame('%contao.image.imagine_options%', (string) $definition->getArgument(6));",
          "1315:         $this->assertSame('%contao.image.valid_extensions%', (string) $definition->getArgument(7));",
          "1316:         $this->assertSame('%kernel.project_dir%/%contao.upload_path%', (string) $definition->getArgument(8));",
          "1317:         $this->assertSame('logger', (string) $definition->getArgument(9));",
          "",
          "[Added Lines]",
          "1546:         $this->assertEquals(",
          "1547:             [",
          "1548:                 new Reference('contao.image.resizer'),",
          "1549:                 new Reference('contao.image.imagine'),",
          "1550:                 new Reference('contao.image.imagine_svg'),",
          "1551:                 new Reference('filesystem'),",
          "1552:                 new Reference('contao.framework'),",
          "1553:                 new Reference('%contao.image.bypass_cache%'),",
          "1554:                 new Reference('%contao.image.imagine_options%'),",
          "1555:                 new Reference('%contao.image.valid_extensions%'),",
          "1556:                 new Reference('%kernel.project_dir%/%contao.upload_path%'),",
          "1557:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1558:             ],",
          "1559:             $definition->getArguments()",
          "1560:         );",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1326:         $this->assertSame(ImageSizes::class, $definition->getClass());",
          "1327:         $this->assertTrue($definition->isPublic());",
          "1333:         $this->assertSame(",
          "1334:             [",
          "",
          "[Removed Lines]",
          "1328:         $this->assertSame('database_connection', (string) $definition->getArgument(0));",
          "1329:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(1));",
          "1330:         $this->assertSame('contao.framework', (string) $definition->getArgument(2));",
          "1331:         $this->assertSame('contao.translation.translator', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "1572:         $this->assertEquals(",
          "1573:             [",
          "1574:                 new Reference('database_connection'),",
          "1575:                 new Reference('event_dispatcher'),",
          "1576:                 new Reference('contao.framework'),",
          "1577:                 new Reference('contao.translation.translator'),",
          "1578:             ],",
          "1579:             $definition->getArguments()",
          "1580:         );",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1351:         $this->assertSame(PictureFactory::class, $definition->getClass());",
          "1352:         $this->assertTrue($definition->isPublic());",
          "1358:     }",
          "1360:     public function testRegistersTheImagePictureGenerator(): void",
          "",
          "[Removed Lines]",
          "1353:         $this->assertSame('contao.image.picture_generator', (string) $definition->getArgument(0));",
          "1354:         $this->assertSame('contao.image.image_factory', (string) $definition->getArgument(1));",
          "1355:         $this->assertSame('contao.framework', (string) $definition->getArgument(2));",
          "1356:         $this->assertSame('%contao.image.bypass_cache%', (string) $definition->getArgument(3));",
          "1357:         $this->assertSame('%contao.image.imagine_options%', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "1603:         $this->assertEquals(",
          "1604:             [",
          "1605:                 new Reference('contao.image.picture_generator'),",
          "1606:                 new Reference('contao.image.image_factory'),",
          "1607:                 new Reference('contao.framework'),",
          "1608:                 new Reference('%contao.image.bypass_cache%'),",
          "1609:                 new Reference('%contao.image.imagine_options%'),",
          "1610:             ],",
          "1611:             $definition->getArguments()",
          "1612:         );",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1366:         $this->assertSame(PictureGenerator::class, $definition->getClass());",
          "1367:         $this->assertTrue($definition->isPublic());",
          "1370:     }",
          "1372:     public function testRegistersTheBackendMenuBuilder(): void",
          "",
          "[Removed Lines]",
          "1368:         $this->assertSame('contao.image.resizer', (string) $definition->getArgument(0));",
          "1369:         $this->assertSame('contao.image.resize_calculator', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1624:         $this->assertEquals(",
          "1625:             [",
          "1626:                 new Reference('contao.image.resizer'),",
          "1627:                 new Reference('contao.image.resize_calculator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1628:             ],",
          "1629:             $definition->getArguments()",
          "1630:         );",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1378:         $this->assertSame(BackendMenuBuilder::class, $definition->getClass());",
          "1379:         $this->assertTrue($definition->isPublic());",
          "1382:     }",
          "1384:     public function testRegistersTheMenuMatcher(): void",
          "",
          "[Removed Lines]",
          "1380:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "1381:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1642:         $this->assertEquals(",
          "1643:             [",
          "1644:                 new Reference('knp_menu.factory'),",
          "1645:                 new Reference('event_dispatcher'),",
          "1646:             ],",
          "1647:             $definition->getArguments()",
          "1648:         );",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1400:         $this->assertSame(ListRenderer::class, $definition->getClass());",
          "1401:         $this->assertTrue($definition->isPublic());",
          "1403:     }",
          "1405:     public function testRegistersTheModelArgumentResolver(): void",
          "",
          "[Removed Lines]",
          "1402:         $this->assertSame('contao.menu.matcher', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1670:         $this->assertEquals(",
          "1671:             [",
          "1672:                 new Reference('contao.menu.matcher'),",
          "1673:             ],",
          "1674:             $definition->getArguments()",
          "1675:         );",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1411:         $this->assertSame(ModelArgumentResolver::class, $definition->getClass());",
          "1412:         $this->assertTrue($definition->isPrivate());",
          "1416:         $this->assertSame(",
          "1417:             [",
          "",
          "[Removed Lines]",
          "1413:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1414:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1687:         $this->assertEquals(",
          "1688:             [",
          "1689:                 new Reference('contao.framework'),",
          "1690:                 new Reference('contao.routing.scope_matcher'),",
          "1691:             ],",
          "1692:             $definition->getArguments()",
          "1693:         );",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1434:         $this->assertSame(ContaoTableHandler::class, $definition->getClass());",
          "1435:         $this->assertTrue($definition->isPrivate());",
          "1439:         $this->assertSame(",
          "1440:             [",
          "",
          "[Removed Lines]",
          "1436:         $this->assertSame('debug', (string) $definition->getArgument(0));",
          "1437:         $this->assertFalse($definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1716:         $this->assertEquals(",
          "1717:             [",
          "1718:                 new Reference('debug'),",
          "1719:                 false,",
          "1720:             ],",
          "1721:             $definition->getArguments()",
          "1722:         );",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1457:         $this->assertSame(ContaoTableProcessor::class, $definition->getClass());",
          "1458:         $this->assertTrue($definition->isPrivate());",
          "1462:     }",
          "1464:     public function testRegistersTheOptInService(): void",
          "",
          "[Removed Lines]",
          "1459:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "1460:         $this->assertSame('security.token_storage', (string) $definition->getArgument(1));",
          "1461:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "1745:         $this->assertEquals(",
          "1746:             [",
          "1747:                 new Reference('request_stack'),",
          "1748:                 new Reference('security.token_storage'),",
          "1749:                 new Reference('contao.routing.scope_matcher'),",
          "1750:             ],",
          "1751:             $definition->getArguments()",
          "1752:         );",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1470:         $this->assertSame(OptIn::class, $definition->getClass());",
          "1471:         $this->assertTrue($definition->isPublic());",
          "1473:     }",
          "1475:     public function testRegistersTheArticlePickerProvider(): void",
          "",
          "[Removed Lines]",
          "1472:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1764:         $this->assertEquals(",
          "1765:             [",
          "1766:                 new Reference('contao.framework'),",
          "1767:             ],",
          "1768:             $definition->getArguments()",
          "1769:         );",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1481:         $this->assertSame(ArticlePickerProvider::class, $definition->getClass());",
          "1482:         $this->assertTrue($definition->isPrivate());",
          "1487:     }",
          "1489:     public function testRegistersThePickerBuilder(): void",
          "",
          "[Removed Lines]",
          "1483:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "1484:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "1485:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "1486:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "1781:         $this->assertEquals(",
          "1782:             [",
          "1783:                 new Reference('knp_menu.factory'),",
          "1784:                 new Reference('router'),",
          "1785:                 new Reference('translator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1786:                 new Reference('security.helper'),",
          "1787:             ],",
          "1788:             $definition->getArguments()",
          "1789:         );",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1495:         $this->assertSame(PickerBuilder::class, $definition->getClass());",
          "1496:         $this->assertTrue($definition->isPublic());",
          "1499:     }",
          "1501:     public function testRegistersTheFilePickerProvider(): void",
          "",
          "[Removed Lines]",
          "1497:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "1498:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1801:         $this->assertEquals(",
          "1802:             [",
          "1803:                 new Reference('knp_menu.factory'),",
          "1804:                 new Reference('router'),",
          "1805:             ],",
          "1806:             $definition->getArguments()",
          "1807:         );",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1507:         $this->assertSame(FilePickerProvider::class, $definition->getClass());",
          "1508:         $this->assertTrue($definition->isPrivate());",
          "1515:         $this->assertSame(",
          "1516:             [",
          "",
          "[Removed Lines]",
          "1509:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "1510:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "1511:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "1512:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "1513:         $this->assertSame('%contao.upload_path%', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "1819:         $this->assertEquals(",
          "1820:             [",
          "1821:                 new Reference('knp_menu.factory'),",
          "1822:                 new Reference('router'),",
          "1823:                 new Reference('translator'),",
          "1824:                 new Reference('security.helper'),",
          "1825:                 new Reference('%contao.upload_path%'),",
          "1826:             ],",
          "1827:             $definition->getArguments()",
          "1828:         );",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1533:         $this->assertSame(PagePickerProvider::class, $definition->getClass());",
          "1534:         $this->assertTrue($definition->isPrivate());",
          "1540:         $this->assertSame(",
          "1541:             [",
          "",
          "[Removed Lines]",
          "1535:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "1536:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "1537:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "1538:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "1851:         $this->assertEquals(",
          "1852:             [",
          "1853:                 new Reference('knp_menu.factory'),",
          "1854:                 new Reference('router'),",
          "1855:                 new Reference('translator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "1856:                 new Reference('security.helper'),",
          "1857:             ],",
          "1858:             $definition->getArguments()",
          "1859:         );",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1558:         $this->assertSame(TablePickerProvider::class, $definition->getClass());",
          "1559:         $this->assertTrue($definition->isPrivate());",
          "1569:     }",
          "1571:     public function testRegistersTheRememberMeRepository(): void",
          "",
          "[Removed Lines]",
          "1560:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1561:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(1));",
          "1562:         $this->assertSame('router', (string) $definition->getArgument(2));",
          "1563:         $this->assertSame('translator', (string) $definition->getArgument(3));",
          "1564:         $this->assertSame('database_connection', (string) $definition->getArgument(4));",
          "1566:         $tags = $definition->getTags();",
          "1568:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "",
          "[Added Lines]",
          "1882:         $this->assertEquals(",
          "1883:             [",
          "1884:                 new Reference('contao.framework'),",
          "1885:                 new Reference('knp_menu.factory'),",
          "1886:                 new Reference('router'),",
          "1887:                 new Reference('translator'),",
          "1888:                 new Reference('database_connection'),",
          "1889:             ],",
          "1890:             $definition->getArguments()",
          "1891:         );",
          "1893:         $this->assertSame(",
          "1894:             [",
          "1895:                 'contao.picker_provider' => [",
          "1896:                     [],",
          "1897:                 ],",
          "1898:             ],",
          "1899:             $definition->getTags()",
          "1900:         );",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "1577:         $this->assertSame(RememberMeRepository::class, $definition->getClass());",
          "1578:         $this->assertTrue($definition->isPrivate());",
          "1581:     }",
          "1583:     public function testRegistersTheResourceFinder(): void",
          "",
          "[Removed Lines]",
          "1579:         $this->assertSame('doctrine', (string) $definition->getArgument(0));",
          "1580:         $this->assertSame(RememberMe::class, (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "1912:         $this->assertEquals(",
          "1913:             [",
          "1914:                 new Reference('doctrine'),",
          "1915:                 new Reference(RememberMe::class),",
          "1916:             ],",
          "1917:             $definition->getArguments()",
          "1918:         );",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "1589:         $this->assertSame(ResourceFinder::class, $definition->getClass());",
          "1590:         $this->assertTrue($definition->isPublic());",
          "1592:     }",
          "1594:     public function testRegistersTheResourceLocator(): void",
          "",
          "[Removed Lines]",
          "1591:         $this->assertSame('%contao.resources_paths%', $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1930:         $this->assertEquals(",
          "1931:             [",
          "1932:                 new Reference('%contao.resources_paths%'),",
          "1933:             ],",
          "1934:             $definition->getArguments()",
          "1935:         );",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "1600:         $this->assertSame(FileLocator::class, $definition->getClass());",
          "1601:         $this->assertTrue($definition->isPublic());",
          "1603:     }",
          "1605:     public function testRegistersTheRoutingBackendMatcher(): void",
          "",
          "[Removed Lines]",
          "1602:         $this->assertSame('%contao.resources_paths%', $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "1947:         $this->assertEquals(",
          "1948:             [",
          "1949:                 new Reference('%contao.resources_paths%'),",
          "1950:             ],",
          "1951:             $definition->getArguments()",
          "1952:         );",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "1611:         $this->assertSame(RequestMatcher::class, $definition->getClass());",
          "1612:         $this->assertTrue($definition->isPrivate());",
          "1618:     }",
          "1620:     public function testRegistersTheRoutingDomainFilter(): void",
          "",
          "[Removed Lines]",
          "1614:         $methodCalls = $definition->getMethodCalls();",
          "1616:         $this->assertSame('matchAttribute', $methodCalls[0][0]);",
          "1617:         $this->assertSame(['_scope', 'backend'], $methodCalls[0][1]);",
          "",
          "[Added Lines]",
          "1964:         $this->assertEquals(",
          "1965:             [",
          "1966:                 [",
          "1967:                     'matchAttribute',",
          "1968:                     ['_scope', 'backend'],",
          "1969:                 ],",
          "1970:             ],",
          "1971:             $definition->getMethodCalls()",
          "1972:         );",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "1646:         $this->assertSame(FrontendLoader::class, $definition->getClass());",
          "1647:         $this->assertTrue($definition->isPrivate());",
          "1651:         $this->assertSame(",
          "1652:             [",
          "",
          "[Removed Lines]",
          "1648:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(0));",
          "1649:         $this->assertSame('%contao.url_suffix%', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2004:         $this->assertEquals(",
          "2005:             [",
          "2006:                 new Reference('%contao.prepend_locale%'),",
          "2007:                 new Reference('%contao.url_suffix%'),",
          "2008:             ],",
          "2009:             $definition->getArguments()",
          "2010:         );",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "1667:         $this->assertSame(RequestMatcher::class, $definition->getClass());",
          "1668:         $this->assertTrue($definition->isPrivate());",
          "1674:     }",
          "1676:     public function testRegistersTheRoutingImagesLoader(): void",
          "",
          "[Removed Lines]",
          "1670:         $methodCalls = $definition->getMethodCalls();",
          "1672:         $this->assertSame('matchAttribute', $methodCalls[0][0]);",
          "1673:         $this->assertSame(['_scope', 'frontend'], $methodCalls[0][1]);",
          "",
          "[Added Lines]",
          "2031:         $this->assertEquals(",
          "2032:             [",
          "2033:                 [",
          "2034:                     'matchAttribute',",
          "2035:                     ['_scope', 'frontend'],",
          "2036:                 ],",
          "2037:             ],",
          "2038:             $definition->getMethodCalls()",
          "2039:         );",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "1682:         $this->assertSame(ImagesLoader::class, $definition->getClass());",
          "1683:         $this->assertTrue($definition->isPrivate());",
          "1688:         $this->assertSame(",
          "1689:             [",
          "",
          "[Removed Lines]",
          "1684:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(0));",
          "1685:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(1));",
          "1686:         $this->assertSame('filesystem', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "2051:         $this->assertEquals(",
          "2052:             [",
          "2053:                 new Reference('%kernel.project_dir%'),",
          "2054:                 new Reference('%contao.image.target_dir%'),",
          "2055:                 new Reference('filesystem'),",
          "2056:             ],",
          "2057:             $definition->getArguments()",
          "2058:         );",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "1704:         $this->assertSame(InputEnhancer::class, $definition->getClass());",
          "1705:         $this->assertTrue($definition->isPrivate());",
          "1708:     }",
          "1710:     public function testRegistersTheRoutingLanguageFilter(): void",
          "",
          "[Removed Lines]",
          "1706:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1707:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2079:         $this->assertEquals(",
          "2080:             [",
          "2081:                 new Reference('contao.framework'),",
          "2082:                 new Reference('%contao.prepend_locale%'),",
          "2083:             ],",
          "2084:             $definition->getArguments()",
          "2085:         );",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "1716:         $this->assertSame(LanguageFilter::class, $definition->getClass());",
          "1717:         $this->assertTrue($definition->isPrivate());",
          "1719:     }",
          "1721:     public function testRegistersTheRoutingLegacyMatcher(): void",
          "",
          "[Removed Lines]",
          "1718:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2097:         $this->assertEquals(",
          "2098:             [",
          "2099:                 new Reference('%contao.prepend_locale%'),",
          "2100:             ],",
          "2101:             $definition->getArguments()",
          "2102:         );",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "1727:         $this->assertSame(LegacyMatcher::class, $definition->getClass());",
          "1728:         $this->assertTrue($definition->isPrivate());",
          "1729:         $this->assertSame('contao.routing.nested_matcher', $definition->getDecoratedService()[0]);",
          "1734:     }",
          "1736:     public function testRegistersTheRoutingLegacyRouteProvider(): void",
          "",
          "[Removed Lines]",
          "1730:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1731:         $this->assertSame('contao.routing.legacy_matcher.inner', (string) $definition->getArgument(1));",
          "1732:         $this->assertSame('%contao.url_suffix%', (string) $definition->getArgument(2));",
          "1733:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2115:         $this->assertEquals(",
          "2116:             [",
          "2117:                 new Reference('contao.framework'),",
          "2118:                 new Reference('contao.routing.legacy_matcher.inner'),",
          "2119:                 new Reference('%contao.url_suffix%'),",
          "2120:                 new Reference('%contao.prepend_locale%'),",
          "2121:             ],",
          "2122:             $definition->getArguments()",
          "2123:         );",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "1742:         $this->assertSame(LegacyRouteProvider::class, $definition->getClass());",
          "1743:         $this->assertTrue($definition->isPrivate());",
          "1746:     }",
          "1748:     public function testRegistersTheRoutingNestedMatcher(): void",
          "",
          "[Removed Lines]",
          "1744:         $this->assertSame('contao.routing.frontend_loader', (string) $definition->getArgument(0));",
          "1745:         $this->assertSame('contao.routing.legacy_route_provider.inner', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2135:         $this->assertEquals(",
          "2136:             [",
          "2137:                 new Reference('contao.routing.frontend_loader'),",
          "2138:                 new Reference('contao.routing.legacy_route_provider.inner'),",
          "2139:             ],",
          "2140:             $definition->getArguments()",
          "2141:         );",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "1754:         $this->assertSame(NestedMatcher::class, $definition->getClass());",
          "1755:         $this->assertTrue($definition->isPublic());",
          "1767:     }",
          "1769:     public function testRegistersTheRoutingPageRouter(): void",
          "",
          "[Removed Lines]",
          "1756:         $this->assertSame('contao.routing.route_provider', (string) $definition->getArgument(0));",
          "1757:         $this->assertSame('contao.routing.final_matcher', (string) $definition->getArgument(1));",
          "1759:         $methodCalls = $definition->getMethodCalls();",
          "1761:         $this->assertSame('addRouteFilter', $methodCalls[0][0]);",
          "1762:         $this->assertSame('contao.routing.domain_filter', (string) $methodCalls[0][1][0]);",
          "1763:         $this->assertSame('addRouteFilter', $methodCalls[1][0]);",
          "1764:         $this->assertSame('contao.routing.published_filter', (string) $methodCalls[1][1][0]);",
          "1765:         $this->assertSame('addRouteFilter', $methodCalls[2][0]);",
          "1766:         $this->assertSame('contao.routing.language_filter', (string) $methodCalls[2][1][0]);",
          "",
          "[Added Lines]",
          "2153:         $this->assertEquals(",
          "2154:             [",
          "2155:                 new Reference('contao.routing.route_provider'),",
          "2156:                 new Reference('contao.routing.final_matcher'),",
          "2157:             ],",
          "2158:             $definition->getArguments()",
          "2159:         );",
          "2161:         $this->assertEquals(",
          "2162:             [",
          "2163:                 [",
          "2164:                     'addRouteFilter',",
          "2165:                     ['contao.routing.domain_filter'],",
          "2166:                 ],",
          "2167:                 [",
          "2168:                     'addRouteFilter',",
          "2169:                     ['contao.routing.published_filter'],",
          "2170:                 ],",
          "2171:                 [",
          "2172:                     'addRouteFilter',",
          "2173:                     ['contao.routing.language_filter'],",
          "2174:                 ],",
          "2175:             ],",
          "2176:             $definition->getMethodCalls()",
          "2177:         );",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "1775:         $this->assertSame(DynamicRouter::class, $definition->getClass());",
          "1776:         $this->assertTrue($definition->isPrivate());",
          "1789:         $this->assertSame(",
          "1790:             [",
          "",
          "[Removed Lines]",
          "1777:         $this->assertSame('router.request_context', (string) $definition->getArgument(0));",
          "1778:         $this->assertSame('contao.routing.nested_matcher', (string) $definition->getArgument(1));",
          "1779:         $this->assertSame('contao.routing.route_generator', (string) $definition->getArgument(2));",
          "1780:         $this->assertSame('', (string) $definition->getArgument(3));",
          "1781:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(4));",
          "1782:         $this->assertSame('contao.routing.route_provider', (string) $definition->getArgument(5));",
          "1784:         $methodCalls = $definition->getMethodCalls();",
          "1786:         $this->assertSame('addRouteEnhancer', $methodCalls[0][0]);",
          "1787:         $this->assertSame('contao.routing.input_enhancer', (string) $methodCalls[0][1][0]);",
          "",
          "[Added Lines]",
          "2189:         $this->assertEquals(",
          "2190:             [",
          "2191:                 new Reference('router.request_context'),",
          "2192:                 new Reference('contao.routing.nested_matcher'),",
          "2193:                 new Reference('contao.routing.route_generator'),",
          "2194:                 '',",
          "2195:                 new Reference('event_dispatcher'),",
          "2196:                 new Reference('contao.routing.route_provider'),",
          "2197:             ],",
          "2198:             $definition->getArguments()",
          "2199:         );",
          "2201:         $this->assertEquals(",
          "2202:             [",
          "2203:                 [",
          "2204:                     'addRouteEnhancer',",
          "2205:                     ['contao.routing.input_enhancer'],",
          "2206:                 ],",
          "2207:             ],",
          "2208:             $definition->getMethodCalls()",
          "2209:         );",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "1807:         $this->assertSame(PublishedFilter::class, $definition->getClass());",
          "1808:         $this->assertTrue($definition->isPrivate());",
          "1810:     }",
          "1812:     public function testRegistersTheRoutingRouteGenerator(): void",
          "",
          "[Removed Lines]",
          "1809:         $this->assertSame('contao.security.token_checker', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2232:         $this->assertEquals(",
          "2233:             [",
          "2234:                 new Reference('contao.security.token_checker'),",
          "2235:             ],",
          "2236:             $definition->getArguments()",
          "2237:         );",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "1818:         $this->assertSame(ProviderBasedGenerator::class, $definition->getClass());",
          "1819:         $this->assertTrue($definition->isPrivate());",
          "1822:     }",
          "1824:     public function testRegistersTheRoutingRouteProvider(): void",
          "",
          "[Removed Lines]",
          "1820:         $this->assertSame('contao.routing.route_provider', (string) $definition->getArgument(0));",
          "1821:         $this->assertSame('logger', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2249:         $this->assertEquals(",
          "2250:             [",
          "2251:                 new Reference('contao.routing.route_provider'),",
          "2252:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2253:             ],",
          "2254:             $definition->getArguments()",
          "2255:         );",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "1830:         $this->assertSame(RouteProvider::class, $definition->getClass());",
          "1831:         $this->assertTrue($definition->isPrivate());",
          "1836:     }",
          "1838:     public function testRegistersTheRoutingScopeMatcher(): void",
          "",
          "[Removed Lines]",
          "1832:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1833:         $this->assertSame('database_connection', (string) $definition->getArgument(1));",
          "1834:         $this->assertSame('%contao.url_suffix%', (string) $definition->getArgument(2));",
          "1835:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2267:         $this->assertEquals(",
          "2268:             [",
          "2269:                 new Reference('contao.framework'),",
          "2270:                 new Reference('database_connection'),",
          "2271:                 new Reference('%contao.url_suffix%'),",
          "2272:                 new Reference('%contao.prepend_locale%'),",
          "2273:             ],",
          "2274:             $definition->getArguments()",
          "2275:         );",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "1844:         $this->assertSame(ScopeMatcher::class, $definition->getClass());",
          "1845:         $this->assertTrue($definition->isPublic());",
          "1848:     }",
          "1850:     public function testRegistersTheRoutingUrlGenerator(): void",
          "",
          "[Removed Lines]",
          "1846:         $this->assertSame('contao.routing.backend_matcher', (string) $definition->getArgument(0));",
          "1847:         $this->assertSame('contao.routing.frontend_matcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2287:         $this->assertEquals(",
          "2288:             [",
          "2289:                 new Reference('contao.routing.backend_matcher'),",
          "2290:                 new Reference('contao.routing.frontend_matcher'),",
          "2291:             ],",
          "2292:             $definition->getArguments()",
          "2293:         );",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "1856:         $this->assertSame(UrlGenerator::class, $definition->getClass());",
          "1857:         $this->assertTrue($definition->isPublic());",
          "1861:     }",
          "1863:     public function testRegistersTheSearchEscargotFactory(): void",
          "",
          "[Removed Lines]",
          "1858:         $this->assertSame('router', (string) $definition->getArgument(0));",
          "1859:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "1860:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "2305:         $this->assertEquals(",
          "2306:             [",
          "2307:                 new Reference('router'),",
          "2308:                 new Reference('contao.framework'),",
          "2309:                 new Reference('%contao.prepend_locale%'),",
          "2310:             ],",
          "2311:             $definition->getArguments()",
          "2312:         );",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "1869:         $this->assertSame(Factory::class, $definition->getClass());",
          "1870:         $this->assertTrue($definition->isPublic());",
          "1873:     }",
          "1875:     public function testRegistersTheSearchEscargotSubscriber(): void",
          "",
          "[Removed Lines]",
          "1871:         $this->assertSame('database_connection', (string) $definition->getArgument(0));",
          "1872:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2324:         $this->assertEquals(",
          "2325:             [",
          "2326:                 new Reference('database_connection'),",
          "2327:                 new Reference('contao.framework'),",
          "2328:                 [],",
          "2329:                 [],",
          "2330:             ],",
          "2331:             $definition->getArguments()",
          "2332:         );",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "1881:         $this->assertSame(SearchIndexSubscriber::class, $definition->getClass());",
          "1882:         $this->assertTrue($definition->isPrivate());",
          "1885:         $this->assertSame(",
          "1886:             [",
          "",
          "[Removed Lines]",
          "1883:         $this->assertSame('contao.search.indexer', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2344:         $this->assertEquals(",
          "2345:             [",
          "2346:                 new Reference('contao.search.indexer'),",
          "2347:             ],",
          "2348:             $definition->getArguments()",
          "2349:         );",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "1901:         $this->assertSame(AuthenticationFailureHandler::class, $definition->getClass());",
          "1902:         $this->assertTrue($definition->isPrivate());",
          "1907:     }",
          "1909:     public function testRegistersTheSecurityAuthenticationProvider(): void",
          "",
          "[Removed Lines]",
          "1903:         $this->assertSame('http_kernel', (string) $definition->getArgument(0));",
          "1904:         $this->assertSame('security.http_utils', (string) $definition->getArgument(1));",
          "1905:         $this->assertSame([], $definition->getArgument(2));",
          "1906:         $this->assertSame('logger', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2370:         $this->assertEquals(",
          "2371:             [",
          "2372:                 new Reference('http_kernel'),",
          "2373:                 new Reference('security.http_utils'),",
          "2374:                 [],",
          "2375:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2376:             ],",
          "2377:             $definition->getArguments()",
          "2378:         );",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "1915:         $this->assertSame(AuthenticationProvider::class, $definition->getClass());",
          "1916:         $this->assertTrue($definition->isPrivate());",
          "1922:     }",
          "1924:     public function testRegistersTheSecurityAuthenticationSuccessHandler(): void",
          "",
          "[Removed Lines]",
          "1917:         $this->assertNull($definition->getArgument(0));",
          "1918:         $this->assertNull($definition->getArgument(1));",
          "1919:         $this->assertNull($definition->getArgument(2));",
          "1920:         $this->assertSame('security.encoder_factory', (string) $definition->getArgument(3));",
          "1921:         $this->assertSame('contao.framework', (string) $definition->getArgument(4));",
          "",
          "[Added Lines]",
          "2390:         $this->assertEquals(",
          "2391:             [",
          "2392:                 null,",
          "2393:                 null,",
          "2394:                 null,",
          "2395:                 new Reference('security.encoder_factory'),",
          "2396:                 new Reference('contao.framework'),",
          "2397:             ],",
          "2398:             $definition->getArguments()",
          "2399:         );",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "1930:         $this->assertSame(AuthenticationSuccessHandler::class, $definition->getClass());",
          "1931:         $this->assertTrue($definition->isPrivate());",
          "1935:     }",
          "1937:     public function testRegistersTheSecurityBackendAccessVoter(): void",
          "",
          "[Removed Lines]",
          "1932:         $this->assertSame('security.http_utils', (string) $definition->getArgument(0));",
          "1933:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "1934:         $this->assertSame('logger', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "2411:         $this->assertEquals(",
          "2412:             [",
          "2413:                 new Reference('security.http_utils'),",
          "2414:                 new Reference('contao.framework'),",
          "2415:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2416:             ],",
          "2417:             $definition->getArguments()",
          "2418:         );",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "1953:         $this->assertSame(ContaoUserProvider::class, $definition->getClass());",
          "1954:         $this->assertTrue($definition->isPrivate());",
          "1959:     }",
          "1961:     public function testRegistersTheSecurityEntryPoint(): void",
          "",
          "[Removed Lines]",
          "1955:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1956:         $this->assertSame('session', (string) $definition->getArgument(1));",
          "1957:         $this->assertSame(BackendUser::class, (string) $definition->getArgument(2));",
          "1958:         $this->assertSame('logger', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2440:         $this->assertEquals(",
          "2441:             [",
          "2442:                 new Reference('contao.framework'),",
          "2443:                 new Reference('session'),",
          "2444:                 BackendUser::class,",
          "2445:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2446:             ],",
          "2447:             $definition->getArguments()",
          "2448:         );",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "1967:         $this->assertSame(AuthenticationEntryPoint::class, $definition->getClass());",
          "1968:         $this->assertTrue($definition->isPrivate());",
          "1971:     }",
          "1973:     public function testRegistersTheSecurityExpiringTokenBasedRemembermeServices(): void",
          "",
          "[Removed Lines]",
          "1969:         $this->assertSame('security.http_utils', (string) $definition->getArgument(0));",
          "1970:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2460:         $this->assertEquals(",
          "2461:             [",
          "2462:                 new Reference('security.http_utils'),",
          "2463:                 new Reference('router'),",
          "2464:             ],",
          "2465:             $definition->getArguments()",
          "2466:         );",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "1979:         $this->assertSame(ExpiringTokenBasedRememberMeServices::class, $definition->getClass());",
          "1980:         $this->assertTrue($definition->isPrivate());",
          "1988:         $this->assertSame(",
          "1989:             [",
          "",
          "[Removed Lines]",
          "1981:         $this->assertSame('contao.repository.remember_me', (string) $definition->getArgument(0));",
          "1982:         $this->assertNull($definition->getArgument(1));",
          "1983:         $this->assertNull($definition->getArgument(2));",
          "1984:         $this->assertNull($definition->getArgument(3));",
          "1985:         $this->assertNull($definition->getArgument(4));",
          "1986:         $this->assertSame('logger', (string) $definition->getArgument(5));",
          "",
          "[Added Lines]",
          "2478:         $this->assertEquals(",
          "2479:             [",
          "2480:                 new Reference('contao.repository.remember_me'),",
          "2481:                 null,",
          "2482:                 null,",
          "2483:                 null,",
          "2484:                 null,",
          "2485:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2486:             ],",
          "2487:             $definition->getArguments()",
          "2488:         );",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "2006:         $this->assertSame(FrontendPreviewAuthenticator::class, $definition->getClass());",
          "2007:         $this->assertFalse($definition->isPrivate());",
          "2012:     }",
          "2014:     public function testRegistersTheSecurityFrontendUserProvider(): void",
          "",
          "[Removed Lines]",
          "2008:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "2009:         $this->assertSame('session', (string) $definition->getArgument(1));",
          "2010:         $this->assertSame('contao.security.frontend_user_provider', (string) $definition->getArgument(2));",
          "2011:         $this->assertSame('logger', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2511:         $this->assertEquals(",
          "2512:             [",
          "2513:                 new Reference('security.helper'),",
          "2514:                 new Reference('session'),",
          "2515:                 new Reference('contao.security.frontend_user_provider'),",
          "2516:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2517:             ],",
          "2518:             $definition->getArguments()",
          "2519:         );",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "2020:         $this->assertSame(ContaoUserProvider::class, $definition->getClass());",
          "2021:         $this->assertTrue($definition->isPrivate());",
          "2026:     }",
          "2028:     public function testRegistersTheSecurityLogoutHandler(): void",
          "",
          "[Removed Lines]",
          "2022:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "2023:         $this->assertSame('session', (string) $definition->getArgument(1));",
          "2024:         $this->assertSame(FrontendUser::class, (string) $definition->getArgument(2));",
          "2025:         $this->assertSame('logger', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "2531:         $this->assertEquals(",
          "2532:             [",
          "2533:                 new Reference('contao.framework'),",
          "2534:                 new Reference('session'),",
          "2535:                 FrontendUser::class,",
          "2536:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2537:             ],",
          "2538:             $definition->getArguments()",
          "2539:         );",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "2034:         $this->assertSame(LogoutHandler::class, $definition->getClass());",
          "2035:         $this->assertTrue($definition->isPrivate());",
          "2038:     }",
          "2040:     public function testRegistersTheSecurityLogoutSuccessHandler(): void",
          "",
          "[Removed Lines]",
          "2036:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "2037:         $this->assertSame('logger', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2551:         $this->assertEquals(",
          "2552:             [",
          "2553:                 new Reference('contao.framework'),",
          "2554:                 new Reference('logger', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "2555:             ],",
          "2556:             $definition->getArguments()",
          "2557:         );",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "2046:         $this->assertSame(LogoutSuccessHandler::class, $definition->getClass());",
          "2047:         $this->assertTrue($definition->isPrivate());",
          "2050:     }",
          "2052:     public function testRegistersTheSecurityTokenChecker(): void",
          "",
          "[Removed Lines]",
          "2048:         $this->assertSame('security.http_utils', (string) $definition->getArgument(0));",
          "2049:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2569:         $this->assertEquals(",
          "2570:             [",
          "2571:                 new Reference('security.http_utils'),",
          "2572:                 new Reference('contao.routing.scope_matcher'),",
          "2573:             ],",
          "2574:             $definition->getArguments()",
          "2575:         );",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "2058:         $this->assertSame(TokenChecker::class, $definition->getClass());",
          "2059:         $this->assertTrue($definition->isPublic());",
          "2066:     }",
          "2068:     public function testRegistersTheSecurityTwoFactorAuthenticator(): void",
          "",
          "[Removed Lines]",
          "2060:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "2061:         $this->assertSame('security.firewall.map', (string) $definition->getArgument(1));",
          "2062:         $this->assertSame('security.token_storage', (string) $definition->getArgument(2));",
          "2063:         $this->assertSame('session', (string) $definition->getArgument(3));",
          "2064:         $this->assertSame('security.authentication.trust_resolver', (string) $definition->getArgument(4));",
          "2065:         $this->assertSame('%contao.preview_script%', (string) $definition->getArgument(5));",
          "",
          "[Added Lines]",
          "2587:         $this->assertEquals(",
          "2588:             [",
          "2589:                 new Reference('request_stack'),",
          "2590:                 new Reference('security.firewall.map'),",
          "2591:                 new Reference('security.token_storage'),",
          "2592:                 new Reference('session'),",
          "2593:                 new Reference('security.authentication.trust_resolver'),",
          "2594:                 new Reference('%contao.preview_script%'),",
          "2595:             ],",
          "2596:             $definition->getArguments()",
          "2597:         );",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "2084:         $this->assertSame(Provider::class, $definition->getClass());",
          "2085:         $this->assertTrue($definition->isPrivate());",
          "2088:         $this->assertSame(",
          "2089:             [",
          "",
          "[Removed Lines]",
          "2086:         $this->assertSame('contao.security.two_factor.authenticator', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2619:         $this->assertEquals(",
          "2620:             [",
          "2621:                 new Reference('contao.security.two_factor.authenticator'),",
          "2622:             ],",
          "2623:             $definition->getArguments()",
          "2624:         );",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "2106:         $this->assertSame(UserChecker::class, $definition->getClass());",
          "2107:         $this->assertTrue($definition->isPrivate());",
          "2109:     }",
          "2111:     public function testRegistersTheContaoBackendSession(): void",
          "",
          "[Removed Lines]",
          "2108:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2647:         $this->assertEquals(",
          "2648:             [",
          "2649:                 new Reference('contao.framework'),",
          "2650:             ],",
          "2651:             $definition->getArguments()",
          "2652:         );",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "2117:         $this->assertSame(ArrayAttributeBag::class, $definition->getClass());",
          "2118:         $this->assertTrue($definition->isPrivate());",
          "2125:     }",
          "2127:     public function testRegistersTheContaoFrontendSession(): void",
          "",
          "[Removed Lines]",
          "2119:         $this->assertSame('_contao_be_attributes', (string) $definition->getArgument(0));",
          "2121:         $methodCalls = $definition->getMethodCalls();",
          "2123:         $this->assertSame('setName', $methodCalls[0][0]);",
          "2124:         $this->assertSame(['contao_backend'], $methodCalls[0][1]);",
          "",
          "[Added Lines]",
          "2664:         $this->assertEquals(",
          "2665:             [",
          "2666:                 '_contao_be_attributes',",
          "2667:             ],",
          "2668:             $definition->getArguments()",
          "2669:         );",
          "2671:         $this->assertEquals(",
          "2672:             [",
          "2673:                 [",
          "2674:                     'setName',",
          "2675:                     ['contao_backend'],",
          "2676:                 ],",
          "2677:             ],",
          "2678:             $definition->getMethodCalls()",
          "2679:         );",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "2133:         $this->assertSame(ArrayAttributeBag::class, $definition->getClass());",
          "2134:         $this->assertTrue($definition->isPrivate());",
          "2141:     }",
          "2143:     public function testRegistersTheSlugService(): void",
          "",
          "[Removed Lines]",
          "2135:         $this->assertSame('_contao_fe_attributes', (string) $definition->getArgument(0));",
          "2137:         $methodCalls = $definition->getMethodCalls();",
          "2139:         $this->assertSame('setName', $methodCalls[0][0]);",
          "2140:         $this->assertSame(['contao_frontend'], $methodCalls[0][1]);",
          "",
          "[Added Lines]",
          "2691:         $this->assertEquals(",
          "2692:             [",
          "2693:                 '_contao_fe_attributes',",
          "2694:             ],",
          "2695:             $definition->getArguments()",
          "2696:         );",
          "2698:         $this->assertEquals(",
          "2699:             [",
          "2700:                 [",
          "2701:                     'setName',",
          "2702:                     ['contao_frontend'],",
          "2703:                 ],",
          "2704:             ],",
          "2705:             $definition->getMethodCalls()",
          "2706:         );",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "2149:         $this->assertSame(Slug::class, $definition->getClass());",
          "2150:         $this->assertTrue($definition->isPublic());",
          "2153:     }",
          "2155:     public function testRegistersTheSlugGenerator(): void",
          "",
          "[Removed Lines]",
          "2151:         $this->assertSame('contao.slug.generator', (string) $definition->getArgument(0));",
          "2152:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2718:         $this->assertEquals(",
          "2719:             [",
          "2720:                 new Reference('contao.slug.generator'),",
          "2721:                 new Reference('contao.framework'),",
          "2722:             ],",
          "2723:             $definition->getArguments()",
          "2724:         );",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "2161:         $this->assertSame(SlugGenerator::class, $definition->getClass());",
          "2162:         $this->assertTrue($definition->isPublic());",
          "2164:     }",
          "2166:     public function testRegistersTheSlugValidCharactersService(): void",
          "",
          "[Removed Lines]",
          "2163:         $this->assertSame(['validChars' => '0-9a-z'], $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2736:         $this->assertEquals(",
          "2737:             [",
          "2738:                 ['validChars' => '0-9a-z'],",
          "2739:             ],",
          "2740:             $definition->getArguments()",
          "2741:         );",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "2172:         $this->assertSame(ValidCharacters::class, $definition->getClass());",
          "2173:         $this->assertTrue($definition->isPublic());",
          "2176:     }",
          "2178:     public function testRegistersTheTokenGenerator(): void",
          "",
          "[Removed Lines]",
          "2174:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(0));",
          "2175:         $this->assertSame('translator', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2753:         $this->assertEquals(",
          "2754:             [",
          "2755:                 new Reference('event_dispatcher'),",
          "2756:                 new Reference('translator'),",
          "2757:             ],",
          "2758:             $definition->getArguments()",
          "2759:         );",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "2184:         $this->assertSame(UriSafeTokenGenerator::class, $definition->getClass());",
          "2185:         $this->assertTrue($definition->isPrivate());",
          "2187:     }",
          "2189:     public function testRegistersTheContaoTranslator(): void",
          "",
          "[Removed Lines]",
          "2186:         $this->assertSame(48, (int) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2771:         $this->assertEquals(",
          "2772:             [",
          "2773:                 48,",
          "2774:             ],",
          "2775:             $definition->getArguments()",
          "2776:         );",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "2195:         $this->assertSame(Translator::class, $definition->getClass());",
          "2196:         $this->assertTrue($definition->isPrivate());",
          "2197:         $this->assertSame('translator', $definition->getDecoratedService()[0]);",
          "2200:     }",
          "2202:     public function testRegistersTheContaoTranslatorDataCollector(): void",
          "",
          "[Removed Lines]",
          "2198:         $this->assertSame('contao.translation.translator.inner', (string) $definition->getArgument(0));",
          "2199:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "",
          "[Added Lines]",
          "2789:         $this->assertEquals(",
          "2790:             [",
          "2791:                 new Reference('contao.translation.translator.inner'),",
          "2792:                 new Reference('contao.framework'),",
          "2793:             ],",
          "2794:             $definition->getArguments()",
          "2795:         );",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "2208:         $this->assertSame(DataCollectorTranslator::class, $definition->getClass());",
          "2209:         $this->assertTrue($definition->isPrivate());",
          "2213:         $this->assertSame(",
          "2214:             [",
          "",
          "[Removed Lines]",
          "2210:         $this->assertNull($definition->getDecoratedService());",
          "2211:         $this->assertSame('contao.translation.translator.data_collector.inner', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "2807:         $this->assertEquals(",
          "2808:             [",
          "2809:                 new Reference('contao.translation.translator.data_collector.inner'),",
          "2810:             ],",
          "2811:             $definition->getArguments()",
          "2812:         );",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "2231:         $this->assertSame(ContaoTemplateExtension::class, $definition->getClass());",
          "2232:         $this->assertTrue($definition->isPrivate());",
          "2236:     }",
          "2238:     public function testRegistersThePredefinedImageSizes(): void",
          "",
          "[Removed Lines]",
          "2233:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "2234:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "2235:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "2835:         $this->assertEquals(",
          "2836:             [",
          "2837:                 new Reference('request_stack'),",
          "2838:                 new Reference('contao.framework'),",
          "2839:                 new Reference('contao.routing.scope_matcher'),",
          "2840:             ],",
          "2841:             $definition->getArguments()",
          "2842:         );",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "2272:         $this->assertTrue($this->container->has('contao.search.escargot_factory'));",
          "2279:         $extension->load(",
          "2280:             [",
          "2281:                 'contao' => [",
          "2282:                     'crawl' => [",
          "2283:                         'additionalURIs' => [",
          "2285:                         ],",
          "2286:                         'defaultHttpClientOptions' => [",
          "2287:                             'proxy' => 'http://localhost:7080',",
          "",
          "[Removed Lines]",
          "2274:         $factory = $this->container->getDefinition('contao.search.escargot_factory');",
          "2276:         $this->assertSame([], $factory->getArgument(2));",
          "2277:         $this->assertSame([], $factory->getArgument(3));",
          "2284:                             'https://examle.com',",
          "",
          "[Added Lines]",
          "2881:         $definition = $this->container->getDefinition('contao.search.escargot_factory');",
          "2883:         $this->assertEquals(",
          "2884:             [",
          "2885:                 new Reference('database_connection'),",
          "2886:                 new Reference('contao.framework'),",
          "2887:                 [],",
          "2888:                 [],",
          "2889:             ],",
          "2890:             $definition->getArguments()",
          "2891:         );",
          "2898:                             'https://example.com',",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "2292:             $this->container",
          "2293:         );",
          "2299:     }",
          "2301:     public function testRegistersTheDefaultSearchIndexer(): void",
          "",
          "[Removed Lines]",
          "2295:         $factory = $this->container->getDefinition('contao.search.escargot_factory');",
          "2297:         $this->assertSame(['https://examle.com'], $factory->getArgument(2));",
          "2298:         $this->assertSame(['proxy' => 'http://localhost:7080'], $factory->getArgument(3));",
          "",
          "[Added Lines]",
          "2909:         $definition = $this->container->getDefinition('contao.search.escargot_factory');",
          "2911:         $this->assertEquals(",
          "2912:             [",
          "2913:                 new Reference('database_connection'),",
          "2914:                 new Reference('contao.framework'),",
          "2915:                 ['https://example.com'],",
          "2916:                 ['proxy' => 'http://localhost:7080'],",
          "2917:             ],",
          "2918:             $definition->getArguments()",
          "2919:         );",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "2323:         $definition = $this->container->getDefinition('contao.search.indexer.default');",
          "2326:     }",
          "2328:     public function testDoesNotRegisterTheDefaultSearchIndexerIfItIsDisabled(): void",
          "",
          "[Removed Lines]",
          "2325:         $this->assertTrue($definition->getArgument(2));",
          "",
          "[Added Lines]",
          "2946:         $this->assertEquals(",
          "2947:             [",
          "2948:                 new Reference('contao.framework'),",
          "2949:                 new Reference('database_connection'),",
          "2950:                 true,",
          "2951:             ],",
          "2952:             $definition->getArguments()",
          "2953:         );",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "2369:         $definition = $this->container->getDefinition('contao.listener.search_index');",
          "2371:         $this->assertSame(SearchIndexListener::class, $definition->getClass());",
          "2373:     }",
          "2375:     public function testRemovesTheSearchIndexListenerIfItIsDisabled(): void",
          "",
          "[Removed Lines]",
          "2372:         $this->assertSame(SearchIndexListener::FEATURE_INDEX, $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "3001:         $this->assertEquals(",
          "3002:             [",
          "3003:                 new Reference('contao.search.indexer'),",
          "3004:                 new Reference('%fragment.path%'),",
          "3005:                 SearchIndexListener::FEATURE_INDEX,",
          "3006:             ],",
          "3007:             $definition->getArguments()",
          "3008:         );",
          "",
          "---------------"
        ],
        "faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php||faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php": [
          "File: faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php -> faq-bundle/tests/DependencyInjection/ContaoFaqExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: use Contao\\FaqBundle\\Picker\\FaqPickerProvider;",
          "19: use PHPUnit\\Framework\\TestCase;",
          "20: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "21: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "23: class ContaoFaqExtensionTest extends TestCase",
          "24: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "23: use Symfony\\Component\\DependencyInjection\\Reference;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         $this->assertSame(InsertTagsListener::class, $definition->getClass());",
          "50:         $this->assertTrue($definition->isPublic());",
          "57:     }",
          "59:     public function testRegistersTheEventPickerProvider(): void",
          "",
          "[Removed Lines]",
          "51:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "53:         $tags = $definition->getTags();",
          "55:         $this->assertArrayHasKey('contao.hook', $tags);",
          "56:         $this->assertSame('replaceInsertTags', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "54:         $this->assertEquals(",
          "55:             [",
          "56:                 new Reference('contao.framework'),",
          "57:             ],",
          "58:             $definition->getArguments()",
          "59:         );",
          "61:         $this->assertSame(",
          "62:             [",
          "63:                 'contao.hook' => [",
          "64:                     [",
          "65:                         'hook' => 'replaceInsertTags',",
          "66:                     ],",
          "67:                 ],",
          "68:             ],",
          "69:             $definition->getTags()",
          "70:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:         $this->assertSame(FaqPickerProvider::class, $definition->getClass());",
          "66:         $this->assertTrue($definition->isPrivate());",
          "72:         $conditionals = $definition->getInstanceofConditionals();",
          "",
          "[Removed Lines]",
          "67:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "68:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "69:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "70:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "82:         $this->assertEquals(",
          "83:             [",
          "84:                 new Reference('knp_menu.factory'),",
          "85:                 new Reference('router'),",
          "86:                 new Reference('translator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "87:                 new Reference('security.helper'),",
          "88:             ],",
          "89:             $definition->getArguments()",
          "90:         );",
          "92:         $this->assertSame(",
          "93:             [",
          "94:                 'contao.picker_provider' => [",
          "95:                     [",
          "96:                         'priority' => 64,",
          "97:                     ],",
          "98:                 ],",
          "99:             ],",
          "100:             $definition->getTags()",
          "101:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:         $childDefinition = $conditionals[FrameworkAwareInterface::class];",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "78:         $this->assertSame('setFramework', $childDefinition->getMethodCalls()[0][0]);",
          "80:         $tags = $definition->getTags();",
          "82:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "83:         $this->assertSame(64, $tags['contao.picker_provider'][0]['priority']);",
          "",
          "[Added Lines]",
          "109:         $this->assertEquals(",
          "110:             [",
          "111:                 [",
          "112:                     'setFramework',",
          "113:                     [new Reference('contao.framework')],",
          "114:                 ],",
          "115:             ],",
          "116:             $childDefinition->getMethodCalls()",
          "117:         );",
          "",
          "---------------"
        ],
        "manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php||manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php": [
          "File: manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php -> manager-bundle/tests/DependencyInjection/ContaoManagerExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: use Contao\\ManagerBundle\\Security\\Logout\\LogoutHandler;",
          "24: use PHPUnit\\Framework\\TestCase;",
          "25: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "27: class ContaoManagerExtensionTest extends TestCase",
          "28: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "27: use Symfony\\Component\\DependencyInjection\\Reference;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:         $this->assertSame(BackendMenuListener::class, $definition->getClass());",
          "54:         $this->assertTrue($definition->isPrivate());",
          "64:     }",
          "66:     public function testRegistersTheInitializeApplicationListener(): void",
          "",
          "[Removed Lines]",
          "55:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "56:         $this->assertSame('%contao_manager.manager_path%', (string) $definition->getArgument(1));",
          "58:         $tags = $definition->getTags();",
          "60:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "61:         $this->assertSame('contao.backend_menu_build', $tags['kernel.event_listener'][0]['event']);",
          "62:         $this->assertSame('onBuild', $tags['kernel.event_listener'][0]['method']);",
          "63:         $this->assertSame(-10, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "58:         $this->assertEquals(",
          "59:             [",
          "60:                 new Reference('security.helper'),",
          "61:                 new Reference('%contao_manager.manager_path%'),",
          "62:             ],",
          "63:             $definition->getArguments()",
          "64:         );",
          "66:         $this->assertSame(",
          "67:             [",
          "68:                 'kernel.event_listener' => [",
          "69:                     [",
          "70:                         'event' => 'contao.backend_menu_build',",
          "71:                         'method' => 'onBuild',",
          "72:                         'priority' => -10,",
          "73:                     ],",
          "74:                 ],",
          "75:             ],",
          "76:             $definition->getTags()",
          "77:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:         $this->assertSame(InitializeApplicationListener::class, $definition->getClass());",
          "73:         $this->assertTrue($definition->isPrivate());",
          "82:     }",
          "84:     public function testRegistersTheInstallCommandListener(): void",
          "",
          "[Removed Lines]",
          "74:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(0));",
          "76:         $tags = $definition->getTags();",
          "78:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "79:         $this->assertSame('contao_installation.initialize_application', $tags['kernel.event_listener'][0]['event']);",
          "80:         $this->assertSame('onInitializeApplication', $tags['kernel.event_listener'][0]['method']);",
          "81:         $this->assertSame(-128, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "89:         $this->assertEquals(",
          "90:             [",
          "91:                 new Reference('%kernel.project_dir%'),",
          "92:             ],",
          "93:             $definition->getArguments()",
          "94:         );",
          "96:         $this->assertSame(",
          "97:             [",
          "98:                 'kernel.event_listener' => [",
          "99:                     [",
          "100:                         'event' => 'contao_installation.initialize_application',",
          "101:                         'method' => 'onInitializeApplication',",
          "102:                         'priority' => -128,",
          "103:                     ],",
          "104:                 ],",
          "105:             ],",
          "106:             $definition->getTags()",
          "107:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:         $this->assertSame(InstallCommandListener::class, $definition->getClass());",
          "91:         $this->assertTrue($definition->isPrivate());",
          "98:     }",
          "100:     public function testRegistersThePreviewAuthenticationListener(): void",
          "",
          "[Removed Lines]",
          "92:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(0));",
          "94:         $tags = $definition->getTags();",
          "96:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "97:         $this->assertSame('console.terminate', $tags['kernel.event_listener'][0]['event']);",
          "",
          "[Added Lines]",
          "119:         $this->assertEquals(",
          "120:             [",
          "121:                 new Reference('%kernel.project_dir%'),",
          "122:             ],",
          "123:             $definition->getArguments()",
          "124:         );",
          "126:         $this->assertSame(",
          "127:             [",
          "128:                 'kernel.event_listener' => [",
          "129:                     [",
          "130:                         'event' => 'console.terminate',",
          "131:                     ],",
          "132:                 ],",
          "133:             ],",
          "134:             $definition->getTags()",
          "135:         );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "106:         $this->assertSame(PreviewAuthenticationListener::class, $definition->getClass());",
          "107:         $this->assertTrue($definition->isPrivate());",
          "119:     }",
          "121:     public function testRegistersTheBundleCacheClearer(): void",
          "",
          "[Removed Lines]",
          "108:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(0));",
          "109:         $this->assertSame('contao.security.token_checker', (string) $definition->getArgument(1));",
          "110:         $this->assertSame('router', (string) $definition->getArgument(2));",
          "111:         $this->assertSame('%contao.preview_script%', (string) $definition->getArgument(3));",
          "113:         $tags = $definition->getTags();",
          "115:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "116:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "117:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "118:         $this->assertSame(7, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "147:         $this->assertEquals(",
          "148:             [",
          "149:                 new Reference('contao.routing.scope_matcher'),",
          "150:                 new Reference('contao.security.token_checker'),",
          "151:                 new Reference('router'),",
          "152:                 new Reference('%contao.preview_script%'),",
          "153:             ],",
          "154:             $definition->getArguments()",
          "155:         );",
          "157:         $this->assertSame(",
          "158:             [",
          "159:                 'kernel.event_listener' => [",
          "160:                     [",
          "161:                         'event' => 'kernel.request',",
          "162:                         'method' => 'onKernelRequest',",
          "163:                         'priority' => 7,",
          "164:                     ],",
          "165:                 ],",
          "166:             ],",
          "167:             $definition->getTags()",
          "168:         );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "127:         $this->assertSame(BundleCacheClearer::class, $definition->getClass());",
          "128:         $this->assertTrue($definition->isPrivate());",
          "130:     }",
          "132:     public function testRegistersTheDebugController(): void",
          "",
          "[Removed Lines]",
          "129:         $this->assertSame('filesystem', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "180:         $this->assertEquals(",
          "181:             [",
          "182:                 new Reference('filesystem', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "183:             ],",
          "184:             $definition->getArguments()",
          "185:         );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "136:         $definition = $this->container->getDefinition(DebugController::class);",
          "138:         $this->assertTrue($definition->isPublic());",
          "142:     }",
          "144:     public function testRegistersTheJwtManager(): void",
          "",
          "[Removed Lines]",
          "139:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "140:         $this->assertSame('request_stack', (string) $definition->getArgument(1));",
          "141:         $this->assertSame('contao_manager.jwt_manager', (string) $definition->getArgument(2));",
          "",
          "[Added Lines]",
          "196:         $this->assertEquals(",
          "197:             [",
          "198:                 new Reference('security.helper'),",
          "199:                 new Reference('request_stack'),",
          "200:                 new Reference('contao_manager.jwt_manager'),",
          "201:             ],",
          "202:             $definition->getArguments()",
          "203:         );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "170:         $this->assertSame(RouteLoader::class, $definition->getClass());",
          "171:         $this->assertTrue($definition->isPublic());",
          "176:     }",
          "178:     public function testRegistersTheLogoutHandler(): void",
          "",
          "[Removed Lines]",
          "172:         $this->assertSame('routing.loader', (string) $definition->getArgument(0));",
          "173:         $this->assertSame('contao_manager.plugin_loader', (string) $definition->getArgument(1));",
          "174:         $this->assertSame('kernel', (string) $definition->getArgument(2));",
          "175:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "235:         $this->assertEquals(",
          "236:             [",
          "237:                 new Reference('routing.loader'),",
          "238:                 new Reference('contao_manager.plugin_loader'),",
          "239:                 new Reference('kernel'),",
          "240:                 new Reference('%kernel.project_dir%'),",
          "241:             ],",
          "242:             $definition->getArguments()",
          "243:         );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "184:         $this->assertSame(LogoutHandler::class, $definition->getClass());",
          "185:         $this->assertTrue($definition->isPrivate());",
          "187:     }",
          "188: }",
          "",
          "[Removed Lines]",
          "186:         $this->assertSame('contao_manager.jwt_manager', (string) $definition->getArgument(0));",
          "",
          "[Added Lines]",
          "255:         $this->assertEquals(",
          "256:             [",
          "257:                 new Reference('contao_manager.jwt_manager', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "258:             ],",
          "259:             $definition->getArguments()",
          "260:         );",
          "",
          "---------------"
        ],
        "news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php||news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php": [
          "File: news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php -> news-bundle/tests/DependencyInjection/ContaoNewsExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Contao\\NewsBundle\\Picker\\NewsPickerProvider;",
          "22: use PHPUnit\\Framework\\TestCase;",
          "23: use Symfony\\Component\\DependencyInjection\\ContainerBuilder;",
          "24: use Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBag;",
          "26: class ContaoNewsExtensionTest extends TestCase",
          "27: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "26: use Symfony\\Component\\DependencyInjection\\Reference;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:         $this->assertSame(GeneratePageListener::class, $definition->getClass());",
          "53:         $this->assertTrue($definition->isPublic());",
          "60:     }",
          "62:     public function testRegistersTheInsertTagsListener(): void",
          "",
          "[Removed Lines]",
          "54:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "56:         $tags = $definition->getTags();",
          "58:         $this->assertArrayHasKey('contao.hook', $tags);",
          "59:         $this->assertSame('generatePage', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "57:         $this->assertEquals(",
          "58:             [",
          "59:                 new Reference('contao.framework'),",
          "60:             ],",
          "61:             $definition->getArguments()",
          "62:         );",
          "64:         $this->assertSame(",
          "65:             [",
          "66:                 'contao.hook' => [",
          "67:                     [",
          "68:                         'hook' => 'generatePage',",
          "69:                     ],",
          "70:                 ],",
          "71:             ],",
          "72:             $definition->getTags()",
          "73:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68:         $this->assertSame(InsertTagsListener::class, $definition->getClass());",
          "69:         $this->assertTrue($definition->isPublic());",
          "76:     }",
          "78:     public function testRegistersThePreviewUrlCreateListener(): void",
          "",
          "[Removed Lines]",
          "70:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "72:         $tags = $definition->getTags();",
          "74:         $this->assertArrayHasKey('contao.hook', $tags);",
          "75:         $this->assertSame('replaceInsertTags', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "85:         $this->assertEquals(",
          "86:             [",
          "87:                 new Reference('contao.framework'),",
          "88:             ],",
          "89:             $definition->getArguments()",
          "90:         );",
          "92:         $this->assertSame(",
          "93:             [",
          "94:                 'contao.hook' => [",
          "95:                     [",
          "96:                         'hook' => 'replaceInsertTags',",
          "97:                     ],",
          "98:                 ],",
          "99:             ],",
          "100:             $definition->getTags()",
          "101:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:         $this->assertSame(PreviewUrlCreateListener::class, $definition->getClass());",
          "85:         $this->assertTrue($definition->isPrivate());",
          "94:     }",
          "96:     public function testRegistersThePreviewUrlConvertListener(): void",
          "",
          "[Removed Lines]",
          "86:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "87:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "89:         $tags = $definition->getTags();",
          "91:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "92:         $this->assertSame('contao.preview_url_create', $tags['kernel.event_listener'][0]['event']);",
          "93:         $this->assertSame('onPreviewUrlCreate', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "113:         $this->assertEquals(",
          "114:             [",
          "115:                 new Reference('request_stack'),",
          "116:                 new Reference('contao.framework'),",
          "117:             ],",
          "118:             $definition->getArguments()",
          "119:         );",
          "121:         $this->assertSame(",
          "122:             [",
          "123:                 'kernel.event_listener' => [",
          "124:                     [",
          "125:                         'event' => 'contao.preview_url_create',",
          "126:                         'method' => 'onPreviewUrlCreate',",
          "127:                     ],",
          "128:                 ],",
          "129:             ],",
          "130:             $definition->getTags()",
          "131:         );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "102:         $this->assertSame(PreviewUrlConvertListener::class, $definition->getClass());",
          "103:         $this->assertTrue($definition->isPrivate());",
          "112:     }",
          "114:     public function testRegistersTheNewsPickerProvider(): void",
          "",
          "[Removed Lines]",
          "104:         $this->assertSame('request_stack', (string) $definition->getArgument(0));",
          "105:         $this->assertSame('contao.framework', (string) $definition->getArgument(1));",
          "107:         $tags = $definition->getTags();",
          "109:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "110:         $this->assertSame('contao.preview_url_convert', $tags['kernel.event_listener'][0]['event']);",
          "111:         $this->assertSame('onPreviewUrlConvert', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "143:         $this->assertEquals(",
          "144:             [",
          "145:                 new Reference('request_stack'),",
          "146:                 new Reference('contao.framework'),",
          "147:             ],",
          "148:             $definition->getArguments()",
          "149:         );",
          "151:         $this->assertSame(",
          "152:             [",
          "153:                 'kernel.event_listener' => [",
          "154:                     [",
          "155:                         'event' => 'contao.preview_url_convert',",
          "156:                         'method' => 'onPreviewUrlConvert',",
          "157:                     ],",
          "158:                 ],",
          "159:             ],",
          "160:             $definition->getTags()",
          "161:         );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "120:         $this->assertSame(NewsPickerProvider::class, $definition->getClass());",
          "121:         $this->assertTrue($definition->isPrivate());",
          "127:         $conditionals = $definition->getInstanceofConditionals();",
          "",
          "[Removed Lines]",
          "122:         $this->assertSame('knp_menu.factory', (string) $definition->getArgument(0));",
          "123:         $this->assertSame('router', (string) $definition->getArgument(1));",
          "124:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "125:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "",
          "[Added Lines]",
          "173:         $this->assertEquals(",
          "174:             [",
          "175:                 new Reference('knp_menu.factory'),",
          "176:                 new Reference('router'),",
          "177:                 new Reference('translator', ContainerInterface::IGNORE_ON_INVALID_REFERENCE),",
          "178:                 new Reference('security.helper'),",
          "179:             ],",
          "180:             $definition->getArguments()",
          "181:         );",
          "183:         $this->assertSame(",
          "184:             [",
          "185:                 'contao.picker_provider' => [",
          "186:                     [",
          "187:                         'priority' => 128,",
          "188:                     ],",
          "189:                 ],",
          "190:             ],",
          "191:             $definition->getTags()",
          "192:         );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "131:         $childDefinition = $conditionals[FrameworkAwareInterface::class];",
          "139:     }",
          "140: }",
          "",
          "[Removed Lines]",
          "133:         $this->assertSame('setFramework', $childDefinition->getMethodCalls()[0][0]);",
          "135:         $tags = $definition->getTags();",
          "137:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "138:         $this->assertSame(128, $tags['contao.picker_provider'][0]['priority']);",
          "",
          "[Added Lines]",
          "200:         $this->assertEquals(",
          "201:             [",
          "202:                 [",
          "203:                     'setFramework',",
          "204:                     [new Reference('contao.framework')],",
          "205:                 ],",
          "206:             ],",
          "207:             $childDefinition->getMethodCalls()",
          "208:         );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d94598ed24de8b5cda4d5c504bddf9d9299be2b2",
      "candidate_info": {
        "commit_hash": "d94598ed24de8b5cda4d5c504bddf9d9299be2b2",
        "repo": "contao/contao",
        "commit_url": "https://github.com/contao/contao/commit/d94598ed24de8b5cda4d5c504bddf9d9299be2b2",
        "files": [
          "core-bundle/src/Config/Loader/PhpFileLoader.php",
          "core-bundle/src/Config/Loader/XliffFileLoader.php",
          "core-bundle/src/DataContainer/PaletteManipulator.php",
          "core-bundle/src/Routing/UrlGenerator.php",
          "core-bundle/src/Translation/Translator.php",
          "core-bundle/tests/Contao/ImageTest.php",
          "core-bundle/tests/Doctrine/DoctrineTestCase.php",
          "core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php",
          "core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php",
          "core-bundle/tests/EventListener/CommandSchedulerListenerTest.php",
          "core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php",
          "core-bundle/tests/EventListener/StoreRefererListenerTest.php",
          "core-bundle/tests/EventListener/ToggleViewListenerTest.php",
          "core-bundle/tests/EventListener/UserSessionListenerTest.php",
          "core-bundle/tests/Framework/ContaoFrameworkTest.php",
          "core-bundle/tests/Image/ImageFactoryTest.php",
          "core-bundle/tests/Image/ImageSizesTest.php",
          "core-bundle/tests/Image/PictureFactoryTest.php",
          "core-bundle/tests/Routing/UrlGeneratorTest.php"
        ],
        "message": "[Core] Add type-hints where possible.",
        "before_after_code_files": [
          "core-bundle/src/Config/Loader/PhpFileLoader.php||core-bundle/src/Config/Loader/PhpFileLoader.php",
          "core-bundle/src/Config/Loader/XliffFileLoader.php||core-bundle/src/Config/Loader/XliffFileLoader.php",
          "core-bundle/src/DataContainer/PaletteManipulator.php||core-bundle/src/DataContainer/PaletteManipulator.php",
          "core-bundle/src/Routing/UrlGenerator.php||core-bundle/src/Routing/UrlGenerator.php",
          "core-bundle/src/Translation/Translator.php||core-bundle/src/Translation/Translator.php",
          "core-bundle/tests/Contao/ImageTest.php||core-bundle/tests/Contao/ImageTest.php",
          "core-bundle/tests/Doctrine/DoctrineTestCase.php||core-bundle/tests/Doctrine/DoctrineTestCase.php",
          "core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php||core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php",
          "core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php||core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php",
          "core-bundle/tests/EventListener/CommandSchedulerListenerTest.php||core-bundle/tests/EventListener/CommandSchedulerListenerTest.php",
          "core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php||core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php",
          "core-bundle/tests/EventListener/StoreRefererListenerTest.php||core-bundle/tests/EventListener/StoreRefererListenerTest.php",
          "core-bundle/tests/EventListener/ToggleViewListenerTest.php||core-bundle/tests/EventListener/ToggleViewListenerTest.php",
          "core-bundle/tests/EventListener/UserSessionListenerTest.php||core-bundle/tests/EventListener/UserSessionListenerTest.php",
          "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php",
          "core-bundle/tests/Image/ImageFactoryTest.php||core-bundle/tests/Image/ImageFactoryTest.php",
          "core-bundle/tests/Image/ImageSizesTest.php||core-bundle/tests/Image/ImageSizesTest.php",
          "core-bundle/tests/Image/PictureFactoryTest.php||core-bundle/tests/Image/PictureFactoryTest.php",
          "core-bundle/tests/Routing/UrlGeneratorTest.php||core-bundle/tests/Routing/UrlGeneratorTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php"
          ],
          "candidate": [
            "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php"
          ]
        }
      },
      "candidate_diff": {
        "core-bundle/src/Config/Loader/PhpFileLoader.php||core-bundle/src/Config/Loader/PhpFileLoader.php": [
          "File: core-bundle/src/Config/Loader/PhpFileLoader.php -> core-bundle/src/Config/Loader/PhpFileLoader.php"
        ],
        "core-bundle/src/Config/Loader/XliffFileLoader.php||core-bundle/src/Config/Loader/XliffFileLoader.php": [
          "File: core-bundle/src/Config/Loader/XliffFileLoader.php -> core-bundle/src/Config/Loader/XliffFileLoader.php"
        ],
        "core-bundle/src/DataContainer/PaletteManipulator.php||core-bundle/src/DataContainer/PaletteManipulator.php": [
          "File: core-bundle/src/DataContainer/PaletteManipulator.php -> core-bundle/src/DataContainer/PaletteManipulator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:     }",
          "147:     {",
          "148:         static $positions = [",
          "149:             self::POSITION_BEFORE,",
          "",
          "[Removed Lines]",
          "146:     private function validatePosition($position): void",
          "",
          "[Added Lines]",
          "144:     private function validatePosition(string $position): void",
          "",
          "---------------"
        ],
        "core-bundle/src/Routing/UrlGenerator.php||core-bundle/src/Routing/UrlGenerator.php": [
          "File: core-bundle/src/Routing/UrlGenerator.php -> core-bundle/src/Routing/UrlGenerator.php"
        ],
        "core-bundle/src/Translation/Translator.php||core-bundle/src/Translation/Translator.php": [
          "File: core-bundle/src/Translation/Translator.php -> core-bundle/src/Translation/Translator.php"
        ],
        "core-bundle/tests/Contao/ImageTest.php||core-bundle/tests/Contao/ImageTest.php": [
          "File: core-bundle/tests/Contao/ImageTest.php -> core-bundle/tests/Contao/ImageTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:     }",
          "140:     {",
          "141:         $properties = [",
          "142:             'extension' => 'jpg',",
          "",
          "[Removed Lines]",
          "139:     public function testResizesImagesWithoutImportantPart($arguments, $expectedResult): void",
          "",
          "[Added Lines]",
          "136:     public function testResizesImagesWithoutImportantPart(array $arguments, array $expectedResult): void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "563:     }",
          "575:     {",
          "576:         $properties = [",
          "577:             'extension' => 'jpg',",
          "",
          "[Removed Lines]",
          "574:     public function testResizesImagesWithImportantPart($arguments, $expectedResult): void",
          "",
          "[Added Lines]",
          "568:     public function testResizesImagesWithImportantPart(array $arguments, array $expectedResult): void",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "856:     }",
          "868:     {",
          "869:         $properties = [",
          "870:             'extension' => 'jpg',",
          "",
          "[Removed Lines]",
          "867:     public function testReturnsTheCacheName($arguments, $expectedCacheName): void",
          "",
          "[Added Lines]",
          "858:     public function testReturnsTheCacheName(array $arguments, string $expectedCacheName): void",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "942:     }",
          "953:     {",
          "955:         $fileMock = $this->mockClassWithProperties(File::class, ['extension' => 'jpg']);",
          "",
          "[Removed Lines]",
          "952:     public function testFailsIfTheZoomValueIsOutOfBounds($value): void",
          "",
          "[Added Lines]",
          "941:     public function testFailsIfTheZoomValueIsOutOfBounds(int $value): void",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "977:     }",
          "989:     {",
          "990:         $result = Image::get($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4], $arguments[5]);",
          "993:     }",
          "998:     public function getGetLegacy(): array",
          "999:     {",
          "1002:         return [",
          "1003:             'No empty image path returns null' => [",
          "1004:                 ['', 100, 100, 'crop', null, false],",
          "1006:             ],",
          "1007:             'Inexistent file returns null' => [",
          "1008:                 ['foobar.jpg', 100, 100, 'crop', null, false],",
          "1010:             ],",
          "1011:         ];",
          "1012:     }",
          "",
          "[Removed Lines]",
          "988:     public function testFactorsImagesInTheLegacyMethod($arguments, $expectedResult): void",
          "992:         $this->assertSame($result, $expectedResult);",
          "1005:                 null,",
          "1009:                 null,",
          "",
          "[Added Lines]",
          "974:     public function testFactorsImagesInTheLegacyMethod(array $arguments): void",
          "978:         $this->assertNull($result);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1024:     }",
          "1036:     {",
          "1037:         $result = Image::resize($arguments[0], $arguments[1], $arguments[2], $arguments[3]);",
          "1040:     }",
          "",
          "[Removed Lines]",
          "1035:     public function testResizesImagesInTheLegacyMethod($arguments, $expectedResult): void",
          "1039:         $this->assertSame($result, $expectedResult);",
          "",
          "[Added Lines]",
          "1015:     public function testResizesImagesInTheLegacyMethod(array $arguments): void",
          "1019:         $this->assertFalse($result);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1045:     public function getResizeLegacy(): array",
          "1046:     {",
          "1049:         return [",
          "1050:             'No empty image path returns false' => [",
          "1051:                 ['', 100, 100, 'crop'],",
          "1053:             ],",
          "1054:             'Inexistent file returns false' => [",
          "1055:                 ['foobar.jpg', 100, 100, 'crop'],",
          "1057:             ],",
          "1058:         ];",
          "1059:     }",
          "",
          "[Removed Lines]",
          "1052:                 false,",
          "1056:                 false,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1493:     }",
          "1506:     {",
          "1508:         $path = 'assets/'",
          "",
          "[Removed Lines]",
          "1505:     public static function getImageHookCallback($originalPath, $targetWidth, $targetHeight, $resizeMode, $cacheName, $fileObj, $targetPath, $imageObj): string",
          "",
          "[Added Lines]",
          "1476:     public static function getImageHookCallback(string $originalPath, int $targetWidth, int $targetHeight, string $resizeMode, string $cacheName, $fileObj, string $targetPath, $imageObj): string",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1523:     }",
          "1535:     {",
          "1536:         $this->assertSame($expected, Image::getPixelValue($value));",
          "1537:     }",
          "",
          "[Removed Lines]",
          "1534:     public function testReadsThePixelValue($value, $expected): void",
          "",
          "[Added Lines]",
          "1502:     public function testReadsThePixelValue(string $value, int $expected): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/Doctrine/DoctrineTestCase.php||core-bundle/tests/Doctrine/DoctrineTestCase.php": [
          "File: core-bundle/tests/Doctrine/DoctrineTestCase.php -> core-bundle/tests/Doctrine/DoctrineTestCase.php"
        ],
        "core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php||core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php": [
          "File: core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php -> core-bundle/tests/Doctrine/Schema/DcaSchemaProviderTest.php"
        ],
        "core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php||core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php": [
          "File: core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php -> core-bundle/tests/EventListener/AddToSearchIndexListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:     }",
          "116:     {",
          "117:         $request = new Request();",
          "118:         $request->setMethod($requestMethod);",
          "",
          "[Removed Lines]",
          "115:     private function mockPostResponseEvent($requestUri = null, $requestMethod = Request::METHOD_GET): PostResponseEvent",
          "",
          "[Added Lines]",
          "112:     private function mockPostResponseEvent(string $requestUri = null, string $requestMethod = Request::METHOD_GET): PostResponseEvent",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/CommandSchedulerListenerTest.php||core-bundle/tests/EventListener/CommandSchedulerListenerTest.php": [
          "File: core-bundle/tests/EventListener/CommandSchedulerListenerTest.php -> core-bundle/tests/EventListener/CommandSchedulerListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:         return $connection;",
          "242:     }",
          "248:     {",
          "249:         $request = new Request();",
          "",
          "[Removed Lines]",
          "247:     private function mockPostResponseEvent($route = null): PostResponseEvent",
          "",
          "[Added Lines]",
          "244:     private function mockPostResponseEvent(string $route = null): PostResponseEvent",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php||core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php": [
          "File: core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php -> core-bundle/tests/EventListener/PrettyErrorScreenListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "134:     }",
          "142:     {",
          "143:         $GLOBALS['TL_PTY']['error_'.$type] = 'Contao\\PageError'.$type;",
          "",
          "[Removed Lines]",
          "141:     public function testRendersTheContaoPageHandler($type, \\Exception $exception): void",
          "",
          "[Added Lines]",
          "139:     public function testRendersTheContaoPageHandler(int $type, \\Exception $exception): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/StoreRefererListenerTest.php||core-bundle/tests/EventListener/StoreRefererListenerTest.php": [
          "File: core-bundle/tests/EventListener/StoreRefererListenerTest.php -> core-bundle/tests/EventListener/StoreRefererListenerTest.php"
        ],
        "core-bundle/tests/EventListener/ToggleViewListenerTest.php||core-bundle/tests/EventListener/ToggleViewListenerTest.php": [
          "File: core-bundle/tests/EventListener/ToggleViewListenerTest.php -> core-bundle/tests/EventListener/ToggleViewListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:         $this->assertSame('/foo/bar', $cookie->getPath());",
          "167:     }",
          "173:     {",
          "174:         $cookie = $this->getCookie($response);",
          "",
          "[Removed Lines]",
          "172:     private function assertCookieValue(Response $response, $expectedValue): void",
          "",
          "[Added Lines]",
          "169:     private function assertCookieValue(Response $response, string $expectedValue): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/UserSessionListenerTest.php||core-bundle/tests/EventListener/UserSessionListenerTest.php": [
          "File: core-bundle/tests/EventListener/UserSessionListenerTest.php -> core-bundle/tests/EventListener/UserSessionListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:     }",
          "112:     {",
          "113:         $connection = $this->createMock(Connection::class);",
          "114:         $connection",
          "",
          "[Removed Lines]",
          "111:     public function testStoresTheSessionUponKernelResponse($scope, $userClass, $userTable): void",
          "",
          "[Added Lines]",
          "107:     public function testStoresTheSessionUponKernelResponse(string $scope, string $userClass, string $userTable): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/Framework/ContaoFrameworkTest.php||core-bundle/tests/Framework/ContaoFrameworkTest.php": [
          "File: core-bundle/tests/Framework/ContaoFrameworkTest.php -> core-bundle/tests/Framework/ContaoFrameworkTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "479:     }",
          "490:     {",
          "491:         $request = new Request();",
          "492:         $request->attributes->set('_route', $route);",
          "",
          "[Removed Lines]",
          "489:     public function testAllowsTheInstallationToBeIncompleteInTheInstallTool($route): void",
          "",
          "[Added Lines]",
          "487:     public function testAllowsTheInstallationToBeIncompleteInTheInstallTool(string $route): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/Image/ImageFactoryTest.php||core-bundle/tests/Image/ImageFactoryTest.php": [
          "File: core-bundle/tests/Image/ImageFactoryTest.php -> core-bundle/tests/Image/ImageFactoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:     }",
          "298:     {",
          "299:         $path = $this->getFixturesDir().'/images/none.jpg';",
          "300:         $imageMock = $this->createMock(ImageInterface::class);",
          "",
          "[Removed Lines]",
          "297:     public function testCreatesAnImageObjectFromAnImagePathInLegacyMode($mode, array $expected): void",
          "",
          "[Added Lines]",
          "295:     public function testCreatesAnImageObjectFromAnImagePathInLegacyMode(string $mode, array $expected): void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "371:     }",
          "380:     {",
          "381:         $dimensionsMock = $this->createMock(ImageDimensionsInterface::class);",
          "382:         $dimensionsMock",
          "",
          "[Removed Lines]",
          "379:     public function testReturnsTheImportantPartFromALegacyMode($mode, $expected): void",
          "",
          "[Added Lines]",
          "374:     public function testReturnsTheImportantPartFromALegacyMode(string $mode, array $expected): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/Image/ImageSizesTest.php||core-bundle/tests/Image/ImageSizesTest.php": [
          "File: core-bundle/tests/Image/ImageSizesTest.php -> core-bundle/tests/Image/ImageSizesTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:     {",
          "147:         $this->eventDispatcher",
          "148:             ->expects($this->atLeastOnce())",
          "",
          "[Removed Lines]",
          "145:     private function expectEvent($event): void",
          "",
          "[Added Lines]",
          "143:     private function expectEvent(string $event): void",
          "",
          "---------------"
        ],
        "core-bundle/tests/Image/PictureFactoryTest.php||core-bundle/tests/Image/PictureFactoryTest.php": [
          "File: core-bundle/tests/Image/PictureFactoryTest.php -> core-bundle/tests/Image/PictureFactoryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "365:     }",
          "375:     {",
          "376:         if (null === $pictureGenerator) {",
          "377:             $pictureGenerator = $this->createMock(PictureGeneratorInterface::class);",
          "",
          "[Removed Lines]",
          "374:     private function mockPictureFactory($pictureGenerator = null, $imageFactory = null, $framework = null, $bypassCache = null, $imagineOptions = null): PictureFactory",
          "",
          "[Added Lines]",
          "371:     private function mockPictureFactory($pictureGenerator = null, $imageFactory = null, ContaoFrameworkInterface $framework = null, bool $bypassCache = null, array $imagineOptions = null): PictureFactory",
          "",
          "---------------"
        ],
        "core-bundle/tests/Routing/UrlGeneratorTest.php||core-bundle/tests/Routing/UrlGeneratorTest.php": [
          "File: core-bundle/tests/Routing/UrlGeneratorTest.php -> core-bundle/tests/Routing/UrlGeneratorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "265:     }",
          "274:     {",
          "275:         $router = $this->createMock(UrlGeneratorInterface::class);",
          "276:         $router",
          "",
          "[Removed Lines]",
          "273:     private function mockRouterWithContext(array $expectedParameters = [], $expectedRoute = 'contao_frontend', $referenceType = UrlGeneratorInterface::ABSOLUTE_PATH): UrlGeneratorInterface",
          "",
          "[Added Lines]",
          "270:     private function mockRouterWithContext(array $expectedParameters = [], string $expectedRoute = 'contao_frontend', int $referenceType = UrlGeneratorInterface::ABSOLUTE_PATH): UrlGeneratorInterface",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d42ccf43ceb048fb8e4b0bb8d5ad1d0bb45e05f1",
      "candidate_info": {
        "commit_hash": "d42ccf43ceb048fb8e4b0bb8d5ad1d0bb45e05f1",
        "repo": "contao/contao",
        "commit_url": "https://github.com/contao/contao/commit/d42ccf43ceb048fb8e4b0bb8d5ad1d0bb45e05f1",
        "files": [
          "calendar-bundle/composer.json",
          "comments-bundle/composer.json",
          "composer.json",
          "core-bundle/composer.json",
          "core-bundle/src/DependencyInjection/Configuration.php",
          "core-bundle/src/HttpKernel/JwtManager.php",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php",
          "core-bundle/tests/Functional/RoutingTest.php",
          "core-bundle/tests/Functional/app/config/config_test.yml",
          "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "faq-bundle/composer.json",
          "installation-bundle/composer.json",
          "listing-bundle/composer.json",
          "manager-bundle/composer.json",
          "manager-bundle/src/DependencyInjection/Configuration.php",
          "manager-bundle/src/Resources/skeleton/app/config.yml",
          "news-bundle/composer.json",
          "newsletter-bundle/composer.json",
          "phpstan.neon.dist"
        ],
        "message": "Make Symfony 4.2 the minimum requirement",
        "before_after_code_files": [
          "core-bundle/src/DependencyInjection/Configuration.php||core-bundle/src/DependencyInjection/Configuration.php",
          "core-bundle/src/HttpKernel/JwtManager.php||core-bundle/src/HttpKernel/JwtManager.php",
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php||core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php",
          "core-bundle/tests/Functional/RoutingTest.php||core-bundle/tests/Functional/RoutingTest.php",
          "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php||core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "manager-bundle/src/DependencyInjection/Configuration.php||manager-bundle/src/DependencyInjection/Configuration.php",
          "phpstan.neon.dist||phpstan.neon.dist"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ],
          "candidate": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ]
        }
      },
      "candidate_diff": {
        "core-bundle/src/DependencyInjection/Configuration.php||core-bundle/src/DependencyInjection/Configuration.php": [
          "File: core-bundle/src/DependencyInjection/Configuration.php -> core-bundle/src/DependencyInjection/Configuration.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     {",
          "41:         $treeBuilder = new TreeBuilder('contao');",
          "50:         $rootNode",
          "51:             ->children()",
          "52:                 ->scalarNode('web_dir')",
          "",
          "[Removed Lines]",
          "43:         if (method_exists($treeBuilder, 'getRootNode')) {",
          "44:             $rootNode = $treeBuilder->getRootNode();",
          "45:         } else {",
          "47:             $rootNode = $treeBuilder->root('contao');",
          "48:         }",
          "",
          "[Added Lines]",
          "43:         $rootNode = $treeBuilder->getRootNode();",
          "",
          "---------------"
        ],
        "core-bundle/src/HttpKernel/JwtManager.php||core-bundle/src/HttpKernel/JwtManager.php": [
          "File: core-bundle/src/HttpKernel/JwtManager.php -> core-bundle/src/HttpKernel/JwtManager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:             ->getToken()",
          "115:         ;",
          "125:     }",
          "",
          "[Removed Lines]",
          "117:         if (method_exists(Cookie::class, 'create')) {",
          "118:             $cookie = Cookie::create(self::COOKIE_NAME, (string) $token);",
          "119:         } else {",
          "121:             $cookie = new Cookie(self::COOKIE_NAME, (string) $token);",
          "122:         }",
          "124:         $response->headers->setCookie($cookie);",
          "",
          "[Added Lines]",
          "117:         $response->headers->setCookie(Cookie::create(self::COOKIE_NAME, (string) $token));",
          "",
          "---------------"
        ],
        "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php": [
          "File: core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php -> core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         $events = BaseLocaleListener::getSubscribedEvents();",
          "184:         $events = ExceptionListener::getSubscribedEvents();",
          "195:         $events = Firewall::getSubscribedEvents();",
          "",
          "[Removed Lines]",
          "181:         $this->assertSame('onKernelRequest', $events['kernel.request'][0][0]);",
          "182:         $this->assertSame(16, $events['kernel.request'][0][1]);",
          "186:         if (\\is_array($events['kernel.exception'][0])) {",
          "187:             $this->assertSame('onKernelException', $events['kernel.exception'][1][0]);",
          "188:             $this->assertSame(-128, $events['kernel.exception'][1][1]);",
          "189:         } else {",
          "191:             $this->assertSame('onKernelException', $events['kernel.exception'][0]);",
          "192:             $this->assertSame(-128, $events['kernel.exception'][1]);",
          "193:         }",
          "",
          "[Added Lines]",
          "181:         if ('setDefaultLocale' === $events['kernel.request'][0][0]) {",
          "182:             $this->assertSame('onKernelRequest', $events['kernel.request'][1][0]);",
          "183:             $this->assertSame(16, $events['kernel.request'][1][1]);",
          "184:         } else {",
          "186:             $this->assertSame('onKernelRequest', $events['kernel.request'][0][0]);",
          "187:             $this->assertSame(16, $events['kernel.request'][0][1]);",
          "188:         }",
          "192:         $this->assertSame('onKernelException', $events['kernel.exception'][1][0]);",
          "193:         $this->assertSame(-128, $events['kernel.exception'][1][1]);",
          "",
          "---------------"
        ],
        "core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php||core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php": [
          "File: core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php -> core-bundle/tests/EventListener/MakeResponsePrivateListenerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:         $response = new Response();",
          "31:         $response->setPublic();",
          "32:         $response->setMaxAge(600);",
          "35:         $event = new FilterResponseEvent(",
          "36:             $this->createMock(KernelInterface::class),",
          "",
          "[Removed Lines]",
          "33:         $response->headers->setCookie($this->createCookie('foobar', 'foobar'));",
          "",
          "[Added Lines]",
          "33:         $response->headers->setCookie(Cookie::create('foobar', 'foobar'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:         $response = new Response();",
          "100:         $response->setPublic();",
          "101:         $response->setMaxAge(600);",
          "104:         $event = new FilterResponseEvent(",
          "105:             $this->createMock(KernelInterface::class),",
          "",
          "[Removed Lines]",
          "102:         $response->headers->setCookie($this->createCookie('foobar', 'foobar'));",
          "",
          "[Added Lines]",
          "102:         $response->headers->setCookie(Cookie::create('foobar', 'foobar'));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "154:         $this->assertTrue($response->headers->getCacheControlDirective('public'));",
          "155:     }",
          "166: }",
          "",
          "[Removed Lines]",
          "157:     private function createCookie(string $name, string $value): Cookie",
          "158:     {",
          "159:         if (method_exists(Cookie::class, 'create')) {",
          "160:             return Cookie::create($name, $value);",
          "161:         }",
          "164:         return new Cookie($name, $value);",
          "165:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core-bundle/tests/Functional/RoutingTest.php||core-bundle/tests/Functional/RoutingTest.php": [
          "File: core-bundle/tests/Functional/RoutingTest.php -> core-bundle/tests/Functional/RoutingTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Contao\\System;",
          "20: use Contao\\TestCase\\ContaoDatabaseTrait;",
          "21: use Symfony\\Bundle\\FrameworkBundle\\Test\\WebTestCase;",
          "23: class RoutingTest extends WebTestCase",
          "24: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use Symfony\\Component\\HttpFoundation\\Response;",
          "",
          "---------------"
        ],
        "core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php||core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php": [
          "File: core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php -> core-bundle/tests/Security/Authentication/Token/FrontendPreviewTokenTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:         $token = new FrontendPreviewToken(null, true);",
          "66:         $serialized = $token->serialize();",
          "72:         }",
          "74:         $this->assertSame($expected, $serialized);",
          "",
          "[Removed Lines]",
          "68:         if (false !== strpos($serialized, '\"a:4:{')) {",
          "69:             $expected = serialize([true, serialize(['anon.', true, [], []])]);",
          "70:         } else {",
          "71:             $expected = serialize([true, ['anon.', true, [], []]]);",
          "",
          "[Added Lines]",
          "68:         switch (true) {",
          "69:             case false !== strpos($serialized, '\"a:4:{'):",
          "71:                 $expected = serialize([true, serialize(['anon.', true, [], []])]);",
          "72:                 break;",
          "74:             case false !== strpos($serialized, ';a:4:{'):",
          "76:                 $expected = serialize([true, ['anon.', true, [], []]]);",
          "77:                 break;",
          "79:             default:",
          "80:                 $expected = serialize([true, ['anon.', true, [], [], []]]);",
          "",
          "---------------"
        ],
        "manager-bundle/src/DependencyInjection/Configuration.php||manager-bundle/src/DependencyInjection/Configuration.php": [
          "File: manager-bundle/src/DependencyInjection/Configuration.php -> manager-bundle/src/DependencyInjection/Configuration.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     {",
          "25:         $treeBuilder = new TreeBuilder('contao_manager');",
          "34:         $rootNode",
          "35:             ->children()",
          "36:                 ->scalarNode('manager_path')",
          "",
          "[Removed Lines]",
          "27:         if (method_exists($treeBuilder, 'getRootNode')) {",
          "28:             $rootNode = $treeBuilder->getRootNode();",
          "29:         } else {",
          "31:             $rootNode = $treeBuilder->root('contao_manager');",
          "32:         }",
          "",
          "[Added Lines]",
          "27:         $rootNode = $treeBuilder->getRootNode();",
          "",
          "---------------"
        ],
        "phpstan.neon.dist||phpstan.neon.dist": [
          "File: phpstan.neon.dist -> phpstan.neon.dist",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:         # Ignore backwards compatibility layers when preferring lowest dependencies",
          "24:         - '#Call to an undefined method Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\NodeDefinition::children\\(\\)\\.#'",
          "25:         - '#Class Symfony\\\\Component\\\\Config\\\\Definition\\\\Builder\\\\TreeBuilder does not have a constructor and must be instantiated without any parameters\\.#'",
          "28:     reportUnmatchedIgnoredErrors: false",
          "",
          "[Removed Lines]",
          "26:         - '#Call to an undefined static method Symfony\\\\Component\\\\HttpFoundation\\\\Cookie::create\\(\\)\\.#'",
          "",
          "[Added Lines]",
          "26:         - '#Method Symfony\\\\Contracts\\\\EventDispatcher\\\\EventDispatcherInterface::dispatch\\(\\) invoked with 2 parameters, 1 required\\.#'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c94efbf0759be62710b5c84e091e45c6f094417e",
      "candidate_info": {
        "commit_hash": "c94efbf0759be62710b5c84e091e45c6f094417e",
        "repo": "contao/contao",
        "commit_url": "https://github.com/contao/contao/commit/c94efbf0759be62710b5c84e091e45c6f094417e",
        "files": [
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
        ],
        "message": "Test the service tags more accurately (see #1095)\n\nDescription\n-----------\n\nAs discussed with @aschempp so we will be aware if new tags are added without adjusting the core extension test.\n\nCommits\n-------\n\n6f2f9d02 Also test if the number of service tags matches\n6c124ae9 Test the exact tags array\n6bc0ed04 Merge branch 'master' into bugfix/core-extension-test",
        "before_after_code_files": [
          "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ],
          "candidate": [
            "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php"
          ]
        }
      },
      "candidate_diff": {
        "core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php||core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php": [
          "File: core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php -> core-bundle/tests/DependencyInjection/ContaoCoreExtensionTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "255:         $this->assertSame('translator', (string) $definition->getArgument(1));",
          "263:     }",
          "265:     public function testRegistersTheBackendMenuListener(): void",
          "",
          "[Removed Lines]",
          "257:         $tags = $definition->getTags();",
          "259:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "260:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "261:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "262:         $this->assertSame(7, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "257:         $this->assertSame(",
          "258:             [",
          "259:                 'kernel.event_listener' => [",
          "260:                     [",
          "261:                         'event' => 'kernel.request',",
          "262:                         'method' => 'onKernelRequest',",
          "263:                         'priority' => 7,",
          "264:                     ],",
          "265:                 ],",
          "266:             ],",
          "267:             $definition->getTags()",
          "268:         );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "272:         $this->assertTrue($definition->isPrivate());",
          "273:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "280:     }",
          "282:     public function testRegistersTheBypassMaintenanceListener(): void",
          "",
          "[Removed Lines]",
          "275:         $tags = $definition->getTags();",
          "277:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "278:         $this->assertSame('contao.backend_menu_build', $tags['kernel.event_listener'][0]['event']);",
          "279:         $this->assertSame('onBuild', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "281:         $this->assertSame(",
          "282:             [",
          "283:                 'kernel.event_listener' => [",
          "284:                     [",
          "285:                         'event' => 'contao.backend_menu_build',",
          "286:                         'method' => 'onBuild',",
          "287:                     ],",
          "288:                 ],",
          "289:             ],",
          "290:             $definition->getTags()",
          "291:         );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:         $this->assertTrue($definition->isPrivate());",
          "290:         $this->assertSame('contao.security.token_checker', (string) $definition->getArgument(0));",
          "298:     }",
          "300:     public function testRegistersTheClearSessionDataListener(): void",
          "",
          "[Removed Lines]",
          "292:         $tags = $definition->getTags();",
          "294:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "295:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "296:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "297:         $this->assertSame(6, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "304:         $this->assertSame(",
          "305:             [",
          "306:                 'kernel.event_listener' => [",
          "307:                     [",
          "308:                         'event' => 'kernel.request',",
          "309:                         'method' => 'onKernelRequest',",
          "310:                         'priority' => 6,",
          "311:                     ],",
          "312:                 ],",
          "313:             ],",
          "314:             $definition->getTags()",
          "315:         );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "306:         $this->assertSame(ClearSessionDataListener::class, $definition->getClass());",
          "307:         $this->assertTrue($definition->isPrivate());",
          "315:     }",
          "317:     public function testRegistersTheCommandSchedulerListener(): void",
          "",
          "[Removed Lines]",
          "309:         $tags = $definition->getTags();",
          "311:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "312:         $this->assertSame('kernel.response', $tags['kernel.event_listener'][0]['event']);",
          "313:         $this->assertSame('onKernelResponse', $tags['kernel.event_listener'][0]['method']);",
          "314:         $this->assertSame(-768, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "327:         $this->assertSame(",
          "328:             [",
          "329:                 'kernel.event_listener' => [",
          "330:                     [",
          "331:                         'event' => 'kernel.response',",
          "332:                         'method' => 'onKernelResponse',",
          "333:                         'priority' => -768,",
          "334:                     ],",
          "335:                 ],",
          "336:             ],",
          "337:             $definition->getTags()",
          "338:         );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "326:         $this->assertSame('database_connection', (string) $definition->getArgument(1));",
          "327:         $this->assertSame('%fragment.path%', (string) $definition->getArgument(2));",
          "334:     }",
          "336:     public function testRegistersTheCsrfTokenCookieListener(): void",
          "",
          "[Removed Lines]",
          "329:         $tags = $definition->getTags();",
          "331:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "332:         $this->assertSame('kernel.terminate', $tags['kernel.event_listener'][0]['event']);",
          "333:         $this->assertSame('onKernelTerminate', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "353:         $this->assertSame(",
          "354:             [",
          "355:                 'kernel.event_listener' => [",
          "356:                     [",
          "357:                         'event' => 'kernel.terminate',",
          "358:                         'method' => 'onKernelTerminate',",
          "359:                     ],",
          "360:                 ],",
          "361:             ],",
          "362:             $definition->getTags()",
          "363:         );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "343:         $this->assertTrue($definition->isPrivate());",
          "344:         $this->assertSame('contao.csrf.token_storage', (string) $definition->getArgument(0));",
          "354:     }",
          "356:     public function testRegistersTheDataContainerCallbackListener(): void",
          "",
          "[Removed Lines]",
          "346:         $tags = $definition->getTags();",
          "348:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "349:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "350:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "351:         $this->assertSame(36, $tags['kernel.event_listener'][0]['priority']);",
          "352:         $this->assertSame('kernel.response', $tags['kernel.event_listener'][1]['event']);",
          "353:         $this->assertSame('onKernelResponse', $tags['kernel.event_listener'][1]['method']);",
          "",
          "[Added Lines]",
          "376:         $this->assertSame(",
          "377:             [",
          "378:                 'kernel.event_listener' => [",
          "379:                     [",
          "380:                         'event' => 'kernel.request',",
          "381:                         'method' => 'onKernelRequest',",
          "382:                         'priority' => 36,",
          "383:                     ],",
          "384:                     [",
          "385:                         'event' => 'kernel.response',",
          "386:                         'method' => 'onKernelResponse',",
          "387:                     ],",
          "388:                 ],",
          "389:             ],",
          "390:             $definition->getTags()",
          "391:         );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "362:         $this->assertSame(DataContainerCallbackListener::class, $definition->getClass());",
          "363:         $this->assertTrue($definition->isPrivate());",
          "369:     }",
          "371:     public function testRegistersTheDoctrineSchemaListener(): void",
          "",
          "[Removed Lines]",
          "365:         $tags = $definition->getTags();",
          "367:         $this->assertArrayHasKey('contao.hook', $tags);",
          "368:         $this->assertSame('loadDataContainer', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "403:         $this->assertSame(",
          "404:             [",
          "405:                 'contao.hook' => [",
          "406:                     [",
          "407:                         'hook' => 'loadDataContainer',",
          "408:                     ],",
          "409:                 ],",
          "410:             ],",
          "411:             $definition->getTags()",
          "412:         );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "378:         $this->assertTrue($definition->isPrivate());",
          "379:         $this->assertSame('contao.doctrine.schema_provider', (string) $definition->getArgument(0));",
          "386:     }",
          "388:     public function testRegistersTheExceptionConverterListener(): void",
          "",
          "[Removed Lines]",
          "381:         $tags = $definition->getTags();",
          "383:         $this->assertArrayHasKey('doctrine.event_listener', $tags);",
          "384:         $this->assertSame('onSchemaIndexDefinition', $tags['doctrine.event_listener'][0]['event']);",
          "385:         $this->assertSame('postGenerateSchema', $tags['doctrine.event_listener'][1]['event']);",
          "",
          "[Added Lines]",
          "425:         $this->assertSame(",
          "426:             [",
          "427:                 'doctrine.event_listener' => [",
          "428:                     [",
          "429:                         'event' => 'onSchemaIndexDefinition',",
          "430:                     ],",
          "431:                     [",
          "432:                         'event' => 'postGenerateSchema',",
          "433:                     ],",
          "434:                 ],",
          "435:             ],",
          "436:             $definition->getTags()",
          "437:         );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "394:         $this->assertSame(ExceptionConverterListener::class, $definition->getClass());",
          "395:         $this->assertTrue($definition->isPrivate());",
          "403:     }",
          "405:     public function testRegistersTheInsecureInstallationListener(): void",
          "",
          "[Removed Lines]",
          "397:         $tags = $definition->getTags();",
          "399:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "400:         $this->assertSame('kernel.exception', $tags['kernel.event_listener'][0]['event']);",
          "401:         $this->assertSame('onKernelException', $tags['kernel.event_listener'][0]['method']);",
          "402:         $this->assertSame(96, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "449:         $this->assertSame(",
          "450:             [",
          "451:                 'kernel.event_listener' => [",
          "452:                     [",
          "453:                         'event' => 'kernel.exception',",
          "454:                         'method' => 'onKernelException',",
          "455:                         'priority' => 96,",
          "456:                     ],",
          "457:                 ],",
          "458:             ],",
          "459:             $definition->getTags()",
          "460:         );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "411:         $this->assertSame(InsecureInstallationListener::class, $definition->getClass());",
          "412:         $this->assertTrue($definition->isPrivate());",
          "419:     }",
          "421:     public function testRegistersTheAssetInsertTagListener(): void",
          "",
          "[Removed Lines]",
          "414:         $tags = $definition->getTags();",
          "416:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "417:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "418:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "472:         $this->assertSame(",
          "473:             [",
          "474:                 'kernel.event_listener' => [",
          "475:                     [",
          "476:                         'event' => 'kernel.request',",
          "477:                         'method' => 'onKernelRequest',",
          "478:                     ],",
          "479:                 ],",
          "480:             ],",
          "481:             $definition->getTags()",
          "482:         );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "428:         $this->assertTrue($definition->isPrivate());",
          "429:         $this->assertSame('assets.packages', (string) $definition->getArgument(0));",
          "435:     }",
          "437:     public function testRegistersTheTranslationInsertTagListener(): void",
          "",
          "[Removed Lines]",
          "431:         $tags = $definition->getTags();",
          "433:         $this->assertArrayHasKey('contao.hook', $tags);",
          "434:         $this->assertSame('replaceInsertTags', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "495:         $this->assertSame(",
          "496:             [",
          "497:                 'contao.hook' => [",
          "498:                     [",
          "499:                         'hook' => 'replaceInsertTags',",
          "500:                     ],",
          "501:                 ],",
          "502:             ],",
          "503:             $definition->getTags()",
          "504:         );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "444:         $this->assertTrue($definition->isPrivate());",
          "445:         $this->assertSame('translator', (string) $definition->getArgument(0));",
          "451:     }",
          "453:     public function testRegistersTheLocaleListener(): void",
          "",
          "[Removed Lines]",
          "447:         $tags = $definition->getTags();",
          "449:         $this->assertArrayHasKey('contao.hook', $tags);",
          "450:         $this->assertSame('replaceInsertTags', $tags['contao.hook'][0]['hook']);",
          "",
          "[Added Lines]",
          "517:         $this->assertSame(",
          "518:             [",
          "519:                 'contao.hook' => [",
          "520:                     [",
          "521:                         'hook' => 'replaceInsertTags',",
          "522:                     ],",
          "523:                 ],",
          "524:             ],",
          "525:             $definition->getTags()",
          "526:         );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "462:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "463:         $this->assertSame('%contao.locales%', (string) $definition->getArgument(2));",
          "474:     }",
          "476:     public function testRegistersTheMakeResponsePrivateListener(): void",
          "",
          "[Removed Lines]",
          "465:         $tags = $definition->getTags();",
          "467:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "468:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "469:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "470:         $this->assertSame(20, $tags['kernel.event_listener'][0]['priority']);",
          "471:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][1]['event']);",
          "472:         $this->assertSame('setTranslatorLocale', $tags['kernel.event_listener'][1]['method']);",
          "473:         $this->assertSame(100, $tags['kernel.event_listener'][1]['priority']);",
          "",
          "[Added Lines]",
          "541:         $this->assertSame(",
          "542:             [",
          "543:                 'kernel.event_listener' => [",
          "544:                     [",
          "545:                         'event' => 'kernel.request',",
          "546:                         'method' => 'onKernelRequest',",
          "547:                         'priority' => 20,",
          "548:                     ],",
          "549:                     [",
          "550:                         'event' => 'kernel.request',",
          "551:                         'method' => 'setTranslatorLocale',",
          "552:                         'priority' => 100,",
          "553:                     ],",
          "554:                 ],",
          "555:             ],",
          "556:             $definition->getTags()",
          "557:         );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "485:         $tags = $definition->getTags();",
          "491:         $priority = $tags['kernel.event_listener'][0]['priority'] ?? 0;",
          "",
          "[Removed Lines]",
          "487:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "488:         $this->assertSame('kernel.response', $tags['kernel.event_listener'][0]['event']);",
          "489:         $this->assertSame('onKernelResponse', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "571:         $this->assertSame(",
          "572:             [",
          "573:                 'kernel.event_listener' => [",
          "574:                     [",
          "575:                         'event' => 'kernel.response',",
          "576:                         'method' => 'onKernelResponse',",
          "577:                     ],",
          "578:                 ],",
          "579:             ],",
          "580:             $tags",
          "581:         );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "508:         $this->assertTrue($definition->isPrivate());",
          "509:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "520:     }",
          "522:     public function testRegistersThePrettyErrorScreensListener(): void",
          "",
          "[Removed Lines]",
          "511:         $tags = $definition->getTags();",
          "513:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "514:         $this->assertSame('kernel.response', $tags['kernel.event_listener'][0]['event']);",
          "515:         $this->assertSame('onKernelResponse', $tags['kernel.event_listener'][0]['method']);",
          "516:         $this->assertSame(256, $tags['kernel.event_listener'][0]['priority']);",
          "518:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "519:         $this->assertSame('reset', $tags['kernel.reset'][0]['method']);",
          "",
          "[Added Lines]",
          "603:         $this->assertSame(",
          "604:             [",
          "605:                 'kernel.event_listener' => [",
          "606:                     [",
          "607:                         'event' => 'kernel.response',",
          "608:                         'method' => 'onKernelResponse',",
          "609:                         'priority' => 256,",
          "610:                     ],",
          "611:                 ],",
          "612:                 'kernel.reset' => [",
          "613:                     [",
          "614:                         'method' => 'reset',",
          "615:                     ],",
          "616:                 ],",
          "617:             ],",
          "618:             $definition->getTags()",
          "619:         );",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "532:         $this->assertSame('contao.framework', (string) $definition->getArgument(2));",
          "533:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "541:     }",
          "543:     public function testRegistersTheRefererIdListener(): void",
          "",
          "[Removed Lines]",
          "535:         $tags = $definition->getTags();",
          "537:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "538:         $this->assertSame('kernel.exception', $tags['kernel.event_listener'][0]['event']);",
          "539:         $this->assertSame('onKernelException', $tags['kernel.event_listener'][0]['method']);",
          "540:         $this->assertSame(-96, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "635:         $this->assertSame(",
          "636:             [",
          "637:                 'kernel.event_listener' => [",
          "638:                     [",
          "639:                         'event' => 'kernel.exception',",
          "640:                         'method' => 'onKernelException',",
          "641:                         'priority' => -96,",
          "642:                     ],",
          "643:                 ],",
          "644:             ],",
          "645:             $definition->getTags()",
          "646:         );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "551:         $this->assertSame('contao.token_generator', (string) $definition->getArgument(0));",
          "552:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "560:     }",
          "562:     public function testRegistersTheRequestTokenListener(): void",
          "",
          "[Removed Lines]",
          "554:         $tags = $definition->getTags();",
          "556:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "557:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "558:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "559:         $this->assertSame(20, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "660:         $this->assertSame(",
          "661:             [",
          "662:                 'kernel.event_listener' => [",
          "663:                     [",
          "664:                         'event' => 'kernel.request',",
          "665:                         'method' => 'onKernelRequest',",
          "666:                         'priority' => 20,",
          "667:                     ],",
          "668:                 ],",
          "669:             ],",
          "670:             $definition->getTags()",
          "671:         );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "573:         $this->assertSame('%contao.csrf_token_name%', (string) $definition->getArgument(3));",
          "574:         $this->assertSame('%contao.csrf_cookie_prefix%', (string) $definition->getArgument(4));",
          "582:     }",
          "584:     public function testRegistersTheResponseExceptionListener(): void",
          "",
          "[Removed Lines]",
          "576:         $tags = $definition->getTags();",
          "578:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "579:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "580:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "581:         $this->assertSame(14, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "688:         $this->assertSame(",
          "689:             [",
          "690:                 'kernel.event_listener' => [",
          "691:                     [",
          "692:                         'event' => 'kernel.request',",
          "693:                         'method' => 'onKernelRequest',",
          "694:                         'priority' => 14,",
          "695:                     ],",
          "696:                 ],",
          "697:             ],",
          "698:             $definition->getTags()",
          "699:         );",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "590:         $this->assertSame(ResponseExceptionListener::class, $definition->getClass());",
          "591:         $this->assertTrue($definition->isPrivate());",
          "599:     }",
          "601:     public function testRegistersTheRobotsTxtListener(): void",
          "",
          "[Removed Lines]",
          "593:         $tags = $definition->getTags();",
          "595:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "596:         $this->assertSame('kernel.exception', $tags['kernel.event_listener'][0]['event']);",
          "597:         $this->assertSame('onKernelException', $tags['kernel.event_listener'][0]['method']);",
          "598:         $this->assertSame(64, $tags['kernel.event_listener'][0]['priority']);",
          "",
          "[Added Lines]",
          "711:         $this->assertSame(",
          "712:             [",
          "713:                 'kernel.event_listener' => [",
          "714:                     [",
          "715:                         'event' => 'kernel.exception',",
          "716:                         'method' => 'onKernelException',",
          "717:                         'priority' => 64,",
          "718:                     ],",
          "719:                 ],",
          "720:             ],",
          "721:             $definition->getTags()",
          "722:         );",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "608:         $this->assertTrue($definition->isPrivate());",
          "609:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "616:     }",
          "618:     public function testRegistersTheSearchIndexListener(): void",
          "",
          "[Removed Lines]",
          "611:         $tags = $definition->getTags();",
          "613:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "614:         $this->assertSame('contao.robots_txt', $tags['kernel.event_listener'][0]['event']);",
          "615:         $this->assertSame('onRobotsTxt', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "735:         $this->assertSame(",
          "736:             [",
          "737:                 'kernel.event_listener' => [",
          "738:                     [",
          "739:                         'event' => 'contao.robots_txt',",
          "740:                         'method' => 'onRobotsTxt',",
          "741:                     ],",
          "742:                 ],",
          "743:             ],",
          "744:             $definition->getTags()",
          "745:         );",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "626:         $this->assertSame('contao.search.indexer', (string) $definition->getArgument(0));",
          "627:         $this->assertSame('%fragment.path%', (string) $definition->getArgument(1));",
          "634:     }",
          "636:     public function testRegistersTheStoreRefererListener(): void",
          "",
          "[Removed Lines]",
          "629:         $tags = $definition->getTags();",
          "631:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "632:         $this->assertSame('kernel.terminate', $tags['kernel.event_listener'][0]['event']);",
          "633:         $this->assertSame('onKernelTerminate', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "759:         $this->assertSame(",
          "760:             [",
          "761:                 'kernel.event_listener' => [",
          "762:                     [",
          "763:                         'event' => 'kernel.terminate',",
          "764:                         'method' => 'onKernelTerminate',",
          "765:                     ],",
          "766:                 ],",
          "767:             ],",
          "768:             $definition->getTags()",
          "769:         );",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "644:         $this->assertSame('security.helper', (string) $definition->getArgument(0));",
          "645:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "652:     }",
          "654:     public function testRegistersTheSwitchUserListener(): void",
          "",
          "[Removed Lines]",
          "647:         $tags = $definition->getTags();",
          "649:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "650:         $this->assertSame('kernel.response', $tags['kernel.event_listener'][0]['event']);",
          "651:         $this->assertSame('onKernelResponse', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "783:         $this->assertSame(",
          "784:             [",
          "785:                 'kernel.event_listener' => [",
          "786:                     [",
          "787:                         'event' => 'kernel.response',",
          "788:                         'method' => 'onKernelResponse',",
          "789:                     ],",
          "790:                 ],",
          "791:             ],",
          "792:             $definition->getTags()",
          "793:         );",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "662:         $this->assertSame('security.token_storage', (string) $definition->getArgument(0));",
          "663:         $this->assertSame('logger', (string) $definition->getArgument(1));",
          "670:     }",
          "672:     public function testRegistersTheTwoFactorFrontendListener(): void",
          "",
          "[Removed Lines]",
          "665:         $tags = $definition->getTags();",
          "667:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "668:         $this->assertSame('security.switch_user', $tags['kernel.event_listener'][0]['event']);",
          "669:         $this->assertSame('onSwitchUser', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "807:         $this->assertSame(",
          "808:             [",
          "809:                 'kernel.event_listener' => [",
          "810:                     [",
          "811:                         'event' => 'security.switch_user',",
          "812:                         'method' => 'onSwitchUser',",
          "813:                     ],",
          "814:                 ],",
          "815:             ],",
          "816:             $definition->getTags()",
          "817:         );",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "682:         $this->assertSame('security.token_storage', (string) $definition->getArgument(2));",
          "683:         $this->assertSame('%scheb_two_factor.security_tokens%', (string) $definition->getArgument(3));",
          "690:     }",
          "692:     public function testRegistersTheUserSessionListener(): void",
          "",
          "[Removed Lines]",
          "685:         $tags = $definition->getTags();",
          "687:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "688:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "689:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "833:         $this->assertSame(",
          "834:             [",
          "835:                 'kernel.event_listener' => [",
          "836:                     [",
          "837:                         'event' => 'kernel.request',",
          "838:                         'method' => 'onKernelRequest',",
          "839:                     ],",
          "840:                 ],",
          "841:             ],",
          "842:             $definition->getTags()",
          "843:         );",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "702:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(2));",
          "703:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(3));",
          "710:     }",
          "712:     public function testRegistersTheAssetPluginContext(): void",
          "",
          "[Removed Lines]",
          "705:         $tags = $definition->getTags();",
          "707:         $this->assertArrayHasKey('kernel.event_listener', $tags);",
          "708:         $this->assertSame('kernel.request', $tags['kernel.event_listener'][0]['event']);",
          "709:         $this->assertSame('onKernelRequest', $tags['kernel.event_listener'][0]['method']);",
          "",
          "[Added Lines]",
          "859:         $this->assertSame(",
          "860:             [",
          "861:                 'kernel.event_listener' => [",
          "862:                     [",
          "863:                         'event' => 'kernel.request',",
          "864:                         'method' => 'onKernelRequest',",
          "865:                     ],",
          "866:                 ],",
          "867:             ],",
          "868:             $definition->getTags()",
          "869:         );",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "795:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "796:         $this->assertSame('fos_http_cache.http.symfony_response_tagger', (string) $definition->getArgument(1));",
          "801:     }",
          "803:     public function testRegistersTheFrontendController(): void",
          "",
          "[Removed Lines]",
          "798:         $tags = $definition->getTags();",
          "800:         $this->assertArrayHasKey('controller.service_arguments', $tags);",
          "",
          "[Added Lines]",
          "958:         $this->assertSame(",
          "959:             [",
          "960:                 'controller.service_arguments' => [",
          "961:                     [],",
          "962:                 ],",
          "963:             ],",
          "964:             $definition->getTags()",
          "965:         );",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "818:         $this->assertTrue($definition->isPrivate());",
          "824:     }",
          "826:     public function tesRegistersTheImagesController(): void",
          "",
          "[Removed Lines]",
          "820:         $tags = $definition->getTags();",
          "822:         $this->assertArrayHasKey('contao.frontend_module', $tags);",
          "823:         $this->assertSame('user', $tags['contao.frontend_module'][0]['category']);",
          "",
          "[Added Lines]",
          "985:         $this->assertSame(",
          "986:             [",
          "987:                 'contao.frontend_module' => [",
          "988:                     [",
          "989:                         'category' => 'user',",
          "990:                     ],",
          "991:                 ],",
          "992:             ],",
          "993:             $definition->getTags()",
          "994:         );",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "856:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "857:         $this->assertSame('event_dispatcher', (string) $definition->getArgument(1));",
          "862:     }",
          "864:     public function testRegistersTheControllerResolver(): void",
          "",
          "[Removed Lines]",
          "859:         $tags = $definition->getTags();",
          "861:         $this->assertArrayHasKey('controller.service_arguments', $tags);",
          "",
          "[Added Lines]",
          "1030:         $this->assertSame(",
          "1031:             [",
          "1032:                 'controller.service_arguments' => [",
          "1033:                     [],",
          "1034:                 ],",
          "1035:             ],",
          "1036:             $definition->getTags()",
          "1037:         );",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "883:         $this->assertTrue($definition->isPrivate());",
          "884:         $this->assertSame('database_connection', (string) $definition->getArgument(0));",
          "889:     }",
          "891:     public function testRegistersTheCsrfTokenManager(): void",
          "",
          "[Removed Lines]",
          "886:         $tags = $definition->getTags();",
          "888:         $this->assertArrayHasKey('nelmio_cors.options_provider', $tags);",
          "",
          "[Added Lines]",
          "1062:         $this->assertSame(",
          "1063:             [",
          "1064:                 'nelmio_cors.options_provider' => [",
          "1065:                     [],",
          "1066:                 ],",
          "1067:             ],",
          "1068:             $definition->getTags()",
          "1069:         );",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "909:         $this->assertSame(MemoryTokenStorage::class, $definition->getClass());",
          "910:         $this->assertTrue($definition->isPrivate());",
          "916:     }",
          "918:     public function testRegistersTheDataCollector(): void",
          "",
          "[Removed Lines]",
          "912:         $tags = $definition->getTags();",
          "914:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "915:         $this->assertSame([['method' => 'reset']], $tags['kernel.reset']);",
          "",
          "[Added Lines]",
          "1093:         $this->assertSame(",
          "1094:             [",
          "1095:                 'kernel.reset' => [",
          "1096:                     [",
          "1097:                         'method' => 'reset',",
          "1098:                     ],",
          "1099:                 ],",
          "1100:             ],",
          "1101:             $definition->getTags()",
          "1102:         );",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "924:         $this->assertSame(ContaoDataCollector::class, $definition->getClass());",
          "925:         $this->assertTrue($definition->isPrivate());",
          "932:     }",
          "934:     public function testRegistersTheDoctrineSchemaProvider(): void",
          "",
          "[Removed Lines]",
          "927:         $tags = $definition->getTags();",
          "929:         $this->assertArrayHasKey('data_collector', $tags);",
          "930:         $this->assertSame('@ContaoCore/Collector/contao.html.twig', $tags['data_collector'][0]['template']);",
          "931:         $this->assertSame('contao', $tags['data_collector'][0]['id']);",
          "",
          "[Added Lines]",
          "1114:         $this->assertSame(",
          "1115:             [",
          "1116:                 'data_collector' => [",
          "1117:                     [",
          "1118:                         'template' => '@ContaoCore/Collector/contao.html.twig',",
          "1119:                         'id' => 'contao',",
          "1120:                     ],",
          "1121:                 ],",
          "1122:             ],",
          "1123:             $definition->getTags()",
          "1124:         );",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "997:         $this->assertSame('setFragmentPath', $calls[0][0]);",
          "998:         $this->assertSame('%fragment.path%', (string) $calls[0][1][0]);",
          "1004:     }",
          "1006:     public function testRegistersTheContaoFramework(): void",
          "",
          "[Removed Lines]",
          "1000:         $tags = $definition->getTags();",
          "1002:         $this->assertArrayHasKey('kernel.fragment_renderer', $tags);",
          "1003:         $this->assertSame('forward', $tags['kernel.fragment_renderer'][0]['alias']);",
          "",
          "[Added Lines]",
          "1193:         $this->assertSame(",
          "1194:             [",
          "1195:                 'kernel.fragment_renderer' => [",
          "1196:                     [",
          "1197:                         'alias' => 'forward',",
          "1198:                     ],",
          "1199:                 ],",
          "1200:             ],",
          "1201:             $definition->getTags()",
          "1202:         );",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1017:         $this->assertSame('%kernel.project_dir%', (string) $definition->getArgument(3));",
          "1018:         $this->assertSame('%contao.error_level%', (string) $definition->getArgument(4));",
          "1024:     }",
          "1026:     public function testRegistersTheDeferredImageStorage(): void",
          "",
          "[Removed Lines]",
          "1020:         $tags = $definition->getTags();",
          "1022:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "1023:         $this->assertSame('reset', $tags['kernel.reset'][0]['method']);",
          "",
          "[Added Lines]",
          "1219:         $this->assertSame(",
          "1220:             [",
          "1221:                 'kernel.reset' => [",
          "1222:                     [",
          "1223:                         'method' => 'reset',",
          "1224:                     ],",
          "1225:                 ],",
          "1226:             ],",
          "1227:             $definition->getTags()",
          "1228:         );",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1033:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(0));",
          "1034:         $this->assertSame('filesystem', (string) $definition->getArgument(1));",
          "1040:     }",
          "1042:     public function testRegistersTheImageImagineService(): void",
          "",
          "[Removed Lines]",
          "1036:         $tags = $definition->getTags();",
          "1038:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "1039:         $this->assertSame('reset', $tags['kernel.reset'][0]['method']);",
          "",
          "[Added Lines]",
          "1241:         $this->assertSame(",
          "1242:             [",
          "1243:                 'kernel.reset' => [",
          "1244:                     [",
          "1245:                         'method' => 'reset',",
          "1246:                     ],",
          "1247:                 ],",
          "1248:             ],",
          "1249:             $definition->getTags()",
          "1250:         );",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1115:         $this->assertSame('contao.framework', (string) $definition->getArgument(2));",
          "1116:         $this->assertSame('contao.translation.translator', (string) $definition->getArgument(3));",
          "1122:     }",
          "1124:     public function testRegistersTheImagePictureFactory(): void",
          "",
          "[Removed Lines]",
          "1118:         $tags = $definition->getTags();",
          "1120:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "1121:         $this->assertSame('reset', $tags['kernel.reset'][0]['method']);",
          "",
          "[Added Lines]",
          "1329:         $this->assertSame(",
          "1330:             [",
          "1331:                 'kernel.reset' => [",
          "1332:                     [",
          "1333:                         'method' => 'reset',",
          "1334:                     ],",
          "1335:                 ],",
          "1336:             ],",
          "1337:             $definition->getTags()",
          "1338:         );",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1203:         $this->assertSame('contao.framework', (string) $definition->getArgument(0));",
          "1204:         $this->assertSame('contao.routing.scope_matcher', (string) $definition->getArgument(1));",
          "1210:     }",
          "1212:     public function testRegistersTheMonologHandler(): void",
          "",
          "[Removed Lines]",
          "1206:         $tags = $definition->getTags();",
          "1208:         $this->assertArrayHasKey('controller.argument_value_resolver', $tags);",
          "1209:         $this->assertSame(101, $tags['controller.argument_value_resolver'][0]['priority']);",
          "",
          "[Added Lines]",
          "1423:         $this->assertSame(",
          "1424:             [",
          "1425:                 'controller.argument_value_resolver' => [",
          "1426:                     [",
          "1427:                         'priority' => 101,",
          "1428:                     ],",
          "1429:                 ],",
          "1430:             ],",
          "1431:             $definition->getTags()",
          "1432:         );",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1220:         $this->assertSame('debug', (string) $definition->getArgument(0));",
          "1221:         $this->assertFalse($definition->getArgument(1));",
          "1227:     }",
          "1229:     public function testRegistersTheMonologProcessor(): void",
          "",
          "[Removed Lines]",
          "1223:         $tags = $definition->getTags();",
          "1225:         $this->assertArrayHasKey('monolog.logger', $tags);",
          "1226:         $this->assertSame('contao', $tags['monolog.logger'][0]['channel']);",
          "",
          "[Added Lines]",
          "1446:         $this->assertSame(",
          "1447:             [",
          "1448:                 'monolog.logger' => [",
          "1449:                     [",
          "1450:                         'channel' => 'contao',",
          "1451:                     ],",
          "1452:                 ],",
          "1453:             ],",
          "1454:             $definition->getTags()",
          "1455:         );",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1290:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "1291:         $this->assertSame('%contao.upload_path%', (string) $definition->getArgument(4));",
          "1297:     }",
          "1299:     public function testRegistersThePagePickerProvider(): void",
          "",
          "[Removed Lines]",
          "1293:         $tags = $definition->getTags();",
          "1295:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "1296:         $this->assertSame(160, $tags['contao.picker_provider'][0]['priority']);",
          "",
          "[Added Lines]",
          "1522:         $this->assertSame(",
          "1523:             [",
          "1524:                 'contao.picker_provider' => [",
          "1525:                     [",
          "1526:                         'priority' => 160,",
          "1527:                     ],",
          "1528:                 ],",
          "1529:             ],",
          "1530:             $definition->getTags()",
          "1531:         );",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1309:         $this->assertSame('translator', (string) $definition->getArgument(2));",
          "1310:         $this->assertSame('security.helper', (string) $definition->getArgument(3));",
          "1316:     }",
          "1318:     public function testRegistersTheTablePickerProvider(): void",
          "",
          "[Removed Lines]",
          "1312:         $tags = $definition->getTags();",
          "1314:         $this->assertArrayHasKey('contao.picker_provider', $tags);",
          "1315:         $this->assertSame(192, $tags['contao.picker_provider'][0]['priority']);",
          "",
          "[Added Lines]",
          "1547:         $this->assertSame(",
          "1548:             [",
          "1549:                 'contao.picker_provider' => [",
          "1550:                     [",
          "1551:                         'priority' => 192,",
          "1552:                     ],",
          "1553:                 ],",
          "1554:             ],",
          "1555:             $definition->getTags()",
          "1556:         );",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1414:         $this->assertSame('%contao.prepend_locale%', (string) $definition->getArgument(0));",
          "1415:         $this->assertSame('%contao.url_suffix%', (string) $definition->getArgument(1));",
          "1420:     }",
          "1422:     public function testRegistersTheRoutingFrontendMatcher(): void",
          "",
          "[Removed Lines]",
          "1417:         $tags = $definition->getTags();",
          "1419:         $this->assertArrayHasKey('routing.loader', $tags);",
          "",
          "[Added Lines]",
          "1658:         $this->assertSame(",
          "1659:             [",
          "1660:                 'routing.loader' => [",
          "1661:                     [],",
          "1662:                 ],",
          "1663:             ],",
          "1664:             $definition->getTags()",
          "1665:         );",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1446:         $this->assertSame('%contao.image.target_dir%', (string) $definition->getArgument(1));",
          "1447:         $this->assertSame('filesystem', (string) $definition->getArgument(2));",
          "1452:     }",
          "1454:     public function testRegistersTheRoutingInputEnhancer(): void",
          "",
          "[Removed Lines]",
          "1449:         $tags = $definition->getTags();",
          "1451:         $this->assertArrayHasKey('routing.loader', $tags);",
          "",
          "[Added Lines]",
          "1695:         $this->assertSame(",
          "1696:             [",
          "1697:                 'routing.loader' => [",
          "1698:                     [],",
          "1699:                 ],",
          "1700:             ],",
          "1701:             $definition->getTags()",
          "1702:         );",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1542:         $this->assertSame('addRouteEnhancer', $methodCalls[0][0]);",
          "1543:         $this->assertSame('contao.routing.input_enhancer', (string) $methodCalls[0][1][0]);",
          "1549:     }",
          "1551:     public function testRegistersTheRoutingPublishedFilter(): void",
          "",
          "[Removed Lines]",
          "1545:         $tags = $definition->getTags();",
          "1547:         $this->assertArrayHasKey('router', $tags);",
          "1548:         $this->assertSame(20, $tags['router'][0]['priority']);",
          "",
          "[Added Lines]",
          "1796:         $this->assertSame(",
          "1797:             [",
          "1798:                 'router' => [",
          "1799:                     [",
          "1800:                         'priority' => 20,",
          "1801:                     ],",
          "1802:                 ],",
          "1803:             ],",
          "1804:             $definition->getTags()",
          "1805:         );",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1632:         $this->assertTrue($definition->isPrivate());",
          "1633:         $this->assertSame('contao.search.indexer', (string) $definition->getArgument(0));",
          "1638:     }",
          "1640:     public function testRegistersTheSecurityAuthenticationFailureHandler(): void",
          "",
          "[Removed Lines]",
          "1635:         $tags = $definition->getTags();",
          "1637:         $this->assertArrayHasKey('contao.escargot_subscriber', $tags);",
          "",
          "[Added Lines]",
          "1892:         $this->assertSame(",
          "1893:             [",
          "1894:                 'contao.escargot_subscriber' => [",
          "1895:                     [],",
          "1896:                 ],",
          "1897:             ],",
          "1898:             $definition->getTags()",
          "1899:         );",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1730:         $this->assertNull($definition->getArgument(4));",
          "1731:         $this->assertSame('logger', (string) $definition->getArgument(5));",
          "1737:     }",
          "1739:     public function testRegistersTheSecurityFrontendPreviewAuthenticator(): void",
          "",
          "[Removed Lines]",
          "1733:         $tags = $definition->getTags();",
          "1735:         $this->assertArrayHasKey('monolog.logger', $tags);",
          "1736:         $this->assertSame('security', $tags['monolog.logger'][0]['channel']);",
          "",
          "[Added Lines]",
          "1995:         $this->assertSame(",
          "1996:             [",
          "1997:                 'monolog.logger' => [",
          "1998:                     [",
          "1999:                         'channel' => 'security',",
          "2000:                     ],",
          "2001:                 ],",
          "2002:             ],",
          "2003:             $definition->getTags()",
          "2004:         );",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1824:         $this->assertTrue($definition->isPrivate());",
          "1825:         $this->assertSame('contao.security.two_factor.authenticator', (string) $definition->getArgument(0));",
          "1831:     }",
          "1833:     public function testRegistersTheSecurityUserChecker(): void",
          "",
          "[Removed Lines]",
          "1827:         $tags = $definition->getTags();",
          "1829:         $this->assertArrayHasKey('scheb_two_factor.provider', $tags);",
          "1830:         $this->assertSame('contao', $tags['scheb_two_factor.provider'][0]['alias']);",
          "",
          "[Added Lines]",
          "2095:         $this->assertSame(",
          "2096:             [",
          "2097:                 'scheb_two_factor.provider' => [",
          "2098:                     [",
          "2099:                         'alias' => 'contao',",
          "2100:                     ],",
          "2101:                 ],",
          "2102:             ],",
          "2103:             $definition->getTags()",
          "2104:         );",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1943:         $this->assertNull($definition->getDecoratedService());",
          "1944:         $this->assertSame('contao.translation.translator.data_collector.inner', (string) $definition->getArgument(0));",
          "1950:     }",
          "1952:     public function testRegistersTheTwigTemplateExtension(): void",
          "",
          "[Removed Lines]",
          "1946:         $tags = $definition->getTags();",
          "1948:         $this->assertArrayHasKey('kernel.reset', $tags);",
          "1949:         $this->assertSame('reset', $tags['kernel.reset'][0]['method']);",
          "",
          "[Added Lines]",
          "2220:         $this->assertSame(",
          "2221:             [",
          "2222:                 'kernel.reset' => [",
          "2223:                     [",
          "2224:                         'method' => 'reset',",
          "2225:                     ],",
          "2226:                 ],",
          "2227:             ],",
          "2228:             $definition->getTags()",
          "2229:         );",
          "",
          "---------------"
        ]
      }
    }
  ]
}