{
  "cve_id": "CVE-2019-3808",
  "cve_desc": "A flaw was found in Moodle versions 3.6 to 3.6.1, 3.5 to 3.5.3, 3.4 to 3.4.6, 3.1 to 3.1.15 and earlier unsupported versions. The 'manage groups' capability did not have the 'XSS risk' flag assigned to it, but does have that access in certain places. Note that the capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",
  "repo": "moodle/moodle",
  "patch_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
  "patch_info": {
    "commit_hash": "6360f87cdca744a6a71c315853f6d811a3e54e26",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/6360f87cdca744a6a71c315853f6d811a3e54e26",
    "files": [
      "lib/db/access.php",
      "version.php"
    ],
    "message": "MDL-64395 groups: Added XSS Risk to the manage groups capability",
    "before_after_code_files": [
      "lib/db/access.php||lib/db/access.php",
      "version.php||version.php"
    ]
  },
  "patch_diff": {
    "lib/db/access.php||lib/db/access.php": [
      "File: lib/db/access.php -> lib/db/access.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1123:     ),",
      "1125:     'moodle/course:managegroups' => array(",
      "1127:         'captype' => 'write',",
      "1128:         'contextlevel' => CONTEXT_COURSE,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1126:         'riskbitmask' => RISK_XSS,",
      "",
      "---------------"
    ],
    "version.php||version.php": [
      "File: version.php -> version.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: defined('MOODLE_INTERNAL') || die();",
      "",
      "[Removed Lines]",
      "32: $version  = 2018122000.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "[Added Lines]",
      "32: $version  = 2018122000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c092f75791be10f8f2ee382cd73ac1cdcf3a6feb",
      "candidate_info": {
        "commit_hash": "c092f75791be10f8f2ee382cd73ac1cdcf3a6feb",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/c092f75791be10f8f2ee382cd73ac1cdcf3a6feb",
        "files": [
          "version.php"
        ],
        "message": "weekly release 3.7dev",
        "before_after_code_files": [
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "38: $branch   = '37';                       // This version's branch.",
          "39: $maturity = MATURITY_ALPHA;             // This version's maturity level.",
          "",
          "[Removed Lines]",
          "32: $version  = 2019011503.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20190111)'; // Human-friendly version name",
          "",
          "[Added Lines]",
          "32: $version  = 2019011800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "36: $release  = '3.7dev (Build: 20190118)'; // Human-friendly version name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4274bd95140f08ef23828df17ebb21d739e6a43",
      "candidate_info": {
        "commit_hash": "d4274bd95140f08ef23828df17ebb21d739e6a43",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/d4274bd95140f08ef23828df17ebb21d739e6a43",
        "files": [
          "admin/settings/analytics.php",
          "admin/tool/analytics/classes/output/form/edit_model.php",
          "admin/tool/analytics/model.php",
          "analytics/classes/manager.php",
          "analytics/classes/model.php",
          "analytics/tests/prediction_test.php",
          "lang/en/analytics.php",
          "lib/classes/plugininfo/mlbackend.php",
          "lib/db/install.xml",
          "lib/db/upgrade.php",
          "version.php"
        ],
        "message": "Merge branch 'MDL-60520_master' of git://github.com/dmonllao/moodle",
        "before_after_code_files": [
          "admin/settings/analytics.php||admin/settings/analytics.php",
          "admin/tool/analytics/classes/output/form/edit_model.php||admin/tool/analytics/classes/output/form/edit_model.php",
          "admin/tool/analytics/model.php||admin/tool/analytics/model.php",
          "analytics/classes/manager.php||analytics/classes/manager.php",
          "analytics/classes/model.php||analytics/classes/model.php",
          "analytics/tests/prediction_test.php||analytics/tests/prediction_test.php",
          "lang/en/analytics.php||lang/en/analytics.php",
          "lib/classes/plugininfo/mlbackend.php||lib/classes/plugininfo/mlbackend.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/analytics.php||admin/settings/analytics.php": [
          "File: admin/settings/analytics.php -> admin/settings/analytics.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:             $predictors[$fullclassname] = new lang_string('pluginname', $pluginname);",
          "38:         }",
          "39:         $settings->add(new \\core_analytics\\admin_setting_predictor('analytics/predictionsprocessor',",
          "42:         );",
          "",
          "[Removed Lines]",
          "40:             new lang_string('predictionsprocessor', 'analytics'), new lang_string('predictionsprocessor_help', 'analytics'),",
          "41:             '\\mlbackend_php\\processor', $predictors)",
          "",
          "[Added Lines]",
          "40:             new lang_string('defaultpredictionsprocessor', 'analytics'), new lang_string('predictionsprocessor_help', 'analytics'),",
          "41:             \\core_analytics\\manager::default_mlbackend(), $predictors)",
          "",
          "---------------"
        ],
        "admin/tool/analytics/classes/output/form/edit_model.php||admin/tool/analytics/classes/output/form/edit_model.php": [
          "File: admin/tool/analytics/classes/output/form/edit_model.php -> admin/tool/analytics/classes/output/form/edit_model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:         $mform->addElement('select', 'timesplitting', get_string('timesplittingmethod', 'analytics'), $timesplittings);",
          "73:         $mform->addHelpButton('timesplitting', 'timesplittingmethod', 'analytics');",
          "75:         $mform->addElement('hidden', 'id', $this->_customdata['id']);",
          "76:         $mform->setType('id', PARAM_INT);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:         $defaultprocessor = \\core_analytics\\manager::get_predictions_processor_name(",
          "76:             \\core_analytics\\manager::get_predictions_processor()",
          "77:         );",
          "78:         $predictionprocessors = ['' => get_string('defaultpredictoroption', 'analytics', $defaultprocessor)];",
          "79:         foreach ($this->_customdata['predictionprocessors'] as $classname => $predictionsprocessor) {",
          "80:             if ($predictionsprocessor->is_ready() !== true) {",
          "81:                 continue;",
          "82:             }",
          "83:             $optionname = \\tool_analytics\\output\\helper::class_to_option($classname);",
          "84:             $predictionprocessors[$optionname] = \\core_analytics\\manager::get_predictions_processor_name($predictionsprocessor);",
          "85:         }",
          "87:         $mform->addElement('select', 'predictionsprocessor', get_string('predictionsprocessor', 'analytics'),",
          "88:             $predictionprocessors);",
          "89:         $mform->addHelpButton('predictionsprocessor', 'predictionsprocessor', 'analytics');",
          "",
          "---------------"
        ],
        "admin/tool/analytics/model.php||admin/tool/analytics/model.php": [
          "File: admin/tool/analytics/model.php -> admin/tool/analytics/model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:             'id' => $model->get_id(),",
          "111:             'model' => $model,",
          "112:             'indicators' => $model->get_potential_indicators(),",
          "114:         );",
          "115:         $mform = new \\tool_analytics\\output\\form\\edit_model(null, $customdata);",
          "",
          "[Removed Lines]",
          "113:             'timesplittings' => \\core_analytics\\manager::get_enabled_time_splitting_methods()",
          "",
          "[Added Lines]",
          "113:             'timesplittings' => \\core_analytics\\manager::get_enabled_time_splitting_methods(),",
          "114:             'predictionprocessors' => \\core_analytics\\manager::get_all_prediction_processors()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:                 $indicators[] = \\core_analytics\\manager::get_indicator($indicatorclass);",
          "127:             }",
          "128:             $timesplitting = \\tool_analytics\\output\\helper::option_to_class($data->timesplitting);",
          "130:             redirect(new \\moodle_url('/admin/tool/analytics/index.php'));",
          "131:         }",
          "",
          "[Removed Lines]",
          "129:             $model->update($data->enabled, $indicators, $timesplitting);",
          "",
          "[Added Lines]",
          "130:             $predictionsprocessor = \\tool_analytics\\output\\helper::option_to_class($data->predictionsprocessor);",
          "131:             $model->update($data->enabled, $indicators, $timesplitting, $predictionsprocessor);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:         $callable = array('\\tool_analytics\\output\\helper', 'class_to_option');",
          "138:         $modelobj->indicators = array_map($callable, json_decode($modelobj->indicators));",
          "139:         $modelobj->timesplitting = \\tool_analytics\\output\\helper::class_to_option($modelobj->timesplitting);",
          "140:         $mform->set_data($modelobj);",
          "141:         $mform->display();",
          "142:         break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:         $modelobj->predictionsprocessor = \\tool_analytics\\output\\helper::class_to_option($modelobj->predictionsprocessor);",
          "",
          "---------------"
        ],
        "analytics/classes/manager.php||analytics/classes/manager.php": [
          "File: analytics/classes/manager.php -> analytics/classes/manager.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: class manager {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     const DEFAULT_MLBACKEND = '\\mlbackend_php\\processor';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:         $checkisready = intval($checkisready);",
          "132:             $predictionclass = get_config('analytics', 'predictionsprocessor');",
          "133:         }",
          "135:         if (empty($predictionclass)) {",
          "138:         }",
          "140:         if (!class_exists($predictionclass)) {",
          "",
          "[Removed Lines]",
          "131:         if ($predictionclass === false) {",
          "137:             $predictionclass = '\\mlbackend_php\\processor';",
          "",
          "[Added Lines]",
          "136:         if (!$predictionclass) {",
          "142:             $predictionclass = self::default_mlbackend();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "179:         return $predictionprocessors;",
          "180:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:     public static function get_predictions_processor_name(\\core_analytics\\predictor $predictionsprocessor) {",
          "194:             $component = substr(get_class($predictionsprocessor), 0, strpos(get_class($predictionsprocessor), '\\\\', 1));",
          "195:         return get_string('pluginname', $component);",
          "196:     }",
          "204:     public static function is_mlbackend_used($plugin) {",
          "205:         $models = self::get_all_models();",
          "206:         foreach ($models as $model) {",
          "207:             $processor = $model->get_predictions_processor();",
          "208:             $noprefixnamespace = ltrim(get_class($processor), '\\\\');",
          "209:             $processorplugin = substr($noprefixnamespace, 0, strpos($noprefixnamespace, '\\\\'));",
          "210:             if ($processorplugin == $plugin) {",
          "211:                 return true;",
          "212:             }",
          "213:         }",
          "216:         $defaultprocessorclass = get_config('analytics', 'predictionsprocessor');",
          "217:         $pluginclass = '\\\\' . $plugin . '\\\\processor';",
          "218:         if ($pluginclass === $defaultprocessorclass) {",
          "219:             return true;",
          "220:         }",
          "222:         return false;",
          "223:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "546:         }",
          "547:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:     public static function default_mlbackend() {",
          "598:         return self::DEFAULT_MLBACKEND;",
          "599:     }",
          "",
          "---------------"
        ],
        "analytics/classes/model.php||analytics/classes/model.php": [
          "File: analytics/classes/model.php -> analytics/classes/model.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     protected $target = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:     protected $predictionsprocessor = null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:         global $USER, $DB;",
          "342:         \\core_analytics\\manager::check_can_manage_models();",
          "",
          "[Removed Lines]",
          "339:     public static function create(\\core_analytics\\local\\target\\base $target, array $indicators, $timesplittingid = false) {",
          "",
          "[Added Lines]",
          "344:     public static function create(\\core_analytics\\local\\target\\base $target, array $indicators,",
          "345:                                   $timesplittingid = false, $processor = false) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "353:         $modelobj->timemodified = $now;",
          "354:         $modelobj->usermodified = $USER->id;",
          "356:         $id = $DB->insert_record('analytics_models', $modelobj);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "362:         if ($processor &&",
          "363:                 !self::is_valid($processor, '\\core_analytics\\classifier') &&",
          "364:                 !self::is_valid($processor, '\\core_analytics\\regressor')) {",
          "365:             throw new \\coding_exception('The provided predictions processor \\\\' . $processor . '\\processor is not valid');",
          "366:         } else {",
          "367:             $modelobj->predictionsprocessor = $processor;",
          "368:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "417:         global $USER, $DB;",
          "419:         \\core_analytics\\manager::check_can_manage_models();",
          "",
          "[Removed Lines]",
          "416:     public function update($enabled, $indicators = false, $timesplittingid = '') {",
          "",
          "[Added Lines]",
          "431:     public function update($enabled, $indicators = false, $timesplittingid = '', $predictionsprocessor = false) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "433:             $timesplittingid = $this->model->timesplitting;",
          "434:         }",
          "436:         if ($this->model->timesplitting !== $timesplittingid ||",
          "440:             $this->clear();",
          "",
          "[Removed Lines]",
          "437:                 $this->model->indicators !== $indicatorsstr) {",
          "",
          "[Added Lines]",
          "451:         if ($predictionsprocessor === false) {",
          "453:             $predictionsprocessor = $this->model->predictionsprocessor;",
          "454:         }",
          "457:                 $this->model->indicators !== $indicatorsstr ||",
          "458:                 $this->model->predictionsprocessor !== $predictionsprocessor) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "458:         $this->model->enabled = intval($enabled);",
          "459:         $this->model->indicators = $indicatorsstr;",
          "460:         $this->model->timesplitting = $timesplittingid;",
          "461:         $this->model->timemodified = $now;",
          "462:         $this->model->usermodified = $USER->id;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:         $this->model->predictionsprocessor = $predictionsprocessor;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "477:         $this->clear();",
          "483:         $DB->delete_records('analytics_models', array('id' => $this->model->id));",
          "484:         $DB->delete_records('analytics_models_log', array('modelid' => $this->model->id));",
          "",
          "[Removed Lines]",
          "480:         $predictor = \\core_analytics\\manager::get_predictions_processor();",
          "481:         $predictor->delete_output_dir($this->get_output_dir(array(), true));",
          "",
          "[Added Lines]",
          "502:         $predictor = $this->get_predictions_processor(false);",
          "503:         if ($predictor->is_ready() !== true) {",
          "504:             $predictorname = \\core_analytics\\manager::get_predictions_processor_name($predictor);",
          "505:             debugging('Prediction processor ' . $predictorname . ' is not ready to be used. Model ' .",
          "506:                 $this->model->id . ' could not be deleted.');",
          "507:         } else {",
          "508:             $predictor->delete_output_dir($this->get_output_dir(array(), true));",
          "509:         }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "516:         $this->heavy_duty_mode();",
          "521:         $datasets = $this->get_analyser()->get_labelled_data();",
          "",
          "[Removed Lines]",
          "519:         $predictor = \\core_analytics\\manager::get_predictions_processor();",
          "",
          "[Added Lines]",
          "547:         $predictor = $this->get_predictions_processor();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "608:         $outputdir = $this->get_output_dir(array('execution'));",
          "613:         $datasets = $this->get_analyser()->get_labelled_data();",
          "",
          "[Removed Lines]",
          "611:         $predictor = \\core_analytics\\manager::get_predictions_processor();",
          "",
          "[Added Lines]",
          "639:         $predictor = $this->get_predictions_processor();",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "679:         if (!$this->is_static()) {",
          "681:         }",
          "683:         $samplesdata = $this->get_analyser()->get_unlabelled_data();",
          "",
          "[Removed Lines]",
          "680:             $predictor = \\core_analytics\\manager::get_predictions_processor();",
          "",
          "[Added Lines]",
          "708:             $predictor = $this->get_predictions_processor();",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "738:         return $result;",
          "739:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "775:     public function get_predictions_processor($checkisready = true) {",
          "776:         return manager::get_predictions_processor($this->model->predictionsprocessor, $checkisready);",
          "777:     }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1457:         \\core_analytics\\manager::check_can_manage_models();",
          "1463:         $predictionids = $DB->get_fieldset_select('analytics_predictions', 'id', 'modelid = :modelid',",
          "1464:             array('modelid' => $this->get_id()));",
          "",
          "[Removed Lines]",
          "1460:         $predictor = \\core_analytics\\manager::get_predictions_processor();",
          "1461:         $predictor->clear_model($this->get_unique_id(), $this->get_output_dir());",
          "",
          "[Added Lines]",
          "1498:         $predictor = $this->get_predictions_processor(false);",
          "1499:         if ($predictor->is_ready() !== true) {",
          "1500:             $predictorname = \\core_analytics\\manager::get_predictions_processor_name($predictor);",
          "1501:             debugging('Prediction processor ' . $predictorname . ' is not ready to be used. Model ' .",
          "1502:                 $this->model->id . ' could not be cleared.');",
          "1503:         } else {",
          "1504:             $predictor->clear_model($this->get_unique_id(), $this->get_output_dir());",
          "1505:         }",
          "",
          "---------------"
        ],
        "analytics/tests/prediction_test.php||analytics/tests/prediction_test.php": [
          "File: analytics/tests/prediction_test.php -> analytics/tests/prediction_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:             $this->markTestSkipped('Skipping ' . $predictionsprocessorclass . ' as the predictor is not ready.');",
          "144:         }",
          "148:         $model = $this->add_perfect_model();",
          "152:         $this->assertEquals(0, $DB->count_records('analytics_train_samples', array('modelid' => $model->get_id())));",
          "",
          "[Removed Lines]",
          "146:         set_config('predictionsprocessor', $predictionsprocessorclass, 'analytics');",
          "149:         $model->enable($timesplittingid);",
          "",
          "[Added Lines]",
          "147:         $model->update(true, false, $timesplittingid, get_class($predictionsprocessor));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:             $this->markTestSkipped('Skipping ' . $predictionsprocessorclass . ' as the predictor is not ready.');",
          "424:         }",
          "428:         $results = $model->evaluate();",
          "",
          "[Removed Lines]",
          "426:         set_config('predictionsprocessor', $predictionsprocessorclass, 'analytics');",
          "",
          "[Added Lines]",
          "424:         $model->update(false, false, false, get_class($predictionsprocessor));",
          "",
          "---------------"
        ],
        "lang/en/analytics.php||lang/en/analytics.php": [
          "File: lang/en/analytics.php -> lang/en/analytics.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: $string['analyticssettings'] = 'Analytics settings';",
          "32: $string['coursetoolong'] = 'The course is too long';",
          "33: $string['enabledtimesplittings'] = 'Time splitting methods';",
          "34: $string['disabledmodel'] = 'Disabled model';",
          "35: $string['erroralreadypredict'] = 'File {$a} has already been used to generate predictions.';",
          "36: $string['errorcannotreaddataset'] = 'Dataset file {$a} can not be read';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: $string['defaultpredictionsprocessor'] = 'Default predictions processor';",
          "35: $string['defaultpredictoroption'] = 'Default processor ({$a})';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: $string['onlycli'] = 'Analytics processes execution via command line only';",
          "83: $string['onlycliinfo'] = 'Analytics processes like evaluating models, training machine learning algorithms or getting predictions can take some time, they will run as cron tasks and they can be forced via command line. Disable this setting if you want your site managers to be able to run these processes manually via web interface';",
          "84: $string['predictionsprocessor'] = 'Predictions processor';",
          "86: $string['privacy:metadata:analytics:indicatorcalc'] = 'Indicator calculations';",
          "87: $string['privacy:metadata:analytics:indicatorcalc:starttime'] = 'Calculation start time';",
          "88: $string['privacy:metadata:analytics:indicatorcalc:endtime'] = 'Calculation end time';",
          "",
          "[Removed Lines]",
          "85: $string['predictionsprocessor_help'] = 'A predictions processor is the machine-learning backend that processes the datasets generated by calculating models\\' indicators and targets. All trained algorithms and predictions will be deleted if you change to another predictions processor.';",
          "",
          "[Added Lines]",
          "87: $string['predictionsprocessor_help'] = 'A predictions processor is the machine-learning backend that processes the datasets generated by calculating models\\' indicators and targets. Each model can use a different processor, the one specified here will be the default value.';",
          "",
          "---------------"
        ],
        "lib/classes/plugininfo/mlbackend.php||lib/classes/plugininfo/mlbackend.php": [
          "File: lib/classes/plugininfo/mlbackend.php -> lib/classes/plugininfo/mlbackend.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     public function is_uninstall_allowed() {",
          "44:     }",
          "",
          "[Removed Lines]",
          "43:         return true;",
          "",
          "[Added Lines]",
          "44:         return !\\core_analytics\\manager::is_mlbackend_used('mlbackend_' . $this->name);",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2652:         upgrade_main_savepoint(true, 2018102300.02);",
          "2653:     }",
          "2655:     return true;",
          "2656: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2655:     if ($oldversion < 2018102900.00) {",
          "2657:         $table = new xmldb_table('analytics_models');",
          "2658:         $field = new xmldb_field('predictionsprocessor', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'timesplitting');",
          "2661:         if (!$dbman->field_exists($table, $field)) {",
          "2662:             $dbman->add_field($table, $field);",
          "2663:         }",
          "2666:         upgrade_main_savepoint(true, 2018102900.00);",
          "2667:     }",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018102700.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018102900.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd652de81f97bb26ad439f10ec22e3bd235ef745",
      "candidate_info": {
        "commit_hash": "fd652de81f97bb26ad439f10ec22e3bd235ef745",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/fd652de81f97bb26ad439f10ec22e3bd235ef745",
        "files": [
          "lib/setuplib.php",
          "mod/forum/backup/moodle2/backup_forum_stepslib.php",
          "mod/forum/backup/moodle2/restore_forum_stepslib.php",
          "mod/forum/classes/local/data_mappers/legacy/forum.php",
          "mod/forum/classes/local/entities/forum.php",
          "mod/forum/classes/local/factories/entity.php",
          "mod/forum/classes/local/managers/capability.php",
          "mod/forum/classes/local/renderers/discussion.php",
          "mod/forum/classes/local/renderers/discussion_list.php",
          "mod/forum/db/access.php",
          "mod/forum/db/install.xml",
          "mod/forum/db/upgrade.php",
          "mod/forum/externallib.php",
          "mod/forum/lang/en/forum.php",
          "mod/forum/lib.php",
          "mod/forum/locallib.php",
          "mod/forum/mod_form.php",
          "mod/forum/tests/entities_forum_test.php",
          "mod/forum/tests/externallib_test.php",
          "mod/forum/tests/lib_test.php",
          "mod/forum/tests/locallib_test.php",
          "mod/forum/upgrade.txt",
          "mod/forum/version.php",
          "version.php"
        ],
        "message": "Merge branch 'MDL-31355-master' of git://github.com/rezaies/moodle",
        "before_after_code_files": [
          "lib/setuplib.php||lib/setuplib.php",
          "mod/forum/backup/moodle2/backup_forum_stepslib.php||mod/forum/backup/moodle2/backup_forum_stepslib.php",
          "mod/forum/backup/moodle2/restore_forum_stepslib.php||mod/forum/backup/moodle2/restore_forum_stepslib.php",
          "mod/forum/classes/local/data_mappers/legacy/forum.php||mod/forum/classes/local/data_mappers/legacy/forum.php",
          "mod/forum/classes/local/entities/forum.php||mod/forum/classes/local/entities/forum.php",
          "mod/forum/classes/local/factories/entity.php||mod/forum/classes/local/factories/entity.php",
          "mod/forum/classes/local/managers/capability.php||mod/forum/classes/local/managers/capability.php",
          "mod/forum/classes/local/renderers/discussion.php||mod/forum/classes/local/renderers/discussion.php",
          "mod/forum/classes/local/renderers/discussion_list.php||mod/forum/classes/local/renderers/discussion_list.php",
          "mod/forum/db/access.php||mod/forum/db/access.php",
          "mod/forum/db/upgrade.php||mod/forum/db/upgrade.php",
          "mod/forum/externallib.php||mod/forum/externallib.php",
          "mod/forum/lang/en/forum.php||mod/forum/lang/en/forum.php",
          "mod/forum/lib.php||mod/forum/lib.php",
          "mod/forum/locallib.php||mod/forum/locallib.php",
          "mod/forum/mod_form.php||mod/forum/mod_form.php",
          "mod/forum/tests/entities_forum_test.php||mod/forum/tests/entities_forum_test.php",
          "mod/forum/tests/externallib_test.php||mod/forum/tests/externallib_test.php",
          "mod/forum/tests/lib_test.php||mod/forum/tests/lib_test.php",
          "mod/forum/tests/locallib_test.php||mod/forum/tests/locallib_test.php",
          "mod/forum/version.php||mod/forum/version.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/setuplib.php||lib/setuplib.php": [
          "File: lib/setuplib.php -> lib/setuplib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1408: function is_major_upgrade_required() {",
          "1409:     global $CFG;",
          "1412:     $required = empty($CFG->version);",
          "1413:     $required = $required || (float)$CFG->version < $lastmajordbchanges;",
          "",
          "[Removed Lines]",
          "1410:     $lastmajordbchanges = 2019032900.00;",
          "",
          "[Added Lines]",
          "1410:     $lastmajordbchanges = 2019041000.03;",
          "",
          "---------------"
        ],
        "mod/forum/backup/moodle2/backup_forum_stepslib.php||mod/forum/backup/moodle2/backup_forum_stepslib.php": [
          "File: mod/forum/backup/moodle2/backup_forum_stepslib.php -> mod/forum/backup/moodle2/backup_forum_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:         $forum = new backup_nested_element('forum', array('id'), array(",
          "43:             'assessed', 'assesstimestart', 'assesstimefinish', 'scale',",
          "44:             'maxbytes', 'maxattachments', 'forcesubscribe', 'trackingtype',",
          "45:             'rsstype', 'rssarticles', 'timemodified', 'warnafter',",
          "",
          "[Removed Lines]",
          "42:             'type', 'name', 'intro', 'introformat',",
          "",
          "[Added Lines]",
          "42:             'type', 'name', 'intro', 'introformat', 'duedate', 'cutoffdate',",
          "",
          "---------------"
        ],
        "mod/forum/backup/moodle2/restore_forum_stepslib.php||mod/forum/backup/moodle2/restore_forum_stepslib.php": [
          "File: mod/forum/backup/moodle2/restore_forum_stepslib.php -> mod/forum/backup/moodle2/restore_forum_stepslib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:         $data->assesstimestart = $this->apply_date_offset($data->assesstimestart);",
          "66:         $data->assesstimefinish = $this->apply_date_offset($data->assesstimefinish);",
          "67:         if ($data->scale < 0) { // scale found, get mapping",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:         if (!isset($data->duedate)) {",
          "66:             $data->duedate = 0;",
          "67:         }",
          "68:         $data->duedate = $this->apply_date_offset($data->duedate);",
          "69:         if (!isset($data->cutoffdate)) {",
          "70:             $data->cutoffdate = 0;",
          "71:         }",
          "72:         $data->cutoffdate = $this->apply_date_offset($data->cutoffdate);",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/data_mappers/legacy/forum.php||mod/forum/classes/local/data_mappers/legacy/forum.php": [
          "File: mod/forum/classes/local/data_mappers/legacy/forum.php -> mod/forum/classes/local/data_mappers/legacy/forum.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:                 'completionreplies' => $forum->get_completion_replies(),",
          "70:                 'completionposts' => $forum->get_completion_posts(),",
          "71:                 'displaywordcount' => $forum->should_display_word_count(),",
          "73:             ];",
          "74:         }, $forums);",
          "75:     }",
          "",
          "[Removed Lines]",
          "72:                 'lockdiscussionafter' => $forum->get_lock_discussions_after()",
          "",
          "[Added Lines]",
          "72:                 'lockdiscussionafter' => $forum->get_lock_discussions_after(),",
          "73:                 'duedate' => $forum->get_due_date(),",
          "74:                 'cutoffdate' => $forum->get_cutoff_date()",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/entities/forum.php||mod/forum/classes/local/entities/forum.php": [
          "File: mod/forum/classes/local/entities/forum.php -> mod/forum/classes/local/entities/forum.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     private $displaywordcounts;",
          "101:     private $lockdiscussionafter;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:     private $duedate;",
          "105:     private $cutoffdate;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:         int $completionreplies,",
          "163:         int $completionposts,",
          "164:         bool $displaywordcount,",
          "166:     ) {",
          "167:         $this->context = $context;",
          "168:         $this->coursemodule = $coursemodule;",
          "",
          "[Removed Lines]",
          "165:         int $lockdiscussionafter",
          "",
          "[Added Lines]",
          "171:         int $lockdiscussionafter,",
          "172:         int $duedate,",
          "173:         int $cutoffdate",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:         $this->completionposts = $completionposts;",
          "194:         $this->displaywordcount = $displaywordcount;",
          "195:         $this->lockdiscussionafter = $lockdiscussionafter;",
          "196:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:         $this->duedate = $duedate;",
          "205:         $this->cutoffdate = $cutoffdate;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "547:         return (($discussion->get_time_modified() + $this->get_lock_discussions_after()) < time());",
          "548:     }",
          "549: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "565:     public function get_cutoff_date() : int {",
          "566:         return $this->cutoffdate;",
          "567:     }",
          "574:     public function has_cutoff_date() : bool {",
          "575:         return !empty($this->get_cutoff_date());",
          "576:     }",
          "583:     public function is_cutoff_date_reached() : bool {",
          "584:         if ($this->has_cutoff_date() && ($this->get_cutoff_date() < time())) {",
          "585:             return true;",
          "586:         }",
          "588:         return false;",
          "589:     }",
          "596:     public function get_due_date() : int {",
          "597:         return $this->duedate;",
          "598:     }",
          "605:     public function has_due_date() : bool {",
          "606:         return !empty($this->get_due_date());",
          "607:     }",
          "614:     public function is_due_date_reached() : bool {",
          "615:         if ($this->has_due_date() && ($this->get_due_date() < time())) {",
          "616:             return true;",
          "617:         }",
          "619:         return false;",
          "620:     }",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/factories/entity.php||mod/forum/classes/local/factories/entity.php": [
          "File: mod/forum/classes/local/factories/entity.php -> mod/forum/classes/local/factories/entity.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:             $record->completionreplies,",
          "101:             $record->completionposts,",
          "102:             $record->displaywordcount,",
          "104:         );",
          "105:     }",
          "",
          "[Removed Lines]",
          "103:             $record->lockdiscussionafter",
          "",
          "[Added Lines]",
          "103:             $record->lockdiscussionafter,",
          "104:             $record->duedate,",
          "105:             $record->cutoffdate",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/managers/capability.php||mod/forum/classes/local/managers/capability.php": [
          "File: mod/forum/classes/local/managers/capability.php -> mod/forum/classes/local/managers/capability.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:             return false;",
          "111:         }",
          "113:         switch ($this->forum->get_type()) {",
          "114:             case 'news':",
          "115:                 $capability = 'mod/forum:addnews';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:         if ($this->forum->is_cutoff_date_reached()) {",
          "114:             if (!has_capability('mod/forum:canoverridecutoff', $this->get_context())) {",
          "115:                 return false;",
          "116:             }",
          "117:         }",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/renderers/discussion.php||mod/forum/classes/local/renderers/discussion.php": [
          "File: mod/forum/classes/local/renderers/discussion.php -> mod/forum/classes/local/renderers/discussion.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "377:         $forum = $this->forum;",
          "378:         $renderer = $this->renderer;",
          "380:         if ($forum->is_discussion_locked($discussion)) {",
          "381:             $notifications[] = (new notification(",
          "382:                 get_string('discussionlocked', 'forum'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "380:         if ($forum->is_cutoff_date_reached()) {",
          "381:             $notifications[] = (new notification(",
          "382:                     get_string('cutoffdatereached', 'forum'),",
          "383:                     notification::NOTIFY_INFO",
          "384:             ))->set_show_closebutton();",
          "385:         } else if ($forum->is_due_date_reached()) {",
          "386:             $notifications[] = (new notification(",
          "387:                     get_string('thisforumisdue', 'forum', userdate($forum->get_due_date())),",
          "388:                     notification::NOTIFY_INFO",
          "389:             ))->set_show_closebutton();",
          "390:         } else if ($forum->has_due_date()) {",
          "391:             $notifications[] = (new notification(",
          "392:                     get_string('thisforumhasduedate', 'forum', userdate($forum->get_due_date())),",
          "393:                     notification::NOTIFY_INFO",
          "394:             ))->set_show_closebutton();",
          "395:         }",
          "",
          "---------------"
        ],
        "mod/forum/classes/local/renderers/discussion_list.php||mod/forum/classes/local/renderers/discussion_list.php": [
          "File: mod/forum/classes/local/renderers/discussion_list.php -> mod/forum/classes/local/renderers/discussion_list.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "327:         $renderer = $this->renderer;",
          "328:         $capabilitymanager = $this->capabilitymanager;",
          "330:         if ($forum->has_blocking_enabled()) {",
          "331:             $notifications[] = (new notification(",
          "332:                 get_string('thisforumisthrottled', 'forum', [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:         if ($forum->is_cutoff_date_reached()) {",
          "331:             $notifications[] = (new notification(",
          "332:                     get_string('cutoffdatereached', 'forum'),",
          "333:                     notification::NOTIFY_INFO",
          "334:             ))->set_show_closebutton();",
          "335:         } else if ($forum->is_due_date_reached()) {",
          "336:             $notifications[] = (new notification(",
          "337:                     get_string('thisforumisdue', 'forum', userdate($forum->get_due_date())),",
          "338:                     notification::NOTIFY_INFO",
          "339:             ))->set_show_closebutton();",
          "340:         } else if ($forum->has_due_date()) {",
          "341:             $notifications[] = (new notification(",
          "342:                     get_string('thisforumhasduedate', 'forum', userdate($forum->get_due_date())),",
          "343:                     notification::NOTIFY_INFO",
          "344:             ))->set_show_closebutton();",
          "345:         }",
          "",
          "---------------"
        ],
        "mod/forum/db/access.php||mod/forum/db/access.php": [
          "File: mod/forum/db/access.php -> mod/forum/db/access.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:             'manager' => CAP_ALLOW",
          "396:         )",
          "397:     ),",
          "398: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:     'mod/forum:canoverridecutoff' => array(",
          "399:         'captype' => 'write',",
          "400:         'contextlevel' => CONTEXT_MODULE,",
          "401:         'archetypes' => array(",
          "402:             'teacher' => CAP_ALLOW,",
          "403:             'editingteacher' => CAP_ALLOW,",
          "404:             'manager' => CAP_ALLOW",
          "405:         ),",
          "406:         'clonepermissionsfrom' => 'mod/forum:canoverridediscussionlock'",
          "407:     ),",
          "",
          "---------------"
        ],
        "mod/forum/db/upgrade.php||mod/forum/db/upgrade.php": [
          "File: mod/forum/db/upgrade.php -> mod/forum/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: defined('MOODLE_INTERNAL') || die();",
          "45: function xmldb_forum_upgrade($oldversion) {",
          "48:     $dbman = $DB->get_manager(); // Loads ddl manager and xmldb classes.",
          "",
          "[Removed Lines]",
          "46:     global $CFG, $DB;",
          "",
          "[Added Lines]",
          "46:     global $DB;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:         upgrade_mod_savepoint(true, 2019031200, 'forum');",
          "119:     }",
          "121:     return true;",
          "122: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:     if ($oldversion < 2019040400) {",
          "123:         $table = new xmldb_table('forum');",
          "126:         $field = new xmldb_field('duedate', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, '0', 'introformat');",
          "129:         if (!$dbman->field_exists($table, $field)) {",
          "130:             $dbman->add_field($table, $field);",
          "131:         }",
          "134:         $field = new xmldb_field('cutoffdate', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, '0', 'duedate');",
          "137:         if (!$dbman->field_exists($table, $field)) {",
          "138:             $dbman->add_field($table, $field);",
          "139:         }",
          "142:         upgrade_mod_savepoint(true, 2019040400, 'forum');",
          "143:     }",
          "",
          "---------------"
        ],
        "mod/forum/externallib.php||mod/forum/externallib.php": [
          "File: mod/forum/externallib.php -> mod/forum/externallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:                     'intro' => new external_value(PARAM_RAW, 'The forum intro'),",
          "128:                     'introformat' => new external_format_value('intro'),",
          "129:                     'introfiles' => new external_files('Files in the introduction text', VALUE_OPTIONAL),",
          "130:                     'assessed' => new external_value(PARAM_INT, 'Aggregate type'),",
          "131:                     'assesstimestart' => new external_value(PARAM_INT, 'Assess start time'),",
          "132:                     'assesstimefinish' => new external_value(PARAM_INT, 'Assess finish time'),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:                     'duedate' => new external_value(PARAM_INT, 'duedate for the user', VALUE_OPTIONAL),",
          "131:                     'cutoffdate' => new external_value(PARAM_INT, 'cutoffdate for the user', VALUE_OPTIONAL),",
          "",
          "---------------"
        ],
        "mod/forum/lang/en/forum.php||mod/forum/lang/en/forum.php": [
          "File: mod/forum/lang/en/forum.php -> mod/forum/lang/en/forum.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: $string['attachmentnopost'] = 'You cannot export attachments without a post id';",
          "44: $string['attachments'] = 'Attachments';",
          "45: $string['attachmentswordcount'] = 'Attachments and word count';",
          "46: $string['blockafter'] = 'Post threshold for blocking';",
          "47: $string['blockafter_help'] = 'This setting specifies the maximum number of posts which a user can post in the given time period. Users with the capability mod/forum:postwithoutthrottling are exempt from post limits.';",
          "48: $string['blockperiod'] = 'Time period for blocking';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: $string['availability'] = 'Availability';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: $string['blogforum'] = 'Standard forum displayed in a blog-like format';",
          "52: $string['bynameondate'] = 'by {$a->name} - {$a->date}';",
          "53: $string['cachedef_forum_is_tracked'] = 'Forum tracking status for user';",
          "54: $string['cannotadd'] = 'Could not add the discussion for this forum';",
          "55: $string['cannotadddiscussion'] = 'Adding discussions to this forum requires group membership.';",
          "56: $string['cannotadddiscussionall'] = 'You do not have permission to add a new discussion topic for all participants.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: $string['calendardue'] = '{$a} is due';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122: $string['couldnotdeletereplies'] = 'Sorry, that cannot be deleted as people have already responded to it';",
          "123: $string['couldnotupdate'] = 'Could not update your post due to an unknown error';",
          "124: $string['crontask'] = 'Forum mailings and maintenance jobs';",
          "125: $string['delete'] = 'Delete';",
          "126: $string['deleteddiscussion'] = 'The discussion topic has been deleted';",
          "127: $string['deletedpost'] = 'The post has been deleted';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127: $string['cutoffdate'] = 'Cut-off date';",
          "128: $string['cutoffdate_help'] = 'If set, the forum will not accept posts after this date.';",
          "129: $string['cutoffdatereached'] = 'The cut-off date for posting to this forum is reached so you can no longer post to it.';",
          "130: $string['cutoffdatevalidation'] = 'The cut-off date cannot be earlier than the due date.';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "170: $string['displaystart_help'] = 'This setting specifies whether a forum post should be displayed from a certain date. Note that administrators can always view forum posts.';",
          "171: $string['displaywordcount'] = 'Display word count';",
          "172: $string['displaywordcount_help'] = 'This setting specifies whether the word count of each post should be displayed or not.';",
          "173: $string['eachuserforum'] = 'Each person posts one discussion';",
          "174: $string['edit'] = 'Edit';",
          "175: $string['editedby'] = 'Edited by {$a->name} - original submission {$a->date}';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179: $string['duedate'] = 'Due date';",
          "180: $string['duedate_help'] = 'This is when the forum is due. Although this date is displayed on the calendar as the due date for the forum, posting to the forum will still be allowed after this date. To prevent posting to the forum after a certain date - set the forum cut off date.';",
          "181: $string['duedatetodisplayincalendar'] = 'Due date to display in calendar';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "227: $string['forum:addnews'] = 'Add announcements';",
          "228: $string['forum:addquestion'] = 'Add question';",
          "229: $string['forum:allowforcesubscribe'] = 'Allow force subscribe';",
          "230: $string['forum:canoverridediscussionlock'] = 'Reply to locked discussions';",
          "231: $string['forumauthorhidden'] = 'Author (hidden)';",
          "232: $string['forumblockingalmosttoomanyposts'] = 'You are approaching the posting threshold. You have posted {$a->numposts} times in the last {$a->blockperiod} and the limit is {$a->blockafter} posts.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: $string['forum:canoverridecutoff'] = 'Post to forums after their cut-off date';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "579: $string['tagarea_forum_posts'] = 'Forum posts';",
          "580: $string['tagsdeleted'] = 'Forum tags have been deleted';",
          "581: $string['thisforumisthrottled'] = 'This forum has a limit to the number of forum postings you can make in a given time period - this is currently set at {$a->blockafter} posting(s) in {$a->blockperiod}';",
          "582: $string['timedhidden'] = 'Timed status: Hidden from students';",
          "583: $string['timedposts'] = 'Timed posts';",
          "584: $string['timedvisible'] = 'Timed status: Visible to all users';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "592: $string['thisforumisdue'] = 'The due date for posting to this forum was {$a}.';",
          "593: $string['thisforumhasduedate'] = 'The due date for posting to this forum is {$a}.';",
          "",
          "---------------"
        ],
        "mod/forum/lib.php||mod/forum/lib.php": [
          "File: mod/forum/lib.php -> mod/forum/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: function forum_add_instance($forum, $mform = null) {",
          "87:     global $CFG, $DB;",
          "89:     $forum->timemodified = time();",
          "91:     if (empty($forum->assessed)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:     require_once($CFG->dirroot.'/mod/forum/locallib.php');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:         }",
          "128:     }",
          "130:     forum_grade_item_update($forum);",
          "132:     $completiontimeexpected = !empty($forum->completionexpected) ? $forum->completionexpected : null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:     forum_update_calendar($forum, $forum->coursemodule);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "164: function forum_update_instance($forum, $mform) {",
          "167:     $forum->timemodified = time();",
          "168:     $forum->id           = $forum->instance;",
          "",
          "[Removed Lines]",
          "165:     global $DB, $OUTPUT, $USER;",
          "",
          "[Added Lines]",
          "168:     global $CFG, $DB, $OUTPUT, $USER;",
          "170:     require_once($CFG->dirroot.'/mod/forum/locallib.php');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "249:         }",
          "250:     }",
          "252:     forum_grade_item_update($forum);",
          "254:     $completiontimeexpected = !empty($forum->completionexpected) ? $forum->completionexpected : null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:     forum_update_calendar($forum, $forum->coursemodule);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3697:         $context = context_module::instance($cm->id);",
          "3698:     }",
          "3700:     if ($currentgroup === null) {",
          "3701:         $currentgroup = groups_get_activity_group($cm);",
          "3702:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3706:     if (forum_is_cutoff_date_reached($forum)) {",
          "3707:         if (!has_capability('mod/forum:canoverridecutoff', $context)) {",
          "3708:             return false;",
          "3709:         }",
          "3710:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3790:         $context = context_module::instance($cm->id);",
          "3791:     }",
          "3794:     if (forum_discussion_is_locked($forum, $discussion)) {",
          "3795:         if (!has_capability('mod/forum:canoverridediscussionlock', $context)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3805:     if (forum_is_cutoff_date_reached($forum)) {",
          "3806:         if (!has_capability('mod/forum:canoverridecutoff', $context)) {",
          "3807:             return false;",
          "3808:         }",
          "3809:     }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6299:     }",
          "6300: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6326: function forum_is_cutoff_date_reached($forum) {",
          "6327:     $entityfactory = \\mod_forum\\local\\container::get_entity_factory();",
          "6328:     $coursemoduleinfo = get_fast_modinfo($forum->course);",
          "6329:     $cminfo = $coursemoduleinfo->instances['forum'][$forum->id];",
          "6330:     $forumentity = $entityfactory->get_forum_from_stdclass(",
          "6331:             $forum,",
          "6332:             context_module::instance($cminfo->id),",
          "6333:             $cminfo->get_course_module_record(),",
          "6334:             $cminfo->get_course()",
          "6335:     );",
          "6337:     return $forumentity->is_cutoff_date_reached();",
          "6338: }",
          "6346: function forum_is_due_date_reached($forum) {",
          "6347:     $entityfactory = \\mod_forum\\local\\container::get_entity_factory();",
          "6348:     $coursemoduleinfo = get_fast_modinfo($forum->course);",
          "6349:     $cminfo = $coursemoduleinfo->instances['forum'][$forum->id];",
          "6350:     $forumentity = $entityfactory->get_forum_from_stdclass(",
          "6351:             $forum,",
          "6352:             context_module::instance($cminfo->id),",
          "6353:             $cminfo->get_course_module_record(),",
          "6354:             $cminfo->get_course()",
          "6355:     );",
          "6357:     return $forumentity->is_due_date_reached();",
          "6358: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6592:     return has_capability('mod/forum:postprivatereply', $context);",
          "6593: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6674: function mod_forum_core_calendar_get_valid_event_timestart_range(\\calendar_event $event, \\stdClass $forum) {",
          "6675:     global $CFG;",
          "6677:     require_once($CFG->dirroot . '/mod/forum/locallib.php');",
          "6679:     $mindate = null;",
          "6680:     $maxdate = null;",
          "6682:     if ($event->eventtype == FORUM_EVENT_TYPE_DUE) {",
          "6683:         if (!empty($forum->cutoffdate)) {",
          "6684:             $maxdate = [",
          "6685:                 $forum->cutoffdate,",
          "6686:                 get_string('cutoffdatevalidation', 'forum'),",
          "6687:             ];",
          "6688:         }",
          "6689:     }",
          "6691:     return [$mindate, $maxdate];",
          "6692: }",
          "6705: function mod_forum_core_calendar_event_timestart_updated(\\calendar_event $event, \\stdClass $forum) {",
          "6706:     global $CFG, $DB;",
          "6708:     require_once($CFG->dirroot . '/mod/forum/locallib.php');",
          "6710:     if ($event->eventtype != FORUM_EVENT_TYPE_DUE) {",
          "6711:         return;",
          "6712:     }",
          "6714:     $courseid = $event->courseid;",
          "6715:     $modulename = $event->modulename;",
          "6716:     $instanceid = $event->instance;",
          "6720:     if ($modulename != 'forum') {",
          "6721:         return;",
          "6722:     }",
          "6724:     if ($forum->id != $instanceid) {",
          "6725:         return;",
          "6726:     }",
          "6728:     $coursemodule = get_fast_modinfo($courseid)->instances[$modulename][$instanceid];",
          "6729:     $context = context_module::instance($coursemodule->id);",
          "6732:     if (!has_capability('moodle/course:manageactivities', $context)) {",
          "6733:         return;",
          "6734:     }",
          "6736:     if ($event->eventtype == FORUM_EVENT_TYPE_DUE) {",
          "6737:         if ($forum->duedate != $event->timestart) {",
          "6738:             $forum->duedate = $event->timestart;",
          "6739:             $forum->timemodified = time();",
          "6741:             $DB->update_record('forum', $forum);",
          "6742:             $event = \\core\\event\\course_module_updated::create_from_cm($coursemodule, $context);",
          "6743:             $event->trigger();",
          "6744:         }",
          "6745:     }",
          "6746: }",
          "",
          "---------------"
        ],
        "mod/forum/locallib.php||mod/forum/locallib.php": [
          "File: mod/forum/locallib.php -> mod/forum/locallib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: require_once($CFG->dirroot . '/mod/forum/lib.php');",
          "23: require_once($CFG->libdir . '/portfolio/caller.php');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: define('FORUM_EVENT_TYPE_DUE', 'due');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "700:             $exclusivemode, $fromctx, $ctx, $rec, $page, $totalpages);",
          "701:     }",
          "702: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "717: function forum_update_calendar($forum, $cmid) {",
          "718:     global $DB, $CFG;",
          "720:     require_once($CFG->dirroot.'/calendar/lib.php');",
          "722:     $event = new stdClass();",
          "724:     if (!empty($forum->duedate)) {",
          "725:         $event->name = get_string('calendardue', 'forum', $forum->name);",
          "726:         $event->description = format_module_intro('forum', $forum, $cmid);",
          "727:         $event->courseid = $forum->course;",
          "728:         $event->modulename = 'forum';",
          "729:         $event->instance = $forum->id;",
          "730:         $event->type = CALENDAR_EVENT_TYPE_ACTION;",
          "731:         $event->eventtype = FORUM_EVENT_TYPE_DUE;",
          "732:         $event->timestart = $forum->duedate;",
          "733:         $event->timesort = $forum->duedate;",
          "734:         $event->visible = instance_is_visible('forum', $forum);",
          "735:     }",
          "737:     $event->id = $DB->get_field('event', 'id',",
          "738:             array('modulename' => 'forum', 'instance' => $forum->id, 'eventtype' => FORUM_EVENT_TYPE_DUE));",
          "740:     if ($event->id) {",
          "741:         $calendarevent = calendar_event::load($event->id);",
          "742:         if (!empty($forum->duedate)) {",
          "744:             $calendarevent->update($event);",
          "745:         } else {",
          "747:             $calendarevent->delete();",
          "748:         }",
          "749:     } else if (!empty($forum->duedate)) {",
          "751:         calendar_event::create($event);",
          "752:     }",
          "754:     return true;",
          "755: }",
          "",
          "---------------"
        ],
        "mod/forum/mod_form.php||mod/forum/mod_form.php": [
          "File: mod/forum/mod_form.php -> mod/forum/mod_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         $mform->addHelpButton('type', 'forumtype', 'forum');",
          "55:         $mform->setDefault('type', 'general');",
          "58:         $mform->addElement('header', 'attachmentswordcounthdr', get_string('attachmentswordcount', 'forum'));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:         $mform->addElement('header', 'availability', get_string('availability', 'forum'));",
          "59:         $name = get_string('duedate', 'forum');",
          "60:         $mform->addElement('date_time_selector', 'duedate', $name, array('optional' => true));",
          "61:         $mform->addHelpButton('duedate', 'duedate', 'forum');",
          "63:         $name = get_string('cutoffdate', 'forum');",
          "64:         $mform->addElement('date_time_selector', 'cutoffdate', $name, array('optional' => true));",
          "65:         $mform->addHelpButton('cutoffdate', 'cutoffdate', 'forum');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:     }",
          "232:     function data_preprocessing(&$default_values) {",
          "233:         parent::data_preprocessing($default_values);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:     public function validation($data, $files) {",
          "243:         $errors = parent::validation($data, $files);",
          "245:         if ($data['duedate'] && $data['cutoffdate']) {",
          "246:             if ($data['duedate'] > $data['cutoffdate']) {",
          "247:                 $errors['cutoffdate'] = get_string('cutoffdatevalidation', 'forum');",
          "248:             }",
          "249:         }",
          "251:         return $errors;",
          "252:     }",
          "",
          "---------------"
        ],
        "mod/forum/tests/entities_forum_test.php||mod/forum/tests/entities_forum_test.php": [
          "File: mod/forum/tests/entities_forum_test.php -> mod/forum/tests/entities_forum_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:         $completionposts = 0;",
          "93:         $displaywordcount = false;",
          "94:         $lockdiscussionafter = 0;",
          "96:         $forum = new forum_entity(",
          "97:             $context,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:         $duedate = 0;",
          "96:         $cutoffdate = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122:             $completionreplies,",
          "123:             $completionposts,",
          "124:             $displaywordcount,",
          "126:         );",
          "128:         $this->assertEquals($context, $forum->get_context());",
          "",
          "[Removed Lines]",
          "125:             $lockdiscussionafter",
          "",
          "[Added Lines]",
          "127:             $lockdiscussionafter,",
          "128:             $duedate,",
          "129:             $cutoffdate",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:         $this->assertEquals($lockdiscussionafter, $forum->get_lock_discussions_after());",
          "161:         $this->assertEquals(false, $forum->has_lock_discussions_after());",
          "162:         $this->assertEquals(false, $forum->is_discussion_locked($discussion));",
          "163:     }",
          "164: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:         $this->assertEquals(false, $forum->has_due_date());",
          "168:         $this->assertEquals(false, $forum->is_due_date_reached());",
          "169:         $this->assertEquals(false, $forum->has_cutoff_date());",
          "170:         $this->assertEquals(false, $forum->is_cutoff_date_reached());",
          "",
          "---------------"
        ],
        "mod/forum/tests/externallib_test.php||mod/forum/tests/externallib_test.php": [
          "File: mod/forum/tests/externallib_test.php -> mod/forum/tests/externallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1458:         $this->assertTrue($result['status']);",
          "1459:         $this->assertTrue($result['canpindiscussions']);",
          "1460:         $this->assertTrue($result['cancreateattachment']);",
          "1462:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1461:     }",
          "1466:     public function test_can_add_discussion_after_cutoff() {",
          "1467:         $this->resetAfterTest(true);",
          "1470:         $course = self::getDataGenerator()->create_course();",
          "1472:         $user = self::getDataGenerator()->create_user();",
          "1475:         $forum = self::getDataGenerator()->create_module('forum', ['course' => $course->id, 'cutoffdate' => time() - 1]);",
          "1478:         self::setUser($user);",
          "1479:         $this->getDataGenerator()->enrol_user($user->id, $course->id);",
          "1481:         $result = mod_forum_external::can_add_discussion($forum->id);",
          "1482:         $result = external_api::clean_returnvalue(mod_forum_external::can_add_discussion_returns(), $result);",
          "1483:         $this->assertFalse($result['status']);",
          "1485:         self::setAdminUser();",
          "1486:         $result = mod_forum_external::can_add_discussion($forum->id);",
          "1487:         $result = external_api::clean_returnvalue(mod_forum_external::can_add_discussion_returns(), $result);",
          "1488:         $this->assertTrue($result['status']);",
          "",
          "---------------"
        ],
        "mod/forum/tests/lib_test.php||mod/forum/tests/lib_test.php": [
          "File: mod/forum/tests/lib_test.php -> mod/forum/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2202:     public function test_forum_user_can_post_discussion() {",
          "2205:         $this->resetAfterTest(true);",
          "",
          "[Removed Lines]",
          "2203:         global $CFG, $DB;",
          "",
          "[Added Lines]",
          "2203:         global $DB;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2297:         $this->assertTrue($can);",
          "2298:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2303:     public function test_forum_user_can_post_discussion_after_cutoff() {",
          "2304:         $this->resetAfterTest(true);",
          "2307:         $course = self::getDataGenerator()->create_course(array('groupmode' => SEPARATEGROUPS, 'groupmodeforce' => 1));",
          "2308:         $student = self::getDataGenerator()->create_user();",
          "2309:         $teacher = self::getDataGenerator()->create_user();",
          "2310:         $this->getDataGenerator()->enrol_user($student->id, $course->id);",
          "2311:         $this->getDataGenerator()->enrol_user($teacher->id, $course->id, 'editingteacher');",
          "2314:         $record = new stdClass();",
          "2315:         $record->course = $course->id;",
          "2316:         $record->cutoffdate = time() - 1;",
          "2317:         $forum = self::getDataGenerator()->create_module('forum', $record);",
          "2318:         $cm = get_coursemodule_from_instance('forum', $forum->id);",
          "2319:         $context = context_module::instance($cm->id);",
          "2321:         self::setUser($student);",
          "2324:         $can = forum_user_can_post_discussion($forum, null, -1, $cm, $context);",
          "2325:         $this->assertFalse($can);",
          "2327:         self::setUser($teacher);",
          "2330:         $can = forum_user_can_post_discussion($forum, null, -1, $cm, $context);",
          "2331:         $this->assertTrue($can);",
          "2332:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3138:         ];",
          "3139:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3182:     public function test_forum_is_cutoff_date_reached($forum, $expect) {",
          "3183:         $this->resetAfterTest();",
          "3185:         $datagenerator = $this->getDataGenerator();",
          "3186:         $course = $datagenerator->create_course();",
          "3187:         $forum = $datagenerator->create_module('forum', (object) array_merge([",
          "3188:             'course' => $course->id",
          "3189:         ], $forum));",
          "3191:         $this->assertEquals($expect, forum_is_cutoff_date_reached($forum));",
          "3192:     }",
          "3199:     public function forum_is_cutoff_date_reached_provider() {",
          "3200:         $now = time();",
          "3201:         return [",
          "3202:             'cutoffdate is unset' => [",
          "3203:                 [],",
          "3204:                 false",
          "3205:             ],",
          "3206:             'cutoffdate is 0' => [",
          "3207:                 ['cutoffdate' => 0],",
          "3208:                 false",
          "3209:             ],",
          "3210:             'cutoffdate is set and is in future' => [",
          "3211:                 ['cutoffdate' => $now + 86400],",
          "3212:                 false",
          "3213:             ],",
          "3214:             'cutoffdate is set and is in past' => [",
          "3215:                 ['cutoffdate' => $now - 86400],",
          "3216:                 true",
          "3217:             ],",
          "3218:         ];",
          "3219:     }",
          "3228:     public function test_forum_is_due_date_reached($forum, $expect) {",
          "3229:         $this->resetAfterTest();",
          "3231:         $this->setAdminUser();",
          "3233:         $datagenerator = $this->getDataGenerator();",
          "3234:         $course = $datagenerator->create_course();",
          "3235:         $forum = $datagenerator->create_module('forum', (object) array_merge([",
          "3236:             'course' => $course->id",
          "3237:         ], $forum));",
          "3239:         $this->assertEquals($expect, forum_is_due_date_reached($forum));",
          "3240:     }",
          "3247:     public function forum_is_due_date_reached_provider() {",
          "3248:         $now = time();",
          "3249:         return [",
          "3250:             'duedate is unset' => [",
          "3251:                 [],",
          "3252:                 false",
          "3253:             ],",
          "3254:             'duedate is 0' => [",
          "3255:                 ['duedate' => 0],",
          "3256:                 false",
          "3257:             ],",
          "3258:             'duedate is set and is in future' => [",
          "3259:                 ['duedate' => $now + 86400],",
          "3260:                 false",
          "3261:             ],",
          "3262:             'duedate is set and is in past' => [",
          "3263:                 ['duedate' => $now - 86400],",
          "3264:                 true",
          "3265:             ],",
          "3266:         ];",
          "3267:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3639:         $this->setUser($otheruser->id);",
          "3640:         $this->assertFalse(forum_post_is_visible_privately($post, $cm));",
          "3641:     }",
          "3642: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3774:     public function test_mod_forum_core_calendar_get_valid_event_timestart_range_unknown_event() {",
          "3775:         global $CFG;",
          "3776:         require_once($CFG->dirroot . \"/calendar/lib.php\");",
          "3778:         $this->resetAfterTest(true);",
          "3779:         $this->setAdminUser();",
          "3780:         $generator = $this->getDataGenerator();",
          "3781:         $course = $generator->create_course();",
          "3782:         $duedate = time() + DAYSECS;",
          "3783:         $forum = new \\stdClass();",
          "3784:         $forum->duedate = $duedate;",
          "3787:         $event = new \\calendar_event([",
          "3788:             'name' => 'Test event',",
          "3789:             'description' => '',",
          "3790:             'format' => 1,",
          "3791:             'courseid' => $course->id,",
          "3792:             'groupid' => 0,",
          "3793:             'userid' => 2,",
          "3794:             'modulename' => 'forum',",
          "3795:             'instance' => 1,",
          "3796:             'eventtype' => FORUM_EVENT_TYPE_DUE . \"SOMETHING ELSE\",",
          "3797:             'timestart' => 1,",
          "3798:             'timeduration' => 86400,",
          "3799:             'visible' => 1",
          "3800:         ]);",
          "3802:         list ($min, $max) = mod_forum_core_calendar_get_valid_event_timestart_range($event, $forum);",
          "3803:         $this->assertNull($min);",
          "3804:         $this->assertNull($max);",
          "3805:     }",
          "3810:     public function test_mod_forum_core_calendar_get_valid_event_timestart_range_due_no_limit() {",
          "3811:         global $CFG;",
          "3812:         require_once($CFG->dirroot . '/calendar/lib.php');",
          "3814:         $this->resetAfterTest(true);",
          "3815:         $this->setAdminUser();",
          "3816:         $generator = $this->getDataGenerator();",
          "3817:         $course = $generator->create_course();",
          "3818:         $duedate = time() + DAYSECS;",
          "3819:         $forum = new \\stdClass();",
          "3820:         $forum->duedate = $duedate;",
          "3823:         $event = new \\calendar_event([",
          "3824:             'name' => 'Test event',",
          "3825:             'description' => '',",
          "3826:             'format' => 1,",
          "3827:             'courseid' => $course->id,",
          "3828:             'groupid' => 0,",
          "3829:             'userid' => 2,",
          "3830:             'modulename' => 'forum',",
          "3831:             'instance' => 1,",
          "3832:             'eventtype' => FORUM_EVENT_TYPE_DUE,",
          "3833:             'timestart' => 1,",
          "3834:             'timeduration' => 86400,",
          "3835:             'visible' => 1",
          "3836:         ]);",
          "3838:         list($min, $max) = mod_forum_core_calendar_get_valid_event_timestart_range($event, $forum);",
          "3839:         $this->assertNull($min);",
          "3840:         $this->assertNull($max);",
          "3841:     }",
          "3846:     public function test_mod_forum_core_calendar_get_valid_event_timestart_range_due_with_limits() {",
          "3847:         global $CFG;",
          "3848:         require_once($CFG->dirroot . '/calendar/lib.php');",
          "3850:         $this->resetAfterTest(true);",
          "3851:         $this->setAdminUser();",
          "3852:         $generator = $this->getDataGenerator();",
          "3853:         $course = $generator->create_course();",
          "3854:         $duedate = time() + DAYSECS;",
          "3855:         $cutoffdate = $duedate + DAYSECS;",
          "3856:         $forum = new \\stdClass();",
          "3857:         $forum->duedate = $duedate;",
          "3858:         $forum->cutoffdate = $cutoffdate;",
          "3861:         $event = new \\calendar_event([",
          "3862:             'name' => 'Test event',",
          "3863:             'description' => '',",
          "3864:             'format' => 1,",
          "3865:             'courseid' => $course->id,",
          "3866:             'groupid' => 0,",
          "3867:             'userid' => 2,",
          "3868:             'modulename' => 'forum',",
          "3869:             'instance' => 1,",
          "3870:             'eventtype' => FORUM_EVENT_TYPE_DUE,",
          "3871:             'timestart' => 1,",
          "3872:             'timeduration' => 86400,",
          "3873:             'visible' => 1",
          "3874:         ]);",
          "3876:         list($min, $max) = mod_forum_core_calendar_get_valid_event_timestart_range($event, $forum);",
          "3877:         $this->assertNull($min);",
          "3878:         $this->assertEquals($cutoffdate, $max[0]);",
          "3879:         $this->assertNotEmpty($max[1]);",
          "3880:     }",
          "3885:     public function test_mod_forum_core_calendar_event_timestart_updated_unknown_event() {",
          "3886:         global $CFG, $DB;",
          "3887:         require_once($CFG->dirroot . \"/calendar/lib.php\");",
          "3889:         $this->resetAfterTest(true);",
          "3890:         $this->setAdminUser();",
          "3891:         $generator = $this->getDataGenerator();",
          "3892:         $course = $generator->create_course();",
          "3893:         $forumgenerator = $generator->get_plugin_generator('mod_forum');",
          "3894:         $duedate = time() + DAYSECS;",
          "3895:         $cutoffdate = $duedate + DAYSECS;",
          "3896:         $forum = $forumgenerator->create_instance(['course' => $course->id]);",
          "3897:         $forum->duedate = $duedate;",
          "3898:         $forum->cutoffdate = $cutoffdate;",
          "3899:         $DB->update_record('forum', $forum);",
          "3902:         $event = new \\calendar_event([",
          "3903:             'name' => 'Test event',",
          "3904:             'description' => '',",
          "3905:             'format' => 1,",
          "3906:             'courseid' => $course->id,",
          "3907:             'groupid' => 0,",
          "3908:             'userid' => 2,",
          "3909:             'modulename' => 'forum',",
          "3910:             'instance' => $forum->id,",
          "3911:             'eventtype' => FORUM_EVENT_TYPE_DUE . \"SOMETHING ELSE\",",
          "3912:             'timestart' => 1,",
          "3913:             'timeduration' => 86400,",
          "3914:             'visible' => 1",
          "3915:         ]);",
          "3917:         mod_forum_core_calendar_event_timestart_updated($event, $forum);",
          "3919:         $forum = $DB->get_record('forum', ['id' => $forum->id]);",
          "3920:         $this->assertEquals($duedate, $forum->duedate);",
          "3921:         $this->assertEquals($cutoffdate, $forum->cutoffdate);",
          "3922:     }",
          "3927:     public function test_mod_forum_core_calendar_event_timestart_updated_due_event() {",
          "3928:         global $CFG, $DB;",
          "3929:         require_once($CFG->dirroot . \"/calendar/lib.php\");",
          "3931:         $this->resetAfterTest(true);",
          "3932:         $this->setAdminUser();",
          "3933:         $generator = $this->getDataGenerator();",
          "3934:         $course = $generator->create_course();",
          "3935:         $forumgenerator = $generator->get_plugin_generator('mod_forum');",
          "3936:         $duedate = time() + DAYSECS;",
          "3937:         $cutoffdate = $duedate + DAYSECS;",
          "3938:         $newduedate = $duedate + 1;",
          "3939:         $forum = $forumgenerator->create_instance(['course' => $course->id]);",
          "3940:         $forum->duedate = $duedate;",
          "3941:         $forum->cutoffdate = $cutoffdate;",
          "3942:         $DB->update_record('forum', $forum);",
          "3945:         $event = new \\calendar_event([",
          "3946:             'name' => 'Test event',",
          "3947:             'description' => '',",
          "3948:             'format' => 1,",
          "3949:             'courseid' => $course->id,",
          "3950:             'groupid' => 0,",
          "3951:             'userid' => 2,",
          "3952:             'modulename' => 'forum',",
          "3953:             'instance' => $forum->id,",
          "3954:             'eventtype' => FORUM_EVENT_TYPE_DUE,",
          "3955:             'timestart' => $newduedate,",
          "3956:             'timeduration' => 86400,",
          "3957:             'visible' => 1",
          "3958:         ]);",
          "3960:         mod_forum_core_calendar_event_timestart_updated($event, $forum);",
          "3962:         $forum = $DB->get_record('forum', ['id' => $forum->id]);",
          "3963:         $this->assertEquals($newduedate, $forum->duedate);",
          "3964:         $this->assertEquals($cutoffdate, $forum->cutoffdate);",
          "3965:     }",
          "",
          "---------------"
        ],
        "mod/forum/tests/locallib_test.php||mod/forum/tests/locallib_test.php": [
          "File: mod/forum/tests/locallib_test.php -> mod/forum/tests/locallib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "26: defined('MOODLE_INTERNAL') || die();",
          "28: global $CFG;",
          "30: require_once($CFG->dirroot . '/mod/forum/lib.php');",
          "38: class mod_forum_locallib_testcase extends advanced_testcase {",
          "39:     public function test_forum_update_calendar() {",
          "40:         global $DB;",
          "42:         $this->resetAfterTest();",
          "44:         $this->setAdminUser();",
          "47:         $course = $this->getDataGenerator()->create_course();",
          "50:         $time = time();",
          "51:         $forum = $this->getDataGenerator()->create_module('forum',",
          "52:                 array(",
          "53:                     'course' => $course->id,",
          "54:                     'duedate' => $time",
          "55:                 )",
          "56:         );",
          "59:         $events = $DB->get_records('event');",
          "60:         $this->assertCount(1, $events);",
          "63:         $event = reset($events);",
          "66:         $this->assertEquals('forum', $event->modulename);",
          "67:         $this->assertEquals($forum->id, $event->instance);",
          "68:         $this->assertEquals(CALENDAR_EVENT_TYPE_ACTION, $event->type);",
          "69:         $this->assertEquals(FORUM_EVENT_TYPE_DUE, $event->eventtype);",
          "70:         $this->assertEquals($time, $event->timestart);",
          "71:         $this->assertEquals($time, $event->timesort);",
          "72:     }",
          "73: }",
          "",
          "---------------"
        ],
        "mod/forum/version.php||mod/forum/version.php": [
          "File: mod/forum/version.php -> mod/forum/version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: defined('MOODLE_INTERNAL') || die();",
          "28: $plugin->requires  = 2018112800;       // Requires this Moodle version",
          "29: $plugin->component = 'mod_forum';      // Full name of the plugin (used for diagnostics)",
          "",
          "[Removed Lines]",
          "27: $plugin->version   = 2019031300;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "[Added Lines]",
          "27: $plugin->version   = 2019040400;       // The current module version (Date: YYYYMMDDXX)",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2019041000.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2019041000.03;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25dbbdf90bb1f5fb49a6a7a63f30be297a754a1d",
      "candidate_info": {
        "commit_hash": "25dbbdf90bb1f5fb49a6a7a63f30be297a754a1d",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/25dbbdf90bb1f5fb49a6a7a63f30be297a754a1d",
        "files": [
          "admin/settings/plugins.php",
          "auth/classes/digital_consent.php",
          "auth/classes/external.php",
          "auth/classes/form/verify_age_location_form.php",
          "auth/classes/output/digital_minor_page.php",
          "auth/classes/output/verify_age_location_page.php",
          "auth/tests/behat/validateagedigitalconsentmap.feature",
          "auth/tests/behat/verifyageofconsent.feature",
          "auth/tests/digital_consent_test.php",
          "lang/en/admin.php",
          "lang/en/cache.php",
          "lang/en/error.php",
          "lang/en/moodle.php",
          "lib/adminlib.php",
          "lib/db/caches.php",
          "lib/db/services.php",
          "lib/outputrenderers.php",
          "lib/templates/auth_digital_minor_page.mustache",
          "lib/templates/auth_verify_age_location_page.mustache",
          "login/digital_minor.php",
          "login/signup.php",
          "login/verify_age_location.php",
          "theme/boost/templates/core/auth_digital_minor_page.mustache",
          "theme/boost/templates/core/auth_verify_age_location_page.mustache",
          "version.php"
        ],
        "message": "MDL-61423 authentication: Add digital minor verification upon signup",
        "before_after_code_files": [
          "admin/settings/plugins.php||admin/settings/plugins.php",
          "auth/classes/digital_consent.php||auth/classes/digital_consent.php",
          "auth/classes/external.php||auth/classes/external.php",
          "auth/classes/form/verify_age_location_form.php||auth/classes/form/verify_age_location_form.php",
          "auth/classes/output/digital_minor_page.php||auth/classes/output/digital_minor_page.php",
          "auth/classes/output/verify_age_location_page.php||auth/classes/output/verify_age_location_page.php",
          "auth/tests/behat/validateagedigitalconsentmap.feature||auth/tests/behat/validateagedigitalconsentmap.feature",
          "auth/tests/behat/verifyageofconsent.feature||auth/tests/behat/verifyageofconsent.feature",
          "auth/tests/digital_consent_test.php||auth/tests/digital_consent_test.php",
          "lang/en/admin.php||lang/en/admin.php",
          "lang/en/cache.php||lang/en/cache.php",
          "lang/en/error.php||lang/en/error.php",
          "lang/en/moodle.php||lang/en/moodle.php",
          "lib/adminlib.php||lib/adminlib.php",
          "lib/db/caches.php||lib/db/caches.php",
          "lib/db/services.php||lib/db/services.php",
          "lib/outputrenderers.php||lib/outputrenderers.php",
          "lib/templates/auth_digital_minor_page.mustache||lib/templates/auth_digital_minor_page.mustache",
          "lib/templates/auth_verify_age_location_page.mustache||lib/templates/auth_verify_age_location_page.mustache",
          "login/digital_minor.php||login/digital_minor.php",
          "login/signup.php||login/signup.php",
          "login/verify_age_location.php||login/verify_age_location.php",
          "theme/boost/templates/core/auth_digital_minor_page.mustache||theme/boost/templates/core/auth_digital_minor_page.mustache",
          "theme/boost/templates/core/auth_verify_age_location_page.mustache||theme/boost/templates/core/auth_verify_age_location_page.mustache",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "admin/settings/plugins.php||admin/settings/plugins.php": [
          "File: admin/settings/plugins.php -> admin/settings/plugins.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     $temp->add($setting);",
          "124:     $ADMIN->add('authsettings', $temp);",
          "126:     $temp = new admin_externalpage('authtestsettings', get_string('testsettings', 'core_auth'), new moodle_url(\"/auth/test_settings.php\"), 'moodle/site:config', true);",
          "127:     $ADMIN->add('authsettings', $temp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:     $options = array(",
          "127:         0 => get_string('no'),",
          "128:         1 => get_string('yes')",
          "129:     );",
          "130:     $url = new moodle_url('/admin/settings.php?section=supportcontact');",
          "131:     $url = $url->out();",
          "132:     $setting = new admin_setting_configselect('agedigitalconsentverification',",
          "133:         new lang_string('agedigitalconsentverification', 'admin'),",
          "134:         new lang_string('agedigitalconsentverification_desc', 'admin', $url), 0, $options);",
          "135:     $setting->set_force_ltr(true);",
          "136:     $temp->add($setting);",
          "138:     $setting = new admin_setting_agedigitalconsentmap('agedigitalconsentmap',",
          "139:         new lang_string('ageofdigitalconsentmap', 'admin'),",
          "140:         new lang_string('ageofdigitalconsentmap_desc', 'admin'),",
          "142:         implode(PHP_EOL, [",
          "143:             '*, 16',",
          "144:             'AT, 14',",
          "145:             'CZ, 13',",
          "146:             'DE, 14',",
          "147:             'DK, 13',",
          "148:             'ES, 13',",
          "149:             'FI, 15',",
          "150:             'GB, 13',",
          "151:             'HU, 14',",
          "152:             'IE, 13',",
          "153:             'LT, 16',",
          "154:             'LU, 16',",
          "155:             'NL, 16',",
          "156:             'PL, 13',",
          "157:             'SE, 13',",
          "158:         ]),",
          "159:         PARAM_RAW",
          "160:     );",
          "161:     $temp->add($setting);",
          "",
          "---------------"
        ],
        "auth/classes/digital_consent.php||auth/classes/digital_consent.php": [
          "File: auth/classes/digital_consent.php -> auth/classes/digital_consent.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace core_auth;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "35: class digital_consent {",
          "42:     public static function is_age_digital_consent_verification_enabled() {",
          "43:         global $CFG;",
          "45:         return !empty($CFG->agedigitalconsentverification);",
          "46:     }",
          "55:     public static function is_minor($age, $country) {",
          "56:         global $CFG;",
          "58:         $ageconsentmap = $CFG->agedigitalconsentmap;",
          "59:         $agedigitalconsentmap = self::parse_age_digital_consent_map($ageconsentmap);",
          "61:         return array_key_exists($country, $agedigitalconsentmap) ?",
          "62:             $age < $agedigitalconsentmap[$country] : $age < $agedigitalconsentmap['*'];",
          "63:     }",
          "71:     public static function parse_age_digital_consent_map($ageconsentmap) {",
          "73:         $ageconsentmapparsed = array();",
          "74:         $countries = get_string_manager()->get_list_of_countries();",
          "75:         $isdefaultvaluepresent = false;",
          "76:         $lines = preg_split('/\\r|\\n/', $ageconsentmap, -1, PREG_SPLIT_NO_EMPTY);",
          "77:         foreach ($lines as $line) {",
          "78:             $arr = explode(\",\", $line);",
          "80:             if (count($arr) != 2) {",
          "81:                 throw new \\moodle_exception('agedigitalconsentmapinvalidcomma', 'error', '', $line);",
          "82:             }",
          "83:             $country = trim($arr[0]);",
          "84:             $age = trim($arr[1]);",
          "86:             if ($country == \"*\") {",
          "87:                 $isdefaultvaluepresent = true;",
          "88:             }",
          "90:             if ($country !== \"*\" && !array_key_exists($country, $countries)) {",
          "91:                 throw new \\moodle_exception('agedigitalconsentmapinvalidcountry', 'error', '', $country);",
          "92:             }",
          "94:             if (!is_numeric($age)) {",
          "95:                 throw new \\moodle_exception('agedigitalconsentmapinvalidage', 'error', '', $age);",
          "96:             }",
          "97:             $ageconsentmapparsed[$country] = $age;",
          "98:         }",
          "100:         if (!$isdefaultvaluepresent) {",
          "101:             throw new \\moodle_exception('agedigitalconsentmapinvaliddefault');",
          "102:         }",
          "104:         return $ageconsentmapparsed;",
          "105:     }",
          "106: }",
          "",
          "---------------"
        ],
        "auth/classes/external.php||auth/classes/external.php": [
          "File: auth/classes/external.php -> auth/classes/external.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:             )",
          "216:         );",
          "217:     }",
          "218: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:     public static function is_minor_parameters() {",
          "226:         return new external_function_parameters(",
          "227:             array(",
          "228:                 'age' => new external_value(PARAM_INT, 'Age'),",
          "229:                 'country' => new external_value(PARAM_ALPHA, 'Country of residence'),",
          "230:             )",
          "231:         );",
          "232:     }",
          "243:     public static function is_minor($age, $country) {",
          "244:         global $CFG, $PAGE;",
          "245:         require_once($CFG->dirroot . '/login/lib.php');",
          "247:         $params = self::validate_parameters(",
          "248:             self::is_minor_parameters(),",
          "249:             array(",
          "250:                 'age' => $age,",
          "251:                 'country' => $country,",
          "252:             )",
          "253:         );",
          "255:         if (!array_key_exists($params['country'], get_string_manager()->get_list_of_countries())) {",
          "256:             throw new invalid_parameter_exception('Invalid value for country parameter (value: '.",
          "257:                 $params['country'] .')');",
          "258:         }",
          "260:         $context = context_system::instance();",
          "261:         $PAGE->set_context($context);",
          "264:         if (!\\core_auth\\digital_consent::is_age_digital_consent_verification_enabled()) {",
          "265:             throw new moodle_exception('nopermissions', 'error', '',",
          "266:                 get_string('agelocationverificationdisabled', 'error'));",
          "267:         }",
          "269:         $status = \\core_auth\\digital_consent::is_minor($params['age'], $params['country']);",
          "271:         return array(",
          "272:             'status' => $status",
          "273:         );",
          "274:     }",
          "282:     public static function is_minor_returns() {",
          "283:         return new external_single_structure(",
          "284:             array(",
          "285:                 'status' => new external_value(PARAM_BOOL, 'True if the user is considered to be a digital minor,",
          "286:                     false if not')",
          "287:             )",
          "288:         );",
          "289:     }",
          "",
          "---------------"
        ],
        "auth/classes/form/verify_age_location_form.php||auth/classes/form/verify_age_location_form.php": [
          "File: auth/classes/form/verify_age_location_form.php -> auth/classes/form/verify_age_location_form.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace core_auth\\form;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "29: require_once($CFG->libdir.'/formslib.php');",
          "31: use moodleform;",
          "39: class verify_age_location_form extends moodleform {",
          "43:     public function definition() {",
          "44:         global $CFG;",
          "46:         $mform = $this->_form;",
          "48:         $mform->addElement('text', 'age', get_string('whatisyourage'), array('optional'  => false));",
          "49:         $mform->setType('age', PARAM_RAW);",
          "50:         $mform->addRule('age', null, 'required', null, 'client');",
          "51:         $mform->addRule('age', null, 'numeric', null, 'client');",
          "53:         $countries = get_string_manager()->get_list_of_countries();",
          "54:         $defaultcountry[''] = get_string('selectacountry');",
          "55:         $countries = array_merge($defaultcountry, $countries);",
          "56:         $mform->addElement('select', 'country', get_string('wheredoyoulive'), $countries);",
          "57:         $mform->addRule('country', null, 'required', null, 'client');",
          "58:         $mform->setDefault('country', $CFG->country);",
          "60:         $this->add_action_buttons(true, get_string('proceed'));",
          "61:     }",
          "62: }",
          "",
          "---------------"
        ],
        "auth/classes/output/digital_minor_page.php||auth/classes/output/digital_minor_page.php": [
          "File: auth/classes/output/digital_minor_page.php -> auth/classes/output/digital_minor_page.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace core_auth\\output;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "29: use renderable;",
          "30: use renderer_base;",
          "31: use templatable;",
          "39: class digital_minor_page implements renderable, templatable {",
          "47:     public function export_for_template(renderer_base $output) {",
          "48:         global $SITE, $CFG;",
          "50:         $sitename = format_string($SITE->fullname);",
          "51:         $supportname = $CFG->supportname;",
          "52:         $supportemail = $CFG->supportemail;",
          "54:         $context = [",
          "55:             'sitename' => $sitename,",
          "56:             'supportname' => $supportname,",
          "57:             'supportemail' => $supportemail,",
          "58:             'homelink' => new \\moodle_url('/')",
          "59:         ];",
          "61:         return $context;",
          "62:     }",
          "63: }",
          "",
          "---------------"
        ],
        "auth/classes/output/verify_age_location_page.php||auth/classes/output/verify_age_location_page.php": [
          "File: auth/classes/output/verify_age_location_page.php -> auth/classes/output/verify_age_location_page.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: namespace core_auth\\output;",
          "27: defined('MOODLE_INTERNAL') || die();",
          "29: use renderable;",
          "30: use renderer_base;",
          "31: use templatable;",
          "33: require_once($CFG->libdir.'/formslib.php');",
          "41: class verify_age_location_page implements renderable, templatable {",
          "44:     protected $form;",
          "47:     protected $errormessage;",
          "55:     public function __construct($form, $errormessage = null) {",
          "56:         $this->form = $form;",
          "57:         $this->errormessage = $errormessage;",
          "58:     }",
          "66:     public function export_for_template(renderer_base $output) {",
          "67:         global $SITE;",
          "69:         $sitename = format_string($SITE->fullname);",
          "70:         $formhtml = $this->form->render();",
          "71:         $error = $this->errormessage;",
          "73:         $context = [",
          "74:             'sitename' => $sitename,",
          "75:             'formhtml' => $formhtml,",
          "76:             'error'    => $error",
          "77:         ];",
          "79:         return $context;",
          "80:     }",
          "81: }",
          "",
          "---------------"
        ],
        "auth/tests/behat/validateagedigitalconsentmap.feature||auth/tests/behat/validateagedigitalconsentmap.feature": [
          "File: auth/tests/behat/validateagedigitalconsentmap.feature -> auth/tests/behat/validateagedigitalconsentmap.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @core @verify_age_location",
          "2: Feature: Test validation of 'Age of digital consent' setting.",
          "3:   In order to set the 'Age of digital consent' setting",
          "4:   As an admin",
          "5:   I need to provide valid data and valid format",
          "7:   Background:",
          "8:     Given I log in as \"admin\"",
          "9:     And I navigate to \"Manage authentication\" node in \"Site administration > Plugins > Authentication\"",
          "11:   Scenario: Admin provides valid value for 'Age of digital consent'.",
          "12:     Given I set the field \"s__agedigitalconsentmap\" to multiline:",
          "13:     \"\"\"",
          "15:     AT, 14",
          "16:     BE, 14",
          "17:     \"\"\"",
          "18:     When I press \"Save changes\"",
          "19:     Then I should see \"Changes saved\"",
          "20:     And I should not see \"Some settings were not changed due to an error.\"",
          "21:     And I should not see \"The digital age of consent is not valid:\"",
          "23:   Scenario: Admin provides invalid format for 'Age of digital consent'.",
          "24:     # Try to set a value with missing space separator",
          "25:     Given I set the field \"s__agedigitalconsentmap\" to multiline:",
          "26:     \"\"\"",
          "28:     AT, 14",
          "29:     BE, 14",
          "30:     \"\"\"",
          "31:     When I press \"Save changes\"",
          "32:     Then I should not see \"Changes saved\"",
          "33:     And I should see \"Some settings were not changed due to an error.\"",
          "34:     And I should see \"The digital age of consent is not valid: \\\"*16\\\" has more or less than one comma separator.\"",
          "35:     # Try to set a value with missing default age of consent",
          "36:     When I set the field \"s__agedigitalconsentmap\" to multiline:",
          "37:     \"\"\"",
          "38:     AT, 14",
          "39:     BE, 14",
          "40:     \"\"\"",
          "41:     And I press \"Save changes\"",
          "42:     Then I should not see \"Changes saved\"",
          "43:     And I should see \"Some settings were not changed due to an error.\"",
          "44:     And I should see \"The digital age of consent is not valid: Default (*) value is missing.\"",
          "46:   Scenario: Admin provides invalid age of consent or country for 'Age of digital consent'.",
          "47:     # Try to set a value containing invalid age of consent",
          "48:     Given I set the field \"s__agedigitalconsentmap\" to multiline:",
          "49:     \"\"\"",
          "51:     AT, age",
          "52:     BE, 14",
          "53:     \"\"\"",
          "54:     When I press \"Save changes\"",
          "55:     Then I should not see \"Changes saved\"",
          "56:     And I should see \"Some settings were not changed due to an error.\"",
          "57:     And I should see \"The digital age of consent is not valid: \\\"age\\\" is not a valid value for age.\"",
          "58:     # Try to set a value containing invalid country",
          "59:     When I set the field \"s__agedigitalconsentmap\" to multiline:",
          "60:     \"\"\"",
          "62:     COUNTRY, 14",
          "63:     BE, 14",
          "64:     \"\"\"",
          "65:     And I press \"Save changes\"",
          "66:     Then I should not see \"Changes saved\"",
          "67:     And I should see \"Some settings were not changed due to an error.\"",
          "68:     And I should see \"The digital age of consent is not valid: \\\"COUNTRY\\\" is not a valid value for country.\"",
          "",
          "---------------"
        ],
        "auth/tests/behat/verifyageofconsent.feature||auth/tests/behat/verifyageofconsent.feature": [
          "File: auth/tests/behat/verifyageofconsent.feature -> auth/tests/behat/verifyageofconsent.feature",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @core @verify_age_location",
          "2: Feature: Test the 'Digital age of consent verification' feature works.",
          "3:   In order to self-register on the site",
          "4:   As an user",
          "5:   I need be to be over the age of digital consent",
          "7:   Background:",
          "8:     Given the following config values are set as admin:",
          "9:       | registerauth | email |",
          "10:       | agedigitalconsentverification | 1 |",
          "12:   Scenario: User that is not considered a digital minor attempts to self-register on the site.",
          "13:     # Try to access the sign up page.",
          "14:     Given I am on homepage",
          "15:     When I click on \"Log in\" \"link\" in the \".logininfo\" \"css_element\"",
          "16:     And I press \"Create new account\"",
          "17:     Then I should see \"Age and location verification\"",
          "18:     When I set the field \"What is your age?\" to \"16\"",
          "19:     And I set the field \"In which country do you live?\" to \"DZ\"",
          "20:     And I press \"Proceed\"",
          "21:     Then I should see \"New account\"",
          "22:     And I should see \"Choose your username and password\"",
          "23:     # Try to access the sign up page again.",
          "24:     When I press \"Cancel\"",
          "25:     And I press \"Create new account\"",
          "26:     Then I should see \"New account\"",
          "27:     And I should see \"Choose your username and password\"",
          "29:   Scenario: User that is considered a digital minor attempts to self-register on the site.",
          "30:     # Try to access the sign up page.",
          "31:     Given I am on homepage",
          "32:     When I click on \"Log in\" \"link\" in the \".logininfo\" \"css_element\"",
          "33:     And I press \"Create new account\"",
          "34:     Then I should see \"Age and location verification\"",
          "35:     When I set the field \"What is your age?\" to \"12\"",
          "36:     And I set the field \"In which country do you live?\" to \"AT\"",
          "37:     And I press \"Proceed\"",
          "38:     Then I should see \"You are considered to be a digital minor.\"",
          "39:     And I should see \"To create an account on this site please have your parent/guardian contact the following person.\"",
          "40:     # Try to access the sign up page again.",
          "41:     When I click on \"Back to the site home\" \"link\"",
          "42:     And I click on \"Log in\" \"link\" in the \".logininfo\" \"css_element\"",
          "43:     And I press \"Create new account\"",
          "44:     Then I should see \"You are considered to be a digital minor.\"",
          "45:     And I should see \"To create an account on this site please have your parent/guardian contact the following person.\"",
          "",
          "---------------"
        ],
        "auth/tests/digital_consent_test.php||auth/tests/digital_consent_test.php": [
          "File: auth/tests/digital_consent_test.php -> auth/tests/digital_consent_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die();",
          "34: class core_auth_digital_consent_testcase extends advanced_testcase {",
          "36:     public function test_is_age_digital_consent_verification_enabled() {",
          "37:         global $CFG;",
          "38:         $this->resetAfterTest();",
          "41:         $CFG->agedigitalconsentverification = 0;",
          "43:         $isenabled = \\core_auth\\digital_consent::is_age_digital_consent_verification_enabled();",
          "44:         $this->assertFalse($isenabled);",
          "45:     }",
          "47:     public function test_is_minor() {",
          "48:         global $CFG;",
          "49:         $this->resetAfterTest();",
          "51:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "52:             '*, 16',",
          "53:             'AT, 14',",
          "54:             'CZ, 13',",
          "55:             'DE, 14',",
          "56:             'DK, 13',",
          "57:         ]);",
          "58:         $CFG->agedigitalconsentmap = $agedigitalconsentmap;",
          "60:         $usercountry1 = 'DK';",
          "61:         $usercountry2 = 'AU';",
          "62:         $userage1 = 12;",
          "63:         $userage2 = 14;",
          "64:         $userage3 = 16;",
          "67:         $isminor = \\core_auth\\digital_consent::is_minor($userage1, $usercountry1);",
          "68:         $this->assertTrue($isminor);",
          "70:         $isminor = \\core_auth\\digital_consent::is_minor($userage2, $usercountry1);",
          "71:         $this->assertFalse($isminor);",
          "73:         $isminor = \\core_auth\\digital_consent::is_minor($userage2, $usercountry2);",
          "74:         $this->assertTrue($isminor);",
          "76:         $isminor = \\core_auth\\digital_consent::is_minor($userage3, $usercountry2);",
          "77:         $this->assertFalse($isminor);",
          "78:     }",
          "80:     public function test_parse_age_digital_consent_map_valid_format() {",
          "83:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "84:             '*, 16',",
          "85:             'AT, 14',",
          "86:             'BE, 13'",
          "87:         ]);",
          "89:         $ageconsentmapparsed = \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "91:         $this->assertEquals([",
          "92:             '*' => 16,",
          "93:             'AT' => 14,",
          "94:             'BE' => 13",
          "95:         ], $ageconsentmapparsed",
          "96:         );",
          "97:     }",
          "99:     public function test_parse_age_digital_consent_map_invalid_format_missing_spaces() {",
          "102:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "103:             '*, 16',",
          "104:             'AT14',",
          "105:         ]);",
          "107:         $this->expectException('moodle_exception');",
          "108:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvalidcomma', 'error', 'AT14'));",
          "110:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "111:     }",
          "113:     public function test_parse_age_digital_consent_map_invalid_format_missing_default_value() {",
          "116:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "117:             'BE, 16',",
          "118:             'AT, 14'",
          "119:         ]);",
          "121:         $this->expectException('moodle_exception');",
          "122:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvaliddefault', 'error'));",
          "124:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "125:     }",
          "127:     public function test_parse_age_digital_consent_map_invalid_format_invalid_country() {",
          "130:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "131:             '*, 16',",
          "132:             'TEST, 14'",
          "133:         ]);",
          "135:         $this->expectException('moodle_exception');",
          "136:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvalidcountry', 'error', 'TEST'));",
          "138:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "139:     }",
          "141:     public function test_parse_age_digital_consent_map_invalid_format_invalid_age_string() {",
          "144:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "145:             '*, 16',",
          "146:             'AT, ten'",
          "147:         ]);",
          "149:         $this->expectException('moodle_exception');",
          "150:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvalidage', 'error', 'ten'));",
          "152:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "153:     }",
          "155:     public function test_parse_age_digital_consent_map_invalid_format_missing_age() {",
          "158:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "159:             '*, 16',",
          "160:             'AT, '",
          "161:         ]);",
          "163:         $this->expectException('moodle_exception');",
          "164:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvalidage', 'error', ''));",
          "166:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "167:     }",
          "169:     public function test_parse_age_digital_consent_map_invalid_format_missing_country() {",
          "172:         $agedigitalconsentmap = implode(PHP_EOL, [",
          "173:             '*, 16',",
          "174:             ', 12'",
          "175:         ]);",
          "177:         $this->expectException('moodle_exception');",
          "178:         $this->expectExceptionMessage(get_string('agedigitalconsentmapinvalidcountry', 'error', ''));",
          "180:         \\core_auth\\digital_consent::parse_age_digital_consent_map($agedigitalconsentmap);",
          "181:     }",
          "182: }",
          "",
          "---------------"
        ],
        "lang/en/admin.php||lang/en/admin.php": [
          "File: lang/en/admin.php -> lang/en/admin.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: $string['adminseesallevents'] = 'Administrators see all events';",
          "40: $string['adminseesownevents'] = 'Administrators are just like other users';",
          "41: $string['advancedfeatures'] = 'Advanced features';",
          "42: $string['allcountrycodes'] = 'All country codes';",
          "43: $string['allowattachments'] = 'Allow attachments';",
          "44: $string['allowbeforeblock'] = 'Allowed list will be processed first';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: $string['agedigitalconsentverification'] = 'Digital age of consent verification';",
          "43: $string['agedigitalconsentverification_desc'] = 'Enables verification of the digital age of consent before displaying the sign-up page for self-registration users. This protects your site from minors signing up without parental/guardian consent. <a target=\"_blank\" href=\"{$a}\">Support contact</a> details are provided to minors for further assistance.';",
          "44: $string['ageofdigitalconsentmap'] = 'Digital age of consent';",
          "45: $string['ageofdigitalconsentmap_desc'] = 'The default digital age of consent, and the age in any country where it differs from the default, may be specified here. Enter each age on a new line with format: country code, age (separated by a comma). The default age is indicated by * in place of the country code. Country codes are as specified in ISO 3166-2.';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "617: $string['installsessionerror'] = 'Can not initialise PHP session, please verify that your browser accepts cookies.';",
          "618: $string['intlrecommended'] = 'Intl extension is used to improve internationalization support, such as locale aware sorting.';",
          "619: $string['intlrequired'] = 'Intl extension is required to improve internationalization support, such as locale aware sorting and international domain names.';",
          "620: $string['invalidforgottenpasswordurl'] = 'The forgotten password URL is not a valid URL.';",
          "621: $string['invalidsection'] = 'Invalid section.';",
          "622: $string['invaliduserchangeme'] = 'Username \"changeme\" is reserved -- you cannot create an account with it.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "624: $string['invalidagedigitalconsent'] = 'The digital age of consent is not valid: {$a}';",
          "",
          "---------------"
        ],
        "lang/en/cache.php||lang/en/cache.php": [
          "File: lang/en/cache.php -> lang/en/cache.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: $string['cachedef_observers'] = 'Event observers';",
          "63: $string['cachedef_plugin_functions'] = 'Plugins available callbacks';",
          "64: $string['cachedef_plugin_manager'] = 'Plugin info manager';",
          "65: $string['cachedef_postprocessedcss'] = 'Post processed CSS';",
          "66: $string['cachedef_tagindexbuilder'] = 'Search results for tagged items';",
          "67: $string['cachedef_questiondata'] = 'Question definitions';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: $string['cachedef_presignup'] = 'Pre sign-up data for particular unregistered user';",
          "",
          "---------------"
        ],
        "lang/en/error.php||lang/en/error.php": [
          "File: lang/en/error.php -> lang/en/error.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: $string['activityisscheduledfordeletion'] = 'Activity deletion in progress...';",
          "26: $string['authnotexisting'] = 'The autorization plugin doesn\\'t exist';",
          "27: $string['backupcontainexternal'] = 'This backup file contains external Moodle Network Hosts that are not configured locally';",
          "28: $string['backuptablefail'] = 'Backup tables could NOT be set up successfully!';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: $string['agedigitalconsentmapinvalidage'] = '\"{$a}\" is not a valid value for age.';",
          "27: $string['agedigitalconsentmapinvalidcomma'] = '\"{$a}\" has more or less than one comma separator.';",
          "28: $string['agedigitalconsentmapinvalidcountry'] = '\"{$a}\" is not a valid value for country.';",
          "29: $string['agedigitalconsentmapinvaliddefault'] = 'Default (*) value is missing.';",
          "30: $string['agelocationverificationdisabled'] = 'Age and location verification disabled';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177: $string['confirmsesskeybad'] = 'Sorry, but your session key could not be confirmed to carry out this action.  This security feature prevents against accidental or malicious execution of important functions in your name.  Please make sure you really wanted to execute this function.';",
          "178: $string['couldnotassignrole'] = 'A serious but unspecified error occurred while trying to assign a role to you';",
          "179: $string['couldnotupdatenoexistinguser'] = 'Cannot update the user - user doesn\\'t exist';",
          "180: $string['countriesphpempty'] = 'Error: The file countries.php in language pack {$a} is empty or missing.';",
          "181: $string['coursedoesnotbelongtocategory'] = 'The course doesn\\'t belong to this category';",
          "182: $string['courseformatnotfound'] = 'The course format \\'{$a}\\' doesn\\'t exist or is not recognized';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: $string['couldnotverifyagedigitalconsent'] = 'An error occurred while trying to verify the age of digital consent.<br />Please contact administrator.';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "578: $string['usernotupdatednotexists'] = 'User not updated - does not exist';",
          "579: $string['userquotalimit'] = 'You have reached your file quota limit.';",
          "580: $string['userselectortoomany'] = 'user_selector got more than one selected user, even though multiselect is false.';",
          "581: $string['wrongcall'] = 'This script is called wrongly';",
          "582: $string['wrongcontextid'] = 'Context ID was incorrect (cannot find it)';",
          "583: $string['wrongdestpath'] = 'Wrong destination path';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "587: $string['verifyagedigitalconsentnotpossible'] = 'Sorry, digital age consent verification is not possible at this time.';",
          "",
          "---------------"
        ],
        "lang/en/moodle.php||lang/en/moodle.php": [
          "File: lang/en/moodle.php -> lang/en/moodle.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: $string['afterresource'] = 'After resource \"{$a}\"';",
          "120: $string['aftersection'] = 'After section \"{$a}\"';",
          "121: $string['again'] = 'again';",
          "122: $string['aimid'] = 'AIM ID';",
          "123: $string['ajaxuse'] = 'AJAX and Javascript';",
          "124: $string['all'] = 'All';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: $string['agelocationverification'] = 'Age and location verification';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170: $string['back'] = 'Back';",
          "171: $string['backto'] = 'Back to {$a}';",
          "172: $string['backtocourselisting'] = 'Back to course listing';",
          "173: $string['backtopageyouwereon'] = 'Back to the page you were on';",
          "174: $string['backtoparticipants'] = 'Back to participants list';",
          "175: $string['backup'] = 'Backup';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174: $string['backtohome'] = 'Back to the site home';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "267: $string['confirmednot'] = 'Your registration has not yet been confirmed!';",
          "268: $string['confirmcheckfull'] = 'Are you absolutely sure you want to confirm {$a} ?';",
          "269: $string['confirmcoursemove'] = 'Are you sure you want to move this course ({$a->course}) into this category ({$a->category})?';",
          "270: $string['content'] = 'Content';",
          "271: $string['continue'] = 'Continue';",
          "272: $string['continuetocourse'] = 'Click here to enter your course';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "272: $string['considereddigitalminor'] = 'You are considered to be a digital minor.';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "498: $string['deselectall'] = 'Deselect all';",
          "499: $string['detailedless'] = 'Less detailed';",
          "500: $string['detailedmore'] = 'More detailed';",
          "501: $string['directory'] = 'Directory';",
          "502: $string['disable'] = 'Disable';",
          "503: $string['disabledcomments'] = 'Comments are disabled';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "504: $string['digitalminor'] = 'Digital minor';",
          "505: $string['digitalminor_desc'] = 'To create an account on this site please have your parent/guardian contact the following person.';",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "794: $string['expandall'] = 'Expand all';",
          "795: $string['expandcategory'] = 'Expand {$a}';",
          "796: $string['explanation'] = 'Explanation';",
          "797: $string['extendperiod'] = 'Extended period';",
          "798: $string['failedloginattempts'] = '{$a->attempts} failed logins since your last login';",
          "799: $string['feedback'] = 'Feedback';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "802: $string['explanationdigitalminor'] = 'This information is required to determine if your age is over the digital age of consent. This is the age when an individual can consent to terms and conditions and their data being legally stored and processed.';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1547: $string['privatefiles'] = 'Private files';",
          "1548: $string['private_files_handler'] = 'Store attachments to an e-mail in the user\\'s private files storage space.';",
          "1549: $string['private_files_handler_name'] = 'Email to Private files';",
          "1550: $string['profile'] = 'Profile';",
          "1551: $string['profilenotshown'] = 'This profile description will not be shown until this person is enrolled in at least one course.';",
          "1552: $string['publicprofile'] = 'Public profile';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1556: $string['proceed'] = 'Proceed';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2102:   {$a->profileurl}';",
          "2103: $string['whatforlink'] = 'What do you want to do with the link?';",
          "2104: $string['whatforpage'] = 'What do you want to do with the text?';",
          "2105: $string['whattocallzip'] = 'What do you want to call the zip file?';",
          "2106: $string['whattodo'] = 'What to do';",
          "2107: $string['windowclosing'] = 'This window should close automatically. If not, please close it now.';",
          "2108: $string['withchosenfiles'] = 'With chosen files';",
          "2109: $string['withdisablednote'] = '{$a} (disabled)';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2112: $string['whatisyourage'] = 'What is your age?';",
          "2115: $string['wheredoyoulive'] = 'In which country do you live?';",
          "2116: $string['whyisthisrequired'] = 'Why is this required?';",
          "",
          "---------------"
        ],
        "lib/adminlib.php||lib/adminlib.php": [
          "File: lib/adminlib.php -> lib/adminlib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "10579:         return true;",
          "10580:     }",
          "10581: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10589: class admin_setting_agedigitalconsentmap extends admin_setting_configtextarea {",
          "10602:     public function __construct($name, $visiblename, $description, $defaultsetting, $paramtype = PARAM_RAW,",
          "10603:                                 $cols = '60', $rows = '8') {",
          "10604:         parent::__construct($name, $visiblename, $description, $defaultsetting, $paramtype, $cols, $rows);",
          "10606:         $this->set_force_ltr(false);",
          "10607:     }",
          "10615:     public function validate($data) {",
          "10616:         if (empty($data)) {",
          "10617:             return true;",
          "10618:         }",
          "10620:         try {",
          "10621:             \\core_auth\\digital_consent::parse_age_digital_consent_map($data);",
          "10622:         } catch (\\moodle_exception $e) {",
          "10623:             return get_string('invalidagedigitalconsent', 'admin', $e->getMessage());",
          "10624:         }",
          "10626:         return true;",
          "10627:     }",
          "10628: }",
          "",
          "---------------"
        ],
        "lib/db/caches.php||lib/db/caches.php": [
          "File: lib/db/caches.php -> lib/db/caches.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:         'simpledata' => true,",
          "363:         'staticacceleration' => true,",
          "364:     ),",
          "365: );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "369:     'presignup' => array(",
          "370:         'mode' => cache_store::MODE_SESSION,",
          "371:         'simplekeys' => true,",
          "372:         'simpledata' => true,",
          "373:         'ttl' => 1800,",
          "374:     ),",
          "",
          "---------------"
        ],
        "lib/db/services.php||lib/db/services.php": [
          "File: lib/db/services.php -> lib/db/services.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         'ajax'          => true,",
          "51:         'loginrequired' => false,",
          "52:     ),",
          "53:     'core_badges_get_user_badges' => array(",
          "54:         'classname'     => 'core_badges_external',",
          "55:         'methodname'    => 'get_user_badges',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:     'core_auth_is_minor' => array(",
          "54:         'classname'   => 'core_auth_external',",
          "55:         'methodname'  => 'is_minor',",
          "56:         'description' => 'Requests a check if a user is a digital minor.',",
          "57:         'type'        => 'read',",
          "58:         'loginrequired' => false,",
          "59:     ),",
          "",
          "---------------"
        ],
        "lib/outputrenderers.php||lib/outputrenderers.php": [
          "File: lib/outputrenderers.php -> lib/outputrenderers.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4451:         return $this->render_from_template('core/signup_form_layout', $context);",
          "4452:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4460:     protected function render_verify_age_location_page($page) {",
          "4461:         $context = $page->export_for_template($this);",
          "4463:         return $this->render_from_template('core/auth_verify_age_location_page', $context);",
          "4464:     }",
          "4472:     protected function render_digital_minor_page($page) {",
          "4473:         $context = $page->export_for_template($this);",
          "4475:         return $this->render_from_template('core/auth_digital_minor_page', $context);",
          "4476:     }",
          "",
          "---------------"
        ],
        "lib/templates/auth_digital_minor_page.mustache||lib/templates/auth_digital_minor_page.mustache": [
          "File: lib/templates/auth_digital_minor_page.mustache -> lib/templates/auth_digital_minor_page.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {{!",
          "2:     This file is part of Moodle - http://moodle.org/",
          "4:     Moodle is free software: you can redistribute it and/or modify",
          "5:     it under the terms of the GNU General Public License as published by",
          "6:     the Free Software Foundation, either version 3 of the License, or",
          "7:     (at your option) any later version.",
          "9:     Moodle is distributed in the hope that it will be useful,",
          "10:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "11:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "12:     GNU General Public License for more details.",
          "14:     You should have received a copy of the GNU General Public License",
          "15:     along with Moodle.  If not, see <http://www.gnu.org/licenses/>.",
          "16: }}",
          "17: {{!",
          "18:     @template core_auth/output/digital_minor_page",
          "20:     Example context (json):",
          "21:     {",
          "22:         \"logourl\": \"https://moodle.org/logo/moodle-logo.svg\",",
          "23:         \"sitename\": \"Site name\",",
          "24:         \"supportname\": \"John Doe\",",
          "25:         \"supportemail\": \"johndoe@example.com\",",
          "26:         \"homelink\": \"/\"",
          "27:     }",
          "28: }}",
          "29: <h3>{{#str}}considereddigitalminor{{/str}}</h3>",
          "30: <p class=\"m-b-0\">{{#str}}digitalminor_desc{{/str}}</p>",
          "31: <div class=\"p-t-1 p-b-1\">",
          "32:     <p class=\"m-b-0\">{{{supportname}}}</p>",
          "33:     <p class=\"m-b-0\">{{{supportemail}}}</p>",
          "34: </div>",
          "35: <div class=\"backlink\">",
          "36:     <a href=\"{{homelink}}\">{{#str}}backtohome{{/str}}</a>",
          "37: </div>",
          "",
          "---------------"
        ],
        "lib/templates/auth_verify_age_location_page.mustache||lib/templates/auth_verify_age_location_page.mustache": [
          "File: lib/templates/auth_verify_age_location_page.mustache -> lib/templates/auth_verify_age_location_page.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {{!",
          "2:     This file is part of Moodle - http://moodle.org/",
          "4:     Moodle is free software: you can redistribute it and/or modify",
          "5:     it under the terms of the GNU General Public License as published by",
          "6:     the Free Software Foundation, either version 3 of the License, or",
          "7:     (at your option) any later version.",
          "9:     Moodle is distributed in the hope that it will be useful,",
          "10:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "11:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "12:     GNU General Public License for more details.",
          "14:     You should have received a copy of the GNU General Public License",
          "15:     along with Moodle.  If not, see <http://www.gnu.org/licenses/>.",
          "16: }}",
          "17: {{!",
          "18:     @template core_auth/output/verify_age_location_page",
          "20:     Example context (json):",
          "21:     {",
          "22:         \"logourl\": \"https://moodle.org/logo/moodle-logo.svg\",",
          "23:         \"sitename\": \"Site name\",",
          "24:         \"error\": \"Error message\",",
          "25:         \"formhtml\": \"(Form html would go here)\"",
          "26:     }",
          "27: }}",
          "28: {{#error}}",
          "29:     <div class=\"alert alert-danger\" role=\"alert\">",
          "30:         {{{error}}}",
          "31:     </div>",
          "32: {{/error}}",
          "33: <h3>{{#str}}agelocationverification{{/str}}</h3>",
          "34: {{{formhtml}}}",
          "35: <hr>",
          "36: <h3>{{#str}}whyisthisrequired{{/str}}</h3>",
          "37: <p >{{#str}}explanationdigitalminor{{/str}}</p>",
          "",
          "---------------"
        ],
        "login/digital_minor.php||login/digital_minor.php": [
          "File: login/digital_minor.php -> login/digital_minor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "26: require('../config.php');",
          "27: require_once($CFG->libdir . '/authlib.php');",
          "29: $authplugin = signup_is_enabled();",
          "31: if (!$authplugin || !\\core_auth\\digital_consent::is_age_digital_consent_verification_enabled()) {",
          "33:     redirect(new moodle_url('/'), get_string('verifyagedigitalconsentnotpossible', 'error'));",
          "34: }",
          "36: $PAGE->set_context(context_system::instance());",
          "37: $PAGE->set_url($CFG->wwwroot.'/login/digital_minor.php');",
          "39: if (isloggedin() and !isguestuser()) {",
          "41:     redirect(new moodle_url('/'), get_string('cannotsignup', 'error', fullname($USER)));",
          "42: }",
          "44: $cache = cache::make('core', 'presignup');",
          "45: $isminor = $cache->get('isminor');",
          "46: if ($isminor !== 'yes') {",
          "48:     redirect(new moodle_url('/login/index.php'));",
          "49: }",
          "51: $PAGE->navbar->add(get_string('login'));",
          "52: $PAGE->navbar->add(get_string('digitalminor'));",
          "54: $PAGE->set_pagelayout('login');",
          "55: $PAGE->set_title(get_string('digitalminor'));",
          "56: $sitename = format_string($SITE->fullname);",
          "57: $PAGE->set_heading($sitename);",
          "59: $page = new \\core_auth\\output\\digital_minor_page();",
          "61: echo $OUTPUT->header();",
          "62: echo $OUTPUT->render($page);",
          "63: echo $OUTPUT->footer();",
          "",
          "---------------"
        ],
        "login/signup.php||login/signup.php": [
          "File: login/signup.php -> login/signup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:     exit;",
          "61: }",
          "65: core_login_pre_signup_requests();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: if (\\core_auth\\digital_consent::is_age_digital_consent_verification_enabled()) {",
          "65:     $cache = cache::make('core', 'presignup');",
          "66:     $isminor = $cache->get('isminor');",
          "67:     if ($isminor === false) {",
          "69:         redirect(new moodle_url('/login/verify_age_location.php'));",
          "70:     } else if ($isminor === 'yes') {",
          "72:         redirect(new moodle_url('/login/digital_minor.php'));",
          "73:     }",
          "74: }",
          "",
          "---------------"
        ],
        "login/verify_age_location.php||login/verify_age_location.php": [
          "File: login/verify_age_location.php -> login/verify_age_location.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "26: require('../config.php');",
          "27: require_once($CFG->libdir . '/authlib.php');",
          "29: $authplugin = signup_is_enabled();",
          "31: if (!$authplugin || !\\core_auth\\digital_consent::is_age_digital_consent_verification_enabled()) {",
          "33:     redirect(new moodle_url('/'), get_string('verifyagedigitalconsentnotpossible', 'error'));",
          "34: }",
          "36: $PAGE->set_context(context_system::instance());",
          "37: $PAGE->set_url(new moodle_url('/login/verify_age_location.php'));",
          "39: if (isloggedin() and !isguestuser()) {",
          "41:     redirect(new moodle_url('/'), get_string('cannotsignup', 'error', fullname($USER)));",
          "42: }",
          "44: $cache = cache::make('core', 'presignup');",
          "45: $isminor = $cache->get('isminor');",
          "46: if ($isminor === 'yes') {",
          "48:     redirect(new moodle_url('/login/digital_minor.php'));",
          "49: } else if ($isminor === 'no') {",
          "51:     redirect(new moodle_url('/login/signup.php'));",
          "52: }",
          "54: $PAGE->navbar->add(get_string('login'));",
          "55: $PAGE->navbar->add(get_string('agelocationverification'));",
          "57: $PAGE->set_pagelayout('login');",
          "58: $PAGE->set_title(get_string('agelocationverification'));",
          "59: $sitename = format_string($SITE->fullname);",
          "60: $PAGE->set_heading($sitename);",
          "62: $mform = new \\core_auth\\form\\verify_age_location_form();",
          "63: $page = new \\core_auth\\output\\verify_age_location_page($mform);",
          "65: if ($mform->is_cancelled()) {",
          "66:     redirect(new moodle_url('/login/index.php'));",
          "67: } else if ($data = $mform->get_data()) {",
          "68:     try {",
          "69:         $isminor = \\core_auth\\digital_consent::is_minor($data->age, $data->country);",
          "70:         cache::make('core', 'presignup')->set('isminor', $isminor ? 'yes' : 'no');",
          "71:         if ($isminor) {",
          "72:             redirect(new moodle_url('/login/digital_minor.php'));",
          "73:         } else {",
          "74:             redirect(new moodle_url('/login/signup.php'));",
          "75:         }",
          "76:     } catch (moodle_exception $e) {",
          "78:         $errormessage = get_string('couldnotverifyagedigitalconsent', 'error');",
          "79:         $page = new \\core_auth\\output\\verify_age_location_page($mform, $errormessage);",
          "80:         echo $OUTPUT->header();",
          "81:         echo $OUTPUT->render($page);",
          "82:         echo $OUTPUT->footer();",
          "83:     }",
          "84: } else {",
          "85:     echo $OUTPUT->header();",
          "86:     echo $OUTPUT->render($page);",
          "87:     echo $OUTPUT->footer();",
          "88: }",
          "",
          "---------------"
        ],
        "theme/boost/templates/core/auth_digital_minor_page.mustache||theme/boost/templates/core/auth_digital_minor_page.mustache": [
          "File: theme/boost/templates/core/auth_digital_minor_page.mustache -> theme/boost/templates/core/auth_digital_minor_page.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {{!",
          "2:     This file is part of Moodle - http://moodle.org/",
          "4:     Moodle is free software: you can redistribute it and/or modify",
          "5:     it under the terms of the GNU General Public License as published by",
          "6:     the Free Software Foundation, either version 3 of the License, or",
          "7:     (at your option) any later version.",
          "9:     Moodle is distributed in the hope that it will be useful,",
          "10:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "11:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "12:     GNU General Public License for more details.",
          "14:     You should have received a copy of the GNU General Public License",
          "15:     along with Moodle.  If not, see <http://www.gnu.org/licenses/>.",
          "16: }}",
          "17: {{!",
          "18:     @template core_auth/output/digital_minor_page",
          "20:     Example context (json):",
          "21:     {",
          "22:         \"logourl\": \"https://moodle.org/logo/moodle-logo.svg\",",
          "23:         \"sitename\": \"Site name\",",
          "24:         \"supportname\": \"John Doe\",",
          "25:         \"supportemail\": \"johndoe@example.com\",",
          "26:         \"homelink\": \"/\"",
          "27:     }",
          "28: }}",
          "29: <div class=\"container-fluid\">",
          "30:     <div class=\"row\">",
          "31:         <div class=\"col-md-8 push-md-2 col-xl-6 push-xl-3\">",
          "32:             <div class=\"card\">",
          "33:                 <div class=\"card-block\">",
          "34:                     <div class=\"card-title text-xs-center\">",
          "35:                         {{#logourl}}",
          "36:                             <h2><img src=\"{{logourl}}\" title=\"{{sitename}}\" alt=\"{{sitename}}\"/></h2>",
          "37:                         {{/logourl}}",
          "38:                         {{^logourl}}",
          "39:                             <h2>{{sitename}}</h2>",
          "40:                         {{/logourl}}",
          "41:                         <hr>",
          "42:                     </div>",
          "43:                      <div class=\"card-title\">",
          "44:                         <h3>{{#str}}considereddigitalminor{{/str}}</h3>",
          "45:                     </div>",
          "46:                     <div class=\"p-t-1 p-b-2\">",
          "47:                         <p>{{#str}}digitalminor_desc{{/str}}</p>",
          "48:                         <p class=\"m-b-0\">{{{supportname}}}</p>",
          "49:                         <p class=\"m-b-0\">{{{supportemail}}}</p>",
          "50:                     </div>",
          "51:                     <div class=\"backlink\">",
          "52:                         <a href=\"{{homelink}}\">{{#str}}backtohome{{/str}}</a>",
          "53:                     </div>",
          "54:                 </div>",
          "55:             </div>",
          "56:         </div>",
          "57:     </div>",
          "58: </div>",
          "",
          "---------------"
        ],
        "theme/boost/templates/core/auth_verify_age_location_page.mustache||theme/boost/templates/core/auth_verify_age_location_page.mustache": [
          "File: theme/boost/templates/core/auth_verify_age_location_page.mustache -> theme/boost/templates/core/auth_verify_age_location_page.mustache",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: {{!",
          "2:     This file is part of Moodle - http://moodle.org/",
          "4:     Moodle is free software: you can redistribute it and/or modify",
          "5:     it under the terms of the GNU General Public License as published by",
          "6:     the Free Software Foundation, either version 3 of the License, or",
          "7:     (at your option) any later version.",
          "9:     Moodle is distributed in the hope that it will be useful,",
          "10:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "11:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "12:     GNU General Public License for more details.",
          "14:     You should have received a copy of the GNU General Public License",
          "15:     along with Moodle.  If not, see <http://www.gnu.org/licenses/>.",
          "16: }}",
          "17: {{!",
          "18:     @template core_auth/output/verify_age_location_page",
          "20:     Example context (json):",
          "21:     {",
          "22:         \"logourl\": \"https://moodle.org/logo/moodle-logo.svg\",",
          "23:         \"sitename\": \"Site name\",",
          "24:         \"error\": \"Error message\",",
          "25:         \"formhtml\": \"(Form html would go here)\"",
          "26:     }",
          "27: }}",
          "28: <div class=\"container-fluid\">",
          "29:     <div class=\"row\">",
          "30:         <div class=\"col-md-8 push-md-2 col-xl-6 push-xl-3\">",
          "31:             <div class=\"card\">",
          "32:                 <div class=\"card-block\">",
          "33:                     <div class=\"card-title text-xs-center\">",
          "34:                         {{#logourl}}",
          "35:                             <h2><img src=\"{{logourl}}\" title=\"{{sitename}}\" alt=\"{{sitename}}\"/></h2>",
          "36:                         {{/logourl}}",
          "37:                         {{^logourl}}",
          "38:                             <h2>{{sitename}}</h2>",
          "39:                         {{/logourl}}",
          "40:                         <hr>",
          "41:                     </div>",
          "42:                     {{#error}}",
          "43:                         <div class=\"alert alert-danger\" role=\"alert\">",
          "44:                             {{{error}}}",
          "45:                         </div>",
          "46:                     {{/error}}",
          "47:                     <div class=\"card-title\">",
          "48:                         <h3>{{#str}}agelocationverification{{/str}}</h3>",
          "49:                     </div>",
          "50:                     <div class=\"m-t-2 m-b-2\">",
          "51:                         {{{formhtml}}}",
          "52:                     </div>",
          "53:                     <hr>",
          "54:                     <div class=\"card-title\">",
          "55:                         <h3>{{#str}}whyisthisrequired{{/str}}</h3>",
          "56:                     </div>",
          "57:                     <div class=\"m-t-1\">",
          "58:                         <p >{{#str}}explanationdigitalminor{{/str}}</p>",
          "59:                     </div>",
          "60:                 </div>",
          "61:             </div>",
          "62:         </div>",
          "63:     </div>",
          "64: </div>",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018022800.00;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018022800.02;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5436b0ed021c697de09b7b593ae64438d7974090",
      "candidate_info": {
        "commit_hash": "5436b0ed021c697de09b7b593ae64438d7974090",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/5436b0ed021c697de09b7b593ae64438d7974090",
        "files": [
          "lib/db/install.xml",
          "lib/db/tag.php",
          "lib/db/upgrade.php",
          "tag/classes/area.php",
          "tag/classes/tag.php",
          "version.php"
        ],
        "message": "MDL-61363 tag: allow tagging in different context to item",
        "before_after_code_files": [
          "lib/db/tag.php||lib/db/tag.php",
          "lib/db/upgrade.php||lib/db/upgrade.php",
          "tag/classes/area.php||tag/classes/area.php",
          "tag/classes/tag.php||tag/classes/tag.php",
          "version.php||version.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.php||version.php"
          ],
          "candidate": [
            "version.php||version.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/db/tag.php||lib/db/tag.php": [
          "File: lib/db/tag.php -> lib/db/tag.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     array(",
          "70:         'itemtype' => 'question', // Questions.",
          "71:         'component' => 'core_question',",
          "72:     ),",
          "73:     array(",
          "74:         'itemtype' => 'post', // Blog posts.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:         'multiplecontexts' => true,",
          "",
          "---------------"
        ],
        "lib/db/upgrade.php||lib/db/upgrade.php": [
          "File: lib/db/upgrade.php -> lib/db/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1982:         upgrade_main_savepoint(true, 2018022800.01);",
          "1983:     }",
          "1985:     return true;",
          "1986: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1984:     if ($oldversion < 2018022800.02) {",
          "1986:         $table = new xmldb_table('tag_instance');",
          "1987:         $index = new xmldb_index('taggeditem', XMLDB_INDEX_UNIQUE, array('component',",
          "1988:             'itemtype', 'itemid', 'tiuserid', 'tagid'));",
          "1991:         if ($dbman->index_exists($table, $index)) {",
          "1992:             $dbman->drop_index($table, $index);",
          "1993:         }",
          "1995:         $index = new xmldb_index('taggeditem', XMLDB_INDEX_UNIQUE, array('component',",
          "1996:             'itemtype', 'itemid', 'contextid', 'tiuserid', 'tagid'));",
          "1999:         if (!$dbman->index_exists($table, $index)) {",
          "2000:             $dbman->add_index($table, $index);",
          "2001:         }",
          "2004:         upgrade_main_savepoint(true, 2018022800.02);",
          "2005:     }",
          "2007:     if ($oldversion < 2018022800.03) {",
          "2010:         $table = new xmldb_table('tag_area');",
          "2011:         $field = new xmldb_field('multiplecontexts', XMLDB_TYPE_INTEGER, '1', null,",
          "2012:             XMLDB_NOTNULL, null, '0', 'showstandard');",
          "2015:         if (!$dbman->field_exists($table, $field)) {",
          "2016:             $dbman->add_field($table, $field);",
          "2017:         }",
          "2020:         upgrade_main_savepoint(true, 2018022800.03);",
          "2021:     }",
          "",
          "---------------"
        ],
        "tag/classes/area.php||tag/classes/area.php": [
          "File: tag/classes/area.php -> tag/classes/area.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:         return null;",
          "123:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:     public static function allows_tagging_in_multiple_contexts($component, $itemtype) {",
          "143:         $itemtypes = self::get_areas();",
          "144:         if (isset($itemtypes[$itemtype][$component])) {",
          "145:             $config = $itemtypes[$itemtype][$component];",
          "146:             return isset($config->multiplecontexts) ? $config->multiplecontexts : false;",
          "147:         }",
          "148:         return false;",
          "149:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:             'tagcollid' => $record->tagcollid,",
          "218:             'callback' => $record->callback,",
          "219:             'callbackfile' => $record->callbackfile,",
          "223:         cache::make('core', 'tags')->delete('tag_area');",
          "",
          "[Removed Lines]",
          "220:             'showstandard' => isset($record->showstandard) ? $record->showstandard : core_tag_tag::BOTH_STANDARD_AND_NOT));",
          "",
          "[Added Lines]",
          "246:             'showstandard' => isset($record->showstandard) ? $record->showstandard : core_tag_tag::BOTH_STANDARD_AND_NOT,",
          "247:             'multiplecontexts' => isset($record->multiplecontexts) ? $record->multiplecontexts : 0));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "233:         global $DB;",
          "234:         $data = array_intersect_key((array)$data,",
          "235:                 array('enabled' => 1, 'tagcollid' => 1,",
          "237:         foreach ($data as $key => $value) {",
          "238:             if ($existing->$key == $value) {",
          "239:                 unset($data[$key]);",
          "",
          "[Removed Lines]",
          "236:                     'callback' => 1, 'callbackfile' => 1, 'showstandard' => 1));",
          "",
          "[Added Lines]",
          "263:                     'callback' => 1, 'callbackfile' => 1, 'showstandard' => 1,",
          "264:                     'multiplecontexts' => 1));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "310:                 if (!isset($record->callbackfile)) {",
          "311:                     $record->callbackfile = null;",
          "312:                 }",
          "313:                 $itemtypes[$record->itemtype . ':' . $record->component] = $record;",
          "314:             }",
          "315:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "341:                 if (!isset($record->multiplecontexts)) {",
          "342:                     $record->multiplecontexts = false;",
          "343:                 }",
          "",
          "---------------"
        ],
        "tag/classes/tag.php||tag/classes/tag.php": [
          "File: tag/classes/tag.php -> tag/classes/tag.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "602:         global $DB;",
          "603:         $this->ensure_fields_exist(array('name', 'rawname'), 'add_instance');",
          "606:         $taginstance->tagid        = $this->id;",
          "607:         $taginstance->component    = $component ? $component : '';",
          "608:         $taginstance->itemid       = $itemid;",
          "",
          "[Removed Lines]",
          "605:         $taginstance = new StdClass;",
          "",
          "[Added Lines]",
          "605:         $taginstance = new stdClass;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "773:             $tagobjects = array();",
          "774:         }",
          "776:         $currenttags = static::get_item_tags($component, $itemtype, $itemid, self::BOTH_STANDARD_AND_NOT, $tiuserid);",
          "780:         foreach ($currenttags as $currenttag) {",
          "782:                 $taginstance = (object)array('id' => $currenttag->taginstanceid,",
          "783:                     'itemtype' => $itemtype, 'itemid' => $itemid,",
          "784:                     'contextid' => $currenttag->taginstancecontextid, 'tiuserid' => $tiuserid);",
          "",
          "[Removed Lines]",
          "781:             if (!array_key_exists($currenttag->name, $tagobjects)) {",
          "",
          "[Added Lines]",
          "776:         $allowmultiplecontexts = core_tag_area::allows_tagging_in_multiple_contexts($component, $itemtype);",
          "778:         $taginstanceidstomovecontext = [];",
          "783:             $hasbeenrequested = array_key_exists($currenttag->name, $tagobjects);",
          "784:             $issamecontext = $currenttag->taginstancecontextid == $context->id;",
          "786:             if ($allowmultiplecontexts) {",
          "789:                 $shoulddelete = $issamecontext && !$hasbeenrequested;",
          "790:             } else {",
          "794:                 $shoulddelete = !$hasbeenrequested;",
          "798:                 if (!$shoulddelete && !$issamecontext) {",
          "799:                     $currenttag->taginstancecontextid = $context->id;",
          "800:                     $taginstanceidstomovecontext[] = $currenttag->taginstanceid;",
          "801:                 }",
          "802:             }",
          "804:             if ($shoulddelete) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "786:             }",
          "787:         }",
          "789:         $ordering = -1;",
          "790:         foreach ($tagobjects as $name => $tag) {",
          "791:             $ordering++;",
          "792:             foreach ($currenttags as $currenttag) {",
          "794:                     if ($currenttag->ordering != $ordering) {",
          "795:                         $currenttag->update_instance_ordering($currenttag->taginstanceid, $ordering);",
          "796:                     }",
          "",
          "[Removed Lines]",
          "793:                 if (strval($currenttag->name) === strval($name)) {",
          "",
          "[Added Lines]",
          "812:         if (!empty($taginstanceidstomovecontext)) {",
          "813:             static::change_instances_context($taginstanceidstomovecontext, $context);",
          "814:         }",
          "820:                 $namesmatch = strval($currenttag->name) === strval($name);",
          "822:                 if ($allowmultiplecontexts) {",
          "826:                     $contextsmatch = $currenttag->taginstancecontextid == $context->id;",
          "827:                     $shouldskipinstance = $namesmatch && $contextsmatch;",
          "828:                 } else {",
          "832:                     $shouldskipinstance = $namesmatch;",
          "833:                 }",
          "835:                 if ($shouldskipinstance) {",
          "",
          "---------------"
        ],
        "version.php||version.php": [
          "File: version.php -> version.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: defined('MOODLE_INTERNAL') || die();",
          "",
          "[Removed Lines]",
          "32: $version  = 2018022800.01;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "[Added Lines]",
          "32: $version  = 2018022800.03;              // YYYYMMDD      = weekly release date of this DEV branch.",
          "",
          "---------------"
        ]
      }
    }
  ]
}