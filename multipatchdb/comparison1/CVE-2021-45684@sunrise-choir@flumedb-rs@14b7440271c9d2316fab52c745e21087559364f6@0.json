{
  "cve_id": "CVE-2021-45684",
  "cve_desc": "An issue was discovered in the flumedb crate through 2021-01-07 for Rust. read_entry may read from uninitialized memory locations.",
  "repo": "sunrise-choir/flumedb-rs",
  "patch_hash": "14b7440271c9d2316fab52c745e21087559364f6",
  "patch_info": {
    "commit_hash": "14b7440271c9d2316fab52c745e21087559364f6",
    "repo": "sunrise-choir/flumedb-rs",
    "commit_url": "https://github.com/sunrise-choir/flumedb-rs/commit/14b7440271c9d2316fab52c745e21087559364f6",
    "files": [
      "src/go_offset_log.rs",
      "src/offset_log.rs"
    ],
    "message": "Merge pull request #12 from sunrise-choir/fix_unsoundness\n\nEnsure buffer is zeroed for reading",
    "before_after_code_files": [
      "src/go_offset_log.rs||src/go_offset_log.rs",
      "src/offset_log.rs||src/offset_log.rs"
    ]
  },
  "patch_diff": {
    "src/go_offset_log.rs||src/go_offset_log.rs": [
      "File: src/go_offset_log.rs -> src/go_offset_log.rs",
      "--- Hunk 1 ---",
      "[Context before]",
      "215: {",
      "221:     let n = read_at(&mut buf, frame.data_start())?;",
      "222:     if n < frame.data_size {",
      "",
      "[Removed Lines]",
      "218:     let mut buf = Vec::with_capacity(frame.data_size);",
      "219:     unsafe { buf.set_len(frame.data_size) };",
      "",
      "[Added Lines]",
      "218:     let mut buf = vec![0; frame.data_size];",
      "",
      "---------------"
    ],
    "src/offset_log.rs||src/offset_log.rs": [
      "File: src/offset_log.rs -> src/offset_log.rs",
      "--- Hunk 1 ---",
      "[Context before]",
      "335:     let tail_size = size_of_frame_tail::<ByteType>();",
      "336:     let to_read = frame.data_size + tail_size;",
      "341:     let n = read_at(&mut buf, frame.data_start())?;",
      "342:     if n < to_read {",
      "",
      "[Removed Lines]",
      "338:     let mut buf = Vec::with_capacity(to_read);",
      "339:     unsafe { buf.set_len(to_read) };",
      "",
      "[Added Lines]",
      "338:     let mut buf = vec![0; to_read];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "353:             offset: frame.offset,",
      "354:             data: buf,",
      "355:         },",
      "357:     })",
      "358: }",
      "",
      "[Removed Lines]",
      "356:         next: next,",
      "",
      "[Added Lines]",
      "355:         next,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b643df85ca4a56f7d96105a9eb35e1b917ee488",
      "candidate_info": {
        "commit_hash": "1b643df85ca4a56f7d96105a9eb35e1b917ee488",
        "repo": "sunrise-choir/flumedb-rs",
        "commit_url": "https://github.com/sunrise-choir/flumedb-rs/commit/1b643df85ca4a56f7d96105a9eb35e1b917ee488",
        "files": [
          "src/go_offset_log.rs",
          "src/offset_log.rs"
        ],
        "message": "Ensure buffer is zeroed for reading",
        "before_after_code_files": [
          "src/go_offset_log.rs||src/go_offset_log.rs",
          "src/offset_log.rs||src/offset_log.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/sunrise-choir/flumedb-rs/pull/12"
        ],
        "olp_code_files": {
          "patch": [
            "src/go_offset_log.rs||src/go_offset_log.rs",
            "src/offset_log.rs||src/offset_log.rs"
          ],
          "candidate": [
            "src/go_offset_log.rs||src/go_offset_log.rs",
            "src/offset_log.rs||src/offset_log.rs"
          ]
        }
      },
      "candidate_diff": {
        "src/go_offset_log.rs||src/go_offset_log.rs": [
          "File: src/go_offset_log.rs -> src/go_offset_log.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "215: {",
          "221:     let n = read_at(&mut buf, frame.data_start())?;",
          "222:     if n < frame.data_size {",
          "",
          "[Removed Lines]",
          "218:     let mut buf = Vec::with_capacity(frame.data_size);",
          "219:     unsafe { buf.set_len(frame.data_size) };",
          "",
          "[Added Lines]",
          "218:     let mut buf = vec![0; frame.data_size];",
          "",
          "---------------"
        ],
        "src/offset_log.rs||src/offset_log.rs": [
          "File: src/offset_log.rs -> src/offset_log.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "335:     let tail_size = size_of_frame_tail::<ByteType>();",
          "336:     let to_read = frame.data_size + tail_size;",
          "341:     let n = read_at(&mut buf, frame.data_start())?;",
          "342:     if n < to_read {",
          "",
          "[Removed Lines]",
          "338:     let mut buf = Vec::with_capacity(to_read);",
          "339:     unsafe { buf.set_len(to_read) };",
          "",
          "[Added Lines]",
          "338:     let mut buf = vec![0; to_read];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "353:             offset: frame.offset,",
          "354:             data: buf,",
          "355:         },",
          "357:     })",
          "358: }",
          "",
          "[Removed Lines]",
          "356:         next: next,",
          "",
          "[Added Lines]",
          "355:         next,",
          "",
          "---------------"
        ]
      }
    }
  ]
}