{
  "cve_id": "CVE-2021-35440",
  "cve_desc": "Smashing 1.3.4 is vulnerable to Cross Site Scripting (XSS). A URL for a widget can be crafted and used to execute JavaScript on the victim's computer. The JavaScript code can then steal data available in the session/cookies depending on the user environment (e.g. if re-using internal URL's for deploying, or cookies that are very permissive) private information may be retrieved by the attacker.",
  "repo": "Smashing/smashing",
  "patch_hash": "f4648137ae77aa2a9ccd14b2e6eeaed2cfb32da3",
  "patch_info": {
    "commit_hash": "f4648137ae77aa2a9ccd14b2e6eeaed2cfb32da3",
    "repo": "Smashing/smashing",
    "commit_url": "https://github.com/Smashing/smashing/pull/186/commits/f4648137ae77aa2a9ccd14b2e6eeaed2cfb32da3",
    "files": [
      "lib/dashing/app.rb",
      "test/app_test.rb"
    ],
    "message": "escape widget error message; prevent xss",
    "before_after_code_files": [
      "lib/dashing/app.rb||lib/dashing/app.rb",
      "test/app_test.rb||test/app_test.rb"
    ]
  },
  "patch_diff": {
    "lib/dashing/app.rb||lib/dashing/app.rb": [
      "File: lib/dashing/app.rb -> lib/dashing/app.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:     # override with auth logic",
      "26:   end",
      "28:   def authenticated?(token)",
      "29:     return true unless settings.auth_token",
      "30:     token && Rack::Utils.secure_compare(settings.auth_token, token)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28:   def h(text)",
      "29:     Rack::Utils.escape_html(text)",
      "30:   end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "129:     return Tilt[language].new(file).render if File.exist?(file)",
      "130:   end",
      "133: end",
      "135: Thin::Server.class_eval do",
      "",
      "[Removed Lines]",
      "132:   \"Drats! Unable to find a widget file named: #{params[:widget]} to render.\"",
      "",
      "[Added Lines]",
      "136:   \"Drats! Unable to find a widget file named: #{h(params[:widget])} to render.\"",
      "",
      "---------------"
    ],
    "test/app_test.rb||test/app_test.rb": [
      "File: test/app_test.rb -> test/app_test.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "200:     end",
      "201:   end",
      "203:   def with_generated_project",
      "204:     source_path = File.expand_path('../../templates', __FILE__)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "203:   def test_get_xss_widget",
      "204:     with_generated_project do",
      "205:       get '/views/nowidget-<h1>.html'",
      "206:       assert_equal 200, last_response.status",
      "207:       assert_equal last_response.body, 'Drats! Unable to find a widget file named: nowidget-&lt;h1&gt; to render.'",
      "208:     end",
      "209:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d1577b1119b483071634c2e100503639de648580",
      "candidate_info": {
        "commit_hash": "d1577b1119b483071634c2e100503639de648580",
        "repo": "Smashing/smashing",
        "commit_url": "https://github.com/Smashing/smashing/commit/d1577b1119b483071634c2e100503639de648580",
        "files": [
          "test/app_test.rb"
        ],
        "message": "Escape URL in test",
        "before_after_code_files": [
          "test/app_test.rb||test/app_test.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/Smashing/smashing/pull/186"
        ],
        "olp_code_files": {
          "patch": [
            "test/app_test.rb||test/app_test.rb"
          ],
          "candidate": [
            "test/app_test.rb||test/app_test.rb"
          ]
        }
      },
      "candidate_diff": {
        "test/app_test.rb||test/app_test.rb": [
          "File: test/app_test.rb -> test/app_test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:   def test_get_xss_widget",
          "204:     with_generated_project do",
          "206:       assert_equal 200, last_response.status",
          "207:       assert_equal last_response.body, 'Drats! Unable to find a widget file named: nowidget-&lt;h1&gt; to render.'",
          "208:     end",
          "",
          "[Removed Lines]",
          "205:       get '/views/nowidget-<h1>.html'",
          "",
          "[Added Lines]",
          "205:       get CGI.escape('/views/nowidget-<h1>.html')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9816ce1fbea0c6219c6660fda6887375c5f1e84",
      "candidate_info": {
        "commit_hash": "d9816ce1fbea0c6219c6660fda6887375c5f1e84",
        "repo": "Smashing/smashing",
        "commit_url": "https://github.com/Smashing/smashing/commit/d9816ce1fbea0c6219c6660fda6887375c5f1e84",
        "files": [
          "lib/dashing/app.rb",
          "test/app_test.rb"
        ],
        "message": "escape widget error message; prevent xss",
        "before_after_code_files": [
          "lib/dashing/app.rb||lib/dashing/app.rb",
          "test/app_test.rb||test/app_test.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/dashing/app.rb||lib/dashing/app.rb",
            "test/app_test.rb||test/app_test.rb"
          ],
          "candidate": [
            "lib/dashing/app.rb||lib/dashing/app.rb",
            "test/app_test.rb||test/app_test.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/dashing/app.rb||lib/dashing/app.rb": [
          "File: lib/dashing/app.rb -> lib/dashing/app.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     # override with auth logic",
          "26:   end",
          "28:   def authenticated?(token)",
          "29:     return true unless settings.auth_token",
          "30:     token && Rack::Utils.secure_compare(settings.auth_token, token)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   def h(text)",
          "29:     Rack::Utils.escape_html(text)",
          "30:   end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:     return Tilt[language].new(file).render if File.exist?(file)",
          "130:   end",
          "133: end",
          "135: Thin::Server.class_eval do",
          "",
          "[Removed Lines]",
          "132:   \"Drats! Unable to find a widget file named: #{params[:widget]} to render.\"",
          "",
          "[Added Lines]",
          "136:   \"Drats! Unable to find a widget file named: #{h(params[:widget])} to render.\"",
          "",
          "---------------"
        ],
        "test/app_test.rb||test/app_test.rb": [
          "File: test/app_test.rb -> test/app_test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "200:     end",
          "201:   end",
          "203:   def with_generated_project",
          "204:     source_path = File.expand_path('../../templates', __FILE__)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:   def test_get_xss_widget",
          "204:     with_generated_project do",
          "205:       get '/views/nowidget-<h1>.html'",
          "206:       assert_equal 200, last_response.status",
          "207:       assert_equal last_response.body, 'Drats! Unable to find a widget file named: nowidget-&lt;h1&gt; to render.'",
          "208:     end",
          "209:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}