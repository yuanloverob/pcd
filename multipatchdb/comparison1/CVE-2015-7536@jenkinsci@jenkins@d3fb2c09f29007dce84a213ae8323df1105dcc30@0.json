{
  "cve_id": "CVE-2015-7536",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in Jenkins before 1.640 and LTS before 1.625.2 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors related to workspaces and archived artifacts.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "d3fb2c09f29007dce84a213ae8323df1105dcc30",
  "patch_info": {
    "commit_hash": "d3fb2c09f29007dce84a213ae8323df1105dcc30",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3fb2c09f29007dce84a213ae8323df1105dcc30",
    "files": [
      "core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
      "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java"
    ],
    "message": "[FIX SECURITY-95] Add CSP headers to files served by Jenkins",
    "before_after_code_files": [
      "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
      "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java||test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java": [
      "File: core/src/main/java/hudson/model/DirectoryBrowserSupport.java -> core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "47: import org.apache.commons.io.IOUtils;",
      "48: import org.apache.tools.zip.ZipEntry;",
      "49: import org.apache.tools.zip.ZipOutputStream;",
      "50: import org.kohsuke.stapler.HttpResponse;",
      "51: import org.kohsuke.stapler.StaplerRequest;",
      "52: import org.kohsuke.stapler.StaplerResponse;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: import org.kohsuke.accmod.Restricted;",
      "51: import org.kohsuke.accmod.restrictions.NoExternalUse;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "308:             rsp.serveFile(req, in, lastModified, -1, length, \"plain.txt\");",
      "309:         } else {",
      "310:             rsp.serveFile(req, in, lastModified, -1, length, baseFile.getName() );",
      "311:         }",
      "312:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "312:             String csp = System.getProperty(DirectoryBrowserSupport.class.getName() + \".CSP\");",
      "313:             if (csp == null) {",
      "315:                 csp = DEFAULT_CSP_VALUE;",
      "316:             }",
      "317:             if (!csp.trim().equals(\"\")) {",
      "319:                 for (String header : new String[]{\"Content-Security-Policy\", \"X-WebKit-CSP\", \"X-Content-Security-Policy\"}) {",
      "320:                     rsp.setHeader(header, csp);",
      "321:                 }",
      "322:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "576:     private static final Logger LOGGER = Logger.getLogger(DirectoryBrowserSupport.class.getName());",
      "577: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "591:     @Restricted(NoExternalUse.class)",
      "592:     public static final String DEFAULT_CSP_VALUE = \"sandbox; default-src 'none'; img-src 'self'; style-src 'self';\";",
      "",
      "---------------"
    ],
    "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java||test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java": [
      "File: test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java -> test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:         zipfile.delete();",
      "170:     }",
      "172:     private File download(UnexpectedPage page) throws IOException {",
      "174:         File file = File.createTempFile(\"DirectoryBrowserSupport\", \"zipDownload\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:     @Issue(\"SECURITY-95\")",
      "173:     @Test",
      "174:     public void contentSecurityPolicy() throws Exception {",
      "175:         FreeStyleProject p = j.createFreeStyleProject();",
      "176:         p.setScm(new SingleFileSCM(\"test.html\", \"<html><body><h1>Hello world!</h1></body></html>\"));",
      "177:         p.getPublishersList().add(new ArtifactArchiver(\"*\", \"\", true));",
      "178:         assertEquals(Result.SUCCESS, p.scheduleBuild2(0).get().getResult());",
      "180:         HtmlPage page = j.createWebClient().goTo(\"job/\" + p.getName() + \"/lastSuccessfulBuild/artifact/test.html\");",
      "181:         for (String header : new String[]{\"Content-Security-Policy\", \"X-WebKit-CSP\", \"X-Content-Security-Policy\"}) {",
      "182:             assertEquals(\"Header set: \" + header, page.getWebResponse().getResponseHeaderValue(header), DirectoryBrowserSupport.DEFAULT_CSP_VALUE);",
      "183:         }",
      "185:         String propName = DirectoryBrowserSupport.class.getName() + \".CSP\";",
      "186:         String initialValue = System.getProperty(propName);",
      "187:         try {",
      "188:             System.setProperty(propName, \"\");",
      "189:             page = j.createWebClient().goTo(\"job/\" + p.getName() + \"/lastSuccessfulBuild/artifact/test.html\");",
      "190:             for (String header : new String[]{\"Content-Security-Policy\", \"X-WebKit-CSP\", \"X-Content-Security-Policy\"}) {",
      "191:                 assertFalse(\"Header not set: \" + header, page.getWebResponse().getResponseHeaders().contains(header));",
      "192:             }",
      "193:         } finally {",
      "194:             if (initialValue == null) {",
      "195:                 System.clearProperty(DirectoryBrowserSupport.class.getName() + \".CSP\");",
      "196:             } else {",
      "197:                 System.setProperty(DirectoryBrowserSupport.class.getName() + \".CSP\", initialValue);",
      "198:             }",
      "199:         }",
      "200:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "99f80a0b0b93a6d7c928d21849d96e0d642e5d1f",
      "candidate_info": {
        "commit_hash": "99f80a0b0b93a6d7c928d21849d96e0d642e5d1f",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/99f80a0b0b93a6d7c928d21849d96e0d642e5d1f",
        "files": [
          "core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
          "core/src/main/java/hudson/model/ParametersAction.java",
          "core/src/main/java/hudson/model/User.java",
          "core/src/main/java/jenkins/install/InstallUtil.java",
          "core/src/main/java/jenkins/util/SystemProperties.java"
        ],
        "message": "[JENKINS-34755] Migrate the stuff and restrict access to the engine in the next release (#2346)\n\n[JENKINS-34755] Migrate to SystemProperties and restrict access to the engine",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
          "core/src/main/java/hudson/model/ParametersAction.java||core/src/main/java/hudson/model/ParametersAction.java",
          "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java",
          "core/src/main/java/jenkins/install/InstallUtil.java||core/src/main/java/jenkins/install/InstallUtil.java",
          "core/src/main/java/jenkins/util/SystemProperties.java||core/src/main/java/jenkins/util/SystemProperties.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/DirectoryBrowserSupport.java||core/src/main/java/hudson/model/DirectoryBrowserSupport.java": [
          "File: core/src/main/java/hudson/model/DirectoryBrowserSupport.java -> core/src/main/java/hudson/model/DirectoryBrowserSupport.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import javax.servlet.http.HttpServletResponse;",
          "44: import jenkins.model.Jenkins;",
          "45: import jenkins.security.MasterToSlaveCallable;",
          "46: import jenkins.util.VirtualFile;",
          "47: import org.apache.commons.io.IOUtils;",
          "48: import org.apache.tools.zip.ZipEntry;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: import jenkins.util.SystemProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "312:             rsp.serveFile(req, in, lastModified, -1, length, \"plain.txt\");",
          "313:         } else {",
          "319:             if (!csp.trim().equals(\"\")) {",
          "321:                 for (String header : new String[]{\"Content-Security-Policy\", \"X-WebKit-CSP\", \"X-Content-Security-Policy\"}) {",
          "",
          "[Removed Lines]",
          "314:             String csp = System.getProperty(DirectoryBrowserSupport.class.getName() + \".CSP\");",
          "315:             if (csp == null) {",
          "317:                 csp = DEFAULT_CSP_VALUE;",
          "318:             }",
          "",
          "[Added Lines]",
          "315:             String csp = SystemProperties.getString(DirectoryBrowserSupport.class.getName() + \".CSP\", DEFAULT_CSP_VALUE);",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/ParametersAction.java||core/src/main/java/hudson/model/ParametersAction.java": [
          "File: core/src/main/java/hudson/model/ParametersAction.java -> core/src/main/java/hudson/model/ParametersAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: import static com.google.common.collect.Sets.newHashSet;",
          "54: import javax.annotation.CheckForNull;",
          "55: import javax.annotation.Nonnull;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: import jenkins.util.SystemProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:     private boolean isSafeParameter(String name) {",
          "304:         if (safeParameters == null) {",
          "306:             if (paramNames != null) {",
          "307:                 safeParameters = Arrays.asList(paramNames.split(\",\"));",
          "308:             } else {",
          "",
          "[Removed Lines]",
          "305:             String paramNames = System.getProperty(SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);",
          "",
          "[Added Lines]",
          "306:             String paramNames = SystemProperties.getString(SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME);",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/User.java||core/src/main/java/hudson/model/User.java": [
          "File: core/src/main/java/hudson/model/User.java -> core/src/main/java/hudson/model/User.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1025:     @Restricted(NoExternalUse.class)",
          "1026:     public static class UserIDCanonicalIdResolver extends User.CanonicalIdResolver {",
          "1030:         private static final ThreadLocal<Boolean> resolving = new ThreadLocal<Boolean>() {",
          "1031:             @Override",
          "",
          "[Removed Lines]",
          "1028:         private static /* not final */ boolean SECURITY_243_FULL_DEFENSE = Boolean.parseBoolean(System.getProperty(User.class.getName() + \".SECURITY_243_FULL_DEFENSE\", \"true\"));",
          "",
          "[Added Lines]",
          "1028:         private static /* not final */ boolean SECURITY_243_FULL_DEFENSE =",
          "1029:                 SystemProperties.getBoolean(User.class.getName() + \".SECURITY_243_FULL_DEFENSE\", true);",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/install/InstallUtil.java||core/src/main/java/jenkins/install/InstallUtil.java": [
          "File: core/src/main/java/jenkins/install/InstallUtil.java -> core/src/main/java/jenkins/install/InstallUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: import hudson.model.UpdateCenter.UpdateCenterJob;",
          "54: import hudson.util.VersionNumber;",
          "55: import jenkins.model.Jenkins;",
          "56: import jenkins.util.xml.XMLUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: import jenkins.util.SystemProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:         }",
          "88:         boolean shouldRun = \"true\".equalsIgnoreCase(shouldRunFlag);",
          "89:         boolean shouldNotRun = \"false\".equalsIgnoreCase(shouldRunFlag);",
          "",
          "[Removed Lines]",
          "87:         String shouldRunFlag = System.getProperty(\"jenkins.install.runSetupWizard\");",
          "",
          "[Added Lines]",
          "88:         String shouldRunFlag = SystemProperties.getString(\"jenkins.install.runSetupWizard\");",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/util/SystemProperties.java||core/src/main/java/jenkins/util/SystemProperties.java": [
          "File: core/src/main/java/jenkins/util/SystemProperties.java -> core/src/main/java/jenkins/util/SystemProperties.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package jenkins.util;",
          "26: import edu.umd.cs.findbugs.annotations.CheckForNull;",
          "27: import hudson.EnvVars;",
          "28: import java.util.logging.Level;",
          "29: import java.util.logging.Logger;",
          "30: import javax.servlet.ServletContext;",
          "31: import org.apache.commons.lang.StringUtils;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import edu.umd.cs.findbugs.annotations.Nullable;",
          "33: import org.kohsuke.accmod.Restricted;",
          "34: import org.kohsuke.accmod.restrictions.NoExternalUse;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60: public class SystemProperties {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: @Restricted(NoExternalUse.class)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "129:     public static String getString(String key, @CheckForNull String def) {",
          "130:         String value = System.getProperty(key); // keep passing on any exceptions",
          "131:         if (value != null) {",
          "",
          "[Removed Lines]",
          "128:     @CheckForNull",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}