{
  "cve_id": "CVE-2016-8749",
  "cve_desc": "Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.",
  "repo": "apache/camel",
  "patch_hash": "ccf149c76bf37adc5977dc626e141a14e60b5aee",
  "patch_info": {
    "commit_hash": "ccf149c76bf37adc5977dc626e141a14e60b5aee",
    "repo": "apache/camel",
    "commit_url": "https://github.com/apache/camel/commit/ccf149c76bf37adc5977dc626e141a14e60b5aee",
    "files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ],
    "message": "CAMEL-10604 - Camel-JacksonXML: Add an option to allow the UnmarshallType header use",
    "before_after_code_files": [
      "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java"
    ]
  },
  "patch_diff": {
    "camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java": [
      "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "66:     private String enableFeatures;",
      "67:     @XmlAttribute",
      "68:     private String disableFeatures;",
      "70:     public JacksonXMLDataFormat() {",
      "71:         super(\"jacksonxml\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "69:     @XmlAttribute",
      "70:     private Boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "243:     public void setDisableFeatures(String disableFeatures) {",
      "244:         this.disableFeatures = disableFeatures;",
      "245:     }",
      "247:     @Override",
      "248:     public String getDataFormatName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "249:     public Boolean getAllowUnmarshallType() {",
      "250:         return allowUnmarshallType;",
      "251:     }",
      "258:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
      "259:         this.allowUnmarshallType = allowUnmarshallType;",
      "260:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "308:         if (disableFeatures != null) {",
      "309:             setProperty(camelContext, dataFormat, \"disableFeatures\", disableFeatures);",
      "310:         }",
      "311:     }",
      "313: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "326:         if (allowUnmarshallType != null) {",
      "327:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
      "328:         }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java||components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java": [
      "File: components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java -> components/camel-jacksonxml/src/main/java/org/apache/camel/component/jacksonxml/JacksonXMLDataFormat.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     private String enableFeatures;",
      "69:     private String disableFeatures;",
      "70:     private boolean enableJacksonTypeConverter;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:     private boolean allowUnmarshallType;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "161:         Class<?> clazz = unmarshalType;",
      "163:         if (type == null && isAllowJmsType()) {",
      "164:             type = exchange.getIn().getHeader(\"JMSType\", String.class);",
      "165:         }",
      "",
      "[Removed Lines]",
      "162:         String type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "",
      "[Added Lines]",
      "163:         String type = null;",
      "164:         if (allowUnmarshallType) {",
      "165:             type = exchange.getIn().getHeader(JacksonXMLConstants.UNMARSHAL_TYPE, String.class);",
      "166:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "323:     public void setEnableJacksonTypeConverter(boolean enableJacksonTypeConverter) {",
      "324:         this.enableJacksonTypeConverter = enableJacksonTypeConverter;",
      "325:     }",
      "327:     public String getEnableFeatures() {",
      "328:         return enableFeatures;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331:     public boolean isAllowUnmarshallType() {",
      "332:         return allowUnmarshallType;",
      "333:     }",
      "340:     public void setAllowUnmarshallType(boolean allowJacksonUnmarshallType) {",
      "341:         this.allowUnmarshallType = allowJacksonUnmarshallType;",
      "342:     }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderNotAllowedTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.apache.camel.component.jacksonxml;",
      "19: import java.util.LinkedHashMap;",
      "21: import org.apache.camel.builder.RouteBuilder;",
      "22: import org.apache.camel.component.mock.MockEndpoint;",
      "23: import org.apache.camel.test.junit4.CamelTestSupport;",
      "24: import org.junit.Test;",
      "26: public class JacksonMarshalUnmarshalTypeHeaderNotAllowedTest extends CamelTestSupport {",
      "28:     @Test",
      "29:     public void testUnmarshalPojo() throws Exception {",
      "30:         MockEndpoint mock = getMockEndpoint(\"mock:reversePojo\");",
      "31:         mock.expectedMessageCount(1);",
      "33:         String json = \"<pojo name=\\\"Camel\\\"/>\";",
      "34:         template.sendBodyAndHeader(\"direct:backPojo\", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName());",
      "36:         assertMockEndpointsSatisfied();",
      "37:     }",
      "39:     @Override",
      "40:     protected RouteBuilder createRouteBuilder() throws Exception {",
      "41:         return new RouteBuilder() {",
      "43:             @Override",
      "44:             public void configure() throws Exception {",
      "45:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "47:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "49:             }",
      "50:         };",
      "51:     }",
      "53: }",
      "",
      "---------------"
    ],
    "components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java||components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java": [
      "File: components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java -> components/camel-jacksonxml/src/test/java/org/apache/camel/component/jacksonxml/JacksonMarshalUnmarshalTypeHeaderTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             @Override",
      "47:             public void configure() throws Exception {",
      "48:                 JacksonXMLDataFormat format = new JacksonXMLDataFormat();",
      "50:                 from(\"direct:backPojo\").unmarshal(format).to(\"mock:reversePojo\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:                 format.setAllowUnmarshallType(true);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "02270ab9c90ac0d59b85dbd59fb9c1007eb44a1b",
      "candidate_info": {
        "commit_hash": "02270ab9c90ac0d59b85dbd59fb9c1007eb44a1b",
        "repo": "apache/camel",
        "commit_url": "https://github.com/apache/camel/commit/02270ab9c90ac0d59b85dbd59fb9c1007eb44a1b",
        "files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ],
        "message": "CAMEL-10567: Camel-Jackson: Add an option to allow the UnmarshallType header use",
        "before_after_code_files": [
          "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java||camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java": [
          "File: camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java -> camel-core/src/main/java/org/apache/camel/model/dataformat/JsonDataFormat.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     private String disableFeatures;",
          "74:     @XmlAttribute",
          "75:     private String permissions;",
          "77:     public JsonDataFormat() {",
          "78:         super(\"json\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     @XmlAttribute",
          "77:     private Boolean allowUnmarshallType;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "303:         setPermissions(csb.toString());",
          "304:     }",
          "306:     @Override",
          "307:     public String getDataFormatName() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308:     public Boolean getAllowUnmarshallType() {",
          "309:         return allowUnmarshallType;",
          "310:     }",
          "317:     public void setAllowUnmarshallType(Boolean allowUnmarshallType) {",
          "318:         this.allowUnmarshallType = allowUnmarshallType;",
          "319:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "385:         if (permissions != null) {",
          "386:             setProperty(camelContext, dataFormat, \"permissions\", permissions);",
          "387:         }",
          "389:         if (permissions == null && unmarshalType != null) {",
          "390:             String allow = \"+\" + unmarshalType.getName();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "403:         if (allowUnmarshallType != null) {",
          "404:             setProperty(camelContext, dataFormat, \"allowUnmarshallType\", allowUnmarshallType);",
          "405:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}