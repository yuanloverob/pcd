{
  "cve_id": "CVE-2021-26291",
  "cve_desc": "Apache Maven will follow repositories that are defined in a dependency\u2019s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
  "repo": "apache/maven",
  "patch_hash": "899465aeec03753ea91e15a79579eab76369c016",
  "patch_info": {
    "commit_hash": "899465aeec03753ea91e15a79579eab76369c016",
    "repo": "apache/maven",
    "commit_url": "https://github.com/apache/maven/commit/899465aeec03753ea91e15a79579eab76369c016",
    "files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/pom.xml",
      "maven-settings/src/main/mdo/settings.mdo"
    ],
    "message": "[MNG-7117] add support for blocked mirror",
    "before_after_code_files": [
      "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo"
    ]
  },
  "patch_diff": {
    "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
      "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:         DefaultMirrorSelector mirrorSelector = new DefaultMirrorSelector();",
      "178:         for ( Mirror mirror : request.getMirrors() )",
      "179:         {",
      "182:         }",
      "183:         session.setMirrorSelector( mirrorSelector );",
      "",
      "[Removed Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.getMirrorOf(),",
      "181:                                 mirror.getMirrorOfLayouts() );",
      "",
      "[Added Lines]",
      "180:             mirrorSelector.add( mirror.getId(), mirror.getUrl(), mirror.getLayout(), false, mirror.isBlocked(),",
      "181:                                 mirror.getMirrorOf(), mirror.getMirrorOfLayouts() );",
      "",
      "---------------"
    ],
    "maven-settings/src/main/mdo/settings.mdo||maven-settings/src/main/mdo/settings.mdo": [
      "File: maven-settings/src/main/mdo/settings.mdo -> maven-settings/src/main/mdo/settings.mdo",
      "--- Hunk 1 ---",
      "[Context before]",
      "633:             of the mirror to repositories with a matching layout (apart from a matching id). Since Maven 3.",
      "634:           </description>",
      "635:         </field>",
      "636:       </fields>",
      "637:       <codeSegments>",
      "638:         <codeSegment>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "636:         <field>",
      "637:           <name>blocked</name>",
      "638:           <version>1.2.0+</version>",
      "639:           <type>boolean</type>",
      "640:           <defaultValue>false</defaultValue>",
      "641:           <description>",
      "642:             Whether this mirror should be blocked from any download request but fail the download process, explaining why.",
      "643:           </description>",
      "644:         </field>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "648:         sb.append( \",mirrorOf=\" ).append( mirrorOf );",
      "649:         sb.append( \",url=\" ).append( this.url );",
      "650:         sb.append( \",name=\" ).append( this.name );",
      "651:         sb.append( \"]\" );",
      "652:         return sb.toString();",
      "653:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "660:         if ( isBlocked() )",
      "661:         {",
      "662:             sb.append( \",blocked\" );",
      "663:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d295dc362fe7d7b189b4976a5742a17362eb51a1",
      "candidate_info": {
        "commit_hash": "d295dc362fe7d7b189b4976a5742a17362eb51a1",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/d295dc362fe7d7b189b4976a5742a17362eb51a1",
        "files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java",
          "maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java",
          "maven-core/src/main/java/org/apache/maven/RepositoryUtils.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java",
          "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java"
        ],
        "message": "[MNG-7128] keep blocked attribute from mirrors in artifact repositories",
        "before_after_code_files": [
          "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java||maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java",
          "maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java||maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java",
          "maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java",
          "maven-core/src/main/java/org/apache/maven/RepositoryUtils.java||maven-core/src/main/java/org/apache/maven/RepositoryUtils.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java||maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java",
          "maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java||maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java",
          "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java||maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java||maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java": [
          "File: maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java -> maven-artifact/src/main/java/org/apache/maven/artifact/repository/ArtifactRepository.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     @Deprecated",
          "74:     void setBlacklisted( boolean blackListed );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     boolean isBlocked();",
          "80:     void setBlocked( boolean blocked );",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java||maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java": [
          "File: maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java -> maven-compat/src/main/java/org/apache/maven/artifact/repository/DefaultArtifactRepository.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     private List<ArtifactRepository> mirroredRepositories = Collections.emptyList();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     private boolean blocked;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264:         }",
          "265:     }",
          "267: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:     public boolean isBlocked()",
          "270:     {",
          "271:         return blocked;",
          "272:     }",
          "274:     public void setBlocked( boolean blocked )",
          "275:     {",
          "276:         this.blocked = blocked;",
          "277:     }",
          "",
          "---------------"
        ],
        "maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java||maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java": [
          "File: maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java -> maven-compat/src/main/java/org/apache/maven/repository/legacy/LegacyRepositorySystem.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "447:             effectiveRepository.setMirroredRepositories( mirroredRepos );",
          "449:             effectiveRepositories.add( effectiveRepository );",
          "450:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "449:             effectiveRepository.setBlocked( aliasedRepo.isBlocked() );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "502:                     mirror.setId( repo.getId() );",
          "503:                     mirror.setUrl( repo.getUrl() );",
          "504:                     mirror.setLayout( repo.getContentType() );",
          "505:                     return mirror;",
          "506:                 }",
          "507:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:                     mirror.setBlocked( repo.isBlocked() );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "538:             {",
          "539:                 repository.setLayout( getLayout( mirror.getLayout() ) );",
          "540:             }",
          "541:         }",
          "542:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545:             repository.setBlocked( mirror.isBlocked() );",
          "",
          "---------------"
        ],
        "maven-core/src/main/java/org/apache/maven/RepositoryUtils.java||maven-core/src/main/java/org/apache/maven/RepositoryUtils.java": [
          "File: maven-core/src/main/java/org/apache/maven/RepositoryUtils.java -> maven-core/src/main/java/org/apache/maven/RepositoryUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:             builder.setAuthentication( toAuthentication( repo.getAuthentication() ) );",
          "211:             builder.setProxy( toProxy( repo.getProxy() ) );",
          "212:             builder.setMirroredRepositories( toRepos( repo.getMirroredRepositories() ) );",
          "213:             result = builder.build();",
          "214:         }",
          "215:         return result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:             builder.setBlocked( repo.isBlocked() );",
          "",
          "---------------"
        ],
        "maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java||maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java": [
          "File: maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java -> maven-core/src/main/java/org/apache/maven/artifact/repository/LegacyLocalRepositoryManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:         {",
          "428:         }",
          "430:     }",
          "432: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "430:         public boolean isBlocked()",
          "431:         {",
          "432:             return false;",
          "433:         }",
          "435:         public void setBlocked( boolean blocked )",
          "436:         {",
          "437:         }",
          "",
          "---------------"
        ],
        "maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java||maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java": [
          "File: maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java -> maven-core/src/main/java/org/apache/maven/artifact/repository/MavenArtifactRepository.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     private List<ArtifactRepository> mirroredRepositories = Collections.emptyList();",
          "60:     public MavenArtifactRepository()",
          "61:     {",
          "62:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:     private boolean blocked;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:             sb.append( \", update => \" ).append( releases.getUpdatePolicy() ).append( \"]\\n\" );",
          "161:         }",
          "163:         return sb.toString();",
          "164:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:         sb.append( \"   blocked: \" ).append( isBlocked() ).append( '\\n' );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "414:         }",
          "415:     }",
          "417: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421:     public boolean isBlocked()",
          "422:     {",
          "423:         return blocked;",
          "424:     }",
          "426:     public void setBlocked( boolean blocked )",
          "427:     {",
          "428:         this.blocked = blocked;",
          "429:     }",
          "",
          "---------------"
        ],
        "maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java||maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java": [
          "File: maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java -> maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:                     mirror.setId( repo.getId() );",
          "191:                     mirror.setUrl( repo.getUrl() );",
          "192:                     mirror.setLayout( repo.getContentType() );",
          "193:                     return mirror;",
          "194:                 }",
          "195:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "193:                     mirror.setBlocked( repo.isBlocked() );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "226:             {",
          "227:                 repository.setLayout( getLayout( mirror.getLayout() ) );",
          "228:             }",
          "229:         }",
          "230:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:             repository.setBlocked( mirror.isBlocked() );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "672:             effectiveRepository.setMirroredRepositories( mirroredRepos );",
          "674:             effectiveRepositories.add( effectiveRepository );",
          "675:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "677:             effectiveRepository.setBlocked( aliasedRepo.isBlocked() );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67ff80544866aa9256624d34a6e4178c3b913996",
      "candidate_info": {
        "commit_hash": "67ff80544866aa9256624d34a6e4178c3b913996",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/67ff80544866aa9256624d34a6e4178c3b913996",
        "files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java"
        ],
        "message": "[MNG-7381] Shorten parallel builder thread name to artifactId, conditionally with groupId\n\nThis closes #663",
        "before_after_code_files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java": [
          "File: maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java -> maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.List;",
          "23: import java.util.Map;",
          "24: import java.util.concurrent.Callable;",
          "25: import java.util.concurrent.CompletionService;",
          "26: import java.util.concurrent.ExecutionException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.util.HashSet;",
          "25: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:                                                        ThreadOutputMuxer muxer )",
          "128:     {",
          "131:         for ( MavenProject mavenProject : analyzer.getRootSchedulableBuilds() )",
          "132:         {",
          "133:             ProjectSegment projectSegment = projectBuildList.get( mavenProject );",
          "134:             logger.debug( \"Scheduling: \" + projectSegment.getProject() );",
          "135:             Callable<ProjectSegment> cb =",
          "137:             service.submit( cb );",
          "138:         }",
          "",
          "[Removed Lines]",
          "136:                 createBuildCallable( rootSession, projectSegment, reactorContext, taskSegment, muxer );",
          "",
          "[Added Lines]",
          "133:         Set<String> duplicateArtifactIds = gatherDuplicateArtifactIds( projectBuildList.keySet() );",
          "141:                 createBuildCallable( rootSession, projectSegment, reactorContext, taskSegment, muxer,",
          "142:                                      duplicateArtifactIds );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:                         ProjectSegment scheduledDependent = projectBuildList.get( mavenProject );",
          "159:                         logger.debug( \"Scheduling: \" + scheduledDependent );",
          "160:                         Callable<ProjectSegment> cb =",
          "162:                         service.submit( cb );",
          "163:                     }",
          "164:                 }",
          "",
          "[Removed Lines]",
          "161:                             createBuildCallable( rootSession, scheduledDependent, reactorContext, taskSegment, muxer );",
          "",
          "[Added Lines]",
          "167:                             createBuildCallable( rootSession, scheduledDependent, reactorContext, taskSegment, muxer,",
          "168:                                                  duplicateArtifactIds );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180:     private Callable<ProjectSegment> createBuildCallable( final MavenSession rootSession,",
          "181:                                                           final ProjectSegment projectBuild,",
          "182:                                                           final ReactorContext reactorContext,",
          "184:     {",
          "185:         return new Callable<ProjectSegment>()",
          "186:         {",
          "",
          "[Removed Lines]",
          "183:                                                           final TaskSegment taskSegment, final ThreadOutputMuxer muxer )",
          "",
          "[Added Lines]",
          "190:                                                           final TaskSegment taskSegment,",
          "191:                                                           final ThreadOutputMuxer muxer,",
          "192:                                                           final Set<String> duplicateArtifactIds )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "188:             {",
          "189:                 final Thread currentThread = Thread.currentThread();",
          "190:                 final String originalThreadName = currentThread.getName();",
          "193:                 try",
          "194:                 {",
          "196:                     lifecycleModuleBuilder.buildProject( projectBuild.getSession(), rootSession, reactorContext,",
          "200:                     return projectBuild;",
          "",
          "[Removed Lines]",
          "191:                 currentThread.setName( \"mvn-builder-\" + projectBuild.getProject().getId() );",
          "197:                                                          projectBuild.getProject(), taskSegment );",
          "",
          "[Added Lines]",
          "200:                 final MavenProject project = projectBuild.getProject();",
          "202:                 final String threadNameSuffix = duplicateArtifactIds.contains( project.getArtifactId() )",
          "203:                         ? project.getGroupId() + \":\" + project.getArtifactId()",
          "204:                         : project.getArtifactId();",
          "205:                 currentThread.setName( \"mvn-builder-\" + threadNameSuffix );",
          "211:                                                          project, taskSegment );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "206:             }",
          "207:         };",
          "208:     }",
          "209: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     private Set<String> gatherDuplicateArtifactIds( Set<MavenProject> projects )",
          "225:     {",
          "226:         Set<String> artifactIds = new HashSet<>( projects.size() );",
          "227:         Set<String> duplicateArtifactIds = new HashSet<>();",
          "228:         for ( MavenProject project : projects )",
          "229:         {",
          "230:             if ( !artifactIds.add( project.getArtifactId() ) )",
          "231:             {",
          "232:                 duplicateArtifactIds.add( project.getArtifactId() );",
          "233:             }",
          "234:         }",
          "235:         return duplicateArtifactIds;",
          "236:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39254860d60f0165cd691e6ce269a6377e7b7f3c",
      "candidate_info": {
        "commit_hash": "39254860d60f0165cd691e6ce269a6377e7b7f3c",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/39254860d60f0165cd691e6ce269a6377e7b7f3c",
        "files": [
          "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
          "maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java"
        ],
        "message": "[MNG-7032] Evaluate --help and --version after configuring the logging/color",
        "before_after_code_files": [
          "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java||maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
          "maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java||maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java||maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java": [
          "File: maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java -> maven-embedder/src/main/java/org/apache/maven/cli/MavenCli.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:     private Map<String, ConfigurationProcessor> configurationProcessors;",
          "169:     public MavenCli()",
          "170:     {",
          "171:         this( null );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "169:     private CLIManager cliManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "278:             cli( cliRequest );",
          "279:             properties( cliRequest );",
          "280:             logging( cliRequest );",
          "281:             version( cliRequest );",
          "282:             localContainer = container( cliRequest );",
          "283:             commands( cliRequest );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:             informativeCommands( cliRequest );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "368:         slf4jLogger = new Slf4jStdoutLogger();",
          "372:         List<String> args = new ArrayList<>();",
          "373:         CommandLine mavenConfig = null;",
          "",
          "[Removed Lines]",
          "370:         CLIManager cliManager = new CLIManager();",
          "",
          "[Added Lines]",
          "373:         cliManager = new CLIManager();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "417:             cliManager.displayHelp( System.out );",
          "418:             throw e;",
          "419:         }",
          "421:         if ( cliRequest.commandLine.hasOption( CLIManager.HELP ) )",
          "422:         {",
          "423:             cliManager.displayHelp( System.out );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "423:     }",
          "425:     private void informativeCommands( CliRequest cliRequest ) throws ExitException",
          "426:     {",
          "",
          "---------------"
        ],
        "maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java||maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java": [
          "File: maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java -> maven-embedder/src/test/java/org/apache/maven/cli/MavenCliTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import static org.mockito.Mockito.mock;",
          "30: import static org.mockito.Mockito.times;",
          "32: import java.io.File;",
          "34: import org.apache.commons.cli.ParseException;",
          "35: import org.apache.maven.Maven;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import java.io.ByteArrayOutputStream;",
          "34: import java.io.PrintStream;",
          "35: import java.nio.charset.StandardCharsets;",
          "36: import java.util.Collections;",
          "37: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:         orderdEventSpyDispatcherMock.verify(eventSpyDispatcherMock, times(1)).onEvent(any(ToolchainsBuildingResult.class));",
          "332:     }",
          "334: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:     @Test",
          "344:     public void testVersionStringWithoutAnsi() throws Exception",
          "345:     {",
          "348:         CliRequest cliRequest = new CliRequest( new String[] {",
          "349:                 \"--version\",",
          "350:                 \"--batch-mode\"",
          "351:         }, null );",
          "352:         ByteArrayOutputStream systemOut = new ByteArrayOutputStream();",
          "353:         PrintStream oldOut = System.out;",
          "354:         System.setOut( new PrintStream( systemOut ) );",
          "357:         try {",
          "358:             cli.cli( cliRequest );",
          "359:         } catch ( MavenCli.ExitException exitException ) {",
          "361:         } finally {",
          "363:             System.setOut( oldOut );",
          "364:         }",
          "365:         String versionOut = new String( systemOut.toByteArray(), StandardCharsets.UTF_8 );",
          "368:         assertEquals( MessageUtils.stripAnsiCodes( versionOut ), versionOut );",
          "369:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f32c3dba9495e3b7d4a73de6d303ae2eedb769f5",
      "candidate_info": {
        "commit_hash": "f32c3dba9495e3b7d4a73de6d303ae2eedb769f5",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/f32c3dba9495e3b7d4a73de6d303ae2eedb769f5",
        "files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java"
        ],
        "message": "[MNG-6471] Parallel builder should use the module name as thread name\n\nThis closes #177",
        "before_after_code_files": [
          "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java||maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java": [
          "File: maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java -> maven-core/src/main/java/org/apache/maven/lifecycle/internal/builder/multithreaded/MultiThreadedBuilder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:         {",
          "187:             public ProjectSegment call()",
          "188:             {",
          "195:             }",
          "196:         };",
          "197:     }",
          "",
          "[Removed Lines]",
          "190:                 lifecycleModuleBuilder.buildProject( projectBuild.getSession(), rootSession, reactorContext,",
          "191:                                                      projectBuild.getProject(), taskSegment );",
          "194:                 return projectBuild;",
          "",
          "[Added Lines]",
          "189:                 final Thread currentThread = Thread.currentThread();",
          "190:                 final String originalThreadName = currentThread.getName();",
          "191:                 currentThread.setName( \"mvn-builder-\" + projectBuild.getProject().getId() );",
          "193:                 try",
          "194:                 {",
          "196:                     lifecycleModuleBuilder.buildProject( projectBuild.getSession(), rootSession, reactorContext,",
          "197:                                                          projectBuild.getProject(), taskSegment );",
          "200:                     return projectBuild;",
          "201:                 }",
          "202:                 finally",
          "203:                 {",
          "204:                      currentThread.setName( originalThreadName );",
          "205:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0caf9c9b31e31abb91ca986fe8168867cd0ded2",
      "candidate_info": {
        "commit_hash": "f0caf9c9b31e31abb91ca986fe8168867cd0ded2",
        "repo": "apache/maven",
        "commit_url": "https://github.com/apache/maven/commit/f0caf9c9b31e31abb91ca986fe8168867cd0ded2",
        "files": [
          "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
        ],
        "message": "[MNG-6960] Use RuntimeInformation instead of reading properties",
        "before_after_code_files": [
          "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/maven/pull/762"
        ],
        "olp_code_files": {
          "patch": [
            "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
          ],
          "candidate": [
            "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java"
          ]
        }
      },
      "candidate_diff": {
        "maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java||maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java": [
          "File: maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java -> maven-core/src/main/java/org/apache/maven/internal/aether/DefaultRepositorySystemSessionFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: import org.apache.maven.eventspy.internal.EventSpyDispatcher;",
          "26: import org.apache.maven.execution.MavenExecutionRequest;",
          "27: import org.apache.maven.repository.internal.MavenRepositorySystemUtils;",
          "28: import org.apache.maven.settings.Mirror;",
          "29: import org.apache.maven.settings.Proxy;",
          "30: import org.apache.maven.settings.Server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import org.apache.maven.rtinfo.RuntimeInformation;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:     @Inject",
          "94:     MavenRepositorySystem mavenRepositorySystem;",
          "96:     public DefaultRepositorySystemSession newRepositorySession( MavenExecutionRequest request )",
          "97:     {",
          "98:         DefaultRepositorySystemSession session = MavenRepositorySystemUtils.newSession();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     @Inject",
          "98:     private RuntimeInformation runtimeInformation;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "245:     private String getUserAgent()",
          "246:     {",
          "248:             + System.getProperty( \"os.name\" ) + \" \" + System.getProperty( \"os.version\" ) + \")\";",
          "249:     }",
          "271: }",
          "",
          "[Removed Lines]",
          "247:         return \"Apache-Maven/\" + getMavenVersion() + \" (Java \" + System.getProperty( \"java.version\" ) + \"; \"",
          "251:     private String getMavenVersion()",
          "252:     {",
          "253:         Properties props = new Properties();",
          "255:         try ( InputStream is = getClass().getResourceAsStream(",
          "256:             \"/META-INF/maven/org.apache.maven/maven-core/pom.properties\" ) )",
          "257:         {",
          "258:             if ( is != null )",
          "259:             {",
          "260:                 props.load( is );",
          "261:             }",
          "262:         }",
          "263:         catch ( IOException e )",
          "264:         {",
          "265:             logger.debug( \"Failed to read Maven version\", e );",
          "266:         }",
          "268:         return props.getProperty( \"version\", \"unknown-version\" );",
          "269:     }",
          "",
          "[Added Lines]",
          "251:         String version = runtimeInformation.getMavenVersion();",
          "252:         version = version.isEmpty() ? version : \"/\" + version;",
          "253:         return \"Apache-Maven\" + version + \" (Java \" + System.getProperty( \"java.version\" ) + \"; \"",
          "",
          "---------------"
        ]
      }
    }
  ]
}