{
  "cve_id": "CVE-2015-1831",
  "cve_desc": "The default exclude patterns (excludeParams) in Apache Struts 2.3.20 allow remote attackers to \"compromise internal state of an application\" via unspecified vectors.",
  "repo": "apache/struts",
  "patch_hash": "d832747d647df343ed07a58b1b5e540a05a4d51b",
  "patch_info": {
    "commit_hash": "d832747d647df343ed07a58b1b5e540a05a4d51b",
    "repo": "apache/struts",
    "commit_url": "https://github.com/apache/struts/commit/d832747d647df343ed07a58b1b5e540a05a4d51b",
    "files": [
      "core/src/main/resources/struts-default.xml",
      "core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java",
      "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
      "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java",
      "xwork-core/src/test/resources/xwork-param-test.xml"
    ],
    "message": "Applies better exclude patterns",
    "before_after_code_files": [
      "core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java||core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java",
      "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
      "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
    ]
  },
  "patch_diff": {
    "core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java||core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java": [
      "File: core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java -> core/src/test/java/org/apache/struts2/interceptor/CookieInterceptorTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: import javax.servlet.http.Cookie;",
      "30: import com.opensymphony.xwork2.security.DefaultExcludedPatternsChecker;",
      "31: import com.opensymphony.xwork2.mock.MockActionInvocation;",
      "32: import org.easymock.MockControl;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import com.opensymphony.xwork2.security.DefaultAcceptedPatternsChecker;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "370:                 return accepted;",
      "371:             }",
      "372:         };",
      "374:         interceptor.setCookiesName(\"*\");",
      "376:         MockActionInvocation invocation = new MockActionInvocation();",
      "",
      "[Removed Lines]",
      "373:         interceptor.setExcludedPatternsChecker(new DefaultExcludedPatternsChecker());",
      "",
      "[Added Lines]",
      "374:         DefaultExcludedPatternsChecker excludedPatternsChecker = new DefaultExcludedPatternsChecker();",
      "375:         excludedPatternsChecker.setAdditionalExcludePatterns(\".*(^|\\\\.|\\\\[|'|\\\")class(\\\\.|\\\\[|'|\\\").*\");",
      "376:         interceptor.setExcludedPatternsChecker(excludedPatternsChecker);",
      "",
      "---------------"
    ],
    "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java": [
      "File: xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java -> xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:     private static final Logger LOG = LoggerFactory.getLogger(DefaultExcludedPatternsChecker.class);",
      "18:     public static final String[] EXCLUDED_PATTERNS = {",
      "29:     };",
      "31:     private Set<Pattern> excludedPatterns;",
      "",
      "[Removed Lines]",
      "19:             \"(.*\\\\.|^|.*|\\\\[('|\\\"))\\\\bclass(\\\\.|('|\\\")]|\\\\[).*\",",
      "20:             \"(^|.*#)dojo(\\\\.|\\\\[).*\",",
      "21:             \"(^|.*#)struts(\\\\.|\\\\[).*\",",
      "22:             \"(^|.*#)session(\\\\.|\\\\[).*\",",
      "23:             \"(^|.*#)request(\\\\.|\\\\[).*\",",
      "24:             \"(^|.*#)application(\\\\.|\\\\[).*\",",
      "25:             \"(^|.*#)servlet(Request|Response)(\\\\.|\\\\[).*\",",
      "26:             \"(^|.*#)parameters(\\\\.|\\\\[).*\",",
      "27:             \"(^|.*#)context(\\\\.|\\\\[).*\",",
      "28:             \"(^|.*#)_memberAccess(\\\\.|\\\\[).*\"",
      "",
      "[Added Lines]",
      "19:         \"(^|.*#)(dojo|struts|session|request|application|servlet(Request|Response)|parameters|context|_memberAccess)(\\\\.|\\\\[).*\",",
      "20:         \"^(action|method):.*\"",
      "",
      "---------------"
    ],
    "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java": [
      "File: xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:             }",
      "54:         };",
      "58:         for (String param : params) {",
      "",
      "[Removed Lines]",
      "56:         ExcludedPatternsChecker checker = new DefaultExcludedPatternsChecker();",
      "",
      "[Added Lines]",
      "56:         DefaultExcludedPatternsChecker checker = new DefaultExcludedPatternsChecker();",
      "57:         checker.setAdditionalExcludePatterns(\".*(^|\\\\.|\\\\[|'|\\\")class(\\\\.|\\\\[|'|\\\").*\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71:         properParams.add(\"form.eventClass\");",
      "72:         properParams.add(\"form[\\\"eventClass\\\"]\");",
      "73:         properParams.add(\"form['eventClass']\");",
      "75:         ExcludedPatternsChecker checker = new DefaultExcludedPatternsChecker();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:         properParams.add(\"class.super@demo.com\");",
      "76:         properParams.add(\"super.class@demo.com\");",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "100:         }",
      "101:     }",
      "",
      "[Removed Lines]",
      "103: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "89cbe13853a849340d740d45685e6fd14da93d9b",
      "candidate_info": {
        "commit_hash": "89cbe13853a849340d740d45685e6fd14da93d9b",
        "repo": "apache/struts",
        "commit_url": "https://github.com/apache/struts/commit/89cbe13853a849340d740d45685e6fd14da93d9b",
        "files": [
          "core/src/main/java/org/apache/struts2/StrutsConstants.java",
          "core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java",
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
        ],
        "message": "Adds option to define additional accepted/excluded patterns Also all patterns are by default case insensitive",
        "before_after_code_files": [
          "core/src/main/java/org/apache/struts2/StrutsConstants.java||core/src/main/java/org/apache/struts2/StrutsConstants.java",
          "core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java||core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java||xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
          "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java",
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
            "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
          ],
          "candidate": [
            "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
            "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/org/apache/struts2/StrutsConstants.java||core/src/main/java/org/apache/struts2/StrutsConstants.java": [
          "File: core/src/main/java/org/apache/struts2/StrutsConstants.java -> core/src/main/java/org/apache/struts2/StrutsConstants.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "294:     public static final String STRUTS_OVERRIDE_EXCLUDED_PATTERNS = \"struts.override.excludedPatterns\";",
          "295:     public static final String STRUTS_OVERRIDE_ACCEPTED_PATTERNS = \"struts.override.acceptedPatterns\";",
          "297: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297:     public static final String STRUTS_ADDITIONAL_EXCLUDED_PATTERNS = \"struts.additional.excludedPatterns\";",
          "298:     public static final String STRUTS_ADDITIONAL_ACCEPTED_PATTERNS = \"struts.additional.acceptedPatterns\";",
          "",
          "---------------"
        ],
        "core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java||core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java": [
          "File: core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java -> core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:         convertIfExist(props, StrutsConstants.STRUTS_EXCLUDED_CLASSES, XWorkConstants.OGNL_EXCLUDED_CLASSES);",
          "408:         convertIfExist(props, StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAME_PATTERNS, XWorkConstants.OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS);",
          "410:         convertIfExist(props, StrutsConstants.STRUTS_OVERRIDE_EXCLUDED_PATTERNS, XWorkConstants.OVERRIDE_EXCLUDED_PATTERNS);",
          "411:         convertIfExist(props, StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410:         convertIfExist(props, StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, XWorkConstants.ADDITIONAL_EXCLUDED_PATTERNS);",
          "411:         convertIfExist(props, StrutsConstants.STRUTS_ADDITIONAL_ACCEPTED_PATTERNS, XWorkConstants.ADDITIONAL_ACCEPTED_PATTERNS);",
          "",
          "---------------"
        ],
        "xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java||xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java": [
          "File: xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java -> xwork-core/src/main/java/com/opensymphony/xwork2/XWorkConstants.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:     public static final String OGNL_EXCLUDED_CLASSES = \"ognlExcludedClasses\";",
          "22:     public static final String OGNL_EXCLUDED_PACKAGE_NAME_PATTERNS = \"ognlExcludedPackageNamePatterns\";",
          "24:     public static final String OVERRIDE_EXCLUDED_PATTERNS = \"overrideExcludedPatterns\";",
          "25:     public static final String OVERRIDE_ACCEPTED_PATTERNS = \"overrideAcceptedPatterns\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     public static final String ADDITIONAL_EXCLUDED_PATTERNS = \"additionalExcludedPatterns\";",
          "25:     public static final String ADDITIONAL_ACCEPTED_PATTERNS = \"additionalAcceptedPatterns\";",
          "",
          "---------------"
        ],
        "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java": [
          "File: xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java -> xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsChecker.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:     public DefaultAcceptedPatternsChecker() {",
          "25:         acceptedPatterns = new HashSet<Pattern>();",
          "26:         for (String pattern : ACCEPTED_PATTERNS) {",
          "28:         }",
          "29:     }",
          "",
          "[Removed Lines]",
          "27:             acceptedPatterns.add(Pattern.compile(pattern));",
          "",
          "[Added Lines]",
          "27:             acceptedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:         }",
          "37:         acceptedPatterns = new HashSet<Pattern>();",
          "38:         for (String pattern : TextParseUtil.commaDelimitedStringToSet(acceptablePatterns)) {",
          "40:         }",
          "41:     }",
          "48:         }",
          "52:         }",
          "53:     }",
          "",
          "[Removed Lines]",
          "39:             acceptedPatterns.add(Pattern.compile(pattern));",
          "43:     @Inject(value = XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS, required = false)",
          "44:     public void setOverrideExcludePatterns(String acceptPatterns) {",
          "45:         if (LOG.isWarnEnabled()) {",
          "46:             LOG.warn(\"Overriding [#0] with [#1], be aware that this can affect safety of your application!\",",
          "47:                     XWorkConstants.OVERRIDE_ACCEPTED_PATTERNS, acceptedPatterns);",
          "49:         acceptedPatterns = new HashSet<Pattern>();",
          "50:         for (String pattern : TextParseUtil.commaDelimitedStringToSet(acceptPatterns)) {",
          "51:             acceptedPatterns.add(Pattern.compile(pattern));",
          "",
          "[Added Lines]",
          "39:             acceptedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "43:     @Inject(value = XWorkConstants.ADDITIONAL_ACCEPTED_PATTERNS, required = false)",
          "44:     public void setAdditionalAcceptedPatterns(String acceptablePatterns) {",
          "45:         if (LOG.isDebugEnabled()) {",
          "46:             LOG.warn(\"Adding additional patterns [#0] to accepted patterns!\", acceptablePatterns);",
          "48:         for (String pattern : TextParseUtil.commaDelimitedStringToSet(acceptablePatterns)) {",
          "49:             acceptedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "",
          "---------------"
        ],
        "xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java||xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java": [
          "File: xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java -> xwork-core/src/main/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsChecker.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     public static final String[] EXCLUDED_PATTERNS = {",
          "19:             \"(.*\\\\.|^|.*|\\\\[('|\\\"))class(\\\\.|('|\\\")]|\\\\[).*\",",
          "27:     };",
          "29:     private Set<Pattern> excludedPatterns;",
          "",
          "[Removed Lines]",
          "20:             \"^dojo\\\\..*\",",
          "21:             \"^struts\\\\..*\",",
          "22:             \"^session\\\\..*\",",
          "23:             \"^request\\\\..*\",",
          "24:             \"^application\\\\..*\",",
          "25:             \"^servlet(Request|Response)\\\\..*\",",
          "26:             \"^parameters\\\\..*\"",
          "",
          "[Added Lines]",
          "20:             \"(^|.*#)dojo(\\\\.|\\\\[).*\",",
          "21:             \"(^|.*#)struts(\\\\.|\\\\[).*\",",
          "22:             \"(^|.*#)session(\\\\.|\\\\[).*\",",
          "23:             \"(^|.*#)request(\\\\.|\\\\[).*\",",
          "24:             \"(^|.*#)application(\\\\.|\\\\[).*\",",
          "25:             \"(^|.*#)servlet(Request|Response)(\\\\.|\\\\[).*\",",
          "26:             \"(^|.*#)parameters(\\\\.|\\\\[).*\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:     public DefaultExcludedPatternsChecker() {",
          "32:         excludedPatterns = new HashSet<Pattern>();",
          "33:         for (String pattern : EXCLUDED_PATTERNS) {",
          "35:         }",
          "36:     }",
          "",
          "[Removed Lines]",
          "34:             excludedPatterns.add(Pattern.compile(pattern));",
          "",
          "[Added Lines]",
          "34:             excludedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:         }",
          "44:         excludedPatterns = new HashSet<Pattern>();",
          "45:         for (String pattern : TextParseUtil.commaDelimitedStringToSet(excludePatterns)) {",
          "47:         }",
          "48:     }",
          "",
          "[Removed Lines]",
          "46:             excludedPatterns.add(Pattern.compile(pattern));",
          "",
          "[Added Lines]",
          "46:             excludedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "47:         }",
          "48:     }",
          "50:     @Inject(value = XWorkConstants.ADDITIONAL_EXCLUDED_PATTERNS, required = false)",
          "51:     public void setAdditionalExcludePatterns(String excludePatterns) {",
          "52:         if (LOG.isDebugEnabled()) {",
          "53:             LOG.debug(\"Adding additional patterns [#0] to excluded patterns!\", excludePatterns);",
          "54:         }",
          "55:         for (String pattern : TextParseUtil.commaDelimitedStringToSet(excludePatterns)) {",
          "56:             excludedPatterns.add(Pattern.compile(pattern, Pattern.CASE_INSENSITIVE));",
          "",
          "---------------"
        ],
        "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java": [
          "File: xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultAcceptedPatternsCheckerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package com.opensymphony.xwork2.security;",
          "3: import com.opensymphony.xwork2.XWorkTestCase;",
          "5: import java.util.ArrayList;",
          "6: import java.util.List;",
          "8: public class DefaultAcceptedPatternsCheckerTest extends XWorkTestCase {",
          "10:     public void testHardcodedAcceptedPatterns() throws Exception {",
          "12:         List<String> params = new ArrayList<String>() {",
          "13:             {",
          "14:                 add(\"%{#application['test']}\");",
          "15:                 add(\"%{#application.test}\");",
          "16:                 add(\"%{#Application['test']}\");",
          "17:                 add(\"%{#Application.test}\");",
          "18:                 add(\"%{#session['test']}\");",
          "19:                 add(\"%{#session.test}\");",
          "20:                 add(\"%{#Session['test']}\");",
          "21:                 add(\"%{#Session.test}\");",
          "22:                 add(\"%{#struts['test']}\");",
          "23:                 add(\"%{#struts.test}\");",
          "24:                 add(\"%{#Struts['test']}\");",
          "25:                 add(\"%{#Struts.test}\");",
          "26:                 add(\"%{#request['test']}\");",
          "27:                 add(\"%{#request.test}\");",
          "28:                 add(\"%{#Request['test']}\");",
          "29:                 add(\"%{#Request.test}\");",
          "30:                 add(\"%{#servletRequest['test']}\");",
          "31:                 add(\"%{#servletRequest.test}\");",
          "32:                 add(\"%{#ServletRequest['test']}\");",
          "33:                 add(\"%{#ServletRequest.test}\");",
          "34:                 add(\"%{#servletResponse['test']}\");",
          "35:                 add(\"%{#servletResponse.test}\");",
          "36:                 add(\"%{#ServletResponse['test']}\");",
          "37:                 add(\"%{#ServletResponse.test}\");",
          "38:                 add(\"%{#parameters['test']}\");",
          "39:                 add(\"%{#parameters.test}\");",
          "40:                 add(\"%{#Parameters['test']}\");",
          "41:                 add(\"%{#Parameters.test}\");",
          "42:             }",
          "43:         };",
          "45:         AcceptedPatternsChecker checker = new DefaultAcceptedPatternsChecker();",
          "47:         for (String param : params) {",
          "49:             AcceptedPatternsChecker.IsAccepted actual = checker.isAccepted(param);",
          "52:             assertFalse(\"Access to \" + param + \" is possible!\", actual.isAccepted());",
          "53:         }",
          "54:     }",
          "56: }",
          "",
          "---------------"
        ],
        "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java": [
          "File: xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package com.opensymphony.xwork2.security;",
          "3: import com.opensymphony.xwork2.XWorkTestCase;",
          "5: import java.util.ArrayList;",
          "6: import java.util.List;",
          "8: public class DefaultExcludedPatternsCheckerTest extends XWorkTestCase {",
          "10:     public void testHardcodedPatterns() throws Exception {",
          "12:         List<String> params = new ArrayList<String>() {",
          "13:             {",
          "14:                 add(\"%{#application['test']}\");",
          "15:                 add(\"%{#application.test}\");",
          "16:                 add(\"%{#Application['test']}\");",
          "17:                 add(\"%{#Application.test}\");",
          "18:                 add(\"%{#session['test']}\");",
          "19:                 add(\"%{#session.test}\");",
          "20:                 add(\"%{#Session['test']}\");",
          "21:                 add(\"%{#Session.test}\");",
          "22:                 add(\"%{#struts['test']}\");",
          "23:                 add(\"%{#struts.test}\");",
          "24:                 add(\"%{#Struts['test']}\");",
          "25:                 add(\"%{#Struts.test}\");",
          "26:                 add(\"%{#request['test']}\");",
          "27:                 add(\"%{#request.test}\");",
          "28:                 add(\"%{#Request['test']}\");",
          "29:                 add(\"%{#Request.test}\");",
          "30:                 add(\"%{#servletRequest['test']}\");",
          "31:                 add(\"%{#servletRequest.test}\");",
          "32:                 add(\"%{#ServletRequest['test']}\");",
          "33:                 add(\"%{#ServletRequest.test}\");",
          "34:                 add(\"%{#servletResponse['test']}\");",
          "35:                 add(\"%{#servletResponse.test}\");",
          "36:                 add(\"%{#ServletResponse['test']}\");",
          "37:                 add(\"%{#ServletResponse.test}\");",
          "38:                 add(\"%{#parameters['test']}\");",
          "39:                 add(\"%{#parameters.test}\");",
          "40:                 add(\"%{#Parameters['test']}\");",
          "41:                 add(\"%{#Parameters.test}\");",
          "42:             }",
          "43:         };",
          "45:         ExcludedPatternsChecker checker = new DefaultExcludedPatternsChecker();",
          "47:         for (String param : params) {",
          "49:             ExcludedPatternsChecker.IsExcluded actual = checker.isExcluded(param);",
          "52:             assertTrue(\"Access to \" + param + \" is possible!\", actual.isExcluded());",
          "53:         }",
          "54:     }",
          "56: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf0826f591ee0a9c9a531ed42ec77dc7590a3a58",
      "candidate_info": {
        "commit_hash": "bf0826f591ee0a9c9a531ed42ec77dc7590a3a58",
        "repo": "apache/struts",
        "commit_url": "https://github.com/apache/struts/commit/bf0826f591ee0a9c9a531ed42ec77dc7590a3a58",
        "files": [
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
        ],
        "message": "WW-4390 Adds additional use case to proof that everything works",
        "before_after_code_files": [
          "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
          ],
          "candidate": [
            "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java||xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java": [
          "File: xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java -> xwork-core/src/test/java/com/opensymphony/xwork2/security/DefaultExcludedPatternsCheckerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         }",
          "84:     }",
          "86: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     public void testStrutsTokenIsExcluded() throws Exception {",
          "88:         List<String> tokens = new ArrayList<String>();",
          "89:         tokens.add(\"struts.token.name\");",
          "90:         tokens.add(\"struts.token\");",
          "92:         ExcludedPatternsChecker checker = new DefaultExcludedPatternsChecker();",
          "94:         for (String token : tokens) {",
          "96:             ExcludedPatternsChecker.IsExcluded actual = checker.isExcluded(token);",
          "99:             assertTrue(\"Param '\" + token + \"' is not excluded!\", actual.isExcluded());",
          "100:         }",
          "101:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}