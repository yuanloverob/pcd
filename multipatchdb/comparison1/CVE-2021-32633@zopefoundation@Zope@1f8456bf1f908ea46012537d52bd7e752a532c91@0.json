{
  "cve_id": "CVE-2021-32633",
  "cve_desc": "Zope is an open-source web application server. In Zope versions prior to 4.6 and 5.2, users can access untrusted modules indirectly through Python modules that are available for direct use. By default, only users with the Manager role can add or edit Zope Page Templates through the web, but sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk from this vulnerability. The problem has been fixed in Zope 5.2 and 4.6. As a workaround, a site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.",
  "repo": "zopefoundation/Zope",
  "patch_hash": "1f8456bf1f908ea46012537d52bd7e752a532c91",
  "patch_info": {
    "commit_hash": "1f8456bf1f908ea46012537d52bd7e752a532c91",
    "repo": "zopefoundation/Zope",
    "commit_url": "https://github.com/zopefoundation/Zope/commit/1f8456bf1f908ea46012537d52bd7e752a532c91",
    "files": [
      "CHANGES.rst",
      "src/Products/PageTemplates/Expressions.py",
      "src/Products/PageTemplates/expression.py",
      "src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
      "src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
      "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
      "src/Products/PageTemplates/tests/testExpressions.py",
      "src/Products/PageTemplates/tests/testHTMLTests.py"
    ],
    "message": "Merge pull request from GHSA-5pr9-v234-jw36\n\n* - Prevent traversal to names starting with ``_`` in TAL expressions\n\n* - include the expressions module\n\n* - simplify test\n\n* - lint fix\n\n* - add DeprecationWarnings for traversal to `_`\n\n* Update src/Products/PageTemplates/tests/testChameleonTalesExpressions.py\n\nCo-authored-by: Michael Howitz <mh@gocept.com>\n\n* - add missing import\n\n* - added tests for the ``traverse`` method fix\n\n* - change control flow\n\nCo-authored-by: Michael Howitz <mh@gocept.com>",
    "before_after_code_files": [
      "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
      "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
      "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
      "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
      "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
      "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
      "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
    ]
  },
  "patch_diff": {
    "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
      "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: \"\"\"",
      "19: import logging",
      "21: import OFS.interfaces",
      "22: from AccessControl import safe_builtins",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import warnings",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:     while path_items:",
      "76:         name = path_items.pop()",
      "77:         if OFS.interfaces.ITraversable.providedBy(object):",
      "78:             object = object.restrictedTraverse(name)",
      "79:         else:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "79:         if name == '_':",
      "80:             warnings.warn('Traversing to the name `_` is deprecated '",
      "81:                           'and will be removed in Zope 6.',",
      "82:                           DeprecationWarning)",
      "83:         elif name.startswith('_'):",
      "84:             raise NotFound(name)",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
      "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \"\"\"``chameleon.tales`` expressions.\"\"\"",
      "3: from ast import NodeTransformer",
      "4: from ast import parse",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import warnings",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:         while path_items:",
      "63:             name = path_items.pop()",
      "64:             if ITraversable.providedBy(base):",
      "66:             else:",
      "67:                 base = traversePathElement(base, name, path_items,",
      "68:                                            request=request)",
      "",
      "[Removed Lines]",
      "65:                 base = getattr(base, cls.traverseMethod)(name)",
      "",
      "[Added Lines]",
      "66:             if name == '_':",
      "67:                 warnings.warn('Traversing to the name `_` is deprecated '",
      "68:                               'and will be removed in Zope 6.',",
      "69:                               DeprecationWarning)",
      "70:             elif name.startswith('_'):",
      "71:                 raise NotFound(name)",
      "74:                 base = getattr(base, cls.traverse_method)(name)",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html": [
      "File: src/Products/PageTemplates/tests/input/CheckPathTraverse.html -> src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <html>",
      "2: <body>",
      "3:    <div tal:content=\"context/laf\"></div>",
      "4: </body>",
      "5: </html>",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html": [
      "File: src/Products/PageTemplates/tests/output/CheckPathTraverse.html -> src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <html>",
      "2: <body>",
      "3:    <div>ok</div>",
      "4: </body>",
      "5: </html>",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py": [
      "File: src/Products/PageTemplates/tests/testChameleonTalesExpressions.py -> src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: from ..expression import getEngine",
      "2: from . import testHTMLTests",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import unittest",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "19:     #   expressions (e.g. the ``zope.tales`` ``not`` expression",
      "20:     #   returns ``int``, that of ``chameleon.tales`` ``bool``",
      "21:     PREFIX = \"CH_\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25:     @unittest.skip('The test in the base class relies on a Zope context with'",
      "26:                    ' the \"random\" module available in expressions')",
      "27:     def test_underscore_traversal(self):",
      "28:         pass",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py": [
      "File: src/Products/PageTemplates/tests/testExpressions.py -> src/Products/PageTemplates/tests/testExpressions.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import unittest",
      "3: from AccessControl import safe_builtins",
      "4: from zope.component.testing import PlacelessSetup",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: import warnings",
      "5: from zExceptions import NotFound",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "106:         self.assertTrue(ec.evaluate('x | nothing') is None)",
      "108:     def test_evaluate_dict_key_as_underscore(self):",
      "109:         ec = self._makeContext()",
      "112:     def test_evaluate_dict_with_key_from_expansion(self):",
      "113:         ec = self._makeContext()",
      "",
      "[Removed Lines]",
      "110:         self.assertEqual(ec.evaluate('d/_'), 'under')",
      "",
      "[Added Lines]",
      "111:         # Traversing to the name `_` will raise a DeprecationWarning",
      "112:         # because it will go away in Zope 6.",
      "114:         with warnings.catch_warnings():",
      "115:             warnings.simplefilter('ignore')",
      "116:             self.assertEqual(ec.evaluate('d/_'), 'under')",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "220:         ec = self._makeContext()",
      "221:         self.assertIs(ec.evaluate('nocall: list'), safe_builtins[\"list\"])",
      "224: class TrustedEngineTests(EngineTestsBase, unittest.TestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "229:     def test_underscore_traversal(self):",
      "230:         # Prevent traversal to names starting with an underscore (_)",
      "231:         ec = self._makeContext()",
      "233:         with self.assertRaises(NotFound):",
      "234:             ec.evaluate(\"context/__class__\")",
      "236:         with self.assertRaises(NotFound):",
      "237:             ec.evaluate(\"nocall: random/_itertools/repeat\")",
      "239:         with self.assertRaises(NotFound):",
      "240:             ec.evaluate(\"random/_itertools/repeat/foobar\")",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
      "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "26:     DefaultUnicodeEncodingConflictResolver",
      "27: from Products.PageTemplates.unicodeconflictresolver import \\",
      "28:     PreferredCharsetResolver",
      "29: from zope.component import provideUtility",
      "30: from zope.traversing.adapters import DefaultTraversable",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: from zExceptions import NotFound",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "155:     def testPathAlt(self):",
      "156:         self.assert_expected(self.folder.t, 'CheckPathAlt.html')",
      "158:     def testBatchIteration(self):",
      "159:         self.assert_expected(self.folder.t, 'CheckBatchIteration.html')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:     def testPathTraverse(self):",
      "160:         # need to perform this test with a \"real\" folder",
      "161:         from OFS.Folder import Folder",
      "162:         f = self.folder",
      "163:         self.folder = Folder()",
      "164:         self.folder.t, self.folder.laf = f.t, f.laf",
      "165:         self.folder.laf.write('ok')",
      "166:         self.assert_expected(self.folder.t, 'CheckPathTraverse.html')",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "207:         provideUtility(PreferredCharsetResolver)",
      "208:         t = PageTemplate()",
      "209:         self.assert_expected(t, 'UnicodeResolution.html')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "221:     def test_underscore_traversal(self):",
      "222:         t = self.folder.t",
      "224:         t.write('<p tal:define=\"p context/__class__\" />')",
      "225:         with self.assertRaises(NotFound):",
      "226:             t()",
      "228:         t.write('<p tal:define=\"p nocall: random/_itertools/repeat\"/>')",
      "229:         with self.assertRaises(NotFound):",
      "230:             t()",
      "232:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
      "233:         with self.assertRaises(NotFound):",
      "234:             t()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d897910139e2c0b11984fc9b78c1da1365bec21",
      "candidate_info": {
        "commit_hash": "1d897910139e2c0b11984fc9b78c1da1365bec21",
        "repo": "zopefoundation/Zope",
        "commit_url": "https://github.com/zopefoundation/Zope/commit/1d897910139e2c0b11984fc9b78c1da1365bec21",
        "files": [
          "CHANGES.rst",
          "src/OFS/zpt/main.zpt",
          "src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py"
        ],
        "message": "Merge pull request from GHSA-rpcg-f9q6-2mq6\n\n* - Prevent traversal through authorized Python modules in TAL expressions\n\n* - try a more generic solution that doesn't use special casing\n\n* - add suggestions from Maurits\n\n* - integrate remaining suggestions from Maurits",
        "before_after_code_files": [
          "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt",
          "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ],
          "candidate": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ]
        }
      },
      "candidate_diff": {
        "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt": [
          "File: src/OFS/zpt/main.zpt -> src/OFS/zpt/main.zpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: <main class=\"container-fluid\">",
          "6:   <form id=\"objectItems\" name=\"objectItems\" method=\"post\"",
          "7:         tal:define=\"has_order_support python:getattr(here.aq_explicit, 'has_order_support', 0);",
          "9:                     default_sort python: 'position' if has_order_support else 'id';",
          "10:                     skey python:request.get('skey',default_sort);",
          "11:                     rkey python:request.get('rkey','asc');",
          "",
          "[Removed Lines]",
          "8:                     sm modules/AccessControl/SecurityManagement/getSecurityManager;",
          "",
          "[Added Lines]",
          "8:                     sm modules/AccessControl/getSecurityManager;",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
          "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import OFS.interfaces",
          "23: from AccessControl import safe_builtins",
          "24: from Acquisition import aq_base",
          "25: from MultiMapping import MultiMapping",
          "26: from zExceptions import NotFound",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: from AccessControl.SecurityManagement import getSecurityManager",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     necessary (bobo-awareness).",
          "71:     \"\"\"",
          "72:     request = getattr(econtext, 'request', None)",
          "73:     path_items = list(path_items)",
          "74:     path_items.reverse()",
          "76:     while path_items:",
          "77:         name = path_items.pop()",
          "86:         if OFS.interfaces.ITraversable.providedBy(object):",
          "87:             object = object.restrictedTraverse(name)",
          "88:         else:",
          "91:     return object",
          "",
          "[Removed Lines]",
          "79:         if name == '_':",
          "80:             warnings.warn('Traversing to the name `_` is deprecated '",
          "81:                           'and will be removed in Zope 6.',",
          "82:                           DeprecationWarning)",
          "83:         elif name.startswith('_'):",
          "84:             raise NotFound(name)",
          "89:             object = traversePathElement(object, name, path_items,",
          "90:                                          request=request)",
          "",
          "[Added Lines]",
          "74:     validate = getSecurityManager().validate",
          "84:             found = traversePathElement(object, name, path_items,",
          "85:                                         request=request)",
          "87:             # Special backwards compatibility exception for the name ``_``,",
          "88:             # which was often used for translation message factories.",
          "89:             # Allow and continue traversal.",
          "90:             if name == '_':",
          "91:                 warnings.warn('Traversing to the name `_` is deprecated '",
          "92:                               'and will be removed in Zope 6.',",
          "93:                               DeprecationWarning)",
          "94:                 object = found",
          "95:                 continue",
          "97:             # All other names starting with ``_`` are disallowed.",
          "98:             # This emulates what restrictedTraverse does.",
          "99:             if name.startswith('_'):",
          "100:                 raise NotFound(name)",
          "102:             # traversePathElement doesn't apply any Zope security policy,",
          "103:             # so we validate access explicitly here.",
          "104:             try:",
          "105:                 validate(object, object, name, found)",
          "106:                 object = found",
          "107:             except Unauthorized:",
          "108:                 # Convert Unauthorized to prevent information disclosures",
          "109:                 raise NotFound(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
          "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: from chameleon.tales import NotExpr",
          "11: from chameleon.tales import StringExpr",
          "13: from AccessControl.ZopeGuards import guarded_apply",
          "14: from AccessControl.ZopeGuards import guarded_getattr",
          "15: from AccessControl.ZopeGuards import guarded_getitem",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: from AccessControl.SecurityManagement import getSecurityManager",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:     def traverse(cls, base, request, path_items):",
          "58:         \"\"\"See ``zope.app.pagetemplate.engine``.\"\"\"",
          "60:         path_items = list(path_items)",
          "61:         path_items.reverse()",
          "63:         while path_items:",
          "64:             name = path_items.pop()",
          "73:             if ITraversable.providedBy(base):",
          "74:                 base = getattr(base, cls.traverse_method)(name)",
          "75:             else:",
          "79:         return base",
          "",
          "[Removed Lines]",
          "66:             if name == '_':",
          "67:                 warnings.warn('Traversing to the name `_` is deprecated '",
          "68:                               'and will be removed in Zope 6.',",
          "69:                               DeprecationWarning)",
          "70:             elif name.startswith('_'):",
          "71:                 raise NotFound(name)",
          "76:                 base = traversePathElement(base, name, path_items,",
          "77:                                            request=request)",
          "",
          "[Added Lines]",
          "61:         validate = getSecurityManager().validate",
          "71:                 found = traversePathElement(base, name, path_items,",
          "72:                                             request=request)",
          "74:                 # If traverse_method is something other than",
          "75:                 # ``restrictedTraverse`` then traversal is assumed to be",
          "76:                 # unrestricted. This emulates ``unrestrictedTraverse``",
          "77:                 if cls.traverse_method != 'restrictedTraverse':",
          "78:                     base = found",
          "79:                     continue",
          "81:                 # Special backwards compatibility exception for the name ``_``,",
          "82:                 # which was often used for translation message factories.",
          "83:                 # Allow and continue traversal.",
          "84:                 if name == '_':",
          "85:                     warnings.warn('Traversing to the name `_` is deprecated '",
          "86:                                   'and will be removed in Zope 6.',",
          "87:                                   DeprecationWarning)",
          "88:                     base = found",
          "89:                     continue",
          "91:                 # All other names starting with ``_`` are disallowed.",
          "92:                 # This emulates what restrictedTraverse does.",
          "93:                 if name.startswith('_'):",
          "94:                     raise NotFound(name)",
          "96:                 # traversePathElement doesn't apply any Zope security policy,",
          "97:                 # so we validate access explicitly here.",
          "98:                 try:",
          "99:                     validate(base, base, name, found)",
          "100:                     base = found",
          "101:                 except Unauthorized:",
          "102:                     # Convert Unauthorized to prevent information disclosures",
          "103:                     raise NotFound(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py": [
          "File: src/Products/PageTemplates/tests/testExpressions.py -> src/Products/PageTemplates/tests/testExpressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: from AccessControl import safe_builtins",
          "5: from zExceptions import NotFound",
          "6: from zope.component.testing import PlacelessSetup",
          "9: class EngineTestsBase(PlacelessSetup):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: from zope.location.interfaces import LocationError",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "233:         with self.assertRaises(NotFound):",
          "234:             ec.evaluate(\"context/__class__\")",
          "237:             ec.evaluate(\"nocall: random/_itertools/repeat\")",
          "240:             ec.evaluate(\"random/_itertools/repeat/foobar\")",
          "",
          "[Removed Lines]",
          "236:         with self.assertRaises(NotFound):",
          "239:         with self.assertRaises(NotFound):",
          "",
          "[Added Lines]",
          "237:         with self.assertRaises((NotFound, LocationError)):",
          "240:         with self.assertRaises((NotFound, LocationError)):",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
          "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:     DefaultUnicodeEncodingConflictResolver",
          "27: from Products.PageTemplates.unicodeconflictresolver import \\",
          "28:     PreferredCharsetResolver",
          "29: from zExceptions import NotFound",
          "30: from zope.component import provideUtility",
          "31: from zope.traversing.adapters import DefaultTraversable",
          "33: from .util import useChameleonEngine",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate",
          "32: from zope.location.interfaces import LocationError",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:     pass",
          "40: class Folder(util.Base):",
          "41:     pass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: class AqZopePageTemplate(Implicit, ZopePageTemplate):",
          "43:     pass",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:         self.folder = f = Folder()",
          "75:         f.laf = AqPageTemplate()",
          "76:         f.t = AqPageTemplate()",
          "77:         self.policy = UnitTestSecurityPolicy()",
          "78:         self.oldPolicy = SecurityManager.setSecurityPolicy(self.policy)",
          "79:         noSecurityManager()  # Use the new policy.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:         f.z = AqZopePageTemplate('testing')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "226:             t()",
          "228:         t.write('<p tal:define=\"p nocall: random/_itertools/repeat\"/>')",
          "230:             t()",
          "232:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
          "233:         with self.assertRaises(NotFound):",
          "234:             t()",
          "",
          "[Removed Lines]",
          "229:         with self.assertRaises(NotFound):",
          "",
          "[Added Lines]",
          "236:         with self.assertRaises((NotFound, LocationError)):",
          "240:         with self.assertRaises((NotFound, LocationError)):",
          "241:             t()",
          "243:     def test_module_traversal(self):",
          "244:         t = self.folder.z",
          "246:         # Need to reset to the standard security policy so AccessControl",
          "247:         # checks are actually performed. The test setup initializes",
          "248:         # a policy that circumvents those checks.",
          "249:         SecurityManager.setSecurityPolicy(self.oldPolicy)",
          "250:         noSecurityManager()",
          "252:         # The getSecurityManager function is explicitly allowed",
          "253:         content = ('<p tal:define=\"a nocall:%s\"'",
          "254:                    '   tal:content=\"python: a().getUser().getUserName()\"/>')",
          "255:         t.write(content % 'modules/AccessControl/getSecurityManager')",
          "256:         self.assertEqual(t(), '<p>Anonymous User</p>')",
          "258:         # Anything else should be unreachable and raise NotFound:",
          "259:         # Direct access through AccessControl",
          "260:         t.write('<p tal:define=\"a nocall:modules/AccessControl/users\"/>')",
          "261:         with self.assertRaises(NotFound):",
          "262:             t()",
          "264:         # Indirect access through an intermediary variable",
          "265:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
          "266:                    '               must_fail nocall:mod/users\"/>')",
          "267:         t.write(content)",
          "268:         with self.assertRaises(NotFound):",
          "269:             t()",
          "271:         # Indirect access through an intermediary variable and a dictionary",
          "272:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
          "273:                    '               a_dict python: {\\'unsafe\\': mod};'",
          "274:                    '               must_fail nocall: a_dict/unsafe/users\"/>')",
          "275:         t.write(content)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e98d326326e36e8dddc53251e2ac9bfb3fcbe397",
      "candidate_info": {
        "commit_hash": "e98d326326e36e8dddc53251e2ac9bfb3fcbe397",
        "repo": "zopefoundation/Zope",
        "commit_url": "https://github.com/zopefoundation/Zope/commit/e98d326326e36e8dddc53251e2ac9bfb3fcbe397",
        "files": [
          "CHANGES.rst",
          "setup.py",
          "src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
          "src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
          "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
          "src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py"
        ],
        "message": "Fix traversal behavior for 4.x (#972)\n\n* - apply Zope master traversal fixes to 4.x\n\n* - bump version to 4.6\n\n* - unbreak sphinx\n\n* - unbreak version number",
        "before_after_code_files": [
          "setup.py||setup.py",
          "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
          "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
          "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
          "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
            "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
            "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ],
          "candidate": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
            "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
            "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ]
        }
      },
      "candidate_diff": {
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: README = _read_file('README.rst')",
          "30: CHANGES = _read_file('CHANGES.rst')",
          "35: setup(",
          "",
          "[Removed Lines]",
          "32: version = '4.5.6.dev0'",
          "",
          "[Added Lines]",
          "32: version = '4.6.0.dev0'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130:     zip_safe=False,",
          "131:     extras_require={",
          "132:         'docs': [",
          "134:             'sphinx_rtd_theme',",
          "135:             'repoze.sphinx.autointerface',",
          "136:             'tempstorage',",
          "",
          "[Removed Lines]",
          "133:             'Sphinx',",
          "",
          "[Added Lines]",
          "133:             'Sphinx < 4',",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
          "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: \"\"\"",
          "19: import logging",
          "21: from six import binary_type",
          "22: from six import text_type",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import warnings",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     while path_items:",
          "79:         name = path_items.pop()",
          "80:         if OFS.interfaces.ITraversable.providedBy(object):",
          "81:             object = object.restrictedTraverse(name)",
          "82:         else:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:         if name == '_':",
          "83:             warnings.warn('Traversing to the name `_` is deprecated '",
          "84:                           'and will be removed in Zope 6.',",
          "85:                           DeprecationWarning)",
          "86:         elif name.startswith('_'):",
          "87:             raise NotFound(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
          "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: \"\"\"``chameleon.tales`` expressions.\"\"\"",
          "3: from ast import NodeTransformer",
          "4: from ast import parse",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import warnings",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:         while path_items:",
          "64:             name = path_items.pop()",
          "65:             if ITraversable.providedBy(base):",
          "67:             else:",
          "68:                 base = traversePathElement(base, name, path_items,",
          "69:                                            request=request)",
          "",
          "[Removed Lines]",
          "66:                 base = getattr(base, cls.traverseMethod)(name)",
          "",
          "[Added Lines]",
          "67:             if name == '_':",
          "68:                 warnings.warn('Traversing to the name `_` is deprecated '",
          "69:                               'and will be removed in Zope 6.',",
          "70:                               DeprecationWarning)",
          "71:             elif name.startswith('_'):",
          "72:                 raise NotFound(name)",
          "75:                 base = getattr(base, cls.traverse_method)(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/input/CheckPathTraverse.html||src/Products/PageTemplates/tests/input/CheckPathTraverse.html": [
          "File: src/Products/PageTemplates/tests/input/CheckPathTraverse.html -> src/Products/PageTemplates/tests/input/CheckPathTraverse.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <html>",
          "2: <body>",
          "3:    <div tal:content=\"context/laf\"></div>",
          "4: </body>",
          "5: </html>",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/output/CheckPathTraverse.html||src/Products/PageTemplates/tests/output/CheckPathTraverse.html": [
          "File: src/Products/PageTemplates/tests/output/CheckPathTraverse.html -> src/Products/PageTemplates/tests/output/CheckPathTraverse.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <html>",
          "2: <body>",
          "3:    <div>ok</div>",
          "4: </body>",
          "5: </html>",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testChameleonTalesExpressions.py||src/Products/PageTemplates/tests/testChameleonTalesExpressions.py": [
          "File: src/Products/PageTemplates/tests/testChameleonTalesExpressions.py -> src/Products/PageTemplates/tests/testChameleonTalesExpressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: from ..expression import getEngine",
          "2: from . import testHTMLTests",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import unittest",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:     #   expressions (e.g. the ``zope.tales`` ``not`` expression",
          "20:     #   returns ``int``, that of ``chameleon.tales`` ``bool``",
          "21:     PREFIX = \"CH_\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:     @unittest.skip('The test in the base class relies on a Zope context with'",
          "26:                    ' the \"random\" module available in expressions')",
          "27:     def test_underscore_traversal(self):",
          "28:         pass",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py": [
          "File: src/Products/PageTemplates/tests/testExpressions.py -> src/Products/PageTemplates/tests/testExpressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # -*- coding: utf-8 -*-",
          "3: import unittest",
          "5: from six import text_type",
          "7: from AccessControl import safe_builtins",
          "8: from zope.component.testing import PlacelessSetup",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import warnings",
          "9: from zExceptions import NotFound",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:         self.assertTrue(ec.evaluate('x | nothing') is None)",
          "112:     def test_evaluate_dict_key_as_underscore(self):",
          "113:         ec = self._makeContext()",
          "116:     def test_evaluate_dict_with_key_from_expansion(self):",
          "117:         ec = self._makeContext()",
          "",
          "[Removed Lines]",
          "114:         self.assertEqual(ec.evaluate('d/_'), 'under')",
          "",
          "[Added Lines]",
          "115:         # Traversing to the name `_` will raise a DeprecationWarning",
          "116:         # because it will go away in Zope 6.",
          "118:         with warnings.catch_warnings():",
          "119:             warnings.simplefilter('ignore')",
          "120:             self.assertEqual(ec.evaluate('d/_'), 'under')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "224:         ec = self._makeContext()",
          "225:         self.assertIs(ec.evaluate('nocall: list'), safe_builtins[\"list\"])",
          "228: class TrustedEngineTests(EngineTestsBase, unittest.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:     def test_underscore_traversal(self):",
          "234:         # Prevent traversal to names starting with an underscore (_)",
          "235:         ec = self._makeContext()",
          "237:         with self.assertRaises(NotFound):",
          "238:             ec.evaluate(\"context/__class__\")",
          "240:         with self.assertRaises(NotFound):",
          "241:             ec.evaluate(\"nocall: random/_itertools/repeat\")",
          "243:         with self.assertRaises(NotFound):",
          "244:             ec.evaluate(\"random/_itertools/repeat/foobar\")",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
          "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     DefaultUnicodeEncodingConflictResolver",
          "28: from Products.PageTemplates.unicodeconflictresolver import \\",
          "29:     PreferredCharsetResolver",
          "30: from zope.component import provideUtility",
          "31: from zope.traversing.adapters import DefaultTraversable",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: from zExceptions import NotFound",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "156:     def testPathAlt(self):",
          "157:         self.assert_expected(self.folder.t, 'CheckPathAlt.html')",
          "159:     def testBatchIteration(self):",
          "160:         self.assert_expected(self.folder.t, 'CheckBatchIteration.html')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:     def testPathTraverse(self):",
          "161:         # need to perform this test with a \"real\" folder",
          "162:         from OFS.Folder import Folder",
          "163:         f = self.folder",
          "164:         self.folder = Folder()",
          "165:         self.folder.t, self.folder.laf = f.t, f.laf",
          "166:         self.folder.laf.write('ok')",
          "167:         self.assert_expected(self.folder.t, 'CheckPathTraverse.html')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:         provideUtility(PreferredCharsetResolver)",
          "209:         t = PageTemplate()",
          "210:         self.assert_expected(t, 'UnicodeResolution.html')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:     def test_underscore_traversal(self):",
          "223:         t = self.folder.t",
          "225:         t.write('<p tal:define=\"p context/__class__\" />')",
          "226:         with self.assertRaises(NotFound):",
          "227:             t()",
          "229:         t.write('<p tal:define=\"p nocall: random/_itertools/repeat\"/>')",
          "230:         with self.assertRaises(NotFound):",
          "231:             t()",
          "233:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
          "234:         with self.assertRaises(NotFound):",
          "235:             t()",
          "",
          "---------------"
        ]
      }
    }
  ]
}