{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf91c70dcbcbd57d6a0670946ff42d85000f23f1",
      "candidate_info": {
        "commit_hash": "cf91c70dcbcbd57d6a0670946ff42d85000f23f1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/cf91c70dcbcbd57d6a0670946ff42d85000f23f1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java"
        ],
        "message": "PDFBOX-5267: make glyphlist static, as suggested by Alistair Oldfield\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1892673 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java||pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java -> pdfbox/src/main/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:     private int pageRotation;",
          "84:     private PDRectangle pageSize;",
          "85:     private Matrix translateMatrix;",
          "87:     private final Map<COSDictionary, Float> fontHeightMap = new WeakHashMap<COSDictionary, Float>();",
          "",
          "[Removed Lines]",
          "86:     private final GlyphList glyphList;",
          "",
          "[Added Lines]",
          "86:     private static final GlyphList GLYPHLIST;",
          "89:     static",
          "90:     {",
          "92:         String path = \"/org/apache/pdfbox/resources/glyphlist/additional.txt\";",
          "93:         InputStream input = GlyphList.class.getResourceAsStream(path);",
          "94:         try",
          "95:         {",
          "96:             GLYPHLIST = new GlyphList(GlyphList.getAdobeGlyphList(), input);",
          "97:             input.close();",
          "98:         }",
          "99:         catch (IOException ex)",
          "100:         {",
          "101:             throw new RuntimeException(ex);",
          "102:         }",
          "103:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:         addOperator(new SetTextHorizontalScaling());",
          "114:         addOperator(new ShowTextLine());",
          "115:         addOperator(new ShowTextLineAndSpace());",
          "121:     }",
          "",
          "[Removed Lines]",
          "118:         String path = \"/org/apache/pdfbox/resources/glyphlist/additional.txt\";",
          "119:         InputStream input = GlyphList.class.getResourceAsStream(path);",
          "120:         glyphList = new GlyphList(GlyphList.getAdobeGlyphList(), input);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "266:         float spaceWidthDisplay = spaceWidthText * textRenderingMatrix.getScalingFactorX();",
          "",
          "[Removed Lines]",
          "269:         String unicodeMapping = font.toUnicode(code, glyphList);",
          "",
          "[Added Lines]",
          "280:         String unicodeMapping = font.toUnicode(code, GLYPHLIST);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "902fe665a95e717f0b796d9e9fd3712b2d4f1bb4",
      "candidate_info": {
        "commit_hash": "902fe665a95e717f0b796d9e9fd3712b2d4f1bb4",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/902fe665a95e717f0b796d9e9fd3712b2d4f1bb4",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java"
        ],
        "message": "PDFBOX-4892: performance optimization, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888032 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "478:         int rotationAngle = page.getRotation();",
          "481:         if (rotationAngle != 0)",
          "482:         {",
          "483:             float translateX = 0;",
          "484:             float translateY = 0;",
          "485:             switch (rotationAngle)",
          "",
          "[Removed Lines]",
          "479:         PDRectangle cropBox = page.getCropBox();",
          "",
          "[Added Lines]",
          "481:             PDRectangle cropBox = page.getCropBox();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38a7d1125aadf78ddf80120880c539d1a7fdb006",
      "candidate_info": {
        "commit_hash": "38a7d1125aadf78ddf80120880c539d1a7fdb006",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/38a7d1125aadf78ddf80120880c539d1a7fdb006",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5168: refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888890 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "765:         dashArray = getDashArray(dashPattern);",
          "766:         phaseStart = transformWidth(phaseStart);",
          "784:         int lineCap = Math.min(2, Math.max(0, state.getLineCap()));",
          "785:         int lineJoin = Math.min(2, Math.max(0, state.getLineJoin()));",
          "786:         float miterLimit = state.getMiterLimit();",
          "",
          "[Removed Lines]",
          "769:         if (dashArray.length == 0 || Float.isInfinite(phaseStart) || Float.isNaN(phaseStart))",
          "770:         {",
          "771:             dashArray = null;",
          "772:         }",
          "773:         else",
          "774:         {",
          "775:             for (int i = 0; i < dashArray.length; ++i)",
          "776:             {",
          "777:                 if (Float.isInfinite(dashArray[i]) || Float.isNaN(dashArray[i]))",
          "778:                 {",
          "779:                     dashArray = null;",
          "780:                     break;",
          "781:                 }",
          "782:             }",
          "783:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "817:     private float[] getDashArray(PDLineDashPattern dashPattern)",
          "818:     {",
          "819:         float[] dashArray = dashPattern.getDashArray();",
          "820:         if (JAVA_VERSION < 10)",
          "821:         {",
          "822:             float scalingFactorX = new Matrix(xform).getScalingFactorX();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "804:         int phase = dashPattern.getPhase();",
          "806:         if (dashArray.length == 0 || Float.isInfinite(phase) || Float.isNaN(phase))",
          "807:         {",
          "808:             return null;",
          "809:         }",
          "810:         for (int i = 0; i < dashArray.length; ++i)",
          "811:         {",
          "812:             if (Float.isInfinite(dashArray[i]) || Float.isNaN(dashArray[i]))",
          "813:             {",
          "814:                 return null;",
          "815:             }",
          "816:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a6b2bf0dfedca3658d11db6caf38040698c3dd6",
      "candidate_info": {
        "commit_hash": "9a6b2bf0dfedca3658d11db6caf38040698c3dd6",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/9a6b2bf0dfedca3658d11db6caf38040698c3dd6",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java"
        ],
        "message": "PDFBOX-4892: Sonar fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889833 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:         {",
          "180:             for (int j = 1; j < szU; j++)",
          "181:             {",
          "184:                 boolean ll = true;",
          "185:                 if (overlaps(p0, p1) || overlaps(p0, p3))",
          "186:                 {",
          "",
          "[Removed Lines]",
          "182:                 Point2D p0 = patchCC[i - 1][j - 1].coordinate, p1 = patchCC[i - 1][j].coordinate, p2 = patchCC[i][j].coordinate,",
          "183:                         p3 = patchCC[i][j - 1].coordinate;",
          "",
          "[Added Lines]",
          "182:                 Point2D p0 = patchCC[i - 1][j - 1].coordinate;",
          "183:                 Point2D p1 = patchCC[i - 1][j].coordinate;",
          "184:                 Point2D p2 = patchCC[i][j].coordinate;",
          "185:                 Point2D p3 = patchCC[i][j - 1].coordinate;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd6b0b6191685eb0ff67fa3e49bb1b84fcc49d36",
      "candidate_info": {
        "commit_hash": "fd6b0b6191685eb0ff67fa3e49bb1b84fcc49d36",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/fd6b0b6191685eb0ff67fa3e49bb1b84fcc49d36",
        "files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891645 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java||preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java||preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java -> preflight/src/main/java/org/apache/pdfbox/preflight/metadata/SynchronizedMetaDataValidation.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "511:     protected ValidationError unsynchronizedMetaDataError(String target)",
          "512:     {",
          "516:     }",
          "",
          "[Removed Lines]",
          "513:         StringBuilder sb = new StringBuilder(80);",
          "514:         sb.append(target).append(\" present in the document catalog dictionary doesn't match with XMP information\");",
          "515:         return new ValidationError(PreflightConstants.ERROR_METADATA_MISMATCH, sb.toString());",
          "",
          "[Added Lines]",
          "513:         return new ValidationError(PreflightConstants.ERROR_METADATA_MISMATCH, target +",
          "514:                 \" present in the document catalog dictionary doesn't match with XMP information\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}