{
  "cve_id": "CVE-2022-41711",
  "cve_desc": "Badaso version 2.6.0 allows an unauthenticated remote attacker to execute arbitrary code remotely on the server. This is possible because the application does not properly validate the data uploaded by users.",
  "repo": "uasoft-indonesia/badaso",
  "patch_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
  "patch_info": {
    "commit_hash": "22250eca7c364d991ce9e0a723941eae4889d6f9",
    "repo": "uasoft-indonesia/badaso",
    "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/22250eca7c364d991ce9e0a723941eae4889d6f9",
    "files": [
      "src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue"
    ],
    "message": "Merge pull request #807 from uasoft-indonesia/bugfix/v2/filter-mimeType\n\nBugfix[v2] add filter mimeType",
    "before_after_code_files": [
      "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue",
      "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue",
      "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue",
      "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue"
    ]
  },
  "patch_diff": {
    "src/resources/js/components/BadasoUploadFile.vue||src/resources/js/components/BadasoUploadFile.vue": [
      "File: src/resources/js/components/BadasoUploadFile.vue -> src/resources/js/components/BadasoUploadFile.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "336:           });",
      "337:           return;",
      "338:         }",
      "340:         this.uploadFile(files[0]);",
      "341:       }",
      "342:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "339:         if (!this.availableMimetypes.file.validMime.includes(files[0].type)) {",
      "340:           this.$vs.notify({",
      "341:             title: this.$t(\"alert.danger\"),",
      "342:             text: \"File type not allowed\",",
      "343:             color: \"danger\",",
      "344:           });",
      "345:           return;",
      "346:         }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadFileMultiple.vue||src/resources/js/components/BadasoUploadFileMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadFileMultiple.vue -> src/resources/js/components/BadasoUploadFileMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "367:             });",
      "368:             return;",
      "369:           }",
      "371:           this.uploadFile(file);",
      "372:         }",
      "373:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "370:           if (!this.availableMimetypes.file.validMime.includes(file.type)) {",
      "371:             this.$vs.notify({",
      "372:               title: this.$t(\"alert.danger\"),",
      "373:               text: \"File type not allowed\",",
      "374:               color: \"danger\",",
      "375:             });",
      "376:             return;",
      "377:           }",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImage.vue||src/resources/js/components/BadasoUploadImage.vue": [
      "File: src/resources/js/components/BadasoUploadImage.vue -> src/resources/js/components/BadasoUploadImage.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "380:           });",
      "381:           return;",
      "382:         }",
      "384:         this.uploadImage(files[0]);",
      "385:       }",
      "386:     },",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "383:         if (!this.availableMimetypes.image.validMime.includes(files[0].type)){",
      "384:           this.$vs.notify({",
      "385:             title: this.$t(\"alert.danger\"),",
      "386:             text: \"File type not allowed\",",
      "387:             color: \"danger\",",
      "388:           });",
      "389:           return;",
      "390:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:     uploadImage(file) {",
      "422:       const files = new FormData();",
      "423:       files.append(\"upload\", file);",
      "425:       files.append(\"working_dir\", this.getActiveFolder);",
      "426:       this.$api.badasoFile",
      "427:         .uploadUsingLfm(files)",
      "",
      "[Removed Lines]",
      "424:       files.append(\"type\", \"image\");",
      "",
      "[Added Lines]",
      "431:       files.append(\"type\", file.type);",
      "",
      "---------------"
    ],
    "src/resources/js/components/BadasoUploadImageMultiple.vue||src/resources/js/components/BadasoUploadImageMultiple.vue": [
      "File: src/resources/js/components/BadasoUploadImageMultiple.vue -> src/resources/js/components/BadasoUploadImageMultiple.vue",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:             });",
      "396:             return;",
      "397:           }",
      "399:           this.uploadImage(file);",
      "400:         }",
      "401:       }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:           if (!this.availableMimetypes.image.validMime.includes(file.type)) {",
      "399:             this.$vs.notify({",
      "400:               title: this.$t(\"alert.danger\"),",
      "401:               text: \"File type not allowed\",",
      "402:               color: \"danger\",",
      "403:             });",
      "404:             return;",
      "405:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e7956d318807adc75cd149328b07bb171ee2ae7e",
      "candidate_info": {
        "commit_hash": "e7956d318807adc75cd149328b07bb171ee2ae7e",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/e7956d318807adc75cd149328b07bb171ee2ae7e",
        "files": [
          "src/Controllers/Controller.php",
          "src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Controllers/Controller.php||src/Controllers/Controller.php",
          "src/Helpers/GetData.php||src/Helpers/GetData.php",
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Controllers/Controller.php||src/Controllers/Controller.php": [
          "File: src/Controllers/Controller.php -> src/Controllers/Controller.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:         if ($user = auth()->user()) {",
          "41:             $permissions = DB::SELECT('",
          "42:                 SELECT *",
          "48:                 WHERE u.id = :user_id",
          "49:                 AND p.key = :permission",
          "50:             ', [",
          "51:                 'user_id'    => $user->id,",
          "53:             ]);",
          "55:             if (count($permissions) > 0) {",
          "",
          "[Removed Lines]",
          "43:                 FROM ' . $prefix . 'permissions p",
          "44:                 JOIN ' . $prefix . 'role_permissions rp ON p.id = rp.permission_id",
          "45:                 JOIN ' . $prefix . 'roles r ON rp.role_id  = r.id",
          "46:                 JOIN ' . $prefix . 'user_roles ur ON r.id = ur.role_id",
          "47:                 JOIN ' . $prefix . 'users u ON ur.user_id = u.id",
          "52:                 'permission' => $method . '_' . $data_type->name,",
          "",
          "[Added Lines]",
          "43:                 FROM '.$prefix.'permissions p",
          "44:                 JOIN '.$prefix.'role_permissions rp ON p.id = rp.permission_id",
          "45:                 JOIN '.$prefix.'roles r ON rp.role_id  = r.id",
          "46:                 JOIN '.$prefix.'user_roles ur ON r.id = ur.role_id",
          "47:                 JOIN '.$prefix.'users u ON ur.user_id = u.id",
          "52:                 'permission' => $method.'_'.$data_type->name,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:                     $destination_table_column = array_key_exists('destination_table_column', $relation_detail) ? $relation_detail['destination_table_column'] : null;",
          "96:                     if ($relation_type == 'belongs_to') {",
          "98:                     }",
          "99:                 }",
          "100:             }",
          "",
          "[Removed Lines]",
          "97:                         $rules[$row->field][] = 'exists:' . $destination_table . ',' . $destination_table_column;",
          "",
          "[Added Lines]",
          "97:                         $rules[$row->field][] = 'exists:'.$destination_table.','.$destination_table_column;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "276:                     $table_destination = $data_row->relation['destination_table'];",
          "277:                     $table_manytomany = $data_row['field'];",
          "278:                     $data_relation = DB::table($table_manytomany)",
          "281:                         ->get();",
          "282:                     $record->$table_manytomany = $data_relation;",
          "283:                 }",
          "",
          "[Removed Lines]",
          "279:                         ->leftjoin($table_name, $table_manytomany . '.id', '=', $table_name . '_id')",
          "280:                         ->select($table_name . '_id', $table_destination . '_id')",
          "",
          "[Added Lines]",
          "279:                         ->leftjoin($table_name, $table_manytomany.'.id', '=', $table_name.'_id')",
          "280:                         ->select($table_name.'_id', $table_destination.'_id')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "298:             $model = app($data_type->model_name);",
          "299:             foreach ($data as $key => $value) {",
          "300:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "302:                     $model->{$key} = $this->getContentByType($data_type, $data_row, $value);",
          "303:                 }",
          "304:             }",
          "",
          "[Removed Lines]",
          "301:                 if (!is_null($data_row)) {",
          "",
          "[Added Lines]",
          "301:                 if (! is_null($data_row)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "322:                         'model'           => $model_manytomany['model_name'],",
          "323:                         'content'         => $data_manytomany,",
          "324:                         'table'           => $table_manytomany,",
          "327:                         'parentKey'       => null,",
          "328:                         'relatedKey'      => 'id',",
          "329:                     ];",
          "",
          "[Removed Lines]",
          "325:                         'foreignPivotKey' => $table_primary . '_id' ? $table_primary . '_id' : null,",
          "326:                         'relatedPivotKey' => $table_relation . '_id' ? $table_relation . '_id' : null,",
          "",
          "[Added Lines]",
          "325:                         'foreignPivotKey' => $table_primary.'_id' ? $table_primary.'_id' : null,",
          "326:                         'relatedPivotKey' => $table_relation.'_id' ? $table_relation.'_id' : null,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "350:             $data['updated_at'] = $timestamp;",
          "351:             foreach ($data as $key => $value) {",
          "352:                 $data_row = collect($data_rows)->where('field', $key)->first();",
          "354:                     if ($data_row['type'] == 'upload_image_multiple') {",
          "355:                         $new_data[$key] = $this->getContentByType($data_type, $data_row, $value);",
          "356:                     }",
          "",
          "[Removed Lines]",
          "353:                 if (!is_null($data_row)) {",
          "",
          "[Added Lines]",
          "353:                 if (! is_null($data_row)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "424:                         $files = explode(',', $model->{$data_row->field});",
          "425:                         foreach ($files as $file) {",
          "426:                             if (is_array($value)) {",
          "428:                                     $this->handleDeleteFile($file);",
          "429:                                 }",
          "430:                             } else {",
          "",
          "[Removed Lines]",
          "427:                                 if (!in_array($file, $value)) {",
          "",
          "[Added Lines]",
          "427:                                 if (! in_array($file, $value)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "455:                             'model'           => $model_manytomany['model_name'],",
          "456:                             'content'         => $data_manytomany,",
          "457:                             'table'           => $table_manytomany,",
          "460:                             'parentKey'       => null,",
          "461:                             'relatedKey'      => 'id',",
          "462:                         ];",
          "",
          "[Removed Lines]",
          "458:                             'foreignPivotKey' => $table_primary . '_id' ? $table_primary . '_id' : null,",
          "459:                             'relatedPivotKey' => $table_relation . '_id' ? $table_relation . '_id' : null,",
          "",
          "[Added Lines]",
          "458:                             'foreignPivotKey' => $table_primary.'_id' ? $table_primary.'_id' : null,",
          "459:                             'relatedPivotKey' => $table_relation.'_id' ? $table_relation.'_id' : null,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "500:                     $table_manytomany = $data_row->field;",
          "501:                     $table_relation = $data_row->relation['destination_table'];",
          "502:                     $table_primary = $data_type['name'];",
          "505:                     $data_manytomany = $data[$table_manytomany];",
          "507:                     $data_table_manytomany = DB::table($table_manytomany)->where($table_primary_id, $id)->get();",
          "508:                     foreach ($data_table_manytomany as $key => $value_table_manytomany) {",
          "510:                             DB::table($table_manytomany)",
          "511:                                 ->where($table_primary_id, $id)",
          "512:                                 ->where($table_relation_id, $value_table_manytomany->{$table_relation_id})",
          "",
          "[Removed Lines]",
          "503:                     $table_primary_id = $table_primary . '_id';",
          "504:                     $table_relation_id = $table_relation . '_id';",
          "509:                         if (!in_array($value_table_manytomany->{$table_relation_id}, $data_manytomany)) {",
          "",
          "[Added Lines]",
          "503:                     $table_primary_id = $table_primary.'_id';",
          "504:                     $table_relation_id = $table_relation.'_id';",
          "509:                         if (! in_array($value_table_manytomany->{$table_relation_id}, $data_manytomany)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "555:                         $files = explode(',', $model->{$data_row->field});",
          "556:                         foreach ($files as $file) {",
          "557:                             if (is_array($value)) {",
          "559:                                     $this->handleDeleteFile($file);",
          "560:                                 }",
          "561:                             } else {",
          "",
          "[Removed Lines]",
          "558:                                 if (!in_array($file, $value)) {",
          "",
          "[Added Lines]",
          "558:                                 if (! in_array($file, $value)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "586:         if ($data_type->model_name) {",
          "587:             $model = app($data_type->model_name);",
          "588:             $model = $model::find($id);",
          "590:                 foreach ($data_rows as $data_row) {",
          "591:                     if (in_array($data_row->type, [",
          "592:                         'upload_image',",
          "",
          "[Removed Lines]",
          "589:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "589:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "614:             }",
          "615:         } else {",
          "616:             $model = DB::table($data_type->name)->where('id', $id)->first();",
          "618:                 foreach ($data_rows as $data_row) {",
          "619:                     if (in_array($data_row->type, [",
          "620:                         'upload_image',",
          "",
          "[Removed Lines]",
          "617:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "617:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "653:         if ($data_type->model_name) {",
          "654:             $model = app($data_type->model_name);",
          "655:             $model = $model::find($id);",
          "657:                 foreach ($data_rows as $data_row) {",
          "658:                     if (in_array($data_row->type, [",
          "659:                         'upload_image',",
          "",
          "[Removed Lines]",
          "656:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "656:             if (! is_null($model)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "673:             }",
          "674:         } else {",
          "675:             $model = DB::table($data_type->name)->where('id', $id)->first();",
          "677:                 foreach ($data_rows as $data_row) {",
          "678:                     if (in_array($data_row->type, [",
          "679:                         'upload_image',",
          "",
          "[Removed Lines]",
          "676:             if (!is_null($model)) {",
          "",
          "[Added Lines]",
          "676:             if (! is_null($model)) {",
          "",
          "---------------"
        ],
        "src/Helpers/GetData.php||src/Helpers/GetData.php": [
          "File: src/Helpers/GetData.php -> src/Helpers/GetData.php"
        ],
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:         $table_names = [];",
          "246:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "247:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "249:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "250:                     $table->id();",
          "",
          "[Removed Lines]",
          "248:             if (!Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "248:             if (! Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "438:                 }",
          "439:                 PHP;",
          "440:                 $model_path = app_path(\"Models/$model_file_name\");",
          "442:                     file_put_contents($model_path, $model_body);",
          "443:                 }",
          "",
          "[Removed Lines]",
          "441:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "441:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "459:             $controller_data = [];",
          "460:             if (rand(0, 1)) {",
          "463:                 $controller_file_name = \"{$controller_name}.php\";",
          "464:                 $controller_body = <<<PHP",
          "465:                 <?php",
          "",
          "[Removed Lines]",
          "462:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "462:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "468:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "469:                 PHP;",
          "470:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "472:                     file_put_contents($controller_path, $controller_body);",
          "473:                 }",
          "",
          "[Removed Lines]",
          "471:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "471:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "911:             if ($table['table'] == 'table_relation') {",
          "912:                 for ($i = 0; $i < 2; $i++) {",
          "913:                     $field[$i] = [",
          "916:                         'fieldType' => 'bigint',",
          "917:                         'fieldLength' => null,",
          "918:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "914:                         'id' => $name_table[$i] . '_id',",
          "915:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "[Added Lines]",
          "914:                         'id' => $name_table[$i].'_id',",
          "915:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "925:                     array_push($table['rows'], $field[$i]);",
          "926:                 }",
          "927:                 $table['relations'] = [",
          "930:                         'target_table' => $name_table[1],",
          "931:                         'target_field' => 'id',",
          "932:                         'on_delete' => 'cascade',",
          "933:                         'on_update' => 'restrict',",
          "934:                     ],",
          "937:                         'target_table' => $name_table[0],",
          "938:                         'target_field' => 'id',",
          "939:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "928:                     $name_table[1] . '_id' => [",
          "929:                         'source_field' => $name_table[1] . '_id',",
          "935:                     $name_table[0] . '_id' => [",
          "936:                         'source_field' => $name_table[0] . '_id',",
          "",
          "[Added Lines]",
          "928:                     $name_table[1].'_id' => [",
          "929:                         'source_field' => $name_table[1].'_id',",
          "935:                     $name_table[0].'_id' => [",
          "936:                         'source_field' => $name_table[0].'_id',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "947:         foreach ($name_table as $key => $crud_table) {",
          "948:             $crud_table = [",
          "949:                 'name' => $crud_table,",
          "951:                 'displayNameSingular' => $crud_table,",
          "952:                 'displayNamePlural' => $crud_table,",
          "953:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "950:                 'slug' => 'table-' . $key + 1,",
          "",
          "[Added Lines]",
          "950:                 'slug' => 'table-'.$key + 1,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1074:         foreach ($name_table as $key => $table) {",
          "1075:             if ($table == 'table-2') {",
          "1076:                 for ($i = 1; $i < 4; $i++) {",
          "1078:                         'data' => [",
          "1080:                         ],",
          "1081:                     ]);",
          "1082:                 }",
          "1083:             } else {",
          "1085:                 $response->assertSuccessful();",
          "1086:             }",
          "1087:         }",
          "1091:         $response->assertSuccessful();",
          "1092:         $data_browse = $response['data']['data'][0];",
          "1096:             'data' => [",
          "1097:                 'id' => $data_browse['id'],",
          "1098:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1077:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1079:                             'name' => 'option ' . $i,",
          "1084:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1090:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1095:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "[Added Lines]",
          "1077:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1079:                             'name' => 'option '.$i,",
          "1084:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1090:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1095:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1102:         $response->assertSuccessful();",
          "1106:             'slug' => $table,",
          "1107:             'data' => [",
          "1108:                 [",
          "",
          "[Removed Lines]",
          "1105:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "[Added Lines]",
          "1105:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1468:                 }",
          "1469:                 PHP;",
          "1470:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1472:                     file_put_contents($model_path, $model_body);",
          "1473:                 }",
          "",
          "[Removed Lines]",
          "1471:                 if (!file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1471:                 if (! file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1489:             $controller_data = [];",
          "1490:             if (rand(0, 1)) {",
          "1493:                 $controller_file_name = \"{$controller_name}.php\";",
          "1494:                 $controller_body = <<<PHP",
          "1495:                 <?php",
          "",
          "[Removed Lines]",
          "1492:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "[Added Lines]",
          "1492:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1498:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1499:                 PHP;",
          "1500:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1502:                     file_put_contents($controller_path, $controller_body);",
          "1503:                 }",
          "",
          "[Removed Lines]",
          "1501:                 if (!file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1501:                 if (! file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1518:             $request_body = [",
          "1519:                 'name' =>  $table_name,",
          "1520:                 'slug' =>  $table_name,",
          "1523:                 'icon' =>  'add',",
          "1524:                 'modelName' =>  $model,",
          "1525:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "1521:                 'displayNameSingular' =>  $table_label . '(update)',",
          "1522:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "[Added Lines]",
          "1521:                 'displayNameSingular' =>  $table_label.'(update)',",
          "1522:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1605:             $controller_name = \"{$name}Controller.php\";",
          "1607:             if (file_exists($controller_path)) {",
          "1608:                 unlink($controller_path);",
          "1609:             }",
          "1612:             $model_name = \"{$name}.php\";",
          "1614:             if (file_exists($model_path)) {",
          "1615:                 unlink($model_path);",
          "1616:             }",
          "",
          "[Removed Lines]",
          "1606:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "1613:             $model_path = app_path('Models/' . $model_name);",
          "",
          "[Added Lines]",
          "1606:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "1613:             $model_path = app_path('Models/'.$model_name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4f6f51e5db51740527a3d57ba5c8ab40d3fa2900",
      "candidate_info": {
        "commit_hash": "4f6f51e5db51740527a3d57ba5c8ab40d3fa2900",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/4f6f51e5db51740527a3d57ba5c8ab40d3fa2900",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "commit",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:                     'schema_type' => 'text',",
          "255:                     'details' => json_encode((object) []),",
          "256:                     'example' => 'text',",
          "258:                 ],",
          "259:                 [",
          "260:                     'badaso_type' => 'email',",
          "261:                     'schema_type' => 'string',",
          "262:                     'details' => json_encode((object) []),",
          "263:                     'example' => 'email@example.com',",
          "265:                 ],",
          "266:                 [",
          "267:                     'badaso_type' => 'password',",
          "268:                     'schema_type' => 'string',",
          "269:                     'details' => json_encode((object) []),",
          "270:                     'example' => 'password',",
          "272:                 ],",
          "273:                 [",
          "274:                     'badaso_type' => 'textarea',",
          "275:                     'schema_type' => 'text',",
          "276:                     'details' => json_encode((object) []),",
          "277:                     'example' => 'textarea',",
          "279:                 ],",
          "280:                 [",
          "281:                     'badaso_type' => 'checkbox',",
          "",
          "[Removed Lines]",
          "257:                     'example_update' => 'text.update',",
          "264:                     'example_update' => 'update.email@example.com',",
          "271:                     'example_update' => 'password.update',",
          "278:                     'example_update' => 'textarea.update',",
          "",
          "[Added Lines]",
          "257:                     'example_update' => '',",
          "264:                     'example_update' => '',",
          "271:                     'example_update' => '',",
          "278:                     'example_update' => '',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:                         ],",
          "288:                     ]),",
          "289:                     'example' => ['example_1'],",
          "291:                 ],",
          "292:                 [",
          "293:                     'badaso_type' => 'search',",
          "294:                     'schema_type' => 'string',",
          "295:                     'details' => json_encode((object) []),",
          "296:                     'example' => 'search',",
          "298:                 ],",
          "299:                 [",
          "300:                     'badaso_type' => 'number',",
          "301:                     'schema_type' => 'integer',",
          "302:                     'details' => json_encode((object) []),",
          "303:                     'example' => 1,",
          "305:                 ],",
          "306:                 [",
          "307:                     'badaso_type' => 'url',",
          "308:                     'schema_type' => 'string',",
          "309:                     'details' => json_encode((object) []),",
          "310:                     'example' => 'https://badaso-docs.uatech.co.id',",
          "333:                 ],",
          "334:                 [",
          "335:                     'badaso_type' => 'select',",
          "",
          "[Removed Lines]",
          "290:                     'example_update' => ['example_2'],",
          "297:                     'example_update' => 'search.update',",
          "304:                     'example_update' => null,",
          "311:                     'example_update' => 'https://badaso.uatech.co.id',",
          "312:                 ],",
          "313:                 [",
          "314:                     'badaso_type' => 'time',",
          "315:                     'schema_type' => 'time',",
          "316:                     'details' => json_encode((object) []),",
          "317:                     'example' => '2022-01-27T04:37:18.327Z',",
          "318:                     'example_update' => '2023-01-27T04:37:18.327Z',",
          "319:                 ],",
          "320:                 [",
          "321:                     'badaso_type' => 'date',",
          "322:                     'schema_type' => 'string',",
          "323:                     'details' => json_encode((object) []),",
          "324:                     'example' => '2022-01-27T04:37:18.327Z',",
          "325:                     'example_update' => '2023-01-27T04:37:18.327Z',",
          "326:                 ],",
          "327:                 [",
          "328:                     'badaso_type' => 'datetime',",
          "329:                     'schema_type' => 'datetime',",
          "330:                     'details' => json_encode((object) []),",
          "331:                     'example' => '2022-01-27T04:37:18.327Z',",
          "332:                     'example_update' => '2023-01-27T04:37:18.327Z',",
          "",
          "[Added Lines]",
          "290:                     'example_update' => [],",
          "297:                     'example_update' => '',",
          "304:                     'example_update' => NULL,",
          "311:                     'example_update' => '',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "340:                             ['label' => 'example_2', 'value' => 'example_2'],",
          "341:                         ],",
          "342:                     ]),",
          "344:                     'example_update' => 'example_2',",
          "345:                 ],",
          "372:                 [",
          "373:                     'badaso_type' => 'editor',",
          "374:                     'schema_type' => 'text',",
          "375:                     'details' => json_encode((object) []),",
          "376:                     'example' => 'editor',",
          "385:                 ],",
          "386:                 [",
          "387:                     'badaso_type' => 'code',",
          "388:                     'schema_type' => 'string',",
          "389:                     'details' => json_encode((object) []),",
          "390:                     'example' => 'code',",
          "392:                 ],",
          "393:                 [",
          "394:                     'badaso_type' => 'hidden',",
          "395:                     'schema_type' => 'string',",
          "396:                     'details' => json_encode((object) []),",
          "397:                     'example' => 'hidden',",
          "399:                 ],",
          "400:                 [",
          "401:                     'badaso_type' => 'relation',",
          "",
          "[Removed Lines]",
          "343:                     'example' => 'example_1',",
          "346:                 [",
          "347:                     'badaso_type' => 'radio',",
          "348:                     'schema_type' => 'string',",
          "349:                     'details' => json_encode([",
          "350:                         'items' => [",
          "351:                             ['label' => 'example_1', 'value' => 'example_1'],",
          "352:                             ['label' => 'example_2', 'value' => 'example_2'],",
          "353:                         ],",
          "354:                     ]),",
          "355:                     'example' => 'example_1',",
          "356:                     'example_update' => 'example_2',",
          "357:                 ],",
          "358:                 [",
          "359:                     'badaso_type' => 'switch',",
          "360:                     'schema_type' => 'string',",
          "361:                     'details' => json_encode((object) []),",
          "362:                     'example' => rand(0, 1),",
          "363:                     'example_update' => rand(0, 1),",
          "364:                 ],",
          "365:                 [",
          "366:                     'badaso_type' => 'slider',",
          "367:                     'schema_type' => 'string',",
          "368:                     'details' => json_encode((object) []),",
          "369:                     'example' => rand(1, 50),",
          "370:                     'example_update' => rand(50, 100),",
          "371:                 ],",
          "377:                     'example_update' => 'editor.update',",
          "378:                 ],",
          "379:                 [",
          "380:                     'badaso_type' => 'tags',",
          "381:                     'schema_type' => 'string',",
          "382:                     'details' => json_encode((object) []),",
          "383:                     'example' => join(',', ['badaso', 'test', 'crud', 'management']),",
          "384:                     'example_update' => join(',', ['badaso', 'test', 'crud', 'management', 'update']),",
          "391:                     'example_update' => 'code.update',",
          "398:                     'example_update' => 'hidden.update',",
          "",
          "[Added Lines]",
          "322:                     'example' => '',",
          "330:                     'example_update' => '',",
          "337:                     'example_update' => '',",
          "344:                     'example_update' => '',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "408:                     'schema_type' => 'string',",
          "409:                     'details' => json_encode((object) []),",
          "410:                     'example' => '#000000',",
          "412:                 ],",
          "413:                 [",
          "414:                     'badaso_type' => 'upload_image',",
          "415:                     'schema_type' => 'string',",
          "416:                     'details' => json_encode((object) []),",
          "417:                     'example' => 'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "419:                 ],",
          "420:                 [",
          "421:                     'badaso_type' => 'select_multiple',",
          "",
          "[Removed Lines]",
          "411:                     'example_update' => '#FFFFFF',",
          "418:                     'example_update' => 'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "",
          "[Added Lines]",
          "357:                     'example_update' => '',",
          "364:                     'example_update' => '',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "427:                             ['label' => 'example_3', 'value' => 'example_3'],",
          "428:                         ],",
          "429:                     ]),",
          "434:                     'example_update' => [",
          "435:                         'example_2',",
          "436:                         'example_3',",
          "",
          "[Removed Lines]",
          "430:                     'example' => [",
          "431:                         'example_1',",
          "432:                         'example_2',",
          "433:                     ],",
          "",
          "[Added Lines]",
          "376:                     'example' => [],",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "440:                     'badaso_type' => 'upload_file',",
          "441:                     'schema_type' => 'string',",
          "442:                     'details' => json_encode((object) []),",
          "444:                     'example_update' => 'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "445:                 ],",
          "446:                 [",
          "",
          "[Removed Lines]",
          "443:                     'example' => 'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png',",
          "",
          "[Added Lines]",
          "386:                     'example' => '',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "448:                     'schema_type' => 'string',",
          "449:                     'details' => json_encode((object) []),",
          "450:                     'example' => \"['https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png','https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png']\",",
          "455:                 ],",
          "456:                 [",
          "457:                     'badaso_type' => 'upload_file_multiple',",
          "458:                     'schema_type' => 'string',",
          "459:                     'details' => json_encode((object) []),",
          "460:                     'example' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\']\",",
          "462:                 ],",
          "463:             ];",
          "464:     }",
          "",
          "[Removed Lines]",
          "451:                     'example_update' => [",
          "452:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "453:                         'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png',",
          "454:                     ],",
          "461:                     'example_update' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619581504968_uasoft.png\\']\",",
          "",
          "[Added Lines]",
          "394:                     'example_update' => [],",
          "401:                     'example_update' => \"[]\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "468:         $table_names = [];",
          "469:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "470:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "472:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "473:                     $table->id();",
          "",
          "[Removed Lines]",
          "471:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "411:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "499:         $table_names = [];",
          "500:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "501:             $table_name = \"{$this->TABLE_TEST_EMPTY_VALUE_PREFIX}{$index}\";",
          "503:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "504:                     $table->id();",
          "",
          "[Removed Lines]",
          "502:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "442:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "699:                 }",
          "700:                 PHP;",
          "701:                 $model_path = app_path(\"Models/$model_file_name\");",
          "703:                     file_put_contents($model_path, $model_body);",
          "704:                 }",
          "",
          "[Removed Lines]",
          "702:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "642:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "720:             $controller_data = [];",
          "721:             if (rand(0, 1)) {",
          "724:                 $controller_file_name = \"{$controller_name}.php\";",
          "725:                 $controller_body = <<<PHP",
          "726:                 <?php",
          "",
          "[Removed Lines]",
          "723:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "729:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "730:                 PHP;",
          "731:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "733:                     file_put_contents($controller_path, $controller_body);",
          "734:                 }",
          "",
          "[Removed Lines]",
          "732:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "672:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1172:             if ($table['table'] == 'table_relation') {",
          "1173:                 for ($i = 0; $i < 2; $i++) {",
          "1174:                     $field[$i] = [",
          "1177:                         'fieldType' => 'bigint',",
          "1178:                         'fieldLength' => null,",
          "1179:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1175:                         'id' => $name_table[$i].'_id',",
          "1176:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "[Added Lines]",
          "1115:                         'id' => $name_table[$i] . '_id',",
          "1116:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1186:                     array_push($table['rows'], $field[$i]);",
          "1187:                 }",
          "1188:                 $table['relations'] = [",
          "1191:                         'target_table' => $name_table[1],",
          "1192:                         'target_field' => 'id',",
          "1193:                         'on_delete' => 'cascade',",
          "1194:                         'on_update' => 'restrict',",
          "1195:                     ],",
          "1198:                         'target_table' => $name_table[0],",
          "1199:                         'target_field' => 'id',",
          "1200:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1189:                     $name_table[1].'_id' => [",
          "1190:                         'source_field' => $name_table[1].'_id',",
          "1196:                     $name_table[0].'_id' => [",
          "1197:                         'source_field' => $name_table[0].'_id',",
          "",
          "[Added Lines]",
          "1129:                     $name_table[1] . '_id' => [",
          "1130:                         'source_field' => $name_table[1] . '_id',",
          "1136:                     $name_table[0] . '_id' => [",
          "1137:                         'source_field' => $name_table[0] . '_id',",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1208:         foreach ($name_table as $key => $crud_table) {",
          "1209:             $crud_table = [",
          "1210:                 'name' => $crud_table,",
          "1212:                 'displayNameSingular' => $crud_table,",
          "1213:                 'displayNamePlural' => $crud_table,",
          "1214:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1211:                 'slug' => 'table-'.$key + 1,",
          "",
          "[Added Lines]",
          "1151:                 'slug' => 'table-' . $key + 1,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1335:         foreach ($name_table as $key => $table) {",
          "1336:             if ($table == 'table-2') {",
          "1337:                 for ($i = 1; $i < 4; $i++) {",
          "1339:                         'data' => [",
          "1341:                         ],",
          "1342:                     ]);",
          "1343:                 }",
          "1344:             } else {",
          "1346:                 $response->assertSuccessful();",
          "1347:             }",
          "1348:         }",
          "1352:         $response->assertSuccessful();",
          "1353:         $data_browse = $response['data']['data'][0];",
          "1357:             'data' => [",
          "1358:                 'id' => $data_browse['id'],",
          "1359:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1338:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1340:                             'name' => 'option '.$i,",
          "1345:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1351:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1356:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "[Added Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1280:                             'name' => 'option ' . $i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1363:         $response->assertSuccessful();",
          "1367:             'slug' => $table,",
          "1368:             'data' => [",
          "1369:                 [",
          "",
          "[Removed Lines]",
          "1366:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "[Added Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1713:                 }",
          "1714:                 PHP;",
          "1715:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1717:                     file_put_contents($model_path, $model_body);",
          "1718:                 }",
          "",
          "[Removed Lines]",
          "1716:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1656:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1734:             $controller_data = [];",
          "1735:             if (rand(0, 1)) {",
          "1738:                 $controller_file_name = \"{$controller_name}.php\";",
          "1739:                 $controller_body = <<<PHP",
          "1740:                 <?php",
          "",
          "[Removed Lines]",
          "1737:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1743:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1744:                 PHP;",
          "1745:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1747:                     file_put_contents($controller_path, $controller_body);",
          "1748:                 }",
          "",
          "[Removed Lines]",
          "1746:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1686:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1810:         CallHelperTest::setCache($this->KEY_DATA_RESPONSE_READ_EMPTY_TABLE_ENTITY, $response_read_table_entities);",
          "1876:     }",
          "1878:     public function testReadDataEntityCrudManagement()",
          "",
          "[Removed Lines]",
          "1813:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_EMPTY_TABLES);",
          "1814:         $first_table = $tables[0];",
          "1816:         $response_read_table_entities = CallHelperTest::getCache($this->KEY_DATA_RESPONSE_READ_EMPTY_TABLE_ENTITY);",
          "1817:         $fields = [];",
          "1818:         foreach ($this->getEmptyValueFields() as $key => $value) {",
          "1819:             $fields[$value['badaso_type']] = $value;",
          "1820:         }",
          "1822:         $data_add_entities = [];",
          "1823:         foreach ($response_read_table_entities as $table => $entities) {",
          "1824:             $entities = collect($entities)->filter(function ($entity) {",
          "1825:                 return $entity['add'];",
          "1826:             })->values();",
          "1828:             $data_add_entities[$table] = [];",
          "1829:             for ($index = 1; $index <= $this->MAXIMAL_CREATE_ENTITY; $index++) {",
          "1831:                 $data = [];",
          "1832:                 foreach ($entities as $key => $entity) {",
          "1833:                     $field = $entity['field'];",
          "1834:                     if (array_key_exists($field, $fields)) {",
          "1835:                         if ($field == 'relation') {",
          "1836:                             $relation_value = DB::table($first_table)->insertGetId([]);",
          "1837:                             $data[$field] = $relation_value;",
          "1838:                         } else {",
          "1839:                             $data[$field] = $fields[$field]['example'];",
          "1840:                         }",
          "1841:                     }",
          "1842:                 }",
          "1843:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/add\"), [",
          "1844:                     'data' => $data,",
          "1845:                 ]);",
          "1847:                 $response->assertSuccessful();",
          "1850:                 $id = $response->json('data.id');",
          "1851:                 $data = ['id' => $id];",
          "1852:                 foreach ($entities as $key => $entity) {",
          "1853:                     $field = $entity['field'];",
          "1854:                     if (array_key_exists($field, $fields)) {",
          "1855:                         if ($field == 'relation') {",
          "1856:                             $relation_value = DB::table($first_table)->insertGetId([]);",
          "1857:                             $data[$field] = $relation_value;",
          "1858:                         } else {",
          "1859:                             $data[$field] = $fields[$field]['example_update'];",
          "1860:                         }",
          "1861:                     }",
          "1862:                 }",
          "1863:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix(\"/entities/{$table}/edit\"), [",
          "1864:                     'data' => $data,",
          "1865:                 ]);",
          "1866:                 $response->assertSuccessful();",
          "1868:                 $data_add_entities[$table][] = $response->json('data');",
          "1869:             }",
          "1870:         }",
          "1872:         CallHelperTest::setCache(",
          "1873:             $this->KEY_EMPTY_DATA_ADD_ENTITY,",
          "1874:             $data_add_entities",
          "1875:         );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2023:                 }",
          "2024:                 PHP;",
          "2025:                 $model_path = app_path(\"Models/$model_file_name\");",
          "2027:                     file_put_contents($model_path, $model_body);",
          "2028:                 }",
          "",
          "[Removed Lines]",
          "2026:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1966:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2044:             $controller_data = [];",
          "2045:             if (rand(0, 1)) {",
          "2048:                 $controller_file_name = \"{$controller_name}.php\";",
          "2049:                 $controller_body = <<<PHP",
          "2050:                 <?php",
          "",
          "[Removed Lines]",
          "2047:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1987:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2053:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "2054:                 PHP;",
          "2055:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "2057:                     file_put_contents($controller_path, $controller_body);",
          "2058:                 }",
          "",
          "[Removed Lines]",
          "2056:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1996:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2073:             $request_body = [",
          "2074:                 'name' =>  $table_name,",
          "2075:                 'slug' =>  $table_name,",
          "2078:                 'icon' =>  'add',",
          "2079:                 'modelName' =>  $model,",
          "2080:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "2076:                 'displayNameSingular' =>  $table_label.'(update)',",
          "2077:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "[Added Lines]",
          "2016:                 'displayNameSingular' =>  $table_label . '(update)',",
          "2017:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2160:             $controller_name = \"{$name}Controller.php\";",
          "2162:             if (file_exists($controller_path)) {",
          "2163:                 unlink($controller_path);",
          "2164:             }",
          "2167:             $model_name = \"{$name}.php\";",
          "2169:             if (file_exists($model_path)) {",
          "2170:                 unlink($model_path);",
          "2171:             }",
          "",
          "[Removed Lines]",
          "2161:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "2168:             $model_path = app_path('Models/'.$model_name);",
          "",
          "[Added Lines]",
          "2101:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "2108:             $model_path = app_path('Models/' . $model_name);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cda09dc9ab3b1b7ade8ac897e34c5acad3d7038",
      "candidate_info": {
        "commit_hash": "0cda09dc9ab3b1b7ade8ac897e34c5acad3d7038",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/0cda09dc9ab3b1b7ade8ac897e34c5acad3d7038",
        "files": [
          "src/Commands/BadasoSetup.php",
          "src/Controllers/BadasoMenuController.php",
          "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "src/Models/Menu.php",
          "src/Routes/api.php",
          "src/Seeder/Configurations/FixedMenuItemSeeder.php",
          "src/Seeder/Configurations/MenusSeeder.php"
        ],
        "message": "Apply fixes from StyleCI",
        "before_after_code_files": [
          "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php",
          "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php",
          "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php||src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "src/Models/Menu.php||src/Models/Menu.php",
          "src/Routes/api.php||src/Routes/api.php",
          "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php",
          "src/Seeder/Configurations/MenusSeeder.php||src/Seeder/Configurations/MenusSeeder.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Commands/BadasoSetup.php||src/Commands/BadasoSetup.php": [
          "File: src/Commands/BadasoSetup.php -> src/Commands/BadasoSetup.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     protected function checkExist($file, $search)",
          "134:     {",
          "136:     }",
          "138:     protected function updateWebpackMix()",
          "",
          "[Removed Lines]",
          "135:         return $this->file->exists($file) && !Str::contains($this->file->get($file), $search);",
          "",
          "[Added Lines]",
          "135:         return $this->file->exists($file) && ! Str::contains($this->file->get($file), $search);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:             $this->info('Adding badaso env');",
          "326:         } catch (\\Exception $e) {",
          "328:         }",
          "329:     }",
          "",
          "[Removed Lines]",
          "327:             $this->error('Failed adding badaso env ' . $e->getMessage());",
          "",
          "[Added Lines]",
          "327:             $this->error('Failed adding badaso env '.$e->getMessage());",
          "",
          "---------------"
        ],
        "src/Controllers/BadasoMenuController.php||src/Controllers/BadasoMenuController.php": [
          "File: src/Controllers/BadasoMenuController.php -> src/Controllers/BadasoMenuController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:                 foreach ($request->order as $index => $menu_id) {",
          "39:                     Menu::find($menu_id)->update([",
          "41:                     ]);",
          "42:                 }",
          "44:                 $request->validate([",
          "45:                     'menu_id' => ['required', 'integer'],",
          "46:                 ]);",
          "48:                 $menu = Menu::find($request->menu_id);",
          "50:                 $menu->save();",
          "52:                 $request->validate([",
          "53:                     'menu_id' => ['required', 'integer'],",
          "54:                 ]);",
          "56:                 $menu = Menu::find($request->menu_id);",
          "58:                 $menu->save();",
          "59:             }",
          "",
          "[Removed Lines]",
          "40:                         'order' => $index + 1",
          "43:             } else if (isset($request->is_expand)) {",
          "49:                 $menu->is_expand = !$menu->is_expand;",
          "51:             } else if (isset($request->is_show_header)) {",
          "57:                 $menu->is_show_header = !$menu->is_show_header;",
          "",
          "[Added Lines]",
          "40:                         'order' => $index + 1,",
          "43:             } elseif (isset($request->is_expand)) {",
          "49:                 $menu->is_expand = ! $menu->is_expand;",
          "51:             } elseif (isset($request->is_show_header)) {",
          "57:                 $menu->is_show_header = ! $menu->is_show_header;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:             $menu_items = MenuItem::where('menu_id', $request->menu_id)",
          "76:                 ->orderBy('order', 'asc')",
          "78:                 ->get();",
          "80:             $menu_items = $this->getChildMenuItems($menu_items);",
          "",
          "[Removed Lines]",
          "77:                 ->whereNull($prefix . 'menu_items.parent_id')",
          "",
          "[Added Lines]",
          "77:                 ->whereNull($prefix.'menu_items.parent_id')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:             $prefix = config('badaso.database.prefix');",
          "131:             $menu = Menu::where('key', $request->menu_key)->first();",
          "138:                 ->get();",
          "139:             $menu_items = [];",
          "140:             foreach ($all_menu_items as $menu_item) {",
          "",
          "[Removed Lines]",
          "133:             $all_menu_items = MenuItem::join($prefix . 'menus', $prefix . 'menus.id', $prefix . 'menu_items.menu_id')",
          "134:                 ->where($prefix . 'menus.key', $request->menu_key)",
          "135:                 ->whereNull($prefix . 'menu_items.parent_id')",
          "136:                 ->select($prefix . 'menu_items.*')",
          "137:                 ->orderBy($prefix . 'menu_items.order', 'asc')",
          "",
          "[Added Lines]",
          "133:             $all_menu_items = MenuItem::join($prefix.'menus', $prefix.'menus.id', $prefix.'menu_items.menu_id')",
          "134:                 ->where($prefix.'menus.key', $request->menu_key)",
          "135:                 ->whereNull($prefix.'menu_items.parent_id')",
          "136:                 ->select($prefix.'menu_items.*')",
          "137:                 ->orderBy($prefix.'menu_items.order', 'asc')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "166:                 foreach ($menu_keys as $key => $menu_key) {",
          "167:                     $menu = Menu::where('key', $menu_key)->first();",
          "174:                         ->get();",
          "175:                     $menu_items = [];",
          "176:                     foreach ($all_menu_items as $menu_item) {",
          "",
          "[Removed Lines]",
          "169:                     $all_menu_items = MenuItem::join($prefix . 'menus', $prefix . 'menus.id', $prefix . 'menu_items.menu_id')",
          "170:                         ->where($prefix . 'menus.key', $menu_key)",
          "171:                         ->whereNull($prefix . 'menu_items.parent_id')",
          "172:                         ->select($prefix . 'menu_items.*')",
          "173:                         ->orderBy($prefix . 'menu_items.order', 'asc')",
          "",
          "[Added Lines]",
          "169:                     $all_menu_items = MenuItem::join($prefix.'menus', $prefix.'menus.id', $prefix.'menu_items.menu_id')",
          "170:                         ->where($prefix.'menus.key', $menu_key)",
          "171:                         ->whereNull($prefix.'menu_items.parent_id')",
          "172:                         ->select($prefix.'menu_items.*')",
          "173:                         ->orderBy($prefix.'menu_items.order', 'asc')",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "187:                 $data = collect($data)->toArray();",
          "188:             } else {",
          "190:                     ->get();",
          "191:                 $menus = Menu::orderBy('order')->get();",
          "193:                 $data = [];",
          "194:                 foreach ($menus as $index => $menu) {",
          "196:                         ->where('menu_id', $menu->id)->map(function ($item) use ($all_menu_items) {",
          "197:                             $children = array_values($all_menu_items->where('parent_id', $item->id)->toArray());",
          "",
          "[Removed Lines]",
          "189:                 $all_menu_items = MenuItem::orderBy($prefix . 'menu_items.order', 'asc')",
          "195:                     $menu_items = $all_menu_items->whereNull($prefix . 'menu_items.parent_id')",
          "",
          "[Added Lines]",
          "189:                 $all_menu_items = MenuItem::orderBy($prefix.'menu_items.order', 'asc')",
          "195:                     $menu_items = $all_menu_items->whereNull($prefix.'menu_items.parent_id')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "279:             $url = $request->get('url');",
          "280:             if (filter_var($url, FILTER_VALIDATE_URL) === false) {",
          "282:             }",
          "284:             $new_menu_item = new MenuItem();",
          "",
          "[Removed Lines]",
          "281:                 $url = substr($request->get('url'), 0, 1) != '/' ? '/' . $request->get('url') : $request->get('url');",
          "",
          "[Added Lines]",
          "281:                 $url = substr($request->get('url'), 0, 1) != '/' ? '/'.$request->get('url') : $request->get('url');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "345:             $url = $request->get('url');",
          "346:             if (filter_var($url, FILTER_VALIDATE_URL) === false) {",
          "348:             }",
          "350:             $menu_item = MenuItem::find($request->menu_item_id);",
          "",
          "[Removed Lines]",
          "347:                 $url = substr($request->get('url'), 0, 1) != '/' ? '/' . $request->get('url') : $request->get('url');",
          "",
          "[Added Lines]",
          "347:                 $url = substr($request->get('url'), 0, 1) != '/' ? '/'.$request->get('url') : $request->get('url');",
          "",
          "---------------"
        ],
        "src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php||src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php": [
          "File: src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php -> src/Migrations/2021_10_21_054710_add_is_show_header_and_expand_in_menus_table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     public function up()",
          "15:     {",
          "16:         Schema::table('badaso_menus', function (Blueprint $table) {",
          "18:                 $table->boolean('is_show_header')->default(true)->after('icon');",
          "19:             }",
          "21:                 $table->boolean('is_expand')->default(true)->after('icon');",
          "22:             }",
          "24:                 $table->boolean('order')->nullable()->after('icon');",
          "25:             }",
          "26:         });",
          "",
          "[Removed Lines]",
          "17:             if (!Schema::hasColumn('badaso_menus', 'is_show_header')) {",
          "20:             if (!Schema::hasColumn('badaso_menus', 'is_expand')) {",
          "23:             if (!Schema::hasColumn('badaso_menus', 'order')) {",
          "",
          "[Added Lines]",
          "17:             if (! Schema::hasColumn('badaso_menus', 'is_show_header')) {",
          "20:             if (! Schema::hasColumn('badaso_menus', 'is_expand')) {",
          "23:             if (! Schema::hasColumn('badaso_menus', 'order')) {",
          "",
          "---------------"
        ],
        "src/Models/Menu.php||src/Models/Menu.php": [
          "File: src/Models/Menu.php -> src/Models/Menu.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     public function __construct(array $attributes = [])",
          "20:     {",
          "21:         $prefix = config('badaso.database.prefix');",
          "23:         parent::__construct($attributes);",
          "24:     }",
          "",
          "[Removed Lines]",
          "22:         $this->table = $prefix . 'menus';",
          "",
          "[Added Lines]",
          "22:         $this->table = $prefix.'menus';",
          "",
          "---------------"
        ],
        "src/Routes/api.php||src/Routes/api.php": [
          "File: src/Routes/api.php -> src/Routes/api.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:         });",
          "24:         Route::group(['prefix' => 'activitylogs'], function () {",
          "27:         });",
          "29:         Route::group(['prefix' => 'auth'], function () {",
          "",
          "[Removed Lines]",
          "25:             Route::get('/', 'BadasoActivityLogController@browse')->middleware(BadasoCheckPermissions::class . ':browse_activitylogs');",
          "26:             Route::get('/read', 'BadasoActivityLogController@read')->middleware(BadasoCheckPermissions::class . ':read_activitylogs');",
          "",
          "[Added Lines]",
          "25:             Route::get('/', 'BadasoActivityLogController@browse')->middleware(BadasoCheckPermissions::class.':browse_activitylogs');",
          "26:             Route::get('/read', 'BadasoActivityLogController@read')->middleware(BadasoCheckPermissions::class.':read_activitylogs');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         Route::group(['prefix' => 'file'], function () {",
          "50:             Route::get('/view', 'BadasoFileController@viewFile');",
          "51:             Route::get('/download', 'BadasoFileController@downloadFile');",
          "53:             Route::delete('/delete', 'BadasoFileController@deleteFile');",
          "54:             Route::get('/browse/lfm', 'BadasoFileController@browseFileUsingLfm');",
          "55:             Route::post('/upload/lfm', 'BadasoFileController@uploadFileUsingLfm');",
          "",
          "[Removed Lines]",
          "52:             Route::post('/upload', 'BadasoFileController@uploadFile')->middleware(BadasoCheckPermissions::class . ':upload_file');",
          "",
          "[Added Lines]",
          "52:             Route::post('/upload', 'BadasoFileController@uploadFile')->middleware(BadasoCheckPermissions::class.':upload_file');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:             Route::get('/applyable', 'BadasoConfigurationsController@applyable');",
          "61:             Route::get('/maintenance', 'BadasoConfigurationsController@isMaintenance');",
          "65:             Route::get('/fetch', 'BadasoConfigurationsController@fetch');",
          "66:             Route::get('/fetch-multiple', 'BadasoConfigurationsController@fetchMultiple');",
          "71:         });",
          "73:         Route::group(['prefix' => 'menus'], function () {",
          "90:             Route::get('/item-by-key', 'BadasoMenuController@browseMenuItemByKey');",
          "91:             Route::get('/item-by-keys', 'BadasoMenuController@browseMenuItemByKeys');",
          "",
          "[Removed Lines]",
          "63:             Route::get('/', 'BadasoConfigurationsController@browse')->middleware(BadasoCheckPermissions::class . ':browse_configurations');",
          "64:             Route::get('/read', 'BadasoConfigurationsController@read')->middleware(BadasoCheckPermissions::class . ':read_configurations');",
          "67:             Route::put('/edit', 'BadasoConfigurationsController@edit')->middleware(BadasoCheckPermissions::class . ':edit_configurations');",
          "68:             Route::put('/edit-multiple', 'BadasoConfigurationsController@editMultiple')->middleware(BadasoCheckPermissions::class . ':edit_configurations');",
          "69:             Route::post('/add', 'BadasoConfigurationsController@add')->middleware(BadasoCheckPermissions::class . ':add_configurations');",
          "70:             Route::delete('/delete', 'BadasoConfigurationsController@delete')->middleware(BadasoCheckPermissions::class . ':delete_configurations');",
          "74:             Route::get('/', 'BadasoMenuController@browseMenu')->middleware(BadasoCheckPermissions::class . ':browse_menus');",
          "75:             Route::get('/read', 'BadasoMenuController@readMenu')->middleware(BadasoCheckPermissions::class . ':read_menus');",
          "76:             Route::put('/edit', 'BadasoMenuController@editMenu')->middleware(BadasoCheckPermissions::class . ':edit_menus');",
          "77:             Route::post('/add', 'BadasoMenuController@addMenu')->middleware(BadasoCheckPermissions::class . ':add_menus');",
          "78:             Route::delete('/delete', 'BadasoMenuController@deleteMenu')->middleware(BadasoCheckPermissions::class . ':delete_menus');",
          "79:             Route::put('/arrange-items', 'BadasoMenuController@editMenuItemsOrder')->middleware(BadasoCheckPermissions::class . ':edit_menus');",
          "81:             Route::get('/item', 'BadasoMenuController@browseMenuItem')->middleware(BadasoCheckPermissions::class . ':browse_menu_items');",
          "82:             Route::get('/item/read', 'BadasoMenuController@readMenuItem')->middleware(BadasoCheckPermissions::class . ':read_menu_items');",
          "83:             Route::put('/item/edit', 'BadasoMenuController@editMenuItem')->middleware(BadasoCheckPermissions::class . ':edit_menu_items');",
          "84:             Route::put('/item/edit-order', 'BadasoMenuController@editMenuItemOrder')->middleware(BadasoCheckPermissions::class . ':edit_menu_items');",
          "85:             Route::post('/item/add', 'BadasoMenuController@addMenuItem')->middleware(BadasoCheckPermissions::class . ':add_menu_items');",
          "86:             Route::delete('/item/delete', 'BadasoMenuController@deleteMenuItem')->middleware(BadasoCheckPermissions::class . ':delete_menu_items');",
          "87:             Route::get('/item/permissions', 'BadasoMenuController@getMenuItemPermissions')->middleware(BadasoCheckPermissions::class . ':edit_menu_items');",
          "88:             Route::put('/item/permissions', 'BadasoMenuController@setMenuItemPermissions')->middleware(BadasoCheckPermissions::class . ':edit_menu_items');",
          "",
          "[Added Lines]",
          "63:             Route::get('/', 'BadasoConfigurationsController@browse')->middleware(BadasoCheckPermissions::class.':browse_configurations');",
          "64:             Route::get('/read', 'BadasoConfigurationsController@read')->middleware(BadasoCheckPermissions::class.':read_configurations');",
          "67:             Route::put('/edit', 'BadasoConfigurationsController@edit')->middleware(BadasoCheckPermissions::class.':edit_configurations');",
          "68:             Route::put('/edit-multiple', 'BadasoConfigurationsController@editMultiple')->middleware(BadasoCheckPermissions::class.':edit_configurations');",
          "69:             Route::post('/add', 'BadasoConfigurationsController@add')->middleware(BadasoCheckPermissions::class.':add_configurations');",
          "70:             Route::delete('/delete', 'BadasoConfigurationsController@delete')->middleware(BadasoCheckPermissions::class.':delete_configurations');",
          "74:             Route::get('/', 'BadasoMenuController@browseMenu')->middleware(BadasoCheckPermissions::class.':browse_menus');",
          "75:             Route::get('/read', 'BadasoMenuController@readMenu')->middleware(BadasoCheckPermissions::class.':read_menus');",
          "76:             Route::put('/edit', 'BadasoMenuController@editMenu')->middleware(BadasoCheckPermissions::class.':edit_menus');",
          "77:             Route::post('/add', 'BadasoMenuController@addMenu')->middleware(BadasoCheckPermissions::class.':add_menus');",
          "78:             Route::delete('/delete', 'BadasoMenuController@deleteMenu')->middleware(BadasoCheckPermissions::class.':delete_menus');",
          "79:             Route::put('/arrange-items', 'BadasoMenuController@editMenuItemsOrder')->middleware(BadasoCheckPermissions::class.':edit_menus');",
          "81:             Route::get('/item', 'BadasoMenuController@browseMenuItem')->middleware(BadasoCheckPermissions::class.':browse_menu_items');",
          "82:             Route::get('/item/read', 'BadasoMenuController@readMenuItem')->middleware(BadasoCheckPermissions::class.':read_menu_items');",
          "83:             Route::put('/item/edit', 'BadasoMenuController@editMenuItem')->middleware(BadasoCheckPermissions::class.':edit_menu_items');",
          "84:             Route::put('/item/edit-order', 'BadasoMenuController@editMenuItemOrder')->middleware(BadasoCheckPermissions::class.':edit_menu_items');",
          "85:             Route::post('/item/add', 'BadasoMenuController@addMenuItem')->middleware(BadasoCheckPermissions::class.':add_menu_items');",
          "86:             Route::delete('/item/delete', 'BadasoMenuController@deleteMenuItem')->middleware(BadasoCheckPermissions::class.':delete_menu_items');",
          "87:             Route::get('/item/permissions', 'BadasoMenuController@getMenuItemPermissions')->middleware(BadasoCheckPermissions::class.':edit_menu_items');",
          "88:             Route::put('/item/permissions', 'BadasoMenuController@setMenuItemPermissions')->middleware(BadasoCheckPermissions::class.':edit_menu_items');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:         });",
          "96:         Route::group(['prefix' => 'users'], function () {",
          "103:         });",
          "105:         Route::group(['prefix' => 'permissions'], function () {",
          "112:         });",
          "114:         Route::group(['prefix' => 'roles'], function () {",
          "121:         });",
          "123:         Route::group(['prefix' => 'user-roles'], function () {",
          "128:         });",
          "130:         Route::group(['prefix' => 'role-permissions'], function () {",
          "135:         });",
          "137:         Route::group(['prefix' => 'crud'], function () {",
          "145:         });",
          "147:         Route::group(['prefix' => 'table'], function () {",
          "",
          "[Removed Lines]",
          "97:             Route::get('/', 'BadasoUserController@browse')->middleware(BadasoCheckPermissions::class . ':browse_users');",
          "98:             Route::get('/read', 'BadasoUserController@read')->middleware(BadasoCheckPermissions::class . ':read_users');",
          "99:             Route::put('/edit', 'BadasoUserController@edit')->middleware(BadasoCheckPermissions::class . ':edit_users');",
          "100:             Route::post('/add', 'BadasoUserController@add')->middleware(BadasoCheckPermissions::class . ':add_users');",
          "101:             Route::delete('/delete', 'BadasoUserController@delete')->middleware(BadasoCheckPermissions::class . ':delete_users');",
          "102:             Route::delete('/delete-multiple', 'BadasoUserController@deleteMultiple')->middleware(BadasoCheckPermissions::class . ':delete_users');",
          "106:             Route::get('/', 'BadasoPermissionController@browse')->middleware(BadasoCheckPermissions::class . ':browse_permissions');",
          "107:             Route::get('/read', 'BadasoPermissionController@read')->middleware(BadasoCheckPermissions::class . ':read_permissions');",
          "108:             Route::put('/edit', 'BadasoPermissionController@edit')->middleware(BadasoCheckPermissions::class . ':edit_permissions');",
          "109:             Route::post('/add', 'BadasoPermissionController@add')->middleware(BadasoCheckPermissions::class . ':add_permissions');",
          "110:             Route::delete('/delete', 'BadasoPermissionController@delete')->middleware(BadasoCheckPermissions::class . ':delete_permissions');",
          "111:             Route::delete('/delete-multiple', 'BadasoPermissionController@deleteMultiple')->middleware(BadasoCheckPermissions::class . ':delete_permissions');",
          "115:             Route::get('/', 'BadasoRoleController@browse')->middleware(BadasoCheckPermissions::class . ':browse_roles');",
          "116:             Route::get('/read', 'BadasoRoleController@read')->middleware(BadasoCheckPermissions::class . ':read_roles');",
          "117:             Route::put('/edit', 'BadasoRoleController@edit')->middleware(BadasoCheckPermissions::class . ':edit_roles');",
          "118:             Route::post('/add', 'BadasoRoleController@add')->middleware(BadasoCheckPermissions::class . ':add_roles');",
          "119:             Route::delete('/delete', 'BadasoRoleController@delete')->middleware(BadasoCheckPermissions::class . ':delete_roles');",
          "120:             Route::delete('/delete-multiple', 'BadasoRoleController@deleteMultiple')->middleware(BadasoCheckPermissions::class . ':delete_roles');",
          "124:             Route::get('/', 'BadasoUserRoleController@browseByUser')->middleware(BadasoCheckPermissions::class . ':browse_user_role');",
          "125:             Route::get('/all', 'BadasoUserRoleController@browse')->middleware(BadasoCheckPermissions::class . ':browse_user_role');",
          "126:             Route::post('/add-edit', 'BadasoUserRoleController@addOrEdit')->middleware(BadasoCheckPermissions::class . ':add_or_edit_user_role');",
          "127:             Route::get('/all-role', 'BadasoUserRoleController@browseAllRole')->middleware(BadasoCheckPermissions::class . ':browse_user_role');",
          "131:             Route::get('/', 'BadasoRolePermissionController@browseByRole')->middleware(BadasoCheckPermissions::class . ':browse_role_permission');",
          "132:             Route::get('/all', 'BadasoRolePermissionController@browse')->middleware(BadasoCheckPermissions::class . ':browse_role_permission');",
          "133:             Route::post('/add-edit', 'BadasoRolePermissionController@addOrEdit')->middleware(BadasoCheckPermissions::class . ':add_or_edit_role_permission');",
          "134:             Route::get('/all-permission', 'BadasoRolePermissionController@browseAllPermission')->middleware(BadasoCheckPermissions::class . ':browse_role_permission');",
          "138:             Route::get('/', 'BadasoCRUDController@browse')->middleware(BadasoCheckPermissions::class . ':browse_crud_data');",
          "139:             Route::get('/read', 'BadasoCRUDController@read')->middleware(BadasoCheckPermissions::class . ':read_crud_data');",
          "140:             Route::put('/edit', 'BadasoCRUDController@edit')->middleware(BadasoCheckPermissions::class . ':edit_crud_data');",
          "141:             Route::post('/add', 'BadasoCRUDController@add')->middleware(BadasoCheckPermissions::class . ':add_crud_data');",
          "142:             Route::delete('/delete', 'BadasoCRUDController@delete')->middleware(BadasoCheckPermissions::class . ':delete_crud_data');",
          "143:             Route::get('/read-by-slug', 'BadasoCRUDController@readBySlug')->middleware(BadasoCheckPermissions::class . ':read_crud_data');",
          "144:             Route::get('/maintenance', 'BadasoCRUDController@setMaintenanceState')->middleware(BadasoCheckPermissions::class . ':maintenance_crud_data');",
          "",
          "[Added Lines]",
          "97:             Route::get('/', 'BadasoUserController@browse')->middleware(BadasoCheckPermissions::class.':browse_users');",
          "98:             Route::get('/read', 'BadasoUserController@read')->middleware(BadasoCheckPermissions::class.':read_users');",
          "99:             Route::put('/edit', 'BadasoUserController@edit')->middleware(BadasoCheckPermissions::class.':edit_users');",
          "100:             Route::post('/add', 'BadasoUserController@add')->middleware(BadasoCheckPermissions::class.':add_users');",
          "101:             Route::delete('/delete', 'BadasoUserController@delete')->middleware(BadasoCheckPermissions::class.':delete_users');",
          "102:             Route::delete('/delete-multiple', 'BadasoUserController@deleteMultiple')->middleware(BadasoCheckPermissions::class.':delete_users');",
          "106:             Route::get('/', 'BadasoPermissionController@browse')->middleware(BadasoCheckPermissions::class.':browse_permissions');",
          "107:             Route::get('/read', 'BadasoPermissionController@read')->middleware(BadasoCheckPermissions::class.':read_permissions');",
          "108:             Route::put('/edit', 'BadasoPermissionController@edit')->middleware(BadasoCheckPermissions::class.':edit_permissions');",
          "109:             Route::post('/add', 'BadasoPermissionController@add')->middleware(BadasoCheckPermissions::class.':add_permissions');",
          "110:             Route::delete('/delete', 'BadasoPermissionController@delete')->middleware(BadasoCheckPermissions::class.':delete_permissions');",
          "111:             Route::delete('/delete-multiple', 'BadasoPermissionController@deleteMultiple')->middleware(BadasoCheckPermissions::class.':delete_permissions');",
          "115:             Route::get('/', 'BadasoRoleController@browse')->middleware(BadasoCheckPermissions::class.':browse_roles');",
          "116:             Route::get('/read', 'BadasoRoleController@read')->middleware(BadasoCheckPermissions::class.':read_roles');",
          "117:             Route::put('/edit', 'BadasoRoleController@edit')->middleware(BadasoCheckPermissions::class.':edit_roles');",
          "118:             Route::post('/add', 'BadasoRoleController@add')->middleware(BadasoCheckPermissions::class.':add_roles');",
          "119:             Route::delete('/delete', 'BadasoRoleController@delete')->middleware(BadasoCheckPermissions::class.':delete_roles');",
          "120:             Route::delete('/delete-multiple', 'BadasoRoleController@deleteMultiple')->middleware(BadasoCheckPermissions::class.':delete_roles');",
          "124:             Route::get('/', 'BadasoUserRoleController@browseByUser')->middleware(BadasoCheckPermissions::class.':browse_user_role');",
          "125:             Route::get('/all', 'BadasoUserRoleController@browse')->middleware(BadasoCheckPermissions::class.':browse_user_role');",
          "126:             Route::post('/add-edit', 'BadasoUserRoleController@addOrEdit')->middleware(BadasoCheckPermissions::class.':add_or_edit_user_role');",
          "127:             Route::get('/all-role', 'BadasoUserRoleController@browseAllRole')->middleware(BadasoCheckPermissions::class.':browse_user_role');",
          "131:             Route::get('/', 'BadasoRolePermissionController@browseByRole')->middleware(BadasoCheckPermissions::class.':browse_role_permission');",
          "132:             Route::get('/all', 'BadasoRolePermissionController@browse')->middleware(BadasoCheckPermissions::class.':browse_role_permission');",
          "133:             Route::post('/add-edit', 'BadasoRolePermissionController@addOrEdit')->middleware(BadasoCheckPermissions::class.':add_or_edit_role_permission');",
          "134:             Route::get('/all-permission', 'BadasoRolePermissionController@browseAllPermission')->middleware(BadasoCheckPermissions::class.':browse_role_permission');",
          "138:             Route::get('/', 'BadasoCRUDController@browse')->middleware(BadasoCheckPermissions::class.':browse_crud_data');",
          "139:             Route::get('/read', 'BadasoCRUDController@read')->middleware(BadasoCheckPermissions::class.':read_crud_data');",
          "140:             Route::put('/edit', 'BadasoCRUDController@edit')->middleware(BadasoCheckPermissions::class.':edit_crud_data');",
          "141:             Route::post('/add', 'BadasoCRUDController@add')->middleware(BadasoCheckPermissions::class.':add_crud_data');",
          "142:             Route::delete('/delete', 'BadasoCRUDController@delete')->middleware(BadasoCheckPermissions::class.':delete_crud_data');",
          "143:             Route::get('/read-by-slug', 'BadasoCRUDController@readBySlug')->middleware(BadasoCheckPermissions::class.':read_crud_data');",
          "144:             Route::get('/maintenance', 'BadasoCRUDController@setMaintenanceState')->middleware(BadasoCheckPermissions::class.':maintenance_crud_data');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "163:                     $crud_data_controller = $data_type->controller",
          "164:                         ? Str::start($data_type->controller, '\\\\')",
          "165:                         : 'BadasoBaseController';",
          "207:                 }",
          "208:             } catch (\\InvalidArgumentException $e) {",
          "210:             } catch (\\Exception $e) {",
          "212:             }",
          "213:         });",
          "215:         Route::group(['prefix' => 'database'], function () {",
          "223:             Route::get('/migration/status', 'BadasoDatabaseController@checkMigrateStatus');",
          "227:         });",
          "229:         Route::group(['prefix' => 'firebase', 'middleware' => 'auth'], function () {",
          "",
          "[Removed Lines]",
          "166:                     Route::get($data_type->slug, $crud_data_controller . '@browse')",
          "167:                         ->name($data_type->slug . '.browse')",
          "168:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',browse');",
          "170:                     Route::get($data_type->slug . '/read', $crud_data_controller . '@read')",
          "171:                         ->name($data_type->slug . '.read')",
          "172:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',read');",
          "174:                     Route::put($data_type->slug . '/edit', $crud_data_controller . '@edit')",
          "175:                         ->name($data_type->slug . '.edit')",
          "176:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',edit');",
          "178:                     Route::post($data_type->slug . '/add', $crud_data_controller . '@add')",
          "179:                         ->name($data_type->slug . '.add')",
          "180:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',add');",
          "182:                     Route::delete($data_type->slug . '/delete', $crud_data_controller . '@delete')",
          "183:                         ->name($data_type->slug . '.delete')",
          "184:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',delete');",
          "186:                     Route::delete($data_type->slug . '/restore', $crud_data_controller . '@restore')",
          "187:                         ->name($data_type->slug . '.restore')->middleware(BadasoAuthenticate::class);",
          "189:                     Route::delete($data_type->slug . '/delete-multiple', $crud_data_controller . '@deleteMultiple')",
          "190:                         ->name($data_type->slug . '.delete-multiple')",
          "191:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',delete');",
          "193:                     Route::delete($data_type->slug . '/restore-multiple', $crud_data_controller . '@restoreMultiple')",
          "194:                         ->name($data_type->slug . '.restore-multiple')->middleware(BadasoAuthenticate::class);",
          "196:                     Route::put($data_type->slug . '/sort', $crud_data_controller . '@sort')",
          "197:                         ->name($data_type->slug . '.sort')",
          "198:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',edit');",
          "200:                     Route::get($data_type->slug . '/all', $crud_data_controller . '@all')",
          "201:                         ->name($data_type->slug . '.all')",
          "202:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',edit');",
          "204:                     Route::post($data_type->slug . '/maintenance', $crud_data_controller . '@setMaintenanceState')",
          "205:                         ->name($data_type->slug . '.maintenance')",
          "206:                         ->middleware(BadasoCheckPermissionsForCRUD::class . ':' . $data_type->slug . ',maintenance');",
          "209:                 throw new \\InvalidArgumentException(\"Custom routes hasn't been configured because: \" . $e->getMessage(), 1);",
          "216:             Route::get('/', 'BadasoDatabaseController@browse')->middleware(BadasoCheckPermissions::class . ':browse_database');",
          "217:             Route::get('/read', 'BadasoDatabaseController@read')->middleware(BadasoCheckPermissions::class . ':read_database');",
          "218:             Route::put('/edit', 'BadasoDatabaseController@edit')->middleware(BadasoCheckPermissions::class . ':edit_database');",
          "219:             Route::post('/add', 'BadasoDatabaseController@add')->middleware(BadasoCheckPermissions::class . ':add_database');",
          "220:             Route::delete('/delete', 'BadasoDatabaseController@delete')->middleware(BadasoCheckPermissions::class . ':delete_database');",
          "221:             Route::post('/rollback', 'BadasoDatabaseController@rollback')->middleware(BadasoCheckPermissions::class . ':rollback_database');",
          "222:             Route::get('/migration/browse', 'BadasoDatabaseController@browseMigration')->middleware(BadasoCheckPermissions::class . ':browse_migration');",
          "224:             Route::get('/migration/migrate', 'BadasoDatabaseController@migrate')->middleware(BadasoCheckPermissions::class . ':migrate_database');",
          "225:             Route::post('/migration/delete', 'BadasoDatabaseController@deleteMigration')->middleware(BadasoCheckPermissions::class . ':delete_migration');",
          "226:             Route::get('/type', 'BadasoDatabaseController@getDbmsFieldType')->middleware([BadasoCheckPermissions::class . ':add_database', BadasoCheckPermissions::class . ':edit_database']);",
          "",
          "[Added Lines]",
          "166:                     Route::get($data_type->slug, $crud_data_controller.'@browse')",
          "167:                         ->name($data_type->slug.'.browse')",
          "168:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',browse');",
          "170:                     Route::get($data_type->slug.'/read', $crud_data_controller.'@read')",
          "171:                         ->name($data_type->slug.'.read')",
          "172:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',read');",
          "174:                     Route::put($data_type->slug.'/edit', $crud_data_controller.'@edit')",
          "175:                         ->name($data_type->slug.'.edit')",
          "176:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',edit');",
          "178:                     Route::post($data_type->slug.'/add', $crud_data_controller.'@add')",
          "179:                         ->name($data_type->slug.'.add')",
          "180:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',add');",
          "182:                     Route::delete($data_type->slug.'/delete', $crud_data_controller.'@delete')",
          "183:                         ->name($data_type->slug.'.delete')",
          "184:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',delete');",
          "186:                     Route::delete($data_type->slug.'/restore', $crud_data_controller.'@restore')",
          "187:                         ->name($data_type->slug.'.restore')->middleware(BadasoAuthenticate::class);",
          "189:                     Route::delete($data_type->slug.'/delete-multiple', $crud_data_controller.'@deleteMultiple')",
          "190:                         ->name($data_type->slug.'.delete-multiple')",
          "191:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',delete');",
          "193:                     Route::delete($data_type->slug.'/restore-multiple', $crud_data_controller.'@restoreMultiple')",
          "194:                         ->name($data_type->slug.'.restore-multiple')->middleware(BadasoAuthenticate::class);",
          "196:                     Route::put($data_type->slug.'/sort', $crud_data_controller.'@sort')",
          "197:                         ->name($data_type->slug.'.sort')",
          "198:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',edit');",
          "200:                     Route::get($data_type->slug.'/all', $crud_data_controller.'@all')",
          "201:                         ->name($data_type->slug.'.all')",
          "202:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',edit');",
          "204:                     Route::post($data_type->slug.'/maintenance', $crud_data_controller.'@setMaintenanceState')",
          "205:                         ->name($data_type->slug.'.maintenance')",
          "206:                         ->middleware(BadasoCheckPermissionsForCRUD::class.':'.$data_type->slug.',maintenance');",
          "209:                 throw new \\InvalidArgumentException(\"Custom routes hasn't been configured because: \".$e->getMessage(), 1);",
          "216:             Route::get('/', 'BadasoDatabaseController@browse')->middleware(BadasoCheckPermissions::class.':browse_database');",
          "217:             Route::get('/read', 'BadasoDatabaseController@read')->middleware(BadasoCheckPermissions::class.':read_database');",
          "218:             Route::put('/edit', 'BadasoDatabaseController@edit')->middleware(BadasoCheckPermissions::class.':edit_database');",
          "219:             Route::post('/add', 'BadasoDatabaseController@add')->middleware(BadasoCheckPermissions::class.':add_database');",
          "220:             Route::delete('/delete', 'BadasoDatabaseController@delete')->middleware(BadasoCheckPermissions::class.':delete_database');",
          "221:             Route::post('/rollback', 'BadasoDatabaseController@rollback')->middleware(BadasoCheckPermissions::class.':rollback_database');",
          "222:             Route::get('/migration/browse', 'BadasoDatabaseController@browseMigration')->middleware(BadasoCheckPermissions::class.':browse_migration');",
          "224:             Route::get('/migration/migrate', 'BadasoDatabaseController@migrate')->middleware(BadasoCheckPermissions::class.':migrate_database');",
          "225:             Route::post('/migration/delete', 'BadasoDatabaseController@deleteMigration')->middleware(BadasoCheckPermissions::class.':delete_migration');",
          "226:             Route::get('/type', 'BadasoDatabaseController@getDbmsFieldType')->middleware([BadasoCheckPermissions::class.':add_database', BadasoCheckPermissions::class.':edit_database']);",
          "",
          "---------------"
        ],
        "src/Seeder/Configurations/FixedMenuItemSeeder.php||src/Seeder/Configurations/FixedMenuItemSeeder.php": [
          "File: src/Seeder/Configurations/FixedMenuItemSeeder.php -> src/Seeder/Configurations/FixedMenuItemSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:                 MenuItem::create($value);",
          "186:             }",
          "187:         } catch (Exception $e) {",
          "189:             \\DB::rollBack();",
          "190:         }",
          "",
          "[Removed Lines]",
          "188:             throw new Exception('Exception occur ' . $e);",
          "",
          "[Added Lines]",
          "188:             throw new Exception('Exception occur '.$e);",
          "",
          "---------------"
        ],
        "src/Seeder/Configurations/MenusSeeder.php||src/Seeder/Configurations/MenusSeeder.php": [
          "File: src/Seeder/Configurations/MenusSeeder.php -> src/Seeder/Configurations/MenusSeeder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:                 Menu::create($value);",
          "43:             }",
          "44:         } catch (Exception $e) {",
          "46:             \\DB::rollBack();",
          "47:         }",
          "",
          "[Removed Lines]",
          "45:             throw new Exception('Exception occur ' . $e);",
          "",
          "[Added Lines]",
          "45:             throw new Exception('Exception occur '.$e);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9602107430b87700abdb3b1710bc68830eb23f1d",
      "candidate_info": {
        "commit_hash": "9602107430b87700abdb3b1710bc68830eb23f1d",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/9602107430b87700abdb3b1710bc68830eb23f1d",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "commit",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1649:                 use Illuminate\\Database\\Eloquent\\Model;",
          "1650:                 class {$model_name} extends Model {",
          "1651:                     protected \\$table = \"{$table_name}\" ;",
          "1653:                 }",
          "1654:                 PHP;",
          "1655:                 $model_path = app_path(\"Models/$model_file_name\");",
          "",
          "[Removed Lines]",
          "1652:                     protected \\$fillable = [$fillable] ;",
          "",
          "[Added Lines]",
          "1652:                     protected \\$fill",
          "1653:                     able = [$fillable] ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1753:         $tables = CallHelperTest::getCache($this->KEY_LIST_CREATE_EMPTY_TABLES);",
          "1754:         $first_table = $tables[0];",
          "1757:         $fields = [];",
          "1758:         foreach ($this->getEmptyValueFields() as $key => $value) {",
          "1759:             $fields[$value['badaso_type']] = $value;",
          "1760:         }",
          "1762:         $data_add_entities = [];",
          "1764:             $entities = collect($entities)->filter(function ($entity) {",
          "1765:                 return $entity['add'];",
          "1766:             })->values();",
          "",
          "[Removed Lines]",
          "1756:         $response_read_table_entities = CallHelperTest::getCache($this->KEY_DATA_RESPONSE_READ_EMPTY_TABLE_ENTITY);",
          "1763:         foreach ($response_read_table_entities as $table_empty => $entities) {",
          "",
          "[Added Lines]",
          "1757:         $get_response_read_table_entities = CallHelperTest::getCache($this->KEY_DATA_RESPONSE_READ_EMPTY_TABLE_ENTITY);",
          "1764:         foreach ($get_response_read_table_entities as $table_empty => $entities) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d42252538c67e01711a12354d12cb623460a971",
      "candidate_info": {
        "commit_hash": "0d42252538c67e01711a12354d12cb623460a971",
        "repo": "uasoft-indonesia/badaso",
        "commit_url": "https://github.com/uasoft-indonesia/badaso/commit/0d42252538c67e01711a12354d12cb623460a971",
        "files": [
          "tests/Feature/BadasoApiCrudManagementTest.php"
        ],
        "message": "update test crud",
        "before_after_code_files": [
          "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/uasoft-indonesia/badaso/pull/1086"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/Feature/BadasoApiCrudManagementTest.php||tests/Feature/BadasoApiCrudManagementTest.php": [
          "File: tests/Feature/BadasoApiCrudManagementTest.php -> tests/Feature/BadasoApiCrudManagementTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "301:                     'schema_type' => 'integer',",
          "302:                     'details' => json_encode((object) []),",
          "303:                     'example' => 1,",
          "305:                 ],",
          "306:                 [",
          "307:                     'badaso_type' => 'url',",
          "",
          "[Removed Lines]",
          "304:                     'example_update' => null,",
          "",
          "[Added Lines]",
          "304:                     'example_update' => NULL,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:                     'schema_type' => 'string',",
          "399:                     'details' => json_encode((object) []),",
          "400:                     'example' => \"[\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\',\\'https://badaso-web.s3-ap-southeast-1.amazonaws.com/files/shares/1619582634819_badaso.png\\']\",",
          "402:                 ],",
          "403:             ];",
          "404:     }",
          "",
          "[Removed Lines]",
          "401:                     'example_update' => '[]',",
          "",
          "[Added Lines]",
          "401:                     'example_update' => \"[]\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "408:         $table_names = [];",
          "409:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "410:             $table_name = \"{$this->TABLE_TEST_PREFIX}{$index}\";",
          "412:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "413:                     $table->id();",
          "",
          "[Removed Lines]",
          "411:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "411:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "439:         $table_names = [];",
          "440:         for ($index = 1; $index <= $max_count_table_generate; $index++) {",
          "441:             $table_name = \"{$this->TABLE_TEST_EMPTY_VALUE_PREFIX}{$index}\";",
          "443:                 Schema::create($table_name, function (Blueprint $table) use ($index, $table_names) {",
          "444:                     $table->id();",
          "",
          "[Removed Lines]",
          "442:             if (! Schema::hasTable($table_name)) {",
          "",
          "[Added Lines]",
          "442:             if (!Schema::hasTable($table_name)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "639:                 }",
          "640:                 PHP;",
          "641:                 $model_path = app_path(\"Models/$model_file_name\");",
          "643:                     file_put_contents($model_path, $model_body);",
          "644:                 }",
          "",
          "[Removed Lines]",
          "642:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "642:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "660:             $controller_data = [];",
          "661:             if (rand(0, 1)) {",
          "664:                 $controller_file_name = \"{$controller_name}.php\";",
          "665:                 $controller_body = <<<PHP",
          "666:                 <?php",
          "",
          "[Removed Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "663:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "669:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "670:                 PHP;",
          "671:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "673:                     file_put_contents($controller_path, $controller_body);",
          "674:                 }",
          "",
          "[Removed Lines]",
          "672:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "672:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1112:             if ($table['table'] == 'table_relation') {",
          "1113:                 for ($i = 0; $i < 2; $i++) {",
          "1114:                     $field[$i] = [",
          "1117:                         'fieldType' => 'bigint',",
          "1118:                         'fieldLength' => null,",
          "1119:                         'fieldNull' => false,",
          "",
          "[Removed Lines]",
          "1115:                         'id' => $name_table[$i].'_id',",
          "1116:                         'fieldName' => $name_table[$i].'_id',",
          "",
          "[Added Lines]",
          "1115:                         'id' => $name_table[$i] . '_id',",
          "1116:                         'fieldName' => $name_table[$i] . '_id',",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1126:                     array_push($table['rows'], $field[$i]);",
          "1127:                 }",
          "1128:                 $table['relations'] = [",
          "1131:                         'target_table' => $name_table[1],",
          "1132:                         'target_field' => 'id',",
          "1133:                         'on_delete' => 'cascade',",
          "1134:                         'on_update' => 'restrict',",
          "1135:                     ],",
          "1138:                         'target_table' => $name_table[0],",
          "1139:                         'target_field' => 'id',",
          "1140:                         'on_delete' => 'cascade',",
          "",
          "[Removed Lines]",
          "1129:                     $name_table[1].'_id' => [",
          "1130:                         'source_field' => $name_table[1].'_id',",
          "1136:                     $name_table[0].'_id' => [",
          "1137:                         'source_field' => $name_table[0].'_id',",
          "",
          "[Added Lines]",
          "1129:                     $name_table[1] . '_id' => [",
          "1130:                         'source_field' => $name_table[1] . '_id',",
          "1136:                     $name_table[0] . '_id' => [",
          "1137:                         'source_field' => $name_table[0] . '_id',",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1148:         foreach ($name_table as $key => $crud_table) {",
          "1149:             $crud_table = [",
          "1150:                 'name' => $crud_table,",
          "1152:                 'displayNameSingular' => $crud_table,",
          "1153:                 'displayNamePlural' => $crud_table,",
          "1154:                 'icon' => '',",
          "",
          "[Removed Lines]",
          "1151:                 'slug' => 'table-'.$key + 1,",
          "",
          "[Added Lines]",
          "1151:                 'slug' => 'table-' . $key + 1,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1275:         foreach ($name_table as $key => $table) {",
          "1276:             if ($table == 'table-2') {",
          "1277:                 for ($i = 1; $i < 4; $i++) {",
          "1279:                         'data' => [",
          "1281:                         ],",
          "1282:                     ]);",
          "1283:                 }",
          "1284:             } else {",
          "1286:                 $response->assertSuccessful();",
          "1287:             }",
          "1288:         }",
          "1292:         $response->assertSuccessful();",
          "1293:         $data_browse = $response['data']['data'][0];",
          "1297:             'data' => [",
          "1298:                 'id' => $data_browse['id'],",
          "1299:                 'name' => 'lorem ipsum',",
          "",
          "[Removed Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), [",
          "1280:                             'name' => 'option '.$i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/edit'), [",
          "",
          "[Added Lines]",
          "1278:                     $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), [",
          "1280:                             'name' => 'option ' . $i,",
          "1285:                 $response = CallHelperTest::withAuthorizeBearer($this)->json('POST', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/add'), $data_table_primary);",
          "1291:         $response = CallHelperTest::withAuthorizeBearer($this)->json('GET', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table));",
          "1296:         $response = CallHelperTest::withAuthorizeBearer($this)->json('PUT', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/edit'), [",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1303:         $response->assertSuccessful();",
          "1307:             'slug' => $table,",
          "1308:             'data' => [",
          "1309:                 [",
          "",
          "[Removed Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/'.$table.'/delete'), [",
          "",
          "[Added Lines]",
          "1306:         $response = CallHelperTest::withAuthorizeBearer($this)->json('DELETE', CallHelperTest::getUrlApiV1Prefix('/entities/' . $table . '/delete'), [",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1653:                 }",
          "1654:                 PHP;",
          "1655:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1657:                     file_put_contents($model_path, $model_body);",
          "1658:                 }",
          "",
          "[Removed Lines]",
          "1656:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1656:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1674:             $controller_data = [];",
          "1675:             if (rand(0, 1)) {",
          "1678:                 $controller_file_name = \"{$controller_name}.php\";",
          "1679:                 $controller_body = <<<PHP",
          "1680:                 <?php",
          "",
          "[Removed Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1677:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1683:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1684:                 PHP;",
          "1685:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1687:                     file_put_contents($controller_path, $controller_body);",
          "1688:                 }",
          "",
          "[Removed Lines]",
          "1686:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1686:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1809:             }",
          "1810:         }",
          "1813:             $data_add_entities",
          "1814:         );",
          "1815:     }",
          "",
          "[Removed Lines]",
          "1812:         CallHelperTest::setCache($this->KEY_EMPTY_DATA_ADD_ENTITY,",
          "",
          "[Added Lines]",
          "1812:         CallHelperTest::setCache(",
          "1813:             $this->KEY_EMPTY_DATA_ADD_ENTITY,",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1962:                 }",
          "1963:                 PHP;",
          "1964:                 $model_path = app_path(\"Models/$model_file_name\");",
          "1966:                     file_put_contents($model_path, $model_body);",
          "1967:                 }",
          "",
          "[Removed Lines]",
          "1965:                 if (! file_exists($model_path)) {",
          "",
          "[Added Lines]",
          "1966:                 if (!file_exists($model_path)) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1983:             $controller_data = [];",
          "1984:             if (rand(0, 1)) {",
          "1987:                 $controller_file_name = \"{$controller_name}.php\";",
          "1988:                 $controller_body = <<<PHP",
          "1989:                 <?php",
          "",
          "[Removed Lines]",
          "1986:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)).'Controller';",
          "",
          "[Added Lines]",
          "1987:                 $controller_name = str_replace([' ', '_'], '', ucwords($table_name)) . 'Controller';",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1992:                 class {$controller_name} extends \\Uasoft\\Badaso\\Controllers\\BadasoBaseController {}",
          "1993:                 PHP;",
          "1994:                 $controller_path = app_path(\"/Http/Controllers/$controller_file_name\");",
          "1996:                     file_put_contents($controller_path, $controller_body);",
          "1997:                 }",
          "",
          "[Removed Lines]",
          "1995:                 if (! file_exists($controller_path)) {",
          "",
          "[Added Lines]",
          "1996:                 if (!file_exists($controller_path)) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2012:             $request_body = [",
          "2013:                 'name' =>  $table_name,",
          "2014:                 'slug' =>  $table_name,",
          "2017:                 'icon' =>  'add',",
          "2018:                 'modelName' =>  $model,",
          "2019:                 'policyName' =>  '',",
          "",
          "[Removed Lines]",
          "2015:                 'displayNameSingular' =>  $table_label.'(update)',",
          "2016:                 'displayNamePlural' =>  $table_label.'(update)',",
          "",
          "[Added Lines]",
          "2016:                 'displayNameSingular' =>  $table_label . '(update)',",
          "2017:                 'displayNamePlural' =>  $table_label . '(update)',",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2099:             $controller_name = \"{$name}Controller.php\";",
          "2101:             if (file_exists($controller_path)) {",
          "2102:                 unlink($controller_path);",
          "2103:             }",
          "2106:             $model_name = \"{$name}.php\";",
          "2108:             if (file_exists($model_path)) {",
          "2109:                 unlink($model_path);",
          "2110:             }",
          "",
          "[Removed Lines]",
          "2100:             $controller_path = app_path('Http/Controllers/'.$controller_name);",
          "2107:             $model_path = app_path('Models/'.$model_name);",
          "",
          "[Added Lines]",
          "2101:             $controller_path = app_path('Http/Controllers/' . $controller_name);",
          "2108:             $model_path = app_path('Models/' . $model_name);",
          "",
          "---------------"
        ]
      }
    }
  ]
}