{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c878c67129e7868ce8eb0d08e0393d72769a50c3",
      "candidate_info": {
        "commit_hash": "c878c67129e7868ce8eb0d08e0393d72769a50c3",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c878c67129e7868ce8eb0d08e0393d72769a50c3",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java"
        ],
        "message": "AMBARI-25434. No Validation error on UI for an 'Unauthorized' repo url. (#3143)\n\n* AMBARI-25434. No Validation error on UI for an 'Unauthorized' repo url. (mpapirkovskyy)\n\n* AMBARI-25434. No Validation error on UI for an 'Unauthorized' repo url. (mpapirkovskyy)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariManagementControllerImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: import org.apache.ambari.server.controller.internal.RequestOperationLevel;",
          "127: import org.apache.ambari.server.controller.internal.RequestResourceFilter;",
          "128: import org.apache.ambari.server.controller.internal.RequestStageContainer;",
          "130: import org.apache.ambari.server.controller.internal.WidgetLayoutResourceProvider;",
          "131: import org.apache.ambari.server.controller.internal.WidgetResourceProvider;",
          "132: import org.apache.ambari.server.controller.logging.LoggingSearchPropertyProvider;",
          "",
          "[Removed Lines]",
          "129: import org.apache.ambari.server.controller.internal.URLStreamProvider;",
          "",
          "[Added Lines]",
          "129: import org.apache.ambari.server.controller.internal.URLRedirectProvider;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241: import org.apache.ambari.server.utils.URLCredentialsHider;",
          "242: import org.apache.commons.collections.CollectionUtils;",
          "243: import org.apache.commons.collections.MapUtils;",
          "245: import org.apache.commons.lang.BooleanUtils;",
          "246: import org.apache.commons.lang.StringUtils;",
          "247: import org.apache.commons.lang.math.NumberUtils;",
          "248: import org.apache.http.client.utils.URIBuilder;",
          "249: import org.slf4j.Logger;",
          "250: import org.slf4j.LoggerFactory;",
          "",
          "[Removed Lines]",
          "244: import org.apache.commons.io.IOUtils;",
          "",
          "[Added Lines]",
          "247: import org.apache.http.HttpStatus;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4466:   private void verifyRepository(RepositoryRequest request) throws AmbariException {",
          "4470:     String repoName = request.getRepoName();",
          "4471:     if (StringUtils.isEmpty(repoName)) {",
          "",
          "[Removed Lines]",
          "4467:     URLStreamProvider usp = new URLStreamProvider(REPO_URL_CONNECT_TIMEOUT, REPO_URL_READ_TIMEOUT, null, null, null);",
          "4468:     usp.setSetupTruststoreForHttps(false);",
          "",
          "[Added Lines]",
          "4467:     URLRedirectProvider usp = new URLRedirectProvider(REPO_URL_CONNECT_TIMEOUT, REPO_URL_READ_TIMEOUT);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4505:       }else{",
          "4506:         try {",
          "4508:         } catch (IOException ioe) {",
          "4509:           e = ioe;",
          "4510:           errorMessage = String.format(\"Could not access base url '%s'\",",
          "",
          "[Removed Lines]",
          "4507:           IOUtils.readLines(usp.readFrom(spec));",
          "",
          "[Added Lines]",
          "4506:           URLRedirectProvider.RequestResult result = usp.executeGet(spec);",
          "4507:           if (result.getCode() != HttpStatus.SC_OK) {",
          "4508:             errorMessage = String.format(\"Could not access base url '%s', code: '%d', response: '%s'\",",
          "4509:                                          URLCredentialsHider.hideCredentials(request.getBaseUrl()),",
          "4510:                                          result.getCode(),",
          "4511:                                          result.getContent());",
          "4512:           }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4519:       }",
          "4520:     }",
          "4523:       LOG.error(errorMessage);",
          "4525:     }",
          "4526:   }",
          "",
          "[Removed Lines]",
          "4522:     if (e != null) {",
          "4524:       throw new IllegalArgumentException(errorMessage, e);",
          "",
          "[Added Lines]",
          "4527:     if (errorMessage != null) {",
          "4529:       if (e == null) {",
          "4530:         throw new IllegalArgumentException(errorMessage);",
          "4531:       } else {",
          "4532:         throw new IllegalArgumentException(errorMessage, e);",
          "4533:       }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/URLRedirectProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.server.controller.internal;",
          "21: import java.io.IOException;",
          "22: import java.io.InputStream;",
          "23: import java.nio.charset.StandardCharsets;",
          "25: import org.apache.ambari.server.utils.URLCredentialsHider;",
          "26: import org.apache.commons.io.IOUtils;",
          "27: import org.apache.http.HttpEntity;",
          "28: import org.apache.http.HttpStatus;",
          "29: import org.apache.http.client.config.RequestConfig;",
          "30: import org.apache.http.client.methods.CloseableHttpResponse;",
          "31: import org.apache.http.client.methods.HttpGet;",
          "32: import org.apache.http.impl.client.CloseableHttpClient;",
          "33: import org.apache.http.impl.client.HttpClientBuilder;",
          "34: import org.slf4j.Logger;",
          "35: import org.slf4j.LoggerFactory;",
          "40: public class URLRedirectProvider {",
          "41:   private static final Logger LOG = LoggerFactory.getLogger(URLRedirectProvider.class);",
          "43:   private final int connTimeout;",
          "44:   private final int readTimeout;",
          "46:   public URLRedirectProvider(int connectionTimeout, int readTimeout) {",
          "47:     this.connTimeout = connectionTimeout;",
          "48:     this.readTimeout = readTimeout;",
          "49:   }",
          "51:   public RequestResult executeGet(String spec) throws IOException {",
          "52:     try (CloseableHttpClient httpClient = HttpClientBuilder.create().build()) {",
          "53:       HttpGet httpGet = new HttpGet(spec);",
          "55:       RequestConfig requestConfig = RequestConfig.custom()",
          "56:         .setConnectionRequestTimeout(connTimeout)",
          "57:         .setSocketTimeout(readTimeout).build();",
          "58:       httpGet.setConfig(requestConfig);",
          "60:       try (CloseableHttpResponse response = httpClient.execute(httpGet);) {",
          "61:         final HttpEntity entity = response.getEntity();",
          "62:         final InputStream is = entity.getContent();",
          "64:         final int statusCode = response.getStatusLine().getStatusCode();",
          "65:         final RequestResult result = new RequestResult(IOUtils.toString(is, StandardCharsets.UTF_8), statusCode);",
          "67:         if (statusCode == HttpStatus.SC_UNAUTHORIZED || statusCode == HttpStatus.SC_NOT_FOUND",
          "68:           || statusCode == HttpStatus.SC_FORBIDDEN) {",
          "69:           LOG.error(String.format(\"Received HTTP '%s' response from URL: '%s'\", statusCode,",
          "70:                                   URLCredentialsHider.hideCredentials(spec)));",
          "71:         }",
          "72:         return result;",
          "73:       }",
          "74:     }",
          "75:   }",
          "77:   public static class RequestResult {",
          "78:     private final String content;",
          "79:     private final int code;",
          "81:     public RequestResult(String content, int code) {",
          "82:       this.content = content;",
          "83:       this.code = code;",
          "84:     }",
          "86:     public String getContent() {",
          "87:       return content;",
          "88:     }",
          "90:     public int getCode() {",
          "91:       return code;",
          "92:     }",
          "93:   }",
          "94: }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/VersionDefinitionResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.ambari.server.api.resources.OperatingSystemResourceDefinition;",
          "39: import org.apache.ambari.server.api.resources.RepositoryResourceDefinition;",
          "40: import org.apache.ambari.server.api.services.AmbariMetaInfo;",
          "42: import org.apache.ambari.server.configuration.Configuration;",
          "43: import org.apache.ambari.server.controller.spi.NoSuchParentResourceException;",
          "44: import org.apache.ambari.server.controller.spi.NoSuchResourceException;",
          "",
          "[Removed Lines]",
          "41: import org.apache.ambari.server.configuration.ComponentSSLConfiguration;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: import org.apache.commons.lang.ObjectUtils;",
          "73: import org.apache.commons.lang.StringUtils;",
          "74: import org.apache.commons.lang.math.NumberUtils;",
          "75: import org.codehaus.jackson.node.ArrayNode;",
          "76: import org.codehaus.jackson.node.JsonNodeFactory;",
          "77: import org.codehaus.jackson.node.ObjectNode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: import org.apache.http.HttpStatus;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "572:     try {",
          "573:       URI uri = new URI(definitionUrl);",
          "576:       if (uri.getScheme().equalsIgnoreCase(\"file\")) {",
          "578:       } else {",
          "587:       holder.xml = VersionDefinitionXml.load(holder.xmlString);",
          "588:     } catch (Exception e) {",
          "589:       String err = String.format(\"Could not load url from %s.  %s\",",
          "",
          "[Removed Lines]",
          "574:       InputStream stream = null;",
          "577:         stream = uri.toURL().openStream();",
          "579:         URLStreamProvider provider = new URLStreamProvider(connectTimeout, readTimeout,",
          "580:             ComponentSSLConfiguration.instance());",
          "581:         provider.setSetupTruststoreForHttps(false);",
          "583:         stream = provider.readFrom(definitionUrl);",
          "584:       }",
          "586:       holder.xmlString = IOUtils.toString(stream, \"UTF-8\");",
          "",
          "[Added Lines]",
          "576:         InputStream stream = uri.toURL().openStream();",
          "577:         holder.xmlString = IOUtils.toString(stream, \"UTF-8\");",
          "579:         URLRedirectProvider provider = new URLRedirectProvider(connectTimeout, readTimeout);",
          "580:         URLRedirectProvider.RequestResult requestResult = provider.executeGet(definitionUrl);",
          "582:         if (requestResult.getCode() != HttpStatus.SC_OK) {",
          "583:           String err = String.format(\"Could not load url from '%s' with code '%d'.  %s\",",
          "584:                                      definitionUrl, requestResult.getCode(), requestResult.getContent());",
          "585:           throw new AmbariException(err);",
          "586:         }",
          "588:         holder.xmlString = requestResult.getContent();",
          "589:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ccda3504f75b614dd912825e2547dd4f8222908",
      "candidate_info": {
        "commit_hash": "5ccda3504f75b614dd912825e2547dd4f8222908",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/5ccda3504f75b614dd912825e2547dd4f8222908",
        "files": [
          "ambari-server/src/main/resources/scripts/Ambaripreupload.py"
        ],
        "message": "[AMBARI-24485] HDP-3.0 Hive Interactive server fails to start. (#2084)",
        "before_after_code_files": [
          "ambari-server/src/main/resources/scripts/Ambaripreupload.py||ambari-server/src/main/resources/scripts/Ambaripreupload.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/resources/scripts/Ambaripreupload.py||ambari-server/src/main/resources/scripts/Ambaripreupload.py": [
          "File: ambari-server/src/main/resources/scripts/Ambaripreupload.py -> ambari-server/src/main/resources/scripts/Ambaripreupload.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:     params.HdfsResource(format('{hdfs_path_prefix}/hive/warehouse'), owner='hive', type='directory', action=['create_on_execute'], mode=0777)",
          "255:     params.HdfsResource(format('{hdfs_path_prefix}/warehouse/tablespace/external/hive'), owner='hive', type='directory', action=['create_on_execute'], mode=01777)",
          "256:     params.HdfsResource(format('{hdfs_path_prefix}/user/hive'), owner='hive', type='directory', action=['create_on_execute'], mode=0755)",
          "257:     params.HdfsResource(format('{hdfs_path_prefix}/tmp'), mode=0777, action=['create_on_execute'], type='directory', owner='hdfs')",
          "258:     params.HdfsResource(format('{hdfs_path_prefix}/user/ambari-qa'), type='directory', action=['create_on_execute'], mode=0770)",
          "259:     params.HdfsResource(format('{hdfs_path_prefix}/user/oozie'), owner='oozie', type='directory', action=['create_on_execute'], mode=0775)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:     params.HdfsResource(format('{hdfs_path_prefix}/user/hive/.yarn/package/LLAP'), owner='hive', type='directory', action=['create_on_execute'], mode=0755)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "470bbe96922d6970d81fcb6a564c64a6ec3d1da8",
      "candidate_info": {
        "commit_hash": "470bbe96922d6970d81fcb6a564c64a6ec3d1da8",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/470bbe96922d6970d81fcb6a564c64a6ec3d1da8",
        "files": [
          "ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh"
        ],
        "message": "AMBARI-25397 Upgrading ambari-logsearch-logfeeder to 2.7.4 rpm gives warnings (santal) (#3103)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh||ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh||ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh": [
          "File: ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh -> ambari-logsearch/ambari-logsearch-assembly/src/main/package/rpm/logfeeder/postremove.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: rm -f $LOGFEEDER_SCRIPT_LINK_NAME",
          "22: rm -f $LOGFEEDER_CONF_DIR_LINK",
          "",
          "[Removed Lines]",
          "23: rm -f $LOGFEEDER_ETC_FOLDER",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4482cdcacc935632a1a8266923c01a2795203755",
      "candidate_info": {
        "commit_hash": "4482cdcacc935632a1a8266923c01a2795203755",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/4482cdcacc935632a1a8266923c01a2795203755",
        "files": [
          "ambari-infra/ambari-infra-manager/docker/docker-compose.yml",
          "ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh",
          "ambari-infra/ambari-infra-solr-client/README.md",
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py",
          "ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh",
          "ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh",
          "ambari-infra/pom.xml",
          "ambari-logsearch/ambari-logsearch-server/src/main/configsets/audit_logs/conf/solrconfig.xml",
          "ambari-logsearch/ambari-logsearch-server/src/main/configsets/hadoop_logs/conf/solrconfig.xml",
          "ambari-logsearch/ambari-logsearch-server/src/main/configsets/history/conf/solrconfig.xml",
          "ambari-logsearch/docker/Dockerfile",
          "ambari-logsearch/docker/docker-compose.yml",
          "ambari-logsearch/docker/logsearch-docker.sh",
          "ambari-logsearch/docker/solr.yml",
          "ambari-logsearch/docker/sso.yml",
          "ambari-logsearch/pom.xml",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/configuration/infra-solr-log4j.xml",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java"
        ],
        "message": "AMBARI-24480. Upgrade Infra Solr (from Solr 7.3.1 to Solr 7.4.0) (#2082)\n\n* AMBARI-24480. Upload Infra Solr (from Solr 7.3.1 to Solr 7.4.0)\n\n* AMBARI-24480. Fix naming",
        "before_after_code_files": [
          "ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh||ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh",
          "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py",
          "ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh||ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh",
          "ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh||ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh",
          "ambari-logsearch/docker/logsearch-docker.sh||ambari-logsearch/docker/logsearch-docker.sh",
          "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2",
          "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2",
          "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh||ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh": [
          "File: ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh -> ambari-infra/ambari-infra-manager/docker/infra-manager-docker-compose.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: ZOOKEEPER_VERSION=3.4.10",
          "73: ZOOKEEPER_CONNECTION_STRING=zookeeper:2181",
          "77: HADOOP_VERSION=3.0.0",
          "78: EOF",
          "",
          "[Removed Lines]",
          "75: SOLR_VERSION=7.3.1",
          "",
          "[Added Lines]",
          "75: SOLR_VERSION=7.4.0",
          "",
          "---------------"
        ],
        "ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py||ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py": [
          "File: ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py -> ambari-infra/ambari-infra-solr-client/src/main/python/migrationHelper.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1911:   parser.add_option(\"--atlas-index-location\", dest=\"atlas_index_location\", type=\"string\", help=\"location of the index backups (for atlas). required only if no backup path in the ini file\")",
          "1912:   parser.add_option(\"--ranger-index-location\", dest=\"ranger_index_location\", type=\"string\", help=\"location of the index backups (for ranger). required only if no backup path in the ini file\")",
          "1915:   parser.add_option(\"--solr-async-request-tries\", dest=\"solr_async_request_tries\", type=\"int\", default=400,  help=\"number of max tries for async Solr requests (e.g.: delete operation)\")",
          "1916:   parser.add_option(\"--request-tries\", dest=\"request_tries\", type=\"int\", help=\"number of tries for BACKUP/RESTORE status api calls in the request\")",
          "1917:   parser.add_option(\"--request-time-interval\", dest=\"request_time_interval\", type=\"int\", help=\"time interval between BACKUP/RESTORE status api calls in the request\")",
          "",
          "[Removed Lines]",
          "1914:   parser.add_option(\"--version\", dest=\"index_version\", type=\"string\", default=\"6.6.2\", help=\"lucene index version for migration (6.6.2 or 7.3.1)\")",
          "",
          "[Added Lines]",
          "1914:   parser.add_option(\"--version\", dest=\"index_version\", type=\"string\", default=\"6.6.2\", help=\"lucene index version for migration (6.6.2 or 7.4.0)\")",
          "",
          "---------------"
        ],
        "ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh||ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh": [
          "File: ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh -> ambari-infra/ambari-infra-solr-client/src/main/resources/solrIndexHelper.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:      -b, --backup-enabled                    Use indexer tool with backup snapshots. (core filter won't be used)",
          "44:      -g, --debug                             Enable debug mode, IndexUpgrader output will be verbose.",
          "45:      -f, --force                             Force to start index upgrade, even is the version is at least 6.",
          "47: EOF",
          "48: }",
          "",
          "[Removed Lines]",
          "46:      -v, --version                           Lucene version to upgrade (default: 6.6.2, available: 6.6.2, 7.3.1)",
          "",
          "[Added Lines]",
          "46:      -v, --version                           Lucene version to upgrade (default: 6.6.2, available: 6.6.2, 7.4.0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   local INDEX_DIR=${1:?\"usage: <index_base_dir> e.g.: /opt/ambari_infra_solr/data\"}",
          "52:   local FORCE_UPDATE=${2:?\"usage <force_update_flag> e.g.: true\"}",
          "53:   local SOLR_CORE_FILTERS=${3:?\"usage: <comma separated core filters> e.g.: hadoop_logs,audit_logs,history\"}",
          "55:   local BACKUP_MODE=${5:?\"usage <backup_mode_enabled> e.g.: true\"}",
          "56:   local DEBUG_MODE=${6:?\"usage <debug_mode> e.g.: true\"}",
          "57:   SOLR_CORE_FILTER_ARR=$(echo $SOLR_CORE_FILTERS | sed \"s/,/ /g\")",
          "",
          "[Removed Lines]",
          "54:   local LUCENE_VERSION=${4:?\"usage <lucene_index_version> e.g.: 7.3.1\"}",
          "",
          "[Added Lines]",
          "54:   local LUCENE_VERSION=${4:?\"usage <lucene_index_version> e.g.: 7.4.0\"}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205: function upgrade_index_tool() {",
          "206:   # see: https://cwiki.apache.org/confluence/display/solr/IndexUpgrader+Tool",
          "208:   PATH=$JAVA_HOME/bin:$PATH $JVM -classpath \"$DIR/migrate/lucene-core-$INDEX_VERSION.jar:$DIR/migrate/lucene-backward-codecs-$INDEX_VERSION.jar\" org.apache.lucene.index.IndexUpgrader ${@}",
          "209: }",
          "211: function check_index_tool() {",
          "213:   PATH=$JAVA_HOME/bin:$PATH $JVM -classpath \"$DIR/migrate/lucene-core-$INDEX_VERSION.jar:$DIR/migrate/lucene-backward-codecs-$INDEX_VERSION.jar\" org.apache.lucene.index.CheckIndex ${@}",
          "214: }",
          "",
          "[Removed Lines]",
          "207:   : ${INDEX_VERSION:?\"Please set the INDEX_VERSION variable! (6.6.2 or 7.3.1)\"}",
          "212:   : ${INDEX_VERSION:?\"Please set the INDEX_VERSION variable! (6.6.2 or 7.3.1)\"}",
          "",
          "[Added Lines]",
          "207:   : ${INDEX_VERSION:?\"Please set the INDEX_VERSION variable! (6.6.2 or 7.4.0)\"}",
          "212:   : ${INDEX_VERSION:?\"Please set the INDEX_VERSION variable! (6.6.2 or 7.4.0)\"}",
          "",
          "---------------"
        ],
        "ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh||ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh": [
          "File: ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh -> ambari-infra/ambari-infra-solr-plugin/docker/infra-solr-docker-compose.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: ZOOKEEPER_VERSION=3.4.10",
          "73: ZOOKEEPER_CONNECTION_STRING=zookeeper:2181",
          "76: EOF",
          "77: }",
          "",
          "[Removed Lines]",
          "75: SOLR_VERSION=7.3.1",
          "",
          "[Added Lines]",
          "75: SOLR_VERSION=7.4.0",
          "",
          "---------------"
        ],
        "ambari-logsearch/docker/logsearch-docker.sh||ambari-logsearch/docker/logsearch-docker.sh": [
          "File: ambari-logsearch/docker/logsearch-docker.sh -> ambari-logsearch/docker/logsearch-docker.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "109: ZOOKEEPER_VERSION=3.4.10",
          "110: ZOOKEEPER_CONNECTION_STRING=zookeeper:2181",
          "113: EOF",
          "114:     echo \".env file has been created. Check it out before starting Log Search. ($sdir/.env)\"",
          "115:     exit",
          "",
          "[Removed Lines]",
          "112: SOLR_VERSION=7.3.1",
          "",
          "[Added Lines]",
          "112: SOLR_VERSION=7.4.0",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java||ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java -> ambari-server/src/main/java/org/apache/ambari/server/upgrade/UpgradeCatalog271.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import static org.apache.ambari.server.upgrade.UpgradeCatalog270.AMBARI_INFRA_OLD_NAME;",
          "23: import java.sql.SQLException;",
          "24: import java.util.HashMap;",
          "25: import java.util.Map;",
          "26: import java.util.Set;",
          "27: import java.util.regex.Matcher;",
          "28: import java.util.regex.Pattern;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.util.Collections;",
          "28: import java.util.function.Function;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:   private static final Logger LOG = LoggerFactory.getLogger(UpgradeCatalog271.class);",
          "57:   private static final String SERVICE_CONFIG_MAPPING_TABLE = \"serviceconfigmapping\";",
          "58:   private static final String CLUSTER_CONFIG_TABLE = \"clusterconfig\";",
          "59:   protected static final String CLUSTERS_TABLE = \"clusters\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:   private static final String SOLR_NEW_LOG4J2_XML = \"<Configuration>\\n\" +",
          "60:     \"  <Appenders>\\n\" +",
          "61:     \"\\n\" +",
          "62:     \"    <Console name=\\\"STDOUT\\\" target=\\\"SYSTEM_OUT\\\">\\n\" +",
          "63:     \"      <PatternLayout>\\n\" +",
          "64:     \"        <Pattern>\\n\" +",
          "65:     \"          %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\\n\" +",
          "66:     \"        </Pattern>\\n\" +",
          "67:     \"      </PatternLayout>\\n\" +",
          "68:     \"    </Console>\\n\" +",
          "69:     \"\\n\" +",
          "70:     \"    <RollingFile\\n\" +",
          "71:     \"        name=\\\"RollingFile\\\"\\n\" +",
          "72:     \"        fileName=\\\"{{infra_solr_log_dir}}/solr.log\\\"\\n\" +",
          "73:     \"        filePattern=\\\"{{infra_solr_log_dir}}/solr.log.%i\\\" >\\n\" +",
          "74:     \"      <PatternLayout>\\n\" +",
          "75:     \"        <Pattern>\\n\" +",
          "76:     \"          %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\\n\" +",
          "77:     \"        </Pattern>\\n\" +",
          "78:     \"      </PatternLayout>\\n\" +",
          "79:     \"      <Policies>\\n\" +",
          "80:     \"        <OnStartupTriggeringPolicy />\\n\" +",
          "81:     \"        <SizeBasedTriggeringPolicy size=\\\"{{infra_log_maxfilesize}} MB\\\"/>\\n\" +",
          "82:     \"      </Policies>\\n\" +",
          "83:     \"      <DefaultRolloverStrategy max=\\\"{{infra_log_maxbackupindex}}\\\"/>\\n\" +",
          "84:     \"    </RollingFile>\\n\" +",
          "85:     \"\\n\" +",
          "86:     \"    <RollingFile\\n\" +",
          "87:     \"        name=\\\"SlowFile\\\"\\n\" +",
          "88:     \"        fileName=\\\"{{infra_solr_log_dir}}/solr_slow_requests.log\\\"\\n\" +",
          "89:     \"        filePattern=\\\"{{infra_solr_log_dir}}/solr_slow_requests.log.%i\\\" >\\n\" +",
          "90:     \"      <PatternLayout>\\n\" +",
          "91:     \"        <Pattern>\\n\" +",
          "92:     \"          %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n\\n\" +",
          "93:     \"        </Pattern>\\n\" +",
          "94:     \"      </PatternLayout>\\n\" +",
          "95:     \"      <Policies>\\n\" +",
          "96:     \"        <OnStartupTriggeringPolicy />\\n\" +",
          "97:     \"        <SizeBasedTriggeringPolicy size=\\\"{{infra_log_maxfilesize}} MB\\\"/>\\n\" +",
          "98:     \"      </Policies>\\n\" +",
          "99:     \"      <DefaultRolloverStrategy max=\\\"{{infra_log_maxbackupindex}}\\\"/>\\n\" +",
          "100:     \"    </RollingFile>\\n\" +",
          "101:     \"\\n\" +",
          "102:     \"  </Appenders>\\n\" +",
          "103:     \"  <Loggers>\\n\" +",
          "104:     \"    <Logger name=\\\"org.apache.hadoop\\\" level=\\\"warn\\\"/>\\n\" +",
          "105:     \"    <Logger name=\\\"org.apache.solr.update.LoggingInfoStream\\\" level=\\\"off\\\"/>\\n\" +",
          "106:     \"    <Logger name=\\\"org.apache.zookeeper\\\" level=\\\"warn\\\"/>\\n\" +",
          "107:     \"    <Logger name=\\\"org.apache.solr.core.SolrCore.SlowRequest\\\" level=\\\"warn\\\" additivity=\\\"false\\\">\\n\" +",
          "108:     \"      <AppenderRef ref=\\\"SlowFile\\\"/>\\n\" +",
          "109:     \"    </Logger>\\n\" +",
          "110:     \"\\n\" +",
          "111:     \"    <Root level=\\\"warn\\\">\\n\" +",
          "112:     \"      <AppenderRef ref=\\\"RollingFile\\\"/>\\n\" +",
          "113:     \"      <!-- <AppenderRef ref=\\\"STDOUT\\\"/> -->\\n\" +",
          "114:     \"    </Root>\\n\" +",
          "115:     \"  </Loggers>\\n\" +",
          "116:     \"</Configuration>\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:     updateRangerKmsDbUrl();",
          "115:     renameAmbariInfraInConfigGroups();",
          "116:     removeLogSearchPatternConfigs();",
          "117:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:     updateSolrConfigurations();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "270:         new DBAccessor.DBColumnInfo(CLUSTERS_BLUEPRINT_PROVISIONING_STATE_COLUMN, String.class, 255,",
          "271:             BlueprintProvisioningState.NONE, true));",
          "272:   }",
          "273: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:   protected void updateSolrConfigurations() throws AmbariException {",
          "339:     AmbariManagementController ambariManagementController = injector.getInstance(AmbariManagementController.class);",
          "340:     Clusters clusters = ambariManagementController.getClusters();",
          "341:     if (clusters == null)",
          "342:       return;",
          "344:     Map<String, Cluster> clusterMap = clusters.getClusters();",
          "346:     if (clusterMap == null || clusterMap.isEmpty())",
          "347:       return;",
          "349:     for (final Cluster cluster : clusterMap.values()) {",
          "350:       updateConfig(cluster, \"logsearch-service_logs-solrconfig\", (content) -> updateLuceneMatchVersion(content,\"7.4.0\"));",
          "351:       updateConfig(cluster, \"logsearch-audit_logs-solrconfig\", (content) -> updateLuceneMatchVersion(content,\"7.4.0\"));",
          "352:       updateConfig(cluster, \"infra-solr-log4j\", (content) -> SOLR_NEW_LOG4J2_XML);",
          "353:     }",
          "354:   }",
          "356:   private void updateConfig(Cluster cluster, String configType, Function<String, String> contentUpdater) throws AmbariException {",
          "357:     Config config = cluster.getDesiredConfigByType(configType);",
          "358:     if (config == null)",
          "359:       return;",
          "360:     if (config.getProperties() == null || !config.getProperties().containsKey(\"content\"))",
          "361:       return;",
          "363:     String content = config.getProperties().get(\"content\");",
          "364:     content = contentUpdater.apply(content);",
          "365:     updateConfigurationPropertiesForCluster(cluster, configType, Collections.singletonMap(\"content\", content), true, true);",
          "366:   }",
          "368:   private String updateLuceneMatchVersion(String content, String newLuceneMatchVersion) {",
          "369:     return content.replaceAll(\"<luceneMatchVersion>.*</luceneMatchVersion>\",",
          "370:       \"<luceneMatchVersion>\" + newLuceneMatchVersion + \"</luceneMatchVersion>\");",
          "371:   }",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/package/scripts/setup_infra_solr.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:          group=params.user_group",
          "68:          )",
          "71:          content=InlineTemplate(params.solr_log4j_content),",
          "72:          owner=params.infra_solr_user,",
          "73:          group=params.user_group",
          "",
          "[Removed Lines]",
          "70:     File(format(\"{infra_solr_conf}/log4j.properties\"),",
          "",
          "[Added Lines]",
          "70:     File(format(\"{infra_solr_conf}/log4j2.xml\"),",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2 -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/infra-solr-env.sh.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: # Solr provides a default Log4J configuration properties file in server/resources",
          "74: # however, you may want to customize the log settings and file appender location",
          "75: # so you can point the script to use a different log4j.properties file",
          "78: # Location where Solr should write logs to; should agree with the file appender",
          "79: # settings in server/resources/log4j.properties",
          "",
          "[Removed Lines]",
          "76: LOG4J_PROPS={{infra_solr_conf}}/log4j.properties",
          "",
          "[Added Lines]",
          "76: LOG4J_PROPS={{infra_solr_conf}}/log4j2.xml",
          "",
          "---------------"
        ],
        "ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2||ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2": [
          "File: ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2 -> ambari-server/src/main/resources/common-services/AMBARI_INFRA_SOLR/0.1.0/properties/solr-log4j2.xml.j2",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!--",
          "2: Licensed to the Apache Software Foundation (ASF) under one or more",
          "3: contributor license agreements.  See the NOTICE file distributed with",
          "4: this work for additional information regarding copyright ownership.",
          "5: The ASF licenses this file to You under the Apache License, Version 2.0",
          "6: (the \"License\"); you may not use this file except in compliance with",
          "7: the License.  You may obtain a copy of the License at",
          "9: http://www.apache.org/licenses/LICENSE-2.0",
          "11: Unless required by applicable law or agreed to in writing, software",
          "12: distributed under the License is distributed on an \"AS IS\" BASIS,",
          "13: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "14: See the License for the specific language governing permissions and",
          "15: limitations under the License.",
          "16: -->",
          "17: <Configuration>",
          "18:   <Appenders>",
          "20:     <Console name=\"STDOUT\" target=\"SYSTEM_OUT\">",
          "21:       <PatternLayout>",
          "22:         <Pattern>",
          "23:           %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n",
          "24:         </Pattern>",
          "25:       </PatternLayout>",
          "26:     </Console>",
          "28:     <RollingFile",
          "29:         name=\"RollingFile\"",
          "30:         fileName=\"{{infra_solr_log_dir}}/solr.log\"",
          "31:         filePattern=\"{{infra_solr_log_dir}}/solr.log.%i\" >",
          "32:       <PatternLayout>",
          "33:         <Pattern>",
          "34:           %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n",
          "35:         </Pattern>",
          "36:       </PatternLayout>",
          "37:       <Policies>",
          "38:         <OnStartupTriggeringPolicy />",
          "39:         <SizeBasedTriggeringPolicy size=\"{{infra_log_maxfilesize}} MB\"/>",
          "40:       </Policies>",
          "41:       <DefaultRolloverStrategy max=\"{{infra_log_maxbackupindex}}\"/>",
          "42:     </RollingFile>",
          "44:     <RollingFile",
          "45:         name=\"SlowFile\"",
          "46:         fileName=\"{{infra_solr_log_dir}}/solr_slow_requests.log\"",
          "47:         filePattern=\"{{infra_solr_log_dir}}/solr_slow_requests.log.%i\" >",
          "48:       <PatternLayout>",
          "49:         <Pattern>",
          "50:           %d{ISO8601} [%t] %-5p [%X{collection} %X{shard} %X{replica} %X{core}] %C (%F:%L) - %m%n",
          "51:         </Pattern>",
          "52:       </PatternLayout>",
          "53:       <Policies>",
          "54:         <OnStartupTriggeringPolicy />",
          "55:         <SizeBasedTriggeringPolicy size=\"{{infra_log_maxfilesize}} MB\"/>",
          "56:       </Policies>",
          "57:       <DefaultRolloverStrategy max=\"{{infra_log_maxbackupindex}}\"/>",
          "58:     </RollingFile>",
          "60:   </Appenders>",
          "61:   <Loggers>",
          "62:     <Logger name=\"org.apache.hadoop\" level=\"warn\"/>",
          "63:     <Logger name=\"org.apache.solr.update.LoggingInfoStream\" level=\"off\"/>",
          "64:     <Logger name=\"org.apache.zookeeper\" level=\"warn\"/>",
          "65:     <Logger name=\"org.apache.solr.core.SolrCore.SlowRequest\" level=\"warn\" additivity=\"false\">",
          "66:       <AppenderRef ref=\"SlowFile\"/>",
          "67:     </Logger>",
          "69:     <Root level=\"warn\">",
          "70:       <AppenderRef ref=\"RollingFile\"/>",
          "71:       <!-- <AppenderRef ref=\"STDOUT\"/> -->",
          "72:     </Root>",
          "73:   </Loggers>",
          "74: </Configuration>",
          "",
          "---------------"
        ],
        "ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java||ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java": [
          "File: ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java -> ambari-server/src/test/java/org/apache/ambari/server/upgrade/UpgradeCatalog271Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import static org.apache.ambari.server.upgrade.UpgradeCatalog271.CLUSTERS_BLUEPRINT_PROVISIONING_STATE_COLUMN;",
          "22: import static org.apache.ambari.server.upgrade.UpgradeCatalog271.CLUSTERS_TABLE;",
          "23: import static org.easymock.EasyMock.anyObject;",
          "24: import static org.easymock.EasyMock.anyString;",
          "25: import static org.easymock.EasyMock.capture;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import static org.easymock.EasyMock.anyBoolean;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: import org.apache.ambari.server.controller.AmbariManagementController;",
          "42: import org.apache.ambari.server.controller.AmbariManagementControllerImpl;",
          "43: import org.apache.ambari.server.orm.DBAccessor;",
          "44: import org.apache.ambari.server.state.BlueprintProvisioningState;",
          "45: import org.apache.ambari.server.state.Cluster;",
          "46: import org.apache.ambari.server.state.Clusters;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: import org.apache.ambari.server.orm.dao.DaoUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:     Method updateRangerKmsDbUrl = UpgradeCatalog271.class.getDeclaredMethod(\"updateRangerKmsDbUrl\");",
          "93:     Method renameAmbariInfraInConfigGroups = UpgradeCatalog271.class.getDeclaredMethod(\"renameAmbariInfraInConfigGroups\");",
          "94:     Method removeLogSearchPatternConfigs = UpgradeCatalog271.class.getDeclaredMethod(\"removeLogSearchPatternConfigs\");",
          "96:     UpgradeCatalog271 upgradeCatalog271 = createMockBuilder(UpgradeCatalog271.class)",
          "97:       .addMockedMethod(updateRangerKmsDbUrl)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     Method updateSolrConfigurations = UpgradeCatalog271.class.getDeclaredMethod(\"updateSolrConfigurations\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:       .addMockedMethod(addNewConfigurationsFromXml)",
          "100:       .addMockedMethod(renameAmbariInfraInConfigGroups)",
          "101:       .addMockedMethod(removeLogSearchPatternConfigs)",
          "102:       .createMock();",
          "104:     upgradeCatalog271.addNewConfigurationsFromXml();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:       .addMockedMethod(updateSolrConfigurations)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "116:     upgradeCatalog271.removeLogSearchPatternConfigs();",
          "117:     expectLastCall().once();",
          "119:     replay(upgradeCatalog271);",
          "120:     upgradeCatalog271.executeDMLUpdates();",
          "121:     verify(upgradeCatalog271);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     upgradeCatalog271.updateSolrConfigurations();",
          "124:     expectLastCall().once();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "292:     Assert.assertEquals(updatedRangerKmsEnvConfig.get(\"ranger_kms_privelege_user_jdbc_url\"), \"jdbc:mysql://c6401.ambari.apache.org:3546\");",
          "293:   }",
          "295: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:   @Test",
          "303:   public void testUpdateSolrConfigurations() throws Exception {",
          "305:     EasyMockSupport easyMockSupport = new EasyMockSupport();",
          "307:     Clusters clusters = easyMockSupport.createNiceMock(Clusters.class);",
          "308:     final Cluster cluster = easyMockSupport.createNiceMock(Cluster.class);",
          "310:     Config mockedServiceLogSolrConfig = easyMockSupport.createNiceMock(Config.class);",
          "311:     Config mockedAudiitLogSolrConfig = easyMockSupport.createNiceMock(Config.class);",
          "312:     Config mockedSolrLog4JConfig = easyMockSupport.createNiceMock(Config.class);",
          "314:     Map<String, Config> allDummy = new HashMap<>();",
          "316:     Map<String, String> serviceLogProps = new HashMap<>();",
          "317:     serviceLogProps.put(\"content\", \"<luceneMatchVersion>7.3.1</luceneMatchVersion>\");",
          "318:     Map<String, String> auditLogProps = new HashMap<>();",
          "319:     auditLogProps.put(\"content\", \"<luceneMatchVersion>7.3.1</luceneMatchVersion>\");",
          "320:     Map<String, String> solrLog4jProps = new HashMap<>();",
          "321:     solrLog4jProps.put(\"content\", \"log4jContent\");",
          "323:     Injector injector = easyMockSupport.createNiceMock(Injector.class);",
          "324:     AmbariManagementControllerImpl controller = createMockBuilder(AmbariManagementControllerImpl.class)",
          "325:       .addMockedMethod(\"createConfiguration\")",
          "326:       .addMockedMethod(\"getClusters\", new Class[] { })",
          "327:       .addMockedMethod(\"createConfig\")",
          "328:       .createNiceMock();",
          "330:     DaoUtils daoUtilsMock = easyMockSupport.createNiceMock(DaoUtils.class);",
          "331:     Map<String, Cluster> clusterMap = new HashMap<>();",
          "332:     clusterMap.put(\"cl1\", cluster);",
          "333:     expect(injector.getInstance(AmbariManagementController.class)).andReturn(controller).anyTimes();",
          "334:     expect(injector.getInstance(DaoUtils.class)).andReturn(daoUtilsMock).anyTimes();",
          "335:     expect(controller.getClusters()).andReturn(clusters).anyTimes();",
          "336:     expect(clusters.getClusters()).andReturn(clusterMap).anyTimes();",
          "337:     expect(cluster.getDesiredConfigByType(\"logsearch-service_logs-solrconfig\")).andReturn(mockedServiceLogSolrConfig);",
          "338:     expect(cluster.getDesiredConfigByType(\"logsearch-audit_logs-solrconfig\")).andReturn(mockedAudiitLogSolrConfig);",
          "339:     expect(cluster.getDesiredConfigByType(\"infra-solr-log4j\")).andReturn(mockedSolrLog4JConfig);",
          "340:     expect(mockedServiceLogSolrConfig.getProperties()).andReturn(serviceLogProps).anyTimes();",
          "341:     expect(mockedAudiitLogSolrConfig.getProperties()).andReturn(auditLogProps).anyTimes();",
          "342:     expect(mockedSolrLog4JConfig.getProperties()).andReturn(solrLog4jProps).anyTimes();",
          "344:     replay(daoUtilsMock, controller, injector, clusters, cluster, mockedServiceLogSolrConfig, mockedAudiitLogSolrConfig, mockedSolrLog4JConfig);",
          "345:     UpgradeCatalog271 underTest = createMockBuilder(UpgradeCatalog271.class)",
          "346:       .withConstructor(Injector.class)",
          "347:       .withArgs(injector)",
          "348:       .addMockedMethod(\"updateConfigurationPropertiesForCluster\", Cluster.class, String.class, Map.class, boolean.class, boolean.class)",
          "349:       .createNiceMock();",
          "350:     underTest.updateConfigurationPropertiesForCluster(anyObject(Cluster.class), anyString(), anyObject(), anyBoolean(), anyBoolean());",
          "351:     expectLastCall().times(3);",
          "352:     replay(underTest);",
          "353:     underTest.updateSolrConfigurations();",
          "355:     easyMockSupport.verifyAll();",
          "356:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2abc05ccd76dc995923f7c0b1c3ea74fc7ba7f88",
      "candidate_info": {
        "commit_hash": "2abc05ccd76dc995923f7c0b1c3ea74fc7ba7f88",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/2abc05ccd76dc995923f7c0b1c3ea74fc7ba7f88",
        "files": [
          "ambari-server/conf/unix/log4j.properties"
        ],
        "message": "AMBARI-25176 Misconfiguration of jersey log in log4j.properties",
        "before_after_code_files": [
          "ambari-server/conf/unix/log4j.properties||ambari-server/conf/unix/log4j.properties"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/conf/unix/log4j.properties||ambari-server/conf/unix/log4j.properties": [
          "File: ambari-server/conf/unix/log4j.properties -> ambari-server/conf/unix/log4j.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: log4j.appender.eclipselink.layout.ConversionPattern=%m%n",
          "92: # Jersey",
          "93: log4j.logger.org.glassfish.jersey=WARN,file",
          "95: # Jetty",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: log4j.logger.com.sun.jersey=WARN,file",
          "",
          "---------------"
        ]
      }
    }
  ]
}