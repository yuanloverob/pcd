{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ae8a3e1a17449db30be7ec7b6c46981aa2ca2241",
      "candidate_info": {
        "commit_hash": "ae8a3e1a17449db30be7ec7b6c46981aa2ca2241",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ae8a3e1a17449db30be7ec7b6c46981aa2ca2241",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890821 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java||fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TrueTypeFont.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "457:     @Override",
          "458:     public String getName() throws IOException",
          "459:     {",
          "461:         {",
          "463:         }",
          "464:         else",
          "465:         {",
          "",
          "[Removed Lines]",
          "460:         if (getNaming() != null)",
          "462:             return getNaming().getPostScriptName();",
          "",
          "[Added Lines]",
          "460:         NamingTable namingTable = getNaming();",
          "461:         if (namingTable != null)",
          "463:             return namingTable.getPostScriptName();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "752:     {",
          "753:         try",
          "754:         {",
          "756:             {",
          "758:             }",
          "759:             else",
          "760:             {",
          "",
          "[Removed Lines]",
          "755:             if (getNaming() != null)",
          "757:                 return getNaming().getPostScriptName();",
          "",
          "[Added Lines]",
          "756:             NamingTable namingTable = getNaming();",
          "757:             if (namingTable != null)",
          "759:                 return namingTable.getPostScriptName();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ae21a4c93922a57d71d35be2d6253fd2808db38",
      "candidate_info": {
        "commit_hash": "3ae21a4c93922a57d71d35be2d6253fd2808db38",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3ae21a4c93922a57d71d35be2d6253fd2808db38",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5168: make non empty dash with only zero invisible\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888851 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java",
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java||pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java -> pdfbox/src/main/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:         COSArray dashArray = (COSArray) base0;",
          "59:         int dashPhase = ((COSNumber) base1).intValue();",
          "62:         for (COSBase base : dashArray)",
          "63:         {",
          "64:             if (base instanceof COSNumber)",
          "",
          "[Removed Lines]",
          "61:         boolean allZero = true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:                 COSNumber num = (COSNumber) base;",
          "67:                 if (num.floatValue() != 0)",
          "68:                 {",
          "70:                     break;",
          "71:                 }",
          "72:             }",
          "",
          "[Removed Lines]",
          "69:                     allZero = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:                 break;",
          "78:             }",
          "79:         }",
          "85:         context.setLineDashPattern(dashArray, dashPhase);",
          "86:     }",
          "",
          "[Removed Lines]",
          "80:         if (dashArray.size() > 0 && allZero)",
          "81:         {",
          "82:             LOG.warn(\"dash lengths all zero, ignored\");",
          "83:             dashArray = new COSArray();",
          "84:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "750:         float phaseStart = dashPattern.getPhase();",
          "751:         float[] dashArray = getDashArray(dashPattern);",
          "752:         phaseStart = transformWidth(phaseStart);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753:         boolean allZero = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "761:         {",
          "762:             for (int i = 0; i < dashArray.length; ++i)",
          "763:             {",
          "765:                 {",
          "766:                     dashArray = null;",
          "767:                     break;",
          "768:                 }",
          "769:             }",
          "770:         }",
          "771:         int lineCap = Math.min(2, Math.max(0, state.getLineCap()));",
          "",
          "[Removed Lines]",
          "764:                 if (Float.isInfinite(dashArray[i]) || Float.isNaN(dashArray[i]))",
          "",
          "[Added Lines]",
          "765:                 float dash = dashArray[i];",
          "766:                 if (Float.isInfinite(dash) || Float.isNaN(dash))",
          "769:                     allZero = false;",
          "772:                 if (dash != 0)",
          "773:                 {",
          "774:                     allZero = false;",
          "775:                 }",
          "776:             }",
          "777:             if (allZero)",
          "778:             {",
          "780:                 return new Stroke()",
          "781:                 {",
          "782:                     @Override",
          "783:                     public Shape createStrokedShape(Shape p)",
          "784:                     {",
          "785:                         return new Area();",
          "786:                     }",
          "787:                 };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cb01507b7d736a434ef0955d7d87671ae12951d",
      "candidate_info": {
        "commit_hash": "3cb01507b7d736a434ef0955d7d87671ae12951d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3cb01507b7d736a434ef0955d7d87671ae12951d",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ],
        "message": "PDFBOX-5045: remove test that isn't needed, the other test is enough\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884868 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroFormFlattenTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:         flattenAndCompare(sourceUrl, targetFileName);",
          "190:     }",
          "",
          "[Removed Lines]",
          "197:     public void testFlattenOpenOfficeForm() throws IOException",
          "198:     {",
          "199:         String sourceUrl = \"https://issues.apache.org/jira/secure/attachment/12839977/OpenOfficeForm.pdf\";",
          "200:         String targetFileName = \"OpenOfficeForm.pdf\";",
          "202:         flattenAndCompare(sourceUrl, targetFileName);",
          "203:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2b74de3dd1024efb589e680e07c8cf57fb2093f",
      "candidate_info": {
        "commit_hash": "d2b74de3dd1024efb589e680e07c8cf57fb2093f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d2b74de3dd1024efb589e680e07c8cf57fb2093f",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-4892: avoid redundant calculation, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890469 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1722:                 {",
          "1724:                     backdropImage = renderer.getPageImage();",
          "1728:                 }",
          "1729:                 else",
          "1730:                 {",
          "",
          "[Removed Lines]",
          "1725:                     needsBackdrop = backdropImage != null;",
          "1726:                     backdropX = minX;",
          "1727:                     backdropY = (backdropImage != null) ? (backdropImage.getHeight() - maxY) : 0;",
          "",
          "[Added Lines]",
          "1725:                     if (backdropImage == null)",
          "1726:                     {",
          "1727:                         needsBackdrop = false;",
          "1728:                     }",
          "1729:                     else",
          "1730:                     {",
          "1731:                         backdropX = minX;",
          "1732:                         backdropY = backdropImage.getHeight() - maxY;",
          "1733:                     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45fb9d2fb1cb13bbbf637badbf1feffce6e95167",
      "candidate_info": {
        "commit_hash": "45fb9d2fb1cb13bbbf637badbf1feffce6e95167",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/45fb9d2fb1cb13bbbf637badbf1feffce6e95167",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java"
        ],
        "message": "PDFBOX-4892: deep clone instead of shallow clone, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889701 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:     ShadedTriangle(Point2D[] p, float[][] c)",
          "59:     {",
          "61:         color = c.clone();",
          "62:         area = getArea(p[0], p[1], p[2]);",
          "63:         degree = calcDeg(p);",
          "",
          "[Removed Lines]",
          "60:         corner = p.clone();",
          "",
          "[Added Lines]",
          "60:         corner = new Point2D[3];",
          "61:         corner[0] = (Point2D) p[0].clone();",
          "62:         corner[1] = (Point2D) p[1].clone();",
          "63:         corner[2] = (Point2D) p[2].clone();",
          "",
          "---------------"
        ]
      }
    }
  ]
}