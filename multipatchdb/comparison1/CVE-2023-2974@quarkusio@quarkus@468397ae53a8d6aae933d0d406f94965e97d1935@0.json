{
  "cve_id": "CVE-2023-2974",
  "cve_desc": "A vulnerability was found in quarkus-core. This vulnerability occurs because the TLS protocol configured with quarkus.http.ssl.protocols is not enforced, and the client can force the selection of the weaker supported TLS protocol.",
  "repo": "quarkusio/quarkus",
  "patch_hash": "468397ae53a8d6aae933d0d406f94965e97d1935",
  "patch_info": {
    "commit_hash": "468397ae53a8d6aae933d0d406f94965e97d1935",
    "repo": "quarkusio/quarkus",
    "commit_url": "https://github.com/quarkusio/quarkus/commit/468397ae53a8d6aae933d0d406f94965e97d1935",
    "files": [
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
      "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
      "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
      "integration-tests/vertx-http/pom.xml",
      "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
    ],
    "message": "Merge pull request #34468 from cescoffier/cve-2023-2974\n\nEnforce the configured TLS version",
    "before_after_code_files": [
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
      "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
      "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
      "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
      "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
      "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
    ]
  },
  "patch_diff": {
    "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java": [
      "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "117:         for (String cipher : sslConfig.cipherSuites.orElse(Collections.emptyList())) {",
      "118:             options.addEnabledCipherSuite(cipher);",
      "119:         }",
      "126:         options.setClientAuth(sslConfig.clientAuth);",
      "127:         return false;",
      "128:     }",
      "",
      "[Removed Lines]",
      "121:         for (String protocol : sslConfig.protocols) {",
      "122:             if (!protocol.isEmpty()) {",
      "123:                 options.addEnabledSecureTransportProtocol(protocol);",
      "124:             }",
      "125:         }",
      "",
      "[Added Lines]",
      "120:         options.setEnabledSecureTransportProtocols(sslConfig.protocols);",
      "",
      "---------------"
    ],
    "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java": [
      "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.grpc.runtime;",
      "5: import org.eclipse.microprofile.config.ConfigProvider;",
      "",
      "[Removed Lines]",
      "3: import java.util.List;",
      "",
      "[Added Lines]",
      "3: import java.util.Set;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "36:                 || !isDefaultProtocols(ssl.protocols);",
      "37:     }",
      "40:         return protocols.size() == 2 && protocols.contains(\"TLSv1.3\") && protocols.contains(\"TLSv1.2\");",
      "41:     }",
      "",
      "[Removed Lines]",
      "39:     private static boolean isDefaultProtocols(List<String> protocols) {",
      "",
      "[Added Lines]",
      "39:     private static boolean isDefaultProtocols(Set<String> protocols) {",
      "",
      "---------------"
    ],
    "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java": [
      "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import java.nio.file.Path;",
      "4: import java.util.List;",
      "5: import java.util.Optional;",
      "7: import io.quarkus.runtime.annotations.ConfigGroup;",
      "8: import io.quarkus.runtime.annotations.ConfigItem;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: import java.util.Set;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:     public Optional<List<String>> cipherSuites;",
      "80:     @DefaultConverter",
      "81:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
      "",
      "[Removed Lines]",
      "82:     public List<String> protocols;",
      "",
      "[Added Lines]",
      "90:     public Set<String> protocols;",
      "",
      "---------------"
    ],
    "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java": [
      "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import java.util.List;",
      "4: import java.util.Optional;",
      "6: import io.quarkus.runtime.annotations.ConfigGroup;",
      "7: import io.quarkus.runtime.annotations.ConfigItem;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: import java.util.Set;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24:     public Optional<List<String>> cipherSuites;",
      "29:     @DefaultConverter",
      "30:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
      "",
      "[Removed Lines]",
      "31:     public List<String> protocols;",
      "",
      "[Added Lines]",
      "39:     public Set<String> protocols;",
      "",
      "---------------"
    ],
    "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java": [
      "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "119:             serverOptions.addEnabledCipherSuite(cipher);",
      "120:         }",
      "127:         serverOptions.setSsl(true);",
      "128:         serverOptions.setSni(sslConfig.sni);",
      "129:         int sslPort = httpConfiguration.determineSslPort(launchMode);",
      "",
      "[Removed Lines]",
      "122:         for (String protocol : sslConfig.protocols) {",
      "123:             if (!protocol.isEmpty()) {",
      "124:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
      "125:             }",
      "126:         }",
      "",
      "[Added Lines]",
      "122:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "224:             serverOptions.addEnabledCipherSuite(cipher);",
      "225:         }",
      "232:         serverOptions.setSsl(true);",
      "233:         serverOptions.setSni(sslConfig.sni);",
      "234:         int sslPort = httpConfiguration.determinePort(launchMode);",
      "",
      "[Removed Lines]",
      "227:         for (String protocol : sslConfig.protocols) {",
      "228:             if (!protocol.isEmpty()) {",
      "229:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
      "230:             }",
      "231:         }",
      "",
      "[Added Lines]",
      "223:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
      "",
      "---------------"
    ],
    "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java": [
      "File: integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java -> integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package io.quarkus.it.vertx;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "6: @Path(\"/hello\")",
      "7: public class HelloResource {",
      "9:     @GET",
      "10:     public String hello() {",
      "11:         return \"hello\";",
      "12:     }",
      "13: }",
      "",
      "---------------"
    ],
    "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java": [
      "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package io.quarkus.it.vertx;",
      "3: import java.util.Map;",
      "5: import io.quarkus.test.junit.QuarkusTestProfile;",
      "7: public class ServerWithTLS13Only implements QuarkusTestProfile {",
      "9:     @Override",
      "10:     public Map<String, String> getConfigOverrides() {",
      "11:         return Map.of(",
      "12:                 \"quarkus.http.ssl.protocols\", \"TLSv1.3\");",
      "13:     }",
      "14: }",
      "",
      "---------------"
    ],
    "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java": [
      "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package io.quarkus.it.vertx;",
      "3: import java.util.Set;",
      "4: import java.util.concurrent.CompletionException;",
      "6: import javax.net.ssl.SSLHandshakeException;",
      "8: import jakarta.inject.Inject;",
      "10: import org.junit.jupiter.api.Assertions;",
      "11: import org.junit.jupiter.api.Test;",
      "13: import io.quarkus.test.common.http.TestHTTPResource;",
      "14: import io.quarkus.test.junit.QuarkusTest;",
      "15: import io.vertx.core.net.JksOptions;",
      "16: import io.vertx.ext.web.client.WebClientOptions;",
      "17: import io.vertx.mutiny.core.Vertx;",
      "18: import io.vertx.mutiny.ext.web.client.WebClient;",
      "20: @QuarkusTest",
      "21: public class TlsProtocolVersionDefaultTestCase {",
      "23:     @TestHTTPResource(value = \"/hello\", ssl = true)",
      "24:     String url;",
      "26:     @Inject",
      "27:     Vertx vertx;",
      "29:     @Test",
      "30:     void testWithWebClientRequestingMultipleTlsVersions() {",
      "32:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "33:                 .setKeyStoreOptions(",
      "34:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "35:                 .setTrustStoreOptions(",
      "36:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "37:                 .setVerifyHost(false));",
      "38:         var resp = client.getAbs(url).sendAndAwait();",
      "39:         Assertions.assertEquals(200, resp.statusCode());",
      "40:     }",
      "42:     @Test",
      "43:     void testWithWebClientRequestingTls13() {",
      "45:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "46:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
      "47:                 .setKeyStoreOptions(",
      "48:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "49:                 .setTrustStoreOptions(",
      "50:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "51:                 .setVerifyHost(false));",
      "52:         var resp = client.getAbs(url).sendAndAwait();",
      "53:         Assertions.assertEquals(200, resp.statusCode());",
      "54:     }",
      "56:     @Test",
      "57:     void testWithWebClientRequestingTls12() {",
      "59:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "60:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
      "61:                 .setKeyStoreOptions(",
      "62:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "63:                 .setTrustStoreOptions(",
      "64:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "65:                 .setVerifyHost(false));",
      "66:         var resp = client.getAbs(url).sendAndAwait();",
      "67:         Assertions.assertEquals(200, resp.statusCode());",
      "68:     }",
      "70:     @Test",
      "71:     void testWithWebClientRequestingTls11() {",
      "73:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "74:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
      "75:                 .setKeyStoreOptions(",
      "76:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "77:                 .setTrustStoreOptions(",
      "78:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "79:                 .setVerifyHost(false));",
      "80:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
      "81:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
      "82:     }",
      "83: }",
      "",
      "---------------"
    ],
    "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java": [
      "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package io.quarkus.it.vertx;",
      "3: import java.util.Set;",
      "4: import java.util.concurrent.CompletionException;",
      "6: import javax.net.ssl.SSLHandshakeException;",
      "8: import jakarta.inject.Inject;",
      "10: import org.junit.jupiter.api.Assertions;",
      "11: import org.junit.jupiter.api.Test;",
      "13: import io.quarkus.test.common.http.TestHTTPResource;",
      "14: import io.quarkus.test.junit.QuarkusTest;",
      "15: import io.quarkus.test.junit.TestProfile;",
      "16: import io.vertx.core.net.JksOptions;",
      "17: import io.vertx.ext.web.client.WebClientOptions;",
      "18: import io.vertx.mutiny.core.Vertx;",
      "19: import io.vertx.mutiny.ext.web.client.WebClient;",
      "21: @QuarkusTest",
      "22: @TestProfile(ServerWithTLS13Only.class)",
      "23: public class TlsProtocolVersionSelectionTestCase {",
      "25:     @TestHTTPResource(value = \"/hello\", ssl = true)",
      "26:     String url;",
      "28:     @Inject",
      "29:     Vertx vertx;",
      "31:     @Test",
      "32:     void testWithWebClientRequestingMultipleTlsVersions() {",
      "34:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "35:                 .setKeyStoreOptions(",
      "36:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "37:                 .setTrustStoreOptions(",
      "38:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "39:                 .setVerifyHost(false));",
      "40:         var resp = client.getAbs(url).sendAndAwait();",
      "41:         Assertions.assertEquals(200, resp.statusCode());",
      "42:     }",
      "44:     @Test",
      "45:     void testWithWebClientRequestingTls13() {",
      "47:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "48:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
      "49:                 .setKeyStoreOptions(",
      "50:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "51:                 .setTrustStoreOptions(",
      "52:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "53:                 .setVerifyHost(false));",
      "54:         var resp = client.getAbs(url).sendAndAwait();",
      "55:         Assertions.assertEquals(200, resp.statusCode());",
      "56:     }",
      "58:     @Test",
      "59:     void testWithWebClientRequestingTls12() {",
      "61:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "62:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
      "63:                 .setKeyStoreOptions(",
      "64:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "65:                 .setTrustStoreOptions(",
      "66:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "67:                 .setVerifyHost(false));",
      "68:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
      "69:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
      "70:     }",
      "72:     @Test",
      "73:     void testWithWebClientRequestingTls11() {",
      "75:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
      "76:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
      "77:                 .setKeyStoreOptions(",
      "78:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
      "79:                 .setTrustStoreOptions(",
      "80:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
      "81:                 .setVerifyHost(false));",
      "82:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
      "83:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
      "84:     }",
      "85: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cdd9ce5bcc0cbbc3cc23a34f3c980fb2dff17616",
      "candidate_info": {
        "commit_hash": "cdd9ce5bcc0cbbc3cc23a34f3c980fb2dff17616",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/cdd9ce5bcc0cbbc3cc23a34f3c980fb2dff17616",
        "files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "integration-tests/vertx-http/pom.xml",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ],
        "message": "Enforce the configured TLS version\n\nFix https://access.redhat.com/security/cve/cve-2023-2974",
        "before_after_code_files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/34468"
        ],
        "olp_code_files": {
          "patch": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ],
          "candidate": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ]
        }
      },
      "candidate_diff": {
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:         for (String cipher : sslConfig.cipherSuites.orElse(Collections.emptyList())) {",
          "118:             options.addEnabledCipherSuite(cipher);",
          "119:         }",
          "126:         options.setClientAuth(sslConfig.clientAuth);",
          "127:         return false;",
          "128:     }",
          "",
          "[Removed Lines]",
          "121:         for (String protocol : sslConfig.protocols) {",
          "122:             if (!protocol.isEmpty()) {",
          "123:                 options.addEnabledSecureTransportProtocol(protocol);",
          "124:             }",
          "125:         }",
          "",
          "[Added Lines]",
          "120:         options.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------"
        ],
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcTestPortUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.quarkus.grpc.runtime;",
          "5: import org.eclipse.microprofile.config.ConfigProvider;",
          "",
          "[Removed Lines]",
          "3: import java.util.List;",
          "",
          "[Added Lines]",
          "3: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:                 || !isDefaultProtocols(ssl.protocols);",
          "37:     }",
          "40:         return protocols.size() == 2 && protocols.contains(\"TLSv1.3\") && protocols.contains(\"TLSv1.2\");",
          "41:     }",
          "",
          "[Removed Lines]",
          "39:     private static boolean isDefaultProtocols(List<String> protocols) {",
          "",
          "[Added Lines]",
          "39:     private static boolean isDefaultProtocols(Set<String> protocols) {",
          "",
          "---------------"
        ],
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import java.nio.file.Path;",
          "4: import java.util.List;",
          "5: import java.util.Optional;",
          "7: import io.quarkus.runtime.annotations.ConfigGroup;",
          "8: import io.quarkus.runtime.annotations.ConfigItem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     public Optional<List<String>> cipherSuites;",
          "80:     @DefaultConverter",
          "81:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
          "",
          "[Removed Lines]",
          "82:     public List<String> protocols;",
          "",
          "[Added Lines]",
          "90:     public Set<String> protocols;",
          "",
          "---------------"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import java.util.List;",
          "4: import java.util.Optional;",
          "6: import io.quarkus.runtime.annotations.ConfigGroup;",
          "7: import io.quarkus.runtime.annotations.ConfigItem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public Optional<List<String>> cipherSuites;",
          "29:     @DefaultConverter",
          "30:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
          "",
          "[Removed Lines]",
          "31:     public List<String> protocols;",
          "",
          "[Added Lines]",
          "39:     public Set<String> protocols;",
          "",
          "---------------"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:             serverOptions.addEnabledCipherSuite(cipher);",
          "120:         }",
          "127:         serverOptions.setSsl(true);",
          "128:         serverOptions.setSni(sslConfig.sni);",
          "129:         int sslPort = httpConfiguration.determineSslPort(launchMode);",
          "",
          "[Removed Lines]",
          "122:         for (String protocol : sslConfig.protocols) {",
          "123:             if (!protocol.isEmpty()) {",
          "124:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
          "125:             }",
          "126:         }",
          "",
          "[Added Lines]",
          "122:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:             serverOptions.addEnabledCipherSuite(cipher);",
          "225:         }",
          "232:         serverOptions.setSsl(true);",
          "233:         serverOptions.setSni(sslConfig.sni);",
          "234:         int sslPort = httpConfiguration.determinePort(launchMode);",
          "",
          "[Removed Lines]",
          "227:         for (String protocol : sslConfig.protocols) {",
          "228:             if (!protocol.isEmpty()) {",
          "229:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
          "230:             }",
          "231:         }",
          "",
          "[Added Lines]",
          "223:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java": [
          "File: integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java -> integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import jakarta.ws.rs.GET;",
          "4: import jakarta.ws.rs.Path;",
          "6: @Path(\"/hello\")",
          "7: public class HelloResource {",
          "9:     @GET",
          "10:     public String hello() {",
          "11:         return \"hello\";",
          "12:     }",
          "13: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Map;",
          "5: import io.quarkus.test.junit.QuarkusTestProfile;",
          "7: public class ServerWithTLS13Only implements QuarkusTestProfile {",
          "9:     @Override",
          "10:     public Map<String, String> getConfigOverrides() {",
          "11:         return Map.of(",
          "12:                 \"quarkus.http.ssl.protocols\", \"TLSv1.3\");",
          "13:     }",
          "14: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.net.ssl.SSLHandshakeException;",
          "8: import jakarta.inject.Inject;",
          "10: import org.junit.jupiter.api.Assertions;",
          "11: import org.junit.jupiter.api.Test;",
          "13: import io.quarkus.test.common.http.TestHTTPResource;",
          "14: import io.quarkus.test.junit.QuarkusTest;",
          "15: import io.vertx.core.net.JksOptions;",
          "16: import io.vertx.ext.web.client.WebClientOptions;",
          "17: import io.vertx.mutiny.core.Vertx;",
          "18: import io.vertx.mutiny.ext.web.client.WebClient;",
          "20: @QuarkusTest",
          "21: public class TlsProtocolVersionDefaultTestCase {",
          "23:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "24:     String url;",
          "26:     @Inject",
          "27:     Vertx vertx;",
          "29:     @Test",
          "30:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "32:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "33:                 .setKeyStoreOptions(",
          "34:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "35:                 .setTrustStoreOptions(",
          "36:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "37:                 .setVerifyHost(false));",
          "38:         var resp = client.getAbs(url).sendAndAwait();",
          "39:         Assertions.assertEquals(200, resp.statusCode());",
          "40:     }",
          "42:     @Test",
          "43:     void testWithWebClientRequestingTls13() {",
          "45:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "46:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "47:                 .setKeyStoreOptions(",
          "48:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "49:                 .setTrustStoreOptions(",
          "50:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "51:                 .setVerifyHost(false));",
          "52:         var resp = client.getAbs(url).sendAndAwait();",
          "53:         Assertions.assertEquals(200, resp.statusCode());",
          "54:     }",
          "56:     @Test",
          "57:     void testWithWebClientRequestingTls12() {",
          "59:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "60:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "61:                 .setKeyStoreOptions(",
          "62:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "63:                 .setTrustStoreOptions(",
          "64:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "65:                 .setVerifyHost(false));",
          "66:         var resp = client.getAbs(url).sendAndAwait();",
          "67:         Assertions.assertEquals(200, resp.statusCode());",
          "68:     }",
          "70:     @Test",
          "71:     void testWithWebClientRequestingTls11() {",
          "73:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "74:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "75:                 .setKeyStoreOptions(",
          "76:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "77:                 .setTrustStoreOptions(",
          "78:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "79:                 .setVerifyHost(false));",
          "80:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "81:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "82:     }",
          "83: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.net.ssl.SSLHandshakeException;",
          "8: import jakarta.inject.Inject;",
          "10: import org.junit.jupiter.api.Assertions;",
          "11: import org.junit.jupiter.api.Test;",
          "13: import io.quarkus.test.common.http.TestHTTPResource;",
          "14: import io.quarkus.test.junit.QuarkusTest;",
          "15: import io.quarkus.test.junit.TestProfile;",
          "16: import io.vertx.core.net.JksOptions;",
          "17: import io.vertx.ext.web.client.WebClientOptions;",
          "18: import io.vertx.mutiny.core.Vertx;",
          "19: import io.vertx.mutiny.ext.web.client.WebClient;",
          "21: @QuarkusTest",
          "22: @TestProfile(ServerWithTLS13Only.class)",
          "23: public class TlsProtocolVersionSelectionTestCase {",
          "25:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "26:     String url;",
          "28:     @Inject",
          "29:     Vertx vertx;",
          "31:     @Test",
          "32:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "34:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "35:                 .setKeyStoreOptions(",
          "36:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "37:                 .setTrustStoreOptions(",
          "38:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "39:                 .setVerifyHost(false));",
          "40:         var resp = client.getAbs(url).sendAndAwait();",
          "41:         Assertions.assertEquals(200, resp.statusCode());",
          "42:     }",
          "44:     @Test",
          "45:     void testWithWebClientRequestingTls13() {",
          "47:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "48:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "49:                 .setKeyStoreOptions(",
          "50:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "51:                 .setTrustStoreOptions(",
          "52:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "53:                 .setVerifyHost(false));",
          "54:         var resp = client.getAbs(url).sendAndAwait();",
          "55:         Assertions.assertEquals(200, resp.statusCode());",
          "56:     }",
          "58:     @Test",
          "59:     void testWithWebClientRequestingTls12() {",
          "61:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "62:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "63:                 .setKeyStoreOptions(",
          "64:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "65:                 .setTrustStoreOptions(",
          "66:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "67:                 .setVerifyHost(false));",
          "68:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "69:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "70:     }",
          "72:     @Test",
          "73:     void testWithWebClientRequestingTls11() {",
          "75:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "76:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "77:                 .setKeyStoreOptions(",
          "78:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "79:                 .setTrustStoreOptions(",
          "80:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "81:                 .setVerifyHost(false));",
          "82:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "83:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "84:     }",
          "85: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40d0c0151e6b449301ce344a597bd2064bfd84ed",
      "candidate_info": {
        "commit_hash": "40d0c0151e6b449301ce344a597bd2064bfd84ed",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/40d0c0151e6b449301ce344a597bd2064bfd84ed",
        "files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "integration-tests/vertx-http/pom.xml",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ],
        "message": "Enforce the configured TLS version\n\nFix https://access.redhat.com/security/cve/cve-2023-2974\n\n(cherry picked from commit cdd9ce5bcc0cbbc3cc23a34f3c980fb2dff17616)",
        "before_after_code_files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ],
          "candidate": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ]
        }
      },
      "candidate_diff": {
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:         for (String cipher : sslConfig.cipherSuites.orElse(Collections.emptyList())) {",
          "118:             options.addEnabledCipherSuite(cipher);",
          "119:         }",
          "126:         options.setClientAuth(sslConfig.clientAuth);",
          "127:         return false;",
          "128:     }",
          "",
          "[Removed Lines]",
          "121:         for (String protocol : sslConfig.protocols) {",
          "122:             if (!protocol.isEmpty()) {",
          "123:                 options.addEnabledSecureTransportProtocol(protocol);",
          "124:             }",
          "125:         }",
          "",
          "[Added Lines]",
          "120:         options.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------"
        ],
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import java.nio.file.Path;",
          "4: import java.util.List;",
          "5: import java.util.Optional;",
          "7: import io.quarkus.runtime.annotations.ConfigGroup;",
          "8: import io.quarkus.runtime.annotations.ConfigItem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     public Optional<List<String>> cipherSuites;",
          "80:     @DefaultConverter",
          "81:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
          "",
          "[Removed Lines]",
          "82:     public List<String> protocols;",
          "",
          "[Added Lines]",
          "90:     public Set<String> protocols;",
          "",
          "---------------"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import java.util.List;",
          "4: import java.util.Optional;",
          "6: import io.quarkus.runtime.annotations.ConfigGroup;",
          "7: import io.quarkus.runtime.annotations.ConfigItem;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:     public Optional<List<String>> cipherSuites;",
          "29:     @DefaultConverter",
          "30:     @ConfigItem(defaultValue = \"TLSv1.3,TLSv1.2\")",
          "",
          "[Removed Lines]",
          "31:     public List<String> protocols;",
          "",
          "[Added Lines]",
          "39:     public Set<String> protocols;",
          "",
          "---------------"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/options/HttpServerOptionsUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:             serverOptions.addEnabledCipherSuite(cipher);",
          "120:         }",
          "127:         serverOptions.setSsl(true);",
          "128:         serverOptions.setSni(sslConfig.sni);",
          "129:         int sslPort = httpConfiguration.determineSslPort(launchMode);",
          "",
          "[Removed Lines]",
          "122:         for (String protocol : sslConfig.protocols) {",
          "123:             if (!protocol.isEmpty()) {",
          "124:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
          "125:             }",
          "126:         }",
          "",
          "[Added Lines]",
          "122:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:             serverOptions.addEnabledCipherSuite(cipher);",
          "225:         }",
          "232:         serverOptions.setSsl(true);",
          "233:         serverOptions.setSni(sslConfig.sni);",
          "234:         int sslPort = httpConfiguration.determinePort(launchMode);",
          "",
          "[Removed Lines]",
          "227:         for (String protocol : sslConfig.protocols) {",
          "228:             if (!protocol.isEmpty()) {",
          "229:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
          "230:             }",
          "231:         }",
          "",
          "[Added Lines]",
          "223:         serverOptions.setEnabledSecureTransportProtocols(sslConfig.protocols);",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java": [
          "File: integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java -> integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import jakarta.ws.rs.GET;",
          "4: import jakarta.ws.rs.Path;",
          "6: @Path(\"/hello\")",
          "7: public class HelloResource {",
          "9:     @GET",
          "10:     public String hello() {",
          "11:         return \"hello\";",
          "12:     }",
          "13: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Map;",
          "5: import io.quarkus.test.junit.QuarkusTestProfile;",
          "7: public class ServerWithTLS13Only implements QuarkusTestProfile {",
          "9:     @Override",
          "10:     public Map<String, String> getConfigOverrides() {",
          "11:         return Map.of(",
          "12:                 \"quarkus.http.ssl.protocols\", \"TLSv1.3\");",
          "13:     }",
          "14: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.net.ssl.SSLHandshakeException;",
          "8: import jakarta.inject.Inject;",
          "10: import org.junit.jupiter.api.Assertions;",
          "11: import org.junit.jupiter.api.Test;",
          "13: import io.quarkus.test.common.http.TestHTTPResource;",
          "14: import io.quarkus.test.junit.QuarkusTest;",
          "15: import io.vertx.core.net.JksOptions;",
          "16: import io.vertx.ext.web.client.WebClientOptions;",
          "17: import io.vertx.mutiny.core.Vertx;",
          "18: import io.vertx.mutiny.ext.web.client.WebClient;",
          "20: @QuarkusTest",
          "21: public class TlsProtocolVersionDefaultTestCase {",
          "23:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "24:     String url;",
          "26:     @Inject",
          "27:     Vertx vertx;",
          "29:     @Test",
          "30:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "32:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "33:                 .setKeyStoreOptions(",
          "34:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "35:                 .setTrustStoreOptions(",
          "36:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "37:                 .setVerifyHost(false));",
          "38:         var resp = client.getAbs(url).sendAndAwait();",
          "39:         Assertions.assertEquals(200, resp.statusCode());",
          "40:     }",
          "42:     @Test",
          "43:     void testWithWebClientRequestingTls13() {",
          "45:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "46:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "47:                 .setKeyStoreOptions(",
          "48:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "49:                 .setTrustStoreOptions(",
          "50:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "51:                 .setVerifyHost(false));",
          "52:         var resp = client.getAbs(url).sendAndAwait();",
          "53:         Assertions.assertEquals(200, resp.statusCode());",
          "54:     }",
          "56:     @Test",
          "57:     void testWithWebClientRequestingTls12() {",
          "59:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "60:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "61:                 .setKeyStoreOptions(",
          "62:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "63:                 .setTrustStoreOptions(",
          "64:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "65:                 .setVerifyHost(false));",
          "66:         var resp = client.getAbs(url).sendAndAwait();",
          "67:         Assertions.assertEquals(200, resp.statusCode());",
          "68:     }",
          "70:     @Test",
          "71:     void testWithWebClientRequestingTls11() {",
          "73:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "74:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "75:                 .setKeyStoreOptions(",
          "76:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "77:                 .setTrustStoreOptions(",
          "78:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "79:                 .setVerifyHost(false));",
          "80:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "81:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "82:     }",
          "83: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.net.ssl.SSLHandshakeException;",
          "8: import jakarta.inject.Inject;",
          "10: import org.junit.jupiter.api.Assertions;",
          "11: import org.junit.jupiter.api.Test;",
          "13: import io.quarkus.test.common.http.TestHTTPResource;",
          "14: import io.quarkus.test.junit.QuarkusTest;",
          "15: import io.quarkus.test.junit.TestProfile;",
          "16: import io.vertx.core.net.JksOptions;",
          "17: import io.vertx.ext.web.client.WebClientOptions;",
          "18: import io.vertx.mutiny.core.Vertx;",
          "19: import io.vertx.mutiny.ext.web.client.WebClient;",
          "21: @QuarkusTest",
          "22: @TestProfile(ServerWithTLS13Only.class)",
          "23: public class TlsProtocolVersionSelectionTestCase {",
          "25:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "26:     String url;",
          "28:     @Inject",
          "29:     Vertx vertx;",
          "31:     @Test",
          "32:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "34:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "35:                 .setKeyStoreOptions(",
          "36:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "37:                 .setTrustStoreOptions(",
          "38:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "39:                 .setVerifyHost(false));",
          "40:         var resp = client.getAbs(url).sendAndAwait();",
          "41:         Assertions.assertEquals(200, resp.statusCode());",
          "42:     }",
          "44:     @Test",
          "45:     void testWithWebClientRequestingTls13() {",
          "47:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "48:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "49:                 .setKeyStoreOptions(",
          "50:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "51:                 .setTrustStoreOptions(",
          "52:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "53:                 .setVerifyHost(false));",
          "54:         var resp = client.getAbs(url).sendAndAwait();",
          "55:         Assertions.assertEquals(200, resp.statusCode());",
          "56:     }",
          "58:     @Test",
          "59:     void testWithWebClientRequestingTls12() {",
          "61:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "62:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "63:                 .setKeyStoreOptions(",
          "64:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "65:                 .setTrustStoreOptions(",
          "66:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "67:                 .setVerifyHost(false));",
          "68:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "69:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "70:     }",
          "72:     @Test",
          "73:     void testWithWebClientRequestingTls11() {",
          "75:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "76:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "77:                 .setKeyStoreOptions(",
          "78:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "79:                 .setTrustStoreOptions(",
          "80:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "81:                 .setVerifyHost(false));",
          "82:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "83:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "84:     }",
          "85: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5fc95429199629b189b61a78f3d8da76f75ed86",
      "candidate_info": {
        "commit_hash": "d5fc95429199629b189b61a78f3d8da76f75ed86",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/d5fc95429199629b189b61a78f3d8da76f75ed86",
        "files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java",
          "integration-tests/vertx-http/pom.xml",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ],
        "message": "Enforce the configured TLS version\n\nFix https://access.redhat.com/security/cve/cve-2023-2974",
        "before_after_code_files": [
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
          "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java",
          "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ],
          "candidate": [
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
            "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java",
            "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java",
            "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
            "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java"
          ]
        }
      },
      "candidate_diff": {
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/GrpcSslUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import java.util.Arrays;",
          "9: import java.util.Collections;",
          "10: import java.util.Optional;",
          "12: import org.jboss.logging.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:         for (String cipher : sslConfig.cipherSuites.orElse(Collections.emptyList())) {",
          "115:             options.addEnabledCipherSuite(cipher);",
          "116:         }",
          "123:         options.setClientAuth(sslConfig.clientAuth);",
          "124:         return false;",
          "125:     }",
          "",
          "[Removed Lines]",
          "118:         for (String protocol : sslConfig.protocols) {",
          "119:             if (!protocol.isEmpty()) {",
          "120:                 options.addEnabledSecureTransportProtocol(protocol);",
          "121:             }",
          "122:         }",
          "",
          "[Added Lines]",
          "118:         options.setEnabledSecureTransportProtocols(Set.copyOf(sslConfig.protocols));",
          "",
          "---------------"
        ],
        "extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java||extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java": [
          "File: extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java -> extensions/grpc/runtime/src/main/java/io/quarkus/grpc/runtime/config/SslServerConfig.java"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ServerSslConfig.java"
        ],
        "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java||extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java": [
          "File: extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java -> extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: import java.net.URISyntaxException;",
          "12: import java.nio.file.Files;",
          "13: import java.nio.file.Path;",
          "24: import java.util.concurrent.CompletableFuture;",
          "25: import java.util.concurrent.CountDownLatch;",
          "26: import java.util.concurrent.ExecutionException;",
          "",
          "[Removed Lines]",
          "14: import java.util.ArrayList;",
          "15: import java.util.Arrays;",
          "16: import java.util.Collections;",
          "17: import java.util.HashMap;",
          "18: import java.util.List;",
          "19: import java.util.Locale;",
          "20: import java.util.Map;",
          "21: import java.util.Objects;",
          "22: import java.util.Optional;",
          "23: import java.util.TreeMap;",
          "",
          "[Added Lines]",
          "14: import java.util.*;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "890:             serverOptions.addEnabledCipherSuite(cipher);",
          "891:         }",
          "898:         serverOptions.setSsl(true);",
          "899:         serverOptions.setSni(sslConfig.sni);",
          "900:         int sslPort = httpConfiguration.determineSslPort(launchMode);",
          "",
          "[Removed Lines]",
          "893:         for (String protocol : sslConfig.protocols) {",
          "894:             if (!protocol.isEmpty()) {",
          "895:                 serverOptions.addEnabledSecureTransportProtocol(protocol);",
          "896:             }",
          "897:         }",
          "",
          "[Added Lines]",
          "884:         serverOptions.setEnabledSecureTransportProtocols(Set.copyOf(sslConfig.protocols));",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java||integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java": [
          "File: integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java -> integration-tests/vertx-http/src/main/java/io/quarkus/it/vertx/HelloResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import javax.ws.rs.GET;",
          "4: import javax.ws.rs.Path;",
          "6: @Path(\"/hello\")",
          "7: public class HelloResource {",
          "8:     @GET",
          "9:     public String hello() {",
          "10:         return \"hello\";",
          "11:     }",
          "12: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/ServerWithTLS13Only.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Map;",
          "5: import io.quarkus.test.junit.QuarkusTestProfile;",
          "7: public class ServerWithTLS13Only implements QuarkusTestProfile {",
          "9:     @Override",
          "10:     public Map<String, String> getConfigOverrides() {",
          "11:         return Map.of(",
          "12:                 \"quarkus.http.ssl.protocols\", \"TLSv1.3\");",
          "13:     }",
          "14: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionDefaultTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.inject.Inject;",
          "7: import javax.net.ssl.SSLHandshakeException;",
          "9: import org.junit.jupiter.api.Assertions;",
          "10: import org.junit.jupiter.api.Test;",
          "12: import io.quarkus.test.common.http.TestHTTPResource;",
          "13: import io.quarkus.test.junit.QuarkusTest;",
          "14: import io.vertx.core.net.JksOptions;",
          "15: import io.vertx.ext.web.client.WebClientOptions;",
          "16: import io.vertx.mutiny.core.Vertx;",
          "17: import io.vertx.mutiny.ext.web.client.WebClient;",
          "19: @QuarkusTest",
          "20: public class TlsProtocolVersionDefaultTestCase {",
          "22:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "23:     String url;",
          "25:     @Inject",
          "26:     Vertx vertx;",
          "28:     @Test",
          "29:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "31:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "32:                 .setKeyStoreOptions(",
          "33:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "34:                 .setTrustStoreOptions(",
          "35:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "36:                 .setVerifyHost(false));",
          "37:         var resp = client.getAbs(url).sendAndAwait();",
          "38:         Assertions.assertEquals(200, resp.statusCode());",
          "39:     }",
          "41:     @Test",
          "42:     void testWithWebClientRequestingTls13() {",
          "44:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "45:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "46:                 .setKeyStoreOptions(",
          "47:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "48:                 .setTrustStoreOptions(",
          "49:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "50:                 .setVerifyHost(false));",
          "51:         var resp = client.getAbs(url).sendAndAwait();",
          "52:         Assertions.assertEquals(200, resp.statusCode());",
          "53:     }",
          "55:     @Test",
          "56:     void testWithWebClientRequestingTls12() {",
          "58:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "59:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "60:                 .setKeyStoreOptions(",
          "61:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "62:                 .setTrustStoreOptions(",
          "63:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "64:                 .setVerifyHost(false));",
          "65:         var resp = client.getAbs(url).sendAndAwait();",
          "66:         Assertions.assertEquals(200, resp.statusCode());",
          "67:     }",
          "69:     @Test",
          "70:     void testWithWebClientRequestingTls12And13() {",
          "72:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "73:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\", \"TLSv1.3\"))",
          "74:                 .setKeyStoreOptions(",
          "75:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "76:                 .setTrustStoreOptions(",
          "77:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "78:                 .setVerifyHost(false));",
          "79:         var resp = client.getAbs(url).sendAndAwait();",
          "80:         Assertions.assertEquals(200, resp.statusCode());",
          "81:     }",
          "83:     @Test",
          "84:     void testWithWebClientRequestingTls11() {",
          "86:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "87:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "88:                 .setKeyStoreOptions(",
          "89:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "90:                 .setTrustStoreOptions(",
          "91:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "92:                 .setVerifyHost(false));",
          "93:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "94:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "95:     }",
          "96: }",
          "",
          "---------------"
        ],
        "integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java||integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java": [
          "File: integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java -> integration-tests/vertx-http/src/test/java/io/quarkus/it/vertx/TlsProtocolVersionSelectionTestCase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.it.vertx;",
          "3: import java.util.Set;",
          "4: import java.util.concurrent.CompletionException;",
          "6: import javax.inject.Inject;",
          "7: import javax.net.ssl.SSLHandshakeException;",
          "9: import org.junit.jupiter.api.Assertions;",
          "10: import org.junit.jupiter.api.Test;",
          "12: import io.quarkus.test.common.http.TestHTTPResource;",
          "13: import io.quarkus.test.junit.QuarkusTest;",
          "14: import io.quarkus.test.junit.TestProfile;",
          "15: import io.vertx.core.net.JksOptions;",
          "16: import io.vertx.ext.web.client.WebClientOptions;",
          "17: import io.vertx.mutiny.core.Vertx;",
          "18: import io.vertx.mutiny.ext.web.client.WebClient;",
          "20: @QuarkusTest",
          "21: @TestProfile(ServerWithTLS13Only.class)",
          "22: public class TlsProtocolVersionSelectionTestCase {",
          "24:     @TestHTTPResource(value = \"/hello\", ssl = true)",
          "25:     String url;",
          "27:     @Inject",
          "28:     Vertx vertx;",
          "30:     @Test",
          "31:     void testWithWebClientRequestingMultipleTlsVersions() {",
          "33:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "34:                 .setKeyStoreOptions(",
          "35:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "36:                 .setTrustStoreOptions(",
          "37:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "38:                 .setVerifyHost(false));",
          "39:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "40:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "41:     }",
          "43:     @Test",
          "44:     void testWithWebClientRequestingTls13() {",
          "46:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "47:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.3\"))",
          "48:                 .setKeyStoreOptions(",
          "49:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "50:                 .setTrustStoreOptions(",
          "51:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "52:                 .setVerifyHost(false));",
          "53:         var resp = client.getAbs(url).sendAndAwait();",
          "54:         Assertions.assertEquals(200, resp.statusCode());",
          "55:     }",
          "57:     @Test",
          "58:     void testWithWebClientRequestingTls12And13() {",
          "60:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "61:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\", \"TLSv1.3\"))",
          "62:                 .setKeyStoreOptions(",
          "63:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "64:                 .setTrustStoreOptions(",
          "65:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "66:                 .setVerifyHost(false));",
          "67:         var resp = client.getAbs(url).sendAndAwait();",
          "68:         Assertions.assertEquals(200, resp.statusCode());",
          "69:     }",
          "71:     @Test",
          "72:     void testWithWebClientRequestingTls12() {",
          "74:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "75:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.2\"))",
          "76:                 .setKeyStoreOptions(",
          "77:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "78:                 .setTrustStoreOptions(",
          "79:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "80:                 .setVerifyHost(false));",
          "81:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "82:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "83:     }",
          "85:     @Test",
          "86:     void testWithWebClientRequestingTls11() {",
          "88:         WebClient client = WebClient.create(vertx, new WebClientOptions().setSsl(true)",
          "89:                 .setEnabledSecureTransportProtocols(Set.of(\"TLSv1.1\"))",
          "90:                 .setKeyStoreOptions(",
          "91:                         new JksOptions().setPath(\"src/test/resources/client-keystore-1.jks\").setPassword(\"password\"))",
          "92:                 .setTrustStoreOptions(",
          "93:                         new JksOptions().setPath(\"src/test/resources/client-truststore.jks\").setPassword(\"password\"))",
          "94:                 .setVerifyHost(false));",
          "95:         Throwable exception = Assertions.assertThrows(CompletionException.class, () -> client.getAbs(url).sendAndAwait());",
          "96:         Assertions.assertTrue(exception.getCause() instanceof SSLHandshakeException);",
          "97:     }",
          "98: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}