{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "edb999fc462e76702d1de69f117752a81f386557",
      "candidate_info": {
        "commit_hash": "edb999fc462e76702d1de69f117752a81f386557",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/edb999fc462e76702d1de69f117752a81f386557",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java"
        ],
        "message": "PDFBOX-5135: don't ignore glyphs with 0 contours because these may be used by composite glyphs\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887822 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java -> fontbox/src/main/java/org/apache/fontbox/ttf/GlyfSimpleDescript.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:     private short[] yCoordinates;",
          "41:     private final int pointCount;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:     GlyfSimpleDescript() throws IOException",
          "49:     {",
          "50:         super((short) 0, null);",
          "51:         pointCount = 0;",
          "52:     }",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java -> fontbox/src/main/java/org/apache/fontbox/ttf/GlyphData.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:             glyphDescription = new GlyfCompositeDescript(data, glyphTable);",
          "66:         }",
          "67:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     void initEmptyData() throws IOException",
          "75:     {",
          "76:         glyphDescription = new GlyfSimpleDescript();",
          "77:         boundingBox = new BoundingBox();",
          "78:     }",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/GlyphTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     public GlyphData[] getGlyphs() throws IOException",
          "87:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     @Deprecated",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:             return glyphs[gid];",
          "162:         }",
          "166:         synchronized (data)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:         GlyphData glyph;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "171:             if (offsets[gid] == offsets[gid + 1])",
          "172:             {",
          "175:             }",
          "187:             if (glyphs != null && glyphs[gid] == null && cached < MAX_CACHED_GLYPHS)",
          "188:             {",
          "",
          "[Removed Lines]",
          "174:                 return null;",
          "178:             long currentPosition = data.getCurrentPosition();",
          "180:             data.seek(getOffset() + offsets[gid]);",
          "182:             GlyphData glyph = getGlyphData(gid);",
          "185:             data.seek(currentPosition);",
          "",
          "[Added Lines]",
          "181:                 glyph = new GlyphData();",
          "182:                 glyph.initEmptyData();",
          "184:             else",
          "185:             {",
          "187:                 long currentPosition = data.getCurrentPosition();",
          "189:                 data.seek(getOffset() + offsets[gid]);",
          "191:                 glyph = getGlyphData(gid);",
          "194:                 data.seek(currentPosition);",
          "195:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c557f046bf15c190388c6f067b7bfa82dd38c79",
      "candidate_info": {
        "commit_hash": "0c557f046bf15c190388c6f067b7bfa82dd38c79",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/0c557f046bf15c190388c6f067b7bfa82dd38c79",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java",
          "fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ],
        "message": "PDFBOX-4892: fix typos, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887277 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java",
          "fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java||fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/ExtractMetadata.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:                     }",
          "82:                     catch (XmpParsingException e)",
          "83:                     {",
          "85:                                 + e.getMessage());",
          "86:                     }",
          "87:                 }",
          "",
          "[Removed Lines]",
          "84:                         System.err.println(\"An error ouccred when parsing the meta data: \"",
          "",
          "[Added Lines]",
          "84:                         System.err.println(\"An error occurred when parsing the metadata: \"",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java||fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java -> fontbox/src/main/java/org/apache/fontbox/afm/AFMParser.java"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:                 return scriptingHandler.format((PDActionJavaScript) field.getActions().getF(), apValue);",
          "242:             } else {",
          "243:                 LOG.info(",
          "245:                 return apValue;",
          "246:             }",
          "247:         }",
          "",
          "[Removed Lines]",
          "244:                         \"Field contains a formatting action but no SriptingHandler has been supplied - formatted value might be incorrect\");",
          "",
          "[Added Lines]",
          "244:                         \"Field contains a formatting action but no ScriptingHandler has been supplied - formatted value might be incorrect\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "562b05c36f600a11021bb9fc1bcfad6dedee1e59",
      "candidate_info": {
        "commit_hash": "562b05c36f600a11021bb9fc1bcfad6dedee1e59",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/562b05c36f600a11021bb9fc1bcfad6dedee1e59",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ],
        "message": "PDFBOX-4892: refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881653 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "764:     private boolean resolveNeedsTranslation(PDAppearanceStream appearanceStream)",
          "765:     {",
          "766:         PDResources resources = appearanceStream.getResources();",
          "768:         {",
          "772:             {",
          "774:                 {",
          "779:                     {",
          "787:                     }",
          "788:                 }",
          "794:             }",
          "795:         }",
          "",
          "[Removed Lines]",
          "767:         if (resources != null && resources.getXObjectNames().iterator().hasNext())",
          "769:             Iterator<COSName> xObjectNames = resources.getXObjectNames().iterator();",
          "771:             while (xObjectNames.hasNext())",
          "773:                 try",
          "777:                     PDXObject xObject = resources.getXObject(xObjectNames.next());",
          "778:                     if (xObject instanceof PDFormXObject)",
          "780:                         PDRectangle bbox = ((PDFormXObject)xObject).getBBox();",
          "781:                         float llX = bbox.getLowerLeftX();",
          "782:                         float llY = bbox.getLowerLeftY();",
          "783:                         if (Float.compare(llX, 0) != 0 && Float.compare(llY, 0) != 0)",
          "784:                         {",
          "785:                             return false;",
          "786:                         }",
          "789:                 catch (IOException e)",
          "790:                 {",
          "793:                 }",
          "",
          "[Added Lines]",
          "767:         if (resources == null || !resources.getXObjectNames().iterator().hasNext())",
          "769:             return true;",
          "770:         }",
          "771:         Iterator<COSName> xObjectNames = resources.getXObjectNames().iterator();",
          "772:         while (xObjectNames.hasNext())",
          "773:         {",
          "774:             try",
          "778:                 COSName name = xObjectNames.next();",
          "779:                 PDXObject xObject = resources.getXObject(name);",
          "780:                 if (xObject instanceof PDFormXObject)",
          "782:                     PDRectangle bbox = ((PDFormXObject) xObject).getBBox();",
          "783:                     float llX = bbox.getLowerLeftX();",
          "784:                     float llY = bbox.getLowerLeftY();",
          "785:                     if (Float.compare(llX, 0) != 0 && Float.compare(llY, 0) != 0)",
          "787:                         return false;",
          "790:             }",
          "791:             catch (IOException e)",
          "792:             {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5e598e702c76fab54307692ef6e721fc89c5858",
      "candidate_info": {
        "commit_hash": "b5e598e702c76fab54307692ef6e721fc89c5858",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/b5e598e702c76fab54307692ef6e721fc89c5858",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java"
        ],
        "message": "PDFBOX-3017: don't bother with timestamp signatures, as mentioned by Michael Klink\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882391 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java||examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/SigUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:     {",
          "138:         for (PDSignature sig : doc.getSignatureDictionaries())",
          "139:         {",
          "140:             if (sig.getCOSObject().containsKey(COSName.CONTENTS))",
          "141:             {",
          "145:             }",
          "146:         }",
          "",
          "[Removed Lines]",
          "144:                 throw new IOException(\"DocMDP transform method not allowed if a signature exists\");",
          "",
          "[Added Lines]",
          "142:             if (COSName.DOC_TIME_STAMP.equals(sig.getCOSObject().getItem(COSName.TYPE)))",
          "143:             {",
          "144:                 continue;",
          "145:             }",
          "148:                 throw new IOException(\"DocMDP transform method not allowed if an approval signature exists\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a467dd2aa43daadd69864588606faf6dbe7c2541",
      "candidate_info": {
        "commit_hash": "a467dd2aa43daadd69864588606faf6dbe7c2541",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a467dd2aa43daadd69864588606faf6dbe7c2541",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java"
        ],
        "message": "PDFBOX-5028: partial field names must not contain period characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883888 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:     {",
          "387:         return dictionary.getString(COSName.T);",
          "388:     }",
          "394:     public void setPartialName(String name)",
          "395:     {",
          "396:         dictionary.setString(COSName.T, name);",
          "397:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:         if (name.contains(\".\"))",
          "399:         {",
          "400:             throw new IllegalArgumentException(",
          "401:                     \"A field partial name shall not contain a period character: \" + name);",
          "402:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}