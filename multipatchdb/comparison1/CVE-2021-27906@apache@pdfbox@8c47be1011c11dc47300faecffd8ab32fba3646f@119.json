{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5cd32e1fc956de4055f455d35fa002cf47ca6d96",
      "candidate_info": {
        "commit_hash": "5cd32e1fc956de4055f455d35fa002cf47ca6d96",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/5cd32e1fc956de4055f455d35fa002cf47ca6d96",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ],
        "message": "PDFBOX-5168: refactor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1888888 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PageDrawer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "752:         float[] dashArray = dashPattern.getDashArray();",
          "754:         {",
          "757:             {",
          "759:                 {",
          "762:                 }",
          "775:         }",
          "776:         float phaseStart = dashPattern.getPhase();",
          "777:         dashArray = getDashArray(dashPattern);",
          "",
          "[Removed Lines]",
          "753:         if (dashArray.length > 0)",
          "755:             boolean allZero = true;",
          "756:             for (int i = 0; i < dashArray.length; ++i)",
          "758:                 if (dashArray[i] != 0)",
          "760:                     allZero = false;",
          "761:                     break;",
          "763:             }",
          "764:             if (allZero)",
          "765:             {",
          "766:                 return new Stroke()",
          "767:                 {",
          "768:                     @Override",
          "769:                     public Shape createStrokedShape(Shape p)",
          "770:                     {",
          "771:                         return new Area();",
          "772:                     }",
          "773:                 };",
          "774:             }",
          "",
          "[Added Lines]",
          "753:         if (isAllZeroDash(dashArray))",
          "755:             return new Stroke()",
          "757:                 @Override",
          "758:                 public Shape createStrokedShape(Shape p)",
          "760:                     return new Area();",
          "762:             };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "805:                                miterLimit, dashArray, phaseStart);",
          "806:     }",
          "808:     private float[] getDashArray(PDLineDashPattern dashPattern)",
          "809:     {",
          "810:         float[] dashArray = dashPattern.getDashArray();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "796:     private boolean isAllZeroDash(float[] dashArray)",
          "797:     {",
          "798:         if (dashArray.length > 0)",
          "799:         {",
          "800:             boolean allZero = true;",
          "801:             for (int i = 0; i < dashArray.length; ++i)",
          "802:             {",
          "803:                 if (dashArray[i] != 0)",
          "804:                 {",
          "805:                     allZero = false;",
          "806:                     break;",
          "807:                 }",
          "808:             }",
          "809:             if (allZero)",
          "810:             {",
          "811:                 return true;",
          "812:             }",
          "813:         }",
          "814:         return false;",
          "815:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf4c2282e3ecd1215f71d38960d6e131442e0ca7",
      "candidate_info": {
        "commit_hash": "bf4c2282e3ecd1215f71d38960d6e131442e0ca7",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/bf4c2282e3ecd1215f71d38960d6e131442e0ca7",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java"
        ],
        "message": "PDFBOX-5093: pass PDFRenderer, as suggested by Alexander Scherbatiy\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886224 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java||pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java||pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java -> pdfbox/src/main/java/org/apache/pdfbox/printing/PDFPrintable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:     public PDFPrintable(PDDocument document, Scaling scaling, boolean showPageBorder, float dpi,",
          "113:                         boolean center)",
          "114:     {",
          "115:         this.document = document;",
          "117:         this.scaling = scaling;",
          "118:         this.showPageBorder = showPageBorder;",
          "119:         this.dpi = dpi;",
          "",
          "[Removed Lines]",
          "116:         this.renderer = new PDFRenderer(document);",
          "",
          "[Added Lines]",
          "114:     {",
          "115:         this(document, scaling, showPageBorder, dpi, center, new PDFRenderer(document));",
          "116:     }",
          "129:     public PDFPrintable(PDDocument document, Scaling scaling, boolean showPageBorder, float dpi,",
          "130:                         boolean center, PDFRenderer renderer)",
          "133:         this.renderer = renderer;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3672a1f60e5ca7fe2d88f0d266d37ab2a817b3e3",
      "candidate_info": {
        "commit_hash": "3672a1f60e5ca7fe2d88f0d266d37ab2a817b3e3",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/3672a1f60e5ca7fe2d88f0d266d37ab2a817b3e3",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ],
        "message": "PDFBOX-4892: remove unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887856 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.text.BreakIterator;",
          "22: import java.text.AttributedCharacterIterator.Attribute;",
          "23: import java.util.ArrayList;",
          "25: import java.util.List;",
          "27: import org.apache.pdfbox.pdmodel.font.PDFont;",
          "",
          "[Removed Lines]",
          "24: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.text.BreakIterator;",
          "22: import java.text.AttributedCharacterIterator.Attribute;",
          "23: import java.util.ArrayList;",
          "25: import java.util.List;",
          "27: import org.apache.pdfbox.pdmodel.font.PDFont;",
          "",
          "[Removed Lines]",
          "24: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d534a9c04893df339f452bfe041ec8e8cefcbef1",
      "candidate_info": {
        "commit_hash": "d534a9c04893df339f452bfe041ec8e8cefcbef1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d534a9c04893df339f452bfe041ec8e8cefcbef1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java",
          "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java"
        ],
        "message": "PDFBOX-4892: fix typos, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887276 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java||preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java",
          "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java||xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "253:     public boolean addAll(Collection<? extends E> c)",
          "254:     {",
          "255:         if (isFiltered) {",
          "257:         }",
          "",
          "[Removed Lines]",
          "256:             throw new UnsupportedOperationException(\"Apping to a filtered List is not permitted\");",
          "",
          "[Added Lines]",
          "256:             throw new UnsupportedOperationException(\"Adding to a filtered List is not permitted\");",
          "",
          "---------------"
        ],
        "preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java||preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java -> preflight/src/main/java/org/apache/pdfbox/preflight/action/ActionManagerFactory.java"
        ],
        "xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java||xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java": [
          "File: xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java -> xmpbox/src/main/java/org/apache/xmpbox/type/AbstractField.java"
        ]
      }
    },
    {
      "candidate_hash": "83f7ce1340e01b1834904deec6c995f6aea3e8c1",
      "candidate_info": {
        "commit_hash": "83f7ce1340e01b1834904deec6c995f6aea3e8c1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/83f7ce1340e01b1834904deec6c995f6aea3e8c1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java"
        ],
        "message": "PDFBOX-4892: avoid memory leak, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887321 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:                 TrueTypeCollection ttc = new TrueTypeCollection(file);",
          "216:                 if (ttf == null)",
          "217:                 {",
          "218:                     ttc.close();",
          "",
          "[Removed Lines]",
          "215:                 TrueTypeFont ttf = ttc.getFontByName(postScriptName);",
          "",
          "[Added Lines]",
          "215:                 TrueTypeFont ttf = null;",
          "216:                 try",
          "217:                 {",
          "218:                     ttf = ttc.getFontByName(postScriptName);",
          "219:                 }",
          "220:                 catch (IOException ex)",
          "221:                 {",
          "222:                     ttc.close();",
          "223:                     throw ex;",
          "224:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "239:                     TrueTypeCollection ttc = new TrueTypeCollection(file);",
          "241:                     if (ttf == null)",
          "242:                     {",
          "243:                         ttc.close();",
          "",
          "[Removed Lines]",
          "240:                     TrueTypeFont ttf = ttc.getFontByName(postScriptName);",
          "",
          "[Added Lines]",
          "249:                     TrueTypeFont ttf = null;",
          "250:                     try",
          "251:                     {",
          "252:                         ttf = ttc.getFontByName(postScriptName);",
          "253:                     }",
          "254:                     catch (IOException ex)",
          "255:                     {",
          "256:                         LOG.error(ex.getMessage(), ex);",
          "257:                         ttc.close();",
          "258:                         return null;",
          "259:                     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}