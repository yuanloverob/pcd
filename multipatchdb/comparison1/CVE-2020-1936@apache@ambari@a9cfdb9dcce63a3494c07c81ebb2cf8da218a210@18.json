{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8dd0150cd364f293c555e09fa47ad9e022b59d1f",
      "candidate_info": {
        "commit_hash": "8dd0150cd364f293c555e09fa47ad9e022b59d1f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8dd0150cd364f293c555e09fa47ad9e022b59d1f",
        "files": [
          "ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java",
          "ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java",
          "ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties"
        ],
        "message": "AMBARI-23079. Log Feeder: support to use load balancer for Solr API (not only cloud client) (#1835)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java||ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java",
          "ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java||ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java",
          "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java",
          "ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties||ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java||ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java": [
          "File: ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java -> ambari-logsearch/ambari-logsearch-config-solr/src/main/java/org/apache/ambari/logsearch/config/solr/LogLevelFilterManagerSolr.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:         }",
          "131:       }",
          "132:     } catch (Exception e) {",
          "134:     }",
          "135:     logLevelFilterMap.setFilter(logLevelFilterTreeMap);",
          "136:     return logLevelFilterMap;",
          "",
          "[Removed Lines]",
          "133:       LOG.error(\"Error during getting log level filters: {}\", e);",
          "",
          "[Added Lines]",
          "133:       LOG.error(\"Error during getting log level filters: {}\", e.getMessage());",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java||ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java -> ambari-logsearch/ambari-logsearch-logfeeder-plugin-api/src/main/java/org/apache/ambari/logfeeder/plugin/common/ConfigItem.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:     this.drain = drain;",
          "112:   }",
          "114:   public String getStringValue(String property) {",
          "115:     return getStringValue(property, null);",
          "116:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:   public List<String> getListValue(String key) {",
          "115:     return getListValue(key, null);",
          "116:   }",
          "118:   public List<String> getListValue(String key, List<String> defaultValue) {",
          "119:     Object value = configs.get(key);",
          "120:     if (value != null) {",
          "121:       return (List<String>)value;",
          "122:     } else {",
          "123:       return defaultValue;",
          "124:     }",
          "125:   }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederConstants.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:   public static final boolean MONITOR_SOLR_FILTER_STORAGE_DEFAULT = true;",
          "104:   public static final String SOLR_ZK_CONNECTION_STRING = \"logfeeder.solr.zk_connect_string\";",
          "106: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:   public static final String SOLR_URLS = \"logfeeder.solr.urls\";",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/common/LogFeederSolrClientFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: package org.apache.ambari.logfeeder.common;",
          "21: import org.apache.commons.lang3.StringUtils;",
          "22: import org.apache.http.impl.client.HttpClientBuilder;",
          "23: import org.apache.solr.client.solrj.SolrClient;",
          "24: import org.apache.solr.client.solrj.impl.CloudSolrClient;",
          "25: import org.apache.solr.client.solrj.impl.HttpSolrClient;",
          "26: import org.apache.solr.client.solrj.impl.LBHttpSolrClient;",
          "27: import org.slf4j.Logger;",
          "28: import org.slf4j.LoggerFactory;",
          "30: import java.util.ArrayList;",
          "31: import java.util.Arrays;",
          "32: import java.util.List;",
          "34: public class LogFeederSolrClientFactory {",
          "36:   private static final Logger logger = LoggerFactory.getLogger(LogFeederSolrClientFactory.class);",
          "38:   public SolrClient createSolrClient(String zkConnectionString, String[] solrUrls, String collection) {",
          "39:     logger.info(\"Creating solr client ...\");",
          "40:     logger.info(\"Using collection=\" + collection);",
          "41:     if (solrUrls != null && solrUrls.length > 0) {",
          "42:       logger.info(\"Using lbHttpSolrClient with urls: {}\",",
          "43:         StringUtils.join(appendTo(\"/\" + collection, solrUrls), \",\"));",
          "44:       LBHttpSolrClient.Builder builder = new LBHttpSolrClient.Builder();",
          "45:       builder.withBaseSolrUrls(solrUrls);",
          "46:       return builder.build();",
          "47:     } else {",
          "48:       logger.info(\"Using zookeepr. zkConnectString=\" + zkConnectionString);",
          "49:       CloudSolrClient.Builder builder = new CloudSolrClient.Builder();",
          "50:       builder.withZkHost(zkConnectionString);",
          "51:       CloudSolrClient solrClient = builder.build();",
          "52:       solrClient.setDefaultCollection(collection);",
          "53:       return solrClient;",
          "54:     }",
          "55:   }",
          "57:   private String[] appendTo(String toAppend, String... appendees) {",
          "58:     for (int i = 0; i < appendees.length; i++) {",
          "59:       appendees[i] = appendees[i] + toAppend;",
          "60:     }",
          "61:     return appendees;",
          "62:   }",
          "64: }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/ApplicationConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.ambari.logfeeder.conf;",
          "21: import com.google.common.collect.Maps;",
          "22: import org.apache.ambari.logfeeder.docker.DockerContainerRegistry;",
          "23: import org.apache.ambari.logfeeder.common.LogFeederConstants;",
          "24: import org.apache.ambari.logfeeder.input.InputConfigUploader;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.apache.ambari.logfeeder.common.LogFeederSolrClientFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: import org.apache.ambari.logsearch.config.solr.LogLevelFilterManagerSolr;",
          "39: import org.apache.ambari.logsearch.config.solr.LogLevelFilterUpdaterSolr;",
          "40: import org.apache.ambari.logsearch.config.zookeeper.LogSearchConfigLogFeederZK;",
          "42: import org.apache.solr.client.solrj.SolrClient;",
          "44: import org.springframework.context.annotation.Bean;",
          "45: import org.springframework.context.annotation.Configuration;",
          "46: import org.springframework.context.annotation.DependsOn;",
          "",
          "[Removed Lines]",
          "41: import org.apache.commons.lang3.StringUtils;",
          "43: import org.apache.solr.client.solrj.impl.CloudSolrClient;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:   }",
          "71:   @Bean",
          "73:   public ConfigHandler configHandler() throws Exception {",
          "74:     return new ConfigHandler(logSearchConfigLogFeeder());",
          "75:   }",
          "",
          "[Removed Lines]",
          "72:   @DependsOn(\"logSearchConfigLogFeeder\")",
          "",
          "[Added Lines]",
          "71:   @DependsOn({\"logSearchConfigLogFeeder\", \"propertyConfigurer\"})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "95:   @Bean",
          "96:   public LogLevelFilterManager logLevelFilterManager() {",
          "97:     if (logFeederProps.isSolrFilterStorage()) {",
          "107:     } else { // no default filter manager",
          "108:       return null;",
          "109:     }",
          "",
          "[Removed Lines]",
          "98:       if (StringUtils.isNotEmpty(logFeederProps.getSolrZkConnectString())) {",
          "99:         CloudSolrClient.Builder builder = new CloudSolrClient.Builder();",
          "100:         builder.withZkHost(logFeederProps.getSolrZkConnectString());",
          "101:         CloudSolrClient solrClient = builder.build();",
          "102:         solrClient.setDefaultCollection(\"history\");",
          "103:         return new LogLevelFilterManagerSolr(solrClient);",
          "104:       } else {",
          "105:         return null; // TODO: use lb http client",
          "106:       }",
          "",
          "[Added Lines]",
          "97:       SolrClient solrClient = new LogFeederSolrClientFactory().createSolrClient(",
          "98:         logFeederProps.getSolrZkConnectString(), logFeederProps.getSolrUrls(), \"history\");",
          "99:       return new LogLevelFilterManagerSolr(solrClient);",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/conf/LogFeederProps.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import org.apache.ambari.logfeeder.common.LogFeederConstants;",
          "22: import org.apache.ambari.logfeeder.plugin.common.LogFeederProperties;",
          "23: import org.apache.ambari.logsearch.config.api.LogSearchPropertyDescription;",
          "24: import org.springframework.beans.factory.annotation.Value;",
          "25: import org.springframework.context.annotation.Configuration;",
          "26: import org.springframework.core.env.AbstractEnvironment;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import org.apache.commons.lang.StringUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:   @Value(\"${\" + LogFeederConstants.SOLR_ZK_CONNECTION_STRING + \":}\")",
          "180:   private String solrZkConnectString;",
          "182:   @Inject",
          "183:   private LogEntryCacheConfig logEntryCacheConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:   @LogSearchPropertyDescription(",
          "184:     name = LogFeederConstants.SOLR_URLS,",
          "185:     description = \"Comma separated solr urls (with protocol and port), override \"+ LogFeederConstants.SOLR_ZK_CONNECTION_STRING + \" config\",",
          "186:     examples = {\"https://localhost1:8983/solr,https://localhost2:8983\"},",
          "187:     sources = {LogFeederConstants.LOGFEEDER_PROPERTIES_FILE}",
          "188:   )",
          "189:   @Value(\"${\" + LogFeederConstants.SOLR_URLS + \":}\")",
          "190:   private String solrUrlsStr;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "285:   }",
          "287:   public boolean isUseLocalConfigs() {",
          "289:   }",
          "291:   public void setUseLocalConfigs(boolean useLocalConfigs) {",
          "",
          "[Removed Lines]",
          "288:     return useLocalConfigs;",
          "",
          "[Added Lines]",
          "298:     return this.useLocalConfigs;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "316:     this.solrFilterMonitor = solrFilterMonitor;",
          "317:   }",
          "319:   @PostConstruct",
          "320:   public void init() {",
          "321:     properties = new Properties();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   public String getSolrUrlsStr() {",
          "330:     return this.solrUrlsStr;",
          "331:   }",
          "333:   public void setSolrUrlsStr(String solrUrlsStr) {",
          "334:     this.solrUrlsStr = solrUrlsStr;",
          "335:   }",
          "337:   public String[] getSolrUrls() {",
          "338:     if (StringUtils.isNotBlank(this.solrUrlsStr)) {",
          "339:       return this.solrUrlsStr.split(\",\");",
          "340:     }",
          "341:     return null;",
          "342:   }",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java||ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java": [
          "File: ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java -> ambari-logsearch/ambari-logsearch-logfeeder/src/main/java/org/apache/ambari/logfeeder/output/OutputSolr.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.apache.ambari.logfeeder.output;",
          "22: import org.apache.ambari.logfeeder.conf.LogFeederProps;",
          "23: import org.apache.ambari.logfeeder.plugin.input.InputMarker;",
          "24: import org.apache.ambari.logfeeder.plugin.output.Output;",
          "25: import org.apache.ambari.logfeeder.util.DateUtil;",
          "26: import org.apache.ambari.logfeeder.util.LogFeederUtil;",
          "27: import org.apache.commons.lang3.StringUtils;",
          "28: import org.apache.log4j.Level;",
          "29: import org.apache.log4j.Logger;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.apache.ambari.logfeeder.common.LogFeederSolrClientFactory;",
          "28: import org.apache.commons.collections.CollectionUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:   private String splitMode;",
          "77:   private int splitInterval;",
          "78:   private String zkConnectString;",
          "79:   private int maxIntervalMS;",
          "80:   private int workers;",
          "81:   private int maxBufferSize;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:   private String[] solrUrls = null;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "121:     type = getStringValue(\"type\");",
          "123:     zkConnectString = getStringValue(\"zk_connect_string\");",
          "126:     }",
          "128:     skipLogtime = getBooleanValue(\"skip_logtime\", DEFAULT_SKIP_LOGTIME);",
          "",
          "[Removed Lines]",
          "124:     if (StringUtils.isEmpty(zkConnectString)) {",
          "125:       throw new Exception(\"For solr output the zk_connect_string property need to be set\");",
          "",
          "[Added Lines]",
          "127:     List<String> solrUrlsList = getListValue(\"solr_urls\");",
          "129:     if (StringUtils.isBlank(zkConnectString) && CollectionUtils.isEmpty(solrUrlsList)) {",
          "130:       throw new Exception(\"For solr output the zk_connect_string or solr_urls property need to be set\");",
          "131:     }",
          "133:     if (CollectionUtils.isNotEmpty(solrUrlsList)) {",
          "134:       solrUrls = solrUrlsList.toArray(new String[0]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "177:   private void createSolrWorkers() throws Exception, MalformedURLException {",
          "178:     for (int count = 0; count < workers; count++) {",
          "180:       createSolrWorkerThread(count, solrClient);",
          "181:     }",
          "182:   }",
          "186:     pingSolr(count, solrClient);",
          "197:     return solrClient;",
          "198:   }",
          "201:     try {",
          "203:       SolrPingResponse response = solrClient.ping();",
          "204:       if (response.getStatus() == 0) {",
          "205:         LOG.info(\"Ping to Solr server is successful for worker=\" + count);",
          "206:       } else {",
          "207:         LOG.warn(",
          "210:       }",
          "211:     } catch (Throwable t) {",
          "212:       LOG.warn(String.format(",
          "215:     }",
          "216:   }",
          "",
          "[Removed Lines]",
          "179:       CloudSolrClient solrClient = getSolrClient(count);",
          "184:   CloudSolrClient getSolrClient(int count) throws Exception, MalformedURLException {",
          "185:     CloudSolrClient solrClient = createSolrClient();",
          "188:     return solrClient;",
          "189:   }",
          "191:   private CloudSolrClient createSolrClient() throws Exception {",
          "192:     LOG.info(\"Using zookeepr. zkConnectString=\" + zkConnectString);",
          "193:     LOG.info(\"Using collection=\" + collection);",
          "195:     CloudSolrClient solrClient = new CloudSolrClient.Builder().withZkHost(zkConnectString).build();",
          "196:     solrClient.setDefaultCollection(collection);",
          "200:   private void pingSolr(int count, CloudSolrClient solrClient) {",
          "202:       LOG.info(\"Pinging Solr server. zkConnectString=\" + zkConnectString);",
          "208:             String.format(\"Ping to Solr server failed. It would check again. worker=%d, zkConnectString=%s, collection=%s, \" +",
          "209:                 \"response=%s\", count, zkConnectString, collection, response));",
          "213:           \"Ping to Solr server failed. It would check again. worker=%d, zkConnectString=%s, collection=%s\", count,",
          "214:           zkConnectString, collection), t);",
          "",
          "[Added Lines]",
          "188:       SolrClient solrClient = getSolrClient(count);",
          "193:   private SolrClient getSolrClient(int count) throws Exception, MalformedURLException {",
          "194:     SolrClient solrClient = new LogFeederSolrClientFactory().createSolrClient(zkConnectString, solrUrls, collection);",
          "199:   private void pingSolr(int count, SolrClient solrClient) {",
          "201:       LOG.info(\"Pinging Solr server.\");",
          "207:             String.format(\"Ping to Solr server failed. It would check again. worker=%d, collection=%s, \" +",
          "208:                 \"response=%s\", count, collection, response));",
          "212:           \"Ping to Solr server failed. It would check again. worker=%d, collection=%s\", count, collection), t);",
          "",
          "---------------"
        ],
        "ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties||ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties": [
          "File: ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties -> ambari-logsearch/docker/test-config/logfeeder/logfeeder.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   shipper-conf/output.config.json",
          "22: logfeeder.log.filter.enable=true",
          "23: logfeeder.solr.config.interval=5",
          "25: logfeeder.solr.zk_connect_string=localhost:9983",
          "26: logfeeder.cache.enabled=true",
          "27: logfeeder.cache.size=100",
          "",
          "[Removed Lines]",
          "24: logfeeder.solr.core.config.name=history",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: logsearch.config.zk_connect_string=localhost:9983",
          "32: logfeeder.include.default.level=FATAL,ERROR,WARN,INFO,DEBUG,TRACE,UNKNOWN",
          "33: logfeeder.docker.registry.enabled=true",
          "34: #logfeeder.configs.local.enabled=true",
          "35: #logfeeder.configs.filter.solr.enabled=true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: logfeeder.solr.core.config.name=history",
          "34: #logfeeder.solr.urls=http://solr:8983/solr",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "938c88ea7bae8d5b015b9694805135426b63aa05",
      "candidate_info": {
        "commit_hash": "938c88ea7bae8d5b015b9694805135426b63aa05",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/938c88ea7bae8d5b015b9694805135426b63aa05",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less"
        ],
        "message": "[AMBARI-24437] [Log Search UI] App Loader Page - add more space above the loader animations (#2064)\n\n(cherry picked from commit b7e2540075a400f7edd8a5b9acbc0d906d2b596b)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less||ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less -> ambari-logsearch/ambari-logsearch-web/src/app/modules/shared/components/data-loading-indicator/data-loading-indicator.component.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: }",
          "63: :host {",
          "65:   .data-avaibility {",
          "66:     align-items: center;",
          "67:     align-content: center;",
          "68:     display: flex;",
          "69:     justify-content: center;",
          "71:     width: 100vw;",
          "72:     .state-item {",
          "73:       align-items: center;",
          "",
          "[Removed Lines]",
          "70:     margin: 10px 0 0 0;",
          "",
          "[Added Lines]",
          "64:   height: 80vh;",
          "70:     margin: 25vh 0 0 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d145e0c04917866fd76690688826cf44065370e",
      "candidate_info": {
        "commit_hash": "8d145e0c04917866fd76690688826cf44065370e",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/8d145e0c04917866fd76690688826cf44065370e",
        "files": [
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ],
        "message": "AMBARI-24663. 'ambari-server setup' does not use AMBARI_SECURITY_MASTER_KEY env var (dlysnichenko) (#2346)",
        "before_after_code_files": [
          "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/python/ambari_server/serverConfiguration.py||ambari-server/src/main/python/ambari_server/serverConfiguration.py": [
          "File: ambari-server/src/main/python/ambari_server/serverConfiguration.py -> ambari-server/src/main/python/ambari_server/serverConfiguration.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1017: def get_original_master_key(properties, options = None):",
          "1018:   input = True",
          "1019:   masterKey = None",
          "1020:   while(input):",
          "1033:     # Find an alias that exists",
          "1034:     alias = None",
          "1035:     property = properties.get_property(JDBC_PASSWORD_PROPERTY)",
          "",
          "[Removed Lines]",
          "1021:     try:",
          "1022:       if options is not None and hasattr(options, 'master_key') and options.master_key is not None and options.master_key:",
          "1023:         masterKey = options.master_key",
          "1024:       if masterKey is None:",
          "1025:         masterKey = get_validated_string_input('Enter current Master Key: ',",
          "1026:                                                \"\", \".*\", \"\", True, False)",
          "1027:         if options is not None:",
          "1028:           options.master_key = masterKey",
          "1029:     except KeyboardInterrupt:",
          "1030:       print_warning_msg('Exiting...')",
          "1031:       sys.exit(1)",
          "",
          "[Added Lines]",
          "1020:   env_master_key = os.environ.get(SECURITY_KEY_ENV_VAR_NAME)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1047:         alias = SSL_TRUSTSTORE_PASSWORD_ALIAS",
          "1049:     # Decrypt alias with master to validate it, if no master return",
          "1059:     input = False",
          "",
          "[Removed Lines]",
          "1050:     if alias and masterKey:",
          "1051:       password = read_passwd_for_alias(alias, masterKey, options)",
          "1052:       if not password:",
          "1053:         masterKey = None",
          "1054:         if options is not None:",
          "1055:           options.master_key = None",
          "1056:         print_error_msg (\"ERROR: Master key does not match.\")",
          "1057:         continue",
          "",
          "[Added Lines]",
          "1039:     password = None",
          "1040:     if alias and env_master_key and env_master_key is not \"\" and env_master_key != \"None\":",
          "1041:       password = read_passwd_for_alias(alias, env_master_key, options)",
          "1042:     if not password:",
          "1043:       try:",
          "1044:         if options is not None and hasattr(options, 'master_key') and options.master_key is not None and options.master_key:",
          "1045:           masterKey = options.master_key",
          "1046:         if masterKey is None or masterKey == \"\":",
          "1047:           masterKey = get_validated_string_input('Enter current Master Key: ',",
          "1048:                                                  \"\", \".*\", \"\", True, False)",
          "1049:           if options is not None:",
          "1050:             options.master_key = masterKey",
          "1051:       except KeyboardInterrupt:",
          "1052:         print_warning_msg('Exiting...')",
          "1053:         sys.exit(1)",
          "1054:       if alias and masterKey:",
          "1055:         password = read_passwd_for_alias(alias, masterKey, options)",
          "1056:         if not password:",
          "1057:           masterKey = None",
          "1058:           if options is not None:",
          "1059:             options.master_key = None",
          "1060:           print_error_msg (\"ERROR: Master key does not match\")",
          "1062:           continue",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c12203b88dfb10e725a6c69a2f792abf20b2669f",
      "candidate_info": {
        "commit_hash": "c12203b88dfb10e725a6c69a2f792abf20b2669f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/c12203b88dfb10e725a6c69a2f792abf20b2669f",
        "files": [
          "ambari-metrics/ambari-metrics-assembly/pom.xml",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/img/ams-screenshot.png",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/img/apache-ambari-logo-sm.png",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/img/apache-ambari-logo.png",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/img/apache-ambari-project.png",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/plugin.json",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts",
          "ambari-metrics/ambari-metrics-grafana/conf/unix/ams-grafana.ini",
          "ambari-metrics/ambari-metrics-grafana/pom.xml",
          "ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py",
          "ambari-metrics/pom.xml"
        ],
        "message": "AMBARI-25379 Upgrade AMS Grafana version to 6.3.5\n\nThe commit of BUG-114430 has been cherry-picked and the datasource.js was backported.\nThis way Grafana is first upgraded to 5.2.4 as it was done already on the 2.8 and 2.7.100\nbranches. Probably it is going to be easier to upgrade from 5.2.4 to 6.3.5 than go from 2.x\nin one step.\n\nChange-Id: I720f5fc5e6fbd82bf4f68e0631a11fc4967a27a0",
        "before_after_code_files": [
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map",
          "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts",
          "ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py||ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: export declare class AmbariMetricsConfigCtrl {",
          "21:     static templateUrl: string;",
          "22:     current: any;",
          "23: }",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: System.register([], function(exports_1) {",
          "20:     var AmbariMetricsConfigCtrl;",
          "21:     return {",
          "22:         setters:[],",
          "23:         execute: function() {",
          "24:             AmbariMetricsConfigCtrl = (function () {",
          "25:                 function AmbariMetricsConfigCtrl() {",
          "26:                 }",
          "27:                 AmbariMetricsConfigCtrl.templateUrl = 'partials/config.html';",
          "28:                 return AmbariMetricsConfigCtrl;",
          "29:             })();",
          "30:             exports_1(\"AmbariMetricsConfigCtrl\", AmbariMetricsConfigCtrl);",
          "31:         }",
          "32:     }",
          "33: });",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.js.map",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: {\"version\":3,\"file\":\"config_ctrl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../public/app/plugins/datasource/ambari-metrics/config_ctrl.ts\"],\"names\":[\"AmbariMetricsConfigCtrl\",\"AmbariMetricsConfigCtrl.constructor\"],\"mappings\":\"AAAA,oDAAoD;AACpD;;;;;;;;;;;;;;;;GAgBG;;;;;;YAKH;gBAAAA;gBAGAC,CAACA;gBAFUD,mCAAWA,GAAGA,sBAAsBA,CAACA;gBAEhDA,8BAACA;YAADA,CAACA,AAHD,IAGC;YAHD,6DAGC,CAAA\"}",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/config_ctrl.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import angular from 'angular';",
          "21: import _ from 'lodash';",
          "23: export class AmbariMetricsConfigCtrl {",
          "24:     static templateUrl = 'partials/config.html';",
          "25:     current: any;",
          "26: }",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: declare var AmbariMetricsDatasource: any;",
          "19: export {AmbariMetricsDatasource};",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/datasource.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:       'angular',",
          "20:       'lodash',",
          "21:       'jquery',",
          "23:       './queryCtrl'",
          "24:     ],",
          "25:     function (angular, _) {",
          "26:       'use strict';",
          "39:         var allMetrics = {};",
          "40:         var appIds = [];",
          "44:           return this.doAmbariRequest({ url: '/ws/v1/timeline/metrics/metadata' })",
          "45:             .then(function (items) {",
          "46:               items = items.data;",
          "",
          "[Removed Lines]",
          "22:       './directives',",
          "28:       var module = angular.module('grafana.services');",
          "30:       module.factory('AmbariMetricsDatasource', function ($q, backendSrv, templateSrv) {",
          "34:         function AmbariMetricsDatasource(datasource) {",
          "35:           this.name = datasource.name;",
          "36:           this.url = datasource.url;",
          "37:           this.initMetricAppidMapping();",
          "38:         }",
          "43:         AmbariMetricsDatasource.prototype.initMetricAppidMapping = function () {",
          "",
          "[Added Lines]",
          "30:       function AmbariMetricsDatasource(instanceSettings, $q, backendSrv, templateSrv) {",
          "31:         this.type = 'ambari-metrics';",
          "32:         this.name = instanceSettings.name;",
          "33:         this.url = instanceSettings.url;",
          "34:         this.withCredentials = instanceSettings.withCredentials;",
          "35:         this.basicAuth = instanceSettings.basicAuth;",
          "43:         this.doAmbariRequest = function (options) {",
          "44:           if (this.basicAuth || this.withCredentials) {",
          "45:             options.withCredentials = true;",
          "46:           }",
          "47:           if (this.basicAuth) {",
          "48:             options.headers = options.headers || {};",
          "49:             options.headers.Authorization = this.basicAuth;",
          "50:           }",
          "52:           options.url = this.url + options.url;",
          "53:           options.inspect = {type: 'ambari-metrics'};",
          "55:           return backendSrv.datasourceRequest(options);",
          "56:         };",
          "59:         this.initMetricAppidMapping = function () {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:               appIds = Object.keys(allMetrics);",
          "62:             });",
          "63:         };",
          "87:           var emptyData = function (metric) {",
          "88:             var legend = metric.alias ? metric.alias : metric.metric;",
          "89:             return {",
          "",
          "[Removed Lines]",
          "68:         AmbariMetricsDatasource.prototype.doAmbariRequest = function (options) {",
          "69:           if (this.basicAuth || this.withCredentials) {",
          "70:             options.withCredentials = true;",
          "71:           }",
          "72:           if (this.basicAuth) {",
          "73:             options.headers = options.headers || {};",
          "74:             options.headers.Authorization = this.basicAuth;",
          "75:           }",
          "77:           options.url = this.url + options.url;",
          "78:           options.inspect = {type: 'ambarimetrics'};",
          "80:           return backendSrv.datasourceRequest(options);",
          "81:         };",
          "86:         AmbariMetricsDatasource.prototype.query = function (options) {",
          "",
          "[Added Lines]",
          "80:         this.initMetricAppidMapping();",
          "85:         this.query = function (options) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:             };",
          "215:           };",
          "216:           var getHostAppIdData = function(target) {",
          "218:             + target.precision;",
          "219:             var instanceId = typeof target.cluster == 'undefined'  ? '' : '&instanceId=' + target.cluster;",
          "220:             var metricAggregator = target.aggregator === \"none\" ? '' : '._' + target.aggregator;",
          "",
          "[Removed Lines]",
          "217:             var precision = target.precision === 'default' || typeof target.precision == 'undefined'  ? '' : '&precision='",
          "",
          "[Added Lines]",
          "216:             var precision = target.precision === 'default' || typeof target.precision == 'undefined'  ? '' : '&precision='",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "425:               var allUsers = templateSrv.variables.filter(function(variable) { return variable.query === \"hbase-users\";});",
          "426:               var selectedUsers = (_.isEmpty(allUsers)) ? \"\" : allUsers[0].options.filter(function(user)",
          "427:               { return user.selected; }).map(function(uName) { return uName.value; });",
          "431:               _.forEach(selectedUser, function(processUser) {",
          "432:                   metricsPromises.push(_.map(options.targets, function(target) {",
          "433:                     target.hbUser = processUser;",
          "",
          "[Removed Lines]",
          "428:               selectedUsers = templateSrv._values.Users.lastIndexOf('}') > 0 ? templateSrv._values.Users.slice(1,-1) :",
          "429:                 templateSrv._values.Users;",
          "430:               var selectedUser = selectedUsers.split(',');",
          "",
          "[Added Lines]",
          "428:               if (selectedUsers[0] === \"\") {",
          "429:                 selectedUsers = \"\";",
          "430:               }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "441:             if (templateSrv.variables[0].query === \"hbase-tables\") {",
          "442:               var splitTables = [];",
          "446:               while (allTable.length > 0) {",
          "448:               }",
          "449:               _.forEach(splitTables, function(table) {",
          "450:                 metricsPromises.push(_.map(options.targets, function(target) {",
          "451:                   var hbMetric = [];",
          "452:                   _.map(table, function(tableMetric) { hbMetric.push(target.metric.replace('*', tableMetric)); });",
          "454:                   hbMetric = _.map(hbMetric, function(tbl) { return tbl + metricTransform +'._' +  target.aggregator; });",
          "455:                   target.hbMetric = _.flatten(hbMetric).join(',');",
          "456:                   return getHbaseAppIdData(target);",
          "",
          "[Removed Lines]",
          "443:               var allTables = templateSrv._values.Tables.lastIndexOf('}') > 0 ? templateSrv._values.Tables.slice(1,-1) :",
          "444:                 templateSrv._values.Tables;",
          "445:               var allTable = allTables.split(',');",
          "447:                 splitTables.push(allTable.splice(0,20));",
          "453:                   var metricTransform = !target.transform || target.transform === \"none\" ? '' : '._' + target.transform;",
          "",
          "[Added Lines]",
          "444:               let allTables = [];",
          "445:               const tables = templateSrv.index.Tables.options;",
          "446:               for (let table of tables) {",
          "447:                 if (table.text.toLowerCase() === \"all\" && table.selected) {",
          "448:                   allTables = \"\";",
          "449:                   break;",
          "450:                 } else if (table.selected) {",
          "451:                   allTables.push(table.value);",
          "452:                 }",
          "455:                 splitTables.push(allTable.splice(0, 20));",
          "461:                   var metricTransform = !target.transform || target.transform === \"none\" ? '' : '._' + target.transform;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "462:               var allTopics = templateSrv.variables.filter(function(variable) { return variable.query === \"kafka-topics\";});",
          "463:               var selectedTopics = (_.isEmpty(allTopics)) ? \"\" : allTopics[0].options.filter(function(topic)",
          "464:               { return topic.selected; }).map(function(topicName) { return topicName.value; });",
          "468:               _.forEach(selectedTopic, function(processTopic) {",
          "469:                 metricsPromises.push(_.map(options.targets, function(target) {",
          "470:                   target.kbTopic = processTopic;",
          "",
          "[Removed Lines]",
          "465:               selectedTopics = templateSrv._values.Topics.lastIndexOf('}') > 0 ? templateSrv._values.Topics.slice(1,-1) :",
          "466:                 templateSrv._values.Topics;",
          "467:               var selectedTopic = selectedTopics.split(',');",
          "",
          "[Added Lines]",
          "474:               if (selectedTopics[0] === \"\") {",
          "475:                 selectedTopics = \"\";",
          "476:               }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "477:             if (templateSrv.variables[0].query === \"callers\") {",
          "478:               var allCallers = templateSrv.variables.filter(function(variable) { return variable.query === \"callers\";});",
          "484:               _.forEach(selectedCaller, function(processCaller) {",
          "485:                   metricsPromises.push(_.map(options.targets, function(target) {",
          "486:                     target.nnCaller = processCaller;",
          "",
          "[Removed Lines]",
          "479:               var selectedCallers = (_.isEmpty(allCallers)) ? \"\" : allCallers[0].options.filter(function(user)",
          "480:               { return user.selected; }).map(function(callerName) { return callerName.value; });",
          "481:               selectedCallers = templateSrv._values.Callers.lastIndexOf('}') > 0 ? templateSrv._values.Callers.slice(1,-1) :",
          "482:                 templateSrv._values.Callers;",
          "483:               var selectedCaller = selectedCallers.split(',');",
          "",
          "[Added Lines]",
          "489:               let selectedCallers = [];",
          "490:               const callers = templateSrv.index.Callers.options;",
          "491:               for (let caller of callers) {",
          "492:                 if (caller.text.toLowerCase() === \"all\" && caller.selected) {",
          "493:                   selectedCallers = \"\";",
          "494:                   break;",
          "495:                 } else if (caller.selected) {",
          "496:                   selectedCallers.push(caller.text);",
          "497:                 }",
          "498:               }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "495:                 var allCores = templateSrv.variables.filter(function(variable) { return variable.query === \"infra_solr_core\";});",
          "496:                 var selectedCores = (_.isEmpty(allCores)) ? \"\" : allCores[0].options.filter(function(core)",
          "497:                 { return core.selected; }).map(function(coreName) { return coreName.value; });",
          "501:                 _.forEach(selectedCore, function(processCore) {",
          "502:                     metricsPromises.push(_.map(options.targets, function(target) {",
          "503:                         target.sCore = processCore;",
          "",
          "[Removed Lines]",
          "498:                 selectedCores = templateSrv._values.Cores.lastIndexOf('}') > 0 ? templateSrv._values.Cores.slice(1,-1) :",
          "499:                     templateSrv._values.Cores;",
          "500:                 var selectedCore= selectedCores.split(',');",
          "",
          "[Added Lines]",
          "514:                 if (selectedCores[0] === \"\") {",
          "515:                   selectedCores = \"\";",
          "516:                 }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "512:                 var allCollections = templateSrv.variables.filter(function(variable) { return variable.query === \"infra_solr_collection\";});",
          "513:                 var selectedCollections = (_.isEmpty(allCollections)) ? \"\" : allCollections[0].options.filter(function(collection)",
          "514:                 { return collection.selected; }).map(function(collectionsName) { return collectionsName.value; });",
          "518:                 _.forEach(selectedCollection, function(processCollection) {",
          "519:                     metricsPromises.push(_.map(options.targets, function(target) {",
          "520:                         target.sCollection = processCollection;",
          "",
          "[Removed Lines]",
          "515:                 selectedCollections = templateSrv._values.Collections.lastIndexOf('}') > 0 ? templateSrv._values.Collections.slice(1,-1) :",
          "516:                     templateSrv._values.Collections;",
          "517:                 var selectedCollection= selectedCollections.split(',');",
          "",
          "[Added Lines]",
          "532:                 if (selectedCollections [0] === \"\") {",
          "533:                   selectedCollections = \"\";",
          "534:                 }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "529:               var allTopologies = templateSrv.variables.filter(function(variable) { return variable.query === \"topologies\";});",
          "530:               var selectedTopologies = (_.isEmpty(allTopologies)) ? \"\" : allTopologies[0].options.filter(function(topo)",
          "531:               { return topo.selected; }).map(function(topoName) { return topoName.value; });",
          "535:               _.forEach(selectedTopology, function(processTopology) {",
          "536:                 metricsPromises.push(_.map(options.targets, function(target) {",
          "537:                   target.sTopology = processTopology;",
          "",
          "[Removed Lines]",
          "532:               selectedTopologies = templateSrv._values.topologies.lastIndexOf('}') > 0 ? templateSrv._values.topologies.slice(1,-1) :",
          "533:                   templateSrv._values.topologies;",
          "534:               var selectedTopology= selectedTopologies.split(',');",
          "",
          "[Added Lines]",
          "550:               if (selectedTopologies === \"\") {",
          "551:                 selectedTopologies = \"\";",
          "552:               }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "574:               var allDataSources = templateSrv.variables.filter(function(variable) { return variable.query === \"druidDataSources\";});",
          "575:               var selectedDataSources = (_.isEmpty(allDataSources)) ? \"\" : allDataSources[0].options.filter(function(dataSource)",
          "576:                             { return dataSource.selected; }).map(function(dataSourceName) { return dataSourceName.value; });",
          "580:               _.forEach(selectedDataSource, function(processDataSource) {",
          "581:                 metricsPromises.push(_.map(options.targets, function(target) {",
          "582:                   target.sDataSource = processDataSource;",
          "",
          "[Removed Lines]",
          "577:                selectedDataSources = templateSrv._values.druidDataSources.lastIndexOf('}') > 0 ? templateSrv._values.druidDataSources.slice(1,-1) :",
          "578:                                               templateSrv._values.druidDataSources;",
          "579:               var selectedDataSource = selectedDataSources.split(',');",
          "",
          "[Added Lines]",
          "596:               if (selectedDataSources[0] === \"\") {",
          "597:                 selectedDataSources = \"\";",
          "598:               }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "586:               });",
          "587:             }",
          "594:               }",
          "603:               if (!_.isEmpty(options.targets.filter(function(target) {",
          "604:                     return target.metric.endsWith(\".%.count\"); }))) {",
          "606:                 _.forEach(allHosts, function(host) {",
          "607:                     metricsPromises.push(_.map(options.targets, function(target) {",
          "608:                         target.templatedHost = host;",
          "",
          "[Removed Lines]",
          "589:               var indexOfHosts = -1;",
          "590:               for (var i = 0; i < templateSrv.variables.length; i++) {",
          "591:                   if (templateSrv.variables[i].name == 'hosts') {",
          "592:                       indexOfHosts = i;",
          "593:                   }",
          "595:               if (indexOfHosts >= 0) {",
          "596:               var allHosts = templateSrv._values.hosts.lastIndexOf('}') > 0 ? templateSrv._values.hosts.slice(1,-1) :",
          "597:               templateSrv._values.hosts;",
          "605:                 allHosts = allHosts.split(',');",
          "",
          "[Added Lines]",
          "608:             var indexOfHosts = -1;",
          "609:             for (var i = 0; i < templateSrv.variables.length; i++) {",
          "611:               if (templateSrv.variables[i].name == 'hosts' && templateSrv.index.hosts) {",
          "612:                 indexOfHosts = i;",
          "614:             }",
          "615:             if (indexOfHosts >= 0) {",
          "617:               let allHosts = [];",
          "618:               const hosts = templateSrv.index.hosts.options",
          "619:                 for (let host of hosts) {",
          "620:                   if (host.text.toLowerCase() === \"all\" && host.selected) {",
          "621:                     allHosts = '%';",
          "622:                     break;",
          "623:                   } else if (host.selected) {",
          "624:                     allHosts.push(host.text);",
          "625:                   }",
          "626:                 };",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "611:                     }));",
          "612:                 });",
          "613:               } else {",
          "615:                   metricsPromises.push(_.map(options.targets, function(target) {",
          "616:                       target.templatedHost = allHosts? allHosts : '';",
          "617:                       target.templatedCluster = templatedCluster;",
          "",
          "[Removed Lines]",
          "614:                   allHosts = templateSrv._texts.hosts === \"All\" ? '%' : allHosts;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "643:         };",
          "650:           if (query && query.length > 0 && query[0] !== '/') {",
          "651:             query = '/' + query + '/';",
          "",
          "[Removed Lines]",
          "648:         AmbariMetricsDatasource.prototype.listSeries = function (query) {",
          "",
          "[Added Lines]",
          "675:         this.listSeries = function (query) {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "660:           var interpolated;",
          "661:           try {",
          "662:             interpolated = query.split('.')[0];",
          "",
          "[Removed Lines]",
          "659:         AmbariMetricsDatasource.prototype.metricFindQuery = function (query) {",
          "",
          "[Added Lines]",
          "686:         this.metricFindQuery = function (query) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "667:           var templatedCluster = (_.isEmpty(templatedClusters)) ? '' : templatedClusters[0].options.filter(function(cluster)",
          "668:           { return cluster.selected; }).map(function(clusterName) { return clusterName.value; });",
          "671:             { return variable.name === \"components\"});",
          "672:           var tComponent = _.isEmpty(tComponents) ? '' : tComponents[0].current.value;",
          "",
          "[Removed Lines]",
          "670:           var tComponents = _.isEmpty(templateSrv.variables) ? '' : templateSrv.variables.filter(function(variable)",
          "",
          "[Added Lines]",
          "697:           var tComponents = _.isEmpty(templateSrv.variables) ? '' : templateSrv.variables.filter(function(variable)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "749:             return this.initMetricAppidMapping()",
          "750:               .then(function () {",
          "751:                 var nnCallers = allMetrics[\"namenode\"];",
          "753:                   RegExp(\"ipc.client.org.apache.hadoop.ipc.DecayRpcScheduler.Caller\", 'g')));",
          "755:                   return caller.substring(caller.indexOf('(')+1, caller.indexOf(')')) })));",
          "756:                 return _.map(callers, function (callers) {",
          "757:                   return {",
          "",
          "[Removed Lines]",
          "752:                 var extractCallers = nnCallers.filter(/./.test.bind(new",
          "754:                 var callers = _.sortBy(_.uniq(_.map(extractCallers, function(caller) {",
          "",
          "[Added Lines]",
          "779:                 var extractCallers = nnCallers.filter(/./.test.bind(new",
          "781:                 var callers = _.sortBy(_.uniq(_.map(extractCallers, function(caller) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "863:                 });",
          "864:           }",
          "865:           var stormEntities = {};",
          "867:             return this.initMetricAppidMapping()",
          "868:                 .then(function () {",
          "869:                   var storm = allMetrics[\"nimbus\"];",
          "",
          "[Removed Lines]",
          "866:           AmbariMetricsDatasource.prototype.getStormEntities = function () {",
          "",
          "[Added Lines]",
          "893:           this.getStormEntities = function () {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1010:           return this.doAmbariRequest({",
          "1011:             url: '/ws/v1/timeline/metrics/metadata',",
          "1012:             method: 'GET'",
          "",
          "[Removed Lines]",
          "1009:         AmbariMetricsDatasource.prototype.testDatasource = function () {",
          "",
          "[Added Lines]",
          "1036:         this.testDatasource = function () {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1027:           console.log(query);",
          "1029:           appIds = appIds.sort();",
          "",
          "[Removed Lines]",
          "1026:         AmbariMetricsDatasource.prototype.suggestApps = function (query) {",
          "",
          "[Added Lines]",
          "1053:         this.suggestApps = function (query) {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1042:           if (!app) {",
          "1043:             return $q.when([]);",
          "1044:           }",
          "",
          "[Removed Lines]",
          "1041:         AmbariMetricsDatasource.prototype.suggestMetrics = function (query, app) {",
          "",
          "[Added Lines]",
          "1068:         this.suggestMetrics = function (query, app) {",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1050:           return $q.when(keys);",
          "1051:         };",
          "1054:           if (!app) { app = ''; }",
          "1055:           return this.doAmbariRequest({",
          "1056:             method: 'GET',",
          "",
          "[Removed Lines]",
          "1053:         AmbariMetricsDatasource.prototype.suggestClusters = function(app) {",
          "",
          "[Added Lines]",
          "1080:         this.suggestClusters = function(app) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1076:           if (!app) { app = ''; }",
          "1077:           if (!cluster) { cluster = ''; }",
          "1078:           return this.doAmbariRequest({",
          "",
          "[Removed Lines]",
          "1075:         AmbariMetricsDatasource.prototype.suggestHosts = function (app, cluster) {",
          "",
          "[Added Lines]",
          "1102:         this.suggestHosts = function (app, cluster) {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1099:         var aggregatorsPromise = null;",
          "1101:           if (aggregatorsPromise) {",
          "1102:             return aggregatorsPromise;",
          "1103:           }",
          "",
          "[Removed Lines]",
          "1100:         AmbariMetricsDatasource.prototype.getAggregators = function () {",
          "",
          "[Added Lines]",
          "1127:         this.getAggregators = function () {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1106:           ]);",
          "1107:           return aggregatorsPromise;",
          "1108:         };",
          "",
          "[Removed Lines]",
          "1110:         return AmbariMetricsDatasource;",
          "1111:       });",
          "1112:     }",
          "1113: );",
          "",
          "[Added Lines]",
          "1136:       };",
          "1138:       return {",
          "1139:         AmbariMetricsDatasource: AmbariMetricsDatasource",
          "1140:       };",
          "1142:     });",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/directives.js"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: import { AmbariMetricsDatasource } from './datasource';",
          "19: import { AmbariMetricsQueryCtrl } from './query_ctrl';",
          "20: import { AmbariMetricsConfigCtrl } from './config_ctrl';",
          "21: export { AmbariMetricsDatasource as Datasource, AmbariMetricsQueryCtrl as QueryCtrl, AmbariMetricsConfigCtrl as ConfigCtrl };",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: System.register(['./datasource', './query_ctrl', './config_ctrl'], function(exports_1) {",
          "20:     var datasource_1, query_ctrl_1, config_ctrl_1;",
          "21:     return {",
          "22:         setters:[",
          "23:             function (datasource_1_1) {",
          "24:                 datasource_1 = datasource_1_1;",
          "25:             },",
          "26:             function (query_ctrl_1_1) {",
          "27:                 query_ctrl_1 = query_ctrl_1_1;",
          "28:             },",
          "29:             function (config_ctrl_1_1) {",
          "30:                 config_ctrl_1 = config_ctrl_1_1;",
          "31:             }],",
          "32:         execute: function() {",
          "33:             exports_1(\"Datasource\", datasource_1.AmbariMetricsDatasource);",
          "34:             exports_1(\"QueryCtrl\", query_ctrl_1.AmbariMetricsQueryCtrl);",
          "35:             exports_1(\"ConfigCtrl\", config_ctrl_1.AmbariMetricsConfigCtrl);",
          "36:         }",
          "37:     }",
          "38: });",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.js.map",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: {\"version\":3,\"file\":\"module.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../public/app/plugins/datasource/ambari-metrics/module.ts\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;YAsB+B,6DAAU;YACX,2DAAS;YACR,8DAAU\"}",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/module.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: import {AmbariMetricsDatasource} from './datasource';",
          "19: import {AmbariMetricsQueryCtrl} from './query_ctrl';",
          "20: import {AmbariMetricsConfigCtrl} from './config_ctrl';",
          "22: export {",
          "23:     AmbariMetricsDatasource as Datasource,",
          "24:     AmbariMetricsQueryCtrl as QueryCtrl,",
          "25:     AmbariMetricsConfigCtrl as ConfigCtrl",
          "26: };",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/annotations.editor.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!--",
          "2:   ~ Licensed to the Apache Software Foundation (ASF) under one",
          "3:   ~ or more contributor license agreements.  See the NOTICE file",
          "4:   ~ distributed with this work for additional information",
          "5:   ~ regarding copyright ownership.  The ASF licenses this file",
          "6:   ~ to you under the Apache License, Version 2.0 (the",
          "7:   ~ \"License\"); you may not use this file except in compliance",
          "8:   ~ with the License.  You may obtain a copy of the License at",
          "9:   ~",
          "10:   ~     http://www.apache.org/licenses/LICENSE-2.0",
          "11:   ~",
          "12:   ~ Unless required by applicable law or agreed to in writing, software",
          "13:   ~ distributed under the License is distributed on an \"AS IS\" BASIS,",
          "14:   ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "15:   ~ See the License for the specific language governing permissions and",
          "16:   ~ limitations under the License.",
          "17:   -->",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/config.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   ~ See the License for the specific language governing permissions and",
          "16:   ~ limitations under the License.",
          "17:   -->",
          "",
          "[Removed Lines]",
          "18: <div ng-include=\"httpConfigPartialSrc\"></div>",
          "19: <br>",
          "",
          "[Added Lines]",
          "18: <datasource-http-settings current=\"ctrl.current\"></datasource-http-settings>",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.editor.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   ~ See the License for the specific language governing permissions and",
          "16:   ~ limitations under the License.",
          "17:   -->",
          "131:             Alias",
          "136:                    spellcheck='false'",
          "137:                    placeholder=\"series alias\"",
          "138:                    data-min-length=0 data-items=100",
          "141:                 <i class=\"fa fa-warning\"></i>",
          "142:             </a>",
          "173:             </select>",
          "176: </div>",
          "",
          "[Removed Lines]",
          "18: <div class=\"tight-form\">",
          "19:     <ul class=\"tight-form-list pull-right\">",
          "20:         <li class=\"tight-form-item small\" ng-show=\"target.datasource\">",
          "21:             <em>{{target.datasource}}</em>",
          "22:         </li>",
          "23:         <li class=\"tight-form-item\">",
          "24:             <div class=\"dropdown\">",
          "25:                 <a class=\"pointer dropdown-toggle\" data-toggle=\"dropdown\" tabindex=\"1\">",
          "26:                     <i class=\"fa fa-bars\"></i>",
          "27:                 </a>",
          "28:                 <ul class=\"dropdown-menu pull-right\" role=\"menu\">",
          "29:                     <li role=\"menuitem\"><a tabindex=\"1\" ng-click=\"toggleQueryMode()\">Switch editor mode</a></li>",
          "30:                     <li role=\"menuitem\"><a tabindex=\"1\" ng-click=\"duplicateDataQuery(target)\">Duplicate</a></li>",
          "31:                     <li role=\"menuitem\"><a tabindex=\"1\" ng-click=\"moveDataQuery($index, $index-1)\">Move up</a></li>",
          "32:                     <li role=\"menuitem\"><a tabindex=\"1\" ng-click=\"moveDataQuery($index, $index+1)\">Move down</a></li>",
          "33:                 </ul>",
          "34:             </div>",
          "35:         </li>",
          "36:         <li class=\"tight-form-item last\">",
          "37:             <a class=\"pointer\" tabindex=\"1\" ng-click=\"removeDataQuery(target)\">",
          "38:                 <i class=\"fa fa-remove\"></i>",
          "39:             </a>",
          "40:         </li>",
          "41:     </ul>",
          "43:     <ul class=\"tight-form-list\">",
          "44:         <li class=\"tight-form-item\" style=\"min-width: 15px; text-align: center\">",
          "45:             {{target.refId}}",
          "46:         </li>",
          "47:         <li>",
          "48:             <a  class=\"tight-form-item\"",
          "49:                 ng-click=\"target.hide = !target.hide; get_data();\"",
          "50:                 role=\"menuitem\">",
          "51:                 <i class=\"fa fa-eye\"></i>",
          "52:             </a>",
          "53:         </li>",
          "54:     </ul>",
          "56:     <ul class=\"tight-form-list\" role=\"menu\">",
          "58:         <li class=\"tight-form-item\" style=\"width: 86px\">",
          "59:         Component",
          "60:     </li>",
          "61:         <li>",
          "62:             <input type=\"text\" class=\"input-large tight-form-input\" ng-model=\"target.app\"",
          "63:                    spellcheck='false' bs-typeahead=\"suggestApps\" placeholder=\"Component Name\" data-min-length=0 data-items=100",
          "64:                    ng-blur=\"targetBlur()\">",
          "65:             </input>",
          "66:             <a bs-tooltip=\"target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.metric\">",
          "67:                 <i class=\"fa fa-warning\"></i>",
          "68:             </a>",
          "69:         </li>",
          "71:         <li class=\"tight-form-item\" style=\"width: 86px\">",
          "72:             Metric",
          "73:         </li>",
          "74:         <li>",
          "75:             <input type=\"text\" class=\"input-large tight-form-input\" ng-model=\"target.metric\"",
          "76:                    spellcheck='false' bs-typeahead=\"suggestMetrics\" placeholder=\"metric name\" data-min-length=0 data-items=100",
          "77:                    ng-blur=\"targetBlur()\">",
          "78:             </input>",
          "79:             <a bs-tooltip=\"target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.metric\">",
          "80:                 <i class=\"fa fa-warning\"></i>",
          "81:             </a>",
          "82:         </li>",
          "84:         <li class=\"tight-form-item\" style=\"width: 86px\" ng-hide=\"dashboard.templating.list.length > 0\">",
          "85:             Cluster",
          "86:         </li>",
          "87:         <li ng-hide=\"dashboard.templating.list.length > 0\">",
          "88:             <input type=\"text\" class=\"input-large tight-form-input\" ng-model=\"target.cluster\"",
          "89:                    spellcheck='false' bs-typeahead=\"suggestClusters\" placeholder=\"cluster name\" data-min-length=0 data-items=100",
          "90:                    ng-blur=\"targetBlur()\">",
          "91:             </input>",
          "92:             <a bs-tooltip=\"target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.metric\">",
          "93:                 <i class=\"fa fa-warning\"></i>",
          "94:             </a>",
          "95:         </li>",
          "97:         <li class=\"tight-form-item\" style=\"width: 86px\" ng-hide=\"dashboard.templating.list.length > 0\">",
          "98:             Hosts",
          "99:         </li>",
          "100:         <li ng-hide=\"dashboard.templating.list.length > 0\">",
          "101:             <input type=\"text\" class=\"input-large tight-form-input\" ng-model=\"target.hosts\"",
          "102:                    spellcheck='false' bs-typeahead=\"suggestHosts\" placeholder=\"host name\" data-min-length=0 data-items=100",
          "103:                    ng-blur=\"targetBlur()\">",
          "104:             </input>",
          "105:             <a bs-tooltip=\"target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.metric\">",
          "106:                 <i class=\"fa fa-warning\"></i>",
          "107:             </a>",
          "108:         </li>",
          "110:         <li class=\"tight-form-item\">",
          "111:             Aggregator",
          "112:         </li>",
          "113:         <li>",
          "114:             <select ng-model=\"target.aggregator\" class=\"tight-form-input input-small\"",
          "115:                     ng-options=\"agg for agg in aggregators\"",
          "116:                     ng-change=\"targetBlur()\">",
          "117:             </select>",
          "118:             <a bs-tooltip=\"target.errors.aggregator\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.aggregator\">",
          "119:                 <i class=\"fa fa-warning\"></i>",
          "120:             </a>",
          "121:         </li>",
          "123:     </ul>",
          "125:     <div class=\"clearfix\"></div>",
          "126: </div>",
          "128: <div class=\"tight-form\">",
          "129:     <ul class=\"tight-form-list\" role=\"menu\">",
          "130:         <li class=\"tight-form-item tight-form-align\" style=\"width: 86px\">",
          "132:         </li>",
          "133:         <li>",
          "134:             <input type=\"text\" class=\"tight-form-input input-large\"",
          "135:                    ng-model=\"target.alias\"",
          "139:                    ng-blur=\"targetBlur()\"></input>",
          "140:             <a bs-tooltip=\"target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"target.errors.metric\">",
          "143:         </li>",
          "144:         <li class=\"tight-form-item tight-form-align\">",
          "145:            Transform",
          "146:         </li>",
          "147:         <li>",
          "148:             <select ng-model=\"target.transform\" class=\"tight-form-input input-small\"",
          "149:                     ng-options=\"transform for transform in transforms\"",
          "150:                     ng-init=\"transform()\"",
          "151:                     ng-change=\"targetBlur()\"></select>",
          "152:         </li>",
          "154:         <li class=\"tight-form-item tight-form-align\">",
          "155:             Precision",
          "156:         </li>",
          "157:         <li>",
          "158:             <select ng-model=\"target.precision\" class=\"tight-form-input input-small\"",
          "159:                     ng-options=\"precision for precision in precisions\"",
          "160:                     ng-init=\"precisionInit()\"",
          "161:                     ng-change=\"targetBlur()\">",
          "162:             </select>",
          "163:         </li>",
          "165:         <li class=\"tight-form-item\">",
          "166:             Series Aggregator",
          "167:         </li>",
          "168:         <li>",
          "169:             <select ng-model=\"target.seriesAggregator\" class=\"tight-form-input input-small\"",
          "170:                     ng-options=\"seriesAggregator for seriesAggregator in seriesAggregators\"",
          "171:                     ng-init=\"seriesAggregator()\"",
          "172:                     ng-change=\"targetBlur()\">",
          "174:         </li>",
          "175:     <div class=\"clearfix\"></div>",
          "",
          "[Added Lines]",
          "18: <query-editor-row query-ctrl=\"ctrl\" can-collapse=\"true\">",
          "19:  <div class=\"gf-form-inline\">",
          "20:   <div class=\"gf-form max-width-25\">",
          "21:       <label class=\"gf-form-label query-keyword width-8\">",
          "22:           Component",
          "23:       </label>",
          "24:          <input type=\"text\" class=\"gf-form-input\" ng-model=\"ctrl.target.app\"",
          "25:                spellcheck='false' bs-typeahead=\"ctrl.suggestApps\" placeholder=\"Component Name\" data-min-length=0 data-items=100",
          "26:                ng-blur=\"ctrl.targetBlur()\">",
          "27:          </input>",
          "28:     </div>",
          "30:     <div class=\"gf-form\">",
          "31:      <label class=\"gf-form-label query-keyword width-8\">",
          "32:          Metric",
          "33:      </label>",
          "34:         <input type=\"text\" class=\"input-large gf-form-input\" ng-model=\"ctrl.target.metric\"",
          "35:                spellcheck='false' bs-typeahead=\"ctrl.suggestMetrics\" placeholder=\"metric name\" data-min-length=0 data-items=100",
          "36:                ng-blur=\"ctrl.targetBlur()\">",
          "37:         </input>",
          "38:         <a bs-tooltip=\"ctrl.target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"ctrl.target.errors.metric\">",
          "39:             <i class=\"fa fa-warning\"></i>",
          "40:         </a>",
          "41:     </div>",
          "44:     <div class=\"gf-form\">",
          "45:      <label class=\"gf-form-label query-keyword width-8\">",
          "46:         Hosts",
          "47:      </label>",
          "49:         <input type=\"text\" class=\"input-large gf-form-input\" ng-model=\"ctrl.target.hosts\"",
          "50:                spellcheck='false' bs-typeahead=\"ctrl.suggestHosts\" placeholder=\"host name\" data-min-length=0 data-items=100",
          "51:                ng-blur=\"ctrl.targetBlur()\">",
          "52:         </input>",
          "53:         <a bs-tooltip=\"ctrl.target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"ctrl.target.errors.metric\">",
          "54:             <i class=\"fa fa-warning\"></i>",
          "55:         </a>",
          "56:     </div>",
          "58:     <div class=\"gf-form\">",
          "59:      <label class=\"gf-form-label query-keyword width-8\">",
          "60:         Aggregator",
          "61:      </label>",
          "62:         <select ng-model=\"ctrl.target.aggregator\" class=\"gf-form-input input-small\"",
          "63:                 ng-options=\"agg for agg in ctrl.aggregators\"",
          "64:                 ng-change=\"ctrl.targetBlur()\">",
          "65:         </select>",
          "66:         <a bs-tooltip=\"ctrl.target.errors.aggregator\" style=\"color: rgb(229, 189, 28)\" ng-show=\"ctrl.target.errors.aggregator\">",
          "67:             <i class=\"fa fa-warning\"></i>",
          "68:         </a>",
          "69:     </div>",
          "71:  </div>",
          "72:  <div class=\"gf-form-inline\">",
          "74:     <div class=\"gf-form\">",
          "75:      <label class=\"gf-form-label query-keyword width-8\">",
          "77:         </label>",
          "78:             <input type=\"text\" class=\"gf-form-input input-large\"",
          "79:                    ng-model=\"ctrl.target.alias\"",
          "83:                    ng-blur=\"ctrl.targetBlur()\"></input>",
          "84:             <a bs-tooltip=\"ctrl.target.errors.metric\" style=\"color: rgb(229, 189, 28)\" ng-show=\"ctrl.target.errors.metric\">",
          "87:     </div>",
          "89:     <div class=\"gf-form\">",
          "90:      <label class=\"gf-form-label query-keyword width-8\">",
          "91:             Transform",
          "92:         </label>",
          "93:             <select ng-model=\"ctrl.target.transform\" class=\"gf-form-input input-small\"",
          "94:                     ng-options=\"transform for transform in ctrl.transforms\"",
          "95:                     ng-init=\"ctrl.transform()\"",
          "96:                     ng-change=\"ctrl.targetBlur()\"></select>",
          "97:     </div>",
          "100:     <div class=\"gf-form\">",
          "101:      <label class=\"gf-form-label query-keyword width-8\">",
          "102:             Precision",
          "103:         </label>",
          "104:             <select ng-model=\"ctrl.target.precision\" class=\"gf-form-input input-small\"",
          "105:                     ng-options=\"precision for precision in ctrl.precisions\"",
          "106:                     ng-init=\"ctrl.precisionInit()\"",
          "107:                     ng-change=\"ctrl.targetBlur()\">",
          "109:     </div>",
          "110:         <div class=\"clearfix\"></div>",
          "112: </query-editor-row>",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html||ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/partials/query.options.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/queryCtrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import { QueryCtrl } from 'app/plugins/sdk';",
          "21: export declare class AmbariMetricsQueryCtrl extends QueryCtrl {",
          "22:     static templateUrl: string;",
          "23:     aggregators: any;",
          "24:     aggregator: any;",
          "25:     errors: any;",
          "26:     precisions: any;",
          "27:     transforms: any;",
          "28:     transform: any;",
          "29:     precisionInit: any;",
          "30:     suggestMetrics: any;",
          "31:     suggestApps: any;",
          "32:     suggestHosts: any;",
          "34:     constructor($scope: any, $injector: any);",
          "35:     targetBlur(): void;",
          "36:     getTextValues(metricFindResult: any): any;",
          "37:     getCollapsedText(): string;",
          "38:     validateTarget(): any;",
          "39: }",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"use strict\";",
          "19: var __extends = (this && this.__extends) || (function () {",
          "20:     var extendStatics = function (d, b) {",
          "21:         extendStatics = Object.setPrototypeOf ||",
          "22:             ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||",
          "23:             function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };",
          "24:         return extendStatics(d, b);",
          "25:     }",
          "26:     return function (d, b) {",
          "27:         extendStatics(d, b);",
          "28:         function __() { this.constructor = d; }",
          "29:         d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());",
          "30:     };",
          "31: })();",
          "32: exports.__esModule = true;",
          "34: var angular_1 = require(\"angular\");",
          "35: var lodash_1 = require(\"lodash\");",
          "36: var sdk_1 = require(\"app/plugins/sdk\");",
          "37: var AmbariMetricsQueryCtrl = /** @class */ (function (_super) {",
          "38:     __extends(AmbariMetricsQueryCtrl, _super);",
          "40:     function AmbariMetricsQueryCtrl($scope, $injector) {",
          "41:         var _this = _super.call(this, $scope, $injector) || this;",
          "42:         _this.targetBlur = function () {",
          "43:             this.target.errors = this.validateTarget(this.target);",
          "45:             if (!lodash_1[\"default\"].isEqual(this.oldTarget, this.target) && lodash_1[\"default\"].isEmpty(this.target.errors)) {",
          "46:                 this.oldTarget = angular_1[\"default\"].copy(this.target);",
          "47:                 this.get_data();",
          "48:             }",
          "49:         };",
          "50:         _this.getTextValues = function (metricFindResult) {",
          "51:             return lodash_1[\"default\"].map(metricFindResult, function (value) { return value.text; });",
          "52:         };",
          "53:         _this.suggestApps = function (query, callback) {",
          "54:             this.datasource.suggestApps(query)",
          "55:                 .then(this.getTextValues)",
          "56:                 .then(callback);",
          "57:         };",
          "58:         _this.suggestClusters = function (query, callback) {",
          "59:             this.datasource.suggestClusters(this.target.app)",
          "60:                 .then(this.getTextValues)",
          "61:                 .then(callback);",
          "62:         };",
          "63:         _this.suggestHosts = function (query, callback) {",
          "64:             this.datasource.suggestHosts(this.target.app, this.target.cluster)",
          "65:                 .then(this.getTextValues)",
          "66:                 .then(callback);",
          "67:         };",
          "68:         _this.suggestMetrics = function (query, callback) {",
          "69:             this.datasource.suggestMetrics(query, this.target.app)",
          "70:                 .then(this.getTextValues)",
          "71:                 .then(callback);",
          "72:         };",
          "73:         _this.suggestTagKeys = function (query, callback) {",
          "74:             this.datasource.metricFindQuery('tag_names(' + this.target.metric + ')')",
          "75:                 .then(this.getTextValues)",
          "76:                 .then(callback);",
          "77:         };",
          "78:         _this.suggestTagValues = function (query, callback) {",
          "79:             this.datasource.metricFindQuery('tag_values(' + this.target.metric + ',' + this.target.currentTagKey + ')')",
          "80:                 .then(this.getTextValues)",
          "81:                 .then(callback);",
          "82:         };",
          "83:         _this.addTag = function () {",
          "84:             if (!this.addTagMode) {",
          "85:                 this.addTagMode = true;",
          "86:                 return;",
          "87:             }",
          "88:             if (!this.target.tags) {",
          "89:                 this.target.tags = {};",
          "90:             }",
          "91:             this.target.errors = this.validateTarget(this.target);",
          "92:             if (!this.target.errors.tags) {",
          "93:                 this.target.tags[this.target.currentTagKey] = this.target.currentTagValue;",
          "94:                 this.target.currentTagKey = '';",
          "95:                 this.target.currentTagValue = '';",
          "96:                 this.targetBlur();",
          "97:             }",
          "98:             this.addTagMode = false;",
          "99:         };",
          "100:         _this.removeTag = function (key) {",
          "101:             delete this.target.tags[key];",
          "102:             this.targetBlur();",
          "103:         };",
          "104:         _this.validateTarget = function (target) {",
          "105:             var errs = {};",
          "106:             if (target.tags && lodash_1[\"default\"].has(target.tags, target.currentTagKey)) {",
          "107:                 errs.tags = \"Duplicate tag key '\" + target.currentTagKey + \"'.\";",
          "108:             }",
          "109:             return errs;",
          "110:         };",
          "111:         _this.errors = _this.validateTarget(_this.target);",
          "112:         _this.aggregators = ['none', 'avg', 'sum', 'min', 'max'];",
          "113:         _this.precisions = ['default', 'seconds', 'minutes', 'hours', 'days'];",
          "114:         _this.transforms = ['none', 'diff', 'rate'];",
          "115:         _this.seriesAggregators = ['none', 'avg', 'sum', 'min', 'max'];",
          "116:         if (!_this.target.aggregator) {",
          "117:             _this.target.aggregator = 'avg';",
          "118:         }",
          "119:         _this.precisionInit = function () {",
          "120:             if (typeof this.target.precision == 'undefined') {",
          "121:                 this.target.precision = \"default\";",
          "122:             }",
          "123:         };",
          "124:         _this.transform = function () {",
          "125:             if (typeof this.target.transform == 'undefined') {",
          "126:                 this.target.transform = \"none\";",
          "127:             }",
          "128:         };",
          "129:         _this.seriesAggregator = function () {",
          "130:             if (typeof $scope.target.seriesAggregator == 'undefined') {",
          "131:                 this.target.seriesAggregator = \"none\";",
          "132:             }",
          "133:         };",
          "134:         $scope.$watch('target.app', function (newValue) {",
          "135:             if (newValue === '') {",
          "136:                 this.target.metric = '';",
          "137:                 this.target.hosts = '';",
          "138:                 this.target.cluster = '';",
          "139:             }",
          "140:         });",
          "141:         if (!_this.target.downsampleAggregator) {",
          "142:             _this.target.downsampleAggregator = 'avg';",
          "143:         }",
          "144:         _this.datasource.getAggregators().then(function (aggs) {",
          "145:             this.aggregators = aggs;",
          "146:         });",
          "147:         return _this;",
          "148:     }",
          "149:     AmbariMetricsQueryCtrl.templateUrl = 'partials/query.editor.html';",
          "150:     return AmbariMetricsQueryCtrl;",
          "151: }(sdk_1.QueryCtrl));",
          "152: exports.AmbariMetricsQueryCtrl = AmbariMetricsQueryCtrl;",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.js.map",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: {\"version\":3,\"file\":\"query_ctrl.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../public/app/plugins/datasource/ambari-metrics/query_ctrl.ts\"],\"names\":[\"AmbariMetricsQueryCtrl\",\"AmbariMetricsQueryCtrl.constructor\",\"AmbariMetricsQueryCtrl.targetBlur\",\"AmbariMetricsQueryCtrl.getTextValues\",\"AmbariMetricsQueryCtrl.getCollapsedText\",\"AmbariMetricsQueryCtrl.validateTarget\"],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;GAgBG;AACH,oDAAoD;;;;;;;;;;;;;;;;;;YAMpD;gBAA4CA,0CAASA;gBAajDA,iBAAiBA;gBACjBA,gCAAYA,MAAMA,EAAEA,SAASA;oBAdjCC,iBAyFCA;oBA1EOA,kBAAMA,MAAMA,EAAEA,SAASA,CAACA,CAACA;oBAEzBA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,cAAcA,EAAEA,CAACA;oBACpCA,IAAIA,CAACA,WAAWA,GAAGA,CAACA,MAAMA,EAACA,KAAKA,EAAEA,KAAKA,EAAEA,KAAKA,EAAEA,KAAKA,CAACA,CAACA;oBACvDA,IAAIA,CAACA,UAAUA,GAAGA,CAACA,SAASA,EAACA,SAASA,EAAEA,SAASA,EAAEA,OAAOA,EAAEA,MAAMA,CAACA,CAACA;oBACpEA,IAAIA,CAACA,UAAUA,GAAGA,CAACA,MAAMA,EAACA,MAAMA,CAACA,CAACA;oBAElCA,EAAEA,CAACA,CAACA,CAACA,IAAIA,CAACA,MAAMA,CAACA,UAAUA,CAACA,CAACA,CAACA;wBAC1BA,IAAIA,CAACA,MAAMA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;oBACnCA,CAACA;oBAEDA,IAAIA,CAACA,aAAaA,GAAGA;wBAClB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC;4BAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;wBACvC,CAAC;oBACJ,CAAC,CAACA;oBAEFA,IAAIA,CAACA,SAASA,GAAGA;wBACd,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC;4BAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC;wBACpC,CAAC;oBACJ,CAAC,CAACA;oBACFA,MAAMA,CAACA,MAAMA,CAACA,iBAAiBA,EAAEA,UAAUA,QAAQA;wBAC/C,EAAE,CAAC,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;4BAClB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;4BAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;wBAClC,CAAC;oBACL,CAAC,CAACA,CAACA;oBAGHA,IAAIA,CAACA,UAAUA,CAACA,cAAcA,EAAEA,CAACA,IAAIA,CAACA,UAACA,IAAIA;wBACvCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,MAAMA,KAAKA,CAACA,CAACA,CAACA,CAACA;4BACpBA,KAAIA,CAACA,WAAWA,GAAGA,IAAIA,CAACA;wBAC5BA,CAACA;oBACLA,CAACA,CAACA,CAACA;oBAGHA,IAAIA,CAACA,cAAcA,GAAGA,UAACA,KAAKA,EAAEA,QAAQA;wBAClCA,KAAIA,CAACA,UAAUA,CAACA,cAAcA,CAACA,KAAKA,EAAEA,KAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA;6BACjDA,IAAIA,CAACA,KAAIA,CAACA,aAAaA,CAACA;6BACxBA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBACxBA,CAACA,CAACA;oBAEFA,IAAIA,CAACA,WAAWA,GAAGA,UAACA,KAAKA,EAAEA,QAAQA;wBAC/BA,KAAIA,CAACA,UAAUA,CAACA,WAAWA,CAACA,KAAKA,CAACA;6BAC7BA,IAAIA,CAACA,KAAIA,CAACA,aAAaA,CAACA;6BACxBA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBACxBA,CAACA,CAACA;oBAEFA,IAAIA,CAACA,YAAYA,GAAGA,UAACA,KAAKA,EAAEA,QAAQA;wBAChCA,KAAIA,CAACA,UAAUA,CAACA,YAAYA,CAACA,KAAKA,EAAEA,KAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA;6BAC/CA,IAAIA,CAACA,KAAIA,CAACA,aAAaA,CAACA;6BACxBA,IAAIA,CAACA,QAAQA,CAACA,CAACA;oBACxBA,CAACA,CAACA;gBACNA,CAACA;gBAEDD,2CAAUA,GAAVA;oBACIE,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,cAAcA,EAAEA,CAACA;oBACpCA,IAAIA,CAACA,OAAOA,EAAEA,CAACA;gBACnBA,CAACA;gBAEDF,8CAAaA,GAAbA,UAAcA,gBAAgBA;oBAC1BG,MAAMA,CAACA,gBAACA,CAACA,GAAGA,CAACA,gBAAgBA,EAAEA,UAASA,KAAKA,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAACA,CAACA;gBAC3EA,CAACA;gBACDH,iDAAgBA,GAAhBA;oBACII,IAAIA,IAAIA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,MAAMA,GAAGA,MAAMA,GAAGA,IAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA;oBACzDA,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA;gBAEDJ,+CAAcA,GAAdA;oBACIK,IAAIA,IAAIA,GAAQA,EAAEA,CAACA;oBACnBA,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA;gBAtFML,kCAAWA,GAAGA,4BAA4BA,CAACA;gBAwFtDA,6BAACA;YAADA,CAACA,AAzFD,EAA4C,eAAS,EAyFpD;YAzFD,2DAyFC,CAAA\"}",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts||ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts": [
          "File: ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts -> ambari-metrics/ambari-metrics-grafana/ambari-metrics/query_ctrl.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import angular from 'angular';",
          "22: import _ from 'lodash';",
          "23: import {QueryCtrl} from \"app/plugins/sdk\";",
          "25: export class AmbariMetricsQueryCtrl extends QueryCtrl {",
          "27:     static templateUrl = 'partials/query.editor.html';",
          "28:     aggregators: any;",
          "29:     aggregator: any;",
          "30:     errors: any;",
          "31:     precisions: any;",
          "32:     transforms: any;",
          "33:     transform: any;",
          "34:     precisionInit: any;",
          "35:     suggestMetrics: any;",
          "36:     suggestApps: any;",
          "37:     suggestHosts: any;",
          "38:     seriesAggregators: any;",
          "41:     constructor($scope, $injector) {",
          "42:         super($scope, $injector);",
          "43:         this.errors = this.validateTarget(this.target);",
          "44:         this.aggregators = ['none','avg', 'sum', 'min', 'max'];",
          "45:         this.precisions = ['default','seconds', 'minutes', 'hours', 'days'];",
          "46:         this.transforms = ['none','diff','rate'];",
          "47:         this.seriesAggregators = ['none', 'avg', 'sum', 'min', 'max'];",
          "49:         if (!this.target.aggregator) {",
          "50:             this.target.aggregator = 'avg';",
          "51:         }",
          "52:         this.precisionInit = function () {",
          "53:             if (typeof this.target.precision == 'undefined') {",
          "54:                 this.target.precision = \"default\";",
          "55:             }",
          "56:         };",
          "57:         this.transform = function () {",
          "58:             if (typeof this.target.transform == 'undefined') {",
          "59:                 this.target.transform = \"none\";",
          "60:             }",
          "61:         };",
          "62:         this.seriesAggregator = function () {",
          "63:             if (typeof $scope.target.seriesAggregator == 'undefined') {",
          "64:                 this.target.seriesAggregator = \"none\";",
          "65:             }",
          "66:         };",
          "67:         this.$watch('target.app', function (newValue) {",
          "68:             if (newValue === '') {",
          "69:                 this.target.metric = '';",
          "70:                 this.target.hosts = '';",
          "71:                 this.target.cluster = '';",
          "72:             }",
          "73:         });",
          "74:         if (!this.target.downsampleAggregator) {",
          "75:             this.target.downsampleAggregator = 'avg';",
          "76:         }",
          "78:         this.datasource.getAggregators().then(function(aggs) {",
          "79:             this.aggregators = aggs;",
          "80:         });",
          "81:     }",
          "83:     targetBlur = function() {",
          "84:         this.target.errors = this.validateTarget(this.target);",
          "87:         if (!_.isEqual(this.oldTarget, this.target) && _.isEmpty(this.target.errors)) {",
          "88:             this.oldTarget = angular.copy(this.target);",
          "89:             this.get_data();",
          "90:         }",
          "91:     };",
          "93:     getTextValues = function(metricFindResult) {",
          "94:         return _.map(metricFindResult, function(value) { return value.text; });",
          "95:     };",
          "97:     suggestApps = function(query, callback) {",
          "98:         this.datasource.suggestApps(query)",
          "99:             .then(this.getTextValues)",
          "100:             .then(callback);",
          "101:     };",
          "103:     suggestClusters = function(query, callback) {",
          "104:         this.datasource.suggestClusters(this.target.app)",
          "105:             .then(this.getTextValues)",
          "106:             .then(callback);",
          "107:     };",
          "109:     suggestHosts = function(query, callback) {",
          "110:         this.datasource.suggestHosts(this.target.app, this.target.cluster)",
          "111:             .then(this.getTextValues)",
          "112:             .then(callback);",
          "113:     };",
          "115:     suggestMetrics = function(query, callback) {",
          "116:         this.datasource.suggestMetrics(query, this.target.app)",
          "117:             .then(this.getTextValues)",
          "118:             .then(callback);",
          "119:     };",
          "121:     suggestTagKeys = function(query, callback) {",
          "122:         this.datasource.metricFindQuery('tag_names(' + this.target.metric + ')')",
          "123:             .then(this.getTextValues)",
          "124:             .then(callback);",
          "125:     };",
          "127:     suggestTagValues = function(query, callback) {",
          "128:         this.datasource.metricFindQuery('tag_values(' + this.target.metric + ',' + this.target.currentTagKey + ')')",
          "129:             .then(this.getTextValues)",
          "130:             .then(callback);",
          "131:     };",
          "133:     addTag = function() {",
          "134:         if (!this.addTagMode) {",
          "135:             this.addTagMode = true;",
          "136:             return;",
          "137:         }",
          "139:         if (!this.target.tags) {",
          "140:             this.target.tags = {};",
          "141:         }",
          "143:         this.target.errors = this.validateTarget(this.target);",
          "145:         if (!this.target.errors.tags) {",
          "146:             this.target.tags[this.target.currentTagKey] = this.target.currentTagValue;",
          "147:             this.target.currentTagKey = '';",
          "148:             this.target.currentTagValue = '';",
          "149:             this.targetBlur();",
          "150:         }",
          "152:         this.addTagMode = false;",
          "153:     };",
          "155:     removeTag = function(key) {",
          "156:         delete this.target.tags[key];",
          "157:         this.targetBlur();",
          "158:     };",
          "160:     validateTarget = function(target) {",
          "161:         var errs = {};",
          "163:         if (target.tags && _.has(target.tags, target.currentTagKey)) {",
          "164:             errs.tags = \"Duplicate tag key '\" + target.currentTagKey + \"'.\";",
          "165:         }",
          "167:         return errs;",
          "168:     }",
          "169: }",
          "",
          "---------------"
        ],
        "ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py||ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py": [
          "File: ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py -> ambari-metrics/ambari-metrics-host-monitoring/src/main/python/core/config_reader.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "277:     hosts = self.get(\"aggregation\", \"ams_monitor_log_dir\", \"/var/log/ambari-metrics-monitor\")",
          "278:     return hosts",
          "280:   def ams_monitor_log_file(self):",
          "281:     \"\"\"",
          "282:     :returns the log file",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:   def is_metering_enabled(self):",
          "281:     return \"true\" == str(self.get(\"metering\", \"metering_enabled\", \"false\")).lower()",
          "283:   def get_metering_appId(self):",
          "284:     return self.get(\"metering\", \"metering_appId\", \"metering\")",
          "286:   def get_metering_metrics(self):",
          "287:     return self.get(\"metering\", \"metering_metrics\", \"\").split(',')",
          "289:   def get_instance_type_script(self):",
          "290:     return self.get(\"metering\", \"instance_type_script\", \"\").split(',')",
          "292:   def get_provider_type(self):",
          "293:     return self.get(\"metering\", \"host_provider_type\", None)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc0453f866892fee0f33564f78ec4b94ee5330f4",
      "candidate_info": {
        "commit_hash": "cc0453f866892fee0f33564f78ec4b94ee5330f4",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/cc0453f866892fee0f33564f78ec4b94ee5330f4",
        "files": [
          "ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py"
        ],
        "message": "AMBARI-24587. HDI Livy2 fails to restart (aonishuk)",
        "before_after_code_files": [
          "ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py||ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py||ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py -> ambari-common/src/main/python/resource_management/libraries/providers/hdfs_resource.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import pwd",
          "27: import re",
          "28: import time",
          "29: from resource_management.core import shell",
          "30: from resource_management.core import sudo",
          "31: from resource_management.core.base import Fail",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: from urlparse import urlparse",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:     if not nameservices:",
          "91:       self.action_delayed_for_nameservice(None, action_name, main_resource)",
          "92:     else:",
          "93:       for nameservice in nameservices:",
          "94:         try:",
          "99:           self.action_delayed_for_nameservice(nameservice, action_name, main_resource)",
          "100:         except namenode_ha_utils.NoActiveNamenodeException as ex:",
          "101:           # one of ns can be down (during initial start forexample) no need to worry for federated cluster",
          "",
          "[Removed Lines]",
          "95:           if not dfs_type:",
          "96:             raise Fail(\"<serviceType> for fileSystem service should be set in metainfo.xml\")",
          "97:           nameservice = dfs_type.lower() + \"://\" + nameservice",
          "",
          "[Added Lines]",
          "94:       default_fs_protocol = urlparse(main_resource.resource.default_fs).scheme",
          "96:       if not default_fs_protocol or default_fs_protocol == \"viewfs\":",
          "97:         protocol = dfs_type.lower()",
          "98:       else:",
          "99:         protocol = default_fs_protocol",
          "103:           nameservice = protocol + \"://\" + nameservice",
          "",
          "---------------"
        ]
      }
    }
  ]
}