{
  "cve_id": "CVE-2024-5042",
  "cve_desc": "A flaw was found in the Submariner project. Due to unnecessary role-based access control permissions, a privileged attacker can run a malicious container on a node that may allow them to steal service account tokens and further compromise other nodes and potentially the entire cluster.",
  "repo": "submariner-io/submariner-operator",
  "patch_hash": "b27a04c4270e53cbff6ff8ac6245db10c204bcab",
  "patch_info": {
    "commit_hash": "b27a04c4270e53cbff6ff8ac6245db10c204bcab",
    "repo": "submariner-io/submariner-operator",
    "commit_url": "https://github.com/submariner-io/submariner-operator/commit/b27a04c4270e53cbff6ff8ac6245db10c204bcab",
    "files": [
      "config/rbac/submariner-operator/cluster_role.yaml",
      "config/rbac/submariner-operator/role.yaml",
      "controllers/submariner/migration_test.go",
      "controllers/submariner/np_syncer_resources.go",
      "pkg/embeddedyamls/yamls.go"
    ],
    "message": "Restrict operator ClusterRole*, ServiceAccount permissions\n\nThese were added for network-plugin syncer removal so retrict the\ndelete permissions to the networkplugin-syncer resource names.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
    "before_after_code_files": [
      "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
      "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
      "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
    ]
  },
  "patch_diff": {
    "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go": [
      "File: controllers/submariner/migration_test.go -> controllers/submariner/migration_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "55:        Name:      submariner.NetworkPluginSyncerComponent,",
      "56:       },",
      "57:      },",
      "58:      &rbacv1.ClusterRoleBinding{",
      "59:       ObjectMeta: metav1.ObjectMeta{",
      "60:        Namespace: t.Namespace,",
      "61:        Name:      submariner.NetworkPluginSyncerComponent,",
      "62:       },",
      "63:      },",
      "64:      &corev1.ServiceAccount{",
      "65:       ObjectMeta: metav1.ObjectMeta{",
      "66:        Namespace: t.Namespace,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:      &rbacv1.ClusterRole{",
      "59:       ObjectMeta: metav1.ObjectMeta{",
      "60:        Namespace: t.Namespace,",
      "61:        Name:      \"ocp-submariner-networkplugin-syncer\",",
      "62:       },",
      "63:      },",
      "70:      &rbacv1.ClusterRoleBinding{",
      "71:       ObjectMeta: metav1.ObjectMeta{",
      "72:        Namespace: t.Namespace,",
      "73:        Name:      \"ocp-submariner-networkplugin-syncer\",",
      "74:       },",
      "75:      },",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:      },",
      "84:     })",
      "86:     t.AssertNoResource(&corev1.ServiceAccount{",
      "87:      ObjectMeta: metav1.ObjectMeta{",
      "88:       Name: submariner.NetworkPluginSyncerComponent,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "98:     t.AssertNoResource(&rbacv1.ClusterRole{",
      "99:      ObjectMeta: metav1.ObjectMeta{",
      "100:       Name: \"ocp-submariner-networkplugin-syncer\",",
      "101:      },",
      "102:     })",
      "104:     t.AssertNoResource(&rbacv1.ClusterRoleBinding{",
      "105:      ObjectMeta: metav1.ObjectMeta{",
      "106:       Name: \"ocp-submariner-networkplugin-syncer\",",
      "107:      },",
      "108:     })",
      "",
      "---------------"
    ],
    "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
      "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:  deleteAll := func(objs ...client.Object) error {",
      "45:   for _, obj := range objs {",
      "47:    obj.SetNamespace(instance.Namespace)",
      "49:    err := r.config.ScopedClient.Delete(ctx, obj)",
      "",
      "[Removed Lines]",
      "46:    obj.SetName(NetworkPluginSyncerComponent)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "59:  return deleteAll(",
      "60:   &appsv1.Deployment{",
      "61:    ObjectMeta: metav1.ObjectMeta{",
      "64:    },",
      "65:   },",
      "66:   &rbacv1.ClusterRole{",
      "67:    ObjectMeta: metav1.ObjectMeta{",
      "70:    },",
      "71:   },",
      "72:   &rbacv1.ClusterRoleBinding{",
      "73:    ObjectMeta: metav1.ObjectMeta{",
      "76:    },",
      "77:   },",
      "78:   &rbacv1.ClusterRole{",
      "79:    ObjectMeta: metav1.ObjectMeta{",
      "82:    },",
      "83:   },",
      "84:   &rbacv1.ClusterRoleBinding{",
      "85:    ObjectMeta: metav1.ObjectMeta{",
      "88:    },",
      "89:   },",
      "90:   &corev1.ServiceAccount{",
      "91:    ObjectMeta: metav1.ObjectMeta{",
      "94:    },",
      "95:   },",
      "96:  )",
      "",
      "[Removed Lines]",
      "62:     Namespace: instance.Namespace,",
      "63:     Name:      NetworkPluginSyncerComponent,",
      "68:     Namespace: instance.Namespace,",
      "69:     Name:      NetworkPluginSyncerComponent,",
      "74:     Namespace: instance.Namespace,",
      "75:     Name:      NetworkPluginSyncerComponent,",
      "80:     Namespace: instance.Namespace,",
      "81:     Name:      \"ocp-submariner-networkplugin-syncer\",",
      "86:     Namespace: instance.Namespace,",
      "87:     Name:      \"ocp-submariner-networkplugin-syncer\",",
      "92:     Namespace: instance.Namespace,",
      "93:     Name:      NetworkPluginSyncerComponent,",
      "",
      "[Added Lines]",
      "61:     Name: NetworkPluginSyncerComponent,",
      "66:     Name: NetworkPluginSyncerComponent,",
      "71:     Name: NetworkPluginSyncerComponent,",
      "76:     Name: \"ocp-submariner-networkplugin-syncer\",",
      "81:     Name: \"ocp-submariner-networkplugin-syncer\",",
      "86:     Name: NetworkPluginSyncerComponent,",
      "",
      "---------------"
    ],
    "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
      "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2519:     resources:",
      "2520:       # Temporarily needed for network-plugin syncer removal",
      "2521:       - serviceaccounts",
      "2522:     verbs:",
      "2523:       - delete",
      "2524:   - apiGroups:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2522:     resourceNames:",
      "2523:       - submariner-networkplugin-syncer",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2666:       # Temporarily needed for network-plugin syncer removal",
      "2667:       - clusterroles",
      "2668:       - clusterrolebindings",
      "2669:     verbs:",
      "2670:       - delete",
      "2671: `",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2671:     resourceNames:",
      "2672:       - ocp-submariner-networkplugin-syncer",
      "2673:       - submariner-networkplugin-syncer",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "95da895d5035370216401dbaace4bfd1293554bb",
      "candidate_info": {
        "commit_hash": "95da895d5035370216401dbaace4bfd1293554bb",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/95da895d5035370216401dbaace4bfd1293554bb",
        "files": [
          "pkg/embeddedyamls/yamls.go"
        ],
        "message": "Re-generate pkg/embeddedyamls/yamls.go\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/submariner-io/submariner-operator/pull/3046"
        ],
        "olp_code_files": {
          "patch": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2508:   - apiGroups:",
          "2509:       - \"\"",
          "2510:     resources:",
          "2512:       - services",
          "2519:     verbs:",
          "2521:   - apiGroups:",
          "2522:       - \"\"",
          "2523:     resources:",
          "2524:       - serviceaccounts",
          "2525:     verbs:",
          "2526:       - delete",
          "",
          "[Removed Lines]",
          "2511:       - pods",
          "2513:       - services/finalizers",
          "2514:       - endpoints",
          "2515:       - persistentvolumeclaims",
          "2516:       - events",
          "2517:       - configmaps",
          "2518:       - secrets",
          "2520:       - '*'",
          "",
          "[Added Lines]",
          "2511:       # For metrics",
          "2514:       - get",
          "2515:       - create",
          "2516:       - update",
          "2520:       # Temporarily needed for network-plugin syncer removal",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2529:     resources:",
          "2530:       - deployments",
          "2531:       - daemonsets",
          "2534:     verbs:",
          "2536:   - apiGroups:",
          "2537:       - monitoring.coreos.com",
          "2538:     resources:",
          "2539:       - servicemonitors",
          "2540:     verbs:",
          "2541:       - get",
          "",
          "[Removed Lines]",
          "2532:       - replicasets",
          "2533:       - statefulsets",
          "2535:       - '*'",
          "",
          "[Added Lines]",
          "2530:       - create",
          "2531:       - delete",
          "2532:       - get",
          "2533:       - list",
          "2534:       - patch",
          "2535:       - update",
          "2536:       - watch",
          "2540:       # Needed for openshift monitoring",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2549:     verbs:",
          "2550:       - update",
          "2551:   - apiGroups:",
          "2559:     resources:",
          "2561:     verbs:",
          "2562:       - get",
          "2563:   - apiGroups:",
          "2564:       - submariner.io",
          "2565:     resources:",
          "2567:     verbs:",
          "2569: `",
          "2570:  Config_rbac_submariner_operator_role_binding_yaml = `---",
          "2571: kind: RoleBinding",
          "",
          "[Removed Lines]",
          "2552:       - \"\"",
          "2553:     resources:",
          "2554:       - pods",
          "2555:     verbs:",
          "2556:       - get",
          "2557:   - apiGroups:",
          "2558:       - apps",
          "2560:       - replicasets",
          "2566:       - '*'",
          "2568:       - '*'",
          "",
          "[Added Lines]",
          "2554:       - submariner.io",
          "2556:       - brokers",
          "2557:       - brokers/status",
          "2558:       - submariners",
          "2559:       - submariners/status",
          "2560:       - servicediscoveries",
          "2561:       - servicediscoveries/status",
          "2564:       - list",
          "2565:       - watch",
          "2566:       - create",
          "2567:       - update",
          "2568:       - delete",
          "2572:       - gateways",
          "2574:       - get",
          "2575:       - list",
          "2576:       - watch",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2610:       - update",
          "2611:       - delete",
          "2612:       - watch",
          "2614:       - \"\"",
          "2615:     resources:",
          "2616:       - pods",
          "2617:       - services",
          "2618:       - nodes",
          "",
          "[Removed Lines]",
          "2613:   - apiGroups:  # pods, services and nodes are looked up to figure out network settings",
          "",
          "[Added Lines]",
          "2621:   - apiGroups:",
          "2624:       # Needed for network settings discovery",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2626:       - dnses",
          "2627:     verbs:",
          "2628:       - get",
          "2631:       - update",
          "2632:   - apiGroups:",
          "2633:       - config.openshift.io",
          "2634:     resources:",
          "2635:       - networks",
          "2636:     verbs:",
          "2637:       - get",
          "",
          "[Removed Lines]",
          "2629:       - list",
          "2630:       - watch",
          "",
          "[Added Lines]",
          "2642:       # Needed for network settings discovery",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2639:   - apiGroups:",
          "2640:       - \"\"",
          "2641:     resources:",
          "2642:       - namespaces",
          "2643:     verbs:",
          "2644:       - get",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2650:       # Needed for openshift monitoring",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2647:   - apiGroups:",
          "2648:       - monitoring.coreos.com",
          "2649:     resources:",
          "2650:       - servicemonitors",
          "2651:     verbs:",
          "2652:       - get",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2659:       # Needed for openshift monitoring",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2654:   - apiGroups:",
          "2655:       - apps",
          "2656:     resources:",
          "2657:       - daemonsets",
          "2658:     verbs:",
          "2659:       - list",
          "2660:   - apiGroups:",
          "2661:       - rbac.authorization.k8s.io",
          "2662:     resources:",
          "2663:       - clusterroles",
          "2664:       - clusterrolebindings",
          "2665:     verbs:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2667:       # Needed for Flannel CNI discovery",
          "2674:       # Temporarily needed for network-plugin syncer removal",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2729:       - \"\"",
          "2730:     resources:",
          "2731:       - pods",
          "2752:     verbs:",
          "2753:       - get",
          "2762:       - update",
          "2775:   - apiGroups:",
          "2776:       - submariner.io",
          "2777:     resources:",
          "2779:     verbs:",
          "2781:   - apiGroups:",
          "2782:       - coordination.k8s.io",
          "2783:     resources:",
          "",
          "[Removed Lines]",
          "2732:       - services",
          "2733:       - services/finalizers",
          "2734:       - endpoints",
          "2735:       - events",
          "2736:       - configmaps",
          "2737:     verbs:",
          "2738:       - '*'",
          "2739:   - apiGroups:",
          "2740:       - apps",
          "2741:     resources:",
          "2742:       - deployments",
          "2743:       - daemonsets",
          "2744:       - replicasets",
          "2745:       - statefulsets",
          "2746:     verbs:",
          "2747:       - '*'",
          "2748:   - apiGroups:",
          "2749:       - monitoring.coreos.com",
          "2750:     resources:",
          "2751:       - servicemonitors",
          "2754:       - create",
          "2755:   - apiGroups:",
          "2756:       - apps",
          "2757:     resourceNames:",
          "2758:       - submariner-operator",
          "2759:     resources:",
          "2760:       - deployments/finalizers",
          "2761:     verbs:",
          "2763:   - apiGroups:",
          "2764:       - \"\"",
          "2765:     resources:",
          "2766:       - pods",
          "2767:     verbs:",
          "2768:       - get",
          "2769:   - apiGroups:",
          "2770:       - apps",
          "2771:     resources:",
          "2772:       - replicasets",
          "2773:     verbs:",
          "2774:       - get",
          "2778:       - '*'",
          "2780:       - '*'",
          "",
          "[Added Lines]",
          "2747:       - patch",
          "2751:       - clusters",
          "2752:       - endpoints",
          "2753:       - gateways",
          "2755:       - get",
          "2756:       - list",
          "2757:       - watch",
          "2758:       - create",
          "2759:       - update",
          "2760:       - delete",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2815:       - configmaps",
          "2816:     verbs:",
          "2817:       - get",
          "2822:   - apiGroups:",
          "2833:       - \"\"",
          "2834:     resources:",
          "2835:       - pods",
          "",
          "[Removed Lines]",
          "2818:       - list",
          "2819:       - watch",
          "2820:       - create",
          "2821:       - update",
          "2823:       - apiextensions.k8s.io",
          "2824:     resources:",
          "2825:       - customresourcedefinitions",
          "2826:     verbs:",
          "2827:       - get",
          "2828:       - list",
          "2829:       - create",
          "2830:       - update",
          "2831:       - delete",
          "2832:   - apiGroups:  # pods and services are looked up to figure out network settings",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2839:       - get",
          "2840:       - list",
          "2841:       - watch",
          "2868: `",
          "2869:  Config_rbac_submariner_gateway_cluster_role_binding_yaml = `---",
          "2870: apiVersion: rbac.authorization.k8s.io/v1",
          "",
          "[Removed Lines]",
          "2842:   - apiGroups:",
          "2843:       - operator.openshift.io",
          "2844:     resources:",
          "2845:       - dnses",
          "2846:     verbs:",
          "2847:       - get",
          "2848:       - list",
          "2849:       - watch",
          "2850:       - update",
          "2851:   - apiGroups:",
          "2852:       - config.openshift.io",
          "2853:     resources:",
          "2854:       - networks",
          "2855:     verbs:",
          "2856:       - get",
          "2857:       - list",
          "2858:   - apiGroups:",
          "2859:       - submariner.io",
          "2860:     resources:",
          "2861:       - endpoints",
          "2862:       - gateways",
          "2863:       - clusters",
          "2864:     verbs:",
          "2865:       - get",
          "2866:       - list",
          "2867:       - watch",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2921:   name: submariner-routeagent",
          "2922: rules:",
          "2923:   - apiGroups:",
          "2925:     resources:",
          "2928:       - endpoints",
          "2940:     verbs:",
          "2942:   - apiGroups:",
          "2944:     resources:",
          "2946:     verbs:",
          "2947:       - get",
          "2948:       - create",
          "2956:       - update",
          "2975: `",
          "2976:  Config_rbac_submariner_route_agent_role_binding_yaml = `---",
          "2977: kind: RoleBinding",
          "",
          "[Removed Lines]",
          "2924:       - \"\"",
          "2926:       - services",
          "2927:       - services/finalizers",
          "2929:       - events",
          "2930:       - configmaps",
          "2931:     verbs:",
          "2932:       - '*'",
          "2933:   - apiGroups:",
          "2934:       - apps",
          "2935:     resources:",
          "2936:       - deployments",
          "2937:       - daemonsets",
          "2938:       - replicasets",
          "2939:       - statefulsets",
          "2941:       - '*'",
          "2943:       - monitoring.coreos.com",
          "2945:       - servicemonitors",
          "2949:   - apiGroups:",
          "2950:       - apps",
          "2951:     resourceNames:",
          "2952:       - submariner-operator",
          "2953:     resources:",
          "2954:       - deployments/finalizers",
          "2955:     verbs:",
          "2957:   - apiGroups:",
          "2958:       - \"\"",
          "2959:     resources:",
          "2960:       - pods",
          "2961:     verbs:",
          "2962:       - get",
          "2963:   - apiGroups:",
          "2964:       - apps",
          "2965:     resources:",
          "2966:       - replicasets",
          "2967:     verbs:",
          "2968:       - get",
          "2969:   - apiGroups:",
          "2970:       - submariner.io",
          "2971:     resources:",
          "2972:       - '*'",
          "2973:     verbs:",
          "2974:       - '*'",
          "",
          "[Added Lines]",
          "2864:       - submariner.io",
          "2868:       - get",
          "2869:       - list",
          "2870:       - watch",
          "2872:       - submariner.io",
          "2874:       - gatewayroutes",
          "2875:       - nongatewayroutes",
          "2878:       - list",
          "2879:       - watch",
          "2882:       - delete",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2994: rules:",
          "2995:   - apiGroups:",
          "2996:       - \"\"",
          "3016:     resources:",
          "3017:       - pods",
          "3018:       - services",
          "3019:       - secrets",
          "3027:       - endpoints",
          "3034:     verbs:",
          "3035:       - get",
          "3036:       - list",
          "3039:   - apiGroups:",
          "3040:       - config.openshift.io",
          "3041:     resources:",
          "",
          "[Removed Lines]",
          "2997:     resources:",
          "2998:       - configmaps",
          "2999:     verbs:",
          "3000:       - get",
          "3001:       - list",
          "3002:       - watch",
          "3003:       - update",
          "3004:   - apiGroups:",
          "3005:       - apiextensions.k8s.io",
          "3006:     resources:",
          "3007:       - customresourcedefinitions",
          "3008:     verbs:",
          "3009:       - get",
          "3010:       - list",
          "3011:       - create",
          "3012:       - update",
          "3013:       - delete",
          "3014:   - apiGroups:  # pods and services are looked up to figure out network settings",
          "3015:       - \"\"",
          "3020:     verbs:",
          "3021:       - get",
          "3022:       - list",
          "3023:       - watch",
          "3024:   - apiGroups:",
          "3025:       - \"\"",
          "3026:     resources:",
          "3028:     verbs:",
          "3029:       - list",
          "3030:   - apiGroups:",
          "3031:       - operator.openshift.io",
          "3032:     resources:",
          "3033:       - dnses",
          "3037:       - watch",
          "3038:       - update",
          "",
          "[Added Lines]",
          "2909:       - configmaps",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3045:       - list",
          "3046:   - apiGroups:",
          "3047:       - \"\"",
          "3048:     verbs:",
          "3049:       - get",
          "3050:       - list",
          "3051:       - watch",
          "3052:       - update",
          "3055:   - apiGroups:",
          "3056:       - projectcalico.org",
          "3057:     resources:",
          "",
          "[Removed Lines]",
          "3053:     resources:",
          "3054:       - nodes",
          "",
          "[Added Lines]",
          "2923:     resources:",
          "2924:       - nodes",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3116:   creationTimestamp: null",
          "3117:   name: submariner-globalnet",
          "3118: rules:",
          "3174:   - apiGroups:",
          "3175:       - coordination.k8s.io",
          "3176:     resources:",
          "",
          "[Removed Lines]",
          "3119:   - apiGroups:",
          "3120:       - \"\"",
          "3121:     resources:",
          "3122:       - pods",
          "3123:       - services",
          "3124:       - services/finalizers",
          "3125:       - endpoints",
          "3126:       - persistentvolumeclaims",
          "3127:       - events",
          "3128:       - configmaps",
          "3129:       - secrets",
          "3130:     verbs:",
          "3131:       - '*'",
          "3132:   - apiGroups:",
          "3133:       - apps",
          "3134:     resources:",
          "3135:       - deployments",
          "3136:       - daemonsets",
          "3137:       - replicasets",
          "3138:       - statefulsets",
          "3139:     verbs:",
          "3140:       - '*'",
          "3141:   - apiGroups:",
          "3142:       - monitoring.coreos.com",
          "3143:     resources:",
          "3144:       - servicemonitors",
          "3145:     verbs:",
          "3146:       - get",
          "3147:       - create",
          "3148:   - apiGroups:",
          "3149:       - apps",
          "3150:     resourceNames:",
          "3151:       - submariner-operator",
          "3152:     resources:",
          "3153:       - deployments/finalizers",
          "3154:     verbs:",
          "3155:       - update",
          "3156:   - apiGroups:",
          "3157:       - \"\"",
          "3158:     resources:",
          "3159:       - pods",
          "3160:     verbs:",
          "3161:       - get",
          "3162:   - apiGroups:",
          "3163:       - apps",
          "3164:     resources:",
          "3165:       - replicasets",
          "3166:     verbs:",
          "3167:       - get",
          "3168:   - apiGroups:",
          "3169:       - submariner.io",
          "3170:     resources:",
          "3171:       - '*'",
          "3172:     verbs:",
          "3173:       - '*'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3206:   - apiGroups:",
          "3207:       - \"\"",
          "3208:     resources:",
          "3211:       - nodes",
          "3212:     verbs:",
          "3213:       - get",
          "3214:       - list",
          "3215:       - watch",
          "3216:       - update",
          "3217:   - apiGroups:",
          "3218:       - \"\"",
          "3219:     resources:",
          "",
          "[Removed Lines]",
          "3209:       - pods",
          "3210:       - namespaces",
          "",
          "[Added Lines]",
          "3035:   - apiGroups:",
          "3036:       - \"\"",
          "3037:     resources:",
          "3038:       - pods",
          "3039:     verbs:",
          "3040:       - get",
          "3041:       - list",
          "3042:       - watch",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3229:   - apiGroups:",
          "3230:       - submariner.io",
          "3231:     resources:",
          "3233:       - clusters",
          "3234:     verbs:",
          "3235:       - get",
          "3236:       - list",
          "",
          "[Removed Lines]",
          "3232:       - endpoints",
          "",
          "[Added Lines]",
          "3059:       - endpoints",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3255:   - apiGroups:",
          "3256:       - multicluster.x-k8s.io",
          "3257:     resources:",
          "3259:     verbs:",
          "3260:       - get",
          "3261:       - list",
          "",
          "[Removed Lines]",
          "3258:       - \"serviceexports\"",
          "",
          "[Added Lines]",
          "3084:       - serviceexports",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3483:       - get",
          "3484:       - list",
          "3485:       - watch",
          "3487:   - apiGroups:",
          "3488:       - discovery.k8s.io",
          "3489:     resources:",
          "",
          "[Removed Lines]",
          "3486:       - update",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3500:   - apiGroups:",
          "3501:       - submariner.io",
          "3502:     resources:",
          "3505:     verbs:",
          "3506:       - get",
          "3507:       - list",
          "",
          "[Removed Lines]",
          "3503:       - \"gateways\"",
          "3504:       - \"globalingressips\"",
          "",
          "[Added Lines]",
          "3328:       - gateways",
          "3329:       - globalingressips",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3509:   - apiGroups:",
          "3510:       - multicluster.x-k8s.io",
          "3511:     resources:",
          "3513:     verbs:",
          "3514:       - create",
          "3515:       - get",
          "",
          "[Removed Lines]",
          "3512:       - \"*\"",
          "",
          "[Added Lines]",
          "3337:       - serviceimports",
          "3338:       - serviceimports/status",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3517:       - watch",
          "3518:       - update",
          "3519:       - delete",
          "3520: `",
          "3521:  Config_rbac_lighthouse_agent_cluster_role_binding_yaml = `---",
          "3522: kind: ClusterRoleBinding",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3346:   - apiGroups:",
          "3347:       - multicluster.x-k8s.io",
          "3348:     resources:",
          "3349:       - serviceexports",
          "3350:     verbs:",
          "3351:       - get",
          "3352:       - list",
          "3353:       - watch",
          "3354:   - apiGroups:",
          "3355:       - multicluster.x-k8s.io",
          "3356:     resources:",
          "3357:       - serviceexports/status",
          "3358:     verbs:",
          "3359:       - update",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3572:   creationTimestamp: null",
          "3573:   name: submariner-lighthouse-coredns",
          "3574: rules:",
          "3586:   - apiGroups:",
          "3587:       - discovery.k8s.io",
          "3588:     resources:",
          "3589:       - endpointslices",
          "3590:     verbs:",
          "3592:       - get",
          "3593:       - list",
          "3594:       - watch",
          "3598:   - apiGroups:",
          "3599:       - submariner.io",
          "3600:     resources:",
          "3603:     verbs:",
          "3604:       - get",
          "3605:       - list",
          "",
          "[Removed Lines]",
          "3575:   - apiGroups:",
          "3576:       - \"\"",
          "3577:     resources:",
          "3578:       - services",
          "3579:       - namespaces",
          "3580:       - endpoints",
          "3581:     verbs:",
          "3582:       - get",
          "3583:       - list",
          "3584:       - watch",
          "3585:       - update",
          "3591:       - create",
          "3595:       - update",
          "3596:       - delete",
          "3597:       - deletecollection",
          "3601:       - \"gateways\"",
          "3602:       - \"submariners\"",
          "",
          "[Added Lines]",
          "3426:       - gateways",
          "3427:       - submariners",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "3607:   - apiGroups:",
          "3608:       - multicluster.x-k8s.io",
          "3609:     resources:",
          "3611:     verbs:",
          "3613:       - get",
          "3614:       - list",
          "3615:       - watch",
          "3618: `",
          "3619:  Config_rbac_lighthouse_coredns_cluster_role_binding_yaml = `---",
          "3620: kind: ClusterRoleBinding",
          "",
          "[Removed Lines]",
          "3610:       - \"*\"",
          "3612:       - create",
          "3616:       - update",
          "3617:       - delete",
          "",
          "[Added Lines]",
          "3435:       - serviceimports",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c944489ad3e1da187fd7aaf59e8f6aca6e7f8b9",
      "candidate_info": {
        "commit_hash": "7c944489ad3e1da187fd7aaf59e8f6aca6e7f8b9",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/7c944489ad3e1da187fd7aaf59e8f6aca6e7f8b9",
        "files": [
          "config/rbac/submariner-operator/cluster_role.yaml",
          "config/rbac/submariner-route-agent/cluster_role.yaml",
          "pkg/embeddedyamls/yamls.go"
        ],
        "message": "Restrict config.openshift.io/networks RBAC permissions\n\nThis resource type is only used for network settings discovery to query\nthe \"cluster\" Network so restrict the RBAC to only \"get\" access to the\n\"cluster\" resource name.\n\nThis applies to both the submariner-operator:\n\nhttps://github.com/submariner-io/submariner/blob/85fea596f30b0e84d6962c92bb129a6b8bce8028/pkg/routeagent_driver/handlers/ovn/connection.go#L358\n\nand route-agent components:\n\nhttps://github.com/submariner-io/submariner/blob/85fea596f30b0e84d6962c92bb129a6b8bce8028/pkg/routeagent_driver/handlers/ovn/connection.go#L358\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/submariner-io/submariner-operator/pull/3046"
        ],
        "olp_code_files": {
          "patch": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2641:     resources:",
          "2642:       # Needed for network settings discovery",
          "2643:       - networks",
          "2644:     verbs:",
          "2645:       - get",
          "2647:   - apiGroups:",
          "2648:       - monitoring.coreos.com",
          "2649:     resources:",
          "",
          "[Removed Lines]",
          "2646:       - list",
          "",
          "[Added Lines]",
          "2644:     resourceNames:",
          "2645:       - cluster",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2906:       - config.openshift.io",
          "2907:     resources:",
          "2908:       - networks",
          "2909:     verbs:",
          "2910:       - get",
          "2912:   - apiGroups:",
          "2913:       - \"\"",
          "2914:     resources:",
          "",
          "[Removed Lines]",
          "2911:       - list",
          "",
          "[Added Lines]",
          "2910:     resourceNames:",
          "2911:       - cluster",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c6c2121987384d7ce320ac53f5153db2befcfcb",
      "candidate_info": {
        "commit_hash": "2c6c2121987384d7ce320ac53f5153db2befcfcb",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/2c6c2121987384d7ce320ac53f5153db2befcfcb",
        "files": [
          "config/rbac/submariner-operator/cluster_role.yaml",
          "go.mod",
          "go.sum",
          "pkg/embeddedyamls/yamls.go",
          "pkg/metrics/service-monitor.go"
        ],
        "message": "Adjust code in order to remove operator RBAC permissions for namespaces\n\nWe grant namespace read permissions which is only needed to query for\nthe existence of the \"openshift-monitoring\" namespace to determine\nwhere to create ServiceMonitors. However we can eliminate this query\nand thus the permissions by trying to create ServiceMonitors in the\n\"openshift-monitoring\" namespace and, if the error indicates the\nnamespace is missing, create in the provided namespace.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go",
          "pkg/metrics/service-monitor.go||pkg/metrics/service-monitor.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/submariner-io/submariner-operator/pull/3046"
        ],
        "olp_code_files": {
          "patch": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring v0.67.1",
          "15:  github.com/prometheus-operator/prometheus-operator/pkg/client v0.67.1",
          "16:  github.com/prometheus/client_golang v1.16.0",
          "18:  github.com/submariner-io/shipyard v0.16.3",
          "19:  github.com/submariner-io/submariner v0.16.3",
          "20:  github.com/uw-labs/lichen v0.1.7",
          "",
          "[Removed Lines]",
          "17:  github.com/submariner-io/admiral v0.16.3",
          "",
          "[Added Lines]",
          "17:  github.com/submariner-io/admiral v0.16.4-0.20240506145005-5202ad86d76c",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "969: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "970: github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=",
          "971: github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "974: github.com/submariner-io/shipyard v0.16.3 h1:mkwnwdHWHQtHxJvnGDt92PnwXW/3ygsIBXBqZsOcUQc=",
          "975: github.com/submariner-io/shipyard v0.16.3/go.mod h1:mmfB5nerRRLJAneB0BwmPY6Y13HCfqcOFS5KTd14d/w=",
          "976: github.com/submariner-io/submariner v0.16.3 h1:7JmtunW101kqoFGKQCGmAGx944nfay5NECk5upPufXo=",
          "",
          "[Removed Lines]",
          "972: github.com/submariner-io/admiral v0.16.3 h1:y+nE7GFIH0TDhTRzM3Y8VVJZ6hozLjM6eCZ5KVj4o3o=",
          "973: github.com/submariner-io/admiral v0.16.3/go.mod h1:3v3sXLfvV4gBhgZrBZLE02rggwhY4nzXv0jMjRBrYRQ=",
          "",
          "[Added Lines]",
          "972: github.com/submariner-io/admiral v0.16.4-0.20240506145005-5202ad86d76c h1:0dWiSZ4M7AoZWA22Tw6pjrOCiDqovJzuH9o04tvRMT4=",
          "973: github.com/submariner-io/admiral v0.16.4-0.20240506145005-5202ad86d76c/go.mod h1:Zi6GRO3G3j/PZi7/f8VcpE5Z8G6h2wSCuIjPgg0SmRs=",
          "",
          "---------------"
        ],
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2644:     verbs:",
          "2645:       - get",
          "2646:       - list",
          "2656:   - apiGroups:",
          "2657:       - monitoring.coreos.com",
          "2658:     resources:",
          "",
          "[Removed Lines]",
          "2647:   - apiGroups:",
          "2648:       - \"\"",
          "2649:     resources:",
          "2650:       # Needed for openshift monitoring",
          "2651:       - namespaces",
          "2652:     verbs:",
          "2653:       - get",
          "2654:       - list",
          "2655:       - watch",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/metrics/service-monitor.go||pkg/metrics/service-monitor.go": [
          "File: pkg/metrics/service-monitor.go -> pkg/metrics/service-monitor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"github.com/pkg/errors\"",
          "25:  monitoringv1 \"github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1\"",
          "26:  monclientv1 \"github.com/prometheus-operator/prometheus-operator/pkg/client/versioned/typed/monitoring/v1\"",
          "27:  v1 \"k8s.io/api/core/v1\"",
          "29:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "30:  \"k8s.io/client-go/discovery\"",
          "32:  \"k8s.io/client-go/rest\"",
          "33:  \"k8s.io/utils/ptr\"",
          "35: )",
          "42: const openshiftMonitoringNS = \"openshift-monitoring\"",
          "",
          "[Removed Lines]",
          "28:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "31:  clientset \"k8s.io/client-go/kubernetes\"",
          "34:  logf \"sigs.k8s.io/controller-runtime/pkg/log\"",
          "37: var (",
          "38:  log                         = logf.Log.WithName(\"metrics\")",
          "39:  ErrServiceMonitorNotPresent = fmt.Errorf(\"no ServiceMonitor registered with the API\")",
          "40: )",
          "",
          "[Added Lines]",
          "27:  \"github.com/submariner-io/admiral/pkg/resource\"",
          "35: var ErrServiceMonitorNotPresent = fmt.Errorf(\"no ServiceMonitor registered with the API\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:   return nil, ErrServiceMonitorNotPresent",
          "58:  }",
          "74:  serviceMonitors := make([]*monitoringv1.ServiceMonitor, len(services))",
          "75:  mclient := monclientv1.NewForConfigOrDie(config)",
          "",
          "[Removed Lines]",
          "63:  cs, err := clientset.NewForConfig(config)",
          "64:  if err != nil {",
          "65:   return nil, errors.Wrap(err, \"error getting kube client\")",
          "66:  }",
          "68:  if _, err := cs.CoreV1().Namespaces().Get(ctx, openshiftMonitoringNS, metav1.GetOptions{}); err == nil {",
          "69:   ns = openshiftMonitoringNS",
          "70:  } else if !apierrors.IsNotFound(err) {",
          "71:   log.Error(err, \"Error checking for the OpenShift monitoring namespace\")",
          "72:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:    continue",
          "80:   }",
          "85:   if err != nil {",
          "86:    return nil, errors.Wrap(err, \"error creating ServiceMonitor\")",
          "87:   }",
          "",
          "[Removed Lines]",
          "82:   sm := GenerateServiceMonitor(ns, s)",
          "84:   smc, err := mclient.ServiceMonitors(ns).Create(ctx, sm, metav1.CreateOptions{})",
          "",
          "[Added Lines]",
          "65:   smc, err := mclient.ServiceMonitors(ns).Create(ctx, GenerateServiceMonitor(openshiftMonitoringNS, s), metav1.CreateOptions{})",
          "67:   missingNS, _ := resource.IsMissingNamespaceErr(err)",
          "68:   if missingNS {",
          "69:    smc, err = mclient.ServiceMonitors(ns).Create(ctx, GenerateServiceMonitor(ns, s), metav1.CreateOptions{})",
          "70:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93cb8c66cab74f5c540d907d5c8d4741e88874d4",
      "candidate_info": {
        "commit_hash": "93cb8c66cab74f5c540d907d5c8d4741e88874d4",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/93cb8c66cab74f5c540d907d5c8d4741e88874d4",
        "files": [
          "controllers/servicediscovery/servicediscovery_controller.go",
          "controllers/submariner/gateway_resources.go",
          "controllers/submariner/globalnet_resources.go",
          "controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/route_agent_resources.go",
          "go.mod",
          "go.sum",
          "pkg/metrics/service-monitor.go"
        ],
        "message": "Switch to generic k8s.io/utils/ptr\n\nSigned-off-by: Stephen Kitt <skitt@redhat.com>",
        "before_after_code_files": [
          "controllers/servicediscovery/servicediscovery_controller.go||controllers/servicediscovery/servicediscovery_controller.go",
          "controllers/submariner/gateway_resources.go||controllers/submariner/gateway_resources.go",
          "controllers/submariner/globalnet_resources.go||controllers/submariner/globalnet_resources.go",
          "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/route_agent_resources.go||controllers/submariner/route_agent_resources.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/metrics/service-monitor.go||pkg/metrics/service-monitor.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go"
          ],
          "candidate": [
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/servicediscovery/servicediscovery_controller.go||controllers/servicediscovery/servicediscovery_controller.go": [
          "File: controllers/servicediscovery/servicediscovery_controller.go -> controllers/servicediscovery/servicediscovery_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  \"k8s.io/apimachinery/pkg/util/intstr\"",
          "50:  \"k8s.io/client-go/rest\"",
          "51:  \"k8s.io/client-go/util/retry\"",
          "53:  ctrl \"sigs.k8s.io/controller-runtime\"",
          "54:  controllerClient \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "55:  \"sigs.k8s.io/controller-runtime/pkg/controller/controllerutil\"",
          "",
          "[Removed Lines]",
          "52:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "52:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:    Selector: &metav1.LabelSelector{",
          "230:     MatchLabels: matchLabels,",
          "231:    },",
          "233:    Template: corev1.PodTemplateSpec{",
          "234:     ObjectMeta: metav1.ObjectMeta{",
          "235:      Labels: labels,",
          "",
          "[Removed Lines]",
          "232:    Replicas: pointer.Int32(1),",
          "",
          "[Added Lines]",
          "232:    Replicas: ptr.To(int32(1)),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "259:      ServiceAccountName:            \"submariner-lighthouse-agent\",",
          "260:      Tolerations:                   cr.Spec.Tolerations,",
          "261:      NodeSelector:                  cr.Spec.NodeSelector,",
          "263:      Volumes:                       volumes,",
          "264:     },",
          "265:    },",
          "",
          "[Removed Lines]",
          "262:      TerminationGracePeriodSeconds: pointer.Int64(0),",
          "",
          "[Added Lines]",
          "262:      TerminationGracePeriodSeconds: ptr.To(int64(0)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "325:    Selector: &metav1.LabelSelector{",
          "326:     MatchLabels: matchLabels,",
          "327:    },",
          "329:    Template: corev1.PodTemplateSpec{",
          "330:     ObjectMeta: metav1.ObjectMeta{",
          "331:      Labels: labels,",
          "",
          "[Removed Lines]",
          "328:    Replicas: pointer.Int32(2),",
          "",
          "[Added Lines]",
          "328:    Replicas: ptr.To(int32(2)),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "351:          Add:  []corev1.Capability{\"net_bind_service\"},",
          "352:          Drop: []corev1.Capability{\"all\"},",
          "353:         },",
          "356:        },",
          "357:       },",
          "358:      },",
          "360:      ServiceAccountName:            \"submariner-lighthouse-coredns\",",
          "362:      Tolerations:                   cr.Spec.Tolerations,",
          "363:      NodeSelector:                  cr.Spec.NodeSelector,",
          "364:      Volumes: []corev1.Volume{",
          "",
          "[Removed Lines]",
          "354:         AllowPrivilegeEscalation: pointer.Bool(false),",
          "355:         ReadOnlyRootFilesystem:   pointer.Bool(true),",
          "361:      TerminationGracePeriodSeconds: pointer.Int64(0),",
          "",
          "[Added Lines]",
          "354:         AllowPrivilegeEscalation: ptr.To(false),",
          "355:         ReadOnlyRootFilesystem:   ptr.To(true),",
          "361:      TerminationGracePeriodSeconds: ptr.To(int64(0)),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "367:        Items: []corev1.KeyToPath{",
          "368:         {Key: \"Corefile\", Path: \"Corefile\"},",
          "369:        },",
          "371:       }}},",
          "372:      },",
          "373:     },",
          "",
          "[Removed Lines]",
          "370:        DefaultMode: pointer.Int32(420),",
          "",
          "[Added Lines]",
          "370:        DefaultMode: ptr.To(int32(0o644)),",
          "",
          "---------------"
        ],
        "controllers/submariner/gateway_resources.go||controllers/submariner/gateway_resources.go": [
          "File: controllers/submariner/gateway_resources.go -> controllers/submariner/gateway_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "39:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "40:  \"k8s.io/apimachinery/pkg/util/intstr\"",
          "42:  \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "43:  \"sigs.k8s.io/controller-runtime/pkg/controller/controllerutil\"",
          "44: )",
          "",
          "[Removed Lines]",
          "41:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "41:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:     },",
          "70:     Type: appsv1.RollingUpdateDaemonSetStrategyType,",
          "71:    },",
          "73:   },",
          "74:  }",
          "",
          "[Removed Lines]",
          "72:    RevisionHistoryLimit: pointer.Int32(5),",
          "",
          "[Added Lines]",
          "72:    RevisionHistoryLimit: ptr.To(int32(5)),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:        Drop: []corev1.Capability{\"all\"},",
          "158:       },",
          "165:      },",
          "166:      Ports: []corev1.ContainerPort{",
          "167:       {",
          "",
          "[Removed Lines]",
          "160:       AllowPrivilegeEscalation: pointer.Bool(true),",
          "161:       Privileged:               pointer.Bool(true),",
          "162:       RunAsNonRoot:             pointer.Bool(false),",
          "164:       ReadOnlyRootFilesystem: pointer.Bool(false),",
          "",
          "[Added Lines]",
          "160:       AllowPrivilegeEscalation: ptr.To(true),",
          "161:       Privileged:               ptr.To(true),",
          "162:       RunAsNonRoot:             ptr.To(false),",
          "164:       ReadOnlyRootFilesystem: ptr.To(false),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "219:    ServiceAccountName:            names.GatewayComponent,",
          "220:    HostNetwork:                   true,",
          "221:    DNSPolicy:                     corev1.DNSClusterFirstWithHostNet,",
          "223:    RestartPolicy:                 corev1.RestartPolicyAlways,",
          "225:    Tolerations: []corev1.Toleration{{Operator: corev1.TolerationOpExists}},",
          "",
          "[Removed Lines]",
          "222:    TerminationGracePeriodSeconds: pointer.Int64(1),",
          "",
          "[Added Lines]",
          "222:    TerminationGracePeriodSeconds: ptr.To(int64(1)),",
          "",
          "---------------"
        ],
        "controllers/submariner/globalnet_resources.go||controllers/submariner/globalnet_resources.go": [
          "File: controllers/submariner/globalnet_resources.go -> controllers/submariner/globalnet_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  appsv1 \"k8s.io/api/apps/v1\"",
          "31:  corev1 \"k8s.io/api/core/v1\"",
          "32:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "34: )",
          "",
          "[Removed Lines]",
          "33:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "33:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.GlobalnetComponent]),",
          "82:        SecurityContext: &corev1.SecurityContext{",
          "83:         Capabilities:             &corev1.Capabilities{Add: []corev1.Capability{\"ALL\"}},",
          "88:        },",
          "89:        VolumeMounts: []corev1.VolumeMount{",
          "90:         {Name: \"host-run-xtables-lock\", MountPath: \"/run/xtables.lock\"},",
          "",
          "[Removed Lines]",
          "84:         AllowPrivilegeEscalation: pointer.Bool(true),",
          "85:         Privileged:               pointer.Bool(true),",
          "86:         ReadOnlyRootFilesystem:   pointer.Bool(false),",
          "87:         RunAsNonRoot:             pointer.Bool(false),",
          "",
          "[Added Lines]",
          "84:         AllowPrivilegeEscalation: ptr.To(true),",
          "85:         Privileged:               ptr.To(true),",
          "86:         ReadOnlyRootFilesystem:   ptr.To(false),",
          "87:         RunAsNonRoot:             ptr.To(false),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:       },",
          "103:      },",
          "104:      ServiceAccountName:            names.GlobalnetComponent,",
          "106:      NodeSelector:                  map[string]string{\"submariner.io/gateway\": \"true\"},",
          "107:      HostNetwork:                   true,",
          "108:      DNSPolicy:                     corev1.DNSClusterFirstWithHostNet,",
          "",
          "[Removed Lines]",
          "105:      TerminationGracePeriodSeconds: pointer.Int64(2),",
          "",
          "[Added Lines]",
          "105:      TerminationGracePeriodSeconds: ptr.To(int64(2)),",
          "",
          "---------------"
        ],
        "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
          "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  appsv1 \"k8s.io/api/apps/v1\"",
          "33:  corev1 \"k8s.io/api/core/v1\"",
          "34:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "36: )",
          "",
          "[Removed Lines]",
          "35:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "35:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:    Strategy: appsv1.DeploymentStrategy{",
          "75:     Type: appsv1.RecreateDeploymentStrategyType,",
          "76:    },",
          "78:    Template: corev1.PodTemplateSpec{",
          "79:     ObjectMeta: metav1.ObjectMeta{",
          "80:      Labels: labels,",
          "81:     },",
          "82:     Spec: corev1.PodSpec{",
          "84:      Containers: []corev1.Container{",
          "85:       {",
          "86:        Name:            name,",
          "",
          "[Removed Lines]",
          "77:    Replicas: pointer.Int32(1),",
          "83:      TerminationGracePeriodSeconds: pointer.Int64(1),",
          "",
          "[Added Lines]",
          "77:    Replicas: ptr.To(int32(1)),",
          "83:      TerminationGracePeriodSeconds: ptr.To(int64(1)),",
          "",
          "---------------"
        ],
        "controllers/submariner/route_agent_resources.go||controllers/submariner/route_agent_resources.go": [
          "File: controllers/submariner/route_agent_resources.go -> controllers/submariner/route_agent_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  corev1 \"k8s.io/api/core/v1\"",
          "32:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "33:  \"k8s.io/apimachinery/pkg/util/intstr\"",
          "35: )",
          "",
          "[Removed Lines]",
          "34:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "34:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:      Labels: labels,",
          "71:     },",
          "72:     Spec: corev1.PodSpec{",
          "74:      Volumes: []corev1.Volume{",
          "76:       {Name: \"host-run-xtables-lock\", VolumeSource: corev1.VolumeSource{HostPath: &corev1.HostPathVolumeSource{",
          "",
          "[Removed Lines]",
          "73:      TerminationGracePeriodSeconds: pointer.Int64(1),",
          "",
          "[Added Lines]",
          "73:      TerminationGracePeriodSeconds: ptr.To(int64(1)),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:        Command: []string{\"submariner-route-agent.sh\"},",
          "94:        SecurityContext: &corev1.SecurityContext{",
          "95:         Capabilities:             &corev1.Capabilities{Add: []corev1.Capability{\"ALL\"}},",
          "100:        },",
          "101:        VolumeMounts: []corev1.VolumeMount{",
          "102:         {Name: \"host-sys\", MountPath: \"/sys\", ReadOnly: true},",
          "",
          "[Removed Lines]",
          "96:         AllowPrivilegeEscalation: pointer.Bool(true),",
          "97:         Privileged:               pointer.Bool(true),",
          "98:         ReadOnlyRootFilesystem:   pointer.Bool(false),",
          "99:         RunAsNonRoot:             pointer.Bool(false),",
          "",
          "[Added Lines]",
          "96:         AllowPrivilegeEscalation: ptr.To(true),",
          "97:         Privileged:               ptr.To(true),",
          "98:         ReadOnlyRootFilesystem:   ptr.To(false),",
          "99:         RunAsNonRoot:             ptr.To(false),",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  k8s.io/apiextensions-apiserver v0.27.3",
          "24:  k8s.io/apimachinery v0.27.3",
          "25:  k8s.io/client-go v0.27.3",
          "27:  sigs.k8s.io/controller-runtime v0.15.0",
          "28:  sigs.k8s.io/controller-tools v0.12.1",
          "29:  sigs.k8s.io/kustomize/kustomize/v3 v3.10.0",
          "",
          "[Removed Lines]",
          "26:  k8s.io/utils v0.0.0-20230711102312-30195339c3c7",
          "",
          "[Added Lines]",
          "26:  k8s.io/utils v0.0.0-20230726121419-3b25d923346b",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1682: k8s.io/kubectl v0.26.2/go.mod h1:KYWOXSwp2BrDn3kPeoU/uKzKtdqvhK1dgZGd0+no4cM=",
          "1683: k8s.io/utils v0.0.0-20200324210504-a9aa75ae1b89/go.mod h1:sZAwmy6armz5eXlNoLmJcl4F1QuKu7sr+mFQ0byX7Ew=",
          "1684: k8s.io/utils v0.0.0-20200603063816-c1c6865ac451/go.mod h1:jPW/WVKK9YHAvNhRxK0md/EJ228hCsBRufyofKtW8HA=",
          "1687: mvdan.cc/interfacer v0.0.0-20180901003855-c20040233aed/go.mod h1:Xkxe497xwlCKkIaQYRfC7CSLworTXY9RMqwhhCm+8Nc=",
          "1688: mvdan.cc/lint v0.0.0-20170908181259-adc824a0674b/go.mod h1:2odslEg/xrtNQqCYg2/jCoyKnw3vv5biOc3JnIcYfL4=",
          "1689: mvdan.cc/unparam v0.0.0-20190720180237-d51796306d8f/go.mod h1:4G1h5nDURzA3bwVMZIVpwbkw+04kSxk3rAtzlimaUJw=",
          "",
          "[Removed Lines]",
          "1685: k8s.io/utils v0.0.0-20230711102312-30195339c3c7 h1:ZgnF1KZsYxWIifwSNZFZgNtWE89WI5yiP5WwlfDoIyc=",
          "1686: k8s.io/utils v0.0.0-20230711102312-30195339c3c7/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=",
          "",
          "[Added Lines]",
          "1685: k8s.io/utils v0.0.0-20230726121419-3b25d923346b h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=",
          "1686: k8s.io/utils v0.0.0-20230726121419-3b25d923346b/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=",
          "",
          "---------------"
        ],
        "pkg/metrics/service-monitor.go||pkg/metrics/service-monitor.go": [
          "File: pkg/metrics/service-monitor.go -> pkg/metrics/service-monitor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  \"k8s.io/client-go/discovery\"",
          "31:  clientset \"k8s.io/client-go/kubernetes\"",
          "32:  \"k8s.io/client-go/rest\"",
          "34:  logf \"sigs.k8s.io/controller-runtime/pkg/log\"",
          "35: )",
          "",
          "[Removed Lines]",
          "33:  \"k8s.io/utils/pointer\"",
          "",
          "[Added Lines]",
          "33:  \"k8s.io/utils/ptr\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:   ownerReferences = []metav1.OwnerReference{",
          "111:    {",
          "112:     APIVersion:         \"v1\",",
          "115:     Kind:               \"Service\",",
          "116:     Name:               s.Name,",
          "117:     UID:                s.UID,",
          "",
          "[Removed Lines]",
          "113:     BlockOwnerDeletion: pointer.Bool(true),",
          "114:     Controller:         pointer.Bool(true),",
          "",
          "[Added Lines]",
          "113:     BlockOwnerDeletion: ptr.To(true),",
          "114:     Controller:         ptr.To(true),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23502753433010832342443fdb7985eee43b3bee",
      "candidate_info": {
        "commit_hash": "23502753433010832342443fdb7985eee43b3bee",
        "repo": "submariner-io/submariner-operator",
        "commit_url": "https://github.com/submariner-io/submariner-operator/commit/23502753433010832342443fdb7985eee43b3bee",
        "files": [
          "config/rbac/networkplugin_syncer/cluster_role.yaml",
          "config/rbac/networkplugin_syncer/cluster_role_binding.yaml",
          "config/rbac/networkplugin_syncer/ocp_cluster_role.yaml",
          "config/rbac/networkplugin_syncer/ocp_cluster_role_binding.yaml",
          "config/rbac/networkplugin_syncer/service_account.yaml",
          "controllers/submariner/cleanup.go",
          "controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/submariner_controller.go",
          "controllers/submariner/submariner_controller_test.go",
          "controllers/submariner/submariner_suite_test.go",
          "controllers/test/driver.go",
          "pkg/embeddedyamls/generators/yamls2go.go",
          "pkg/embeddedyamls/yamls.go",
          "pkg/names/names.go",
          "test/e2e/cleanup/submariner.go"
        ],
        "message": "Remove networkplugin syncer deployment\n\nThe controller now deletes the Deployment and associated\nRBAC resources.\n\nSigned-off-by: Tom Pantelis <tompantelis@gmail.com>",
        "before_after_code_files": [
          "controllers/submariner/cleanup.go||controllers/submariner/cleanup.go",
          "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
          "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
          "controllers/submariner/submariner_controller.go||controllers/submariner/submariner_controller.go",
          "controllers/submariner/submariner_controller_test.go||controllers/submariner/submariner_controller_test.go",
          "controllers/submariner/submariner_suite_test.go||controllers/submariner/submariner_suite_test.go",
          "controllers/test/driver.go||controllers/test/driver.go",
          "pkg/embeddedyamls/generators/yamls2go.go||pkg/embeddedyamls/generators/yamls2go.go",
          "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go",
          "pkg/names/names.go||pkg/names/names.go",
          "test/e2e/cleanup/submariner.go||test/e2e/cleanup/submariner.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ],
          "candidate": [
            "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go",
            "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go",
            "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go"
          ]
        }
      },
      "candidate_diff": {
        "controllers/submariner/cleanup.go||controllers/submariner/cleanup.go": [
          "File: controllers/submariner/cleanup.go -> controllers/submariner/cleanup.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     return instance.Spec.GlobalCIDR != \"\"",
          "69:    },",
          "70:   },",
          "79:  }",
          "81:  uninstallInfo := &uninstall.Info{",
          "",
          "[Removed Lines]",
          "71:   {",
          "72:    Resource: newDeployment(names.NetworkPluginSyncerComponent, instance.Namespace),",
          "73:    UninstallResource: newNetworkPluginSyncerDeployment(instance, clusterNetwork,",
          "74:     opnames.AppendUninstall(names.NetworkPluginSyncerComponent)),",
          "75:    CheckInstalled: func() bool {",
          "76:     return needsNetworkPluginSyncer(instance)",
          "77:    },",
          "78:   },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:   },",
          "135:  }",
          "136: }",
          "",
          "[Removed Lines]",
          "138: func newDeployment(name, namespace string) *appsv1.Deployment {",
          "139:  return &appsv1.Deployment{",
          "140:   ObjectMeta: metav1.ObjectMeta{",
          "141:    Name:      name,",
          "142:    Namespace: namespace,",
          "143:   },",
          "144:  }",
          "145: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "controllers/submariner/migration_test.go||controllers/submariner/migration_test.go": [
          "File: controllers/submariner/migration_test.go -> controllers/submariner/migration_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: SPDX-License-Identifier: Apache-2.0",
          "4: Copyright Contributors to the Submariner project.",
          "6: Licensed under the Apache License, Version 2.0 (the \"License\");",
          "7: you may not use this file except in compliance with the License.",
          "8: You may obtain a copy of the License at",
          "10: http://www.apache.org/licenses/LICENSE-2.0",
          "12: Unless required by applicable law or agreed to in writing, software",
          "13: distributed under the License is distributed on an \"AS IS\" BASIS,",
          "14: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "15: See the License for the specific language governing permissions and",
          "16: limitations under the License.",
          "19: package submariner_test",
          "21: import (",
          "22:  . \"github.com/onsi/ginkgo/v2\"",
          "23:  \"github.com/submariner-io/submariner-operator/controllers/submariner\"",
          "24:  \"github.com/submariner-io/submariner/pkg/cni\"",
          "25:  corev1 \"k8s.io/api/core/v1\"",
          "26:  rbacv1 \"k8s.io/api/rbac/v1\"",
          "27:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "28: )",
          "30: var _ = Describe(\"Migration tests\", func() {",
          "31:  t := newTestDriver()",
          "33:  Context(\"submariner network plugin syncer\", func() {",
          "34:   BeforeEach(func() {",
          "35:    t.clusterNetwork.NetworkPlugin = cni.OVNKubernetes",
          "36:   })",
          "38:   JustBeforeEach(func() {",
          "39:    t.AssertReconcileSuccess()",
          "40:    t.AssertNoDeployment(submariner.NetworkPluginSyncerComponent)",
          "41:   })",
          "43:   When(\"the Deployment doesn't exist\", func() {",
          "44:    It(\"should not create it\", func() {",
          "45:    })",
          "46:   })",
          "48:   When(\"the Deployment does exist\", func() {",
          "49:    BeforeEach(func() {",
          "50:     t.InitScopedClientObjs = append(t.InitScopedClientObjs,",
          "51:      t.NewDeployment(submariner.NetworkPluginSyncerComponent),",
          "52:      &rbacv1.ClusterRole{",
          "53:       ObjectMeta: metav1.ObjectMeta{",
          "54:        Namespace: t.Namespace,",
          "55:        Name:      submariner.NetworkPluginSyncerComponent,",
          "56:       },",
          "57:      },",
          "58:      &rbacv1.ClusterRoleBinding{",
          "59:       ObjectMeta: metav1.ObjectMeta{",
          "60:        Namespace: t.Namespace,",
          "61:        Name:      submariner.NetworkPluginSyncerComponent,",
          "62:       },",
          "63:      },",
          "64:      &corev1.ServiceAccount{",
          "65:       ObjectMeta: metav1.ObjectMeta{",
          "66:        Namespace: t.Namespace,",
          "67:        Name:      submariner.NetworkPluginSyncerComponent,",
          "68:       },",
          "69:      },",
          "70:     )",
          "71:    })",
          "73:    It(\"should delete it\", func() {",
          "74:     t.AssertNoResource(&rbacv1.ClusterRole{",
          "75:      ObjectMeta: metav1.ObjectMeta{",
          "76:       Name: submariner.NetworkPluginSyncerComponent,",
          "77:      },",
          "78:     })",
          "80:     t.AssertNoResource(&rbacv1.ClusterRoleBinding{",
          "81:      ObjectMeta: metav1.ObjectMeta{",
          "82:       Name: submariner.NetworkPluginSyncerComponent,",
          "83:      },",
          "84:     })",
          "86:     t.AssertNoResource(&corev1.ServiceAccount{",
          "87:      ObjectMeta: metav1.ObjectMeta{",
          "88:       Name: submariner.NetworkPluginSyncerComponent,",
          "89:      },",
          "90:     })",
          "91:    })",
          "92:   })",
          "93:  })",
          "94: })",
          "",
          "---------------"
        ],
        "controllers/submariner/np_syncer_resources.go||controllers/submariner/np_syncer_resources.go": [
          "File: controllers/submariner/np_syncer_resources.go -> controllers/submariner/np_syncer_resources.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import (",
          "22:  \"context\"",
          "27:  \"github.com/submariner-io/submariner-operator/api/v1alpha1\"",
          "32:  \"github.com/submariner-io/submariner/pkg/cni\"",
          "33:  appsv1 \"k8s.io/api/apps/v1\"",
          "34:  corev1 \"k8s.io/api/core/v1\"",
          "35:  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"",
          "37: )",
          "48:  }",
          "63:  }",
          "70:   },",
          "77:    },",
          "111:    },",
          "112:   },",
          "136: }",
          "",
          "[Removed Lines]",
          "23:  \"strconv\"",
          "25:  \"github.com/go-logr/logr\"",
          "26:  \"github.com/submariner-io/admiral/pkg/names\"",
          "28:  \"github.com/submariner-io/submariner-operator/controllers/apply\"",
          "29:  \"github.com/submariner-io/submariner-operator/pkg/discovery/network\"",
          "30:  \"github.com/submariner-io/submariner-operator/pkg/images\"",
          "31:  opnames \"github.com/submariner-io/submariner-operator/pkg/names\"",
          "36:  \"k8s.io/utils/ptr\"",
          "40: func (r *Reconciler) reconcileNetworkPluginSyncerDeployment(ctx context.Context, instance *v1alpha1.Submariner,",
          "41:  clusterNetwork *network.ClusterNetwork, reqLogger logr.Logger,",
          "42: ) error {",
          "44:  if needsNetworkPluginSyncer(instance) {",
          "45:   _, err := apply.Deployment(ctx, instance, newNetworkPluginSyncerDeployment(instance,",
          "46:    clusterNetwork, names.NetworkPluginSyncerComponent), reqLogger, r.config.ScopedClient, r.config.Scheme)",
          "47:   return err",
          "50:  return nil",
          "51: }",
          "53: func newNetworkPluginSyncerDeployment(cr *v1alpha1.Submariner, clusterNetwork *network.ClusterNetwork, name string) *appsv1.Deployment {",
          "54:  labels := map[string]string{",
          "55:   \"app\":       name,",
          "56:   \"component\": \"networkplugin-syncer\",",
          "57:  }",
          "59:  tolerations := cr.Spec.Tolerations",
          "61:  if len(tolerations) == 0 {",
          "62:   tolerations = append(tolerations, corev1.Toleration{Operator: corev1.TolerationOpExists})",
          "65:  networkPluginSyncerDeployment := &appsv1.Deployment{",
          "66:   ObjectMeta: metav1.ObjectMeta{",
          "67:    Namespace: cr.Namespace,",
          "68:    Name:      name,",
          "69:    Labels:    labels,",
          "71:   Spec: appsv1.DeploymentSpec{",
          "72:    Selector: &metav1.LabelSelector{MatchLabels: map[string]string{",
          "73:     \"app\": name,",
          "74:    }},",
          "75:    Strategy: appsv1.DeploymentStrategy{",
          "76:     Type: appsv1.RecreateDeploymentStrategyType,",
          "78:    Replicas: ptr.To(int32(1)),",
          "79:    Template: corev1.PodTemplateSpec{",
          "80:     ObjectMeta: metav1.ObjectMeta{",
          "81:      Labels: labels,",
          "82:     },",
          "83:     Spec: corev1.PodSpec{",
          "84:      TerminationGracePeriodSeconds: ptr.To(int64(1)),",
          "85:      Containers: []corev1.Container{",
          "86:       {",
          "87:        Name:            name,",
          "88:        Image:           getImagePath(cr, opnames.NetworkPluginSyncerImage, names.NetworkPluginSyncerComponent),",
          "89:        ImagePullPolicy: images.GetPullPolicy(cr.Spec.Version, cr.Spec.ImageOverrides[names.NetworkPluginSyncerComponent]),",
          "90:        Command:         []string{\"submariner-networkplugin-syncer.sh\"},",
          "91:        Env: []corev1.EnvVar{",
          "92:         {Name: \"SUBMARINER_NAMESPACE\", Value: cr.Spec.Namespace},",
          "93:         {Name: \"SUBMARINER_CLUSTERID\", Value: cr.Spec.ClusterID},",
          "94:         {Name: \"SUBMARINER_DEBUG\", Value: strconv.FormatBool(cr.Spec.Debug)},",
          "95:         {Name: \"SUBMARINER_CLUSTERCIDR\", Value: cr.Status.ClusterCIDR},",
          "96:         {Name: \"SUBMARINER_SERVICECIDR\", Value: cr.Status.ServiceCIDR},",
          "97:         {Name: \"SUBMARINER_GLOBALCIDR\", Value: cr.Spec.GlobalCIDR},",
          "98:         {Name: \"SUBMARINER_NETWORKPLUGIN\", Value: cr.Status.NetworkPlugin},",
          "99:         {Name: \"NODE_NAME\", ValueFrom: &corev1.EnvVarSource{",
          "100:          FieldRef: &corev1.ObjectFieldSelector{",
          "101:           FieldPath: \"spec.nodeName\",",
          "102:          },",
          "103:         }},",
          "104:        },",
          "105:       },",
          "106:      },",
          "107:      ServiceAccountName: names.NetworkPluginSyncerComponent,",
          "108:      NodeSelector:       cr.Spec.NodeSelector,",
          "109:      Tolerations:        tolerations,",
          "110:     },",
          "113:  }",
          "115:  if clusterNetwork.PluginSettings != nil {",
          "116:   if ovndb, ok := clusterNetwork.PluginSettings[network.OvnNBDB]; ok {",
          "117:    networkPluginSyncerDeployment.Spec.Template.Spec.Containers[0].Env = append(",
          "118:     networkPluginSyncerDeployment.Spec.Template.Spec.Containers[0].Env, corev1.EnvVar{",
          "119:      Name: network.OvnNBDB, Value: ovndb,",
          "120:     })",
          "121:   }",
          "123:   if ovnsb, ok := clusterNetwork.PluginSettings[network.OvnSBDB]; ok {",
          "124:    networkPluginSyncerDeployment.Spec.Template.Spec.Containers[0].Env = append(",
          "125:     networkPluginSyncerDeployment.Spec.Template.Spec.Containers[0].Env, corev1.EnvVar{",
          "126:      Name: network.OvnSBDB, Value: ovnsb,",
          "127:     })",
          "128:   }",
          "129:  }",
          "131:  return networkPluginSyncerDeployment",
          "132: }",
          "134: func needsNetworkPluginSyncer(submariner *v1alpha1.Submariner) bool {",
          "135:  return submariner.Status.NetworkPlugin == cni.OVNKubernetes",
          "",
          "[Added Lines]",
          "28:  rbacv1 \"k8s.io/api/rbac/v1\"",
          "29:  apierrors \"k8s.io/apimachinery/pkg/api/errors\"",
          "31:  \"sigs.k8s.io/controller-runtime/pkg/client\"",
          "34: const NetworkPluginSyncerComponent = \"submariner-networkplugin-syncer\"",
          "37: func (r *Reconciler) removeNetworkPluginSyncerDeployment(ctx context.Context, instance *v1alpha1.Submariner) error {",
          "38:  if instance.Status.NetworkPlugin != cni.OVNKubernetes || r.networkPluginSyncerRemoved {",
          "39:   return nil",
          "42:  r.networkPluginSyncerRemoved = true",
          "44:  deleteAll := func(objs ...client.Object) error {",
          "45:   for _, obj := range objs {",
          "46:    obj.SetName(NetworkPluginSyncerComponent)",
          "47:    obj.SetNamespace(instance.Namespace)",
          "49:    err := r.config.ScopedClient.Delete(ctx, obj)",
          "50:    if err != nil && !apierrors.IsNotFound(err) {",
          "51:     r.networkPluginSyncerRemoved = false",
          "52:     return err",
          "53:    }",
          "54:   }",
          "56:   return nil",
          "59:  return deleteAll(",
          "60:   &appsv1.Deployment{",
          "61:    ObjectMeta: metav1.ObjectMeta{",
          "62:     Namespace: instance.Namespace,",
          "63:     Name:      NetworkPluginSyncerComponent,",
          "64:    },",
          "66:   &rbacv1.ClusterRole{",
          "67:    ObjectMeta: metav1.ObjectMeta{",
          "68:     Namespace: instance.Namespace,",
          "69:     Name:      NetworkPluginSyncerComponent,",
          "71:   },",
          "72:   &rbacv1.ClusterRoleBinding{",
          "73:    ObjectMeta: metav1.ObjectMeta{",
          "74:     Namespace: instance.Namespace,",
          "75:     Name:      NetworkPluginSyncerComponent,",
          "78:   &rbacv1.ClusterRole{",
          "79:    ObjectMeta: metav1.ObjectMeta{",
          "80:     Namespace: instance.Namespace,",
          "81:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "82:    },",
          "83:   },",
          "84:   &rbacv1.ClusterRoleBinding{",
          "85:    ObjectMeta: metav1.ObjectMeta{",
          "86:     Namespace: instance.Namespace,",
          "87:     Name:      \"ocp-submariner-networkplugin-syncer\",",
          "88:    },",
          "89:   },",
          "90:   &corev1.ServiceAccount{",
          "91:    ObjectMeta: metav1.ObjectMeta{",
          "92:     Namespace: instance.Namespace,",
          "93:     Name:      NetworkPluginSyncerComponent,",
          "94:    },",
          "95:   },",
          "96:  )",
          "",
          "---------------"
        ],
        "controllers/submariner/submariner_controller.go||controllers/submariner/submariner_controller.go": [
          "File: controllers/submariner/submariner_controller.go -> controllers/submariner/submariner_controller.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:  secretSyncCancelFuncs map[string]context.CancelFunc",
          "96:  syncerMutex           sync.Mutex",
          "97: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:  networkPluginSyncerRemoved bool",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:   return reconcile.Result{}, err",
          "190:  }",
          "193:   return reconcile.Result{}, err",
          "194:  }",
          "",
          "[Removed Lines]",
          "192:  if err := r.reconcileNetworkPluginSyncerDeployment(ctx, instance, clusterNetwork, reqLogger); err != nil {",
          "",
          "[Added Lines]",
          "194:  if err := r.removeNetworkPluginSyncerDeployment(ctx, instance); err != nil {",
          "",
          "---------------"
        ],
        "controllers/submariner/submariner_controller_test.go||controllers/submariner/submariner_controller_test.go": [
          "File: controllers/submariner/submariner_controller_test.go -> controllers/submariner/submariner_controller_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   })",
          "198:  })",
          "211:  When(\"ServiceDiscovery is enabled\", func() {",
          "212:   BeforeEach(func() {",
          "213:    t.submariner.Spec.ServiceDiscoveryEnabled = true",
          "",
          "[Removed Lines]",
          "200:  When(\"the submariner network plugin syncer Deployment doesn't exist\", func() {",
          "201:   BeforeEach(func() {",
          "202:    t.clusterNetwork.NetworkPlugin = cni.OVNKubernetes",
          "203:   })",
          "205:   It(\"should create it\", func() {",
          "206:    t.AssertReconcileSuccess()",
          "207:    t.assertNetworkPluginSyncerDeployment()",
          "208:   })",
          "209:  })",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "365:     t.NewDaemonSet(names.GatewayComponent),",
          "366:     t.NewPodWithLabel(\"app\", names.GatewayComponent),",
          "367:     t.NewDaemonSet(names.RouteAgentComponent),",
          "370:   })",
          "372:   It(\"should run DaemonSets/Deployments to uninstall components\", func() {",
          "",
          "[Removed Lines]",
          "368:     t.NewDaemonSet(names.GlobalnetComponent),",
          "369:     t.NewDeployment(names.NetworkPluginSyncerComponent))",
          "",
          "[Added Lines]",
          "357:     t.NewDaemonSet(names.GlobalnetComponent))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "376:    t.AssertNoDaemonSet(names.GatewayComponent)",
          "377:    t.AssertNoDaemonSet(names.RouteAgentComponent)",
          "378:    t.AssertNoDaemonSet(names.GlobalnetComponent)",
          "382:    t.DeletePods(\"app\", names.GatewayComponent)",
          "",
          "[Removed Lines]",
          "379:    t.AssertNoDeployment(names.NetworkPluginSyncerComponent)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "392:    t.UpdateDaemonSetToObserved(t.assertUninstallGatewayDaemonSet())",
          "394:    t.UpdateDaemonSetToReady(t.assertUninstallRouteAgentDaemonSet())",
          "398:    t.AssertReconcileRequeue()",
          "",
          "[Removed Lines]",
          "395:    t.UpdateDeploymentToReady(t.assertUninstallNetworkPluginSyncerDeployment())",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "409:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GatewayComponent))",
          "410:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.RouteAgentComponent))",
          "411:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GlobalnetComponent))",
          "414:    t.awaitSubmarinerDeleted()",
          "",
          "[Removed Lines]",
          "412:    t.AssertNoDeployment(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "435:    t.UpdateDaemonSetToReady(t.assertUninstallRouteAgentDaemonSet())",
          "437:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.GlobalnetComponent))",
          "440:    t.AssertReconcileSuccess()",
          "",
          "[Removed Lines]",
          "438:    t.AssertNoDaemonSet(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "controllers/submariner/submariner_suite_test.go||controllers/submariner/submariner_suite_test.go": [
          "File: controllers/submariner/submariner_suite_test.go -> controllers/submariner/submariner_suite_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "214:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_CLUSTERID\", submariner.Spec.ClusterID))",
          "215: }",
          "248: func assertGatewayNodeSelector(daemonSet *appsv1.DaemonSet) {",
          "249:  Expect(daemonSet.Spec.Template.Spec.NodeSelector[\"submariner.io/gateway\"]).To(Equal(\"true\"))",
          "250: }",
          "",
          "[Removed Lines]",
          "217: func (t *testDriver) assertNetworkPluginSyncerDeployment() {",
          "218:  deployment := t.AssertDeployment(names.NetworkPluginSyncerComponent)",
          "220:  Expect(deployment.Spec.Template.Spec.Containers).To(HaveLen(1))",
          "221:  Expect(deployment.Spec.Template.Spec.Containers[0].Image).To(",
          "222:   Equal(fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.NetworkPluginSyncerImage, t.submariner.Spec.Version)))",
          "224:  t.assertNetworkPluginSyncerDeploymentEnv(t.withNetworkDiscovery(),",
          "225:   test.EnvMapFromVars(deployment.Spec.Template.Spec.Containers[0].Env))",
          "226: }",
          "228: func (t *testDriver) assertUninstallNetworkPluginSyncerDeployment() *appsv1.Deployment {",
          "229:  deployment := t.AssertDeployment(opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "231:  envMap := t.AssertUninstallInitContainer(&deployment.Spec.Template,",
          "232:   fmt.Sprintf(\"%s/%s:%s\", t.submariner.Spec.Repository, opnames.NetworkPluginSyncerImage, t.submariner.Spec.Version))",
          "233:  t.assertNetworkPluginSyncerDeploymentEnv(t.withNetworkDiscovery(), envMap)",
          "235:  return deployment",
          "236: }",
          "238: func (t *testDriver) assertNetworkPluginSyncerDeploymentEnv(submariner *v1alpha1.Submariner, envMap map[string]string) {",
          "239:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_NAMESPACE\", submariner.Spec.Namespace))",
          "240:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_CLUSTERID\", submariner.Spec.ClusterID))",
          "241:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_CLUSTERCIDR\", submariner.Status.ClusterCIDR))",
          "242:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_SERVICECIDR\", submariner.Status.ServiceCIDR))",
          "243:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_GLOBALCIDR\", submariner.Status.GlobalCIDR))",
          "244:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_NETWORKPLUGIN\", submariner.Status.NetworkPlugin))",
          "245:  Expect(envMap).To(HaveKeyWithValue(\"SUBMARINER_DEBUG\", strconv.FormatBool(submariner.Spec.Debug)))",
          "246: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "controllers/test/driver.go||controllers/test/driver.go": [
          "File: controllers/test/driver.go -> controllers/test/driver.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:  Expect(err).To(HaveOccurred())",
          "158: }",
          "160: func (d *Driver) AssertUninstallInitContainer(template *corev1.PodTemplateSpec, image string) map[string]string {",
          "161:  Expect(template.Spec.InitContainers).To(HaveLen(1))",
          "162:  Expect(template.Spec.InitContainers[0].Image).To(Equal(image))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160: func (d *Driver) AssertNoResource(obj client.Object) {",
          "161:  err := d.ScopedClient.Get(context.Background(), types.NamespacedName{Name: obj.GetName(), Namespace: d.Namespace}, obj)",
          "162:  Expect(errors.IsNotFound(err)).To(BeTrue(), \"IsNotFound error\")",
          "163:  Expect(err).To(HaveOccurred())",
          "164: }",
          "",
          "---------------"
        ],
        "pkg/embeddedyamls/generators/yamls2go.go||pkg/embeddedyamls/generators/yamls2go.go": [
          "File: pkg/embeddedyamls/generators/yamls2go.go -> pkg/embeddedyamls/generators/yamls2go.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:  \"config/rbac/lighthouse-coredns/cluster_role_binding.yaml\",",
          "96:  \"config/rbac/lighthouse-coredns/ocp_cluster_role.yaml\",",
          "97:  \"config/rbac/lighthouse-coredns/ocp_cluster_role_binding.yaml\",",
          "103:  \"config/openshift/rbac/submariner-metrics-reader/role.yaml\",",
          "104:  \"config/openshift/rbac/submariner-metrics-reader/role_binding.yaml\",",
          "105: }",
          "",
          "[Removed Lines]",
          "98:  \"config/rbac/networkplugin_syncer/service_account.yaml\",",
          "99:  \"config/rbac/networkplugin_syncer/cluster_role.yaml\",",
          "100:  \"config/rbac/networkplugin_syncer/cluster_role_binding.yaml\",",
          "101:  \"config/rbac/networkplugin_syncer/ocp_cluster_role.yaml\",",
          "102:  \"config/rbac/networkplugin_syncer/ocp_cluster_role_binding.yaml\",",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/embeddedyamls/yamls.go||pkg/embeddedyamls/yamls.go": [
          "File: pkg/embeddedyamls/yamls.go -> pkg/embeddedyamls/yamls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3621: subjects:",
          "3622:   - kind: ServiceAccount",
          "3623:     name: submariner-lighthouse-coredns",
          "3702: `",
          "3703:  Config_openshift_rbac_submariner_metrics_reader_role_yaml = `---",
          "3704: apiVersion: rbac.authorization.k8s.io/v1",
          "",
          "[Removed Lines]",
          "3624: `",
          "3625:  Config_rbac_networkplugin_syncer_service_account_yaml = `---",
          "3626: apiVersion: v1",
          "3627: kind: ServiceAccount",
          "3628: metadata:",
          "3629:   name: submariner-networkplugin-syncer",
          "3630: `",
          "3631:  Config_rbac_networkplugin_syncer_cluster_role_yaml = `---",
          "3632: apiVersion: rbac.authorization.k8s.io/v1",
          "3633: kind: ClusterRole",
          "3634: metadata:",
          "3635:   creationTimestamp: null",
          "3636:   name: submariner-networkplugin-syncer",
          "3637: rules:",
          "3638:   - apiGroups:",
          "3639:       - \"\"",
          "3640:     resources:",
          "3641:       - configmaps",
          "3642:       - secrets",
          "3643:     verbs:",
          "3644:       - get",
          "3645:   - apiGroups:",
          "3646:       - \"\"",
          "3647:     resources:",
          "3648:       - nodes",
          "3649:     verbs:",
          "3650:       - get",
          "3651:       - list",
          "3652:       - watch",
          "3653:   - apiGroups:",
          "3654:       - submariner.io",
          "3655:     resources:",
          "3656:       - endpoints",
          "3657:     verbs:",
          "3658:       - get",
          "3659:       - list",
          "3660:       - watch",
          "3661: `",
          "3662:  Config_rbac_networkplugin_syncer_cluster_role_binding_yaml = `---",
          "3663: kind: ClusterRoleBinding",
          "3664: apiVersion: rbac.authorization.k8s.io/v1",
          "3665: metadata:",
          "3666:   name: submariner-networkplugin-syncer",
          "3667: subjects:",
          "3668:   - kind: ServiceAccount",
          "3669:     name: submariner-networkplugin-syncer",
          "3670: roleRef:",
          "3671:   kind: ClusterRole",
          "3672:   name: submariner-networkplugin-syncer",
          "3673:   apiGroup: rbac.authorization.k8s.io",
          "3674: `",
          "3675:  Config_rbac_networkplugin_syncer_ocp_cluster_role_yaml = `---",
          "3676: apiVersion: rbac.authorization.k8s.io/v1",
          "3677: kind: ClusterRole",
          "3678: metadata:",
          "3679:   name: ocp-submariner-networkplugin-syncer",
          "3680: rules:",
          "3681:   - apiGroups:",
          "3682:       - security.openshift.io",
          "3683:     resourceNames:",
          "3684:       - privileged",
          "3685:     resources:",
          "3686:       - securitycontextconstraints",
          "3687:     verbs:",
          "3688:       - use",
          "3689: `",
          "3690:  Config_rbac_networkplugin_syncer_ocp_cluster_role_binding_yaml = `---",
          "3691: apiVersion: rbac.authorization.k8s.io/v1",
          "3692: kind: ClusterRoleBinding",
          "3693: metadata:",
          "3694:   name: ocp-submariner-networkplugin-syncer",
          "3695: roleRef:",
          "3696:   apiGroup: rbac.authorization.k8s.io",
          "3697:   kind: ClusterRole",
          "3698:   name: ocp-submariner-networkplugin-syncer",
          "3699: subjects:",
          "3700:   - kind: ServiceAccount",
          "3701:     name: submariner-networkplugin-syncer",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/names/names.go||pkg/names/names.go": [
          "File: pkg/names/names.go -> pkg/names/names.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: var (",
          "41: )",
          "43: func AppendUninstall(name string) string {",
          "",
          "[Removed Lines]",
          "32:  NetworkPluginSyncerImage = \"submariner-networkplugin-syncer\"",
          "33:  RouteAgentImage          = \"submariner-route-agent\"",
          "34:  GatewayImage             = \"submariner-gateway\"",
          "35:  GlobalnetImage           = \"submariner-globalnet\"",
          "36:  ServiceDiscoveryImage    = \"lighthouse-agent\"",
          "37:  LighthouseCoreDNSImage   = \"lighthouse-coredns\"",
          "38:  OperatorImage            = \"submariner-operator\"",
          "39:  MetricsProxyImage        = \"nettest\"",
          "40:  NettestImage             = \"nettest\"",
          "",
          "[Added Lines]",
          "32:  RouteAgentImage        = \"submariner-route-agent\"",
          "33:  GatewayImage           = \"submariner-gateway\"",
          "34:  GlobalnetImage         = \"submariner-globalnet\"",
          "35:  ServiceDiscoveryImage  = \"lighthouse-agent\"",
          "36:  LighthouseCoreDNSImage = \"lighthouse-coredns\"",
          "37:  OperatorImage          = \"submariner-operator\"",
          "38:  MetricsProxyImage      = \"nettest\"",
          "39:  NettestImage           = \"nettest\"",
          "",
          "---------------"
        ],
        "test/e2e/cleanup/submariner.go||test/e2e/cleanup/submariner.go": [
          "File: test/e2e/cleanup/submariner.go -> test/e2e/cleanup/submariner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: func testSubmarinerCleanup() {",
          "51:  var (",
          "61:  )",
          "63:  BeforeEach(func() {",
          "",
          "[Removed Lines]",
          "52:   crClient                      client.Client",
          "53:   submariner                    *operatorv1alpha1.Submariner",
          "54:   routeAgentPodMonitor          *podMonitor",
          "55:   gatewayPodMonitor             *podMonitor",
          "56:   globalnetPodMonitor           *podMonitor",
          "57:   networkPluginSyncerPodMonitor *podMonitor",
          "58:   lhAgentAgentPodMonitor        *podMonitor",
          "59:   brokerRestConfig              *rest.Config",
          "60:   stopCh                        chan struct{}",
          "",
          "[Added Lines]",
          "52:   crClient               client.Client",
          "53:   submariner             *operatorv1alpha1.Submariner",
          "54:   routeAgentPodMonitor   *podMonitor",
          "55:   gatewayPodMonitor      *podMonitor",
          "56:   globalnetPodMonitor    *podMonitor",
          "57:   lhAgentAgentPodMonitor *podMonitor",
          "58:   brokerRestConfig       *rest.Config",
          "59:   stopCh                 chan struct{}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:    globalnetPodMonitor = startPodMonitor(opnames.AppendUninstall(names.GlobalnetComponent), stopCh)",
          "92:   }",
          "100:   if submariner.Spec.ServiceDiscoveryEnabled {",
          "101:    lhAgentAgentPodMonitor = startPodMonitor(opnames.AppendUninstall(names.ServiceDiscoveryComponent), stopCh)",
          "102:   }",
          "",
          "[Removed Lines]",
          "94:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "95:    names.NetworkPluginSyncerComponent, metav1.GetOptions{})",
          "96:   if err == nil {",
          "97:    networkPluginSyncerPodMonitor = startPodMonitor(opnames.AppendUninstall(names.NetworkPluginSyncerComponent), stopCh)",
          "98:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "156:   routeAgentPodMonitor.assertUninstallPodsCompleted()",
          "157:   gatewayPodMonitor.assertUninstallPodsCompleted()",
          "158:   globalnetPodMonitor.assertUninstallPodsCompleted()",
          "161:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().DaemonSets(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "162:    opnames.AppendUninstall(names.GatewayComponent), metav1.GetOptions{})",
          "",
          "[Removed Lines]",
          "159:   networkPluginSyncerPodMonitor.assertUninstallPodsCompleted()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "170:    opnames.AppendUninstall(names.GlobalnetComponent), metav1.GetOptions{})",
          "171:   assertIsNotFound(err, \"DaemonSet\", opnames.AppendUninstall(names.GlobalnetComponent))",
          "177:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "178:    opnames.AppendUninstall(names.ServiceDiscoveryComponent), metav1.GetOptions{})",
          "179:   assertIsNotFound(err, \"Deployment\", opnames.AppendUninstall(names.ServiceDiscoveryComponent))",
          "",
          "[Removed Lines]",
          "173:   _, err = framework.KubeClients[framework.ClusterA].AppsV1().Deployments(framework.TestContext.SubmarinerNamespace).Get(context.TODO(),",
          "174:    opnames.AppendUninstall(names.NetworkPluginSyncerComponent), metav1.GetOptions{})",
          "175:   assertIsNotFound(err, \"Deployment\", opnames.AppendUninstall(names.NetworkPluginSyncerComponent))",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}