{
  "cve_id": "CVE-2023-5236",
  "cve_desc": "A flaw was found in Infinispan, which does not detect circular object references when unmarshalling. An authenticated attacker with sufficient permissions could insert a maliciously constructed object into the cache and use it to cause out of memory errors and achieve a denial of service.",
  "repo": "infinispan/protostream",
  "patch_hash": "4ef66958f2c4890ae1c6a7acd629d27bd88aa4cb",
  "patch_info": {
    "commit_hash": "4ef66958f2c4890ae1c6a7acd629d27bd88aa4cb",
    "repo": "infinispan/protostream",
    "commit_url": "https://github.com/infinispan/protostream/commit/4ef66958f2c4890ae1c6a7acd629d27bd88aa4cb",
    "files": [
      "core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java",
      "core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java"
    ],
    "message": "IPROTO-263 Count recursion depth on nested tag writers",
    "before_after_code_files": [
      "core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java||core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java",
      "core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java||core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java||core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java": [
      "File: core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java -> core/src/main/java/org/infinispan/protostream/ProtobufTagMarshaller.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:    interface WriteContext extends OperationContext {",
      "47:       TagWriter getWriter();",
      "48:    }",
      "49: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:       int depth();",
      "",
      "---------------"
    ],
    "core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java||core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java": [
      "File: core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java -> core/src/main/java/org/infinispan/protostream/impl/TagWriterImpl.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "35:    private final TagWriterImpl parent;",
      "38:    private Map<Object, Object> params = null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37:    private final int depth;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "44:    private TagWriterImpl(TagWriterImpl parent, Encoder encoder) {",
      "45:       this.parent = parent;",
      "46:       this.serCtx = parent.serCtx;",
      "47:       this.encoder = encoder;",
      "48:    }",
      "50:    private TagWriterImpl(SerializationContextImpl serCtx, Encoder encoder) {",
      "51:       this.parent = null;",
      "52:       this.serCtx = serCtx;",
      "53:       this.encoder = encoder;",
      "54:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "48:       this.depth = parent.depth + 1;",
      "55:       this.depth = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "274:       return this;",
      "275:    }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "281:    @Override",
      "282:    public int depth() {",
      "283:       return depth;",
      "284:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5caed435d5937eb10319c05426a2ea8afd91bfff",
      "candidate_info": {
        "commit_hash": "5caed435d5937eb10319c05426a2ea8afd91bfff",
        "repo": "infinispan/protostream",
        "commit_url": "https://github.com/infinispan/protostream/commit/5caed435d5937eb10319c05426a2ea8afd91bfff",
        "files": [
          "integrationtests/pom.xml",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java",
          "parent/pom.xml"
        ],
        "message": "IPROTO-263 Test circular dependencies entity marshalling",
        "before_after_code_files": [
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java",
          "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/infinispan/protostream/pull/189"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java": [
          "File: integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java -> integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/GeneratedMarshallerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.infinispan.protostream.integrationtests.processor.marshaller;",
          "3: import static org.assertj.core.api.AssertionsForClassTypes.assertThatThrownBy;",
          "4: import static org.junit.Assert.assertTrue;",
          "6: import java.util.Collections;",
          "8: import org.infinispan.protostream.GeneratedSchema;",
          "9: import org.infinispan.protostream.ProtobufUtil;",
          "10: import org.infinispan.protostream.SerializationContext;",
          "11: import org.infinispan.protostream.exception.ProtoStreamException;",
          "12: import org.infinispan.protostream.integrationtests.processor.marshaller.model.FootballSchemaImpl;",
          "13: import org.infinispan.protostream.integrationtests.processor.marshaller.model.FootballTeam;",
          "14: import org.infinispan.protostream.integrationtests.processor.marshaller.model.Player;",
          "15: import org.junit.Test;",
          "17: public class GeneratedMarshallerTest {",
          "19:    @Test",
          "20:    public void testGenericMessage() {",
          "21:       SerializationContext ctx = ProtobufUtil.newSerializationContext();",
          "23:       GeneratedSchema generatedSchema = new FootballSchemaImpl();",
          "24:       generatedSchema.registerSchema(ctx);",
          "25:       generatedSchema.registerMarshallers(ctx);",
          "27:       assertTrue(generatedSchema.getProtoFile().contains(\"message Player\"));",
          "29:       FootballTeam footBallTeam = new FootballTeam();",
          "30:       footBallTeam.setName(\"New-Team\");",
          "32:       Player player = new Player(\"fax4ever\", footBallTeam);",
          "33:       footBallTeam.setPlayers(Collections.singletonList(player));",
          "35:       assertThatThrownBy(() -> ProtobufUtil.toWrappedByteArray(ctx, player))",
          "36:             .isInstanceOf(ProtoStreamException.class)",
          "37:             .hasMessageContaining(\"IPROTO000008\");",
          "38:    }",
          "39: }",
          "",
          "---------------"
        ],
        "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java": [
          "File: integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java -> integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballSchema.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.infinispan.protostream.integrationtests.processor.marshaller.model;",
          "3: import org.infinispan.protostream.GeneratedSchema;",
          "4: import org.infinispan.protostream.annotations.AutoProtoSchemaBuilder;",
          "6: @AutoProtoSchemaBuilder(includeClasses = { FootballTeam.class, Player.class }, schemaPackageName = \"org.football\",",
          "7:       schemaFileName = \"football.proto\", schemaFilePath = \"proto\")",
          "8: public interface FootballSchema extends GeneratedSchema {",
          "10: }",
          "",
          "---------------"
        ],
        "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java": [
          "File: integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java -> integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/FootballTeam.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.infinispan.protostream.integrationtests.processor.marshaller.model;",
          "3: import java.util.List;",
          "5: import org.infinispan.protostream.annotations.ProtoField;",
          "7: public class FootballTeam {",
          "9:    private String name;",
          "10:    private List<Player> players;",
          "12:    @ProtoField(value = 1)",
          "13:    public String getName() {",
          "14:       return name;",
          "15:    }",
          "17:    public void setName(String name) {",
          "18:       this.name = name;",
          "19:    }",
          "21:    @ProtoField(value = 2)",
          "22:    public List<Player> getPlayers() {",
          "23:       return players;",
          "24:    }",
          "26:    public void setPlayers(List<Player> players) {",
          "27:       this.players = players;",
          "28:    }",
          "29: }",
          "",
          "---------------"
        ],
        "integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java||integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java": [
          "File: integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java -> integrationtests/src/test/java/org/infinispan/protostream/integrationtests/processor/marshaller/model/Player.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.infinispan.protostream.integrationtests.processor.marshaller.model;",
          "3: import org.infinispan.protostream.annotations.ProtoFactory;",
          "4: import org.infinispan.protostream.annotations.ProtoField;",
          "6: public class Player {",
          "8:    private String name;",
          "9:    private FootballTeam footballTeam;",
          "11:    @ProtoFactory",
          "12:    public Player(String name, FootballTeam footballTeam) {",
          "13:       this.name = name;",
          "14:       this.footballTeam = footballTeam;",
          "15:    }",
          "17:    @ProtoField(value = 1)",
          "18:    public String getName() {",
          "19:       return name;",
          "20:    }",
          "22:    @ProtoField(value = 2)",
          "23:    public FootballTeam getFootballTeam() {",
          "24:       return footballTeam;",
          "25:    }",
          "26: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}