{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a6fe7be91a81f1ebd0bd8eb6a8c22916f3907a1",
      "candidate_info": {
        "commit_hash": "6a6fe7be91a81f1ebd0bd8eb6a8c22916f3907a1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6a6fe7be91a81f1ebd0bd8eb6a8c22916f3907a1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890511 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:     public String[] getLabelsByPageIndices()",
          "231:     {",
          "233:         computeLabels(new LabelHandler()",
          "234:         {",
          "235:             @Override",
          "236:             public void newLabel(int pageIndex, String label)",
          "237:             {",
          "240:                     map[pageIndex] = label;",
          "241:                 }",
          "242:             }",
          "",
          "[Removed Lines]",
          "232:         final String[] map = new String[doc.getNumberOfPages()];",
          "238:                 if(pageIndex < doc.getNumberOfPages())",
          "239:                 {",
          "",
          "[Added Lines]",
          "232:         final int numberOfPages = doc.getNumberOfPages();",
          "233:         final String[] map = new String[numberOfPages];",
          "239:                 if (pageIndex < numberOfPages)",
          "240:                 {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1531d3795bfea3ed670e124bd47ccc5126cbca76",
      "candidate_info": {
        "commit_hash": "1531d3795bfea3ed670e124bd47ccc5126cbca76",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/1531d3795bfea3ed670e124bd47ccc5126cbca76",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java"
        ],
        "message": "PDFBOX-4892: SonarQube fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881543 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java -> pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: import org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;",
          "55: import org.apache.pdfbox.pdmodel.interactive.form.PDField;",
          "56: import org.apache.pdfbox.rendering.PDFRenderer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: import org.junit.Assert;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "818:                             COSBase item = kdict.getItem(COSName.OBJ);",
          "819:                             if (item instanceof COSObject)",
          "820:                             {",
          "822:                             }",
          "823:                             else",
          "824:                             {",
          "827:                             }",
          "828:                         }",
          "829:                     }",
          "",
          "[Removed Lines]",
          "821:                                 assertTrue(\"Annotation page is not in the page tree: \" + item, pageTree.indexOf(page) != -1);",
          "826:                                 assertTrue(\"Annotation page is not in the page tree\", pageTree.indexOf(page) != -1);",
          "",
          "[Added Lines]",
          "822:                                 Assert.assertNotEquals(\"Annotation page is not in the page tree: \" + item, -1, pageTree.indexOf(page));",
          "827:                                 Assert.assertNotEquals(\"Annotation page is not in the page tree\", -1, pageTree.indexOf(page));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "909:         PDPage page = structureElement.getPage();",
          "910:         if (page != null)",
          "911:         {",
          "913:         }",
          "914:     }",
          "915: }",
          "",
          "[Removed Lines]",
          "912:             assertTrue(\"Page is not in the page tree\", pageTree.indexOf(page) != -1);",
          "",
          "[Added Lines]",
          "913:             Assert.assertNotEquals(\"Page is not in the page tree\", -1, pageTree.indexOf(page));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a822b7a77aa40f74713de11d3be145eecbaba5cb",
      "candidate_info": {
        "commit_hash": "a822b7a77aa40f74713de11d3be145eecbaba5cb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a822b7a77aa40f74713de11d3be145eecbaba5cb",
        "files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java"
        ],
        "message": "PDFBOX-5000: access AcroForm skipping fixups\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882812 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java||debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java",
          "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java||debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java": [
          "File: debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java -> debugger/src/main/java/org/apache/pdfbox/debugger/pagepane/PagePane.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:     private void collectFieldLocations() throws IOException",
          "162:     {",
          "164:         if (acroForm == null)",
          "165:         {",
          "166:             return;",
          "",
          "[Removed Lines]",
          "163:         PDAcroForm acroForm = document.getDocumentCatalog().getAcroForm();",
          "",
          "[Added Lines]",
          "163:         PDAcroForm acroForm = document.getDocumentCatalog().getAcroForm(false);",
          "",
          "---------------"
        ],
        "preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java||preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java": [
          "File: preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java -> preflight/src/main/java/org/apache/pdfbox/preflight/process/AcroFormValidationProcess.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         PDDocumentCatalog catalog = ctx.getDocument().getDocumentCatalog();",
          "56:         if (catalog != null)",
          "57:         {",
          "59:             if (acroForm != null)",
          "60:             {",
          "61:                 checkNeedAppearences(ctx, acroForm);",
          "",
          "[Removed Lines]",
          "58:             PDAcroForm acroForm = catalog.getAcroForm();",
          "",
          "[Added Lines]",
          "58:             PDAcroForm acroForm = catalog.getAcroForm(false);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37eebb8c1fe4f0bc86abec560c2a02c741e90abb",
      "candidate_info": {
        "commit_hash": "37eebb8c1fe4f0bc86abec560c2a02c741e90abb",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/37eebb8c1fe4f0bc86abec560c2a02c741e90abb",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java"
        ],
        "message": "PDFBOX-4892: pass PDDocument, add comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889389 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/AddAnnotations.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "309:             for (PDAnnotation ann : annotations)",
          "310:             {",
          "312:             }",
          "314:             showPageNo(document, page1, \"Page 1\");",
          "",
          "[Removed Lines]",
          "311:                 ann.constructAppearances();",
          "",
          "[Added Lines]",
          "313:                 ann.constructAppearances(document);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a94f6f631aff6e0b9e4b11902126fa13f1257a7d",
      "candidate_info": {
        "commit_hash": "a94f6f631aff6e0b9e4b11902126fa13f1257a7d",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a94f6f631aff6e0b9e4b11902126fa13f1257a7d",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java"
        ],
        "message": "PDFBOX-4892: improve failure message\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890202 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java||pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java -> pdfbox/src/test/java/org/apache/pdfbox/multipdf/PDFMergerUtilityTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "606:             }",
          "607:         }",
          "608:         br.close();",
          "610:     }",
          "",
          "[Removed Lines]",
          "609:         assertEquals(1, count);",
          "",
          "[Added Lines]",
          "609:         assertEquals(file.getPath(), 1, count);",
          "",
          "---------------"
        ]
      }
    }
  ]
}