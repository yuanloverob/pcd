{
  "cve_id": "CVE-2015-6830",
  "cve_desc": "libraries/plugins/auth/AuthenticationCookie.class.php in phpMyAdmin 4.3.x before 4.3.13.2 and 4.4.x before 4.4.14.1 allows remote attackers to bypass a multiple-reCaptcha protection mechanism against brute-force credential guessing by providing a correct response to a single reCaptcha.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "785f4e2711848eb8945894199d5870253a88584e",
  "patch_info": {
    "commit_hash": "785f4e2711848eb8945894199d5870253a88584e",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/785f4e2711848eb8945894199d5870253a88584e",
    "files": [
      "ChangeLog",
      "libraries/plugins/auth/AuthenticationCookie.class.php",
      "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
    ],
    "message": "Fix reCaptcha bypass\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
    "before_after_code_files": [
      "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
      "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
    ]
  },
  "patch_diff": {
    "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php": [
      "File: libraries/plugins/auth/AuthenticationCookie.class.php -> libraries/plugins/auth/AuthenticationCookie.class.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "223:                 . $GLOBALS['server'] . '\" />';",
      "224:         } // end if (server choice)",
      "235:         if (  !empty($GLOBALS['cfg']['CaptchaLoginPrivateKey'])",
      "236:             && !empty($GLOBALS['cfg']['CaptchaLoginPublicKey'])",
      "238:         ) {",
      "240:             echo '<script src=\"https://www.google.com/recaptcha/api.js?hl='",
      "",
      "[Removed Lines]",
      "227:         $skip = false;",
      "228:         if (  isset($_SESSION['last_valid_captcha'])",
      "229:             && $_SESSION['last_valid_captcha']",
      "230:         ) {",
      "231:             $skip = true;",
      "232:         }",
      "237:             && !$skip",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "337:             if (! defined('TESTSUITE')) {",
      "338:                 session_destroy();",
      "341:             }",
      "343:             if ($GLOBALS['cfg']['LoginCookieDeleteAll']) {",
      "",
      "[Removed Lines]",
      "340:                 $_SESSION['last_valid_captcha'] = false;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "360:         if (! empty($_REQUEST['pma_username'])) {",
      "371:             if (! empty($GLOBALS['cfg']['CaptchaLoginPrivateKey'])",
      "372:                 && ! empty($GLOBALS['cfg']['CaptchaLoginPublicKey'])",
      "374:             ) {",
      "375:                 if (! empty($_POST[\"g-recaptcha-response\"])) {",
      "",
      "[Removed Lines]",
      "363:             $skip = false;",
      "364:             if (isset($_SESSION['last_valid_captcha'])",
      "365:                 && $_SESSION['last_valid_captcha']",
      "366:             ) {",
      "367:                 $skip = true;",
      "368:             }",
      "373:                 && ! $skip",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "389:                     if ($resp == null || ! $resp->isSuccess()) {",
      "390:                         $conn_error = __('Entered captcha is wrong, try again!');",
      "392:                         return false;",
      "395:                     }",
      "396:                 } else {",
      "403:                 }",
      "404:             }",
      "",
      "[Removed Lines]",
      "391:                         $_SESSION['last_valid_captcha'] = false;",
      "393:                     } else {",
      "394:                         $_SESSION['last_valid_captcha'] = true;",
      "397:                     if (! isset($_SESSION['last_valid_captcha'])",
      "398:                         || ! $_SESSION['last_valid_captcha']",
      "399:                     ) {",
      "400:                         $conn_error = __('Please enter correct captcha!');",
      "401:                         return false;",
      "402:                     }",
      "",
      "[Added Lines]",
      "374:                     $conn_error = __('Please enter correct captcha!');",
      "375:                     return false;",
      "",
      "---------------"
    ],
    "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php": [
      "File: test/classes/plugin/auth/PMA_AuthenticationCookie_test.php -> test/classes/plugin/auth/PMA_AuthenticationCookie_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "186:         $GLOBALS['cfg']['Lang'] = 'en';",
      "187:         $GLOBALS['cfg']['AllowArbitraryServer'] = true;",
      "188:         $GLOBALS['cfg']['Servers'] = array(1, 2);",
      "190:         $GLOBALS['target'] = 'testTarget';",
      "191:         $GLOBALS['db'] = 'testDb';",
      "192:         $GLOBALS['table'] = 'testTable';",
      "",
      "[Removed Lines]",
      "189:         $_SESSION['last_valid_captcha'] = true;",
      "",
      "[Added Lines]",
      "189:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
      "190:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "308:         $GLOBALS['cfg']['Lang'] = '';",
      "309:         $GLOBALS['cfg']['AllowArbitraryServer'] = false;",
      "310:         $GLOBALS['cfg']['Servers'] = array(1);",
      "312:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = 'testprivkey';",
      "313:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = 'testpubkey';",
      "314:         $GLOBALS['server'] = 0;",
      "",
      "[Removed Lines]",
      "311:         $_SESSION['last_valid_captcha'] = false;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "435:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = 'testprivkey';",
      "436:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = 'testpubkey';",
      "437:         $_POST[\"g-recaptcha-response\"] = '';",
      "",
      "[Removed Lines]",
      "434:         $_SESSION['last_valid_captcha'] = false;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "485:         $_REQUEST['old_usr'] = '';",
      "486:         $_REQUEST['pma_username'] = 'testPMAUser';",
      "487:         $_REQUEST['pma_servername'] = 'testPMAServer';",
      "",
      "[Removed Lines]",
      "484:         $_SESSION['last_valid_captcha'] = true;",
      "",
      "[Added Lines]",
      "483:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
      "484:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "611:         $_COOKIE['pma_iv-1'] = base64_encode('testiv09testiv09');",
      "612:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
      "613:         $_SESSION['last_access_time'] = '';",
      "617:         $this->object = $this->getMockBuilder('AuthenticationCookie')",
      "",
      "[Removed Lines]",
      "614:         $_SESSION['last_valid_captcha'] = true;",
      "",
      "[Added Lines]",
      "614:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
      "615:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "649:         $_COOKIE['pmaPass-1'] = 'pmaPass1';",
      "650:         $_COOKIE['pma_iv-1'] = base64_encode('testiv09testiv09');",
      "651:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
      "653:         $_SESSION['last_access_time'] = time() - 1000;",
      "654:         $GLOBALS['cfg']['LoginCookieValidity'] = 1440;",
      "",
      "[Removed Lines]",
      "652:         $_SESSION['last_valid_captcha'] = true;",
      "",
      "[Added Lines]",
      "653:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
      "654:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "694:         $_COOKIE['pma_iv-1'] = base64_encode('testiv09testiv09');",
      "695:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
      "696:         $_SESSION['last_access_time'] = 1;",
      "698:         $GLOBALS['cfg']['LoginCookieValidity'] = 0;",
      "699:         $_SESSION['last_access_time'] = -1;",
      "",
      "[Removed Lines]",
      "697:         $_SESSION['last_valid_captcha'] = true;",
      "",
      "[Added Lines]",
      "699:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
      "700:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "15204ab22722c3ca33c83c18d53d7e937cb6fe91",
      "candidate_info": {
        "commit_hash": "15204ab22722c3ca33c83c18d53d7e937cb6fe91",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/15204ab22722c3ca33c83c18d53d7e937cb6fe91",
        "files": [
          "libraries/plugins/auth/AuthenticationCookie.class.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/Response.php",
          "libraries/plugins/auth/recaptcha/autoload.php",
          "libraries/plugins/auth/recaptcha/recaptchalib.php"
        ],
        "message": "Fix #11389 ReCaptcha produce deprecated messages under PHP 7 Upgrade ReCaptcha library to version 1.1.1\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
        "before_after_code_files": [
          "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php||libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php",
          "libraries/plugins/auth/recaptcha/ReCaptcha/Response.php||libraries/plugins/auth/recaptcha/ReCaptcha/Response.php",
          "libraries/plugins/auth/recaptcha/autoload.php||libraries/plugins/auth/recaptcha/autoload.php",
          "libraries/plugins/auth/recaptcha/recaptchalib.php||libraries/plugins/auth/recaptcha/recaptchalib.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php"
          ],
          "candidate": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php": [
          "File: libraries/plugins/auth/AuthenticationCookie.class.php -> libraries/plugins/auth/AuthenticationCookie.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:             ) {",
          "371:                 if (! empty($_POST[\"g-recaptcha-response\"])) {",
          "375:                         $GLOBALS['cfg']['CaptchaLoginPrivateKey']",
          "376:                     );",
          "382:                     );",
          "386:                         $conn_error = __('Entered captcha is wrong, try again!');",
          "387:                         $_SESSION['last_valid_captcha'] = false;",
          "388:                         return false;",
          "",
          "[Removed Lines]",
          "373:                     include_once 'libraries/plugins/auth/recaptcha/recaptchalib.php';",
          "374:                     $reCaptcha = new ReCaptcha(",
          "379:                     $resp = $reCaptcha->verifyResponse(",
          "380:                         $_SERVER[\"REMOTE_ADDR\"],",
          "381:                         $_POST[\"g-recaptcha-response\"]",
          "385:                     if ($resp == null || ! $resp->success) {",
          "",
          "[Added Lines]",
          "373:                     include_once 'libraries/plugins/auth/recaptcha/autoload.php';",
          "374:                     $reCaptcha = new \\ReCaptcha\\ReCaptcha(",
          "379:                     $resp = $reCaptcha->verify(",
          "380:                         $_POST[\"g-recaptcha-response\"],",
          "381:                         $_SERVER[\"REMOTE_ADDR\"]",
          "385:                     if ($resp == null || ! $resp->isSuccess()) {",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php||libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php -> libraries/plugins/auth/recaptcha/ReCaptcha/ReCaptcha.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha;",
          "32: class ReCaptcha",
          "33: {",
          "38:     const VERSION = 'php_1.1.0';",
          "44:     private $secret;",
          "50:     private $requestMethod;",
          "58:     public function __construct($secret, RequestMethod $requestMethod = null)",
          "59:     {",
          "60:         if (empty($secret)) {",
          "61:             throw new \\RuntimeException('No secret provided');",
          "62:         }",
          "64:         if (!is_string($secret)) {",
          "65:             throw new \\RuntimeException('The provided secret must be a string');",
          "66:         }",
          "68:         $this->secret = $secret;",
          "70:         if (!is_null($requestMethod)) {",
          "71:             $this->requestMethod = $requestMethod;",
          "72:         } else {",
          "73:             $this->requestMethod = new RequestMethod\\Post();",
          "74:         }",
          "75:     }",
          "85:     public function verify($response, $remoteIp = null)",
          "86:     {",
          "88:         if (empty($response)) {",
          "89:             $recaptchaResponse = new Response(false, array('missing-input-response'));",
          "90:             return $recaptchaResponse;",
          "91:         }",
          "93:         $params = new RequestParameters($this->secret, $response, $remoteIp, self::VERSION);",
          "94:         $rawResponse = $this->requestMethod->submit($params);",
          "95:         return Response::fromJson($rawResponse);",
          "96:     }",
          "97: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php -> libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha;",
          "32: interface RequestMethod",
          "33: {",
          "41:     public function submit(RequestParameters $params);",
          "42: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php -> libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha\\RequestMethod;",
          "29: use ReCaptcha\\RequestMethod;",
          "30: use ReCaptcha\\RequestParameters;",
          "35: class Post implements RequestMethod",
          "36: {",
          "41:     const SITE_VERIFY_URL = 'https://www.google.com/recaptcha/api/siteverify';",
          "49:     public function submit(RequestParameters $params)",
          "50:     {",
          "55:         $peer_key = version_compare(PHP_VERSION, '5.6.0', '<') ? 'CN_name' : 'peer_name';",
          "56:         $options = array(",
          "57:             'http' => array(",
          "58:                 'header' => \"Content-type: application/x-www-form-urlencoded\\r\\n\",",
          "59:                 'method' => 'POST',",
          "60:                 'content' => $params->toQueryString(),",
          "62:                 'verify_peer' => true,",
          "64:                 $peer_key => 'www.google.com',",
          "65:             ),",
          "66:         );",
          "67:         $context = stream_context_create($options);",
          "68:         return file_get_contents(self::SITE_VERIFY_URL, false, $context);",
          "69:     }",
          "70: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php -> libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/Socket.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha\\RequestMethod;",
          "33: class Socket",
          "34: {",
          "35:     private $handle = null;",
          "48:     public function fsockopen($hostname, $port = -1, &$errno = 0, &$errstr = '', $timeout = null)",
          "49:     {",
          "50:         $this->handle = fsockopen($hostname, $port, $errno, $errstr, (is_null($timeout) ? ini_get(\"default_socket_timeout\") : $timeout));",
          "52:         if ($this->handle != false && $errno === 0 && $errstr === '') {",
          "53:             return $this->handle;",
          "54:         } else {",
          "55:             return false;",
          "56:         }",
          "57:     }",
          "67:     public function fwrite($string, $length = null)",
          "68:     {",
          "69:         return fwrite($this->handle, $string, (is_null($length) ? strlen($string) : $length));",
          "70:     }",
          "78:     public function fgets($length = null)",
          "79:     {",
          "80:         return fgets($this->handle, $length);",
          "81:     }",
          "89:     public function feof()",
          "90:     {",
          "91:         return feof($this->handle);",
          "92:     }",
          "100:     public function fclose()",
          "101:     {",
          "102:         return fclose($this->handle);",
          "103:     }",
          "104: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php -> libraries/plugins/auth/recaptcha/ReCaptcha/RequestMethod/SocketPost.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha\\RequestMethod;",
          "29: use ReCaptcha\\RequestMethod;",
          "30: use ReCaptcha\\RequestParameters;",
          "37: class SocketPost implements RequestMethod",
          "38: {",
          "43:     const RECAPTCHA_HOST = 'www.google.com';",
          "48:     const SITE_VERIFY_PATH = '/recaptcha/api/siteverify';",
          "53:     const BAD_REQUEST = '{\"success\": false, \"error-codes\": [\"invalid-request\"]}';",
          "58:     const BAD_RESPONSE = '{\"success\": false, \"error-codes\": [\"invalid-response\"]}';",
          "64:     private $socket;",
          "71:     public function __construct(Socket $socket = null)",
          "72:     {",
          "73:         if (!is_null($socket)) {",
          "74:             $this->socket = $socket;",
          "75:         } else {",
          "76:             $this->socket = new Socket();",
          "77:         }",
          "78:     }",
          "86:     public function submit(RequestParameters $params)",
          "87:     {",
          "88:         $errno = 0;",
          "89:         $errstr = '';",
          "91:         if ($this->socket->fsockopen('ssl://' . self::RECAPTCHA_HOST, 443, $errno, $errstr, 30) !== false) {",
          "92:             $content = $params->toQueryString();",
          "94:             $request = \"POST \" . self::SITE_VERIFY_PATH . \" HTTP/1.1\\r\\n\";",
          "95:             $request .= \"Host: \" . self::RECAPTCHA_HOST . \"\\r\\n\";",
          "96:             $request .= \"Content-Type: application/x-www-form-urlencoded\\r\\n\";",
          "97:             $request .= \"Content-length: \" . strlen($content) . \"\\r\\n\";",
          "98:             $request .= \"Connection: close\\r\\n\\r\\n\";",
          "99:             $request .= $content . \"\\r\\n\\r\\n\";",
          "101:             $this->socket->fwrite($request);",
          "102:             $response = '';",
          "104:             while (!$this->socket->feof()) {",
          "105:                 $response .= $this->socket->fgets(4096);",
          "106:             }",
          "108:             $this->socket->fclose();",
          "110:             if (0 === strpos($response, 'HTTP/1.1 200 OK')) {",
          "111:                 $parts = preg_split(\"#\\n\\s*\\n#Uis\", $response);",
          "112:                 return $parts[1];",
          "113:             }",
          "115:             return self::BAD_RESPONSE;",
          "116:         }",
          "118:         return self::BAD_REQUEST;",
          "119:     }",
          "120: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php||libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php -> libraries/plugins/auth/recaptcha/ReCaptcha/RequestParameters.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha;",
          "32: class RequestParameters",
          "33: {",
          "38:     private $secret;",
          "44:     private $response;",
          "50:     private $remoteIp;",
          "56:     private $version;",
          "66:     public function __construct($secret, $response, $remoteIp = null, $version = null)",
          "67:     {",
          "68:         $this->secret = $secret;",
          "69:         $this->response = $response;",
          "70:         $this->remoteIp = $remoteIp;",
          "71:         $this->version = $version;",
          "72:     }",
          "79:     public function toArray()",
          "80:     {",
          "81:         $params = array('secret' => $this->secret, 'response' => $this->response);",
          "83:         if (!is_null($this->remoteIp)) {",
          "84:             $params['remoteip'] = $this->remoteIp;",
          "85:         }",
          "87:         if (!is_null($this->version)) {",
          "88:             $params['version'] = $this->version;",
          "89:         }",
          "91:         return $params;",
          "92:     }",
          "99:     public function toQueryString()",
          "100:     {",
          "101:         return http_build_query($this->toArray());",
          "102:     }",
          "103: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/ReCaptcha/Response.php||libraries/plugins/auth/recaptcha/ReCaptcha/Response.php": [
          "File: libraries/plugins/auth/recaptcha/ReCaptcha/Response.php -> libraries/plugins/auth/recaptcha/ReCaptcha/Response.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "27: namespace ReCaptcha;",
          "32: class Response",
          "33: {",
          "38:     private $success = false;",
          "44:     private $errorCodes = array();",
          "52:     public static function fromJson($json)",
          "53:     {",
          "54:         $responseData = json_decode($json, true);",
          "56:         if (!$responseData) {",
          "57:             return new Response(false, array('invalid-json'));",
          "58:         }",
          "60:         if (isset($responseData['success']) && $responseData['success'] == true) {",
          "61:             return new Response(true);",
          "62:         }",
          "64:         if (isset($responseData['error-codes']) && is_array($responseData['error-codes'])) {",
          "65:             return new Response(false, $responseData['error-codes']);",
          "66:         }",
          "68:         return new Response(false);",
          "69:     }",
          "77:     public function __construct($success, array $errorCodes = array())",
          "78:     {",
          "79:         $this->success = $success;",
          "80:         $this->errorCodes = $errorCodes;",
          "81:     }",
          "88:     public function isSuccess()",
          "89:     {",
          "90:         return $this->success;",
          "91:     }",
          "98:     public function getErrorCodes()",
          "99:     {",
          "100:         return $this->errorCodes;",
          "101:     }",
          "102: }",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/autoload.php||libraries/plugins/auth/recaptcha/autoload.php": [
          "File: libraries/plugins/auth/recaptcha/autoload.php -> libraries/plugins/auth/recaptcha/autoload.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "8: spl_autoload_register(function ($class) {",
          "9:     if (substr($class, 0, 10) !== 'ReCaptcha\\\\') {",
          "13:       return;",
          "14:     }",
          "20:     $class = str_replace('\\\\', '/', $class);",
          "26:     $path = dirname(__FILE__).'/'.$class.'.php';",
          "27:     if (is_readable($path)) {",
          "28:         require_once $path;",
          "29:     }",
          "34:     $path = dirname(__FILE__).'/../tests/'.$class.'.php';",
          "35:     if (is_readable($path)) {",
          "36:         require_once $path;",
          "37:     }",
          "38: });",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/recaptcha/recaptchalib.php||libraries/plugins/auth/recaptcha/recaptchalib.php": [
          "File: libraries/plugins/auth/recaptcha/recaptchalib.php -> libraries/plugins/auth/recaptcha/recaptchalib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b939fb3d3640d3bfe9fac6e023ae74cfc28862c",
      "candidate_info": {
        "commit_hash": "1b939fb3d3640d3bfe9fac6e023ae74cfc28862c",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/1b939fb3d3640d3bfe9fac6e023ae74cfc28862c",
        "files": [
          "doc/config.rst",
          "libraries/config.default.php",
          "libraries/config/ServerConfigChecks.class.php",
          "libraries/config/messages.inc.php",
          "libraries/config/setup.forms.php",
          "libraries/plugins/auth/AuthenticationCookie.class.php"
        ],
        "message": "rfe #1441 Add regexp match when using AllowArbitraryServer\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
        "before_after_code_files": [
          "libraries/config.default.php||libraries/config.default.php",
          "libraries/config/ServerConfigChecks.class.php||libraries/config/ServerConfigChecks.class.php",
          "libraries/config/messages.inc.php||libraries/config/messages.inc.php",
          "libraries/config/setup.forms.php||libraries/config/setup.forms.php",
          "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php"
          ],
          "candidate": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/config.default.php||libraries/config.default.php": [
          "File: libraries/config.default.php -> libraries/config.default.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "809: $cfg['AllowArbitraryServer'] = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "817: $cfg['ArbitraryServerRegexp'] = '';",
          "",
          "---------------"
        ],
        "libraries/config/ServerConfigChecks.class.php||libraries/config/ServerConfigChecks.class.php": [
          "File: libraries/config/ServerConfigChecks.class.php -> libraries/config/ServerConfigChecks.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:     protected static function defineMessages()",
          "370:     {",
          "372:         $sAllowArbitraryServerWarn = sprintf(",
          "373:             $sAllowArbitraryServerWarn,",
          "374:             '[a@?page=form&amp;formset=Features#tab_Security]',",
          "376:             '[/a]'",
          "377:         );",
          "378:         $sBlowfishSecretMsg = __('You didn\\'t have blowfish secret set and have enabled [kbd]cookie[/kbd] authentication, so a key was automatically generated for you. It is used to encrypt cookies; you don\\'t need to remember it.');",
          "",
          "[Removed Lines]",
          "371:         $sAllowArbitraryServerWarn = __('This %soption%s should be disabled as it allows attackers to bruteforce login to any MySQL server. If you feel this is necessary, use %strusted proxies list%s. However, IP-based protection may not be reliable if your IP belongs to an ISP where thousands of users, including you, are connected to.');",
          "375:             '[/a]', '[a@?page=form&amp;formset=Features#tab_Security]',",
          "",
          "[Added Lines]",
          "371:         $sAllowArbitraryServerWarn = __('This %soption%s should be disabled as it allows attackers to bruteforce login to any MySQL server. If you feel this is necessary, use %srestrict login to MySQL server%s or %strusted proxies list%s. However, IP-based protection with trusted proxies list may not be reliable if your IP belongs to an ISP where thousands of users, including you, are connected to.');",
          "375:             '[/a]',",
          "376:             '[a@?page=form&amp;formset=Features#tab_Security]',",
          "377:             '[/a]',",
          "378:             '[a@?page=form&amp;formset=Features#tab_Security]',",
          "",
          "---------------"
        ],
        "libraries/config/messages.inc.php||libraries/config/messages.inc.php": [
          "File: libraries/config/messages.inc.php -> libraries/config/messages.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: $strConfigAllowArbitraryServer_desc",
          "18:     = __('If enabled, user can enter any MySQL server in login form for cookie auth.');",
          "19: $strConfigAllowArbitraryServer_name = __('Allow login to any MySQL server');",
          "20: $strConfigAllowThirdPartyFraming_desc = __(",
          "21:     'Enabling this allows a page located on a different domain to call phpMyAdmin '",
          "22:     . 'inside a frame, and is a potential [strong]security hole[/strong] allowing '",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: $strConfigArbitraryServerRegexp_desc = __(",
          "21:     'Restricts the MySQL servers the user can enter when login to an arbitrary '",
          "22:     . 'MySQL server is enabled by matching the IP of the MySQL server to the given '",
          "23:     . 'regular expression.'",
          "24: );",
          "25: $strConfigArbitraryServerRegexp_name = __('Restrict login to MySQL server');",
          "",
          "---------------"
        ],
        "libraries/config/setup.forms.php||libraries/config/setup.forms.php": [
          "File: libraries/config/setup.forms.php -> libraries/config/setup.forms.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:     'TrustedProxies',",
          "109:     'AllowUserDropDatabase',",
          "110:     'AllowArbitraryServer',",
          "111:     'LoginCookieRecall',",
          "112:     'LoginCookieValidity',",
          "113:     'LoginCookieStore',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:     'ArbitraryServerRegexp',",
          "",
          "---------------"
        ],
        "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php": [
          "File: libraries/plugins/auth/AuthenticationCookie.class.php -> libraries/plugins/auth/AuthenticationCookie.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:             if ($GLOBALS['cfg']['AllowArbitraryServer']",
          "407:                 && isset($_REQUEST['pma_servername'])",
          "408:             ) {",
          "409:                 $GLOBALS['pma_auth_server'] = $_REQUEST['pma_servername'];",
          "410:             }",
          "411:             return true;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409:                 if ($GLOBALS['cfg']['ArbitraryServerRegexp']) {",
          "410:                     $parts = explode(' ', $_REQUEST['pma_servername']);",
          "411:                     if (count($parts) == 2) {",
          "412:                         $tmp_host = $parts[0];",
          "413:                     } else {",
          "414:                         $tmp_host = $_REQUEST['pma_servername'];",
          "415:                     }",
          "417:                     $match = preg_match(",
          "418:                         $GLOBALS['cfg']['ArbitraryServerRegexp'], $tmp_host",
          "419:                     );",
          "420:                     if (! $match) {",
          "421:                         $conn_error = __(",
          "422:                             'You are not allowed to log in to this MySQL server!'",
          "423:                         );",
          "424:                         return false;",
          "425:                     }",
          "426:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0314e67900f01410bc8c81c58a40dc0515e3c91d",
      "candidate_info": {
        "commit_hash": "0314e67900f01410bc8c81c58a40dc0515e3c91d",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/0314e67900f01410bc8c81c58a40dc0515e3c91d",
        "files": [
          "ChangeLog",
          "libraries/plugins/auth/AuthenticationCookie.class.php",
          "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
        ],
        "message": "Fix reCaptcha bypass\n\nSigned-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",
        "before_after_code_files": [
          "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
          "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
            "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
          ],
          "candidate": [
            "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php",
            "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php"
          ]
        }
      },
      "candidate_diff": {
        "libraries/plugins/auth/AuthenticationCookie.class.php||libraries/plugins/auth/AuthenticationCookie.class.php": [
          "File: libraries/plugins/auth/AuthenticationCookie.class.php -> libraries/plugins/auth/AuthenticationCookie.class.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:                 . $GLOBALS['server'] . '\" />';",
          "219:         } // end if (server choice)",
          "230:         if (  !empty($GLOBALS['cfg']['CaptchaLoginPrivateKey'])",
          "231:             && !empty($GLOBALS['cfg']['CaptchaLoginPublicKey'])",
          "233:         ) {",
          "235:             echo '<script type=\"text/javascript\">",
          "",
          "[Removed Lines]",
          "222:         $skip = false;",
          "223:         if (  isset($_SESSION['last_valid_captcha'])",
          "224:             && $_SESSION['last_valid_captcha']",
          "225:         ) {",
          "226:             $skip = true;",
          "227:         }",
          "232:             && !$skip",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "349:             return false;",
          "350:         }",
          "361:         if (  !empty($GLOBALS['cfg']['CaptchaLoginPrivateKey'])",
          "362:             && !empty($GLOBALS['cfg']['CaptchaLoginPublicKey'])",
          "364:         ) {",
          "365:             if (  !empty($_POST[\"recaptcha_challenge_field\"])",
          "366:                 && !empty($_POST[\"recaptcha_response_field\"])",
          "",
          "[Removed Lines]",
          "353:         $skip = false;",
          "354:         if (  isset($_SESSION['last_valid_captcha'])",
          "355:             && $_SESSION['last_valid_captcha']",
          "356:         ) {",
          "357:             $skip = true;",
          "358:         }",
          "363:             && !$skip",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "379:                 if ( !$resp->is_valid ) {",
          "380:                     $conn_error = __('Entered captcha is wrong, try again!');",
          "382:                     return false;",
          "385:                 }",
          "386:             } elseif (! empty($_POST[\"recaptcha_challenge_field\"])",
          "387:                 && empty($_POST[\"recaptcha_response_field\"])",
          "",
          "[Removed Lines]",
          "381:                     $_SESSION['last_valid_captcha'] = false;",
          "383:                 } else {",
          "384:                     $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "389:                 $conn_error = __('Please enter correct captcha!');",
          "390:                 return false;",
          "391:             } else {",
          "397:             }",
          "398:         }",
          "",
          "[Removed Lines]",
          "392:                 if (! isset($_SESSION['last_valid_captcha'])",
          "393:                     || ! $_SESSION['last_valid_captcha']",
          "394:                 ) {",
          "395:                     return false;",
          "396:                 }",
          "",
          "[Added Lines]",
          "371:                 return false;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "407:             if (! defined('TESTSUITE')) {",
          "408:                 session_destroy();",
          "411:             }",
          "413:             if ($GLOBALS['cfg']['LoginCookieDeleteAll']) {",
          "",
          "[Removed Lines]",
          "410:                 $_SESSION['last_valid_captcha'] = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/classes/plugin/auth/PMA_AuthenticationCookie_test.php||test/classes/plugin/auth/PMA_AuthenticationCookie_test.php": [
          "File: test/classes/plugin/auth/PMA_AuthenticationCookie_test.php -> test/classes/plugin/auth/PMA_AuthenticationCookie_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:         $GLOBALS['cfg']['Lang'] = 'en';",
          "187:         $GLOBALS['cfg']['AllowArbitraryServer'] = true;",
          "188:         $GLOBALS['cfg']['Servers'] = array(1, 2);",
          "190:         $GLOBALS['target'] = 'testTarget';",
          "191:         $GLOBALS['db'] = 'testDb';",
          "192:         $GLOBALS['table'] = 'testTable';",
          "",
          "[Removed Lines]",
          "189:         $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "189:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
          "190:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:         $GLOBALS['cfg']['Lang'] = '';",
          "329:         $GLOBALS['cfg']['AllowArbitraryServer'] = false;",
          "330:         $GLOBALS['cfg']['Servers'] = array(1);",
          "332:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = 'testprivkey';",
          "333:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = 'testpubkey';",
          "334:         $GLOBALS['server'] = 0;",
          "",
          "[Removed Lines]",
          "331:         $_SESSION['last_valid_captcha'] = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "474:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = 'testprivkey';",
          "475:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = 'testpubkey';",
          "476:         $_POST[\"recaptcha_challenge_field\"] = 'captcha1';",
          "",
          "[Removed Lines]",
          "473:         $_SESSION['last_valid_captcha'] = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "491:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = 'testprivkey';",
          "492:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = 'testpubkey';",
          "493:         $_POST[\"recaptcha_challenge_field\"] = '';",
          "",
          "[Removed Lines]",
          "490:         $_SESSION['last_valid_captcha'] = false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "536:         $_REQUEST['old_usr'] = '';",
          "537:         $_REQUEST['pma_username'] = 'testPMAUser';",
          "538:         $_REQUEST['pma_servername'] = 'testPMAServer';",
          "",
          "[Removed Lines]",
          "535:         $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "533:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
          "534:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "662:         $_COOKIE['pma_iv'] = base64_encode('testiv09testiv09');",
          "663:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
          "664:         $_SESSION['last_access_time'] = '';",
          "668:         $this->object = $this->getMockBuilder('AuthenticationCookie')",
          "669:             ->disableOriginalConstructor()",
          "",
          "[Removed Lines]",
          "665:         $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "664:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
          "665:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "700:         $_COOKIE['pmaPass-1'] = 'pmaPass1';",
          "701:         $_COOKIE['pma_iv'] = base64_encode('testiv09testiv09');",
          "702:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
          "704:         $_SESSION['last_access_time'] = time() - 1000;",
          "705:         $GLOBALS['cfg']['LoginCookieValidity'] = 1440;",
          "",
          "[Removed Lines]",
          "703:         $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "702:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
          "703:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "745:         $_COOKIE['pma_iv'] = base64_encode('testiv09testiv09');",
          "746:         $GLOBALS['cfg']['blowfish_secret'] = 'secret';",
          "747:         $_SESSION['last_access_time'] = 1;",
          "749:         $GLOBALS['cfg']['LoginCookieValidity'] = 0;",
          "750:         $_SESSION['last_access_time'] = -1;",
          "",
          "[Removed Lines]",
          "748:         $_SESSION['last_valid_captcha'] = true;",
          "",
          "[Added Lines]",
          "748:         $GLOBALS['cfg']['CaptchaLoginPrivateKey'] = '';",
          "749:         $GLOBALS['cfg']['CaptchaLoginPublicKey'] = '';",
          "",
          "---------------"
        ]
      }
    }
  ]
}