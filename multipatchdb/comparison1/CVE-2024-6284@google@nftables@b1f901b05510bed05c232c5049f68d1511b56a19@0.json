{
  "cve_id": "CVE-2024-6284",
  "cve_desc": "In  https://github.com/google/nftables \u00a0IP addresses were encoded in the wrong byte order,\u00a0resulting in an nftables configuration which does not work as intended (might block or not block the desired addresses).\n\nThis issue affects:\u00a0 https://pkg.go.dev/github.com/google/nftables@v0.1.0 \n\nThe bug was fixed in the next released version:\u00a0 https://pkg.go.dev/github.com/google/nftables@v0.2.0",
  "repo": "google/nftables",
  "patch_hash": "b1f901b05510bed05c232c5049f68d1511b56a19",
  "patch_info": {
    "commit_hash": "b1f901b05510bed05c232c5049f68d1511b56a19",
    "repo": "google/nftables",
    "commit_url": "https://github.com/google/nftables/commit/b1f901b05510bed05c232c5049f68d1511b56a19",
    "files": [
      "set.go"
    ],
    "message": "Implement set KeyByteOrder\n\nFixes https://github.com/google/nftables/issues/225\nIntroduced KeyByteOrder in sets which fills UDATA with endianess information",
    "before_after_code_files": [
      "set.go||set.go"
    ]
  },
  "patch_diff": {
    "set.go||set.go": [
      "File: set.go -> set.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "261:  Timeout       time.Duration",
      "262:  KeyType       SetDatatype",
      "263:  DataType      SetDatatype",
      "264: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "266:  KeyByteOrder binaryutil.ByteOrder",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "561:   tableInfo = append(tableInfo, netlink.Attribute{Type: unix.NLA_F_NESTED | unix.NFTA_SET_DESC, Data: concatBytes})",
      "562:  }",
      "564:   tableInfo = append(tableInfo,",
      "566:    netlink.Attribute{Type: unix.NFTA_SET_USERDATA, Data: []byte(\"\\x00\\x04\\x02\\x00\\x00\\x00\")})",
      "569:   tableInfo = append(tableInfo,",
      "570:    netlink.Attribute{Type: unix.NFTA_SET_USERDATA, Data: []byte(\"\\x00\\x04\\x01\\x00\\x00\\x00\")})",
      "",
      "[Removed Lines]",
      "563:  if s.Anonymous || s.Constant || s.Interval {",
      "567:  } else if !s.IsMap {",
      "",
      "[Added Lines]",
      "566:  if s.Anonymous || s.Constant || s.Interval || s.KeyByteOrder == binaryutil.BigEndian {",
      "570:  } else if s.KeyByteOrder == binaryutil.NativeEndian {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d746ecb0e494e7200180c3886fde9664d9100729",
      "candidate_info": {
        "commit_hash": "d746ecb0e494e7200180c3886fde9664d9100729",
        "repo": "google/nftables",
        "commit_url": "https://github.com/google/nftables/commit/d746ecb0e494e7200180c3886fde9664d9100729",
        "files": [
          "set.go"
        ],
        "message": "Implement set KeyByteOrder (#226)\n\nFixes https://github.com/google/nftables/issues/225\nIntroduced KeyByteOrder in sets which fills UDATA with endianess information",
        "before_after_code_files": [
          "set.go||set.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/google/nftables/pull/226"
        ],
        "olp_code_files": {
          "patch": [
            "set.go||set.go"
          ],
          "candidate": [
            "set.go||set.go"
          ]
        }
      },
      "candidate_diff": {
        "set.go||set.go": [
          "File: set.go -> set.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:  Timeout       time.Duration",
          "262:  KeyType       SetDatatype",
          "263:  DataType      SetDatatype",
          "264: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266:  KeyByteOrder binaryutil.ByteOrder",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "561:   tableInfo = append(tableInfo, netlink.Attribute{Type: unix.NLA_F_NESTED | unix.NFTA_SET_DESC, Data: concatBytes})",
          "562:  }",
          "564:   tableInfo = append(tableInfo,",
          "566:    netlink.Attribute{Type: unix.NFTA_SET_USERDATA, Data: []byte(\"\\x00\\x04\\x02\\x00\\x00\\x00\")})",
          "569:   tableInfo = append(tableInfo,",
          "570:    netlink.Attribute{Type: unix.NFTA_SET_USERDATA, Data: []byte(\"\\x00\\x04\\x01\\x00\\x00\\x00\")})",
          "",
          "[Removed Lines]",
          "563:  if s.Anonymous || s.Constant || s.Interval {",
          "567:  } else if !s.IsMap {",
          "",
          "[Added Lines]",
          "566:  if s.Anonymous || s.Constant || s.Interval || s.KeyByteOrder == binaryutil.BigEndian {",
          "570:  } else if s.KeyByteOrder == binaryutil.NativeEndian {",
          "",
          "---------------"
        ]
      }
    }
  ]
}