{
  "cve_id": "CVE-2017-3156",
  "cve_desc": "The OAuth2 Hawk and JOSE MAC Validation code in Apache CXF prior to 3.0.13 and 3.1.x prior to 3.1.10 is not using a constant time MAC signature comparison algorithm which may be exploited by sophisticated timing attacks.",
  "repo": "apache/cxf",
  "patch_hash": "1338469f7d25cfcda75b547c68bed95bd97903ac",
  "patch_info": {
    "commit_hash": "1338469f7d25cfcda75b547c68bed95bd97903ac",
    "repo": "apache/cxf",
    "commit_url": "https://github.com/apache/cxf/commit/1338469",
    "files": [
      "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
      "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
      "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
    ],
    "message": "Doing a better bytes comparison in some of JAXRS OAuth2/Jose code",
    "before_after_code_files": [
      "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
      "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
      "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
    ]
  },
  "patch_diff": {
    "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java": [
      "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.cxf.rs.security.jose.jwe;",
      "21: import java.security.spec.AlgorithmParameterSpec;",
      "24: import javax.crypto.spec.IvParameterSpec;",
      "",
      "[Removed Lines]",
      "22: import java.util.Arrays;",
      "",
      "[Added Lines]",
      "21: import java.security.MessageDigest;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56:                                                            jweDecryptionInput.getDecodedJsonHeaders());",
      "57:         macState.mac.update(jweDecryptionInput.getEncryptedContent());",
      "58:         byte[] expectedAuthTag = AesCbcHmacJweEncryption.signAndGetTag(macState);",
      "60:             LOG.warning(\"Invalid authentication tag\");",
      "61:             throw new JweException(JweException.Error.CONTENT_DECRYPTION_FAILURE);",
      "62:         }",
      "",
      "[Removed Lines]",
      "59:         if (!Arrays.equals(actualAuthTag, expectedAuthTag)) {",
      "",
      "[Added Lines]",
      "59:         if (!MessageDigest.isEqual(actualAuthTag, expectedAuthTag)) {",
      "",
      "---------------"
    ],
    "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java": [
      "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.cxf.rs.security.jose.jws;",
      "21: import java.security.spec.AlgorithmParameterSpec;",
      "23: import java.util.logging.Logger;",
      "25: import org.apache.cxf.common.logging.LogUtils;",
      "",
      "[Removed Lines]",
      "22: import java.util.Arrays;",
      "",
      "[Added Lines]",
      "21: import java.security.MessageDigest;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "53:     @Override",
      "54:     public boolean verify(JwsHeaders headers, String unsignedText, byte[] signature) {",
      "55:         byte[] expected = computeMac(headers, unsignedText);",
      "57:     }",
      "59:     private byte[] computeMac(JwsHeaders headers, String text) {",
      "",
      "[Removed Lines]",
      "56:         return Arrays.equals(expected, signature);",
      "",
      "[Added Lines]",
      "56:         return MessageDigest.isEqual(expected, signature);",
      "",
      "---------------"
    ],
    "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java": [
      "File: rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java -> rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.cxf.rs.security.oauth2.tokens.hawk;",
      "21: import java.net.URI;",
      "23: import java.util.Collections;",
      "24: import java.util.HashMap;",
      "25: import java.util.List;",
      "",
      "[Removed Lines]",
      "22: import java.util.Arrays;",
      "",
      "[Added Lines]",
      "22: import java.security.MessageDigest;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:             String clientMacString = schemeParams.get(OAuthConstants.HAWK_TOKEN_SIGNATURE);",
      "80:             byte[] clientMacData = Base64Utility.decode(clientMacString);",
      "82:             if (!validMac) {",
      "83:                 AuthorizationUtils.throwAuthorizationFailure(Collections",
      "84:                     .singleton(OAuthConstants.HAWK_AUTHORIZATION_SCHEME));",
      "",
      "[Removed Lines]",
      "81:             boolean validMac = Arrays.equals(serverMacData, clientMacData);",
      "",
      "[Added Lines]",
      "81:             boolean validMac = MessageDigest.isEqual(serverMacData, clientMacData);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "555843f9563ccfc2ca1afb2950aebb4505d7711b",
      "candidate_info": {
        "commit_hash": "555843f9563ccfc2ca1afb2950aebb4505d7711b",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/555843f",
        "files": [
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
        ],
        "message": "Doing a better bytes comparison in some of JAXRS OAuth2/Jose code",
        "before_after_code_files": [
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
            "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
          ],
          "candidate": [
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
            "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
          ]
        }
      },
      "candidate_diff": {
        "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java": [
          "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.jose.jwe;",
          "21: import java.security.spec.AlgorithmParameterSpec;",
          "24: import javax.crypto.spec.IvParameterSpec;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "21: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:                                                            jweDecryptionInput.getDecodedJsonHeaders());",
          "57:         macState.mac.update(jweDecryptionInput.getEncryptedContent());",
          "58:         byte[] expectedAuthTag = AesCbcHmacJweEncryption.signAndGetTag(macState);",
          "60:             LOG.warning(\"Invalid authentication tag\");",
          "61:             throw new JweException(JweException.Error.CONTENT_DECRYPTION_FAILURE);",
          "62:         }",
          "",
          "[Removed Lines]",
          "59:         if (!Arrays.equals(actualAuthTag, expectedAuthTag)) {",
          "",
          "[Added Lines]",
          "59:         if (!MessageDigest.isEqual(actualAuthTag, expectedAuthTag)) {",
          "",
          "---------------"
        ],
        "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java": [
          "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.jose.jws;",
          "21: import java.security.spec.AlgorithmParameterSpec;",
          "23: import java.util.logging.Logger;",
          "25: import org.apache.cxf.common.logging.LogUtils;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "21: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     @Override",
          "54:     public boolean verify(JwsHeaders headers, String unsignedText, byte[] signature) {",
          "55:         byte[] expected = computeMac(headers, unsignedText);",
          "57:     }",
          "59:     private byte[] computeMac(JwsHeaders headers, String text) {",
          "",
          "[Removed Lines]",
          "56:         return Arrays.equals(expected, signature);",
          "",
          "[Added Lines]",
          "56:         return MessageDigest.isEqual(expected, signature);",
          "",
          "---------------"
        ],
        "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java": [
          "File: rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java -> rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.oauth2.tokens.hawk;",
          "21: import java.net.URI;",
          "23: import java.util.Collections;",
          "24: import java.util.HashMap;",
          "25: import java.util.List;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "22: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:             String clientMacString = schemeParams.get(OAuthConstants.HAWK_TOKEN_SIGNATURE);",
          "80:             byte[] clientMacData = Base64Utility.decode(clientMacString);",
          "82:             if (!validMac) {",
          "83:                 AuthorizationUtils.throwAuthorizationFailure(Collections",
          "84:                     .singleton(OAuthConstants.HAWK_AUTHORIZATION_SCHEME));",
          "",
          "[Removed Lines]",
          "81:             boolean validMac = Arrays.equals(serverMacData, clientMacData);",
          "",
          "[Added Lines]",
          "81:             boolean validMac = MessageDigest.isEqual(serverMacData, clientMacData);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e66ce235ee5f8dbde467c8c23eeb622b072d0bf3",
      "candidate_info": {
        "commit_hash": "e66ce235ee5f8dbde467c8c23eeb622b072d0bf3",
        "repo": "apache/cxf",
        "commit_url": "https://github.com/apache/cxf/commit/e66ce235ee5f8dbde467c8c23eeb622b072d0bf3",
        "files": [
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
        ],
        "message": "Doing a better bytes comparison in some of JAXRS OAuth2/Jose code",
        "before_after_code_files": [
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
            "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
          ],
          "candidate": [
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
            "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
            "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java"
          ]
        }
      },
      "candidate_diff": {
        "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java": [
          "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jwe/AesCbcHmacJweDecryption.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.jose.jwe;",
          "21: import java.security.spec.AlgorithmParameterSpec;",
          "24: import javax.crypto.spec.IvParameterSpec;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "21: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:                                                            jweDecryptionInput.getDecodedJsonHeaders());",
          "57:         macState.mac.update(jweDecryptionInput.getEncryptedContent());",
          "58:         byte[] expectedAuthTag = AesCbcHmacJweEncryption.signAndGetTag(macState);",
          "60:             LOG.warning(\"Invalid authentication tag\");",
          "61:             throw new JweException(JweException.Error.CONTENT_DECRYPTION_FAILURE);",
          "62:         }",
          "",
          "[Removed Lines]",
          "59:         if (!Arrays.equals(actualAuthTag, expectedAuthTag)) {",
          "",
          "[Added Lines]",
          "59:         if (!MessageDigest.isEqual(actualAuthTag, expectedAuthTag)) {",
          "",
          "---------------"
        ],
        "rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java||rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java": [
          "File: rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java -> rt/rs/security/jose-parent/jose/src/main/java/org/apache/cxf/rs/security/jose/jws/HmacJwsSignatureVerifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.jose.jws;",
          "21: import java.security.spec.AlgorithmParameterSpec;",
          "23: import java.util.logging.Logger;",
          "25: import org.apache.cxf.common.logging.LogUtils;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "21: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     @Override",
          "54:     public boolean verify(JwsHeaders headers, String unsignedText, byte[] signature) {",
          "55:         byte[] expected = computeMac(headers, unsignedText);",
          "57:     }",
          "59:     private byte[] computeMac(JwsHeaders headers, String text) {",
          "",
          "[Removed Lines]",
          "56:         return Arrays.equals(expected, signature);",
          "",
          "[Added Lines]",
          "56:         return MessageDigest.isEqual(expected, signature);",
          "",
          "---------------"
        ],
        "rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java||rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java": [
          "File: rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java -> rt/rs/security/oauth-parent/oauth2/src/main/java/org/apache/cxf/rs/security/oauth2/tokens/hawk/AbstractHawkAccessTokenValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.cxf.rs.security.oauth2.tokens.hawk;",
          "21: import java.net.URI;",
          "23: import java.util.Collections;",
          "24: import java.util.HashMap;",
          "25: import java.util.List;",
          "",
          "[Removed Lines]",
          "22: import java.util.Arrays;",
          "",
          "[Added Lines]",
          "22: import java.security.MessageDigest;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:             String clientMacString = schemeParams.get(OAuthConstants.HAWK_TOKEN_SIGNATURE);",
          "80:             byte[] clientMacData = Base64Utility.decode(clientMacString);",
          "82:             if (!validMac) {",
          "83:                 AuthorizationUtils.throwAuthorizationFailure(Collections",
          "84:                     .singleton(OAuthConstants.HAWK_AUTHORIZATION_SCHEME));",
          "",
          "[Removed Lines]",
          "81:             boolean validMac = Arrays.equals(serverMacData, clientMacData);",
          "",
          "[Added Lines]",
          "81:             boolean validMac = MessageDigest.isEqual(serverMacData, clientMacData);",
          "",
          "---------------"
        ]
      }
    }
  ]
}