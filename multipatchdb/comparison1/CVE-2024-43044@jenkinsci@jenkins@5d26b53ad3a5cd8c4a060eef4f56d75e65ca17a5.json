{
  "cve_id": "CVE-2024-43044",
  "cve_desc": "Jenkins 2.470 and earlier, LTS 2.452.3 and earlier allows agent processes to read arbitrary files from the Jenkins controller file system by using the `ClassLoaderProxy#fetchJar` method in the Remoting library.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "5d26b53ad3a5cd8c4a060eef4f56d75e65ca17a5",
  "patch_info": {
    "commit_hash": "5d26b53ad3a5cd8c4a060eef4f56d75e65ca17a5",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/5d26b53ad3a5cd8c4a060eef4f56d75e65ca17a5",
    "files": [
      "core/src/main/java/hudson/PluginManager.java",
      "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
      "pom.xml",
      "test/pom.xml",
      "test/src/test/java/jenkins/security/Security3430Test.java"
    ],
    "message": "[SECURITY-3430]",
    "before_after_code_files": [
      "core/src/main/java/hudson/PluginManager.java||core/src/main/java/hudson/PluginManager.java",
      "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
      "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/PluginManager.java||core/src/main/java/hudson/PluginManager.java": [
      "File: core/src/main/java/hudson/PluginManager.java -> core/src/main/java/hudson/PluginManager.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "2418:             return \"classLoader \" +  getClass().getName();",
      "2419:         }",
      "2420:     }",
      "2422:     @SuppressFBWarnings(value = \"MS_SHOULD_BE_FINAL\", justification = \"for script console\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2422:         @SuppressFBWarnings(",
      "2423:                 value = \"DMI_COLLECTION_OF_URLS\",",
      "2424:                 justification = \"All URLs point to local files, so no DNS lookup.\")",
      "2425:         @Restricted(NoExternalUse.class)",
      "2426:         public boolean isPluginJar(URL jarUrl) {",
      "2427:             for (PluginWrapper plugin : activePlugins) {",
      "2428:                 if (plugin.classLoader instanceof URLClassLoader) {",
      "2429:                     if (Set.of(((URLClassLoader) plugin.classLoader).getURLs()).contains(jarUrl)) {",
      "2430:                         return true;",
      "2431:                     }",
      "2432:                 }",
      "2433:             }",
      "2434:             return false;",
      "2435:         }",
      "",
      "---------------"
    ],
    "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java": [
      "File: core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java -> core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: package jenkins.security.s2m;",
      "27: import edu.umd.cs.findbugs.annotations.Nullable;",
      "28: import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
      "29: import hudson.Extension;",
      "30: import hudson.PluginManager;",
      "31: import hudson.remoting.Channel;",
      "32: import hudson.remoting.ChannelBuilder;",
      "33: import hudson.remoting.JarURLValidator;",
      "34: import java.io.IOException;",
      "35: import java.net.URL;",
      "36: import java.net.URLClassLoader;",
      "37: import java.util.Set;",
      "38: import java.util.logging.Level;",
      "39: import java.util.logging.Logger;",
      "40: import jenkins.model.Jenkins;",
      "41: import jenkins.security.ChannelConfigurator;",
      "42: import jenkins.util.SystemProperties;",
      "43: import org.kohsuke.accmod.Restricted;",
      "44: import org.kohsuke.accmod.restrictions.NoExternalUse;",
      "46: @Restricted(NoExternalUse.class)",
      "47: @Deprecated",
      "48: @Extension",
      "49: public class JarURLValidatorImpl extends ChannelConfigurator implements JarURLValidator {",
      "51:     public static final Logger LOGGER = Logger.getLogger(JarURLValidatorImpl.class.getName());",
      "53:     @Override",
      "54:     public void onChannelBuilding(ChannelBuilder builder, @Nullable Object context) {",
      "55:         LOGGER.log(Level.CONFIG, () -> \"Setting up JarURLValidatorImpl for context: \" + context);",
      "56:         builder.withProperty(JarURLValidator.class, this);",
      "57:     }",
      "59:     @Override",
      "60:     public void validate(URL url) throws IOException {",
      "61:         final String rejectAllProp = JarURLValidatorImpl.class.getName() + \".REJECT_ALL\";",
      "62:         if (SystemProperties.getBoolean(rejectAllProp)) {",
      "63:             LOGGER.log(Level.FINE, () -> \"Rejecting URL due to configuration: \" + url);",
      "64:             throw new IOException(\"The system property '\" + rejectAllProp + \"' has been set, so all attempts by agents to load jars from the controller are rejected.\"",
      "65:                     + \" Update the agent.jar of the affected agent to a version released in August 2024 or later to prevent this error.\"); // TODO better version spec",
      "66:         }",
      "67:         final String allowAllProp = Channel.class.getName() + \".DISABLE_JAR_URL_VALIDATOR\";",
      "68:         if (SystemProperties.getBoolean(allowAllProp)) {",
      "69:             LOGGER.log(Level.FINE, () -> \"Allowing URL due to configuration: \" + url);",
      "70:             return;",
      "71:         }",
      "72:         if (!isAllowedJar(url)) {",
      "73:             LOGGER.log(Level.FINE, () -> \"Rejecting URL: \" + url);",
      "74:             throw new IOException(\"This URL does not point to a jar file allowed to be requested by agents: \" + url + \".\"",
      "75:                     + \" Update the agent.jar of the affected agent to a version released in August 2024 or later to prevent this error.\"",
      "76:             + \" Alternatively, set the system property '\" + allowAllProp + \"' to 'true' if all the code built by Jenkins is as trusted as an administrator.\");",
      "77:         } else {",
      "78:             LOGGER.log(Level.FINE, () -> \"Allowing URL: \" + url);",
      "79:         }",
      "80:     }",
      "81:     @SuppressFBWarnings(",
      "82:             value = \"DMI_COLLECTION_OF_URLS\",",
      "83:             justification = \"All URLs point to local files, so no DNS lookup.\")",
      "84:     private static boolean isAllowedJar(URL url) {",
      "85:         final ClassLoader classLoader = Jenkins.get().getPluginManager().uberClassLoader;",
      "86:         if (classLoader instanceof PluginManager.UberClassLoader uberClassLoader) {",
      "87:             if (uberClassLoader.isPluginJar(url)) {",
      "88:                 LOGGER.log(Level.FINER, () -> \"Determined to be plugin jar: \" + url);",
      "89:                 return true;",
      "90:             }",
      "91:         }",
      "93:         final ClassLoader coreClassLoader = Jenkins.class.getClassLoader();",
      "94:         if (coreClassLoader instanceof URLClassLoader urlClassLoader) {",
      "95:             if (Set.of(urlClassLoader.getURLs()).contains(url)) {",
      "96:                 LOGGER.log(Level.FINER, () -> \"Determined to be core jar: \" + url);",
      "97:                 return true;",
      "98:             }",
      "99:         }",
      "101:         LOGGER.log(Level.FINER, () -> \"Neither core nor plugin jar: \" + url);",
      "102:         return false;",
      "103:     }",
      "104: }",
      "",
      "---------------"
    ],
    "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java": [
      "File: test/src/test/java/jenkins/security/Security3430Test.java -> test/src/test/java/jenkins/security/Security3430Test.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package jenkins.security;",
      "3: import static org.hamcrest.MatcherAssert.assertThat;",
      "4: import static org.hamcrest.Matchers.containsString;",
      "5: import static org.hamcrest.Matchers.empty;",
      "6: import static org.hamcrest.Matchers.hasItem;",
      "7: import static org.hamcrest.Matchers.instanceOf;",
      "8: import static org.hamcrest.Matchers.is;",
      "9: import static org.hamcrest.Matchers.not;",
      "10: import static org.junit.Assert.assertFalse;",
      "11: import static org.junit.Assert.assertNotNull;",
      "12: import static org.junit.Assert.assertThrows;",
      "13: import static org.junit.Assert.assertTrue;",
      "15: import hudson.ExtensionList;",
      "16: import hudson.model.Computer;",
      "17: import hudson.remoting.Channel;",
      "18: import hudson.remoting.Launcher;",
      "19: import hudson.slaves.SlaveComputer;",
      "20: import hudson.util.RingBufferLogHandler;",
      "21: import java.io.File;",
      "22: import java.io.IOException;",
      "23: import java.lang.reflect.Field;",
      "24: import java.lang.reflect.InvocationTargetException;",
      "25: import java.lang.reflect.Method;",
      "26: import java.net.URL;",
      "27: import java.nio.charset.StandardCharsets;",
      "28: import java.security.Security;",
      "29: import java.util.List;",
      "30: import java.util.logging.Level;",
      "31: import java.util.logging.LogRecord;",
      "32: import java.util.logging.Logger;",
      "33: import jenkins.bouncycastle.api.InstallBouncyCastleJCAProvider;",
      "34: import jenkins.security.s2m.JarURLValidatorImpl;",
      "35: import jenkins.slaves.RemotingVersionInfo;",
      "36: import org.apache.commons.io.FileUtils;",
      "37: import org.apache.commons.io.IOUtils;",
      "38: import org.hamcrest.Description;",
      "39: import org.hamcrest.Matcher;",
      "40: import org.hamcrest.TypeSafeMatcher;",
      "41: import org.junit.Rule;",
      "42: import org.junit.Test;",
      "43: import org.jvnet.hudson.test.InboundAgentRule;",
      "44: import org.jvnet.hudson.test.JenkinsRule;",
      "45: import org.jvnet.hudson.test.RealJenkinsRule;",
      "46: import org.kohsuke.args4j.Argument;",
      "47: import org.kohsuke.stapler.Stapler;",
      "49: public class Security3430Test {",
      "50:     @Rule",
      "51:     public RealJenkinsRule jj = new RealJenkinsRule().withLogger(JarURLValidatorImpl.class, Level.FINEST);",
      "53:     @Rule",
      "54:     public InboundAgentRule agents = new InboundAgentRule();",
      "56:     @Test",
      "57:     public void runWithOldestSupportedAgentJar() throws Throwable {",
      "58:         runWithRemoting(RemotingVersionInfo.getMinimumSupportedVersion().toString(), \"/old-remoting/remoting-minimum-supported.jar\", true);",
      "59:     }",
      "61:     @Test",
      "62:     public void runWithPreviousAgentJar() throws Throwable {",
      "63:         runWithRemoting(\"3256.v88a_f6e922152\", \"/old-remoting/remoting-before-SECURITY-3430-fix.jar\", true);",
      "64:     }",
      "66:     @Test",
      "67:     public void runWithCurrentAgentJar() throws Throwable {",
      "68:         runWithRemoting(null, null, false);",
      "69:     }",
      "71:     private void runWithRemoting(String expectedRemotingVersion, String remotingResourcePath, boolean requestingJarFromAgent) throws Throwable {",
      "72:         if (expectedRemotingVersion != null) {",
      "73:             FileUtils.copyURLToFile(Security3430Test.class.getResource(remotingResourcePath), new File(jj.getHome(), \"agent.jar\"));",
      "74:         }",
      "76:         jj.startJenkins();",
      "77:         final String agentName = \"agent1\";",
      "78:         try {",
      "79:             agents.createAgent(jj, InboundAgentRule.Options.newBuilder().name(agentName).build());",
      "80:             jj.runRemotely(Security3430Test::_run, agentName, expectedRemotingVersion, requestingJarFromAgent, true);",
      "81:         } finally {",
      "82:             agents.stop(jj, agentName);",
      "83:         }",
      "84:         jj.runRemotely(Security3430Test::disableJarURLValidatorImpl);",
      "85:         final String agentName2 = \"agent2\";",
      "86:         try {",
      "87:             agents.createAgent(jj, InboundAgentRule.Options.newBuilder().name(agentName2).build());",
      "88:             jj.runRemotely(Security3430Test::_run, agentName2, expectedRemotingVersion, requestingJarFromAgent, false);",
      "89:         } finally {",
      "90:             agents.stop(jj, agentName2);",
      "91:         }",
      "92:     }",
      "95:     private static void disableJarURLValidatorImpl(JenkinsRule j) {",
      "96:         assertTrue(ExtensionList.lookup(ChannelConfigurator.class).remove(ExtensionList.lookupSingleton(JarURLValidatorImpl.class)));",
      "97:     }",
      "106:     private static void _run(JenkinsRule j, String agentName, String expectedRemotingVersion, Boolean requestingJarFromAgent, Boolean hasJenkinsJarURLValidator) throws Throwable {",
      "107:         final RingBufferLogHandler logHandler = new RingBufferLogHandler(50);",
      "108:         Logger.getLogger(JarURLValidatorImpl.class.getName()).addHandler(logHandler);",
      "109:         final List<LogRecord> logRecords = logHandler.getView();",
      "111:         final Computer computer = j.jenkins.getComputer(agentName);",
      "112:         assertThat(computer, instanceOf(SlaveComputer.class));",
      "113:         SlaveComputer agent = (SlaveComputer) computer;",
      "114:         final Channel channel = agent.getChannel();",
      "115:         if (expectedRemotingVersion != null) {",
      "116:             final String result = channel.call(new AgentVersionCallable());",
      "117:             assertThat(result, is(expectedRemotingVersion));",
      "118:         }",
      "120:         logHandler.clear();",
      "122:         { // regular behavior",
      "123:             if (hasJenkinsJarURLValidator) {",
      "125:                 assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
      "126:                 if (requestingJarFromAgent) {",
      "127:                     assertThat(logRecords, hasItem(logMessageContainsString(\"Allowing URL: file:/\")));",
      "128:                 } else {",
      "129:                     assertThat(logRecords, is(empty()));",
      "130:                 }",
      "132:                 logHandler.clear();",
      "133:                 assertFalse(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
      "134:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "135:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL\"))));",
      "136:             } else {",
      "138:                 if (requestingJarFromAgent) {",
      "139:                     final IOException ex = assertThrows(IOException.class, () -> channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
      "140:                     assertThat(ex.getMessage(), containsString(\"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
      "141:                 } else {",
      "142:                     assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
      "143:                     assertThat(logRecords, is(empty()));",
      "144:                 }",
      "145:             }",
      "146:         }",
      "148:         logHandler.clear();",
      "150:         if (hasJenkinsJarURLValidator) { // Start rejecting everything; only applies to JarURLValidatorImpl",
      "151:             System.setProperty(JarURLValidatorImpl.class.getName() + \".REJECT_ALL\", \"true\");",
      "154:             assertFalse(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
      "155:             assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "156:             assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL\"))));",
      "158:             logHandler.clear();",
      "161:             if (requestingJarFromAgent) {",
      "162:                 final IOException ioException = assertThrows(IOException.class, () -> channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Argument.class));",
      "163:                 assertThat(ioException.getMessage(), containsString(\"all attempts by agents to load jars from the controller are rejected\"));",
      "164:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "165:                 assertThat(logRecords, hasItem(logMessageContainsString(\"Rejecting URL due to configuration: \")));",
      "166:             } else {",
      "167:                 assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, org.kohsuke.args4j.Argument.class));",
      "168:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "169:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL\"))));",
      "170:             }",
      "171:         }",
      "173:         logHandler.clear();",
      "175:         if (hasJenkinsJarURLValidator) { // Disable block, only applies to JarURLValidatorImpl",
      "176:             System.clearProperty(JarURLValidatorImpl.class.getName() + \".REJECT_ALL\");",
      "177:             if (requestingJarFromAgent) {",
      "179:                 assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, org.kohsuke.args4j.Argument.class));",
      "180:                 assertThat(logRecords, hasItem(logMessageContainsString(\"Allowing URL: file:/\")));",
      "181:             } else {",
      "183:                 assertFalse(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, org.kohsuke.args4j.Argument.class));",
      "184:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "185:                 assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL\"))));",
      "186:             }",
      "187:             assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL due to configuration: \"))));",
      "188:         }",
      "190:         logHandler.clear();",
      "192:         if (hasJenkinsJarURLValidator || !requestingJarFromAgent) { // prepare bouncycastle-api",
      "193:             assertTrue(j.jenkins.getPluginManager().getPlugin(\"bouncycastle-api\").isActive());",
      "194:             InstallBouncyCastleJCAProvider.on(channel);",
      "195:             channel.call(new ConfirmBouncyCastleLibrary());",
      "196:         }",
      "198:         logHandler.clear();",
      "200:         { // Exploitation tests",
      "201:             final URL secretKeyFile = new File(j.jenkins.getRootDir(), \"secret.key\").toURI().toURL();",
      "202:             final String expectedContent = IOUtils.toString(secretKeyFile, StandardCharsets.UTF_8);",
      "203:             { // Protection is effective when agents request non-jar files:",
      "204:                 final InvocationTargetException itex = assertThrows(InvocationTargetException.class, () -> channel.call(new Exploit(secretKeyFile, expectedContent)));",
      "205:                 assertThat(itex.getCause(), instanceOf(IOException.class));",
      "206:                 if (hasJenkinsJarURLValidator) {",
      "207:                     assertThat(itex.getCause().getMessage(), containsString(\"This URL does not point to a jar file allowed to be requested by agents\"));",
      "208:                     assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
      "209:                     assertThat(logRecords, hasItem(logMessageContainsString(\"Rejecting URL: \")));",
      "210:                 } else {",
      "211:                     assertThat(itex.getCause().getMessage(), containsString(\"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
      "212:                 }",
      "213:             }",
      "215:             logHandler.clear();",
      "217:             { // Disable protection and non-jar files can be accessed:",
      "218:                 System.setProperty(Channel.class.getName() + \".DISABLE_JAR_URL_VALIDATOR\", \"true\");",
      "219:                 channel.call(new Exploit(secretKeyFile, expectedContent));",
      "220:                 if (hasJenkinsJarURLValidator) {",
      "221:                     assertThat(logRecords, hasItem(logMessageContainsString(\"Allowing URL due to configuration\")));",
      "222:                     assertThat(logRecords, not(hasItem(logMessageContainsString(\"Rejecting URL\"))));",
      "223:                 }",
      "224:                 System.clearProperty(Channel.class.getName() + \".DISABLE_JAR_URL_VALIDATOR\");",
      "225:             }",
      "226:         }",
      "227:     }",
      "229:     private static class AgentVersionCallable extends MasterToSlaveCallable<String, Exception> {",
      "230:         @Override",
      "231:         public String call() throws Exception {",
      "232:             return Launcher.VERSION;",
      "233:         }",
      "234:     }",
      "236:     private static class ConfirmBouncyCastleLibrary extends MasterToSlaveCallable<Void, Exception> {",
      "237:         @Override",
      "238:         public Void call() throws Exception {",
      "239:             assertNotNull(Security.getProvider(\"BC\"));",
      "240:             return null;",
      "241:         }",
      "242:     }",
      "244:     private static class Exploit extends MasterToSlaveCallable<Void, Exception> {",
      "245:         private final URL controllerFilePath;",
      "246:         private final String expectedContent;",
      "248:         public Exploit(URL controllerFilePath, String expectedContent) {",
      "249:             this.controllerFilePath = controllerFilePath;",
      "250:             this.expectedContent = expectedContent;",
      "251:         }",
      "252:         @Override",
      "253:         public Void call() throws Exception {",
      "254:             final ClassLoader ccl = Thread.currentThread().getContextClassLoader();",
      "255:             System.err.println(ccl.getClass().getName());",
      "256:             final Field classLoaderProxyField = ccl.getClass().getDeclaredField(\"proxy\");",
      "257:             classLoaderProxyField.setAccessible(true);",
      "258:             final Object theProxy = classLoaderProxyField.get(ccl);",
      "259:             final Method fetchJarMethod = theProxy.getClass().getDeclaredMethod(\"fetchJar\", URL.class);",
      "260:             fetchJarMethod.setAccessible(true);",
      "261:             final byte[] fetchJarResponse = (byte[]) fetchJarMethod.invoke(theProxy, controllerFilePath);",
      "262:             assertThat(new String(fetchJarResponse, StandardCharsets.UTF_8), is(expectedContent));",
      "263:             return null;",
      "264:         }",
      "265:     }",
      "268:     private static Matcher<LogRecord> logMessageContainsString(String needle) {",
      "269:         return new LogMessageContainsString(containsString(needle));",
      "270:     }",
      "272:     private static final class LogMessageContainsString extends TypeSafeMatcher<LogRecord> {",
      "273:         private final Matcher<String> stringMatcher;",
      "275:         public LogMessageContainsString(Matcher<String> stringMatcher) {",
      "276:             this.stringMatcher = stringMatcher;",
      "277:         }",
      "279:         @Override",
      "280:         protected boolean matchesSafely(LogRecord item) {",
      "281:             return stringMatcher.matches(item.getMessage());",
      "282:         }",
      "284:         @Override",
      "285:         public void describeTo(Description description) {",
      "286:             description.appendText(\"a LogRecord with a message matching \");",
      "287:             stringMatcher.describeTo(description);",
      "288:         }",
      "290:         @Override",
      "291:         protected void describeMismatchSafely(LogRecord item, Description mismatchDescription) {",
      "292:             mismatchDescription.appendText(\"a LogRecord with the message: \");",
      "293:             mismatchDescription.appendText(item.getMessage());",
      "294:         }",
      "295:     }",
      "296: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f5ccd65e4e3db8cefe53053e3d9cf514d3e28d41",
      "candidate_info": {
        "commit_hash": "f5ccd65e4e3db8cefe53053e3d9cf514d3e28d41",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f5ccd65e4e3db8cefe53053e3d9cf514d3e28d41",
        "files": [
          "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java"
        ],
        "message": "More test fixups related to JTH change (#9767)",
        "before_after_code_files": [
          "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java||test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ],
          "candidate": [
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java||test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java": [
          "File: test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java -> test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package hudson.slaves;",
          "27: import static org.hamcrest.MatcherAssert.assertThat;",
          "29: import static org.hamcrest.Matchers.is;",
          "31: import hudson.ExtensionList;",
          "",
          "[Removed Lines]",
          "28: import static org.hamcrest.Matchers.endsWith;",
          "",
          "[Added Lines]",
          "28: import static org.hamcrest.Matchers.hasKey;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "104:             p.setAssignedNode(agent);",
          "105:             FreeStyleBuild b = r.buildAndAssertSuccess(p);",
          "106:             if (webSocket) {",
          "108:             }",
          "109:             System.err.println(JenkinsRule.getLog(b));",
          "110:         }",
          "",
          "[Removed Lines]",
          "107:                 assertThat(agent.toComputer().getSystemProperties().get(\"java.class.path\").toString(), endsWith(\"agent.jar\"));",
          "",
          "[Added Lines]",
          "107:                 assertThat(agent.toComputer().getSystemProperties(), hasKey(\"os.name\"));",
          "",
          "---------------"
        ],
        "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java": [
          "File: test/src/test/java/jenkins/security/Security3430Test.java -> test/src/test/java/jenkins/security/Security3430Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.hamcrest.Description;",
          "39: import org.hamcrest.Matcher;",
          "40: import org.hamcrest.TypeSafeMatcher;",
          "42: import org.junit.Rule;",
          "43: import org.junit.Test;",
          "44: import org.jvnet.hudson.test.InboundAgentRule;",
          "45: import org.jvnet.hudson.test.JenkinsRule;",
          "46: import org.jvnet.hudson.test.RealJenkinsRule;",
          "",
          "[Removed Lines]",
          "41: import org.junit.Ignore;",
          "",
          "[Added Lines]",
          "43: import org.junit.rules.TemporaryFolder;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:     @Rule",
          "55:     public InboundAgentRule agents = new InboundAgentRule();",
          "57:     @Test",
          "58:     public void runWithOldestSupportedAgentJar() throws Throwable {",
          "59:         runWithRemoting(RemotingVersionInfo.getMinimumSupportedVersion().toString(), \"/old-remoting/remoting-minimum-supported.jar\", true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:     @Rule",
          "58:     public TemporaryFolder tmp = new TemporaryFolder();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:         runWithRemoting(\"3256.v88a_f6e922152\", \"/old-remoting/remoting-before-SECURITY-3430-fix.jar\", true);",
          "65:     }",
          "68:     @Test",
          "69:     public void runWithCurrentAgentJar() throws Throwable {",
          "71:     }",
          "73:     private void runWithRemoting(String expectedRemotingVersion, String remotingResourcePath, boolean requestingJarFromAgent) throws Throwable {",
          "79:         jj.startJenkins();",
          "80:         final String agentName = \"agent1\";",
          "81:         try {",
          "83:             jj.runRemotely(Security3430Test::_run, agentName, expectedRemotingVersion, requestingJarFromAgent, true);",
          "84:         } finally {",
          "85:             agents.stop(jj, agentName);",
          "",
          "[Removed Lines]",
          "67:     @Ignore(\"TODO Expected: is an empty collection; but: <[Allowing URL: file:/\u2026/test/target/webroot\u2026/WEB-INF/lib/stapler-1903.v994a_db_314d58.jar, Determined to be core jar: file:/\u2026/test/target/webroot\u2026/WEB-INF/lib/stapler-1903.v994a_db_314d58.jar]>\")",
          "70:         runWithRemoting(null, null, false);",
          "74:         if (expectedRemotingVersion != null) {",
          "76:             FileUtils.copyURLToFile(Security3430Test.class.getResource(remotingResourcePath), new File(System.getProperty(\"java.io.tmpdir\"), \"agent.jar\"));",
          "77:         }",
          "82:             agents.createAgent(jj, InboundAgentRule.Options.newBuilder().name(agentName).build());",
          "",
          "[Added Lines]",
          "72:         runWithRemoting(Launcher.VERSION, null, false);",
          "79:             createAgent(agentName, remotingResourcePath);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "87:         jj.runRemotely(Security3430Test::disableJarURLValidatorImpl);",
          "88:         final String agentName2 = \"agent2\";",
          "89:         try {",
          "91:             jj.runRemotely(Security3430Test::_run, agentName2, expectedRemotingVersion, requestingJarFromAgent, false);",
          "92:         } finally {",
          "93:             agents.stop(jj, agentName2);",
          "94:         }",
          "95:     }",
          "98:     private static void disableJarURLValidatorImpl(JenkinsRule j) {",
          "99:         assertTrue(ExtensionList.lookup(ChannelConfigurator.class).remove(ExtensionList.lookupSingleton(JarURLValidatorImpl.class)));",
          "",
          "[Removed Lines]",
          "90:             agents.createAgent(jj, InboundAgentRule.Options.newBuilder().name(agentName2).build());",
          "",
          "[Added Lines]",
          "87:             createAgent(agentName2, remotingResourcePath);",
          "94:     private void createAgent(String name, String remotingResourcePath) throws Throwable {",
          "95:         if (remotingResourcePath != null) {",
          "96:             var jar = tmp.newFile(name + \".jar\");",
          "97:             FileUtils.copyURLToFile(Security3430Test.class.getResource(remotingResourcePath), jar);",
          "100:             var opts = InboundAgentRule.Options.newBuilder().name(name).skipStart().build();",
          "101:             agents.createAgent(jj, opts);",
          "102:             agents.start(new InboundAgentRule.AgentArguments(jj.getUrl() + \"computer/\" + name + \"/slave-agent.jnlp\", jar, jj.runRemotely(Security3430Test::getJnlpMac, name), 1, List.of()), opts);",
          "103:         } else {",
          "104:             agents.createAgent(jj, InboundAgentRule.Options.newBuilder().name(name).build());",
          "105:         }",
          "106:     }",
          "108:     private static String getJnlpMac(JenkinsRule r, String name) throws Throwable {",
          "109:         return ((SlaveComputer) r.jenkins.getComputer(name)).getJnlpMac();",
          "110:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "114:         final Computer computer = j.jenkins.getComputer(agentName);",
          "115:         assertThat(computer, instanceOf(SlaveComputer.class));",
          "116:         SlaveComputer agent = (SlaveComputer) computer;",
          "117:         final Channel channel = agent.getChannel();",
          "118:         if (expectedRemotingVersion != null) {",
          "119:             final String result = channel.call(new AgentVersionCallable());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:         j.waitOnline(agent.getNode());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ae2e780338b705c07e28745b64a4954d89880f53",
      "candidate_info": {
        "commit_hash": "ae2e780338b705c07e28745b64a4954d89880f53",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ae2e780338b705c07e28745b64a4954d89880f53",
        "files": [
          "test/pom.xml",
          "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java"
        ],
        "message": "Test regressions after JTH bump (#9762)",
        "before_after_code_files": [
          "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java||test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ],
          "candidate": [
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ]
        }
      },
      "candidate_diff": {
        "test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java||test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java": [
          "File: test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java -> test/src/test/java/hudson/slaves/JNLPLauncherRealTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package hudson.slaves;",
          "27: import static org.hamcrest.MatcherAssert.assertThat;",
          "28: import static org.hamcrest.Matchers.is;",
          "30: import hudson.ExtensionList;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import static org.hamcrest.Matchers.endsWith;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: import hudson.model.FreeStyleBuild;",
          "33: import hudson.model.FreeStyleProject;",
          "34: import hudson.model.Slave;",
          "36: import jenkins.agents.WebSocketAgentsTest;",
          "37: import jenkins.slaves.JnlpSlaveAgentProtocol4;",
          "38: import org.junit.Rule;",
          "",
          "[Removed Lines]",
          "35: import java.io.File;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:             p.setAssignedNode(agent);",
          "105:             FreeStyleBuild b = r.buildAndAssertSuccess(p);",
          "106:             if (webSocket) {",
          "108:             }",
          "109:             System.err.println(JenkinsRule.getLog(b));",
          "110:         }",
          "",
          "[Removed Lines]",
          "107:                 assertThat(agent.toComputer().getSystemProperties().get(\"java.class.path\"), is(new File(r.jenkins.root, \"agent.jar\").getAbsolutePath()));",
          "",
          "[Added Lines]",
          "107:                 assertThat(agent.toComputer().getSystemProperties().get(\"java.class.path\").toString(), endsWith(\"agent.jar\"));",
          "",
          "---------------"
        ],
        "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java": [
          "File: test/src/test/java/jenkins/security/Security3430Test.java -> test/src/test/java/jenkins/security/Security3430Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.hamcrest.Description;",
          "39: import org.hamcrest.Matcher;",
          "40: import org.hamcrest.TypeSafeMatcher;",
          "41: import org.junit.Rule;",
          "42: import org.junit.Test;",
          "43: import org.jvnet.hudson.test.InboundAgentRule;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import org.junit.Ignore;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:         runWithRemoting(\"3256.v88a_f6e922152\", \"/old-remoting/remoting-before-SECURITY-3430-fix.jar\", true);",
          "64:     }",
          "66:     @Test",
          "67:     public void runWithCurrentAgentJar() throws Throwable {",
          "68:         runWithRemoting(null, null, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     @Ignore(\"TODO Expected: is an empty collection; but: <[Allowing URL: file:/\u2026/test/target/webroot\u2026/WEB-INF/lib/stapler-1903.v994a_db_314d58.jar, Determined to be core jar: file:/\u2026/test/target/webroot\u2026/WEB-INF/lib/stapler-1903.v994a_db_314d58.jar]>\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:     private void runWithRemoting(String expectedRemotingVersion, String remotingResourcePath, boolean requestingJarFromAgent) throws Throwable {",
          "72:         if (expectedRemotingVersion != null) {",
          "74:         }",
          "76:         jj.startJenkins();",
          "",
          "[Removed Lines]",
          "73:             FileUtils.copyURLToFile(Security3430Test.class.getResource(remotingResourcePath), new File(jj.getHome(), \"agent.jar\"));",
          "",
          "[Added Lines]",
          "76:             FileUtils.copyURLToFile(Security3430Test.class.getResource(remotingResourcePath), new File(System.getProperty(\"java.io.tmpdir\"), \"agent.jar\"));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126:                 if (requestingJarFromAgent) {",
          "127:                     assertThat(logRecords, hasItem(logMessageContainsString(\"Allowing URL: file:/\")));",
          "128:                 } else {",
          "130:                 }",
          "132:                 logHandler.clear();",
          "",
          "[Removed Lines]",
          "129:                     assertThat(logRecords, is(empty()));",
          "",
          "[Added Lines]",
          "132:                     assertThat(logRecords.stream().map(LogRecord::getMessage).toList(), is(empty()));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "140:                     assertThat(ex.getMessage(), containsString(\"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
          "141:                 } else {",
          "142:                     assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
          "144:                 }",
          "145:             }",
          "146:         }",
          "",
          "[Removed Lines]",
          "143:                     assertThat(logRecords, is(empty()));",
          "",
          "[Added Lines]",
          "146:                     assertThat(logRecords.stream().map(LogRecord::getMessage).toList(), is(empty()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6c5f6f6a57c36d0686cac2a5efc0d91b30e1953",
      "candidate_info": {
        "commit_hash": "f6c5f6f6a57c36d0686cac2a5efc0d91b30e1953",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f6c5f6f6a57c36d0686cac2a5efc0d91b30e1953",
        "files": [
          "cli/src/main/java/hudson/cli/CLI.java",
          "core/src/main/java/hudson/ClassicPluginStrategy.java",
          "core/src/main/java/hudson/Launcher.java",
          "core/src/main/java/hudson/model/ComputerSet.java",
          "core/src/main/java/hudson/model/Job.java",
          "core/src/main/java/hudson/model/UserPropertyDescriptor.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java",
          "core/src/main/java/hudson/util/RobustReflectionConverter.java",
          "core/src/main/java/jenkins/agents/IOfflineCause.java",
          "core/src/main/java/jenkins/model/IComputer.java",
          "core/src/main/java/jenkins/model/Nodes.java",
          "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
          "core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java",
          "pom.xml",
          "test/src/test/java/hudson/model/UserPropertyTest.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java",
          "test/src/test/java/hudson/util/FormFieldValidatorTest.java",
          "test/src/test/java/jenkins/model/NodesTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java"
        ],
        "message": "Re-enable Checkstyle",
        "before_after_code_files": [
          "cli/src/main/java/hudson/cli/CLI.java||cli/src/main/java/hudson/cli/CLI.java",
          "core/src/main/java/hudson/ClassicPluginStrategy.java||core/src/main/java/hudson/ClassicPluginStrategy.java",
          "core/src/main/java/hudson/Launcher.java||core/src/main/java/hudson/Launcher.java",
          "core/src/main/java/hudson/model/ComputerSet.java||core/src/main/java/hudson/model/ComputerSet.java",
          "core/src/main/java/hudson/model/Job.java||core/src/main/java/hudson/model/Job.java",
          "core/src/main/java/hudson/model/UserPropertyDescriptor.java||core/src/main/java/hudson/model/UserPropertyDescriptor.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java",
          "core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java",
          "core/src/main/java/hudson/util/RobustReflectionConverter.java||core/src/main/java/hudson/util/RobustReflectionConverter.java",
          "core/src/main/java/jenkins/agents/IOfflineCause.java||core/src/main/java/jenkins/agents/IOfflineCause.java",
          "core/src/main/java/jenkins/model/IComputer.java||core/src/main/java/jenkins/model/IComputer.java",
          "core/src/main/java/jenkins/model/Nodes.java||core/src/main/java/jenkins/model/Nodes.java",
          "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
          "core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java||core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java",
          "test/src/test/java/hudson/model/UserPropertyTest.java||test/src/test/java/hudson/model/UserPropertyTest.java",
          "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java",
          "test/src/test/java/hudson/util/FormFieldValidatorTest.java||test/src/test/java/hudson/util/FormFieldValidatorTest.java",
          "test/src/test/java/jenkins/model/NodesTest.java||test/src/test/java/jenkins/model/NodesTest.java",
          "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ],
          "candidate": [
            "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java",
            "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java"
          ]
        }
      },
      "candidate_diff": {
        "cli/src/main/java/hudson/cli/CLI.java||cli/src/main/java/hudson/cli/CLI.java": [
          "File: cli/src/main/java/hudson/cli/CLI.java -> cli/src/main/java/hudson/cli/CLI.java"
        ],
        "core/src/main/java/hudson/ClassicPluginStrategy.java||core/src/main/java/hudson/ClassicPluginStrategy.java": [
          "File: core/src/main/java/hudson/ClassicPluginStrategy.java -> core/src/main/java/hudson/ClassicPluginStrategy.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:     protected ClassLoader createClassLoader(List<File> paths, ClassLoader parent, Attributes atts) throws IOException {",
          "285:         return createClassLoader(\"unidentified-\" + UUID.randomUUID(), paths, parent, atts);",
          "",
          "[Removed Lines]",
          "282:     @Deprecated(since=\"2.459\")",
          "",
          "[Added Lines]",
          "282:     @Deprecated(since = \"2.459\")",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/Launcher.java||core/src/main/java/hudson/Launcher.java": [
          "File: core/src/main/java/hudson/Launcher.java -> core/src/main/java/hudson/Launcher.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1115:             final String workDir = psPwd == null ? null : psPwd.getRemote();",
          "1117:             try {",
          "1120:                 envVarsFilterRuleWrapper = null;",
          "1121:                 return new ProcImpl(getChannel().call(remote));",
          "",
          "[Removed Lines]",
          "1118:                 RemoteLaunchCallable remote = new RemoteLaunchCallable(ps.commands, ps.masks, ps.envs, in, ps.reverseStdin, out, ps.reverseStdout, err, ps.reverseStderr, ps.quiet, workDir, listener, ps.stdoutListener, envVarsFilterRuleWrapper);",
          "",
          "[Added Lines]",
          "1118:                 RemoteLaunchCallable remote = new RemoteLaunchCallable(",
          "1119:                         ps.commands,",
          "1120:                         ps.masks,",
          "1121:                         ps.envs,",
          "1122:                         in,",
          "1123:                         ps.reverseStdin,",
          "1124:                         out,",
          "1125:                         ps.reverseStdout,",
          "1126:                         err,",
          "1127:                         ps.reverseStderr,",
          "1128:                         ps.quiet,",
          "1129:                         workDir,",
          "1130:                         listener,",
          "1131:                         ps.stdoutListener,",
          "1132:                         envVarsFilterRuleWrapper);",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/ComputerSet.java||core/src/main/java/hudson/model/ComputerSet.java": [
          "File: core/src/main/java/hudson/model/ComputerSet.java -> core/src/main/java/hudson/model/ComputerSet.java"
        ],
        "core/src/main/java/hudson/model/Job.java||core/src/main/java/hudson/model/Job.java": [
          "File: core/src/main/java/hudson/model/Job.java -> core/src/main/java/hudson/model/Job.java"
        ],
        "core/src/main/java/hudson/model/UserPropertyDescriptor.java||core/src/main/java/hudson/model/UserPropertyDescriptor.java": [
          "File: core/src/main/java/hudson/model/UserPropertyDescriptor.java -> core/src/main/java/hudson/model/UserPropertyDescriptor.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategory.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAccountAction.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategoryAppearanceAction.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategoryExperimentalAction.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategoryPreferencesAction.java"
        ],
        "core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java||core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java": [
          "File: core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java -> core/src/main/java/hudson/model/userproperty/UserPropertyCategorySecurityAction.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import edu.umd.cs.findbugs.annotations.NonNull;",
          "28: import hudson.Extension;",
          "",
          "[Removed Lines]",
          "24: package hudson.model.userproperty;",
          "",
          "[Added Lines]",
          "25: package hudson.model.userproperty;",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/util/RobustReflectionConverter.java||core/src/main/java/hudson/util/RobustReflectionConverter.java": [
          "File: core/src/main/java/hudson/util/RobustReflectionConverter.java -> core/src/main/java/hudson/util/RobustReflectionConverter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "464:         return context.convertAnother(result, type, converter);",
          "465:     }",
          "468:         String fieldName = mapper.getFieldNameForItemTypeAndName(context.getRequiredType(), value.getClass(), itemFieldName);",
          "469:         if (fieldName != null) {",
          "470:             Collection collection = implicitCollections.get(fieldName);",
          "",
          "[Removed Lines]",
          "467:     private void writeValueToImplicitCollection(HierarchicalStreamReader reader, UnmarshallingContext context, Object value, Map<String, Collection<Object>> implicitCollections, Map<String, Class<?>> implicitCollectionElementTypes, Object result, String itemFieldName) {",
          "",
          "[Added Lines]",
          "467:     private void writeValueToImplicitCollection(",
          "468:             HierarchicalStreamReader reader,",
          "469:             UnmarshallingContext context,",
          "470:             Object value,",
          "471:             Map<String, Collection<Object>> implicitCollections,",
          "472:             Map<String, Class<?>> implicitCollectionElementTypes,",
          "473:             Object result,",
          "474:             String itemFieldName) {",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/agents/IOfflineCause.java||core/src/main/java/jenkins/agents/IOfflineCause.java": [
          "File: core/src/main/java/jenkins/agents/IOfflineCause.java -> core/src/main/java/jenkins/agents/IOfflineCause.java"
        ],
        "core/src/main/java/jenkins/model/IComputer.java||core/src/main/java/jenkins/model/IComputer.java": [
          "File: core/src/main/java/jenkins/model/IComputer.java -> core/src/main/java/jenkins/model/IComputer.java"
        ],
        "core/src/main/java/jenkins/model/Nodes.java||core/src/main/java/jenkins/model/Nodes.java": [
          "File: core/src/main/java/jenkins/model/Nodes.java -> core/src/main/java/jenkins/model/Nodes.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     public void setNodes(final @NonNull Collection<? extends Node> nodes) throws IOException {",
          "117:         Queue.withLock(() -> {",
          "118:             toRemove.putAll(Nodes.this.nodes);",
          "119:             for (var node : nodes) {",
          "",
          "[Removed Lines]",
          "116:         Map<String,Node> toRemove = new HashMap<>();",
          "",
          "[Added Lines]",
          "116:         Map<String, Node> toRemove = new HashMap<>();",
          "",
          "---------------"
        ],
        "core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java||core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java": [
          "File: core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java -> core/src/main/java/jenkins/security/s2m/JarURLValidatorImpl.java"
        ],
        "core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java||core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java": [
          "File: core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java -> core/src/test/java/jenkins/monitor/OperatingSystemEndOfLifeAdminMonitorTest.java"
        ],
        "test/src/test/java/hudson/model/UserPropertyTest.java||test/src/test/java/hudson/model/UserPropertyTest.java": [
          "File: test/src/test/java/hudson/model/UserPropertyTest.java -> test/src/test/java/hudson/model/UserPropertyTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:     public JenkinsRule j = new JenkinsRule();",
          "39:     public User configRoundtrip(User u) throws Exception {",
          "41:         return u;",
          "42:     }",
          "",
          "[Removed Lines]",
          "40:         submit(j.createWebClient().goTo(u.getUrl()+\"/account/\").getFormByName(\"config\"));",
          "",
          "[Added Lines]",
          "40:         submit(j.createWebClient().goTo(u.getUrl() + \"/account/\").getFormByName(\"config\"));",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java||test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java": [
          "File: test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java -> test/src/test/java/hudson/security/HudsonPrivateSecurityRealmFIPSTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:         User u1 =  securityRealm.createAccount(\"test\", \"aValidFipsPass\");",
          "166:         WebClient wc = j.createWebClient();",
          "169:         HtmlPage configurePage = wc.goTo(u1.getUrl() + \"/security/\");",
          "170:         HtmlPasswordInput password1 = configurePage.getElementByName(\"user.password\");",
          "",
          "[Removed Lines]",
          "167:         wc.login(\"test\",\"aValidFipsPass\");",
          "",
          "[Added Lines]",
          "167:         wc.login(\"test\", \"aValidFipsPass\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:         WebClient wc = j.createWebClient();",
          "197:         HtmlPage configurePage = wc.goTo(u1.getUrl() + \"/security/\");",
          "198:         HtmlPasswordInput password1 = configurePage.getElementByName(\"user.password\");",
          "",
          "[Removed Lines]",
          "195:         wc.login(\"test\",\"aValidFipsPass\");",
          "",
          "[Added Lines]",
          "195:         wc.login(\"test\", \"aValidFipsPass\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "219:         User u1 =  securityRealm.createAccount(\"test\", \"aValidFipsPass\");",
          "221:         WebClient wc = j.createWebClient();",
          "224:         HtmlPage configurePage = wc.goTo(u1.getUrl() + \"/security/\");",
          "225:         HtmlPasswordInput password1 = configurePage.getElementByName(\"user.password\");",
          "",
          "[Removed Lines]",
          "222:         wc.login(\"test\",\"aValidFipsPass\");",
          "",
          "[Added Lines]",
          "222:         wc.login(\"test\", \"aValidFipsPass\");",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/util/FormFieldValidatorTest.java||test/src/test/java/hudson/util/FormFieldValidatorTest.java": [
          "File: test/src/test/java/hudson/util/FormFieldValidatorTest.java -> test/src/test/java/hudson/util/FormFieldValidatorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:         private Secret populatedPassword = Secret.fromString(\"secret!\");",
          "186:         private String textarea;",
          "187:         private Secret emptySecretTextarea;",
          "190:         @DataBoundConstructor",
          "191:         public ValidatingDescribable() {",
          "",
          "[Removed Lines]",
          "188:         private Secret populatedSecretTextarea = Secret.fromString(\"sensitive!\");;",
          "",
          "[Added Lines]",
          "188:         private Secret populatedSecretTextarea = Secret.fromString(\"sensitive!\");",
          "",
          "---------------"
        ],
        "test/src/test/java/jenkins/model/NodesTest.java||test/src/test/java/jenkins/model/NodesTest.java": [
          "File: test/src/test/java/jenkins/model/NodesTest.java -> test/src/test/java/jenkins/model/NodesTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:     private static class DumbSlaveNameAndRemoteFSMatcher extends TypeSafeMatcher<DumbSlavePair> {",
          "308:         private final DumbSlavePair expected;",
          "311:             this.expected = expected;",
          "312:         }",
          "",
          "[Removed Lines]",
          "310:         public DumbSlaveNameAndRemoteFSMatcher(DumbSlavePair expected) {",
          "",
          "[Added Lines]",
          "310:         DumbSlaveNameAndRemoteFSMatcher(DumbSlavePair expected) {",
          "",
          "---------------"
        ],
        "test/src/test/java/jenkins/security/Security3430Test.java||test/src/test/java/jenkins/security/Security3430Test.java": [
          "File: test/src/test/java/jenkins/security/Security3430Test.java -> test/src/test/java/jenkins/security/Security3430Test.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:                 if (requestingJarFromAgent) {",
          "158:                     final IOException ex = assertThrows(IOException.class, () -> channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
          "160:                 } else {",
          "161:                     assertTrue(channel.preloadJar(j.jenkins.getPluginManager().uberClassLoader, Stapler.class));",
          "162:                     assertThat(logRecords.stream().map(LogRecord::getMessage).toList(), is(empty()));",
          "",
          "[Removed Lines]",
          "159:                     assertThat(ex.getMessage(), containsString(\"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
          "",
          "[Added Lines]",
          "159:                     assertThat(ex.getMessage(), containsString(",
          "160:                             \"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "227:                     assertThat(logRecords, not(hasItem(logMessageContainsString(\"Allowing URL\"))));",
          "228:                     assertThat(logRecords, hasItem(logMessageContainsString(\"Rejecting URL: \")));",
          "229:                 } else {",
          "231:                 }",
          "232:             }",
          "",
          "[Removed Lines]",
          "230:                     assertThat(itex.getCause().getMessage(), containsString(\"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
          "",
          "[Added Lines]",
          "231:                     assertThat(itex.getCause().getMessage(), containsString(",
          "232:                             \"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected. This is likely a bug in Jenkins. As a workaround, try updating the agent.jar file.\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "264:         private final URL controllerFilePath;",
          "265:         private final String expectedContent;",
          "268:             this.controllerFilePath = controllerFilePath;",
          "269:             this.expectedContent = expectedContent;",
          "270:         }",
          "271:         @Override",
          "272:         public Void call() throws Exception {",
          "273:             final ClassLoader ccl = Thread.currentThread().getContextClassLoader();",
          "",
          "[Removed Lines]",
          "267:         public Exploit(URL controllerFilePath, String expectedContent) {",
          "",
          "[Added Lines]",
          "269:         Exploit(URL controllerFilePath, String expectedContent) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "290:     private static final class LogMessageContainsString extends TypeSafeMatcher<LogRecord> {",
          "291:         private final Matcher<String> stringMatcher;",
          "294:             this.stringMatcher = stringMatcher;",
          "295:         }",
          "",
          "[Removed Lines]",
          "293:         public LogMessageContainsString(Matcher<String> stringMatcher) {",
          "",
          "[Added Lines]",
          "296:         LogMessageContainsString(Matcher<String> stringMatcher) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}