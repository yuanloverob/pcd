{
  "cve_id": "CVE-2017-7531",
  "cve_desc": "In Moodle 3.3, the course overview block reveals activities in hidden courses.",
  "repo": "moodle/moodle",
  "patch_hash": "2fe7f706d7567babd6c7aeb6612f231d2ce2fb2f",
  "patch_info": {
    "commit_hash": "2fe7f706d7567babd6c7aeb6612f231d2ce2fb2f",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/2fe7f706d7567babd6c7aeb6612f231d2ce2fb2f",
    "files": [
      "calendar/classes/local/event/container.php",
      "calendar/tests/container_test.php"
    ],
    "message": "MDL-59304 core_calendar: check if course is hidden in bailout callback",
    "before_after_code_files": [
      "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php",
      "calendar/tests/container_test.php||calendar/tests/container_test.php"
    ]
  },
  "patch_diff": {
    "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php": [
      "File: calendar/classes/local/event/container.php -> calendar/classes/local/event/container.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "144:                     if (!$cm->uservisible || !$canseecourse) {",
      "145:                         return true;",
      "146:                     }",
      "",
      "[Removed Lines]",
      "140:                     $modulecontext = \\context_module::instance($cm->id);",
      "143:                     $canseecourse = (has_capability('moodle/course:view', $modulecontext) || is_enrolled($modulecontext));",
      "",
      "[Added Lines]",
      "145:                     $coursecontext = \\context_course::instance($dbrow->courseid);",
      "146:                     $canseecourse = has_capability('moodle/course:view', $coursecontext) || is_enrolled($coursecontext);",
      "147:                     $canseecourse = $canseecourse &&",
      "148:                         ($cm->get_course()->visible || has_capability('moodle/course:viewhiddencourses', $coursecontext));",
      "",
      "---------------"
    ],
    "calendar/tests/container_test.php||calendar/tests/container_test.php": [
      "File: calendar/tests/container_test.php -> calendar/tests/container_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:         $this->assertNull($event);",
      "184:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "192:     public function test_event_factory_when_course_visibility_is_toggled_as_admin($dbrow) {",
      "193:         $legacyevent = $this->create_event($dbrow);",
      "194:         $factory = \\core_calendar\\local\\event\\container::get_event_factory();",
      "197:         $course = $this->getDataGenerator()->create_course(['visible' => 0]);",
      "198:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_assign');",
      "199:         $moduleinstance = $generator->create_instance(['course' => $course->id]);",
      "201:         $dbrow->id = $legacyevent->id;",
      "202:         $dbrow->courseid = $course->id;",
      "203:         $dbrow->instance = $moduleinstance->id;",
      "204:         $dbrow->modulename = 'assign';",
      "205:         $event = $factory->create_instance($dbrow);",
      "208:         $this->assertInstanceOf(event_interface::class, $event);",
      "209:     }",
      "217:     public function test_event_factory_when_course_visibility_is_toggled_as_student($dbrow) {",
      "218:         $legacyevent = $this->create_event($dbrow);",
      "219:         $factory = \\core_calendar\\local\\event\\container::get_event_factory();",
      "222:         $course = $this->getDataGenerator()->create_course(['visible' => 0]);",
      "223:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_assign');",
      "224:         $moduleinstance = $generator->create_instance(['course' => $course->id]);",
      "227:         $student = $this->getDataGenerator()->create_user();",
      "228:         $this->getDataGenerator()->enrol_user($student->id, $course->id);",
      "231:         $this->setUser($student);",
      "233:         $dbrow->id = $legacyevent->id;",
      "234:         $dbrow->courseid = $course->id;",
      "235:         $dbrow->instance = $moduleinstance->id;",
      "236:         $dbrow->modulename = 'assign';",
      "237:         $event = $factory->create_instance($dbrow);",
      "240:         $this->assertNull($event);",
      "241:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "67103939ac414984821e9dc9a644b68bda2159cb",
      "candidate_info": {
        "commit_hash": "67103939ac414984821e9dc9a644b68bda2159cb",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/67103939ac414984821e9dc9a644b68bda2159cb",
        "files": [
          "calendar/classes/local/event/container.php",
          "calendar/tests/container_test.php"
        ],
        "message": "MDL-59304 core_calendar: check if course is hidden in bailout callback",
        "before_after_code_files": [
          "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php",
          "calendar/tests/container_test.php||calendar/tests/container_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php",
            "calendar/tests/container_test.php||calendar/tests/container_test.php"
          ],
          "candidate": [
            "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php",
            "calendar/tests/container_test.php||calendar/tests/container_test.php"
          ]
        }
      },
      "candidate_diff": {
        "calendar/classes/local/event/container.php||calendar/classes/local/event/container.php": [
          "File: calendar/classes/local/event/container.php -> calendar/classes/local/event/container.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:                     if (!$cm->uservisible || !$canseecourse) {",
          "145:                         return true;",
          "146:                     }",
          "",
          "[Removed Lines]",
          "140:                     $modulecontext = \\context_module::instance($cm->id);",
          "143:                     $canseecourse = (has_capability('moodle/course:view', $modulecontext) || is_enrolled($modulecontext));",
          "",
          "[Added Lines]",
          "145:                     $coursecontext = \\context_course::instance($dbrow->courseid);",
          "146:                     $canseecourse = has_capability('moodle/course:view', $coursecontext) || is_enrolled($coursecontext);",
          "147:                     $canseecourse = $canseecourse &&",
          "148:                         ($cm->get_course()->visible || has_capability('moodle/course:viewhiddencourses', $coursecontext));",
          "",
          "---------------"
        ],
        "calendar/tests/container_test.php||calendar/tests/container_test.php": [
          "File: calendar/tests/container_test.php -> calendar/tests/container_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:         $this->assertNull($event);",
          "184:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:     public function test_event_factory_when_course_visibility_is_toggled_as_admin($dbrow) {",
          "193:         $legacyevent = $this->create_event($dbrow);",
          "194:         $factory = \\core_calendar\\local\\event\\container::get_event_factory();",
          "197:         $course = $this->getDataGenerator()->create_course(['visible' => 0]);",
          "198:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_assign');",
          "199:         $moduleinstance = $generator->create_instance(['course' => $course->id]);",
          "201:         $dbrow->id = $legacyevent->id;",
          "202:         $dbrow->courseid = $course->id;",
          "203:         $dbrow->instance = $moduleinstance->id;",
          "204:         $dbrow->modulename = 'assign';",
          "205:         $event = $factory->create_instance($dbrow);",
          "208:         $this->assertInstanceOf(event_interface::class, $event);",
          "209:     }",
          "217:     public function test_event_factory_when_course_visibility_is_toggled_as_student($dbrow) {",
          "218:         $legacyevent = $this->create_event($dbrow);",
          "219:         $factory = \\core_calendar\\local\\event\\container::get_event_factory();",
          "222:         $course = $this->getDataGenerator()->create_course(['visible' => 0]);",
          "223:         $generator = $this->getDataGenerator()->get_plugin_generator('mod_assign');",
          "224:         $moduleinstance = $generator->create_instance(['course' => $course->id]);",
          "227:         $student = $this->getDataGenerator()->create_user();",
          "228:         $this->getDataGenerator()->enrol_user($student->id, $course->id);",
          "231:         $this->setUser($student);",
          "233:         $dbrow->id = $legacyevent->id;",
          "234:         $dbrow->courseid = $course->id;",
          "235:         $dbrow->instance = $moduleinstance->id;",
          "236:         $dbrow->modulename = 'assign';",
          "237:         $event = $factory->create_instance($dbrow);",
          "240:         $this->assertNull($event);",
          "241:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}