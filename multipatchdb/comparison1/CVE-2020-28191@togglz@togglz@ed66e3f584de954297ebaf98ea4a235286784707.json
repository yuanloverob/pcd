{
  "cve_id": "CVE-2020-28191",
  "cve_desc": "The console in Togglz before 2.9.4 allows CSRF.",
  "repo": "togglz/togglz",
  "patch_hash": "ed66e3f584de954297ebaf98ea4a235286784707",
  "patch_info": {
    "commit_hash": "ed66e3f584de954297ebaf98ea4a235286784707",
    "repo": "togglz/togglz",
    "commit_url": "https://github.com/togglz/togglz/commit/ed66e3f584de954297ebaf98ea4a235286784707",
    "files": [
      "console/pom.xml",
      "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
      "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider",
      "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator",
      "console/src/main/resources/org/togglz/console/error.html",
      "console/src/main/resources/org/togglz/console/index.html",
      "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
    ],
    "message": "Added CSRF protection to the togglz console via a CSRF token passed between the server and the clinet. This remediates the vulnerabilty CVE-2020-28191 by blocking CSRF attacks as the attcker will not be able to guess the CSRF token value. (#495)\n\nThis has been implemented with either the session timeout of the application the togglz console is embedded in. Or if no user session is available it defaults to a 10 minute timeout for the CSRF token.\nThis CSRF token does not interfere with either OWASP's CSRFGuard or Spring-Security's CSRF protection if they are used within the application.\n\nCo-authored-by: Joseph Beeton <joseph.p.beeton1@aexp.com>",
    "before_after_code_files": [
      "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java",
      "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
      "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider||console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider",
      "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator||console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator",
      "console/src/main/resources/org/togglz/console/error.html||console/src/main/resources/org/togglz/console/error.html",
      "console/src/main/resources/org/togglz/console/index.html||console/src/main/resources/org/togglz/console/index.html",
      "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
    ]
  },
  "patch_diff": {
    "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java": [
      "File: console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java -> console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import com.floreysoft.jmte.Engine;",
      "21: import org.togglz.core.util.Services;",
      "23: public class EditPageHandler extends RequestHandlerBase {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import org.togglz.servlet.spi.CSRFTokenValidator;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37:         FeatureManager featureManager = event.getFeatureManager();",
      "38:         HttpServletRequest request = event.getRequest();",
      "39:         HttpServletResponse response = event.getResponse();",
      "42:         Feature feature = null;",
      "43:         String featureAsString = request.getParameter(\"f\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "41:   if(!validateCSRFToken(event)) {",
      "42:    renderErrorPage(event);",
      "43:    return;",
      "44:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "89:     }",
      "91:     private void renderEditPage(RequestEvent event, FeatureModel featureModel) throws IOException {",
      "92:         List<CSRFToken> tokens = new ArrayList<>();",
      "93:         for (CSRFTokenProvider provider : Services.get(CSRFTokenProvider.class)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "94:     private boolean validateCSRFToken(RequestEvent event) {",
      "95:      boolean isValid = true;",
      "96:   for (CSRFTokenValidator validator : Services.get(CSRFTokenValidator.class)) {",
      "97:    if(!validator.isTokenValid(event.getRequest())){",
      "98:     isValid = false;",
      "99:     break;",
      "100:    }",
      "101:   }",
      "102:   return isValid;",
      "103:  }",
      "105:     private void renderErrorPage(RequestEvent event) throws IOException {",
      "106:   String template = getResourceAsString(\"error.html\");",
      "107:   String content = new Engine().transform(template, new HashMap<>());",
      "108:   event.getResponse().setStatus(401);",
      "109:   writeResponse(event, content);",
      "110:  }",
      "",
      "---------------"
    ],
    "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java": [
      "File: console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java -> console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package org.togglz.console.security;",
      "3: import java.util.HashMap;",
      "4: import java.util.concurrent.TimeUnit;",
      "6: import org.apache.commons.collections4.map.PassiveExpiringMap;",
      "7: import org.togglz.servlet.spi.CSRFToken;",
      "9: public class TogglzCSRFTokenCache {",
      "11:  private static final PassiveExpiringMap<String, CSRFToken> expiringMap;",
      "12:  private static final Object lock = new Object();",
      "13:  static {",
      "14:   PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<String, CSRFToken>",
      "15:     expirationPolicy = new PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<>(",
      "16:     10, TimeUnit.MINUTES);",
      "17:   expiringMap = new PassiveExpiringMap<>(expirationPolicy, new HashMap<>());",
      "18:  }",
      "20:  public static void cacheToken(CSRFToken token) {",
      "21:   synchronized (lock) {",
      "22:    expiringMap.put(token.getValue(), token);",
      "23:   }",
      "24:  }",
      "26:  public static boolean isTokenInCache(CSRFToken token) {",
      "27:   synchronized (lock) {",
      "28:    return expiringMap.containsKey(token.getValue());",
      "29:   }",
      "30:  }",
      "32: }",
      "",
      "---------------"
    ],
    "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java": [
      "File: console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java -> console/src/main/java/org/togglz/console/security/TogglzCSRFTokenProvider.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package org.togglz.console.security;",
      "3: import java.util.UUID;",
      "5: import javax.servlet.http.HttpServletRequest;",
      "7: import org.togglz.servlet.spi.CSRFToken;",
      "8: import org.togglz.servlet.spi.CSRFTokenProvider;",
      "10: import static org.togglz.console.security.TogglzCSRFTokenValidator.CSRF_TOKEN_NAME;",
      "12: public class TogglzCSRFTokenProvider implements CSRFTokenProvider {",
      "14:  @Override",
      "15:  public CSRFToken getToken(HttpServletRequest request) {",
      "16:   CSRFToken token;",
      "17:   if (request.getAttribute(CSRF_TOKEN_NAME) == null) {",
      "18:    token = new CSRFToken(CSRF_TOKEN_NAME, UUID.randomUUID().toString());",
      "19:    TogglzCSRFTokenCache.cacheToken(token);",
      "20:   } else {",
      "21:    token = new CSRFToken(CSRF_TOKEN_NAME, request.getAttribute(CSRF_TOKEN_NAME).toString());",
      "22:   }",
      "23:   return token;",
      "24:  }",
      "25: }",
      "",
      "---------------"
    ],
    "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java": [
      "File: console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java -> console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package org.togglz.console.security;",
      "3: import javax.servlet.http.HttpServletRequest;",
      "5: import org.togglz.servlet.spi.CSRFToken;",
      "6: import org.togglz.servlet.spi.CSRFTokenValidator;",
      "8: public class TogglzCSRFTokenValidator implements CSRFTokenValidator {",
      "11:  public static final String CSRF_TOKEN_NAME = \"togglz_csrf\";",
      "13:  @Override",
      "14:  public boolean isTokenValid(HttpServletRequest request) {",
      "15:   String token = request.getParameter(CSRF_TOKEN_NAME);",
      "16:   if(token==null) {",
      "17:    return false;",
      "18:   } else {",
      "19:    return TogglzCSRFTokenCache.isTokenInCache(new CSRFToken(CSRF_TOKEN_NAME,token));",
      "20:   }",
      "21:  }",
      "22: }",
      "",
      "---------------"
    ],
    "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider||console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider": [
      "File: console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider -> console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenProvider",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: org.togglz.console.security.TogglzCSRFTokenProvider",
      "",
      "---------------"
    ],
    "console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator||console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator": [
      "File: console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator -> console/src/main/resources/META-INF/services/org.togglz.servlet.spi.CSRFTokenValidator",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: org.togglz.console.security.TogglzCSRFTokenValidator",
      "",
      "---------------"
    ],
    "console/src/main/resources/org/togglz/console/error.html||console/src/main/resources/org/togglz/console/error.html": [
      "File: console/src/main/resources/org/togglz/console/error.html -> console/src/main/resources/org/togglz/console/error.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <div style=\"text-align: center;\">",
      "2:     <h1>ERROR</h1>",
      "3:     <h1><small>Invalid CSRF Token, please refresh browser from the main Togglz page.</small></h1>",
      "4: </div>",
      "",
      "---------------"
    ],
    "console/src/main/resources/org/togglz/console/index.html||console/src/main/resources/org/togglz/console/index.html": [
      "File: console/src/main/resources/org/togglz/console/index.html -> console/src/main/resources/org/togglz/console/index.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:                 ${end}",
      "68:               </td>",
      "69:               <td class=\"feature-actions\">",
      "72:                 </a>",
      "73:               </td>",
      "74:             </tr>",
      "",
      "[Removed Lines]",
      "70:                 <a class=\"btn btn-sm btn-default\" href=\"edit?f=${feature.name}\" title=\"Edit ${feature.label} feature\">",
      "71:                   <span class=\"glyphicon glyphicon-cog text-muted\"></span>",
      "",
      "[Added Lines]",
      "70:                   <a class=\"btn btn-sm btn-default\" href=\"edit?f=${feature.name}${foreach tokens token}${if token.name = \"togglz_csrf\"}&${token.name}=${token.value}${end}${end}\" title=\"Edit ${feature.label} feature\">                  <span class=\"glyphicon glyphicon-cog text-muted\"></span>",
      "",
      "---------------"
    ],
    "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java": [
      "File: servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java -> servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package org.togglz.servlet.spi;",
      "3: import javax.servlet.http.HttpServletRequest;",
      "5: public interface CSRFTokenValidator {",
      "8:  boolean isTokenValid(HttpServletRequest request);",
      "9: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a307e3a83f2352bbd8de8d96d3d476cbf67c03ea",
      "candidate_info": {
        "commit_hash": "a307e3a83f2352bbd8de8d96d3d476cbf67c03ea",
        "repo": "togglz/togglz",
        "commit_url": "https://github.com/togglz/togglz/commit/a307e3a83f2352bbd8de8d96d3d476cbf67c03ea",
        "files": [
          "console/src/main/java/org/togglz/console/RequestContext.java",
          "console/src/main/java/org/togglz/console/RequestEvent.java",
          "console/src/main/java/org/togglz/console/TogglzConsoleServlet.java",
          "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
          "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java",
          "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java"
        ],
        "message": "#500|ew|add property to activate CSRF token validation (#510)\n\nCo-authored-by: Erik Woelfel <erik.woelfel@otto.de>\n\nCo-authored-by: ew <ft6@otto.de>",
        "before_after_code_files": [
          "console/src/main/java/org/togglz/console/RequestContext.java||console/src/main/java/org/togglz/console/RequestContext.java",
          "console/src/main/java/org/togglz/console/RequestEvent.java||console/src/main/java/org/togglz/console/RequestEvent.java",
          "console/src/main/java/org/togglz/console/TogglzConsoleServlet.java||console/src/main/java/org/togglz/console/TogglzConsoleServlet.java",
          "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
          "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java||spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java",
          "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java||spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
          ],
          "candidate": [
            "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
          ]
        }
      },
      "candidate_diff": {
        "console/src/main/java/org/togglz/console/RequestContext.java||console/src/main/java/org/togglz/console/RequestContext.java": [
          "File: console/src/main/java/org/togglz/console/RequestContext.java -> console/src/main/java/org/togglz/console/RequestContext.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package org.togglz.console;",
          "3: public class RequestContext {",
          "5:     private final boolean validateCSRFToken;",
          "7:     private RequestContext(Builder builder) {",
          "8:         validateCSRFToken = builder.validateCSRFToken;",
          "9:     }",
          "11:     public static Builder newBuilder() {",
          "12:         return new Builder();",
          "13:     }",
          "15:     public boolean isValidateCSRFToken() {",
          "16:         return validateCSRFToken;",
          "17:     }",
          "19:     public static final class Builder {",
          "20:         private boolean validateCSRFToken;",
          "22:         private Builder() {",
          "23:         }",
          "25:         public Builder withValidateCSRFToken(boolean val) {",
          "26:             validateCSRFToken = val;",
          "27:             return this;",
          "28:         }",
          "30:         public RequestContext build() {",
          "31:             return new RequestContext(this);",
          "32:         }",
          "33:     }",
          "34: }",
          "",
          "---------------"
        ],
        "console/src/main/java/org/togglz/console/RequestEvent.java||console/src/main/java/org/togglz/console/RequestEvent.java": [
          "File: console/src/main/java/org/togglz/console/RequestEvent.java -> console/src/main/java/org/togglz/console/RequestEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     private final HttpServletResponse response;",
          "14:     private final String path;",
          "15:     private final FeatureManager featureManager;",
          "17:     public RequestEvent(FeatureManager featureManager, ServletContext context, HttpServletRequest request,",
          "19:         this.featureManager = featureManager;",
          "20:         this.context = context;",
          "21:         this.request = request;",
          "22:         this.response = response;",
          "25:         String prefix = request.getContextPath() + request.getServletPath();",
          "",
          "[Removed Lines]",
          "18:         HttpServletResponse response) {",
          "",
          "[Added Lines]",
          "16:     private final RequestContext requestContext;",
          "19:                         HttpServletResponse response, RequestContext requestContext) {",
          "24:         this.requestContext = requestContext;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:     }",
          "32:     public ServletContext getContext() {",
          "33:         return context;",
          "34:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:     public RequestContext getRequestContext() {",
          "35:         return requestContext;",
          "36:     }",
          "",
          "---------------"
        ],
        "console/src/main/java/org/togglz/console/TogglzConsoleServlet.java||console/src/main/java/org/togglz/console/TogglzConsoleServlet.java": [
          "File: console/src/main/java/org/togglz/console/TogglzConsoleServlet.java -> console/src/main/java/org/togglz/console/TogglzConsoleServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     protected FeatureManager featureManager;",
          "27:     protected boolean secured = true;",
          "29:     @Override",
          "30:     public void init(ServletConfig config) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     protected boolean validateCSRFToken = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:             this.secured = toBool(secured);",
          "37:         }",
          "40:         for (RequestHandler requestHandler : ServiceLoader.load(RequestHandler.class)) {",
          "41:             handlers.add(requestHandler);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:         String validateCSRFToken = servletContext.getInitParameter(\"org.togglz.console.validateCSRFToken\");",
          "41:         if (validateCSRFToken != null) {",
          "42:             this.validateCSRFToken = toBool(validateCSRFToken);",
          "43:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:     @Override",
          "46:     protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException {",
          "47:         RequestEvent consoleRequest =",
          "49:         String path = consoleRequest.getPath();",
          "51:         RequestHandler handler = getHandlerFor(path);",
          "",
          "[Removed Lines]",
          "48:             new RequestEvent(featureManager, servletContext, request, response);",
          "",
          "[Added Lines]",
          "54:                 new RequestEvent(featureManager, servletContext, request, response,",
          "55:                         RequestContext.newBuilder()",
          "56:                                 .withValidateCSRFToken(validateCSRFToken)",
          "57:                                 .build());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "83:         this.secured = secured;",
          "84:     }",
          "86:     private static boolean toBool(String value) {",
          "87:         if (value != null && \"true\".equalsIgnoreCase(value.trim())) {",
          "88:             return true;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "95:     public void setValidateCSRFToken(boolean validateCSRFToken) {",
          "96:         this.validateCSRFToken = validateCSRFToken;",
          "97:     }",
          "",
          "---------------"
        ],
        "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java": [
          "File: console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java -> console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     }",
          "94:     private boolean validateCSRFToken(RequestEvent event) {",
          "105:     private void renderErrorPage(RequestEvent event) throws IOException {",
          "106:   String template = getResourceAsString(\"error.html\");",
          "",
          "[Removed Lines]",
          "95:      boolean isValid = true;",
          "96:   for (CSRFTokenValidator validator : Services.get(CSRFTokenValidator.class)) {",
          "97:    if(!validator.isTokenValid(event.getRequest())){",
          "98:     isValid = false;",
          "99:     break;",
          "100:    }",
          "101:   }",
          "102:   return isValid;",
          "103:  }",
          "",
          "[Added Lines]",
          "95:         boolean isValid = true;",
          "96:         if (event.getRequestContext().isValidateCSRFToken()) {",
          "97:             for (CSRFTokenValidator validator : Services.get(CSRFTokenValidator.class)) {",
          "98:                 if (!validator.isTokenValid(event.getRequest())) {",
          "99:                     isValid = false;",
          "100:                     break;",
          "101:                 }",
          "102:             }",
          "103:         }",
          "105:         return isValid;",
          "106:     }",
          "",
          "---------------"
        ],
        "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java||spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java": [
          "File: spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java -> spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzConsoleBaseConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:         String urlMapping = (path.endsWith(\"/\") ? path + \"*\" : path + \"/*\");",
          "47:         TogglzConsoleServlet servlet = new TogglzConsoleServlet();",
          "48:         servlet.setSecured(properties.getConsole().isSecured());",
          "49:         return new ServletRegistrationBean(servlet, urlMapping);",
          "50:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:         servlet.setValidateCSRFToken(properties.getConsole().isValidateCSRFToken());",
          "",
          "---------------"
        ],
        "spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java||spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java": [
          "File: spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java -> spring-boot/starter/src/main/java/org/togglz/spring/boot/actuate/autoconfigure/TogglzProperties.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:   private boolean secured = true;",
          "327:   private boolean useManagementPort = true;",
          "329:   public boolean isEnabled() {",
          "330:    return enabled;",
          "331:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:   private boolean validateCSRFToken = true;",
          "334:   public boolean isValidateCSRFToken() {",
          "335:    return validateCSRFToken;",
          "336:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b63f1a641015fdd98b84c6be941c5829898e2b9c",
      "candidate_info": {
        "commit_hash": "b63f1a641015fdd98b84c6be941c5829898e2b9c",
        "repo": "togglz/togglz",
        "commit_url": "https://github.com/togglz/togglz/commit/b63f1a641015fdd98b84c6be941c5829898e2b9c",
        "files": [
          "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
        ],
        "message": "Changed the validateCSRFToken method to default to fail rather than default to succeed CSRF validation. I'm not aware of any way to exploit this, but it is always better to fail safe. (#606)",
        "before_after_code_files": [
          "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
          ],
          "candidate": [
            "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java"
          ]
        }
      },
      "candidate_diff": {
        "console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java||console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java": [
          "File: console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java -> console/src/main/java/org/togglz/console/handlers/edit/EditPageHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:     }",
          "94:     private boolean validateCSRFToken(RequestEvent event) {",
          "96:         if (event.getRequestContext().isValidateCSRFToken()) {",
          "97:             for (CSRFTokenValidator validator : Services.get(CSRFTokenValidator.class)) {",
          "100:                     break;",
          "101:                 }",
          "102:             }",
          "103:         }",
          "104:         return isValid;",
          "105:     }",
          "",
          "[Removed Lines]",
          "95:         boolean isValid = true;",
          "98:                 if (!validator.isTokenValid(event.getRequest())) {",
          "99:                     isValid = false;",
          "",
          "[Added Lines]",
          "95:         boolean isValid = false;",
          "98:                 if (validator.isTokenValid(event.getRequest())) {",
          "99:                     isValid = true;",
          "103:         } else {",
          "104:             isValid = true;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1c78e4dbabf29ec85766ca27cef27e36fde15bb",
      "candidate_info": {
        "commit_hash": "a1c78e4dbabf29ec85766ca27cef27e36fde15bb",
        "repo": "togglz/togglz",
        "commit_url": "https://github.com/togglz/togglz/commit/a1c78e4dbabf29ec85766ca27cef27e36fde15bb",
        "files": [
          "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
          "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
          "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
        ],
        "message": "some refactorings",
        "before_after_code_files": [
          "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
          "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
          "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
            "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
            "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
          ],
          "candidate": [
            "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
            "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
            "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
          ]
        }
      },
      "candidate_diff": {
        "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java": [
          "File: console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java -> console/src/main/java/org/togglz/console/security/TogglzCSRFTokenCache.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:   expiringMap = new PassiveExpiringMap<>(expirationPolicy, new HashMap<>());",
          "18:  }",
          "21:   synchronized (lock) {",
          "22:    expiringMap.put(token.getValue(), token);",
          "23:   }",
          "24:  }",
          "27:   synchronized (lock) {",
          "28:    return expiringMap.containsKey(token.getValue());",
          "29:   }",
          "",
          "[Removed Lines]",
          "20:  public static void cacheToken(CSRFToken token) {",
          "26:  public static boolean isTokenInCache(CSRFToken token) {",
          "",
          "[Added Lines]",
          "21:  static void cacheToken(CSRFToken token) {",
          "27:  static boolean isTokenInCache(CSRFToken token) {",
          "",
          "---------------"
        ],
        "console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java||console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java": [
          "File: console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java -> console/src/main/java/org/togglz/console/security/TogglzCSRFTokenValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: public class TogglzCSRFTokenValidator implements CSRFTokenValidator {",
          "13:  @Override",
          "14:  public boolean isTokenValid(HttpServletRequest request) {",
          "",
          "[Removed Lines]",
          "11:  public static final String CSRF_TOKEN_NAME = \"togglz_csrf\";",
          "",
          "[Added Lines]",
          "10:  static final String CSRF_TOKEN_NAME = \"togglz_csrf\";",
          "",
          "---------------"
        ],
        "servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java||servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java": [
          "File: servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java -> servlet/src/main/java/org/togglz/servlet/spi/CSRFTokenValidator.java"
        ]
      }
    }
  ]
}