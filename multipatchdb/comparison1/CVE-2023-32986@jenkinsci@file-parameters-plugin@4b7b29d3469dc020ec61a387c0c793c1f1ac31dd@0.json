{
  "cve_id": "CVE-2023-32986",
  "cve_desc": "Jenkins File Parameter Plugin 285.v757c5b_67a_c25 and earlier does not restrict the name (and resulting uploaded file name) of Stashed File Parameters, allowing attackers with Item/Configure permission to create or replace arbitrary files on the Jenkins controller file system with attacker-specified content.",
  "repo": "jenkinsci/file-parameters-plugin",
  "patch_hash": "4b7b29d3469dc020ec61a387c0c793c1f1ac31dd",
  "patch_info": {
    "commit_hash": "4b7b29d3469dc020ec61a387c0c793c1f1ac31dd",
    "repo": "jenkinsci/file-parameters-plugin",
    "commit_url": "https://github.com/jenkinsci/file-parameters-plugin/commit/4b7b29d3469dc020ec61a387c0c793c1f1ac31dd",
    "files": [
      "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
      "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
      "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
      "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
    ],
    "message": "SECURITY-3123\n\n(cherry picked from commit 4c90bcddc7df7b85364490a312eaee051b02949f)",
    "before_after_code_files": [
      "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
      "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
      "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
      "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
      "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
    ]
  },
  "patch_diff": {
    "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: package io.jenkins.plugins.file_parameters;",
      "27: import hudson.cli.CLICommand;",
      "28: import hudson.model.ParameterDefinition;",
      "29: import hudson.model.ParameterValue;",
      "30: import java.io.ByteArrayInputStream;",
      "31: import java.io.IOException;",
      "32: import java.io.InputStream;",
      "33: import java.util.Base64;",
      "34: import javax.servlet.ServletException;",
      "35: import net.sf.json.JSONObject;",
      "36: import org.apache.commons.fileupload.FileItem;",
      "37: import org.apache.commons.fileupload.FileUploadBase;",
      "38: import org.kohsuke.stapler.StaplerRequest;",
      "40: abstract class AbstractFileParameterDefinition extends ParameterDefinition {",
      "42:     protected AbstractFileParameterDefinition(String name) {",
      "43:         super(name);",
      "44:     }",
      "46:     protected abstract Class<? extends AbstractFileParameterValue> valueType();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import hudson.model.Failure;",
      "31: import hudson.util.FormValidation;",
      "37: import jenkins.model.Jenkins;",
      "41: import org.kohsuke.stapler.QueryParameter;",
      "48:         Jenkins.checkGoodName(name);",
      "49:     }",
      "51:     protected Object readResolve() {",
      "52:         Jenkins.checkGoodName(getName());",
      "53:         return this;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "74:             }",
      "75:             src.delete();",
      "76:             p.setDescription(getDescription());",
      "78:             return p;",
      "79:         } catch (ServletException | IOException x) {",
      "80:             throw new RuntimeException(x);",
      "",
      "[Removed Lines]",
      "77:             p.filename = src.getName();",
      "",
      "[Added Lines]",
      "87:             p.setFilename(src.getName());",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "94:         return p;",
      "95:     }",
      "97: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "107:     protected static abstract class AbstractFileParameterDefinitionDescriptor extends ParameterDescriptor {",
      "109:         public FormValidation doCheckName(@QueryParameter String name) {",
      "110:             try {",
      "111:                 Jenkins.checkGoodName(name);",
      "112:                 return FormValidation.ok();",
      "113:             } catch (Failure x) {",
      "114:                 return FormValidation.error(x.getMessage());",
      "115:             }",
      "116:         }",
      "118:     }",
      "",
      "---------------"
    ],
    "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "30: import hudson.FilePath;",
      "31: import hudson.Launcher;",
      "32: import hudson.Util;",
      "33: import hudson.model.ParameterValue;",
      "34: import hudson.model.Run;",
      "35: import hudson.model.TaskListener;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: import hudson.model.Failure;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37: import java.io.IOException;",
      "38: import java.io.InputStream;",
      "39: import java.io.OutputStream;",
      "40: import org.apache.commons.io.IOUtils;",
      "41: import org.apache.commons.lang.StringUtils;",
      "42: import org.kohsuke.stapler.AncestorInPath;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "41: import jenkins.model.Jenkins;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "48: public abstract class AbstractFileParameterValue extends ParameterValue {",
      "52:     protected AbstractFileParameterValue(String name) {",
      "53:         super(name);",
      "54:     }",
      "56:     protected InputStream open(@CheckForNull Run<?,?> build) throws IOException, InterruptedException {",
      "57:         assert Util.isOverridden(AbstractFileParameterValue.class, getClass(), \"createTempFile\", Run.class, FilePath.class, EnvVars.class, Launcher.class, TaskListener.class);",
      "58:         if (build == null) {",
      "",
      "[Removed Lines]",
      "50:     @CheckForNull public String filename;",
      "",
      "[Added Lines]",
      "52:     private @CheckForNull String filename;",
      "58:     public final String getFilename() {",
      "59:         return filename;",
      "60:     }",
      "62:     final void setFilename(String filename) {",
      "63:         try {",
      "64:             Jenkins.checkGoodName(filename);",
      "65:             this.filename = filename;",
      "66:         } catch (Failure x) {",
      "70:         }",
      "71:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "94:     @Override public void buildEnvironment(Run<?, ?> build, EnvVars env) {",
      "95:         super.buildEnvironment(build, env);",
      "98:         }",
      "99:     }",
      "",
      "[Removed Lines]",
      "96:         if (filename != null) {",
      "97:             env.put(name + \"_FILENAME\", filename);",
      "",
      "[Added Lines]",
      "113:         String fname = getFilename();",
      "114:         if (fname != null) {",
      "115:             env.put(name + \"_FILENAME\", fname);",
      "",
      "---------------"
    ],
    "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: package io.jenkins.plugins.file_parameters;",
      "27: import hudson.Extension;",
      "29: import java.io.IOException;",
      "30: import java.io.InputStream;",
      "31: import org.jenkinsci.Symbol;",
      "",
      "[Removed Lines]",
      "28: import hudson.model.ParameterDefinition;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50:     @Symbol(\"base64File\")",
      "53:         @Override public String getDisplayName() {",
      "54:             return \"Base64 File Parameter\";",
      "",
      "[Removed Lines]",
      "51:     @Extension public static final class DescriptorImpl extends ParameterDefinition.ParameterDescriptor {",
      "",
      "[Added Lines]",
      "50:     @Extension public static final class DescriptorImpl extends AbstractFileParameterDefinitionDescriptor {",
      "",
      "---------------"
    ],
    "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "48:     @DataBoundSetter public void setFile(FileItem file) throws IOException {",
      "49:         base64 = Base64.getEncoder().encodeToString(IOUtils.toByteArray(file.getInputStream()));",
      "51:         file.delete();",
      "52:     }",
      "",
      "[Removed Lines]",
      "50:         filename = file.getName();",
      "",
      "[Added Lines]",
      "50:         setFilename(file.getName());",
      "",
      "---------------"
    ],
    "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: package io.jenkins.plugins.file_parameters;",
      "27: import hudson.Extension;",
      "29: import java.io.IOException;",
      "30: import java.io.InputStream;",
      "31: import org.jenkinsci.Symbol;",
      "",
      "[Removed Lines]",
      "28: import hudson.model.ParameterDefinition;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50:     @Symbol(\"stashedFile\")",
      "53:         @Override public String getDisplayName() {",
      "54:             return \"Stashed File Parameter\";",
      "",
      "[Removed Lines]",
      "51:     @Extension public static final class DescriptorImpl extends ParameterDefinition.ParameterDescriptor {",
      "",
      "[Added Lines]",
      "50:     @Extension public static final class DescriptorImpl extends AbstractFileParameterDefinitionDescriptor {",
      "",
      "---------------"
    ],
    "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java": [
      "File: src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:     @DataBoundConstructor public StashedFileParameterValue(String name, FileItem file) throws IOException {",
      "53:         this(name, file.getInputStream());",
      "55:         file.delete();",
      "56:     }",
      "",
      "[Removed Lines]",
      "54:         filename = file.getName();",
      "",
      "[Added Lines]",
      "54:         setFilename(file.getName());",
      "",
      "---------------"
    ],
    "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java": [
      "File: src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java -> src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: package io.jenkins.plugins.file_parameters;",
      "27: import hudson.cli.CLICommandInvoker;",
      "28: import hudson.model.ParameterDefinition;",
      "29: import hudson.model.ParametersDefinitionProperty;",
      "30: import java.io.ByteArrayInputStream;",
      "31: import static org.hamcrest.MatcherAssert.assertThat;",
      "33: import hudson.model.Result;",
      "34: import org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition;",
      "35: import org.jenkinsci.plugins.workflow.job.WorkflowJob;",
      "36: import org.jenkinsci.plugins.workflow.job.WorkflowRun;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import hudson.model.Failure;",
      "35: import java.io.File;",
      "36: import org.apache.commons.io.FileUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39: import static org.junit.Assert.*;",
      "40: import org.junit.Rule;",
      "41: import org.jvnet.hudson.test.BuildWatcher;",
      "42: import org.jvnet.hudson.test.JenkinsRule;",
      "44: public class FileParameterWrapperTest {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "45: import org.jvnet.hudson.test.Issue;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "208:         r.assertLogContains(\"loaded 'UPLOADED CONTENT HERE'\", b);",
      "209:     }",
      "211:     @Test public void shortParameterName() throws Exception {",
      "212:         r.createSlave(\"remote\", null, null);",
      "213:         WorkflowJob p = r.createProject(WorkflowJob.class, \"p\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "215:     @Issue(\"SECURITY-3123\")",
      "216:     @Test public void stashMaliciousFilename() throws Exception {",
      "217:         String hack = \"../../../../../../../../../../../../../../../../../../../../../tmp/file-parameters-plugin-SECURITY-3123\";",
      "218:         File result = new File(\"/tmp/file-parameters-plugin-SECURITY-3123\");",
      "219:         FileUtils.deleteQuietly(result);",
      "220:         WorkflowJob p = r.createProject(WorkflowJob.class, \"p\");",
      "221:         try {",
      "222:             p.addProperty(new ParametersDefinitionProperty(new StashedFileParameterDefinition(hack)));",
      "223:         } catch (Failure x) {",
      "224:             return; // good",
      "225:         }",
      "226:         p.setDefinition(new CpsFlowDefinition(\"\", true));",
      "227:         assertThat(new CLICommandInvoker(r, \"build\").",
      "228:                        withStdin(new ByteArrayInputStream(\"malicious content here\".getBytes())).",
      "229:                        invokeWithArgs(\"-f\", \"-p\", hack + \"=\", \"p\"),",
      "230:                    CLICommandInvoker.Matcher.succeeded());",
      "231:         WorkflowRun b = p.getBuildByNumber(1);",
      "232:         assertNotNull(b);",
      "233:         assertFalse(result.isFile());",
      "234:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4c90bcddc7df7b85364490a312eaee051b02949f",
      "candidate_info": {
        "commit_hash": "4c90bcddc7df7b85364490a312eaee051b02949f",
        "repo": "jenkinsci/file-parameters-plugin",
        "commit_url": "https://github.com/jenkinsci/file-parameters-plugin/commit/4c90bcddc7df7b85364490a312eaee051b02949f",
        "files": [
          "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
          "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
          "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
          "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
        ],
        "message": "SECURITY-3123",
        "before_after_code_files": [
          "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
          "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
          "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
          "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
          "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
            "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
            "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
            "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
          ],
          "candidate": [
            "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
            "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
            "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
            "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
            "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package io.jenkins.plugins.file_parameters;",
          "27: import hudson.cli.CLICommand;",
          "28: import hudson.model.ParameterDefinition;",
          "29: import hudson.model.ParameterValue;",
          "30: import java.io.ByteArrayInputStream;",
          "31: import java.io.IOException;",
          "32: import java.io.InputStream;",
          "33: import java.util.Base64;",
          "34: import javax.servlet.ServletException;",
          "35: import net.sf.json.JSONObject;",
          "36: import org.apache.commons.fileupload.FileItem;",
          "37: import org.apache.commons.fileupload.FileUploadBase;",
          "38: import org.kohsuke.stapler.StaplerRequest;",
          "40: abstract class AbstractFileParameterDefinition extends ParameterDefinition {",
          "42:     protected AbstractFileParameterDefinition(String name) {",
          "43:         super(name);",
          "44:     }",
          "46:     protected abstract Class<? extends AbstractFileParameterValue> valueType();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import hudson.model.Failure;",
          "31: import hudson.util.FormValidation;",
          "37: import jenkins.model.Jenkins;",
          "41: import org.kohsuke.stapler.QueryParameter;",
          "48:         Jenkins.checkGoodName(name);",
          "49:     }",
          "51:     protected Object readResolve() {",
          "52:         Jenkins.checkGoodName(getName());",
          "53:         return this;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:             }",
          "75:             src.delete();",
          "76:             p.setDescription(getDescription());",
          "78:             return p;",
          "79:         } catch (ServletException | IOException x) {",
          "80:             throw new RuntimeException(x);",
          "",
          "[Removed Lines]",
          "77:             p.filename = src.getName();",
          "",
          "[Added Lines]",
          "87:             p.setFilename(src.getName());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94:         return p;",
          "95:     }",
          "97: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:     protected static abstract class AbstractFileParameterDefinitionDescriptor extends ParameterDescriptor {",
          "109:         public FormValidation doCheckName(@QueryParameter String name) {",
          "110:             try {",
          "111:                 Jenkins.checkGoodName(name);",
          "112:                 return FormValidation.ok();",
          "113:             } catch (Failure x) {",
          "114:                 return FormValidation.error(x.getMessage());",
          "115:             }",
          "116:         }",
          "118:     }",
          "",
          "---------------"
        ],
        "src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/AbstractFileParameterValue.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: import hudson.FilePath;",
          "31: import hudson.Launcher;",
          "32: import hudson.Util;",
          "33: import hudson.model.ParameterValue;",
          "34: import hudson.model.Run;",
          "35: import hudson.model.TaskListener;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: import hudson.model.Failure;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: import java.io.IOException;",
          "38: import java.io.InputStream;",
          "39: import java.io.OutputStream;",
          "40: import org.apache.commons.io.IOUtils;",
          "41: import org.apache.commons.lang.StringUtils;",
          "42: import org.kohsuke.stapler.AncestorInPath;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48: public abstract class AbstractFileParameterValue extends ParameterValue {",
          "52:     protected AbstractFileParameterValue(String name) {",
          "53:         super(name);",
          "54:     }",
          "56:     protected InputStream open(@CheckForNull Run<?,?> build) throws IOException, InterruptedException {",
          "57:         assert Util.isOverridden(AbstractFileParameterValue.class, getClass(), \"createTempFile\", Run.class, FilePath.class, EnvVars.class, Launcher.class, TaskListener.class);",
          "58:         if (build == null) {",
          "",
          "[Removed Lines]",
          "50:     @CheckForNull public String filename;",
          "",
          "[Added Lines]",
          "52:     private @CheckForNull String filename;",
          "58:     public final String getFilename() {",
          "59:         return filename;",
          "60:     }",
          "62:     final void setFilename(String filename) {",
          "63:         try {",
          "64:             Jenkins.checkGoodName(filename);",
          "65:             this.filename = filename;",
          "66:         } catch (Failure x) {",
          "70:         }",
          "71:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:     @Override public void buildEnvironment(Run<?, ?> build, EnvVars env) {",
          "95:         super.buildEnvironment(build, env);",
          "98:         }",
          "99:     }",
          "",
          "[Removed Lines]",
          "96:         if (filename != null) {",
          "97:             env.put(name + \"_FILENAME\", filename);",
          "",
          "[Added Lines]",
          "113:         String fname = getFilename();",
          "114:         if (fname != null) {",
          "115:             env.put(name + \"_FILENAME\", fname);",
          "",
          "---------------"
        ],
        "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package io.jenkins.plugins.file_parameters;",
          "27: import hudson.Extension;",
          "29: import java.io.IOException;",
          "30: import java.io.InputStream;",
          "31: import org.jenkinsci.Symbol;",
          "",
          "[Removed Lines]",
          "28: import hudson.model.ParameterDefinition;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     @Symbol(\"base64File\")",
          "53:         @Override public String getDisplayName() {",
          "54:             return \"Base64 File Parameter\";",
          "",
          "[Removed Lines]",
          "51:     @Extension public static final class DescriptorImpl extends ParameterDefinition.ParameterDescriptor {",
          "",
          "[Added Lines]",
          "50:     @Extension public static final class DescriptorImpl extends AbstractFileParameterDefinitionDescriptor {",
          "",
          "---------------"
        ],
        "src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/Base64FileParameterValue.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     @DataBoundSetter public void setFile(FileItem file) throws IOException {",
          "49:         base64 = Base64.getEncoder().encodeToString(IOUtils.toByteArray(file.getInputStream()));",
          "51:         file.delete();",
          "52:     }",
          "",
          "[Removed Lines]",
          "50:         filename = file.getName();",
          "",
          "[Added Lines]",
          "50:         setFilename(file.getName());",
          "",
          "---------------"
        ],
        "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java -> src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterDefinition.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package io.jenkins.plugins.file_parameters;",
          "27: import hudson.Extension;",
          "29: import java.io.IOException;",
          "30: import java.io.InputStream;",
          "31: import org.jenkinsci.Symbol;",
          "",
          "[Removed Lines]",
          "28: import hudson.model.ParameterDefinition;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:     @Symbol(\"stashedFile\")",
          "53:         @Override public String getDisplayName() {",
          "54:             return \"Stashed File Parameter\";",
          "",
          "[Removed Lines]",
          "51:     @Extension public static final class DescriptorImpl extends ParameterDefinition.ParameterDescriptor {",
          "",
          "[Added Lines]",
          "50:     @Extension public static final class DescriptorImpl extends AbstractFileParameterDefinitionDescriptor {",
          "",
          "---------------"
        ],
        "src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java||src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java": [
          "File: src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java -> src/main/java/io/jenkins/plugins/file_parameters/StashedFileParameterValue.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     @DataBoundConstructor public StashedFileParameterValue(String name, FileItem file) throws IOException {",
          "53:         this(name, file.getInputStream());",
          "55:         file.delete();",
          "56:     }",
          "",
          "[Removed Lines]",
          "54:         filename = file.getName();",
          "",
          "[Added Lines]",
          "54:         setFilename(file.getName());",
          "",
          "---------------"
        ],
        "src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java||src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java": [
          "File: src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java -> src/test/java/io/jenkins/plugins/file_parameters/FileParameterWrapperTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: package io.jenkins.plugins.file_parameters;",
          "27: import hudson.cli.CLICommandInvoker;",
          "28: import hudson.model.ParameterDefinition;",
          "29: import hudson.model.ParametersDefinitionProperty;",
          "30: import java.io.ByteArrayInputStream;",
          "31: import static org.hamcrest.MatcherAssert.assertThat;",
          "33: import hudson.model.Result;",
          "34: import org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition;",
          "35: import org.jenkinsci.plugins.workflow.job.WorkflowJob;",
          "36: import org.jenkinsci.plugins.workflow.job.WorkflowRun;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: import hudson.model.Failure;",
          "35: import java.io.File;",
          "36: import org.apache.commons.io.FileUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: import static org.junit.Assert.*;",
          "40: import org.junit.Rule;",
          "41: import org.jvnet.hudson.test.BuildWatcher;",
          "42: import org.jvnet.hudson.test.JenkinsRule;",
          "44: public class FileParameterWrapperTest {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: import org.jvnet.hudson.test.Issue;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:         r.assertLogContains(\"loaded 'UPLOADED CONTENT HERE'\", b);",
          "209:     }",
          "211:     @Test public void shortParameterName() throws Exception {",
          "212:         r.createSlave(\"remote\", null, null);",
          "213:         WorkflowJob p = r.createProject(WorkflowJob.class, \"p\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:     @Issue(\"SECURITY-3123\")",
          "216:     @Test public void stashMaliciousFilename() throws Exception {",
          "217:         String hack = \"../../../../../../../../../../../../../../../../../../../../../tmp/file-parameters-plugin-SECURITY-3123\";",
          "218:         File result = new File(\"/tmp/file-parameters-plugin-SECURITY-3123\");",
          "219:         FileUtils.deleteQuietly(result);",
          "220:         WorkflowJob p = r.createProject(WorkflowJob.class, \"p\");",
          "221:         try {",
          "222:             p.addProperty(new ParametersDefinitionProperty(new StashedFileParameterDefinition(hack)));",
          "223:         } catch (Failure x) {",
          "224:             return; // good",
          "225:         }",
          "226:         p.setDefinition(new CpsFlowDefinition(\"\", true));",
          "227:         assertThat(new CLICommandInvoker(r, \"build\").",
          "228:                        withStdin(new ByteArrayInputStream(\"malicious content here\".getBytes())).",
          "229:                        invokeWithArgs(\"-f\", \"-p\", hack + \"=\", \"p\"),",
          "230:                    CLICommandInvoker.Matcher.succeeded());",
          "231:         WorkflowRun b = p.getBuildByNumber(1);",
          "232:         assertNotNull(b);",
          "233:         assertFalse(result.isFile());",
          "234:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}