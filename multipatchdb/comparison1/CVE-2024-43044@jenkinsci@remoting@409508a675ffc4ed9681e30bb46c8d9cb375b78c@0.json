{
  "cve_id": "CVE-2024-43044",
  "cve_desc": "Jenkins 2.470 and earlier, LTS 2.452.3 and earlier allows agent processes to read arbitrary files from the Jenkins controller file system by using the `ClassLoaderProxy#fetchJar` method in the Remoting library.",
  "repo": "jenkinsci/remoting",
  "patch_hash": "409508a675ffc4ed9681e30bb46c8d9cb375b78c",
  "patch_info": {
    "commit_hash": "409508a675ffc4ed9681e30bb46c8d9cb375b78c",
    "repo": "jenkinsci/remoting",
    "commit_url": "https://github.com/jenkinsci/remoting/commit/409508a675ffc4ed9681e30bb46c8d9cb375b78c",
    "files": [
      "src/main/java/hudson/remoting/Channel.java",
      "src/main/java/hudson/remoting/JarURLValidator.java",
      "src/main/java/hudson/remoting/PreloadJarTask.java",
      "src/main/java/hudson/remoting/PreloadJarTask2.java",
      "src/main/java/hudson/remoting/RemoteClassLoader.java"
    ],
    "message": "[SECURITY-3430]",
    "before_after_code_files": [
      "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java",
      "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java",
      "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java",
      "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java",
      "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java"
    ]
  },
  "patch_diff": {
    "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java": [
      "File: src/main/java/hudson/remoting/Channel.java -> src/main/java/hudson/remoting/Channel.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "52: import java.net.URL;",
      "53: import java.nio.channels.ClosedChannelException;",
      "54: import java.nio.charset.StandardCharsets;",
      "55: import java.util.Collections;",
      "56: import java.util.Date;",
      "57: import java.util.List;",
      "58: import java.util.Locale;",
      "59: import java.util.Map;",
      "60: import java.util.WeakHashMap;",
      "61: import java.util.concurrent.ConcurrentHashMap;",
      "62: import java.util.concurrent.CopyOnWriteArrayList;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55: import java.util.Arrays;",
      "58: import java.util.HashSet;",
      "62: import java.util.Set;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "925:         return preloadJar(UserRequest.getClassLoader(classLoaderRef), classesInJar);",
      "926:     }",
      "928:     public boolean preloadJar(ClassLoader local, Class<?>... classesInJar) throws IOException, InterruptedException {",
      "933:     }",
      "935:     public boolean preloadJar(ClassLoader local, URL... jars) throws IOException, InterruptedException {",
      "937:     }",
      "",
      "[Removed Lines]",
      "929:         URL[] jars = new URL[classesInJar.length];",
      "930:         for (int i = 0; i < classesInJar.length; i++)",
      "931:             jars[i] = Which.jarFile(classesInJar[i]).toURI().toURL();",
      "932:         return call(new PreloadJarTask(jars, local));",
      "936:         return call(new PreloadJarTask(jars,local));",
      "",
      "[Added Lines]",
      "931:     @SuppressFBWarnings(",
      "932:             value = \"DMI_COLLECTION_OF_URLS\",",
      "933:             justification = \"All URLs point to local files, so no DNS lookup.\")",
      "935:         Set<URL> jarSet = new HashSet<>();",
      "936:         for (Class<?> clazz : classesInJar) {",
      "937:             jarSet.add(Which.jarFile(clazz).toURI().toURL());",
      "938:         }",
      "939:         URL[] jars = jarSet.toArray(new URL[0]);",
      "940:         return preloadJar(local, jars);",
      "943:     @SuppressFBWarnings(value = \"URLCONNECTION_SSRF_FD\", justification = \"Callers are privileged controller-side code.\")",
      "945:         byte[][] contents = new byte[jars.length][0];",
      "947:         List<URL> jarList = Arrays.asList(jars);",
      "948:         for (int i = 0; i < jarList.size(); i++) {",
      "949:             final URL url = jarList.get(i);",
      "950:             jars[i] = url;",
      "951:             contents[i] = Util.readFully(url.openStream());",
      "952:         }",
      "953:         try {",
      "954:             return call(new PreloadJarTask2(jars, contents, local));",
      "955:         } catch (IOException ex) {",
      "956:             if (ex.getCause() instanceof IllegalAccessError) {",
      "957:                 logger.log(",
      "958:                         Level.FINE,",
      "959:                         ex,",
      "960:                         () -> \"Failed to call PreloadJarTask2 on \" + this + \", retrying with PreloadJarTask\");",
      "972:                 return call(new PreloadJarTask(jars, local));",
      "973:             }",
      "974:             throw ex;",
      "975:         }",
      "",
      "---------------"
    ],
    "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java": [
      "File: src/main/java/hudson/remoting/JarURLValidator.java -> src/main/java/hudson/remoting/JarURLValidator.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package hudson.remoting;",
      "3: import java.io.IOException;",
      "4: import java.net.URL;",
      "12: @Deprecated",
      "13: public interface JarURLValidator {",
      "14:     void validate(URL url) throws IOException;",
      "15: }",
      "",
      "---------------"
    ],
    "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java": [
      "File: src/main/java/hudson/remoting/PreloadJarTask.java -> src/main/java/hudson/remoting/PreloadJarTask.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "38: final class PreloadJarTask implements DelegatingCallable<Boolean,IOException> {",
      "",
      "[Added Lines]",
      "39: @Deprecated",
      "40: final class PreloadJarTask implements DelegatingCallable<Boolean, IOException> {",
      "",
      "---------------"
    ],
    "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java": [
      "File: src/main/java/hudson/remoting/PreloadJarTask2.java -> src/main/java/hudson/remoting/PreloadJarTask2.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: package hudson.remoting;",
      "26: import edu.umd.cs.findbugs.annotations.CheckForNull;",
      "27: import java.io.IOException;",
      "28: import java.net.URL;",
      "29: import org.jenkinsci.remoting.Role;",
      "30: import org.jenkinsci.remoting.RoleChecker;",
      "40: final class PreloadJarTask2 implements DelegatingCallable<Boolean, IOException> {",
      "44:     private final URL[] jars;",
      "46:     private final byte[][] contents;",
      "52:     @CheckForNull",
      "53:     private transient ClassLoader target = null;",
      "55:     PreloadJarTask2(URL[] jars, byte[][] contents, @CheckForNull ClassLoader target) {",
      "56:         if (jars.length != contents.length) {",
      "57:             throw new IllegalArgumentException(\"Got \" + jars.length + \" jars and \" + contents.length + \" contents\");",
      "58:         }",
      "59:         this.jars = jars;",
      "60:         this.contents = contents;",
      "61:         this.target = target;",
      "62:     }",
      "64:     @Override",
      "65:     public ClassLoader getClassLoader() {",
      "66:         return target;",
      "67:     }",
      "69:     @Override",
      "70:     public Boolean call() throws IOException {",
      "71:         ClassLoader cl = Thread.currentThread().getContextClassLoader();",
      "73:         try {",
      "74:             if (!(cl instanceof RemoteClassLoader)) {",
      "75:                 return false;",
      "76:             }",
      "77:             final RemoteClassLoader rcl = (RemoteClassLoader) cl;",
      "79:             boolean r = false;",
      "80:             for (int i = 0; i < jars.length; i++) {",
      "81:                 r |= rcl.prefetch(jars[i], contents[i]);",
      "82:             }",
      "83:             return r;",
      "84:         } catch (IllegalAccessError iae) {",
      "86:             throw new IOException(iae);",
      "87:         }",
      "88:     }",
      "94:     @Override",
      "95:     public void checkRoles(RoleChecker checker) throws SecurityException {",
      "96:         checker.check(this, Role.UNKNOWN);",
      "97:     }",
      "99:     private static final long serialVersionUID = -773448303394727271L;",
      "100: }",
      "",
      "---------------"
    ],
    "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java": [
      "File: src/main/java/hudson/remoting/RemoteClassLoader.java -> src/main/java/hudson/remoting/RemoteClassLoader.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "675:         synchronized (prefetchedJars) {",
      "676:             if (prefetchedJars.contains(jar)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "677:     @Deprecated",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "686:         }",
      "687:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "704:         synchronized (prefetchedJars) {",
      "705:             if (prefetchedJars.contains(jar)) {",
      "706:                 return false;",
      "707:             }",
      "709:             String p = jar.getPath().replace('\\\\', '/');",
      "710:             p = Util.getBaseName(p);",
      "711:             File localJar = Util.makeResource(p, content);",
      "712:             addURL(localJar.toURI().toURL());",
      "713:             prefetchedJars.add(jar);",
      "714:             return true;",
      "715:         }",
      "716:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "830:     public interface IClassLoader {",
      "831:         byte[] fetchJar(URL url) throws IOException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "860:         @Deprecated",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "945:         }",
      "947:         @Override",
      "949:         public byte[] fetchJar(URL url) throws IOException {",
      "950:             return readFully(url.openStream());",
      "951:         }",
      "",
      "[Removed Lines]",
      "948:         @SuppressFBWarnings(value = \"URLCONNECTION_SSRF_FD\", justification = \"This is only used for managing the jar cache as files.\")",
      "",
      "[Added Lines]",
      "978:         @SuppressFBWarnings(",
      "979:                 value = \"URLCONNECTION_SSRF_FD\",",
      "980:                 justification = \"URL validation is being done through JarURLValidator\")",
      "982:             final Object o = channel.getProperty(JarURLValidator.class);",
      "983:             if (o == null) {",
      "984:                 final boolean disabled = Boolean.getBoolean(Channel.class.getName() + \".DISABLE_JAR_URL_VALIDATOR\");",
      "985:                 LOGGER.log(Level.FINE, \"Default behavior for URL: \" + url + \" with disabled flag: \" + disabled);",
      "986:                 if (!disabled) {",
      "987:                     throw new IOException(",
      "988:                             \"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected.\"",
      "989:                                     + \" This is likely a bug in Jenkins.\"",
      "990:                                     + \" As a workaround, try updating the agent.jar file.\");",
      "991:                 }",
      "992:             } else {",
      "993:                 if (o instanceof JarURLValidator) {",
      "994:                     ((JarURLValidator) o).validate(url);",
      "995:                 } else {",
      "996:                     throw new IOException(\"Unexpected channel property hudson.remoting.JarURLValidator value: \" + o);",
      "997:                 }",
      "998:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f9e939397a09a8089518eb94ed607b135295701d",
      "candidate_info": {
        "commit_hash": "f9e939397a09a8089518eb94ed607b135295701d",
        "repo": "jenkinsci/remoting",
        "commit_url": "https://github.com/jenkinsci/remoting/commit/f9e939397a09a8089518eb94ed607b135295701d",
        "files": [
          "src/main/java/hudson/remoting/Channel.java",
          "src/main/java/hudson/remoting/JarURLValidator.java",
          "src/main/java/hudson/remoting/PreloadJarTask.java",
          "src/main/java/hudson/remoting/PreloadJarTask2.java",
          "src/main/java/hudson/remoting/RemoteClassLoader.java"
        ],
        "message": "[SECURITY-3430]",
        "before_after_code_files": [
          "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java",
          "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java",
          "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java",
          "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java",
          "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java",
            "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java",
            "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java",
            "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java",
            "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java"
          ],
          "candidate": [
            "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java",
            "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java",
            "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java",
            "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java",
            "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java"
          ]
        }
      },
      "candidate_diff": {
        "src/main/java/hudson/remoting/Channel.java||src/main/java/hudson/remoting/Channel.java": [
          "File: src/main/java/hudson/remoting/Channel.java -> src/main/java/hudson/remoting/Channel.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: import java.net.URL;",
          "44: import java.nio.channels.ClosedChannelException;",
          "45: import java.nio.charset.StandardCharsets;",
          "46: import java.util.Collections;",
          "47: import java.util.Date;",
          "48: import java.util.List;",
          "49: import java.util.Locale;",
          "50: import java.util.Map;",
          "51: import java.util.WeakHashMap;",
          "52: import java.util.concurrent.ConcurrentHashMap;",
          "53: import java.util.concurrent.CopyOnWriteArrayList;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46: import java.util.Arrays;",
          "49: import java.util.HashSet;",
          "53: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "993:         return preloadJar(UserRequest.getClassLoader(classLoaderRef), classesInJar);",
          "994:     }",
          "996:     public boolean preloadJar(ClassLoader local, Class<?>... classesInJar) throws IOException, InterruptedException {",
          "1000:         }",
          "1002:     }",
          "1004:     public boolean preloadJar(ClassLoader local, URL... jars) throws IOException, InterruptedException {",
          "1006:     }",
          "",
          "[Removed Lines]",
          "997:         URL[] jars = new URL[classesInJar.length];",
          "998:         for (int i = 0; i < classesInJar.length; i++) {",
          "999:             jars[i] = Which.jarFile(classesInJar[i]).toURI().toURL();",
          "1001:         return call(new PreloadJarTask(jars, local));",
          "1005:         return call(new PreloadJarTask(jars, local));",
          "",
          "[Added Lines]",
          "999:     @SuppressFBWarnings(",
          "1000:             value = \"DMI_COLLECTION_OF_URLS\",",
          "1001:             justification = \"All URLs point to local files, so no DNS lookup.\")",
          "1003:         Set<URL> jarSet = new HashSet<>();",
          "1004:         for (Class<?> clazz : classesInJar) {",
          "1005:             jarSet.add(Which.jarFile(clazz).toURI().toURL());",
          "1007:         URL[] jars = jarSet.toArray(new URL[0]);",
          "1008:         return preloadJar(local, jars);",
          "1011:     @SuppressFBWarnings(value = \"URLCONNECTION_SSRF_FD\", justification = \"Callers are privileged controller-side code.\")",
          "1013:         byte[][] contents = new byte[jars.length][0];",
          "1015:         List<URL> jarList = Arrays.asList(jars);",
          "1016:         for (int i = 0; i < jarList.size(); i++) {",
          "1017:             final URL url = jarList.get(i);",
          "1018:             jars[i] = url;",
          "1019:             contents[i] = Util.readFully(url.openStream());",
          "1020:         }",
          "1021:         try {",
          "1022:             return call(new PreloadJarTask2(jars, contents, local));",
          "1023:         } catch (IOException ex) {",
          "1024:             if (ex.getCause() instanceof IllegalAccessError) {",
          "1025:                 logger.log(",
          "1026:                         Level.FINE,",
          "1027:                         ex,",
          "1028:                         () -> \"Failed to call PreloadJarTask2 on \" + this + \", retrying with PreloadJarTask\");",
          "1040:                 return call(new PreloadJarTask(jars, local));",
          "1041:             }",
          "1042:             throw ex;",
          "1043:         }",
          "",
          "---------------"
        ],
        "src/main/java/hudson/remoting/JarURLValidator.java||src/main/java/hudson/remoting/JarURLValidator.java": [
          "File: src/main/java/hudson/remoting/JarURLValidator.java -> src/main/java/hudson/remoting/JarURLValidator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package hudson.remoting;",
          "3: import java.io.IOException;",
          "4: import java.net.URL;",
          "12: @Deprecated",
          "13: public interface JarURLValidator {",
          "14:     void validate(URL url) throws IOException;",
          "15: }",
          "",
          "---------------"
        ],
        "src/main/java/hudson/remoting/PreloadJarTask.java||src/main/java/hudson/remoting/PreloadJarTask.java": [
          "File: src/main/java/hudson/remoting/PreloadJarTask.java -> src/main/java/hudson/remoting/PreloadJarTask.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: final class PreloadJarTask implements DelegatingCallable<Boolean, IOException> {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: @Deprecated",
          "",
          "---------------"
        ],
        "src/main/java/hudson/remoting/PreloadJarTask2.java||src/main/java/hudson/remoting/PreloadJarTask2.java": [
          "File: src/main/java/hudson/remoting/PreloadJarTask2.java -> src/main/java/hudson/remoting/PreloadJarTask2.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: package hudson.remoting;",
          "26: import edu.umd.cs.findbugs.annotations.CheckForNull;",
          "27: import java.io.IOException;",
          "28: import java.net.URL;",
          "29: import org.jenkinsci.remoting.Role;",
          "30: import org.jenkinsci.remoting.RoleChecker;",
          "40: final class PreloadJarTask2 implements DelegatingCallable<Boolean, IOException> {",
          "44:     private final URL[] jars;",
          "46:     private final byte[][] contents;",
          "52:     @CheckForNull",
          "53:     private transient ClassLoader target = null;",
          "55:     PreloadJarTask2(URL[] jars, byte[][] contents, @CheckForNull ClassLoader target) {",
          "56:         if (jars.length != contents.length) {",
          "57:             throw new IllegalArgumentException(\"Got \" + jars.length + \" jars and \" + contents.length + \" contents\");",
          "58:         }",
          "59:         this.jars = jars;",
          "60:         this.contents = contents;",
          "61:         this.target = target;",
          "62:     }",
          "64:     @Override",
          "65:     public ClassLoader getClassLoader() {",
          "66:         return target;",
          "67:     }",
          "69:     @Override",
          "70:     public Boolean call() throws IOException {",
          "71:         ClassLoader cl = Thread.currentThread().getContextClassLoader();",
          "73:         try {",
          "74:             if (!(cl instanceof RemoteClassLoader)) {",
          "75:                 return false;",
          "76:             }",
          "77:             final RemoteClassLoader rcl = (RemoteClassLoader) cl;",
          "79:             boolean r = false;",
          "80:             for (int i = 0; i < jars.length; i++) {",
          "81:                 r |= rcl.prefetch(jars[i], contents[i]);",
          "82:             }",
          "83:             return r;",
          "84:         } catch (IllegalAccessError iae) {",
          "86:             throw new IOException(iae);",
          "87:         }",
          "88:     }",
          "94:     @Override",
          "95:     public void checkRoles(RoleChecker checker) throws SecurityException {",
          "96:         checker.check(this, Role.UNKNOWN);",
          "97:     }",
          "99:     private static final long serialVersionUID = -773448303394727271L;",
          "100: }",
          "",
          "---------------"
        ],
        "src/main/java/hudson/remoting/RemoteClassLoader.java||src/main/java/hudson/remoting/RemoteClassLoader.java": [
          "File: src/main/java/hudson/remoting/RemoteClassLoader.java -> src/main/java/hudson/remoting/RemoteClassLoader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "687:         synchronized (prefetchedJars) {",
          "688:             if (prefetchedJars.contains(jar)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "689:     @Deprecated",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "698:         }",
          "699:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "716:         synchronized (prefetchedJars) {",
          "717:             if (prefetchedJars.contains(jar)) {",
          "718:                 return false;",
          "719:             }",
          "721:             String p = jar.getPath().replace('\\\\', '/');",
          "722:             p = Util.getBaseName(p);",
          "723:             File localJar = Util.makeResource(p, content);",
          "724:             addURL(localJar.toURI().toURL());",
          "725:             prefetchedJars.add(jar);",
          "726:             return true;",
          "727:         }",
          "728:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "846:     public interface IClassLoader {",
          "847:         byte[] fetchJar(URL url) throws IOException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "876:         @Deprecated",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "971:         @Override",
          "972:         @SuppressFBWarnings(",
          "973:                 value = \"URLCONNECTION_SSRF_FD\",",
          "975:         public byte[] fetchJar(URL url) throws IOException {",
          "976:             return Util.readFully(url.openStream());",
          "977:         }",
          "",
          "[Removed Lines]",
          "974:                 justification = \"This is only used for managing the jar cache as files.\")",
          "",
          "[Added Lines]",
          "1004:                 justification = \"URL validation is being done through JarURLValidator\")",
          "1006:             final Object o = channel.getProperty(JarURLValidator.class);",
          "1007:             if (o == null) {",
          "1008:                 final boolean disabled = Boolean.getBoolean(Channel.class.getName() + \".DISABLE_JAR_URL_VALIDATOR\");",
          "1009:                 LOGGER.log(Level.FINE, \"Default behavior for URL: \" + url + \" with disabled flag: \" + disabled);",
          "1010:                 if (!disabled) {",
          "1011:                     throw new IOException(",
          "1012:                             \"No hudson.remoting.JarURLValidator has been set for this channel, so all #fetchJar calls are rejected.\"",
          "1013:                                     + \" This is likely a bug in Jenkins.\"",
          "1014:                                     + \" As a workaround, try updating the agent.jar file.\");",
          "1015:                 }",
          "1016:             } else {",
          "1017:                 if (o instanceof JarURLValidator) {",
          "1018:                     ((JarURLValidator) o).validate(url);",
          "1019:                 } else {",
          "1020:                     throw new IOException(\"Unexpected channel property hudson.remoting.JarURLValidator value: \" + o);",
          "1021:                 }",
          "1022:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}