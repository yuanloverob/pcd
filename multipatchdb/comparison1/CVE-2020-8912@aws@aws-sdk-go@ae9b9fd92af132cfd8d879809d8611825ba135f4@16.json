{
  "cve_id": "CVE-2020-8912",
  "cve_desc": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b8066072e4e7872280568864d30dec9805d2ebb3",
      "candidate_info": {
        "commit_hash": "b8066072e4e7872280568864d30dec9805d2ebb3",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/b8066072e4e7872280568864d30dec9805d2ebb3",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/appconfig/2019-10-09/docs-2.json",
          "models/apis/codebuild/2016-10-06/api-2.json",
          "models/apis/codebuild/2016-10-06/docs-2.json",
          "models/apis/codebuild/2016-10-06/paginators-1.json",
          "models/apis/ec2/2016-11-15/api-2.json",
          "models/apis/ec2/2016-11-15/docs-2.json",
          "models/apis/lightsail/2016-11-28/api-2.json",
          "models/apis/lightsail/2016-11-28/docs-2.json",
          "models/apis/logs/2014-03-28/api-2.json",
          "models/apis/logs/2014-03-28/docs-2.json",
          "models/apis/route53/2013-04-01/api-2.json",
          "models/apis/ssm/2014-11-06/api-2.json",
          "models/endpoints/endpoints.json",
          "service/appconfig/api.go",
          "service/cloudwatchlogs/api.go",
          "service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "service/cloudwatchlogs/errors.go",
          "service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go",
          "service/lightsail/api.go",
          "service/route53/api.go",
          "service/ssm/api.go"
        ],
        "message": "Release v1.30.23 (2020-05-07) ===\n\n### Service Client Updates\n* `service/appconfig`: Updates service documentation\n* `service/codebuild`: Updates service API, documentation, and paginators\n  * Add COMMIT_MESSAGE enum for webhook filter types\n* `service/ec2`: Updates service API and documentation\n  * Amazon EC2 now adds warnings to identify issues when creating a launch template or launch template version.\n* `service/lightsail`: Updates service API and documentation\n  * This release adds support for the following options in instance public ports: Specify source IP addresses, specify ICMP protocol like PING, and enable/disable the Lightsail browser-based SSH and RDP clients' access to your instance.\n* `service/logs`: Updates service API and documentation\n  * Amazon CloudWatch Logs now offers the ability to interact with Logs Insights queries via the new PutQueryDefinition, DescribeQueryDefinitions, and DeleteQueryDefinition APIs.\n* `service/route53`: Updates service API\n  * Amazon Route 53 now supports the EU (Milan) Region (eu-south-1) for latency records, geoproximity records, and private DNS for Amazon VPCs in that region.\n* `service/ssm`: Updates service API\n  * This Patch Manager release supports creating patch baselines for Oracle Linux and Debian",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/appconfig/api.go||service/appconfig/api.go",
          "service/cloudwatchlogs/api.go||service/cloudwatchlogs/api.go",
          "service/cloudwatchlogs/cloudwatchlogsiface/interface.go||service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "service/cloudwatchlogs/errors.go||service/cloudwatchlogs/errors.go",
          "service/codebuild/api.go||service/codebuild/api.go",
          "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go",
          "service/ec2/api.go||service/ec2/api.go",
          "service/lightsail/api.go||service/lightsail/api.go",
          "service/route53/api.go||service/route53/api.go",
          "service/ssm/api.go||service/ssm/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3221:     \"eu-central-1\":   endpoint{},",
          "3222:     \"eu-west-1\":      endpoint{},",
          "3223:     \"eu-west-2\":      endpoint{},",
          "3224:     \"us-east-1\":      endpoint{},",
          "3225:     \"us-east-2\":      endpoint{},",
          "3226:     \"us-west-1\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3224:     \"sa-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3870:     \"eu-west-1\":      endpoint{},",
          "3871:     \"eu-west-2\":      endpoint{},",
          "3872:     \"eu-west-3\":      endpoint{},",
          "3878:    },",
          "3879:   },",
          "3880:   \"pinpoint\": service{",
          "",
          "[Removed Lines]",
          "3873:     \"me-south-1\":     endpoint{},",
          "3874:     \"us-east-1\":      endpoint{},",
          "3875:     \"us-east-2\":      endpoint{},",
          "3876:     \"us-west-1\":      endpoint{},",
          "3877:     \"us-west-2\":      endpoint{},",
          "",
          "[Added Lines]",
          "3874:     \"fips-ca-central-1\": endpoint{",
          "3875:      Hostname: \"outposts-fips.ca-central-1.amazonaws.com\",",
          "3876:      CredentialScope: credentialScope{",
          "3877:       Region: \"ca-central-1\",",
          "3878:      },",
          "3879:     },",
          "3880:     \"fips-us-east-1\": endpoint{",
          "3881:      Hostname: \"outposts-fips.us-east-1.amazonaws.com\",",
          "3882:      CredentialScope: credentialScope{",
          "3883:       Region: \"us-east-1\",",
          "3884:      },",
          "3885:     },",
          "3886:     \"fips-us-east-2\": endpoint{",
          "3887:      Hostname: \"outposts-fips.us-east-2.amazonaws.com\",",
          "3888:      CredentialScope: credentialScope{",
          "3889:       Region: \"us-east-2\",",
          "3890:      },",
          "3891:     },",
          "3892:     \"fips-us-west-1\": endpoint{",
          "3893:      Hostname: \"outposts-fips.us-west-1.amazonaws.com\",",
          "3894:      CredentialScope: credentialScope{",
          "3895:       Region: \"us-west-1\",",
          "3896:      },",
          "3897:     },",
          "3898:     \"fips-us-west-2\": endpoint{",
          "3899:      Hostname: \"outposts-fips.us-west-2.amazonaws.com\",",
          "3900:      CredentialScope: credentialScope{",
          "3901:       Region: \"us-west-2\",",
          "3902:      },",
          "3903:     },",
          "3904:     \"me-south-1\": endpoint{},",
          "3905:     \"us-east-1\":  endpoint{},",
          "3906:     \"us-east-2\":  endpoint{},",
          "3907:     \"us-west-1\":  endpoint{},",
          "3908:     \"us-west-2\":  endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4681:   \"securityhub\": service{",
          "4683:    Endpoints: endpoints{",
          "4684:     \"ap-east-1\":      endpoint{},",
          "4685:     \"ap-northeast-1\": endpoint{},",
          "4686:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4715:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4690:     \"ca-central-1\":   endpoint{},",
          "4691:     \"eu-central-1\":   endpoint{},",
          "4692:     \"eu-north-1\":     endpoint{},",
          "4693:     \"eu-west-1\":      endpoint{},",
          "4694:     \"eu-west-2\":      endpoint{},",
          "4695:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4725:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6814:   \"cloudtrail\": service{",
          "6816:    Endpoints: endpoints{",
          "6819:    },",
          "6820:   },",
          "6821:   \"codebuild\": service{",
          "",
          "[Removed Lines]",
          "6817:     \"us-gov-east-1\": endpoint{},",
          "6818:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "6850:     \"us-gov-east-1\": endpoint{",
          "6851:      Hostname: \"cloudtrail.us-gov-east-1.amazonaws.com\",",
          "6852:      CredentialScope: credentialScope{",
          "6853:       Region: \"us-gov-east-1\",",
          "6854:      },",
          "6855:     },",
          "6856:     \"us-gov-west-1\": endpoint{",
          "6857:      Hostname: \"cloudtrail.us-gov-west-1.amazonaws.com\",",
          "6858:      CredentialScope: credentialScope{",
          "6859:       Region: \"us-gov-west-1\",",
          "6860:      },",
          "6861:     },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7149:   \"events\": service{",
          "7151:    Endpoints: endpoints{",
          "7154:    },",
          "7155:   },",
          "7156:   \"firehose\": service{",
          "",
          "[Removed Lines]",
          "7152:     \"us-gov-east-1\": endpoint{},",
          "7153:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "7195:     \"us-gov-east-1\": endpoint{",
          "7196:      Hostname: \"events.us-gov-east-1.amazonaws.com\",",
          "7197:      CredentialScope: credentialScope{",
          "7198:       Region: \"us-gov-east-1\",",
          "7199:      },",
          "7200:     },",
          "7201:     \"us-gov-west-1\": endpoint{",
          "7202:      Hostname: \"events.us-gov-west-1.amazonaws.com\",",
          "7203:      CredentialScope: credentialScope{",
          "7204:       Region: \"us-gov-west-1\",",
          "7205:      },",
          "7206:     },",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7281:     \"us-gov-west-1\": endpoint{},",
          "7282:    },",
          "7283:   },",
          "7284:   \"kinesis\": service{",
          "7286:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7337:   \"kafka\": service{",
          "7339:    Endpoints: endpoints{",
          "7340:     \"us-gov-east-1\": endpoint{},",
          "7341:     \"us-gov-west-1\": endpoint{},",
          "7342:    },",
          "7343:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7415:   \"outposts\": service{",
          "7417:    Endpoints: endpoints{",
          "7420:    },",
          "7421:   },",
          "7422:   \"pinpoint\": service{",
          "",
          "[Removed Lines]",
          "7418:     \"us-gov-east-1\": endpoint{},",
          "7419:     \"us-gov-west-1\": endpoint{},",
          "",
          "[Added Lines]",
          "7478:     \"us-gov-east-1\": endpoint{",
          "7479:      Hostname: \"outposts.us-gov-east-1.amazonaws.com\",",
          "7480:      CredentialScope: credentialScope{",
          "7481:       Region: \"us-gov-east-1\",",
          "7482:      },",
          "7483:     },",
          "7484:     \"us-gov-west-1\": endpoint{",
          "7485:      Hostname: \"outposts.us-gov-west-1.amazonaws.com\",",
          "7486:      CredentialScope: credentialScope{",
          "7487:       Region: \"us-gov-west-1\",",
          "7488:      },",
          "7489:     },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.22\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.23\"",
          "",
          "---------------"
        ],
        "service/appconfig/api.go||service/appconfig/api.go": [
          "File: service/appconfig/api.go -> service/appconfig/api.go"
        ],
        "service/cloudwatchlogs/api.go||service/cloudwatchlogs/api.go": [
          "File: service/cloudwatchlogs/api.go -> service/cloudwatchlogs/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "896:  return out, req.Send()",
          "897: }",
          "899: const opDeleteResourcePolicy = \"DeleteResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "900: const opDeleteQueryDefinition = \"DeleteQueryDefinition\"",
          "926: func (c *CloudWatchLogs) DeleteQueryDefinitionRequest(input *DeleteQueryDefinitionInput) (req *request.Request, output *DeleteQueryDefinitionOutput) {",
          "927:  op := &request.Operation{",
          "928:   Name:       opDeleteQueryDefinition,",
          "929:   HTTPMethod: \"POST\",",
          "930:   HTTPPath:   \"/\",",
          "931:  }",
          "933:  if input == nil {",
          "934:   input = &DeleteQueryDefinitionInput{}",
          "935:  }",
          "937:  output = &DeleteQueryDefinitionOutput{}",
          "938:  req = c.newRequest(op, input, output)",
          "939:  return",
          "940: }",
          "962: func (c *CloudWatchLogs) DeleteQueryDefinition(input *DeleteQueryDefinitionInput) (*DeleteQueryDefinitionOutput, error) {",
          "963:  req, out := c.DeleteQueryDefinitionRequest(input)",
          "964:  return out, req.Send()",
          "965: }",
          "976: func (c *CloudWatchLogs) DeleteQueryDefinitionWithContext(ctx aws.Context, input *DeleteQueryDefinitionInput, opts ...request.Option) (*DeleteQueryDefinitionOutput, error) {",
          "977:  req, out := c.DeleteQueryDefinitionRequest(input)",
          "978:  req.SetContext(ctx)",
          "979:  req.ApplyOptions(opts...)",
          "980:  return out, req.Send()",
          "981: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1914:  return out, req.Send()",
          "1915: }",
          "1917: const opDescribeResourcePolicies = \"DescribeResourcePolicies\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2001: const opDescribeQueryDefinitions = \"DescribeQueryDefinitions\"",
          "2027: func (c *CloudWatchLogs) DescribeQueryDefinitionsRequest(input *DescribeQueryDefinitionsInput) (req *request.Request, output *DescribeQueryDefinitionsOutput) {",
          "2028:  op := &request.Operation{",
          "2029:   Name:       opDescribeQueryDefinitions,",
          "2030:   HTTPMethod: \"POST\",",
          "2031:   HTTPPath:   \"/\",",
          "2032:  }",
          "2034:  if input == nil {",
          "2035:   input = &DescribeQueryDefinitionsInput{}",
          "2036:  }",
          "2038:  output = &DescribeQueryDefinitionsOutput{}",
          "2039:  req = c.newRequest(op, input, output)",
          "2040:  return",
          "2041: }",
          "2060: func (c *CloudWatchLogs) DescribeQueryDefinitions(input *DescribeQueryDefinitionsInput) (*DescribeQueryDefinitionsOutput, error) {",
          "2061:  req, out := c.DescribeQueryDefinitionsRequest(input)",
          "2062:  return out, req.Send()",
          "2063: }",
          "2074: func (c *CloudWatchLogs) DescribeQueryDefinitionsWithContext(ctx aws.Context, input *DescribeQueryDefinitionsInput, opts ...request.Option) (*DescribeQueryDefinitionsOutput, error) {",
          "2075:  req, out := c.DescribeQueryDefinitionsRequest(input)",
          "2076:  req.SetContext(ctx)",
          "2077:  req.ApplyOptions(opts...)",
          "2078:  return out, req.Send()",
          "2079: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3319:  return out, req.Send()",
          "3320: }",
          "3322: const opPutResourcePolicy = \"PutResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3491: const opPutQueryDefinition = \"PutQueryDefinition\"",
          "3517: func (c *CloudWatchLogs) PutQueryDefinitionRequest(input *PutQueryDefinitionInput) (req *request.Request, output *PutQueryDefinitionOutput) {",
          "3518:  op := &request.Operation{",
          "3519:   Name:       opPutQueryDefinition,",
          "3520:   HTTPMethod: \"POST\",",
          "3521:   HTTPPath:   \"/\",",
          "3522:  }",
          "3524:  if input == nil {",
          "3525:   input = &PutQueryDefinitionInput{}",
          "3526:  }",
          "3528:  output = &PutQueryDefinitionOutput{}",
          "3529:  req = c.newRequest(op, input, output)",
          "3530:  return",
          "3531: }",
          "3553: func (c *CloudWatchLogs) PutQueryDefinition(input *PutQueryDefinitionInput) (*PutQueryDefinitionOutput, error) {",
          "3554:  req, out := c.PutQueryDefinitionRequest(input)",
          "3555:  return out, req.Send()",
          "3556: }",
          "3567: func (c *CloudWatchLogs) PutQueryDefinitionWithContext(ctx aws.Context, input *PutQueryDefinitionInput, opts ...request.Option) (*PutQueryDefinitionOutput, error) {",
          "3568:  req, out := c.PutQueryDefinitionRequest(input)",
          "3569:  req.SetContext(ctx)",
          "3570:  req.ApplyOptions(opts...)",
          "3571:  return out, req.Send()",
          "3572: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4793:  return s.String()",
          "4794: }",
          "4796: type DeleteResourcePolicyInput struct {",
          "4797:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5049: type DeleteQueryDefinitionInput struct {",
          "5050:  _ struct{} `type:\"structure\"`",
          "5053:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\" required:\"true\"`",
          "5054: }",
          "5057: func (s DeleteQueryDefinitionInput) String() string {",
          "5058:  return awsutil.Prettify(s)",
          "5059: }",
          "5062: func (s DeleteQueryDefinitionInput) GoString() string {",
          "5063:  return s.String()",
          "5064: }",
          "5067: func (s *DeleteQueryDefinitionInput) Validate() error {",
          "5068:  invalidParams := request.ErrInvalidParams{Context: \"DeleteQueryDefinitionInput\"}",
          "5069:  if s.QueryDefinitionId == nil {",
          "5070:   invalidParams.Add(request.NewErrParamRequired(\"QueryDefinitionId\"))",
          "5071:  }",
          "5073:  if invalidParams.Len() > 0 {",
          "5074:   return invalidParams",
          "5075:  }",
          "5076:  return nil",
          "5077: }",
          "5080: func (s *DeleteQueryDefinitionInput) SetQueryDefinitionId(v string) *DeleteQueryDefinitionInput {",
          "5081:  s.QueryDefinitionId = &v",
          "5082:  return s",
          "5083: }",
          "5085: type DeleteQueryDefinitionOutput struct {",
          "5086:  _ struct{} `type:\"structure\"`",
          "5088:  Success *bool `locationName:\"success\" type:\"boolean\"`",
          "5089: }",
          "5092: func (s DeleteQueryDefinitionOutput) String() string {",
          "5093:  return awsutil.Prettify(s)",
          "5094: }",
          "5097: func (s DeleteQueryDefinitionOutput) GoString() string {",
          "5098:  return s.String()",
          "5099: }",
          "5102: func (s *DeleteQueryDefinitionOutput) SetSuccess(v bool) *DeleteQueryDefinitionOutput {",
          "5103:  s.Success = &v",
          "5104:  return s",
          "5105: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5631:  return s",
          "5632: }",
          "5634: type DescribeResourcePoliciesInput struct {",
          "5635:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5945: type DescribeQueryDefinitionsInput struct {",
          "5946:  _ struct{} `type:\"structure\"`",
          "5948:  MaxResults *int64 `locationName:\"maxResults\" min:\"1\" type:\"integer\"`",
          "5952:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "5954:  QueryDefinitionNamePrefix *string `locationName:\"queryDefinitionNamePrefix\" min:\"1\" type:\"string\"`",
          "5955: }",
          "5958: func (s DescribeQueryDefinitionsInput) String() string {",
          "5959:  return awsutil.Prettify(s)",
          "5960: }",
          "5963: func (s DescribeQueryDefinitionsInput) GoString() string {",
          "5964:  return s.String()",
          "5965: }",
          "5968: func (s *DescribeQueryDefinitionsInput) Validate() error {",
          "5969:  invalidParams := request.ErrInvalidParams{Context: \"DescribeQueryDefinitionsInput\"}",
          "5970:  if s.MaxResults != nil && *s.MaxResults < 1 {",
          "5971:   invalidParams.Add(request.NewErrParamMinValue(\"MaxResults\", 1))",
          "5972:  }",
          "5973:  if s.NextToken != nil && len(*s.NextToken) < 1 {",
          "5974:   invalidParams.Add(request.NewErrParamMinLen(\"NextToken\", 1))",
          "5975:  }",
          "5976:  if s.QueryDefinitionNamePrefix != nil && len(*s.QueryDefinitionNamePrefix) < 1 {",
          "5977:   invalidParams.Add(request.NewErrParamMinLen(\"QueryDefinitionNamePrefix\", 1))",
          "5978:  }",
          "5980:  if invalidParams.Len() > 0 {",
          "5981:   return invalidParams",
          "5982:  }",
          "5983:  return nil",
          "5984: }",
          "5987: func (s *DescribeQueryDefinitionsInput) SetMaxResults(v int64) *DescribeQueryDefinitionsInput {",
          "5988:  s.MaxResults = &v",
          "5989:  return s",
          "5990: }",
          "5993: func (s *DescribeQueryDefinitionsInput) SetNextToken(v string) *DescribeQueryDefinitionsInput {",
          "5994:  s.NextToken = &v",
          "5995:  return s",
          "5996: }",
          "5999: func (s *DescribeQueryDefinitionsInput) SetQueryDefinitionNamePrefix(v string) *DescribeQueryDefinitionsInput {",
          "6000:  s.QueryDefinitionNamePrefix = &v",
          "6001:  return s",
          "6002: }",
          "6004: type DescribeQueryDefinitionsOutput struct {",
          "6005:  _ struct{} `type:\"structure\"`",
          "6009:  NextToken *string `locationName:\"nextToken\" min:\"1\" type:\"string\"`",
          "6011:  QueryDefinitions []*QueryDefinition `locationName:\"queryDefinitions\" type:\"list\"`",
          "6012: }",
          "6015: func (s DescribeQueryDefinitionsOutput) String() string {",
          "6016:  return awsutil.Prettify(s)",
          "6017: }",
          "6020: func (s DescribeQueryDefinitionsOutput) GoString() string {",
          "6021:  return s.String()",
          "6022: }",
          "6025: func (s *DescribeQueryDefinitionsOutput) SetNextToken(v string) *DescribeQueryDefinitionsOutput {",
          "6026:  s.NextToken = &v",
          "6027:  return s",
          "6028: }",
          "6031: func (s *DescribeQueryDefinitionsOutput) SetQueryDefinitions(v []*QueryDefinition) *DescribeQueryDefinitionsOutput {",
          "6032:  s.QueryDefinitions = v",
          "6033:  return s",
          "6034: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8111:  return s.String()",
          "8112: }",
          "8114: type PutResourcePolicyInput struct {",
          "8115:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8518: type PutQueryDefinitionInput struct {",
          "8519:  _ struct{} `type:\"structure\"`",
          "8521:  LogGroupNames []*string `locationName:\"logGroupNames\" type:\"list\"`",
          "8524:  Name *string `locationName:\"name\" min:\"1\" type:\"string\" required:\"true\"`",
          "8526:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8529:  QueryString *string `locationName:\"queryString\" min:\"1\" type:\"string\" required:\"true\"`",
          "8530: }",
          "8533: func (s PutQueryDefinitionInput) String() string {",
          "8534:  return awsutil.Prettify(s)",
          "8535: }",
          "8538: func (s PutQueryDefinitionInput) GoString() string {",
          "8539:  return s.String()",
          "8540: }",
          "8543: func (s *PutQueryDefinitionInput) Validate() error {",
          "8544:  invalidParams := request.ErrInvalidParams{Context: \"PutQueryDefinitionInput\"}",
          "8545:  if s.Name == nil {",
          "8546:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "8547:  }",
          "8548:  if s.Name != nil && len(*s.Name) < 1 {",
          "8549:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "8550:  }",
          "8551:  if s.QueryString == nil {",
          "8552:   invalidParams.Add(request.NewErrParamRequired(\"QueryString\"))",
          "8553:  }",
          "8554:  if s.QueryString != nil && len(*s.QueryString) < 1 {",
          "8555:   invalidParams.Add(request.NewErrParamMinLen(\"QueryString\", 1))",
          "8556:  }",
          "8558:  if invalidParams.Len() > 0 {",
          "8559:   return invalidParams",
          "8560:  }",
          "8561:  return nil",
          "8562: }",
          "8565: func (s *PutQueryDefinitionInput) SetLogGroupNames(v []*string) *PutQueryDefinitionInput {",
          "8566:  s.LogGroupNames = v",
          "8567:  return s",
          "8568: }",
          "8571: func (s *PutQueryDefinitionInput) SetName(v string) *PutQueryDefinitionInput {",
          "8572:  s.Name = &v",
          "8573:  return s",
          "8574: }",
          "8577: func (s *PutQueryDefinitionInput) SetQueryDefinitionId(v string) *PutQueryDefinitionInput {",
          "8578:  s.QueryDefinitionId = &v",
          "8579:  return s",
          "8580: }",
          "8583: func (s *PutQueryDefinitionInput) SetQueryString(v string) *PutQueryDefinitionInput {",
          "8584:  s.QueryString = &v",
          "8585:  return s",
          "8586: }",
          "8588: type PutQueryDefinitionOutput struct {",
          "8589:  _ struct{} `type:\"structure\"`",
          "8591:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8592: }",
          "8595: func (s PutQueryDefinitionOutput) String() string {",
          "8596:  return awsutil.Prettify(s)",
          "8597: }",
          "8600: func (s PutQueryDefinitionOutput) GoString() string {",
          "8601:  return s.String()",
          "8602: }",
          "8605: func (s *PutQueryDefinitionOutput) SetQueryDefinitionId(v string) *PutQueryDefinitionOutput {",
          "8606:  s.QueryDefinitionId = &v",
          "8607:  return s",
          "8608: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8472:  return s",
          "8473: }",
          "8477: type QueryInfo struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8972: type QueryDefinition struct {",
          "8973:  _ struct{} `type:\"structure\"`",
          "8975:  LastModified *int64 `locationName:\"lastModified\" type:\"long\"`",
          "8977:  LogGroupNames []*string `locationName:\"logGroupNames\" type:\"list\"`",
          "8979:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
          "8981:  QueryDefinitionId *string `locationName:\"queryDefinitionId\" type:\"string\"`",
          "8983:  QueryString *string `locationName:\"queryString\" min:\"1\" type:\"string\"`",
          "8984: }",
          "8987: func (s QueryDefinition) String() string {",
          "8988:  return awsutil.Prettify(s)",
          "8989: }",
          "8992: func (s QueryDefinition) GoString() string {",
          "8993:  return s.String()",
          "8994: }",
          "8997: func (s *QueryDefinition) SetLastModified(v int64) *QueryDefinition {",
          "8998:  s.LastModified = &v",
          "8999:  return s",
          "9000: }",
          "9003: func (s *QueryDefinition) SetLogGroupNames(v []*string) *QueryDefinition {",
          "9004:  s.LogGroupNames = v",
          "9005:  return s",
          "9006: }",
          "9009: func (s *QueryDefinition) SetName(v string) *QueryDefinition {",
          "9010:  s.Name = &v",
          "9011:  return s",
          "9012: }",
          "9015: func (s *QueryDefinition) SetQueryDefinitionId(v string) *QueryDefinition {",
          "9016:  s.QueryDefinitionId = &v",
          "9017:  return s",
          "9018: }",
          "9021: func (s *QueryDefinition) SetQueryString(v string) *QueryDefinition {",
          "9022:  s.QueryString = &v",
          "9023:  return s",
          "9024: }",
          "",
          "---------------"
        ],
        "service/cloudwatchlogs/cloudwatchlogsiface/interface.go||service/cloudwatchlogs/cloudwatchlogsiface/interface.go": [
          "File: service/cloudwatchlogs/cloudwatchlogsiface/interface.go -> service/cloudwatchlogs/cloudwatchlogsiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  DeleteMetricFilterWithContext(aws.Context, *cloudwatchlogs.DeleteMetricFilterInput, ...request.Option) (*cloudwatchlogs.DeleteMetricFilterOutput, error)",
          "97:  DeleteMetricFilterRequest(*cloudwatchlogs.DeleteMetricFilterInput) (*request.Request, *cloudwatchlogs.DeleteMetricFilterOutput)",
          "99:  DeleteResourcePolicy(*cloudwatchlogs.DeleteResourcePolicyInput) (*cloudwatchlogs.DeleteResourcePolicyOutput, error)",
          "100:  DeleteResourcePolicyWithContext(aws.Context, *cloudwatchlogs.DeleteResourcePolicyInput, ...request.Option) (*cloudwatchlogs.DeleteResourcePolicyOutput, error)",
          "101:  DeleteResourcePolicyRequest(*cloudwatchlogs.DeleteResourcePolicyInput) (*request.Request, *cloudwatchlogs.DeleteResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:  DeleteQueryDefinition(*cloudwatchlogs.DeleteQueryDefinitionInput) (*cloudwatchlogs.DeleteQueryDefinitionOutput, error)",
          "100:  DeleteQueryDefinitionWithContext(aws.Context, *cloudwatchlogs.DeleteQueryDefinitionInput, ...request.Option) (*cloudwatchlogs.DeleteQueryDefinitionOutput, error)",
          "101:  DeleteQueryDefinitionRequest(*cloudwatchlogs.DeleteQueryDefinitionInput) (*request.Request, *cloudwatchlogs.DeleteQueryDefinitionOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:  DescribeQueriesWithContext(aws.Context, *cloudwatchlogs.DescribeQueriesInput, ...request.Option) (*cloudwatchlogs.DescribeQueriesOutput, error)",
          "145:  DescribeQueriesRequest(*cloudwatchlogs.DescribeQueriesInput) (*request.Request, *cloudwatchlogs.DescribeQueriesOutput)",
          "147:  DescribeResourcePolicies(*cloudwatchlogs.DescribeResourcePoliciesInput) (*cloudwatchlogs.DescribeResourcePoliciesOutput, error)",
          "148:  DescribeResourcePoliciesWithContext(aws.Context, *cloudwatchlogs.DescribeResourcePoliciesInput, ...request.Option) (*cloudwatchlogs.DescribeResourcePoliciesOutput, error)",
          "149:  DescribeResourcePoliciesRequest(*cloudwatchlogs.DescribeResourcePoliciesInput) (*request.Request, *cloudwatchlogs.DescribeResourcePoliciesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:  DescribeQueryDefinitions(*cloudwatchlogs.DescribeQueryDefinitionsInput) (*cloudwatchlogs.DescribeQueryDefinitionsOutput, error)",
          "152:  DescribeQueryDefinitionsWithContext(aws.Context, *cloudwatchlogs.DescribeQueryDefinitionsInput, ...request.Option) (*cloudwatchlogs.DescribeQueryDefinitionsOutput, error)",
          "153:  DescribeQueryDefinitionsRequest(*cloudwatchlogs.DescribeQueryDefinitionsInput) (*request.Request, *cloudwatchlogs.DescribeQueryDefinitionsOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205:  PutMetricFilterWithContext(aws.Context, *cloudwatchlogs.PutMetricFilterInput, ...request.Option) (*cloudwatchlogs.PutMetricFilterOutput, error)",
          "206:  PutMetricFilterRequest(*cloudwatchlogs.PutMetricFilterInput) (*request.Request, *cloudwatchlogs.PutMetricFilterOutput)",
          "208:  PutResourcePolicy(*cloudwatchlogs.PutResourcePolicyInput) (*cloudwatchlogs.PutResourcePolicyOutput, error)",
          "209:  PutResourcePolicyWithContext(aws.Context, *cloudwatchlogs.PutResourcePolicyInput, ...request.Option) (*cloudwatchlogs.PutResourcePolicyOutput, error)",
          "210:  PutResourcePolicyRequest(*cloudwatchlogs.PutResourcePolicyInput) (*request.Request, *cloudwatchlogs.PutResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:  PutQueryDefinition(*cloudwatchlogs.PutQueryDefinitionInput) (*cloudwatchlogs.PutQueryDefinitionOutput, error)",
          "217:  PutQueryDefinitionWithContext(aws.Context, *cloudwatchlogs.PutQueryDefinitionInput, ...request.Option) (*cloudwatchlogs.PutQueryDefinitionOutput, error)",
          "218:  PutQueryDefinitionRequest(*cloudwatchlogs.PutQueryDefinitionInput) (*request.Request, *cloudwatchlogs.PutQueryDefinitionOutput)",
          "",
          "---------------"
        ],
        "service/cloudwatchlogs/errors.go||service/cloudwatchlogs/errors.go": [
          "File: service/cloudwatchlogs/errors.go -> service/cloudwatchlogs/errors.go"
        ],
        "service/codebuild/api.go||service/codebuild/api.go": [
          "File: service/codebuild/api.go -> service/codebuild/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1205:   Name:       opDescribeTestCases,",
          "1206:   HTTPMethod: \"POST\",",
          "1207:   HTTPPath:   \"/\",",
          "1208:  }",
          "1210:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1208:   Paginator: &request.Paginator{",
          "1209:    InputTokens:     []string{\"nextToken\"},",
          "1210:    OutputTokens:    []string{\"nextToken\"},",
          "1211:    LimitToken:      \"maxResults\",",
          "1212:    TruncationToken: \"\",",
          "1213:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1256:  return out, req.Send()",
          "1257: }",
          "1259: const opGetResourcePolicy = \"GetResourcePolicy\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1282: func (c *CodeBuild) DescribeTestCasesPages(input *DescribeTestCasesInput, fn func(*DescribeTestCasesOutput, bool) bool) error {",
          "1283:  return c.DescribeTestCasesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1284: }",
          "1293: func (c *CodeBuild) DescribeTestCasesPagesWithContext(ctx aws.Context, input *DescribeTestCasesInput, fn func(*DescribeTestCasesOutput, bool) bool, opts ...request.Option) error {",
          "1294:  p := request.Pagination{",
          "1295:   NewRequest: func() (*request.Request, error) {",
          "1296:    var inCpy *DescribeTestCasesInput",
          "1297:    if input != nil {",
          "1298:     tmp := *input",
          "1299:     inCpy = &tmp",
          "1300:    }",
          "1301:    req, _ := c.DescribeTestCasesRequest(inCpy)",
          "1302:    req.SetContext(ctx)",
          "1303:    req.ApplyOptions(opts...)",
          "1304:    return req, nil",
          "1305:   },",
          "1306:  }",
          "1308:  for p.Next() {",
          "1309:   if !fn(p.Page().(*DescribeTestCasesOutput), !p.HasNextPage()) {",
          "1310:    break",
          "1311:   }",
          "1312:  }",
          "1314:  return p.Err()",
          "1315: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1539:   Name:       opListBuilds,",
          "1540:   HTTPMethod: \"POST\",",
          "1541:   HTTPPath:   \"/\",",
          "1542:  }",
          "1544:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1600:   Paginator: &request.Paginator{",
          "1601:    InputTokens:     []string{\"nextToken\"},",
          "1602:    OutputTokens:    []string{\"nextToken\"},",
          "1603:    LimitToken:      \"\",",
          "1604:    TruncationToken: \"\",",
          "1605:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1587:  return out, req.Send()",
          "1588: }",
          "1590: const opListBuildsForProject = \"ListBuildsForProject\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1671: func (c *CodeBuild) ListBuildsPages(input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool) error {",
          "1672:  return c.ListBuildsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1673: }",
          "1682: func (c *CodeBuild) ListBuildsPagesWithContext(ctx aws.Context, input *ListBuildsInput, fn func(*ListBuildsOutput, bool) bool, opts ...request.Option) error {",
          "1683:  p := request.Pagination{",
          "1684:   NewRequest: func() (*request.Request, error) {",
          "1685:    var inCpy *ListBuildsInput",
          "1686:    if input != nil {",
          "1687:     tmp := *input",
          "1688:     inCpy = &tmp",
          "1689:    }",
          "1690:    req, _ := c.ListBuildsRequest(inCpy)",
          "1691:    req.SetContext(ctx)",
          "1692:    req.ApplyOptions(opts...)",
          "1693:    return req, nil",
          "1694:   },",
          "1695:  }",
          "1697:  for p.Next() {",
          "1698:   if !fn(p.Page().(*ListBuildsOutput), !p.HasNextPage()) {",
          "1699:    break",
          "1700:   }",
          "1701:  }",
          "1703:  return p.Err()",
          "1704: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1618:   Name:       opListBuildsForProject,",
          "1619:   HTTPMethod: \"POST\",",
          "1620:   HTTPPath:   \"/\",",
          "1621:  }",
          "1623:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1737:   Paginator: &request.Paginator{",
          "1738:    InputTokens:     []string{\"nextToken\"},",
          "1739:    OutputTokens:    []string{\"nextToken\"},",
          "1740:    LimitToken:      \"\",",
          "1741:    TruncationToken: \"\",",
          "1742:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1670:  return out, req.Send()",
          "1671: }",
          "1673: const opListCuratedEnvironmentImages = \"ListCuratedEnvironmentImages\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1812: func (c *CodeBuild) ListBuildsForProjectPages(input *ListBuildsForProjectInput, fn func(*ListBuildsForProjectOutput, bool) bool) error {",
          "1813:  return c.ListBuildsForProjectPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1814: }",
          "1823: func (c *CodeBuild) ListBuildsForProjectPagesWithContext(ctx aws.Context, input *ListBuildsForProjectInput, fn func(*ListBuildsForProjectOutput, bool) bool, opts ...request.Option) error {",
          "1824:  p := request.Pagination{",
          "1825:   NewRequest: func() (*request.Request, error) {",
          "1826:    var inCpy *ListBuildsForProjectInput",
          "1827:    if input != nil {",
          "1828:     tmp := *input",
          "1829:     inCpy = &tmp",
          "1830:    }",
          "1831:    req, _ := c.ListBuildsForProjectRequest(inCpy)",
          "1832:    req.SetContext(ctx)",
          "1833:    req.ApplyOptions(opts...)",
          "1834:    return req, nil",
          "1835:   },",
          "1836:  }",
          "1838:  for p.Next() {",
          "1839:   if !fn(p.Page().(*ListBuildsForProjectOutput), !p.HasNextPage()) {",
          "1840:    break",
          "1841:   }",
          "1842:  }",
          "1844:  return p.Err()",
          "1845: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1775:   Name:       opListProjects,",
          "1776:   HTTPMethod: \"POST\",",
          "1777:   HTTPPath:   \"/\",",
          "1778:  }",
          "1780:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1952:   Paginator: &request.Paginator{",
          "1953:    InputTokens:     []string{\"nextToken\"},",
          "1954:    OutputTokens:    []string{\"nextToken\"},",
          "1955:    LimitToken:      \"\",",
          "1956:    TruncationToken: \"\",",
          "1957:   },",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1824:  return out, req.Send()",
          "1825: }",
          "1827: const opListReportGroups = \"ListReportGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024: func (c *CodeBuild) ListProjectsPages(input *ListProjectsInput, fn func(*ListProjectsOutput, bool) bool) error {",
          "2025:  return c.ListProjectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2026: }",
          "2035: func (c *CodeBuild) ListProjectsPagesWithContext(ctx aws.Context, input *ListProjectsInput, fn func(*ListProjectsOutput, bool) bool, opts ...request.Option) error {",
          "2036:  p := request.Pagination{",
          "2037:   NewRequest: func() (*request.Request, error) {",
          "2038:    var inCpy *ListProjectsInput",
          "2039:    if input != nil {",
          "2040:     tmp := *input",
          "2041:     inCpy = &tmp",
          "2042:    }",
          "2043:    req, _ := c.ListProjectsRequest(inCpy)",
          "2044:    req.SetContext(ctx)",
          "2045:    req.ApplyOptions(opts...)",
          "2046:    return req, nil",
          "2047:   },",
          "2048:  }",
          "2050:  for p.Next() {",
          "2051:   if !fn(p.Page().(*ListProjectsOutput), !p.HasNextPage()) {",
          "2052:    break",
          "2053:   }",
          "2054:  }",
          "2056:  return p.Err()",
          "2057: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1855:   Name:       opListReportGroups,",
          "1856:   HTTPMethod: \"POST\",",
          "1857:   HTTPPath:   \"/\",",
          "1858:  }",
          "1860:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2090:   Paginator: &request.Paginator{",
          "2091:    InputTokens:     []string{\"nextToken\"},",
          "2092:    OutputTokens:    []string{\"nextToken\"},",
          "2093:    LimitToken:      \"maxResults\",",
          "2094:    TruncationToken: \"\",",
          "2095:   },",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1903:  return out, req.Send()",
          "1904: }",
          "1906: const opListReports = \"ListReports\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2161: func (c *CodeBuild) ListReportGroupsPages(input *ListReportGroupsInput, fn func(*ListReportGroupsOutput, bool) bool) error {",
          "2162:  return c.ListReportGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2163: }",
          "2172: func (c *CodeBuild) ListReportGroupsPagesWithContext(ctx aws.Context, input *ListReportGroupsInput, fn func(*ListReportGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2173:  p := request.Pagination{",
          "2174:   NewRequest: func() (*request.Request, error) {",
          "2175:    var inCpy *ListReportGroupsInput",
          "2176:    if input != nil {",
          "2177:     tmp := *input",
          "2178:     inCpy = &tmp",
          "2179:    }",
          "2180:    req, _ := c.ListReportGroupsRequest(inCpy)",
          "2181:    req.SetContext(ctx)",
          "2182:    req.ApplyOptions(opts...)",
          "2183:    return req, nil",
          "2184:   },",
          "2185:  }",
          "2187:  for p.Next() {",
          "2188:   if !fn(p.Page().(*ListReportGroupsOutput), !p.HasNextPage()) {",
          "2189:    break",
          "2190:   }",
          "2191:  }",
          "2193:  return p.Err()",
          "2194: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1934:   Name:       opListReports,",
          "1935:   HTTPMethod: \"POST\",",
          "1936:   HTTPPath:   \"/\",",
          "1937:  }",
          "1939:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2227:   Paginator: &request.Paginator{",
          "2228:    InputTokens:     []string{\"nextToken\"},",
          "2229:    OutputTokens:    []string{\"nextToken\"},",
          "2230:    LimitToken:      \"maxResults\",",
          "2231:    TruncationToken: \"\",",
          "2232:   },",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1982:  return out, req.Send()",
          "1983: }",
          "1985: const opListReportsForReportGroup = \"ListReportsForReportGroup\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2298: func (c *CodeBuild) ListReportsPages(input *ListReportsInput, fn func(*ListReportsOutput, bool) bool) error {",
          "2299:  return c.ListReportsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2300: }",
          "2309: func (c *CodeBuild) ListReportsPagesWithContext(ctx aws.Context, input *ListReportsInput, fn func(*ListReportsOutput, bool) bool, opts ...request.Option) error {",
          "2310:  p := request.Pagination{",
          "2311:   NewRequest: func() (*request.Request, error) {",
          "2312:    var inCpy *ListReportsInput",
          "2313:    if input != nil {",
          "2314:     tmp := *input",
          "2315:     inCpy = &tmp",
          "2316:    }",
          "2317:    req, _ := c.ListReportsRequest(inCpy)",
          "2318:    req.SetContext(ctx)",
          "2319:    req.ApplyOptions(opts...)",
          "2320:    return req, nil",
          "2321:   },",
          "2322:  }",
          "2324:  for p.Next() {",
          "2325:   if !fn(p.Page().(*ListReportsOutput), !p.HasNextPage()) {",
          "2326:    break",
          "2327:   }",
          "2328:  }",
          "2330:  return p.Err()",
          "2331: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2013:   Name:       opListReportsForReportGroup,",
          "2014:   HTTPMethod: \"POST\",",
          "2015:   HTTPPath:   \"/\",",
          "2016:  }",
          "2018:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2364:   Paginator: &request.Paginator{",
          "2365:    InputTokens:     []string{\"nextToken\"},",
          "2366:    OutputTokens:    []string{\"nextToken\"},",
          "2367:    LimitToken:      \"maxResults\",",
          "2368:    TruncationToken: \"\",",
          "2369:   },",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2064:  return out, req.Send()",
          "2065: }",
          "2067: const opListSharedProjects = \"ListSharedProjects\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2438: func (c *CodeBuild) ListReportsForReportGroupPages(input *ListReportsForReportGroupInput, fn func(*ListReportsForReportGroupOutput, bool) bool) error {",
          "2439:  return c.ListReportsForReportGroupPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2440: }",
          "2449: func (c *CodeBuild) ListReportsForReportGroupPagesWithContext(ctx aws.Context, input *ListReportsForReportGroupInput, fn func(*ListReportsForReportGroupOutput, bool) bool, opts ...request.Option) error {",
          "2450:  p := request.Pagination{",
          "2451:   NewRequest: func() (*request.Request, error) {",
          "2452:    var inCpy *ListReportsForReportGroupInput",
          "2453:    if input != nil {",
          "2454:     tmp := *input",
          "2455:     inCpy = &tmp",
          "2456:    }",
          "2457:    req, _ := c.ListReportsForReportGroupRequest(inCpy)",
          "2458:    req.SetContext(ctx)",
          "2459:    req.ApplyOptions(opts...)",
          "2460:    return req, nil",
          "2461:   },",
          "2462:  }",
          "2464:  for p.Next() {",
          "2465:   if !fn(p.Page().(*ListReportsForReportGroupOutput), !p.HasNextPage()) {",
          "2466:    break",
          "2467:   }",
          "2468:  }",
          "2470:  return p.Err()",
          "2471: }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2095:   Name:       opListSharedProjects,",
          "2096:   HTTPMethod: \"POST\",",
          "2097:   HTTPPath:   \"/\",",
          "2098:  }",
          "2100:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2504:   Paginator: &request.Paginator{",
          "2505:    InputTokens:     []string{\"nextToken\"},",
          "2506:    OutputTokens:    []string{\"nextToken\"},",
          "2507:    LimitToken:      \"maxResults\",",
          "2508:    TruncationToken: \"\",",
          "2509:   },",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2143:  return out, req.Send()",
          "2144: }",
          "2146: const opListSharedReportGroups = \"ListSharedReportGroups\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2575: func (c *CodeBuild) ListSharedProjectsPages(input *ListSharedProjectsInput, fn func(*ListSharedProjectsOutput, bool) bool) error {",
          "2576:  return c.ListSharedProjectsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2577: }",
          "2586: func (c *CodeBuild) ListSharedProjectsPagesWithContext(ctx aws.Context, input *ListSharedProjectsInput, fn func(*ListSharedProjectsOutput, bool) bool, opts ...request.Option) error {",
          "2587:  p := request.Pagination{",
          "2588:   NewRequest: func() (*request.Request, error) {",
          "2589:    var inCpy *ListSharedProjectsInput",
          "2590:    if input != nil {",
          "2591:     tmp := *input",
          "2592:     inCpy = &tmp",
          "2593:    }",
          "2594:    req, _ := c.ListSharedProjectsRequest(inCpy)",
          "2595:    req.SetContext(ctx)",
          "2596:    req.ApplyOptions(opts...)",
          "2597:    return req, nil",
          "2598:   },",
          "2599:  }",
          "2601:  for p.Next() {",
          "2602:   if !fn(p.Page().(*ListSharedProjectsOutput), !p.HasNextPage()) {",
          "2603:    break",
          "2604:   }",
          "2605:  }",
          "2607:  return p.Err()",
          "2608: }",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2174:   Name:       opListSharedReportGroups,",
          "2175:   HTTPMethod: \"POST\",",
          "2176:   HTTPPath:   \"/\",",
          "2177:  }",
          "2179:  if input == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2641:   Paginator: &request.Paginator{",
          "2642:    InputTokens:     []string{\"nextToken\"},",
          "2643:    OutputTokens:    []string{\"nextToken\"},",
          "2644:    LimitToken:      \"maxResults\",",
          "2645:    TruncationToken: \"\",",
          "2646:   },",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2222:  return out, req.Send()",
          "2223: }",
          "2225: const opListSourceCredentials = \"ListSourceCredentials\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2712: func (c *CodeBuild) ListSharedReportGroupsPages(input *ListSharedReportGroupsInput, fn func(*ListSharedReportGroupsOutput, bool) bool) error {",
          "2713:  return c.ListSharedReportGroupsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "2714: }",
          "2723: func (c *CodeBuild) ListSharedReportGroupsPagesWithContext(ctx aws.Context, input *ListSharedReportGroupsInput, fn func(*ListSharedReportGroupsOutput, bool) bool, opts ...request.Option) error {",
          "2724:  p := request.Pagination{",
          "2725:   NewRequest: func() (*request.Request, error) {",
          "2726:    var inCpy *ListSharedReportGroupsInput",
          "2727:    if input != nil {",
          "2728:     tmp := *input",
          "2729:     inCpy = &tmp",
          "2730:    }",
          "2731:    req, _ := c.ListSharedReportGroupsRequest(inCpy)",
          "2732:    req.SetContext(ctx)",
          "2733:    req.ApplyOptions(opts...)",
          "2734:    return req, nil",
          "2735:   },",
          "2736:  }",
          "2738:  for p.Next() {",
          "2739:   if !fn(p.Page().(*ListSharedReportGroupsOutput), !p.HasNextPage()) {",
          "2740:    break",
          "2741:   }",
          "2742:  }",
          "2744:  return p.Err()",
          "2745: }",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "10519:  WebhookFilterTypeFilePath = \"FILE_PATH\"",
          "10520: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11058:  WebhookFilterTypeCommitMessage = \"COMMIT_MESSAGE\"",
          "",
          "---------------"
        ],
        "service/codebuild/codebuildiface/interface.go||service/codebuild/codebuildiface/interface.go": [
          "File: service/codebuild/codebuildiface/interface.go -> service/codebuild/codebuildiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  DescribeTestCasesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, ...request.Option) (*codebuild.DescribeTestCasesOutput, error)",
          "121:  DescribeTestCasesRequest(*codebuild.DescribeTestCasesInput) (*request.Request, *codebuild.DescribeTestCasesOutput)",
          "123:  GetResourcePolicy(*codebuild.GetResourcePolicyInput) (*codebuild.GetResourcePolicyOutput, error)",
          "124:  GetResourcePolicyWithContext(aws.Context, *codebuild.GetResourcePolicyInput, ...request.Option) (*codebuild.GetResourcePolicyOutput, error)",
          "125:  GetResourcePolicyRequest(*codebuild.GetResourcePolicyInput) (*request.Request, *codebuild.GetResourcePolicyOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:  DescribeTestCasesPages(*codebuild.DescribeTestCasesInput, func(*codebuild.DescribeTestCasesOutput, bool) bool) error",
          "124:  DescribeTestCasesPagesWithContext(aws.Context, *codebuild.DescribeTestCasesInput, func(*codebuild.DescribeTestCasesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:  ListBuildsWithContext(aws.Context, *codebuild.ListBuildsInput, ...request.Option) (*codebuild.ListBuildsOutput, error)",
          "137:  ListBuildsRequest(*codebuild.ListBuildsInput) (*request.Request, *codebuild.ListBuildsOutput)",
          "139:  ListBuildsForProject(*codebuild.ListBuildsForProjectInput) (*codebuild.ListBuildsForProjectOutput, error)",
          "140:  ListBuildsForProjectWithContext(aws.Context, *codebuild.ListBuildsForProjectInput, ...request.Option) (*codebuild.ListBuildsForProjectOutput, error)",
          "141:  ListBuildsForProjectRequest(*codebuild.ListBuildsForProjectInput) (*request.Request, *codebuild.ListBuildsForProjectOutput)",
          "143:  ListCuratedEnvironmentImages(*codebuild.ListCuratedEnvironmentImagesInput) (*codebuild.ListCuratedEnvironmentImagesOutput, error)",
          "144:  ListCuratedEnvironmentImagesWithContext(aws.Context, *codebuild.ListCuratedEnvironmentImagesInput, ...request.Option) (*codebuild.ListCuratedEnvironmentImagesOutput, error)",
          "145:  ListCuratedEnvironmentImagesRequest(*codebuild.ListCuratedEnvironmentImagesInput) (*request.Request, *codebuild.ListCuratedEnvironmentImagesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142:  ListBuildsPages(*codebuild.ListBuildsInput, func(*codebuild.ListBuildsOutput, bool) bool) error",
          "143:  ListBuildsPagesWithContext(aws.Context, *codebuild.ListBuildsInput, func(*codebuild.ListBuildsOutput, bool) bool, ...request.Option) error",
          "149:  ListBuildsForProjectPages(*codebuild.ListBuildsForProjectInput, func(*codebuild.ListBuildsForProjectOutput, bool) bool) error",
          "150:  ListBuildsForProjectPagesWithContext(aws.Context, *codebuild.ListBuildsForProjectInput, func(*codebuild.ListBuildsForProjectOutput, bool) bool, ...request.Option) error",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:  ListProjectsWithContext(aws.Context, *codebuild.ListProjectsInput, ...request.Option) (*codebuild.ListProjectsOutput, error)",
          "149:  ListProjectsRequest(*codebuild.ListProjectsInput) (*request.Request, *codebuild.ListProjectsOutput)",
          "151:  ListReportGroups(*codebuild.ListReportGroupsInput) (*codebuild.ListReportGroupsOutput, error)",
          "152:  ListReportGroupsWithContext(aws.Context, *codebuild.ListReportGroupsInput, ...request.Option) (*codebuild.ListReportGroupsOutput, error)",
          "153:  ListReportGroupsRequest(*codebuild.ListReportGroupsInput) (*request.Request, *codebuild.ListReportGroupsOutput)",
          "155:  ListReports(*codebuild.ListReportsInput) (*codebuild.ListReportsOutput, error)",
          "156:  ListReportsWithContext(aws.Context, *codebuild.ListReportsInput, ...request.Option) (*codebuild.ListReportsOutput, error)",
          "157:  ListReportsRequest(*codebuild.ListReportsInput) (*request.Request, *codebuild.ListReportsOutput)",
          "159:  ListReportsForReportGroup(*codebuild.ListReportsForReportGroupInput) (*codebuild.ListReportsForReportGroupOutput, error)",
          "160:  ListReportsForReportGroupWithContext(aws.Context, *codebuild.ListReportsForReportGroupInput, ...request.Option) (*codebuild.ListReportsForReportGroupOutput, error)",
          "161:  ListReportsForReportGroupRequest(*codebuild.ListReportsForReportGroupInput) (*request.Request, *codebuild.ListReportsForReportGroupOutput)",
          "163:  ListSharedProjects(*codebuild.ListSharedProjectsInput) (*codebuild.ListSharedProjectsOutput, error)",
          "164:  ListSharedProjectsWithContext(aws.Context, *codebuild.ListSharedProjectsInput, ...request.Option) (*codebuild.ListSharedProjectsOutput, error)",
          "165:  ListSharedProjectsRequest(*codebuild.ListSharedProjectsInput) (*request.Request, *codebuild.ListSharedProjectsOutput)",
          "167:  ListSharedReportGroups(*codebuild.ListSharedReportGroupsInput) (*codebuild.ListSharedReportGroupsOutput, error)",
          "168:  ListSharedReportGroupsWithContext(aws.Context, *codebuild.ListSharedReportGroupsInput, ...request.Option) (*codebuild.ListSharedReportGroupsOutput, error)",
          "169:  ListSharedReportGroupsRequest(*codebuild.ListSharedReportGroupsInput) (*request.Request, *codebuild.ListSharedReportGroupsOutput)",
          "171:  ListSourceCredentials(*codebuild.ListSourceCredentialsInput) (*codebuild.ListSourceCredentialsOutput, error)",
          "172:  ListSourceCredentialsWithContext(aws.Context, *codebuild.ListSourceCredentialsInput, ...request.Option) (*codebuild.ListSourceCredentialsOutput, error)",
          "173:  ListSourceCredentialsRequest(*codebuild.ListSourceCredentialsInput) (*request.Request, *codebuild.ListSourceCredentialsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:  ListProjectsPages(*codebuild.ListProjectsInput, func(*codebuild.ListProjectsOutput, bool) bool) error",
          "161:  ListProjectsPagesWithContext(aws.Context, *codebuild.ListProjectsInput, func(*codebuild.ListProjectsOutput, bool) bool, ...request.Option) error",
          "167:  ListReportGroupsPages(*codebuild.ListReportGroupsInput, func(*codebuild.ListReportGroupsOutput, bool) bool) error",
          "168:  ListReportGroupsPagesWithContext(aws.Context, *codebuild.ListReportGroupsInput, func(*codebuild.ListReportGroupsOutput, bool) bool, ...request.Option) error",
          "174:  ListReportsPages(*codebuild.ListReportsInput, func(*codebuild.ListReportsOutput, bool) bool) error",
          "175:  ListReportsPagesWithContext(aws.Context, *codebuild.ListReportsInput, func(*codebuild.ListReportsOutput, bool) bool, ...request.Option) error",
          "181:  ListReportsForReportGroupPages(*codebuild.ListReportsForReportGroupInput, func(*codebuild.ListReportsForReportGroupOutput, bool) bool) error",
          "182:  ListReportsForReportGroupPagesWithContext(aws.Context, *codebuild.ListReportsForReportGroupInput, func(*codebuild.ListReportsForReportGroupOutput, bool) bool, ...request.Option) error",
          "188:  ListSharedProjectsPages(*codebuild.ListSharedProjectsInput, func(*codebuild.ListSharedProjectsOutput, bool) bool) error",
          "189:  ListSharedProjectsPagesWithContext(aws.Context, *codebuild.ListSharedProjectsInput, func(*codebuild.ListSharedProjectsOutput, bool) bool, ...request.Option) error",
          "195:  ListSharedReportGroupsPages(*codebuild.ListSharedReportGroupsInput, func(*codebuild.ListSharedReportGroupsOutput, bool) bool) error",
          "196:  ListSharedReportGroupsPagesWithContext(aws.Context, *codebuild.ListSharedReportGroupsInput, func(*codebuild.ListSharedReportGroupsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/ec2/api.go||service/ec2/api.go": [
          "File: service/ec2/api.go -> service/ec2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "46594:  LaunchTemplate *LaunchTemplate `locationName:\"launchTemplate\" type:\"structure\"`",
          "46595: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46604:  Warning *ValidationWarning `locationName:\"warning\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46610:  return s",
          "46611: }",
          "46613: type CreateLaunchTemplateVersionInput struct {",
          "46614:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46624: func (s *CreateLaunchTemplateOutput) SetWarning(v *ValidationWarning) *CreateLaunchTemplateOutput {",
          "46625:  s.Warning = v",
          "46626:  return s",
          "46627: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46729:  LaunchTemplateVersion *LaunchTemplateVersion `locationName:\"launchTemplateVersion\" type:\"structure\"`",
          "46730: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46750:  Warning *ValidationWarning `locationName:\"warning\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46745:  return s",
          "46746: }",
          "46748: type CreateLocalGatewayRouteInput struct {",
          "46749:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46770: func (s *CreateLaunchTemplateVersionOutput) SetWarning(v *ValidationWarning) *CreateLaunchTemplateVersionOutput {",
          "46771:  s.Warning = v",
          "46772:  return s",
          "46773: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "107275:  return s",
          "107276: }",
          "107279: type VgwTelemetry struct {",
          "107280:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107308: type ValidationError struct {",
          "107309:  _ struct{} `type:\"structure\"`",
          "107313:  Code *string `locationName:\"code\" type:\"string\"`",
          "107318:  Message *string `locationName:\"message\" type:\"string\"`",
          "107319: }",
          "107322: func (s ValidationError) String() string {",
          "107323:  return awsutil.Prettify(s)",
          "107324: }",
          "107327: func (s ValidationError) GoString() string {",
          "107328:  return s.String()",
          "107329: }",
          "107332: func (s *ValidationError) SetCode(v string) *ValidationError {",
          "107333:  s.Code = &v",
          "107334:  return s",
          "107335: }",
          "107338: func (s *ValidationError) SetMessage(v string) *ValidationError {",
          "107339:  s.Message = &v",
          "107340:  return s",
          "107341: }",
          "107346: type ValidationWarning struct {",
          "107347:  _ struct{} `type:\"structure\"`",
          "107350:  Errors []*ValidationError `locationName:\"errorSet\" locationNameList:\"item\" type:\"list\"`",
          "107351: }",
          "107354: func (s ValidationWarning) String() string {",
          "107355:  return awsutil.Prettify(s)",
          "107356: }",
          "107359: func (s ValidationWarning) GoString() string {",
          "107360:  return s.String()",
          "107361: }",
          "107364: func (s *ValidationWarning) SetErrors(v []*ValidationError) *ValidationWarning {",
          "107365:  s.Errors = v",
          "107366:  return s",
          "107367: }",
          "",
          "---------------"
        ],
        "service/lightsail/api.go||service/lightsail/api.go": [
          "File: service/lightsail/api.go -> service/lightsail/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13514:  if s.PortInfo == nil {",
          "13515:   invalidParams.Add(request.NewErrParamRequired(\"PortInfo\"))",
          "13516:  }",
          "13518:  if invalidParams.Len() > 0 {",
          "13519:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13524:  if s.PortInfo != nil {",
          "13525:   if err := s.PortInfo.Validate(); err != nil {",
          "13526:    invalidParams.AddNested(\"PortInfo\", err.(request.ErrInvalidParams))",
          "13527:   }",
          "13528:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15397:  if s.InstancePort == nil {",
          "15398:   invalidParams.Add(request.NewErrParamRequired(\"InstancePort\"))",
          "15399:  }",
          "15400:  if s.LoadBalancerName == nil {",
          "15401:   invalidParams.Add(request.NewErrParamRequired(\"LoadBalancerName\"))",
          "15402:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15412:  if s.InstancePort != nil && *s.InstancePort < -1 {",
          "15413:   invalidParams.Add(request.NewErrParamMinValue(\"InstancePort\", -1))",
          "15414:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "23019:  return s",
          "23020: }",
          "23023: type InstancePortInfo struct {",
          "23024:  _ struct{} `type:\"structure\"`",
          "23027:  AccessDirection *string `locationName:\"accessDirection\" type:\"string\" enum:\"AccessDirection\"`",
          "23030:  AccessFrom *string `locationName:\"accessFrom\" type:\"string\"`",
          "23033:  AccessType *string `locationName:\"accessType\" type:\"string\" enum:\"PortAccessType\"`",
          "23036:  CommonName *string `locationName:\"commonName\" type:\"string\"`",
          "23039:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23065:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "23074:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "23090:  return s",
          "23091: }",
          "23094: func (s *InstancePortInfo) SetCommonName(v string) *InstancePortInfo {",
          "23095:  s.CommonName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23160: func (s *InstancePortInfo) SetCidrListAliases(v []*string) *InstancePortInfo {",
          "23161:  s.CidrListAliases = v",
          "23162:  return s",
          "23163: }",
          "23166: func (s *InstancePortInfo) SetCidrs(v []*string) *InstancePortInfo {",
          "23167:  s.Cidrs = v",
          "23168:  return s",
          "23169: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "23114:  return s",
          "23115: }",
          "23118: type InstancePortState struct {",
          "23119:  _ struct{} `type:\"structure\"`",
          "23122:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23205:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "23214:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "23158:  return s.String()",
          "23159: }",
          "23162: func (s *InstancePortState) SetFromPort(v int64) *InstancePortState {",
          "23163:  s.FromPort = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23284: func (s *InstancePortState) SetCidrListAliases(v []*string) *InstancePortState {",
          "23285:  s.CidrListAliases = v",
          "23286:  return s",
          "23287: }",
          "23290: func (s *InstancePortState) SetCidrs(v []*string) *InstancePortState {",
          "23291:  s.Cidrs = v",
          "23292:  return s",
          "23293: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "24507:  if s.PortInfo == nil {",
          "24508:   invalidParams.Add(request.NewErrParamRequired(\"PortInfo\"))",
          "24509:  }",
          "24511:  if invalidParams.Len() > 0 {",
          "24512:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24644:  if s.PortInfo != nil {",
          "24645:   if err := s.PortInfo.Validate(); err != nil {",
          "24646:    invalidParams.AddNested(\"PortInfo\", err.(request.ErrInvalidParams))",
          "24647:   }",
          "24648:  }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "24911:  return s",
          "24912: }",
          "24916: type PortInfo struct {",
          "24917:  _ struct{} `type:\"structure\"`",
          "24920:  FromPort *int64 `locationName:\"fromPort\" type:\"integer\"`",
          "24923:  Protocol *string `locationName:\"protocol\" type:\"string\" enum:\"NetworkProtocol\"`",
          "24926:  ToPort *int64 `locationName:\"toPort\" type:\"integer\"`",
          "24927: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25063:  CidrListAliases []*string `locationName:\"cidrListAliases\" type:\"list\"`",
          "25078:  Cidrs []*string `locationName:\"cidrs\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "24936:  return s.String()",
          "24937: }",
          "24940: func (s *PortInfo) SetFromPort(v int64) *PortInfo {",
          "24941:  s.FromPort = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25143: func (s *PortInfo) Validate() error {",
          "25144:  invalidParams := request.ErrInvalidParams{Context: \"PortInfo\"}",
          "25145:  if s.FromPort != nil && *s.FromPort < -1 {",
          "25146:   invalidParams.Add(request.NewErrParamMinValue(\"FromPort\", -1))",
          "25147:  }",
          "25148:  if s.ToPort != nil && *s.ToPort < -1 {",
          "25149:   invalidParams.Add(request.NewErrParamMinValue(\"ToPort\", -1))",
          "25150:  }",
          "25152:  if invalidParams.Len() > 0 {",
          "25153:   return invalidParams",
          "25154:  }",
          "25155:  return nil",
          "25156: }",
          "25159: func (s *PortInfo) SetCidrListAliases(v []*string) *PortInfo {",
          "25160:  s.CidrListAliases = v",
          "25161:  return s",
          "25162: }",
          "25165: func (s *PortInfo) SetCidrs(v []*string) *PortInfo {",
          "25166:  s.Cidrs = v",
          "25167:  return s",
          "25168: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "25252:  if s.PortInfos == nil {",
          "25253:   invalidParams.Add(request.NewErrParamRequired(\"PortInfos\"))",
          "25254:  }",
          "25256:  if invalidParams.Len() > 0 {",
          "25257:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25486:  if s.PortInfos != nil {",
          "25487:   for i, v := range s.PortInfos {",
          "25488:    if v == nil {",
          "25489:     continue",
          "25490:    }",
          "25491:    if err := v.Validate(); err != nil {",
          "25492:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"PortInfos\", i), err.(request.ErrInvalidParams))",
          "25493:    }",
          "25494:   }",
          "25495:  }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "28320:  NetworkProtocolUdp = \"udp\"",
          "28321: )",
          "28323: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28564:  NetworkProtocolIcmp = \"icmp\"",
          "",
          "---------------"
        ],
        "service/route53/api.go||service/route53/api.go": [
          "File: service/route53/api.go -> service/route53/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "15195:  CloudWatchRegionAfSouth1 = \"af-south-1\"",
          "15198:  CloudWatchRegionUsGovWest1 = \"us-gov-west-1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15198:  CloudWatchRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15417:  ResourceRecordSetRegionAfSouth1 = \"af-south-1\"",
          "15418: )",
          "15420: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15423:  ResourceRecordSetRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15524:  VPCRegionAfSouth1 = \"af-south-1\"",
          "15525: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15533:  VPCRegionEuSouth1 = \"eu-south-1\"",
          "",
          "---------------"
        ],
        "service/ssm/api.go||service/ssm/api.go": [
          "File: service/ssm/api.go -> service/ssm/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "45715:  OperatingSystemCentos = \"CENTOS\"",
          "45716: )",
          "45718: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45718:  OperatingSystemOracleLinux = \"ORACLE_LINUX\"",
          "45721:  OperatingSystemDebian = \"DEBIAN\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}