{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "95ac22d362b4fce7c5eed861f4b178970a7ecbd1",
      "candidate_info": {
        "commit_hash": "95ac22d362b4fce7c5eed861f4b178970a7ecbd1",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/95ac22d362b4fce7c5eed861f4b178970a7ecbd1",
        "files": [
          "package.json",
          "packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts",
          "packages/table/src/table.ts"
        ],
        "message": "releases 3.11.10",
        "before_after_code_files": [
          "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts": [
          "File: packages/table/module/edit/mixin.ts -> packages/table/module/edit/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: }",
          "51: function handleInsertRowAt (_vm: any, records: any[], row: any, isInsertNextRow?: any) {",
          "53:   const { transform, rowField, mapChildrenField } = treeOpts",
          "54:   const childrenField = treeOpts.children || treeOpts.childrenField",
          "55:   if (!XEUtils.isArray(records)) {",
          "56:     records = [records]",
          "57:   }",
          "59:   if (XEUtils.eqNull(row)) {",
          "61:     if (treeConfig && transform) {",
          "62:       insertTreeRow(_vm, newRecords, false)",
          "63:     } else {",
          "67:       mergeList.forEach((mergeItem: any) => {",
          "68:         const { row: mergeRowIndex } = mergeItem",
          "",
          "[Removed Lines]",
          "52:   const { tableFullTreeData, mergeList, afterFullData, editStore, tableFullData, treeConfig, fullDataRowIdData, fullAllDataRowIdData, treeOpts } = _vm",
          "58:   const newRecords = _vm.defineField(records.map(record => Object.assign(treeConfig && transform ? { [mapChildrenField]: [], [childrenField]: [] } : {}, record)))",
          "64:       afterFullData.unshift(...newRecords)",
          "65:       tableFullData.unshift(...newRecords)",
          "",
          "[Added Lines]",
          "52:   const $xeTable = _vm",
          "53:   const props = $xeTable",
          "54:   const reactData = $xeTable",
          "55:   const internalData = $xeTable",
          "57:   const { treeConfig } = props",
          "58:   const { mergeList, editStore } = reactData",
          "59:   const { tableFullTreeData, afterFullData, tableFullData, fullDataRowIdData, fullAllDataRowIdData } = internalData",
          "60:   const treeOpts = $xeTable.computeTreeOpts",
          "66:   const newRecords: any[] = _vm.defineField(records.map(record => Object.assign(treeConfig && transform ? { [mapChildrenField]: [], [childrenField]: [] } : {}, record)))",
          "72:       newRecords.forEach(item => {",
          "73:         const rowid = getRowid($xeTable, item)",
          "74:         const rest = { row: item, rowid, seq: -1, index: -1, _index: -1, $index: -1, items: afterFullData, parent: null, level: 0, height: 0 }",
          "75:         fullDataRowIdData[rowid] = rest",
          "76:         fullAllDataRowIdData[rowid] = rest",
          "77:         afterFullData.push(item)",
          "78:         tableFullData.push(item)",
          "79:       })",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:       if (treeConfig && transform) {",
          "78:         insertTreeRow(_vm, newRecords, true)",
          "79:       } else {",
          "83:         mergeList.forEach((mergeItem: any) => {",
          "84:           const { row: mergeRowIndex, rowspan: mergeRowspan } = mergeItem",
          "",
          "[Removed Lines]",
          "80:         afterFullData.push(...newRecords)",
          "81:         tableFullData.push(...newRecords)",
          "",
          "[Added Lines]",
          "94:         newRecords.forEach(item => {",
          "95:           const rowid = getRowid($xeTable, item)",
          "96:           const rest = { row: item, rowid, seq: -1, index: -1, _index: -1, $index: -1, items: afterFullData, parent: null, level: 0, height: 0 }",
          "97:           fullDataRowIdData[rowid] = rest",
          "98:           fullAllDataRowIdData[rowid] = rest",
          "99:           afterFullData.push(item)",
          "100:           tableFullData.push(item)",
          "101:         })",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:       }",
          "171:     }",
          "172:   }",
          "176:     insertMaps[rowid] = newRow",
          "177:   })",
          "179:   _vm.cacheRowMap()",
          "180:   _vm.updateScrollYStatus()",
          "181:   _vm.handleTableData(treeConfig && transform)",
          "",
          "[Removed Lines]",
          "173:   const { insertList, insertMaps } = editStore",
          "174:   newRecords.forEach((newRow: any) => {",
          "175:     const rowid = getRowid(_vm, newRow)",
          "178:   insertList.unshift(...newRecords)",
          "",
          "[Added Lines]",
          "193:   const { insertMaps } = editStore",
          "194:   newRecords.forEach(newRow => {",
          "195:     const rowid = getRowid($xeTable, newRow)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "232:     _remove (rows: any[]) {",
          "234:       const { transform, mapChildrenField } = treeOpts",
          "235:       const childrenField = treeOpts.children || treeOpts.childrenField",
          "237:       const { checkField } = checkboxOpts",
          "238:       let delList: any[] = []",
          "239:       if (!rows) {",
          "",
          "[Removed Lines]",
          "233:       const { afterFullData, tableFullData, tableFullTreeData, treeConfig, mergeList, editStore, checkboxOpts, selectCheckboxMaps, isInsertByRow, treeOpts } = this",
          "236:       const { actived, removeList, insertList, insertMaps } = editStore",
          "",
          "[Added Lines]",
          "252:       const $xeTable = this",
          "253:       const props = $xeTable",
          "254:       const reactData = $xeTable",
          "255:       const internalData = $xeTable",
          "257:       const { treeConfig } = props",
          "258:       const { mergeList, editStore, selectCheckboxMaps } = reactData",
          "259:       const { tableFullTreeData, afterFullData, tableFullData } = internalData",
          "260:       const checkboxOpts = $xeTable.computeCheckboxOpts",
          "261:       const treeOpts = $xeTable.computeTreeOpts",
          "264:       const { actived, removeList, insertMaps } = editStore",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "243:       }",
          "245:       rows.forEach(row => {",
          "247:           removeList.push(row)",
          "248:         }",
          "249:       })",
          "",
          "[Removed Lines]",
          "246:         if (!isInsertByRow(row)) {",
          "",
          "[Added Lines]",
          "274:         if (!$xeTable.isInsertByRow(row)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "307:         }",
          "308:       }",
          "312:       }",
          "314:       rows.forEach((row: any) => {",
          "319:         }",
          "321:       })",
          "323:       if (!(treeConfig && transform)) {",
          "325:       }",
          "331:       }",
          "332:       return this.$nextTick().then(() => {",
          "333:         this.updateCellAreas()",
          "",
          "[Removed Lines]",
          "310:       if (actived.row && this.findRowIndexOf(rows, actived.row) > -1) {",
          "311:         this.clearEdit()",
          "315:         const rowid = getRowid(this, row)",
          "316:         const iIndex = this.findRowIndexOf(insertList, row)",
          "317:         if (iIndex > -1) {",
          "318:           insertList.splice(iIndex, 1)",
          "320:         delete insertMaps[rowid]",
          "322:       this.handleTableData(treeConfig && transform)",
          "324:         this.updateAfterDataIndex()",
          "326:       this.updateFooter()",
          "327:       this.cacheRowMap()",
          "328:       this.checkSelectionStatus()",
          "329:       if (this.scrollYLoad) {",
          "330:         this.updateScrollYSpace()",
          "",
          "[Added Lines]",
          "338:       if (actived.row && $xeTable.findRowIndexOf(rows, actived.row) > -1) {",
          "339:         $xeTable.clearEdit()",
          "343:         const rowid = getRowid($xeTable, row)",
          "344:         if (insertMaps[rowid]) {",
          "345:           delete insertMaps[rowid]",
          "348:       $xeTable.updateFooter()",
          "349:       $xeTable.cacheRowMap()",
          "350:       $xeTable.handleTableData(treeConfig && transform)",
          "352:         $xeTable.updateAfterDataIndex()",
          "354:       $xeTable.checkSelectionStatus()",
          "355:       if (reactData.scrollYLoad) {",
          "356:         $xeTable.updateScrollYSpace()",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "389:     _getInsertRecords () {",
          "392:       const insertRecords: any[] = []",
          "395:         if (fullAllDataRowIdData[rowid]) {",
          "396:           insertRecords.push(row)",
          "397:         }",
          "",
          "[Removed Lines]",
          "390:       const { fullAllDataRowIdData } = this",
          "391:       const insertList = this.editStore.insertList as any[]",
          "393:       insertList.forEach(row => {",
          "394:         const rowid = getRowid(this, row)",
          "",
          "[Added Lines]",
          "416:       const $xeTable = this",
          "417:       const reactData = $xeTable",
          "418:       const internalData = $xeTable",
          "420:       const { editStore } = reactData",
          "421:       const { fullAllDataRowIdData } = internalData",
          "422:       const { insertMaps } = editStore",
          "424:       XEUtils.each(insertMaps, (row, rowid) => {",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "707:     scrollYStore.endIndex = 1",
          "708:     scrollXStore.startIndex = 0",
          "709:     scrollXStore.endIndex = 1",
          "711:     editStore.insertMaps = {}",
          "712:     editStore.removeList = []",
          "713:     editStore.removeMaps = {}",
          "",
          "[Removed Lines]",
          "710:     editStore.insertList = []",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1558:   isInsertByRow (row: any) {",
          "1559:     const { editStore } = this",
          "1560:     const rowid = getRowid(this, row)",
          "1562:   },",
          "1567:   removeInsertRow () {",
          "1569:   },",
          "",
          "[Removed Lines]",
          "1561:     return editStore.insertList.length && editStore.insertMaps[rowid]",
          "1568:     return this.remove(this.editStore.insertList)",
          "",
          "[Added Lines]",
          "1560:     return !!editStore.insertMaps[rowid]",
          "1567:     const $xeTable = this",
          "1568:     const reactData = $xeTable",
          "1570:     const { editStore } = reactData",
          "1571:     editStore.insertMaps = {}",
          "1572:     return $xeTable.remove($xeTable.getInsertRecords())",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:           row: null,",
          "340:           column: null",
          "341:         },",
          "343:         insertMaps: {},",
          "344:         removeList: [],",
          "345:         removeMaps: {}",
          "",
          "[Removed Lines]",
          "342:         insertList: [],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1c58249683e455fb37e342f0534ab80e8315669",
      "candidate_info": {
        "commit_hash": "d1c58249683e455fb37e342f0534ab80e8315669",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/d1c58249683e455fb37e342f0534ab80e8315669",
        "files": [
          "packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js",
          "packages/form/src/form.js",
          "packages/table/src/cell.js",
          "styles/form.scss"
        ],
        "message": "form \u589e\u52a0\u53c2\u6570 vertical",
        "before_after_code_files": [
          "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js",
          "packages/form/src/form-item.js||packages/form/src/form-item.js",
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/table/src/cell.js||packages/table/src/cell.js",
          "styles/form.scss||styles/form.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/form/src/form-config-item.js||packages/form/src/form-config-item.js": [
          "File: packages/form/src/form-config-item.js -> packages/form/src/form-config-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   },",
          "28:   render (h) {",
          "29:     const { _e, $xeform, itemConfig: item } = this",
          "32:     const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "33:     const itemClassName = compConf ? compConf.itemClassName : ''",
          "34:     const itemStyle = compConf ? compConf.itemStyle : null",
          "",
          "[Removed Lines]",
          "30:     const { rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow } = $xeform",
          "31:     const { slots, title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, children, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "",
          "[Added Lines]",
          "30:     const { rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow, vertical: allVertical } = $xeform",
          "31:     const { slots, title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, vertical, children, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "44:     const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "45:     const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "46:     const ovEllipsis = itemOverflow === 'ellipsis'",
          "47:     const ovTitle = itemOverflow === 'title'",
          "48:     const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     const itemVertical = (XEUtils.isUndefined(vertical) || XEUtils.isNull(vertical)) ? allVertical : vertical",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:         {",
          "100:           'is--title': title,",
          "101:           'is--colon': titleColon,",
          "102:           'is--asterisk': titleAsterisk,",
          "103:           'is--required': isRequired,",
          "104:           'is--hidden': folding && collapseAll,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:           'is--vertical': itemVertical,",
          "",
          "---------------"
        ],
        "packages/form/src/form-item.js||packages/form/src/form-item.js": [
          "File: packages/form/src/form-item.js -> packages/form/src/form-item.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     type: Boolean,",
          "33:     default: true",
          "34:   },",
          "35:   className: [String, Function],",
          "36:   contentClassName: [String, Function],",
          "37:   contentStyle: [Object, Function],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:   vertical: {",
          "36:     type: Boolean,",
          "37:     default: null",
          "38:   },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: })",
          "61: const renderItem = (h, _vm, item, slots) => {",
          "64:   const compConf = isEnableConf(itemRender) ? VXETable.renderer.get(itemRender.name) : null",
          "65:   const itemClassName = compConf ? compConf.itemClassName : ''",
          "66:   const itemStyle = compConf ? compConf.itemStyle : null",
          "",
          "[Removed Lines]",
          "62:   const { _e, rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow } = _vm",
          "63:   const { title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "",
          "[Added Lines]",
          "66:   const { _e, rules, data, collapseAll, validOpts, titleAlign: allTitleAlign, titleWidth: allTitleWidth, titleColon: allTitleColon, titleAsterisk: allTitleAsterisk, titleOverflow: allTitleOverflow, vertical: allVertical } = _vm",
          "67:   const { title, folding, visible, field, collapseNode, itemRender, showError, errRule, className, titleOverflow, vertical, showTitle, contentClassName, contentStyle, titleClassName, titleStyle } = item",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:   const titleColon = XEUtils.eqNull(item.titleColon) ? allTitleColon : item.titleColon",
          "76:   const titleAsterisk = XEUtils.eqNull(item.titleAsterisk) ? allTitleAsterisk : item.titleAsterisk",
          "77:   const itemOverflow = (XEUtils.isUndefined(titleOverflow) || XEUtils.isNull(titleOverflow)) ? allTitleOverflow : titleOverflow",
          "78:   const ovEllipsis = itemOverflow === 'ellipsis'",
          "79:   const ovTitle = itemOverflow === 'title'",
          "80:   const ovTooltip = itemOverflow === true || itemOverflow === 'tooltip'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:   const itemVertical = (XEUtils.isUndefined(vertical) || XEUtils.isNull(vertical)) ? allVertical : vertical",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116:       {",
          "117:         'is--title': title,",
          "118:         'is--colon': titleColon,",
          "119:         'is--asterisk': titleAsterisk,",
          "120:         'is--required': isRequired,",
          "121:         'is--hidden': folding && collapseAll,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "124:         'is--vertical': itemVertical,",
          "",
          "---------------"
        ],
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     titleColon: { type: Boolean, default: () => GlobalConfig.form.titleColon },",
          "80:     titleAsterisk: { type: Boolean, default: () => GlobalConfig.form.titleAsterisk },",
          "81:     titleOverflow: { type: [Boolean, String], default: null },",
          "82:     className: [String, Function],",
          "83:     readonly: Boolean,",
          "84:     items: Array,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     vertical: {",
          "83:       type: Boolean,",
          "84:       default: null",
          "85:     },",
          "",
          "---------------"
        ],
        "packages/table/src/cell.js||packages/table/src/cell.js": [
          "File: packages/table/src/cell.js -> packages/table/src/cell.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "692:           },",
          "693:           on: {",
          "694:             click (evnt) {",
          "696:             }",
          "697:           }",
          "698:         })",
          "",
          "[Removed Lines]",
          "695:               $table.triggerFilterEvent(evnt, params.column, params)",
          "",
          "[Added Lines]",
          "695:               if ($table.triggerFilterEvent) {",
          "696:                 $table.triggerFilterEvent(evnt, params.column, params)",
          "697:               }",
          "",
          "---------------"
        ],
        "styles/form.scss||styles/form.scss": [
          "File: styles/form.scss -> styles/form.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:       }",
          "139:     }",
          "140:   }",
          "141:   &.is--span {",
          "142:     .vxe-default-input:not([type=\"submit\"]):not([type=\"reset\"]),",
          "143:     .vxe-default-textarea,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:   &.is--vertical {",
          "142:     .vxe-form--item-inner {",
          "143:       flex-direction: column;",
          "144:       align-items: initial;",
          "145:       .vxe-form--item-title {",
          "146:         height: 2em;",
          "147:         line-height: 2em;",
          "148:         padding-right: 0;",
          "149:       }",
          "150:       .vxe-form--item-title-content {",
          "151:         flex-grow: initial;",
          "152:       }",
          "153:     }",
          "154:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "32f207051ba5b1e8058f6bac3ecf55eee9c8f90a",
      "candidate_info": {
        "commit_hash": "32f207051ba5b1e8058f6bac3ecf55eee9c8f90a",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/32f207051ba5b1e8058f6bac3ecf55eee9c8f90a",
        "files": [
          "README.md",
          "examples/App.vue",
          "examples/router/index.ts",
          "examples/views/table/TableTest7.vue",
          "package.json",
          "packages/grid/src/grid.ts",
          "packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts",
          "packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts",
          "packages/table/src/table.ts"
        ],
        "message": "releases 3.9.1",
        "before_after_code_files": [
          "examples/App.vue||examples/App.vue",
          "examples/router/index.ts||examples/router/index.ts",
          "examples/views/table/TableTest7.vue||examples/views/table/TableTest7.vue",
          "packages/grid/src/grid.ts||packages/grid/src/grid.ts",
          "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts",
          "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts",
          "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts",
          "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts",
          "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts",
          "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts",
          "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts",
          "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts",
          "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts",
          "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts",
          "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts",
          "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts",
          "packages/table/src/methods.ts||packages/table/src/methods.ts",
          "packages/table/src/table.ts||packages/table/src/table.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/App.vue||examples/App.vue": [
          "File: examples/App.vue -> examples/App.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         { name: 'TableTest4', routerLink: { name: 'TableTest4' } },",
          "40:         { name: 'TableTest5', routerLink: { name: 'TableTest5' } },",
          "41:         { name: 'TableTest6', routerLink: { name: 'TableTest6' } },",
          "42:         { name: 'GridTest', routerLink: { name: 'GridTest' } },",
          "43:         { name: 'TestKeepTest1', routerLink: { name: 'TestKeepTest1' } },",
          "44:         { name: 'TestKeepTest2', routerLink: { name: 'TestKeepTest2' } },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:         { name: 'TableTest7', routerLink: { name: 'TableTest7' } },",
          "",
          "---------------"
        ],
        "examples/router/index.ts||examples/router/index.ts": [
          "File: examples/router/index.ts -> examples/router/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         path: 'table6',",
          "63:         name: 'TableTest6',",
          "64:         component: () => import('../views/table/TableTest6.vue')",
          "65:       }",
          "66:     ]",
          "67:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:       },",
          "66:       {",
          "67:         path: 'table7',",
          "68:         name: 'TableTest7',",
          "69:         component: () => import('../views/table/TableTest7.vue')",
          "",
          "---------------"
        ],
        "examples/views/table/TableTest7.vue||examples/views/table/TableTest7.vue": [
          "File: examples/views/table/TableTest7.vue -> examples/views/table/TableTest7.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <template>",
          "2:   <div>",
          "3:     <vxe-button @click=\"insertEvent\">\u65b0\u589e</vxe-button>",
          "4:     <vxe-table",
          "5:       border",
          "6:       show-overflow",
          "7:       ref=\"tableRef\"",
          "8:       :edit-config=\"editConfig\"",
          "9:       :data=\"tableData\"",
          "10:       @edit-activated=\"editActivatedEvent\">",
          "11:       <vxe-column type=\"seq\" width=\"70\"></vxe-column>",
          "12:       <vxe-column field=\"name\" title=\"Name\" :edit-render=\"{name: 'input'}\"></vxe-column>",
          "13:       <vxe-column field=\"sex\" title=\"Sex\" :edit-render=\"{name: 'input'}\"></vxe-column>",
          "14:       <vxe-column field=\"age\" title=\"Age\" :edit-render=\"{name: 'input'}\"></vxe-column>",
          "15:     </vxe-table>",
          "16:   </div>",
          "17: </template>",
          "19: <script lang=\"ts\">",
          "20: import Vue from 'vue'",
          "21: import type { VxeTableInstance, VxeTablePropTypes } from '../../../types'",
          "23: interface RowVO {",
          "24:   id: number",
          "25:   name: string",
          "26:   role: string",
          "27:   sex: string",
          "28:   age: number",
          "29:   address: string",
          "30: }",
          "32: export default Vue.extend({",
          "33:   data () {",
          "34:     const tableData: RowVO[] = [",
          "35:       { id: 10001, name: 'Test1', role: 'Develop', sex: 'Man', age: 28, address: 'test abc' },",
          "36:       { id: 10002, name: 'Test2', role: 'Test', sex: 'Women', age: 22, address: 'Guangzhou' },",
          "37:       { id: 10003, name: 'Test3', role: 'PM', sex: 'Man', age: 32, address: 'Shanghai' },",
          "38:       { id: 10004, name: 'Test4', role: 'Designer', sex: 'Women', age: 24, address: 'Shanghai' }",
          "39:     ]",
          "41:     const editConfig: VxeTablePropTypes.EditConfig = {",
          "42:       trigger: 'click',",
          "43:       mode: 'cell'",
          "44:     }",
          "46:     return {",
          "47:       tableData,",
          "48:       editConfig",
          "49:     }",
          "50:   },",
          "51:   methods: {",
          "52:     async insertEvent () {",
          "53:       const $table = this.$refs.tableRef as VxeTableInstance<RowVO>",
          "54:       if ($table) {",
          "55:         const record = {",
          "56:           sex: '1',",
          "57:           date12: '2021-01-01'",
          "58:         }",
          "59:         const { row: newRow } = await $table.insert(record)",
          "60:         await $table.setEditCell(newRow, 'name')",
          "61:       }",
          "62:     },",
          "63:     editActivatedEvent (params: any) {",
          "64:       console.log(params)",
          "65:     }",
          "66:   }",
          "67: })",
          "68: </script>",
          "",
          "---------------"
        ],
        "packages/grid/src/grid.ts||packages/grid/src/grid.ts": [
          "File: packages/grid/src/grid.ts -> packages/grid/src/grid.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "410:       return this.computePagerOpts",
          "411:     },",
          "412:     computePagerOpts () {",
          "414:     },",
          "415:     formOpts () {",
          "416:       return this.computeFormOpts",
          "417:     },",
          "418:     computeFormOpts () {",
          "420:     },",
          "421:     toolbarOpts () {",
          "422:       return this.computeToolbarOpts",
          "423:     },",
          "424:     computeToolbarOpts () {",
          "426:     },",
          "427:     zoomOpts () {",
          "428:       return this.computeZoomOpts",
          "429:     },",
          "430:     computeZoomOpts () {",
          "432:     },",
          "433:     renderStyle () {",
          "434:       return this.isZMax ? { zIndex: this.tZindex } : null",
          "",
          "[Removed Lines]",
          "413:       return Object.assign({}, XEUtils.clone(getConfig().grid.pagerConfig, true), this.pagerConfig)",
          "419:       return Object.assign({}, XEUtils.clone(getConfig().grid.formConfig, true), this.formConfig)",
          "425:       return Object.assign({}, XEUtils.clone(getConfig().grid.toolbarConfig, true), this.toolbarConfig || this.toolbar)",
          "431:       return Object.assign({}, XEUtils.clone(getConfig().grid.zoomConfig, true), this.zoomConfig)",
          "",
          "[Added Lines]",
          "413:       return Object.assign({}, getConfig().grid.pagerConfig, this.pagerConfig)",
          "419:       return Object.assign({}, getConfig().grid.formConfig, this.formConfig)",
          "425:       return Object.assign({}, getConfig().grid.toolbarConfig, this.toolbarConfig || this.toolbar)",
          "431:       return Object.assign({}, getConfig().grid.zoomConfig, this.zoomConfig)",
          "",
          "---------------"
        ],
        "packages/locale/lang/en-US.ts||packages/locale/lang/en-US.ts": [
          "File: packages/locale/lang/en-US.ts -> packages/locale/lang/en-US.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:       goto: 'Go to',",
          "90:       gotoTitle: 'Number',",
          "91:       pagesize: '{0}/page',",
          "93:       pageClassifier: '',",
          "94:       homePage: 'Home',",
          "95:       homePageTitle: 'Home page',",
          "",
          "[Removed Lines]",
          "92:       total: 'Total {0} record',",
          "",
          "[Added Lines]",
          "92:       total: 'Total {0} records',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "320:         fileTitle: 'Upload file'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: 'Form name',",
          "325:       defFormTitle: 'Unnamed form',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: 'No Data'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/es-ES.ts||packages/locale/lang/es-ES.ts": [
          "File: packages/locale/lang/es-ES.ts -> packages/locale/lang/es-ES.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: 'Upload file'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: 'Form name',",
          "325:       defFormTitle: 'Unnamed form',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: 'No Data'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/hu-HU.ts||packages/locale/lang/hu-HU.ts": [
          "File: packages/locale/lang/hu-HU.ts -> packages/locale/lang/hu-HU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: 'F\u00e1jlok felt\u00f6lt\u00e9se'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: 'forma neve',",
          "325:       defFormTitle: 'n\u00e9vtelen forma',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.ts||packages/locale/lang/ja-JP.ts": [
          "File: packages/locale/lang/ja-JP.ts -> packages/locale/lang/ja-JP.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: 'Form name',",
          "325:       defFormTitle: 'Unnamed form',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/ko-KR.ts||packages/locale/lang/ko-KR.ts": [
          "File: packages/locale/lang/ko-KR.ts -> packages/locale/lang/ko-KR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u8868\u5355\u540d\u79f0',",
          "325:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u5355',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/pt-BR.ts||packages/locale/lang/pt-BR.ts": [
          "File: packages/locale/lang/pt-BR.ts -> packages/locale/lang/pt-BR.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: 'Form name',",
          "325:       defFormTitle: 'Unnamed form',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/ru-RU.ts||packages/locale/lang/ru-RU.ts": [
          "File: packages/locale/lang/ru-RU.ts -> packages/locale/lang/ru-RU.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0444\u0430\u0439\u043b\u044b'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u0438\u043c\u044f \u0444\u043e\u0440\u043c\u044b',",
          "325:       defFormTitle: '\u0431\u0435\u0437\u044b\u043c\u044f\u043d\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/uk-UA.ts||packages/locale/lang/uk-UA.ts": [
          "File: packages/locale/lang/uk-UA.ts -> packages/locale/lang/uk-UA.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u8868\u5355\u540d\u79f0',",
          "325:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u5355',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/vi-VN.ts||packages/locale/lang/vi-VN.ts": [
          "File: packages/locale/lang/vi-VN.ts -> packages/locale/lang/vi-VN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u8868\u5355\u540d\u79f0',",
          "325:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u5355',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CHT.ts||packages/locale/lang/zh-CHT.ts": [
          "File: packages/locale/lang/zh-CHT.ts -> packages/locale/lang/zh-CHT.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u50b3\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u8868\u55ae\u540d\u7a31',",
          "325:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u55ae',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.ts||packages/locale/lang/zh-CN.ts": [
          "File: packages/locale/lang/zh-CN.ts -> packages/locale/lang/zh-CN.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:         fileTitle: '\u4e0a\u4f20\u6587\u4ef6'",
          "321:       }",
          "322:     },",
          "323:     formDesign: {",
          "324:       formName: '\u8868\u5355\u540d\u79f0',",
          "325:       defFormTitle: '\u672a\u547d\u540d\u7684\u8868\u5355',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "323:     empty: {",
          "324:       defText: '\u6682\u65e0\u6570\u636e'",
          "325:     },",
          "",
          "---------------"
        ],
        "packages/table/module/edit/mixin.ts||packages/table/module/edit/mixin.ts": [
          "File: packages/table/module/edit/mixin.ts -> packages/table/module/edit/mixin.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "469:                 }",
          "470:               })",
          "471:             }",
          "482:             if (type === 'edit-activated') {",
          "491:             }",
          "492:           } else {",
          "493:             const { column: oldColumn } = actived",
          "",
          "[Removed Lines]",
          "472:             this.emitEvent(type, {",
          "473:               row,",
          "474:               rowIndex: this.getRowIndex(row),",
          "475:               $rowIndex: this.getVMRowIndex(row),",
          "476:               column,",
          "477:               columnIndex: this.getColumnIndex(column),",
          "478:               $columnIndex: this.getVMColumnIndex(column)",
          "479:             }, evnt)",
          "483:               this.emitEvent('edit-actived', {",
          "484:                 row,",
          "485:                 rowIndex: this.getRowIndex(row),",
          "486:                 $rowIndex: this.getVMRowIndex(row),",
          "487:                 column,",
          "488:                 columnIndex: this.getColumnIndex(column),",
          "489:                 $columnIndex: this.getVMColumnIndex(column)",
          "490:               }, evnt)",
          "",
          "[Added Lines]",
          "472:             this.emitEvent(type, params, evnt)",
          "476:               this.emitEvent('edit-actived', params, evnt)",
          "",
          "---------------"
        ],
        "packages/table/src/methods.ts||packages/table/src/methods.ts": [
          "File: packages/table/src/methods.ts -> packages/table/src/methods.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import { getSlotVNs } from '../../ui/src/vn'",
          "8: import { warnLog, errLog } from '../../ui/src/log'",
          "10: const { getConfig, getI18n, renderer, formats, interceptor } = VxeUI",
          "12: const isWebkit = browse['-webkit'] && !browse.edge",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: import type { VxeTableDefines } from '../../../types'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "656:     const childrenField = treeOpts.children || treeOpts.childrenField",
          "657:     const hasChildField = treeOpts.hasChild || treeOpts.hasChildField",
          "658:     const rowkey = getRowkey(this)",
          "659:     const isLazy = treeConfig && treeOpts.lazy",
          "660:     const handleCache = (row: any, index: any, items: any, path: any, parent: any, nodes: any) => {",
          "661:       let rowid = getRowid(this, row)",
          "662:       const seq = treeConfig && path ? toTreePathSeq(path) : index + 1",
          "",
          "[Removed Lines]",
          "653:   cacheRowMap (source: any) {",
          "654:     const { treeConfig, treeOpts, tableFullData, fullDataRowMap, fullAllDataRowMap, tableFullTreeData } = this",
          "655:     let { fullDataRowIdData, fullAllDataRowIdData } = this",
          "",
          "[Added Lines]",
          "655:   cacheRowMap (isSource?: boolean) {",
          "656:     const { treeConfig, treeOpts, tableFullData, fullAllDataRowIdData, fullAllDataRowMap, tableFullTreeData } = this",
          "661:     const fullAllDataRowIdMaps: Record<string, VxeTableDefines.RowCacheItem> = {}",
          "662:     const fullDataRowIdMaps: Record<string, VxeTableDefines.RowCacheItem> = {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "668:       if (isLazy && row[hasChildField] && XEUtils.isUndefined(row[childrenField])) {",
          "669:         row[childrenField] = null",
          "670:       }",
          "675:       }",
          "678:     }",
          "682:     }",
          "684:     fullAllDataRowMap.clear()",
          "685:     if (treeConfig) {",
          "686:       XEUtils.eachTree(tableFullTreeData, handleCache, { children: childrenField })",
          "",
          "[Removed Lines]",
          "671:       const rest = { row, rowid, seq, index: treeConfig && parent ? -1 : index, _index: -1, $index: -1, items, parent, level }",
          "672:       if (source) {",
          "673:         fullDataRowIdData[rowid] = rest",
          "674:         fullDataRowMap.set(row, rest)",
          "676:       fullAllDataRowIdData[rowid] = rest",
          "677:       fullAllDataRowMap.set(row, rest)",
          "679:     if (source) {",
          "680:       fullDataRowIdData = this.fullDataRowIdData = {}",
          "681:       fullDataRowMap.clear()",
          "683:     fullAllDataRowIdData = this.fullAllDataRowIdData = {}",
          "",
          "[Added Lines]",
          "674:       let cacheItem = fullAllDataRowIdData[rowid]",
          "675:       if (!cacheItem) {",
          "676:         cacheItem = { row, rowid, seq, index: -1, _index: -1, $index: -1, items, parent, level }",
          "677:       }",
          "678:       if (isSource) {",
          "679:         cacheItem.index = treeConfig && parent ? -1 : index",
          "680:         fullDataRowIdMaps[rowid] = cacheItem",
          "682:       fullAllDataRowIdMaps[rowid] = cacheItem",
          "684:     if (isSource) {",
          "685:       this.fullDataRowIdData = fullDataRowIdMaps",
          "687:     this.fullAllDataRowIdData = fullAllDataRowIdMaps",
          "",
          "---------------"
        ],
        "packages/table/src/table.ts||packages/table/src/table.ts": [
          "File: packages/table/src/table.ts -> packages/table/src/table.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:       return this.computeValidOpts",
          "374:     },",
          "375:     computeValidOpts () {",
          "377:     },",
          "378:     sXOpts () {",
          "379:       return this.computeSXOpts",
          "380:     },",
          "381:     computeSXOpts () {",
          "383:     },",
          "384:     sYOpts () {",
          "385:       return this.computeSYOpts",
          "386:     },",
          "387:     computeSYOpts () {",
          "389:     },",
          "390:     rowHeightMaps () {",
          "391:       return {",
          "",
          "[Removed Lines]",
          "376:       return Object.assign({ message: 'default' }, XEUtils.clone(getConfig().table.validConfig, true), this.validConfig)",
          "382:       return Object.assign({}, XEUtils.clone(getConfig().table.scrollX, true), this.scrollX)",
          "388:       return Object.assign({}, XEUtils.clone(getConfig().table.scrollY, true), this.scrollY)",
          "",
          "[Added Lines]",
          "376:       return Object.assign({ message: 'default' }, getConfig().table.validConfig, this.validConfig)",
          "382:       return Object.assign({}, getConfig().table.scrollX, this.scrollX)",
          "388:       return Object.assign({}, getConfig().table.scrollY, this.scrollY)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "399:       return this.computeColumnOpts",
          "400:     },",
          "401:     computeColumnOpts () {",
          "403:     },",
          "404:     rowOpts () {",
          "405:       return this.computeRowOpts",
          "406:     },",
          "407:     computeRowOpts () {",
          "409:     },",
          "410:     resizeOpts () {",
          "411:       return this.computeResizeOpts",
          "412:     },",
          "413:     computeResizeOpts () {",
          "415:     },",
          "416:     resizableOpts () {",
          "417:       return this.computeResizableOpts",
          "418:     },",
          "419:     computeResizableOpts () {",
          "421:     },",
          "422:     seqOpts () {",
          "423:       return this.computeSeqOpts",
          "424:     },",
          "425:     computeSeqOpts () {",
          "427:     },",
          "428:     radioOpts () {",
          "429:       return this.computeRadioOpts",
          "430:     },",
          "431:     computeRadioOpts () {",
          "433:     },",
          "434:     checkboxOpts () {",
          "435:       return this.computeCheckboxOpts",
          "436:     },",
          "437:     computeCheckboxOpts () {",
          "439:     },",
          "440:     tooltipOpts () {",
          "441:       return this.computeTooltipOpts",
          "442:     },",
          "443:     computeTooltipOpts () {",
          "445:     },",
          "446:     tipConfig () {",
          "447:       return { ...this.tooltipOpts }",
          "",
          "[Removed Lines]",
          "402:       return Object.assign({}, XEUtils.clone(getConfig().table.columnConfig, true), this.columnConfig)",
          "408:       return Object.assign({}, XEUtils.clone(getConfig().table.rowConfig, true), this.rowConfig)",
          "414:       return Object.assign({}, XEUtils.clone(getConfig().table.resizeConfig, true), this.resizeConfig)",
          "420:       return Object.assign({}, XEUtils.clone(getConfig().table.resizableConfig, true), this.resizableConfig)",
          "426:       return Object.assign({ startIndex: 0 }, XEUtils.clone(getConfig().table.seqConfig, true), this.seqConfig)",
          "432:       return Object.assign({}, XEUtils.clone(getConfig().table.radioConfig, true), this.radioConfig)",
          "438:       return Object.assign({}, XEUtils.clone(getConfig().table.checkboxConfig, true), this.checkboxConfig)",
          "444:       return Object.assign({}, XEUtils.clone(getConfig().tooltip, true), XEUtils.clone(getConfig().table.tooltipConfig, true), this.tooltipConfig)",
          "",
          "[Added Lines]",
          "402:       return Object.assign({}, getConfig().table.columnConfig, this.columnConfig)",
          "408:       return Object.assign({}, getConfig().table.rowConfig, this.rowConfig)",
          "414:       return Object.assign({}, getConfig().table.resizeConfig, this.resizeConfig)",
          "420:       return Object.assign({}, getConfig().table.resizableConfig, this.resizableConfig)",
          "426:       return Object.assign({ startIndex: 0 }, getConfig().table.seqConfig, this.seqConfig)",
          "432:       return Object.assign({}, getConfig().table.radioConfig, this.radioConfig)",
          "438:       return Object.assign({}, getConfig().table.checkboxConfig, this.checkboxConfig)",
          "444:       return Object.assign({}, getConfig().tooltip, getConfig().table.tooltipConfig, this.tooltipConfig)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "453:       return this.computeEditOpts",
          "454:     },",
          "455:     computeEditOpts () {",
          "457:     },",
          "458:     sortOpts () {",
          "459:       return this.computeSortOpts",
          "460:     },",
          "461:     computeSortOpts () {",
          "463:     },",
          "464:     filterOpts () {",
          "465:       return this.computeFilterOpts",
          "466:     },",
          "467:     computeFilterOpts () {",
          "469:     },",
          "470:     mouseOpts () {",
          "471:       return this.computeMouseOpts",
          "472:     },",
          "473:     computeMouseOpts () {",
          "475:     },",
          "476:     areaOpts () {",
          "477:       return this.computeAreaOpts",
          "478:     },",
          "479:     computeAreaOpts () {",
          "481:     },",
          "482:     keyboardOpts () {",
          "483:       return this.computeKeyboardOpts",
          "484:     },",
          "485:     computeKeyboardOpts () {",
          "487:     },",
          "488:     clipOpts () {",
          "489:       return this.computeClipOpts",
          "490:     },",
          "491:     computeClipOpts () {",
          "493:     },",
          "494:     fnrOpts () {",
          "495:       return this.computeFNROpts",
          "496:     },",
          "497:     computeFNROpts () {",
          "499:     },",
          "500:     headerCtxMenu () {",
          "501:       const headerOpts = this.ctxMenuOpts.header",
          "",
          "[Removed Lines]",
          "456:       return Object.assign({}, XEUtils.clone(getConfig().table.editConfig, true), this.editConfig)",
          "462:       return Object.assign({ orders: ['asc', 'desc', null] }, XEUtils.clone(getConfig().table.sortConfig, true), this.sortConfig)",
          "468:       return Object.assign({}, XEUtils.clone(getConfig().table.filterConfig, true), this.filterConfig)",
          "474:       return Object.assign({}, XEUtils.clone(getConfig().table.mouseConfig, true), this.mouseConfig)",
          "480:       return Object.assign({}, XEUtils.clone(getConfig().table.areaConfig, true), this.areaConfig)",
          "486:       return Object.assign({}, XEUtils.clone(getConfig().table.keyboardConfig, true), this.keyboardConfig)",
          "492:       return Object.assign({}, XEUtils.clone(getConfig().table.clipConfig, true), this.clipConfig)",
          "498:       return Object.assign({}, XEUtils.clone(getConfig().table.fnrConfig, true), this.fnrConfig)",
          "",
          "[Added Lines]",
          "456:       return Object.assign({}, getConfig().table.editConfig, this.editConfig)",
          "462:       return Object.assign({ orders: ['asc', 'desc', null] }, getConfig().table.sortConfig, this.sortConfig)",
          "468:       return Object.assign({}, getConfig().table.filterConfig, this.filterConfig)",
          "474:       return Object.assign({}, getConfig().table.mouseConfig, this.mouseConfig)",
          "480:       return Object.assign({}, getConfig().table.areaConfig, this.areaConfig)",
          "486:       return Object.assign({}, getConfig().table.keyboardConfig, this.keyboardConfig)",
          "492:       return Object.assign({}, getConfig().table.clipConfig, this.clipConfig)",
          "498:       return Object.assign({}, getConfig().table.fnrConfig, this.fnrConfig)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "525:       return this.computeMenuOpts",
          "526:     },",
          "527:     computeMenuOpts () {",
          "529:     },",
          "530:     exportOpts () {",
          "531:       return this.computeExportOpts",
          "532:     },",
          "533:     computeExportOpts () {",
          "535:     },",
          "536:     importOpts () {",
          "537:       return this.computeImportOpts",
          "538:     },",
          "539:     computeImportOpts () {",
          "541:     },",
          "542:     printOpts () {",
          "543:       return this.computePrintOpts",
          "544:     },",
          "545:     computePrintOpts () {",
          "547:     },",
          "548:     expandOpts () {",
          "549:       return this.computeExpandOpts",
          "550:     },",
          "551:     computeExpandOpts () {",
          "553:     },",
          "554:     treeOpts () {",
          "555:       return this.computeTreeOpts",
          "556:     },",
          "557:     computeTreeOpts () {",
          "559:     },",
          "560:     emptyOpts () {",
          "561:       return this.computeEmptyOpts",
          "562:     },",
          "563:     computeEmptyOpts () {",
          "565:     },",
          "566:     loadingOpts () {",
          "567:       return this.computeLoadingOpts",
          "568:     },",
          "569:     computeLoadingOpts () {",
          "571:     },",
          "572:     cellOffsetWidth () {",
          "573:       return this.border ? Math.max(2, Math.ceil(this.scrollbarWidth / this.tableColumn.length)) : 1",
          "",
          "[Removed Lines]",
          "528:       return Object.assign({}, XEUtils.clone(getConfig().table.menuConfig, true), this.contextMenu, this.menuConfig)",
          "534:       return Object.assign({}, XEUtils.clone(getConfig().table.exportConfig, true), this.exportConfig)",
          "540:       return Object.assign({}, XEUtils.clone(getConfig().table.importConfig, true), this.importConfig)",
          "546:       return Object.assign({}, XEUtils.clone(getConfig().table.printConfig, true), this.printConfig)",
          "552:       return Object.assign({}, XEUtils.clone(getConfig().table.expandConfig, true), this.expandConfig)",
          "558:       return Object.assign({}, XEUtils.clone(getConfig().table.treeConfig, true), this.treeConfig)",
          "564:       return Object.assign({}, XEUtils.clone(getConfig().table.emptyRender, true), this.emptyRender)",
          "570:       return Object.assign({}, XEUtils.clone(getConfig().table.loadingConfig, true), this.loadingConfig)",
          "",
          "[Added Lines]",
          "528:       return Object.assign({}, getConfig().table.menuConfig, this.contextMenu, this.menuConfig)",
          "534:       return Object.assign({}, getConfig().table.exportConfig, this.exportConfig)",
          "540:       return Object.assign({}, getConfig().table.importConfig, this.importConfig)",
          "546:       return Object.assign({}, getConfig().table.printConfig, this.printConfig)",
          "552:       return Object.assign({}, getConfig().table.expandConfig, this.expandConfig)",
          "558:       return Object.assign({}, getConfig().table.treeConfig, this.treeConfig)",
          "564:       return Object.assign({}, getConfig().table.emptyRender, this.emptyRender)",
          "570:       return Object.assign({}, getConfig().table.loadingConfig, this.loadingConfig)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "576:       return this.computeCustomOpts",
          "577:     },",
          "578:     computeCustomOpts () {",
          "580:     },",
          "581:     autoWidthColumnList () {",
          "582:       const { tableColumn, visibleColumn } = this",
          "",
          "[Removed Lines]",
          "579:       return Object.assign({}, XEUtils.clone(getConfig().table.customConfig, true), this.customConfig)",
          "",
          "[Added Lines]",
          "579:       return Object.assign({}, getConfig().table.customConfig, this.customConfig)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36a15067102b85d69e296230428f4a941effe8c3",
      "candidate_info": {
        "commit_hash": "36a15067102b85d69e296230428f4a941effe8c3",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/36a15067102b85d69e296230428f4a941effe8c3",
        "files": [
          "packages/table/src/column.js",
          "packages/table/src/columnInfo.js",
          "packages/table/src/methods.js",
          "packages/tools/utils.js",
          "packages/v-x-e-table/src/renderer.js"
        ],
        "message": "\u4fee\u590d\u91cd\u590d\u63d2\u5165\u5b50\u8282\u70b9\u95ee\u9898",
        "before_after_code_files": [
          "packages/table/src/column.js||packages/table/src/column.js",
          "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/tools/utils.js||packages/tools/utils.js",
          "packages/v-x-e-table/src/renderer.js||packages/v-x-e-table/src/renderer.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/column.js||packages/table/src/column.js": [
          "File: packages/table/src/column.js -> packages/table/src/column.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:     this.columnConfig = this.createColumn(this.$xetable, this)",
          "130:   },",
          "131:   mounted () {",
          "133:   },",
          "134:   destroyed () {",
          "135:     UtilTools.destroyColumn(this)",
          "",
          "[Removed Lines]",
          "132:     UtilTools.assemColumn(this)",
          "",
          "[Added Lines]",
          "132:     UtilTools.assembleColumn(this)",
          "",
          "---------------"
        ],
        "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js": [
          "File: packages/table/src/columnInfo.js -> packages/table/src/columnInfo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:   }",
          "153:   getKey () {",
          "155:   }",
          "157:   update (name, value) {",
          "",
          "[Removed Lines]",
          "154:     return this.field || (this.type ? `type=${this.type}` : null)",
          "",
          "[Added Lines]",
          "154:     const { type } = this",
          "155:     return this.field || (type ? `type=${type}` : null)",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "725:       }, { children: childrenField })",
          "726:       row[childrenField] = rows",
          "727:       if (transform) {",
          "729:       }",
          "730:       this.updateAfterDataIndex()",
          "731:       return rows",
          "",
          "[Removed Lines]",
          "728:         row[mapChildrenField] = rows",
          "",
          "[Added Lines]",
          "728:         row[mapChildrenField] = XEUtils.clone(rows, false)",
          "",
          "---------------"
        ],
        "packages/tools/utils.js||packages/tools/utils.js": [
          "File: packages/tools/utils.js -> packages/tools/utils.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     return XEUtils.set(row, column.field, value)",
          "49:   },",
          "52:     const { $el, $xetable, $xecolumn, columnConfig } = _vm",
          "53:     const groupConfig = $xecolumn ? $xecolumn.columnConfig : null",
          "54:     columnConfig.slots = _vm.$scopedSlots",
          "",
          "[Removed Lines]",
          "51:   assemColumn (_vm) {",
          "",
          "[Added Lines]",
          "51:   assembleColumn (_vm) {",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/renderer.js||packages/v-x-e-table/src/renderer.js": [
          "File: packages/v-x-e-table/src/renderer.js -> packages/v-x-e-table/src/renderer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:   return cellValue == data",
          "419: }",
          "421: function nativeSelectEditRender (h, renderOpts, params) {",
          "422:   return [",
          "423:     h('select', {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421: function handleInputFilterMethod ({ option, row, column }) {",
          "422:   const { data } = option",
          "423:   const cellValue = XEUtils.get(row, column.property)",
          "425:   return XEUtils.toValueString(cellValue).indexOf(data) > -1",
          "426: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "662:     renderEdit: nativeEditRender,",
          "663:     renderDefault: nativeEditRender,",
          "664:     renderFilter: nativeFilterRender,",
          "666:     renderItemContent: nativeItemRender",
          "667:   },",
          "668:   textarea: {",
          "",
          "[Removed Lines]",
          "665:     defaultFilterMethod: handleFilterMethod,",
          "",
          "[Added Lines]",
          "672:     defaultFilterMethod: handleInputFilterMethod,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "727:     },",
          "728:     renderDefault: defaultEditRender,",
          "729:     renderFilter: defaultFilterRender,",
          "731:     renderItemContent: defaultItemRender",
          "732:   },",
          "733:   VxeTextarea: {",
          "",
          "[Removed Lines]",
          "730:     defaultFilterMethod: handleFilterMethod,",
          "",
          "[Added Lines]",
          "737:     defaultFilterMethod: handleInputFilterMethod,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "838:     },",
          "839:     renderDefault: oldEditRender,",
          "840:     renderFilter: oldFilterRender,",
          "842:     renderItemContent: oldItemRender",
          "843:   },",
          "844:   $textarea: {",
          "",
          "[Removed Lines]",
          "841:     defaultFilterMethod: handleFilterMethod,",
          "",
          "[Added Lines]",
          "848:     defaultFilterMethod: handleInputFilterMethod,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "210eb67b9c471cb5af7ef056081899dc408cd7a8",
      "candidate_info": {
        "commit_hash": "210eb67b9c471cb5af7ef056081899dc408cd7a8",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/210eb67b9c471cb5af7ef056081899dc408cd7a8",
        "files": [
          "packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js",
          "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js",
          "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js",
          "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/locale/lang/en-US.js||packages/locale/lang/en-US.js": [
          "File: packages/locale/lang/en-US.js -> packages/locale/lang/en-US.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:       confirmFilter: 'Confirm',",
          "136:       resetFilter: 'Reset',",
          "137:       allFilter: 'All',",
          "139:       sortAsc: 'Ascending: lowest to highest',",
          "140:       sortDesc: 'Descending: highest to lowest',",
          "141:       filter: 'Enable filtering on selected columns',",
          "",
          "[Removed Lines]",
          "138:       sortSingle: 'Click sort',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/locale/lang/ja-JP.js||packages/locale/lang/ja-JP.js": [
          "File: packages/locale/lang/ja-JP.js -> packages/locale/lang/ja-JP.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:       confirmFilter: '\u5b8c\u4e86',",
          "136:       resetFilter: '\u30ea\u30bb\u30c3\u30c8',",
          "137:       allFilter: '\u5168\u3066',",
          "139:       sortAsc: '\u6607\u9806',",
          "140:       sortDesc: '\u964d\u9806',",
          "141:       filter: '\u9078\u629e\u3057\u305f\u5217\u3092\u30d5\u30a3\u30eb\u30bf\u3059\u308b',",
          "",
          "[Removed Lines]",
          "138:       sortSingle: '\u70b9\u51fb\u6392\u5e8f',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-CN.js||packages/locale/lang/zh-CN.js": [
          "File: packages/locale/lang/zh-CN.js -> packages/locale/lang/zh-CN.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:       confirmFilter: '\u7b5b\u9009',",
          "136:       resetFilter: '\u91cd\u7f6e',",
          "137:       allFilter: '\u5168\u90e8',",
          "139:       sortAsc: '\u5347\u5e8f\uff1a\u6700\u4f4e\u5230\u6700\u9ad8',",
          "140:       sortDesc: '\u964d\u5e8f\uff1a\u6700\u9ad8\u5230\u6700\u4f4e',",
          "141:       filter: '\u5bf9\u6240\u9009\u7684\u5217\u542f\u7528\u7b5b\u9009',",
          "",
          "[Removed Lines]",
          "138:       sortSingle: '\u70b9\u51fb\u6392\u5e8f',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/locale/lang/zh-TC.js||packages/locale/lang/zh-TC.js": [
          "File: packages/locale/lang/zh-TC.js -> packages/locale/lang/zh-TC.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:       confirmFilter: '\u7be9\u9078',",
          "136:       resetFilter: '\u91cd\u7f6e',",
          "137:       allFilter: '\u5168\u90e8',",
          "139:       sortAsc: '\u6309\u4f4e\u5230\u9ad8\u6392\u5e8f',",
          "140:       sortDesc: '\u6309\u9ad8\u5230\u4f4e\u6392\u5e8f',",
          "141:       filter: '\u5c0d\u6240\u9078\u7684\u5217\u555f\u7528\u7be9\u9078',",
          "",
          "[Removed Lines]",
          "138:       sortSingle: '\u9ede\u64ca\u6392\u5e8f',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}