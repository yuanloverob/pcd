{
  "cve_id": "CVE-2024-5998",
  "cve_desc": "A vulnerability in the FAISS.deserialize_from_bytes function of langchain-ai/langchain allows for pickle deserialization of untrusted data. This can lead to the execution of arbitrary commands via the os.system function. The issue affects the latest version of the product.",
  "repo": "langchain-ai/langchain",
  "patch_hash": "77209f315efd13442ec51c67719ba37dfaa44511",
  "patch_info": {
    "commit_hash": "77209f315efd13442ec51c67719ba37dfaa44511",
    "repo": "langchain-ai/langchain",
    "commit_url": "https://github.com/langchain-ai/langchain/commit/77209f315efd13442ec51c67719ba37dfaa44511",
    "files": [
      "libs/community/langchain_community/vectorstores/faiss.py"
    ],
    "message": "community[patch]: FAISS VectorStore deserializer should be opt-in (#22861)\n\nFAISS deserializer uses pickle module. Users have to opt-in to\nde-serialize.",
    "before_after_code_files": [
      "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py"
    ]
  },
  "patch_diff": {
    "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py": [
      "File: libs/community/langchain_community/vectorstores/faiss.py -> libs/community/langchain_community/vectorstores/faiss.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1105:         cls,",
      "1106:         serialized: bytes,",
      "1107:         embeddings: Embeddings,",
      "1109:     ) -> FAISS:",
      "1110:         \"\"\"Deserialize FAISS index, docstore, and index_to_docstore_id from bytes.\"\"\"",
      "1111:         index, docstore, index_to_docstore_id = pickle.loads(serialized)",
      "1112:         return cls(embeddings, index, docstore, index_to_docstore_id, **kwargs)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1109:         allow_dangerous_deserialization: bool = False,",
      "1113:         if not allow_dangerous_deserialization:",
      "1114:             raise ValueError(",
      "1115:                 \"The de-serialization relies loading a pickle file. \"",
      "1116:                 \"Pickle files can be modified to deliver a malicious payload that \"",
      "1117:                 \"results in execution of arbitrary code on your machine.\"",
      "1118:                 \"You will need to set `allow_dangerous_deserialization` to `True` to \"",
      "1119:                 \"enable deserialization. If you do this, make sure that you \"",
      "1120:                 \"trust the source of the data. For example, if you are loading a \"",
      "1121:                 \"file that you created, and know that no one else has modified the \"",
      "1122:                 \"file, then this is safe to do. Do not set this to `True` if you are \"",
      "1123:                 \"loading a file from an untrusted source (e.g., some random site on \"",
      "1124:                 \"the internet.).\"",
      "1125:             )",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b0322a8fa572d3bc47ddf6abab2a97658da68e49",
      "candidate_info": {
        "commit_hash": "b0322a8fa572d3bc47ddf6abab2a97658da68e49",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/b0322a8fa572d3bc47ddf6abab2a97658da68e49",
        "files": [
          "libs/community/langchain_community/vectorstores/faiss.py"
        ],
        "message": "community[patch]: FAISS VectorStore deserializer should be opt-in (#22861)\n\nFAISS deserializer uses pickle module. Users have to opt-in to\nde-serialize.",
        "before_after_code_files": [
          "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py"
          ],
          "candidate": [
            "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py"
          ]
        }
      },
      "candidate_diff": {
        "libs/community/langchain_community/vectorstores/faiss.py||libs/community/langchain_community/vectorstores/faiss.py": [
          "File: libs/community/langchain_community/vectorstores/faiss.py -> libs/community/langchain_community/vectorstores/faiss.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1105:         cls,",
          "1106:         serialized: bytes,",
          "1107:         embeddings: Embeddings,",
          "1109:     ) -> FAISS:",
          "1110:         \"\"\"Deserialize FAISS index, docstore, and index_to_docstore_id from bytes.\"\"\"",
          "1111:         index, docstore, index_to_docstore_id = pickle.loads(serialized)",
          "1112:         return cls(embeddings, index, docstore, index_to_docstore_id, **kwargs)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1109:         allow_dangerous_deserialization: bool = False,",
          "1113:         if not allow_dangerous_deserialization:",
          "1114:             raise ValueError(",
          "1115:                 \"The de-serialization relies loading a pickle file. \"",
          "1116:                 \"Pickle files can be modified to deliver a malicious payload that \"",
          "1117:                 \"results in execution of arbitrary code on your machine.\"",
          "1118:                 \"You will need to set `allow_dangerous_deserialization` to `True` to \"",
          "1119:                 \"enable deserialization. If you do this, make sure that you \"",
          "1120:                 \"trust the source of the data. For example, if you are loading a \"",
          "1121:                 \"file that you created, and know that no one else has modified the \"",
          "1122:                 \"file, then this is safe to do. Do not set this to `True` if you are \"",
          "1123:                 \"loading a file from an untrusted source (e.g., some random site on \"",
          "1124:                 \"the internet.).\"",
          "1125:             )",
          "",
          "---------------"
        ]
      }
    }
  ]
}