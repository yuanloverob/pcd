{
  "cve_id": "CVE-2021-28860",
  "cve_desc": "In Node.js mixme, prior to v0.5.1, an attacker can add or alter properties of an object via '__proto__' through the mutate() and merge() functions. The polluted attribute will be directly assigned to every object in the program. This will put the availability of the program at risk causing a potential denial of service (DoS).",
  "repo": "adaltas/node-mixme",
  "patch_hash": "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
  "patch_info": {
    "commit_hash": "cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
    "repo": "adaltas/node-mixme",
    "commit_url": "https://github.com/adaltas/node-mixme/commit/cfd5fbfc32368bcf7e06d1c5985ea60e34cd4028",
    "files": [
      "CHANGELOG.md",
      "dist/mixme.cjs.js",
      "dist/mixme.esm.js",
      "dist/mixme.umd.js",
      "lib/index.js",
      "src/index.coffee",
      "test/merge.coffee",
      "test/mutate.coffee"
    ],
    "message": "fix: dont pollute object proto #1",
    "before_after_code_files": [
      "dist/mixme.cjs.js||dist/mixme.cjs.js",
      "dist/mixme.esm.js||dist/mixme.esm.js",
      "dist/mixme.umd.js||dist/mixme.umd.js",
      "lib/index.js||lib/index.js",
      "src/index.coffee||src/index.coffee",
      "test/merge.coffee||test/merge.coffee",
      "test/mutate.coffee||test/mutate.coffee"
    ]
  },
  "patch_diff": {
    "dist/mixme.cjs.js||dist/mixme.cjs.js": [
      "File: dist/mixme.cjs.js -> dist/mixme.cjs.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: }",
      "24: exports.merge = function merge() {",
      "25:   return exports.mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));",
      "",
      "[Removed Lines]",
      "22: var _snake_case;",
      "",
      "[Added Lines]",
      "22: var _snake_case; exports.clone = void 0; exports.compare = void 0; exports.is_object = void 0; exports.is_object_literal = void 0; exports.merge = void 0; exports.mutate = void 0; exports.snake_case = void 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50:       }",
      "52:       for (name in source) {",
      "53:         target[name] = exports.mutate(target[name], source[name]);",
      "54:       }",
      "55:     } else if (Array.isArray(source)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "53:         if (name === '__proto__') {",
      "54:           continue;",
      "55:         }",
      "",
      "---------------"
    ],
    "dist/mixme.esm.js||dist/mixme.esm.js": [
      "File: dist/mixme.esm.js -> dist/mixme.esm.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:       }",
      "48:       for (name in source) {",
      "49:         target[name] = _mutate(target[name], source[name]);",
      "50:       }",
      "51:     } else if (Array.isArray(source)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:         if (name === '__proto__') {",
      "50:           continue;",
      "51:         }",
      "",
      "---------------"
    ],
    "dist/mixme.umd.js||dist/mixme.umd.js": [
      "File: dist/mixme.umd.js -> dist/mixme.umd.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "21:   }",
      "26:   exports.merge = function merge() {",
      "27:     return exports.mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));",
      "",
      "[Removed Lines]",
      "24:   var _snake_case;",
      "",
      "[Added Lines]",
      "24:   var _snake_case; exports.clone = void 0; exports.compare = void 0; exports.is_object = void 0; exports.is_object_literal = void 0; exports.merge = void 0; exports.mutate = void 0; exports.snake_case = void 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:         }",
      "54:         for (name in source) {",
      "55:           target[name] = exports.mutate(target[name], source[name]);",
      "56:         }",
      "57:       } else if (Array.isArray(source)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55:           if (name === '__proto__') {",
      "56:             continue;",
      "57:           }",
      "",
      "---------------"
    ],
    "lib/index.js||lib/index.js": [
      "File: lib/index.js -> lib/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "27:         target = {};",
      "28:       }",
      "29:       for (name in source) {",
      "30:         target[name] = mutate(target[name], source[name]);",
      "31:       }",
      "32:     } else if (Array.isArray(source)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30:         if (name === '__proto__') {",
      "31:           continue;",
      "32:         }",
      "",
      "---------------"
    ],
    "src/index.coffee||src/index.coffee": [
      "File: src/index.coffee -> src/index.coffee",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:     if is_object_literal source",
      "20:       target = {} unless is_object_literal target",
      "21:       for name of source",
      "22:         target[name] = mutate target[name], source[name]",
      "23:     else if Array.isArray source",
      "24:       target = for v in source",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22:         continue if name is '__proto__'",
      "",
      "---------------"
    ],
    "test/merge.coffee||test/merge.coffee": [
      "File: test/merge.coffee -> test/merge.coffee",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:     .should.eql a: 1, b: 2, c: 0",
      "26:     obj2",
      "27:     .should.eql a: 1, c: 3, d: 4",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29:   it 'dont merge proto', ->",
      "30:     merge {}, JSON.parse '{\"__proto__\": {\"polluted\": \"ohno\"}}'",
      "31:     obj = Object.create {}",
      "32:     should(obj.polluted).be.Undefined()",
      "",
      "---------------"
    ],
    "test/mutate.coffee||test/mutate.coffee": [
      "File: test/mutate.coffee -> test/mutate.coffee",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:       {...obj1}",
      "24:       .should.eql { a: 'a value', b: 'b new', c: { d: 'd new', f: 'f value'}}",
      "26:   describe '2nd arg not object', ->",
      "28:     it 'object with string', ->",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:     it 'dont merge proto', ->",
      "27:       src = {}",
      "28:       mutate src, JSON.parse '{\"__proto__\": {\"polluted\": \"ohno\"}}'",
      "29:       obj = Object.create {}",
      "30:       should(obj.polluted).be.Undefined()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d22c51a16e9da10d34ac52ea9189ef75d951c980",
      "candidate_info": {
        "commit_hash": "d22c51a16e9da10d34ac52ea9189ef75d951c980",
        "repo": "adaltas/node-mixme",
        "commit_url": "https://github.com/adaltas/node-mixme/commit/d22c51a16e9da10d34ac52ea9189ef75d951c980",
        "files": [
          "src/index.coffee"
        ],
        "message": "fix: relax properties excluded from copy",
        "before_after_code_files": [
          "src/index.coffee||src/index.coffee"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/index.coffee||src/index.coffee"
          ],
          "candidate": [
            "src/index.coffee||src/index.coffee"
          ]
        }
      },
      "candidate_diff": {
        "src/index.coffee||src/index.coffee": [
          "File: src/index.coffee -> src/index.coffee",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:         # See",
          "23:         # https://github.com/adaltas/node-mixme/issues/1",
          "24:         # https://github.com/adaltas/node-mixme/issues/2",
          "26:         target[name] = mutate target[name], source[name]",
          "27:     else if Array.isArray source",
          "28:       target = for v in source",
          "",
          "[Removed Lines]",
          "25:         continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name",
          "",
          "[Added Lines]",
          "25:         # continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name",
          "26:         # Unless proven wrong, I consider ok to copy any properties named eval",
          "27:         # or function, we are not executing those, only copying.",
          "28:         continue if /__proto__|constructor|prototype/.test name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf6af53c51ada2d3189dea5a25b8a9ee793d8197",
      "candidate_info": {
        "commit_hash": "cf6af53c51ada2d3189dea5a25b8a9ee793d8197",
        "repo": "adaltas/node-mixme",
        "commit_url": "https://github.com/adaltas/node-mixme/commit/cf6af53c51ada2d3189dea5a25b8a9ee793d8197",
        "files": [
          "dist/mixme.cjs.js",
          "dist/mixme.esm.js",
          "dist/mixme.umd.js",
          "lib/index.js",
          "src/index.coffee"
        ],
        "message": "fix: remove constructor from excluded properties",
        "before_after_code_files": [
          "dist/mixme.cjs.js||dist/mixme.cjs.js",
          "dist/mixme.esm.js||dist/mixme.esm.js",
          "dist/mixme.umd.js||dist/mixme.umd.js",
          "lib/index.js||lib/index.js",
          "src/index.coffee||src/index.coffee"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dist/mixme.cjs.js||dist/mixme.cjs.js",
            "dist/mixme.esm.js||dist/mixme.esm.js",
            "dist/mixme.umd.js||dist/mixme.umd.js",
            "lib/index.js||lib/index.js",
            "src/index.coffee||src/index.coffee"
          ],
          "candidate": [
            "dist/mixme.cjs.js||dist/mixme.cjs.js",
            "dist/mixme.esm.js||dist/mixme.esm.js",
            "dist/mixme.umd.js||dist/mixme.umd.js",
            "lib/index.js||lib/index.js",
            "src/index.coffee||src/index.coffee"
          ]
        }
      },
      "candidate_diff": {
        "dist/mixme.cjs.js||dist/mixme.cjs.js": [
          "File: dist/mixme.cjs.js -> dist/mixme.cjs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:       }",
          "52:       for (name in source) {",
          "57:           continue;",
          "58:         }",
          "",
          "[Removed Lines]",
          "53:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "[Added Lines]",
          "53:         if (/__proto__|prototype/.test(name)) {",
          "",
          "---------------"
        ],
        "dist/mixme.esm.js||dist/mixme.esm.js": [
          "File: dist/mixme.esm.js -> dist/mixme.esm.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:       }",
          "48:       for (name in source) {",
          "53:           continue;",
          "54:         }",
          "",
          "[Removed Lines]",
          "49:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "[Added Lines]",
          "49:         if (/__proto__|prototype/.test(name)) {",
          "",
          "---------------"
        ],
        "dist/mixme.umd.js||dist/mixme.umd.js": [
          "File: dist/mixme.umd.js -> dist/mixme.umd.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         }",
          "54:         for (name in source) {",
          "59:             continue;",
          "60:           }",
          "",
          "[Removed Lines]",
          "55:           if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "[Added Lines]",
          "55:           if (/__proto__|prototype/.test(name)) {",
          "",
          "---------------"
        ],
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:         target = {};",
          "28:       }",
          "29:       for (name in source) {",
          "34:           continue;",
          "35:         }",
          "36:         target[name] = mutate(target[name], source[name]);",
          "",
          "[Removed Lines]",
          "30:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "[Added Lines]",
          "30:         if (/__proto__|prototype/.test(name)) {",
          "",
          "---------------"
        ],
        "src/index.coffee||src/index.coffee": [
          "File: src/index.coffee -> src/index.coffee",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:         # continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name",
          "25:         # Unless proven wrong, I consider ok to copy any properties named eval",
          "26:         # or function, we are not executing those, only copying.",
          "28:         target[name] = mutate target[name], source[name]",
          "29:     else if Array.isArray source",
          "30:       target = for v in source",
          "",
          "[Removed Lines]",
          "27:         continue if /__proto__|constructor|prototype/.test name",
          "",
          "[Added Lines]",
          "27:         continue if /__proto__|prototype/.test name",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db70fe9bcbba451e9f8bd794a9fa7cdfa00125ad",
      "candidate_info": {
        "commit_hash": "db70fe9bcbba451e9f8bd794a9fa7cdfa00125ad",
        "repo": "adaltas/node-mixme",
        "commit_url": "https://github.com/adaltas/node-mixme/commit/db70fe9bcbba451e9f8bd794a9fa7cdfa00125ad",
        "files": [
          "CHANGELOG.md",
          "dist/mixme.cjs.js",
          "dist/mixme.esm.js",
          "dist/mixme.umd.js",
          "lib/index.js",
          "src/index.coffee"
        ],
        "message": "fix: prevent code injection in copying properties",
        "before_after_code_files": [
          "dist/mixme.cjs.js||dist/mixme.cjs.js",
          "dist/mixme.esm.js||dist/mixme.esm.js",
          "dist/mixme.umd.js||dist/mixme.umd.js",
          "lib/index.js||lib/index.js",
          "src/index.coffee||src/index.coffee"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "dist/mixme.cjs.js||dist/mixme.cjs.js",
            "dist/mixme.esm.js||dist/mixme.esm.js",
            "dist/mixme.umd.js||dist/mixme.umd.js",
            "lib/index.js||lib/index.js",
            "src/index.coffee||src/index.coffee"
          ],
          "candidate": [
            "dist/mixme.cjs.js||dist/mixme.cjs.js",
            "dist/mixme.esm.js||dist/mixme.esm.js",
            "dist/mixme.umd.js||dist/mixme.umd.js",
            "lib/index.js||lib/index.js",
            "src/index.coffee||src/index.coffee"
          ]
        }
      },
      "candidate_diff": {
        "dist/mixme.cjs.js||dist/mixme.cjs.js": [
          "File: dist/mixme.cjs.js -> dist/mixme.cjs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:       }",
          "52:       for (name in source) {",
          "54:           continue;",
          "55:         }",
          "",
          "[Removed Lines]",
          "53:         if (name === '__proto__') {",
          "",
          "[Added Lines]",
          "53:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "---------------"
        ],
        "dist/mixme.esm.js||dist/mixme.esm.js": [
          "File: dist/mixme.esm.js -> dist/mixme.esm.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:       }",
          "48:       for (name in source) {",
          "50:           continue;",
          "51:         }",
          "",
          "[Removed Lines]",
          "49:         if (name === '__proto__') {",
          "",
          "[Added Lines]",
          "49:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "---------------"
        ],
        "dist/mixme.umd.js||dist/mixme.umd.js": [
          "File: dist/mixme.umd.js -> dist/mixme.umd.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:         }",
          "54:         for (name in source) {",
          "56:             continue;",
          "57:           }",
          "",
          "[Removed Lines]",
          "55:           if (name === '__proto__') {",
          "",
          "[Added Lines]",
          "55:           if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "---------------"
        ],
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:         target = {};",
          "28:       }",
          "29:       for (name in source) {",
          "31:           continue;",
          "32:         }",
          "33:         target[name] = mutate(target[name], source[name]);",
          "",
          "[Removed Lines]",
          "30:         if (name === '__proto__') {",
          "",
          "[Added Lines]",
          "30:         if (/__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test(name)) {",
          "",
          "---------------"
        ],
        "src/index.coffee||src/index.coffee": [
          "File: src/index.coffee -> src/index.coffee",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     if is_object_literal source",
          "20:       target = {} unless is_object_literal target",
          "21:       for name of source",
          "23:         target[name] = mutate target[name], source[name]",
          "24:     else if Array.isArray source",
          "25:       target = for v in source",
          "",
          "[Removed Lines]",
          "22:         continue if name is '__proto__'",
          "",
          "[Added Lines]",
          "22:         # See",
          "23:         # https://github.com/adaltas/node-mixme/issues/1",
          "24:         # https://github.com/adaltas/node-mixme/issues/2",
          "25:         continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name",
          "",
          "---------------"
        ]
      }
    }
  ]
}