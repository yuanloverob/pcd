{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "70dfe8c36350417d0806c676c575709a3e7e2e82",
      "candidate_info": {
        "commit_hash": "70dfe8c36350417d0806c676c575709a3e7e2e82",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/70dfe8c36350417d0806c676c575709a3e7e2e82",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ],
        "message": "PDFBOX-4892: fix javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891611 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java"
        ]
      }
    },
    {
      "candidate_hash": "639cb4c7c8d64467c8544a3afc80b6257634da43",
      "candidate_info": {
        "commit_hash": "639cb4c7c8d64467c8544a3afc80b6257634da43",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/639cb4c7c8d64467c8544a3afc80b6257634da43",
        "files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java",
          "pdfbox/src/test/resources/org/apache/pdfbox/pdmodel/graphics/image/929316.png"
        ],
        "message": "PDFBOX-4847: improve test coverage to include the \"store the specified rendering intent\" and \"we tag the image with the sRGB profile\" cases with new file found on digitalcorpora.org\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881096 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java||pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java": [
          "File: pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java -> pdfbox/src/test/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverterTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: import org.apache.pdfbox.pdmodel.PDPage;",
          "39: import org.apache.pdfbox.pdmodel.PDPageContentStream;",
          "40: import org.apache.pdfbox.pdmodel.graphics.color.PDICCBased;",
          "42: import static org.apache.pdfbox.pdmodel.graphics.image.ValidateXImage.checkIdent;",
          "43: import static org.junit.Assert.assertEquals;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: import org.apache.pdfbox.pdmodel.graphics.color.PDIndexed;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336:         assertNull(PNGConverter.mapPNGRenderIntent(-1));",
          "337:         assertNull(PNGConverter.mapPNGRenderIntent(4));",
          "338:     }",
          "339: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "346:     @Test",
          "347:     public void testImageConversionIntentIndexed() throws IOException",
          "348:     {",
          "349:         PDDocument doc = new PDDocument();",
          "351:         byte[] imageBytes = IOUtils.toByteArray(PNGConverterTest.class.getResourceAsStream(\"929316.png\"));",
          "352:         PDImageXObject pdImageXObject = PNGConverter.convertPNGImage(doc, imageBytes);",
          "353:         assertEquals(COSName.PERCEPTUAL, pdImageXObject.getCOSObject().getItem(COSName.INTENT));",
          "356:         PDIndexed indexedColorspace = (PDIndexed) pdImageXObject.getColorSpace();",
          "358:         PDICCBased iccColorspace = (PDICCBased) indexedColorspace.getBaseColorSpace();",
          "361:         assertTrue(iccColorspace.issRGB());",
          "362:         doc.close();",
          "364:         checkImageConvert(\"929316.png\");",
          "365:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ddc8ad74c9ff5e786a358222bc6368cb88b46211",
      "candidate_info": {
        "commit_hash": "ddc8ad74c9ff5e786a358222bc6368cb88b46211",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ddc8ad74c9ff5e786a358222bc6368cb88b46211",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java"
        ],
        "message": "PDFBOX-4892: improve comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889527 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java"
        ]
      }
    },
    {
      "candidate_hash": "7d57f95943627594d9c37f04b28eabd55cc8e08f",
      "candidate_info": {
        "commit_hash": "7d57f95943627594d9c37f04b28eabd55cc8e08f",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/7d57f95943627594d9c37f04b28eabd55cc8e08f",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java"
        ],
        "message": "PDFBOX-5123, PDFBOX-5124: gracefully recover from EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887405 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/OS2WindowsMetricsTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.fontbox.ttf;",
          "19: import java.io.IOException;",
          "27: public class OS2WindowsMetricsTable extends TTFTable",
          "28: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import java.io.EOFException;",
          "22: import org.apache.commons.logging.Log;",
          "23: import org.apache.commons.logging.LogFactory;",
          "38:     private static final Log LOG = LogFactory.getLog(OS2WindowsMetricsTable.class);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "819:         winDescent = data.readUnsignedShort();",
          "820:         if (version >= 1)",
          "821:         {",
          "824:         }",
          "826:         {",
          "832:         }",
          "833:         initialized = true;",
          "834:     }",
          "",
          "[Removed Lines]",
          "822:             codePageRange1 = data.readUnsignedInt();",
          "823:             codePageRange2 = data.readUnsignedInt();",
          "825:         if (version >= 1.2)",
          "827:             sxHeight = data.readSignedShort();",
          "828:             sCapHeight = data.readSignedShort();",
          "829:             usDefaultChar = data.readUnsignedShort();",
          "830:             usBreakChar = data.readUnsignedShort();",
          "831:             usMaxContext = data.readUnsignedShort();",
          "",
          "[Added Lines]",
          "832:             try",
          "833:             {",
          "834:                 codePageRange1 = data.readUnsignedInt();",
          "835:                 codePageRange2 = data.readUnsignedInt();",
          "836:             }",
          "837:             catch (EOFException ex)",
          "838:             {",
          "839:                 version = 0;",
          "840:                 LOG.warn(\"Could not read all expected parts of version >= 1, setting version to 0\", ex);",
          "841:                 initialized = true;",
          "842:                 return;",
          "843:             }",
          "845:         if (version >= 2)",
          "847:             try",
          "848:             {",
          "849:                 sxHeight = data.readSignedShort();",
          "850:                 sCapHeight = data.readSignedShort();",
          "851:                 usDefaultChar = data.readUnsignedShort();",
          "852:                 usBreakChar = data.readUnsignedShort();",
          "853:                 usMaxContext = data.readUnsignedShort();",
          "854:             }",
          "855:             catch (EOFException ex)",
          "856:             {",
          "857:                 version = 1;",
          "858:                 LOG.warn(\"Could not read all expected parts of version >= 2, setting version to 1\", ex);",
          "859:                 initialized = true;",
          "860:                 return;",
          "861:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64429cc044f25f4e0dc09494d15157f790d5a822",
      "candidate_info": {
        "commit_hash": "64429cc044f25f4e0dc09494d15157f790d5a822",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/64429cc044f25f4e0dc09494d15157f790d5a822",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java"
        ],
        "message": "PDFBOX-4297: introduce fast method to get the signature contents, as suggested by Ralf Hauser\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1882381 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.util.Calendar;",
          "25: import org.apache.pdfbox.cos.COSArray;",
          "26: import org.apache.pdfbox.cos.COSDictionary;",
          "27: import org.apache.pdfbox.cos.COSInteger;",
          "28: import org.apache.pdfbox.cos.COSName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.apache.pdfbox.cos.COSBase;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "304:         return ary;",
          "305:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "314:     public byte[] getContents()",
          "315:     {",
          "316:         COSBase base = dictionary.getDictionaryObject(COSName.CONTENTS);",
          "317:         if (base instanceof COSString)",
          "318:         {",
          "319:             return ((COSString) base).getBytes();",
          "320:         }",
          "321:         return new byte[0];",
          "322:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}