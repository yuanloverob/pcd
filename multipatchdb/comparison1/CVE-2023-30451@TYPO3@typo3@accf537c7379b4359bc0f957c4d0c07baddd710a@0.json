{
  "cve_id": "CVE-2023-30451",
  "cve_desc": "In TYPO3 11.5.24, the filelist component allows attackers (who have access to the administrator panel) to read arbitrary files via directory traversal in the baseuri field, as demonstrated by POST /typo3/record/edit with ../../../ in data[sys_file_storage]*[data][sDEF][lDEF][basePath][vDEF].",
  "repo": "TYPO3/typo3",
  "patch_hash": "accf537c7379b4359bc0f957c4d0c07baddd710a",
  "patch_info": {
    "commit_hash": "accf537c7379b4359bc0f957c4d0c07baddd710a",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/accf537c7379b4359bc0f957c4d0c07baddd710a",
    "files": [
      "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
      "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "typo3/sysext/core/Classes/Utility/PathUtility.php",
      "typo3/sysext/core/Configuration/DefaultConfigurationDescription.yaml",
      "typo3/sysext/core/Documentation/Changelog/11.5.x/Important-102800-FileAbstractionLayerEnforcesAbsolutePathsToMatchProjectRootOrLockRootPath.rst",
      "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
      "typo3/sysext/filelist/Classes/Controller/FileListController.php",
      "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
    ],
    "message": "[!!!][SECURITY] Enforce absolute path checks in FAL local driver\n\nThe File Abstraction Layer Local Driver did not verify whether\na given absolute file path is allowed, and made it possible to\naccess files outside of the project path, and to by-pass the\nsetting in $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'].\n\nIn case lockRootPath is not set, any local file path must be\nat least located in the base directory of the current project.\n\nThe lockRootPath setting now supports array values as well.\n\nThe trailing slash is enforced automatically. Example:\n* instead of 'lockRootPath=/var/spe' previously matching\n  the paths '/var/specs/'  and '/var/specials/,\n* now both paths need to be declared explicitly, since\n  'lockRootPath=/var/spe' is evaluated as '/var/spe/'\n\nResolves: #102800\nReleases: main, 13.0, 12.4, 11.5\nChange-Id: I6561df562c5dbaff1f77d33db24d5f1c6358b198\nSecurity-Bulletin: TYPO3-CORE-SA-2024-001\nSecurity-References: CVE-2023-30451\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/82939\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\nTested-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
      "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
      "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
      "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
      "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
    ]
  },
  "patch_diff": {
    "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php": [
      "File: typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php -> typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:         }",
      "170:         $absoluteBasePath = $this->canonicalizeAndCheckFilePath($absoluteBasePath);",
      "171:         $absoluteBasePath = rtrim($absoluteBasePath, '/') . '/';",
      "172:         if (!is_dir($absoluteBasePath)) {",
      "173:             throw new InvalidConfigurationException(",
      "174:                 'Base path \"' . $absoluteBasePath . '\" does not exist or is no directory.',",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:         if (!$this->isAllowedAbsolutePath($absoluteBasePath)) {",
      "173:             throw new InvalidConfigurationException(",
      "174:                 'Base path \"' . $absoluteBasePath . '\" is not within the allowed project root path or allowed lockRootPath.',",
      "175:                 1704807715",
      "176:             );",
      "177:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1474:         return '';",
      "1475:     }",
      "1476: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1487:     protected function isAllowedAbsolutePath(string $path): bool",
      "1488:     {",
      "1489:         return GeneralUtility::isAllowedAbsPath($path);",
      "1490:     }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
      "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "2826:         if (substr($path, 0, 6) === 'vfs://') {",
      "2827:             return true;",
      "2828:         }",
      "2830:         return PathUtility::isAbsolutePath($path) && static::validPathStr($path)",
      "2831:             && (",
      "2832:                 str_starts_with($path, Environment::getProjectPath())",
      "2833:                 || str_starts_with($path, Environment::getPublicPath())",
      "2835:             );",
      "2836:     }",
      "",
      "[Removed Lines]",
      "2829:         $lockRootPath = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? '';",
      "2834:                 || ($lockRootPath && str_starts_with($path, $lockRootPath))",
      "",
      "[Added Lines]",
      "2833:                 || PathUtility::isAllowedAdditionalPath($path)",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php": [
      "File: typo3/sysext/core/Classes/Utility/PathUtility.php -> typo3/sysext/core/Classes/Utility/PathUtility.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "464:     {",
      "465:         return strpos($path, '//') === 0 || strpos($path, '://') > 0;",
      "466:     }",
      "467: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "475:     public static function isAllowedAdditionalPath(string $path): bool",
      "476:     {",
      "478:         $path = self::sanitizeTrailingSeparator($path);",
      "479:         $allowedPaths = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? [];",
      "480:         if (is_string($allowedPaths)) {",
      "483:             $allowedPaths = [$allowedPaths];",
      "484:         }",
      "485:         if (!is_array($allowedPaths)) {",
      "486:             throw new \\RuntimeException('$GLOBALS[\\'TYPO3_CONF_VARS\\'][\\'BE\\'][\\'lockRootPath\\'] is expected to be an array.', 1707408379);",
      "487:         }",
      "488:         foreach ($allowedPaths as $allowedPath) {",
      "489:             $allowedPath = trim($allowedPath);",
      "490:             if ($allowedPath !== '' && str_starts_with($path, self::sanitizeTrailingSeparator($allowedPath))) {",
      "491:                 return true;",
      "492:             }",
      "493:         }",
      "494:         return false;",
      "495:     }",
      "",
      "---------------"
    ],
    "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php": [
      "File: typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php -> typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "588:     {",
      "589:         self::assertSame($result, PathUtility::hasProtocolAndScheme($url));",
      "590:     }",
      "591: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "592:     public static function allowedAdditionalPathsAreEvaluatedDataProvider(): \\Generator",
      "593:     {",
      "595:         yield [null, '/var/shared', false];",
      "596:         yield ['', '/var/shared', false];",
      "597:         yield [' ', '/var/shared', false];",
      "598:         yield [[], '/var/shared', false];",
      "599:         yield [[''], '/var/shared', false];",
      "600:         yield [[' '], '/var/shared', false];",
      "602:         yield ['/var', '/var/shared', true];",
      "603:         yield ['/var/shared/', '/var/shared', true];",
      "604:         yield ['/var/shared', '/var/shared/', true];",
      "605:         yield ['/var/shared/', '/var/shared/', true];",
      "606:         yield ['/var/shared/', '/var/shared/file.png', true];",
      "607:         yield ['/var/shared/', '/var/shared-secret', false];",
      "608:         yield ['/var/shared/', '/var', false];",
      "610:         yield [['/var'], '/var/shared', true];",
      "611:         yield [['/var/shared/'], '/var/shared', true];",
      "612:         yield [['/var/shared'], '/var/shared/', true];",
      "613:         yield [['/var/shared/'], '/var/shared/', true];",
      "614:         yield [['/var/shared/'], '/var/shared/file.png', true];",
      "615:         yield [['/var/shared/'], '/var/shared-secret', false];",
      "616:         yield [['/var/shared/'], '/var', false];",
      "617:     }",
      "625:     public function allowedAdditionalPathsAreEvaluated($lockRootPath, string $path, bool $expectation): void",
      "626:     {",
      "627:         $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] = $lockRootPath;",
      "628:         self::assertSame($expectation, PathUtility::isAllowedAdditionalPath($path));",
      "629:     }",
      "",
      "---------------"
    ],
    "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php": [
      "File: typo3/sysext/filelist/Classes/Controller/FileListController.php -> typo3/sysext/filelist/Classes/Controller/FileListController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
      "38: use TYPO3\\CMS\\Core\\Resource\\DuplicationBehavior;",
      "39: use TYPO3\\CMS\\Core\\Resource\\Exception;",
      "40: use TYPO3\\CMS\\Core\\Resource\\Exception\\InsufficientFolderAccessPermissionsException;",
      "41: use TYPO3\\CMS\\Core\\Resource\\Folder;",
      "42: use TYPO3\\CMS\\Core\\Resource\\ResourceFactory;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40: use TYPO3\\CMS\\Core\\Resource\\Exception\\FolderDoesNotExistException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "151:             if ($this->folderObject && !$this->folderObject->getStorage()->isWithinFileMountBoundaries($this->folderObject)) {",
      "152:                 throw new \\RuntimeException('Folder not accessible.', 1430409089);",
      "153:             }",
      "155:             $this->folderObject = null;",
      "156:             if ($storage !== null && $storage->getDriverType() === 'Local' && !$storage->isOnline()) {",
      "",
      "[Removed Lines]",
      "154:         } catch (InsufficientFolderAccessPermissionsException $permissionException) {",
      "",
      "[Added Lines]",
      "155:         } catch (FolderDoesNotExistException|InsufficientFolderAccessPermissionsException $permissionException) {",
      "",
      "---------------"
    ],
    "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf": [
      "File: typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf -> typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:     <source>You have no access to the folder \"%s\".</source>",
      "77:    </trans-unit>",
      "78:    <trans-unit id=\"localStorageOfflineTitle\" resname=\"localStorageOfflineTitle\">",
      "80:    </trans-unit>",
      "81:    <trans-unit id=\"localStorageOfflineMessage\" resname=\"localStorageOfflineMessage\">",
      "83:    </trans-unit>",
      "84:    <trans-unit id=\"folderNotFoundTitle\" resname=\"folderNotFoundTitle\">",
      "85:     <source>Folder not found.</source>",
      "",
      "[Removed Lines]",
      "79:     <source>Base folder for local storage missing</source>",
      "82:     <source>Base folder for local storage does not exists. Verify that the base folder for \"%s\" exists.</source>",
      "",
      "[Added Lines]",
      "79:     <source>Base folder for local storage missing or not allowed</source>",
      "82:     <source>Verify that the base folder for the storage \"%s\" exists and is allowed to be accessed.</source>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6fbbdc00f73ca0e3a535bea27437f95cc2af1639",
      "candidate_info": {
        "commit_hash": "6fbbdc00f73ca0e3a535bea27437f95cc2af1639",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/6fbbdc00f73ca0e3a535bea27437f95cc2af1639",
        "files": [
          "typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
        ],
        "message": "[BUGFIX] Guard local storage with missing base folder in filelist\n\nStorages using the local storage driver with a non existing\nbase folder are put offline automatically. However, the file\nlist module displays a to generic error message not pointing\nto that fact.\n\nThis change adds a concrete check for this case and displays\na more specific error flash message in the file list module now.\n\nThis can be tested by creating a additional local storage with\na non-existing relative path, for example:\n\n    `fileadmin/not-existing-folder/`\n\nResolves: #85323\nReleases: main, 12.4, 11.5\nChange-Id: Ie3ad64a99c0871d258470ffc858639dee4de1108\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/81265\nReviewed-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: core-ci <typo3@b13.com>\nTested-by: Stefan B\u00fcrk <stefan@buerk.tech>",
        "before_after_code_files": [
          "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
            "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
          ],
          "candidate": [
            "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
            "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php": [
          "File: typo3/sysext/filelist/Classes/Controller/FileListController.php -> typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:             $parsedBody['overwriteExistingFiles'] ?? $queryParams['overwriteExistingFiles'] ?? null",
          "115:         );",
          "117:         try {",
          "118:             if ($this->id !== '') {",
          "119:                 $backendUser->evaluateUserSpecificFileFilterSettings();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:         $storage = null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:             }",
          "153:         } catch (InsufficientFolderAccessPermissionsException $permissionException) {",
          "154:             $this->folderObject = null;",
          "160:         } catch (Exception $fileException) {",
          "161:             $this->folderObject = null;",
          "",
          "[Removed Lines]",
          "155:             $this->addFlashMessage(",
          "156:                 sprintf($lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:missingFolderPermissionsMessage'), $this->id),",
          "157:                 $lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:missingFolderPermissionsTitle'),",
          "158:                 FlashMessage::ERROR",
          "159:             );",
          "",
          "[Added Lines]",
          "156:             if ($storage !== null && $storage->getDriverType() === 'Local' && !$storage->isOnline()) {",
          "160:                 $this->addFlashMessage(",
          "161:                     sprintf($lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:localStorageOfflineMessage'), $storage->getName()),",
          "162:                     $lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:localStorageOfflineTitle'),",
          "163:                     FlashMessage::ERROR",
          "164:                 );",
          "165:             } else {",
          "166:                 $this->addFlashMessage(",
          "167:                     sprintf($lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:missingFolderPermissionsMessage'), $this->id),",
          "168:                     $lang->sL('LLL:EXT:filelist/Resources/Private/Language/locallang_mod_file_list.xlf:missingFolderPermissionsTitle'),",
          "169:                     FlashMessage::ERROR",
          "170:                 );",
          "171:             }",
          "",
          "---------------"
        ],
        "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf": [
          "File: typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf -> typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:    <trans-unit id=\"missingFolderPermissionsMessage\" resname=\"missingFolderPermissionsMessage\">",
          "76:     <source>You have no access to the folder \"%s\".</source>",
          "77:    </trans-unit>",
          "78:    <trans-unit id=\"folderNotFoundTitle\" resname=\"folderNotFoundTitle\">",
          "79:     <source>Folder not found.</source>",
          "80:    </trans-unit>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:    </trans-unit>",
          "78:    <trans-unit id=\"localStorageOfflineTitle\" resname=\"localStorageOfflineTitle\">",
          "79:     <source>Base folder for local storage missing</source>",
          "80:    </trans-unit>",
          "81:    <trans-unit id=\"localStorageOfflineMessage\" resname=\"localStorageOfflineMessage\">",
          "82:     <source>Base folder for local storage does not exists. Verify that the base folder for \"%s\" exists.</source>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a70f34cbe14ebc57cff1b0d79db9cff304c37459",
      "candidate_info": {
        "commit_hash": "a70f34cbe14ebc57cff1b0d79db9cff304c37459",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/a70f34cbe14ebc57cff1b0d79db9cff304c37459",
        "files": [
          "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/core/Configuration/DefaultConfigurationDescription.yaml",
          "typo3/sysext/core/Documentation/Changelog/11.5.x/Important-102800-FileAbstractionLayerEnforcesAbsolutePathsToMatchProjectRootOrLockRootPath.rst",
          "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
          "typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
        ],
        "message": "[!!!][SECURITY] Enforce absolute path checks in FAL local driver\n\nThe File Abstraction Layer Local Driver did not verify whether\na given absolute file path is allowed, and made it possible to\naccess files outside of the project path, and to by-pass the\nsetting in $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'].\n\nIn case lockRootPath is not set, any local file path must be\nat least located in the base directory of the current project.\n\nThe lockRootPath setting now supports array values as well.\n\nThe trailing slash is enforced automatically. Example:\n* instead of 'lockRootPath=/var/spe' previously matching\n  the paths '/var/specs/'  and '/var/specials/,\n* now both paths need to be declared explicitly, since\n  'lockRootPath=/var/spe' is evaluated as '/var/spe/'\n\nResolves: #102800\nReleases: main, 13.0, 12.4, 11.5\nChange-Id: I6561df562c5dbaff1f77d33db24d5f1c6358b198\nSecurity-Bulletin: TYPO3-CORE-SA-2024-001\nSecurity-References: CVE-2023-30451\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/82957\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\nTested-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
          "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
          "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
            "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
            "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
            "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
          ],
          "candidate": [
            "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
            "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php",
            "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php",
            "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
            "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php",
            "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php||typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php": [
          "File: typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php -> typo3/sysext/core/Classes/Resource/Driver/LocalDriver.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:         }",
          "158:         $absoluteBasePath = $this->canonicalizeAndCheckFilePath($absoluteBasePath);",
          "159:         $absoluteBasePath = rtrim($absoluteBasePath, '/') . '/';",
          "160:         if (!is_dir($absoluteBasePath)) {",
          "161:             throw new InvalidConfigurationException(",
          "162:                 'Base path \"' . $absoluteBasePath . '\" does not exist or is no directory.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:         if (!$this->isAllowedAbsolutePath($absoluteBasePath)) {",
          "161:             throw new InvalidConfigurationException(",
          "162:                 'Base path \"' . $absoluteBasePath . '\" is not within the allowed project root path or allowed lockRootPath.',",
          "163:                 1704807715",
          "164:             );",
          "165:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1361:         return '';",
          "1362:     }",
          "1363: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1374:     protected function isAllowedAbsolutePath(string $path): bool",
          "1375:     {",
          "1376:         return GeneralUtility::isAllowedAbsPath($path);",
          "1377:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/GeneralUtility.php||typo3/sysext/core/Classes/Utility/GeneralUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/GeneralUtility.php -> typo3/sysext/core/Classes/Utility/GeneralUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2478:         if (substr($path, 0, 6) === 'vfs://') {",
          "2479:             return true;",
          "2480:         }",
          "2482:         return PathUtility::isAbsolutePath($path) && static::validPathStr($path)",
          "2483:             && (",
          "2484:                 str_starts_with($path, Environment::getProjectPath())",
          "2485:                 || str_starts_with($path, Environment::getPublicPath())",
          "2487:             );",
          "2488:     }",
          "",
          "[Removed Lines]",
          "2481:         $lockRootPath = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? '';",
          "2486:                 || ($lockRootPath && str_starts_with($path, $lockRootPath))",
          "",
          "[Added Lines]",
          "2485:                 || PathUtility::isAllowedAdditionalPath($path)",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Classes/Utility/PathUtility.php||typo3/sysext/core/Classes/Utility/PathUtility.php": [
          "File: typo3/sysext/core/Classes/Utility/PathUtility.php -> typo3/sysext/core/Classes/Utility/PathUtility.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "446:     {",
          "447:         return str_starts_with($path, '//') || strpos($path, '://') > 0;",
          "448:     }",
          "449: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457:     public static function isAllowedAdditionalPath(string $path): bool",
          "458:     {",
          "460:         $path = self::sanitizeTrailingSeparator($path);",
          "461:         $allowedPaths = $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] ?? [];",
          "462:         if (is_string($allowedPaths)) {",
          "465:             $allowedPaths = [$allowedPaths];",
          "466:         }",
          "467:         if (!is_array($allowedPaths)) {",
          "468:             throw new \\RuntimeException('$GLOBALS[\\'TYPO3_CONF_VARS\\'][\\'BE\\'][\\'lockRootPath\\'] is expected to be an array.', 1707408379);",
          "469:         }",
          "470:         foreach ($allowedPaths as $allowedPath) {",
          "471:             $allowedPath = trim($allowedPath);",
          "472:             if ($allowedPath !== '' && str_starts_with($path, self::sanitizeTrailingSeparator($allowedPath))) {",
          "473:                 return true;",
          "474:             }",
          "475:         }",
          "476:         return false;",
          "477:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php||typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php": [
          "File: typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php -> typo3/sysext/core/Tests/Unit/Utility/PathUtilityTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:     {",
          "561:         self::assertSame($result, PathUtility::hasProtocolAndScheme($url));",
          "562:     }",
          "563: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "564:     public static function allowedAdditionalPathsAreEvaluatedDataProvider(): \\Generator",
          "565:     {",
          "567:         yield [null, '/var/shared', false];",
          "568:         yield ['', '/var/shared', false];",
          "569:         yield [' ', '/var/shared', false];",
          "570:         yield [[], '/var/shared', false];",
          "571:         yield [[''], '/var/shared', false];",
          "572:         yield [[' '], '/var/shared', false];",
          "574:         yield ['/var', '/var/shared', true];",
          "575:         yield ['/var/shared/', '/var/shared', true];",
          "576:         yield ['/var/shared', '/var/shared/', true];",
          "577:         yield ['/var/shared/', '/var/shared/', true];",
          "578:         yield ['/var/shared/', '/var/shared/file.png', true];",
          "579:         yield ['/var/shared/', '/var/shared-secret', false];",
          "580:         yield ['/var/shared/', '/var', false];",
          "582:         yield [['/var'], '/var/shared', true];",
          "583:         yield [['/var/shared/'], '/var/shared', true];",
          "584:         yield [['/var/shared'], '/var/shared/', true];",
          "585:         yield [['/var/shared/'], '/var/shared/', true];",
          "586:         yield [['/var/shared/'], '/var/shared/file.png', true];",
          "587:         yield [['/var/shared/'], '/var/shared-secret', false];",
          "588:         yield [['/var/shared/'], '/var', false];",
          "589:     }",
          "595:     public function allowedAdditionalPathsAreEvaluated(mixed $lockRootPath, string $path, bool $expectation): void",
          "596:     {",
          "597:         $GLOBALS['TYPO3_CONF_VARS']['BE']['lockRootPath'] = $lockRootPath;",
          "598:         self::assertSame($expectation, PathUtility::isAllowedAdditionalPath($path));",
          "599:     }",
          "",
          "---------------"
        ],
        "typo3/sysext/filelist/Classes/Controller/FileListController.php||typo3/sysext/filelist/Classes/Controller/FileListController.php": [
          "File: typo3/sysext/filelist/Classes/Controller/FileListController.php -> typo3/sysext/filelist/Classes/Controller/FileListController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
          "45: use TYPO3\\CMS\\Core\\Resource\\Enum\\DuplicationBehavior;",
          "46: use TYPO3\\CMS\\Core\\Resource\\Exception;",
          "47: use TYPO3\\CMS\\Core\\Resource\\Exception\\InsufficientFolderAccessPermissionsException;",
          "48: use TYPO3\\CMS\\Core\\Resource\\Folder;",
          "49: use TYPO3\\CMS\\Core\\Resource\\ResourceFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: use TYPO3\\CMS\\Core\\Resource\\Exception\\FolderDoesNotExistException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150:             if ($this->folderObject && !$this->folderObject->getStorage()->isWithinFileMountBoundaries($this->folderObject)) {",
          "151:                 throw new \\RuntimeException('Folder not accessible.', 1430409089);",
          "152:             }",
          "154:             $this->folderObject = null;",
          "155:             if ($storage !== null && $storage->getDriverType() === 'Local' && !$storage->isOnline()) {",
          "",
          "[Removed Lines]",
          "153:         } catch (InsufficientFolderAccessPermissionsException $permissionException) {",
          "",
          "[Added Lines]",
          "154:         } catch (FolderDoesNotExistException|InsufficientFolderAccessPermissionsException $permissionException) {",
          "",
          "---------------"
        ],
        "typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf||typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf": [
          "File: typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf -> typo3/sysext/filelist/Resources/Private/Language/locallang_mod_file_list.xlf",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     <source>You have no access to the folder \"%s\".</source>",
          "74:    </trans-unit>",
          "75:    <trans-unit id=\"localStorageOfflineTitle\" resname=\"localStorageOfflineTitle\">",
          "77:    </trans-unit>",
          "78:    <trans-unit id=\"localStorageOfflineMessage\" resname=\"localStorageOfflineMessage\">",
          "80:    </trans-unit>",
          "81:    <trans-unit id=\"folderNotFoundTitle\" resname=\"folderNotFoundTitle\">",
          "82:     <source>Folder not found.</source>",
          "",
          "[Removed Lines]",
          "76:     <source>Base folder for local storage missing</source>",
          "79:     <source>Base folder for local storage does not exists. Verify that the base folder for \"%s\" exists.</source>",
          "",
          "[Added Lines]",
          "76:     <source>Base folder for local storage missing or not allowed</source>",
          "79:     <source>Verify that the base folder for the storage \"%s\" exists and is allowed to be accessed.</source>",
          "",
          "---------------"
        ]
      }
    }
  ]
}