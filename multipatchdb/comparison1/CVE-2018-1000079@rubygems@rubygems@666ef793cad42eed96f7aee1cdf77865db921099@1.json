{
  "cve_id": "CVE-2018-1000079",
  "cve_desc": "RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Directory Traversal vulnerability in gem installation that can result in the gem could write to arbitrary filesystem locations during installation. This attack appear to be exploitable via the victim must install a malicious gem. This vulnerability appears to have been fixed in 2.7.6.",
  "repo": "rubygems/rubygems",
  "patch_hash": "666ef793cad42eed96f7aee1cdf77865db921099",
  "patch_info": {
    "commit_hash": "666ef793cad42eed96f7aee1cdf77865db921099",
    "repo": "rubygems/rubygems",
    "commit_url": "https://github.com/rubygems/rubygems/commit/666ef793cad42eed96f7aee1cdf77865db921099",
    "files": [
      "lib/rubygems/package.rb",
      "test/rubygems/test_gem_package.rb"
    ],
    "message": "Implement a safe mkdir for package that verifies were inside the destination dir for all new directories ccreated",
    "before_after_code_files": [
      "lib/rubygems/package.rb||lib/rubygems/package.rb",
      "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
    ]
  },
  "patch_diff": {
    "lib/rubygems/package.rb||lib/rubygems/package.rb": [
      "File: lib/rubygems/package.rb -> lib/rubygems/package.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "378:             File.dirname destination",
      "379:           end",
      "383:         File.open destination, 'wb' do |out|",
      "384:           out.write entry.read",
      "",
      "[Removed Lines]",
      "381:         FileUtils.mkdir_p mkdir, mkdir_options",
      "",
      "[Added Lines]",
      "381:         mkdir_p_safe mkdir, mkdir_options, destination_dir, entry.full_name",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "416:     raise Gem::Package::PathError.new(filename, destination_dir) if",
      "417:       filename.start_with? '/'",
      "421:     destination_dir = File.expand_path destination_dir",
      "423:     destination = File.join destination_dir, filename",
      "426:     destination = File.expand_path destination",
      "428:     raise Gem::Package::PathError.new(destination, destination_dir) unless",
      "",
      "[Removed Lines]",
      "419:     destination_dir = File.realpath destination_dir if",
      "420:       File.respond_to? :realpath",
      "424:     destination = File.realpath destination if",
      "425:       File.respond_to? :realpath",
      "",
      "[Added Lines]",
      "419:     destination_dir = realpath destination_dir",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "432:     destination",
      "433:   end",
      "435:   ##",
      "436:   # Loads a Gem::Specification from the TarEntry +entry+",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "432:   def mkdir_p_safe mkdir, mkdir_options, destination_dir, file_name",
      "433:     destination_dir = realpath File.expand_path(destination_dir)",
      "434:     parts = mkdir.split(File::SEPARATOR)",
      "435:     parts.reduce do |path, basename|",
      "436:       path = realpath path  unless path == \"\"",
      "437:       path = File.expand_path(path + File::SEPARATOR + basename)",
      "438:       lstat = File.lstat path rescue nil",
      "439:       if !lstat || !lstat.directory?",
      "440:         unless path.start_with? destination_dir and (FileUtils.mkdir path, mkdir_options rescue false)",
      "441:           raise Gem::Package::PathError.new(file_name, destination_dir)",
      "442:         end",
      "443:       end",
      "444:       path",
      "445:     end",
      "446:   end",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "622:     raise Gem::Package::FormatError.new(e.message, entry.full_name)",
      "623:   end",
      "625: end",
      "627: require 'rubygems/package/digest_io'",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "638:   if File.respond_to? :realpath",
      "639:     def realpath file",
      "640:       File.realpath file",
      "641:     end",
      "642:   else",
      "643:     def realpath file",
      "644:       file",
      "645:     end",
      "646:   end",
      "",
      "---------------"
    ],
    "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb": [
      "File: test/rubygems/test_gem_package.rb -> test/rubygems/test_gem_package.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "476:      package.extract_tar_gz tgz_io, destination_subdir",
      "477:    end",
      "480:                  \"#{destination_subdir} is not allowed\", e.message)",
      "481:   end",
      "",
      "[Removed Lines]",
      "479:    assert_equal(\"installing into parent path ../outside.txt of \" +",
      "",
      "[Added Lines]",
      "479:    assert_equal(\"installing into parent path lib/link/outside.txt of \" +",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "30596680ed1753d0e8085a17335325bf45c97ff6",
      "candidate_info": {
        "commit_hash": "30596680ed1753d0e8085a17335325bf45c97ff6",
        "repo": "rubygems/rubygems",
        "commit_url": "https://github.com/rubygems/rubygems/commit/30596680ed1753d0e8085a17335325bf45c97ff6",
        "files": [
          ".rubocop.yml",
          "lib/rubygems/basic_specification.rb",
          "lib/rubygems/commands/cert_command.rb",
          "lib/rubygems/commands/setup_command.rb",
          "lib/rubygems/commands/signin_command.rb",
          "lib/rubygems/spec_fetcher.rb",
          "lib/rubygems/specification.rb",
          "test/rubygems/test_gem.rb",
          "test/rubygems/test_gem_installer.rb",
          "test/rubygems/test_gem_package.rb",
          "test/rubygems/test_gem_remote_fetcher.rb",
          "test/rubygems/test_gem_resolver.rb",
          "test/rubygems/test_gem_specification.rb"
        ],
        "message": "Normalize indentation width",
        "before_after_code_files": [
          "lib/rubygems/basic_specification.rb||lib/rubygems/basic_specification.rb",
          "lib/rubygems/commands/cert_command.rb||lib/rubygems/commands/cert_command.rb",
          "lib/rubygems/commands/setup_command.rb||lib/rubygems/commands/setup_command.rb",
          "lib/rubygems/commands/signin_command.rb||lib/rubygems/commands/signin_command.rb",
          "lib/rubygems/spec_fetcher.rb||lib/rubygems/spec_fetcher.rb",
          "lib/rubygems/specification.rb||lib/rubygems/specification.rb",
          "test/rubygems/test_gem.rb||test/rubygems/test_gem.rb",
          "test/rubygems/test_gem_installer.rb||test/rubygems/test_gem_installer.rb",
          "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb",
          "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb",
          "test/rubygems/test_gem_resolver.rb||test/rubygems/test_gem_resolver.rb",
          "test/rubygems/test_gem_specification.rb||test/rubygems/test_gem_specification.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
          ],
          "candidate": [
            "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/rubygems/basic_specification.rb||lib/rubygems/basic_specification.rb": [
          "File: lib/rubygems/basic_specification.rb -> lib/rubygems/basic_specification.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:                self.raw_require_paths.first",
          "283:              end",
          "284:            else",
          "286:            end",
          "288:     \"#{self.full_gem_path}/#{dirs}\".dup.untaint",
          "",
          "[Removed Lines]",
          "285:             \"lib\" # default value for require_paths for bundler/inline",
          "",
          "[Added Lines]",
          "285:              \"lib\" # default value for require_paths for bundler/inline",
          "",
          "---------------"
        ],
        "lib/rubygems/commands/cert_command.rb||lib/rubygems/commands/cert_command.rb": [
          "File: lib/rubygems/commands/cert_command.rb -> lib/rubygems/commands/cert_command.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     add_option('-d', '--days NUMBER_OF_DAYS',",
          "89:                'Days before the certificate expires') do |days, options|",
          "91:     end",
          "92:   end",
          "",
          "[Removed Lines]",
          "90:                 options[:expiration_length_days] = days.to_i",
          "",
          "[Added Lines]",
          "90:       options[:expiration_length_days] = days.to_i",
          "",
          "---------------"
        ],
        "lib/rubygems/commands/setup_command.rb||lib/rubygems/commands/setup_command.rb": [
          "File: lib/rubygems/commands/setup_command.rb -> lib/rubygems/commands/setup_command.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     add_option '--[no-]regenerate-binstubs',",
          "86:                'Regenerate gem binstubs' do |value, options|",
          "88:    end",
          "90:     add_option('-E', '--[no-]env-shebang',",
          "",
          "[Removed Lines]",
          "87:       options[:regenerate_binstubs] = value",
          "",
          "[Added Lines]",
          "87:      options[:regenerate_binstubs] = value",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "468:         (prefix == RbConfig::CONFIG['libdir'] or",
          "469:          # this one is important",
          "470:          prefix == File.join(RbConfig::CONFIG['libdir'], 'ruby')) then",
          "473:       else",
          "474:         lib_dir = File.join prefix, 'lib'",
          "475:         bin_dir = File.join prefix, 'bin'",
          "",
          "[Removed Lines]",
          "471:          lib_dir = RbConfig::CONFIG[site_or_vendor]",
          "472:          bin_dir = RbConfig::CONFIG['bindir']",
          "",
          "[Added Lines]",
          "471:         lib_dir = RbConfig::CONFIG[site_or_vendor]",
          "472:         bin_dir = RbConfig::CONFIG['bindir']",
          "",
          "---------------"
        ],
        "lib/rubygems/commands/signin_command.rb||lib/rubygems/commands/signin_command.rb": [
          "File: lib/rubygems/commands/signin_command.rb -> lib/rubygems/commands/signin_command.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:           'It defaults to https://rubygems.org'",
          "12:     add_option('--host HOST', 'Push to another gemcutter-compatible host') do |value, options|",
          "14:     end",
          "16:   end",
          "",
          "[Removed Lines]",
          "13:        options[:host] = value",
          "",
          "[Added Lines]",
          "13:       options[:host] = value",
          "",
          "---------------"
        ],
        "lib/rubygems/spec_fetcher.rb||lib/rubygems/spec_fetcher.rb": [
          "File: lib/rubygems/spec_fetcher.rb -> lib/rubygems/spec_fetcher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "202:     }.compact",
          "204:     matches = if matches.empty? && type != :prerelease",
          "206:     else",
          "207:       matches.uniq.sort_by { |name, dist| dist }",
          "208:     end",
          "",
          "[Removed Lines]",
          "205:       suggest_gems_from_name gem_name, :prerelease",
          "",
          "[Added Lines]",
          "205:                 suggest_gems_from_name gem_name, :prerelease",
          "",
          "---------------"
        ],
        "lib/rubygems/specification.rb||lib/rubygems/specification.rb": [
          "File: lib/rubygems/specification.rb -> lib/rubygems/specification.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:     when String",
          "173:       v.dump",
          "174:     when Numeric",
          "176:     else",
          "178:     end",
          "179:   end",
          "",
          "[Removed Lines]",
          "175:        \"default_value(:#{k})\"",
          "177:        \"default_value(:#{k}).dup\"",
          "",
          "[Added Lines]",
          "175:       \"default_value(:#{k})\"",
          "177:       \"default_value(:#{k}).dup\"",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem.rb||test/rubygems/test_gem.rb": [
          "File: test/rubygems/test_gem.rb -> test/rubygems/test_gem.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1758:       platform = \" #{platform}\"",
          "1759:     end",
          "1760:     expected = if Gem::USE_BUNDLER_FOR_GEMDEPS",
          "1762: Could not find gem 'a#{platform}' in any of the gem sources listed in your Gemfile.",
          "1763: You may need to `gem install -g` to install missing gems",
          "",
          "[Removed Lines]",
          "1761:       <<-EXPECTED",
          "",
          "[Added Lines]",
          "1761:                  <<-EXPECTED",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_installer.rb||test/rubygems/test_gem_installer.rb": [
          "File: test/rubygems/test_gem_installer.rb -> test/rubygems/test_gem_installer.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:     end",
          "143:     File.open File.join(util_inst_bindir, 'executable'), 'w' do |io|",
          "145: #!/usr/local/bin/ruby",
          "146: #",
          "147: # This file was generated by RubyGems",
          "",
          "[Removed Lines]",
          "144:      io.write <<-EXEC",
          "",
          "[Added Lines]",
          "144:       io.write <<-EXEC",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb": [
          "File: test/rubygems/test_gem_package.rb -> test/rubygems/test_gem_package.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "472:   end",
          "474:   def test_extract_symlink_parent",
          "485:    # Extract into a subdirectory of @destination; if this test fails it writes",
          "486:    # a file outside destination_subdir, but we want the file to remain inside",
          "487:    # @destination so it will be cleaned up.",
          "497:   end",
          "499:   def test_extract_tar_gz_directory",
          "",
          "[Removed Lines]",
          "475:    skip 'symlink not supported' if Gem.win_platform?",
          "477:    package = Gem::Package.new @gem",
          "479:    tgz_io = util_tar_gz do |tar|",
          "480:      tar.mkdir       'lib',               0755",
          "481:      tar.add_symlink 'lib/link', '../..', 0644",
          "482:      tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end",
          "483:    end",
          "488:    destination_subdir = File.join @destination, 'subdir'",
          "489:    FileUtils.mkdir_p destination_subdir",
          "491:    e = assert_raises Gem::Package::PathError do",
          "492:      package.extract_tar_gz tgz_io, destination_subdir",
          "493:    end",
          "495:    assert_equal(\"installing into parent path lib/link/outside.txt of \" +",
          "496:                  \"#{destination_subdir} is not allowed\", e.message)",
          "",
          "[Added Lines]",
          "475:     skip 'symlink not supported' if Gem.win_platform?",
          "477:     package = Gem::Package.new @gem",
          "479:     tgz_io = util_tar_gz do |tar|",
          "480:       tar.mkdir       'lib',               0755",
          "481:       tar.add_symlink 'lib/link', '../..', 0644",
          "482:       tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end",
          "483:     end",
          "488:     destination_subdir = File.join @destination, 'subdir'",
          "489:     FileUtils.mkdir_p destination_subdir",
          "491:     e = assert_raises Gem::Package::PathError do",
          "492:       package.extract_tar_gz tgz_io, destination_subdir",
          "493:     end",
          "495:     assert_equal(\"installing into parent path lib/link/outside.txt of \" +",
          "496:                   \"#{destination_subdir} is not allowed\", e.message)",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_remote_fetcher.rb||test/rubygems/test_gem_remote_fetcher.rb": [
          "File: test/rubygems/test_gem_remote_fetcher.rb -> test/rubygems/test_gem_remote_fetcher.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "890:     with_configured_fetcher(",
          "891:       \":ssl_ca_cert: #{temp_ca_cert}\\n\" +",
          "892:       \":ssl_client_cert: #{temp_client_cert}\\n\") do |fetcher|",
          "896:     end",
          "897:   end",
          "",
          "[Removed Lines]",
          "893:         assert_raises Gem::RemoteFetcher::FetchError do",
          "894:           fetcher.fetch_path(\"https://localhost:#{ssl_server.config[:Port]}/yaml\")",
          "895:         end",
          "",
          "[Added Lines]",
          "893:       assert_raises Gem::RemoteFetcher::FetchError do",
          "894:         fetcher.fetch_path(\"https://localhost:#{ssl_server.config[:Port]}/yaml\")",
          "895:       end",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_resolver.rb||test/rubygems/test_gem_resolver.rb": [
          "File: test/rubygems/test_gem_resolver.rb -> test/rubygems/test_gem_resolver.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:     a2_p1   = a3_p2 = nil",
          "301:     spec_fetcher do |fetcher|",
          "305:     end",
          "307:     v2 = v(2)",
          "",
          "[Removed Lines]",
          "302:               fetcher.spec 'a', 2",
          "303:               a2_p1 = fetcher.spec 'a', 2 do |s| s.platform = Gem::Platform.local end",
          "304:               a3_p2 = fetcher.spec 'a', 3 do |s| s.platform = unknown end",
          "",
          "[Added Lines]",
          "302:       fetcher.spec 'a', 2",
          "303:       a2_p1 = fetcher.spec 'a', 2 do |s| s.platform = Gem::Platform.local end",
          "304:       a3_p2 = fetcher.spec 'a', 3 do |s| s.platform = unknown end",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_specification.rb||test/rubygems/test_gem_specification.rb": [
          "File: test/rubygems/test_gem_specification.rb -> test/rubygems/test_gem_specification.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2945:     EXPECTED",
          "2947:     assert_output nil, expected do",
          "2949:     end",
          "2950:   end",
          "",
          "[Removed Lines]",
          "2948:      specification.reset",
          "",
          "[Added Lines]",
          "2948:       specification.reset",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2974:     EXPECTED",
          "2976:     assert_output nil, expected do",
          "2978:     end",
          "2979:   end",
          "",
          "[Removed Lines]",
          "2977:      specification.reset",
          "",
          "[Added Lines]",
          "2977:       specification.reset",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a67d9f629b88c08b871d9bb1ac34ae6b832a1640",
      "candidate_info": {
        "commit_hash": "a67d9f629b88c08b871d9bb1ac34ae6b832a1640",
        "repo": "rubygems/rubygems",
        "commit_url": "https://github.com/rubygems/rubygems/commit/a67d9f629b88c08b871d9bb1ac34ae6b832a1640",
        "files": [
          "test/rubygems/test_gem_package.rb"
        ],
        "message": "Add test case for bug 270072",
        "before_after_code_files": [
          "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
          ],
          "candidate": [
            "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
          ]
        }
      },
      "candidate_diff": {
        "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb": [
          "File: test/rubygems/test_gem_package.rb -> test/rubygems/test_gem_package.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:                  File.read(extracted)",
          "456:   end",
          "458:   def test_extract_tar_gz_directory",
          "459:     package = Gem::Package.new @gem",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "458:   def test_extract_symlink_parent",
          "459:    skip 'symlink not supported' if Gem.win_platform?",
          "461:    package = Gem::Package.new @gem",
          "463:    tgz_io = util_tar_gz do |tar|",
          "464:      tar.mkdir       'lib',               0755",
          "465:      tar.add_symlink 'lib/link', '../..', 0644",
          "466:      tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end",
          "467:    end",
          "469:    # Extract into a subdirectory of @destination; if this test fails it writes",
          "470:    # a file outside destination_subdir, but we want the file to remain inside",
          "471:    # @destination so it will be cleaned up.",
          "472:    destination_subdir = File.join @destination, 'subdir'",
          "473:    FileUtils.mkdir_p destination_subdir",
          "475:    e = assert_raises Gem::Package::PathError do",
          "476:      package.extract_tar_gz tgz_io, destination_subdir",
          "477:    end",
          "479:    assert_equal(\"installing into parent path ../outside.txt of \" +",
          "480:                  \"#{destination_subdir} is not allowed\", e.message)",
          "481:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}