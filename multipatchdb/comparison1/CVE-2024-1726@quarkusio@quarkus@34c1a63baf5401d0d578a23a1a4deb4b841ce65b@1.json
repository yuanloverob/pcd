{
  "cve_id": "CVE-2024-1726",
  "cve_desc": "A flaw was discovered in the RESTEasy Reactive implementation in Quarkus. Due to security checks for some JAX-RS endpoints being performed after serialization, more processing resources are consumed while the HTTP request is checked. In certain configurations, if an attacker has knowledge of any POST, PUT, or PATCH request paths, they can potentially identify vulnerable endpoints and trigger excessive resource usage as the endpoints process the requests. This can result in a denial of service.",
  "repo": "quarkusio/quarkus",
  "patch_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
  "patch_info": {
    "commit_hash": "34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "repo": "quarkusio/quarkus",
    "commit_url": "https://github.com/quarkusio/quarkus/commit/34c1a63baf5401d0d578a23a1a4deb4b841ce65b",
    "files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ],
    "message": "Perform security checks eagerly in RR on inherited endpoints\n\n(cherry picked from commit 37834cb44a0bc5101cdf60922c8dd0301efac822)",
    "before_after_code_files": [
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java"
    ]
  },
  "patch_diff": {
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/DenyAllJaxRsTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:         assertStatus(path, 403, 401);",
      "92:     }",
      "94:     @Test",
      "95:     public void shouldDenyUnannotatedOnInterface() {",
      "96:         String path = \"/unsecured/defaultSecurityInterface\";",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "94:     @Test",
      "95:     public void shouldAllowAnnotatedParentEndpoint() {",
      "97:         String path = \"/unsecured/parent-annotated\";",
      "98:         assertStatus(path, 200, 401);",
      "99:     }",
      "101:     @Test",
      "102:     public void shouldAllowAnnotatedEndpointOnInterface() {",
      "104:         String path = \"/unsecured/interface-annotated\";",
      "105:         assertStatus(path, 200, 401);",
      "106:     }",
      "108:     @Test",
      "109:     public void shouldDenyUnannotatedOverriddenOnInterfaceImplementor() {",
      "111:         String path = \"/unsecured/interface-overridden-declared-on-implementor\";",
      "112:         assertStatus(path, 403, 401);",
      "113:     }",
      "115:     @Test",
      "116:     public void shouldAllowAnnotatedOverriddenEndpointDeclaredOnInterface() {",
      "118:         String path = \"/unsecured/interface-overridden-declared-on-interface\";",
      "119:         assertStatus(path, 200, 401);",
      "121:         given().auth().preemptive()",
      "122:                 .basic(\"admin\", \"admin\").get(path)",
      "123:                 .then()",
      "124:                 .body(Matchers.is(\"implementor-response\"));",
      "125:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredParentResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityParent\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/parent-annotated\")",
      "18:     public String parentAnnotated() {",
      "19:         return \"parent-annotated\";",
      "20:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:     public UnsecuredSubResource permitAllSub() {",
      "58:         return new UnsecuredSubResource();",
      "59:     }",
      "60: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "61:     @Override",
      "62:     public String interfaceOverriddenDeclaredOnInterface() {",
      "63:         return \"implementor-response\";",
      "64:     }",
      "66:     @GET",
      "67:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "68:     @Override",
      "69:     public String interfaceOverriddenDeclaredOnImplementor() {",
      "70:         return \"implementor-response\";",
      "71:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/deployment/src/test/java/io/quarkus/resteasy/reactive/server/test/security/UnsecuredResourceInterface.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.quarkus.resteasy.reactive.server.test.security;",
      "3: import jakarta.ws.rs.GET;",
      "4: import jakarta.ws.rs.Path;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import jakarta.annotation.security.RolesAllowed;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "11:         return \"defaultSecurityInterface\";",
      "12:     }",
      "14: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15:     @RolesAllowed({ \"admin\", \"user\" })",
      "16:     @GET",
      "17:     @Path(\"/interface-annotated\")",
      "18:     default String interfaceAnnotated() {",
      "19:         return \"interface-annotated\";",
      "20:     }",
      "22:     @RolesAllowed({ \"admin\", \"user\" })",
      "23:     @GET",
      "24:     @Path(\"/interface-overridden-declared-on-interface\")",
      "25:     default String interfaceOverriddenDeclaredOnInterface() {",
      "27:         return \"interface-overridden-declared-on-interface\";",
      "28:     }",
      "30:     @RolesAllowed({ \"admin\", \"user\" })",
      "31:     @GET",
      "32:     @Path(\"/interface-overridden-declared-on-implementor\")",
      "33:     default String interfaceOverriddenDeclaredOnImplementor() {",
      "35:         return \"interface-overridden-declared-on-implementor\";",
      "36:     }",
      "",
      "---------------"
    ],
    "extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java||extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java": [
      "File: extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java -> extensions/resteasy-reactive/quarkus-resteasy-reactive/runtime/src/main/java/io/quarkus/resteasy/reactive/server/runtime/security/EagerSecurityHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "187:     }",
      "189:     static MethodDescription lazyMethodToMethodDescription(ResteasyReactiveResourceInfo lazyMethod) {",
      "191:                 lazyMethod.getName(), MethodDescription.typesAsStrings(lazyMethod.getParameterTypes()));",
      "192:     }",
      "",
      "[Removed Lines]",
      "190:         return new MethodDescription(lazyMethod.getResourceClass().getName(),",
      "",
      "[Added Lines]",
      "190:         return new MethodDescription(lazyMethod.getActualDeclaringClassName(),",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java||independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java": [
      "File: independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java -> independent-projects/resteasy-reactive/server/processor/src/main/java/org/jboss/resteasy/reactive/server/processor/ServerEndpointIndexer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:             }",
      "184:         }",
      "185:         serverResourceMethod.setHandlerChainCustomizers(methodCustomizers);",
      "186:         return serverResourceMethod;",
      "187:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "186:         serverResourceMethod.setActualDeclaringClassName(methodInfo.declaringClass().name().toString());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/core/startup/RuntimeResourceDeployment.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "190:         ResteasyReactiveResourceInfo lazyMethod = new ResteasyReactiveResourceInfo(method.getName(), resourceClass,",
      "191:                 parameterDeclaredUnresolvedTypes, classAnnotationNames, method.getMethodAnnotationNames(),",
      "194:         RuntimeInterceptorDeployment.MethodInterceptorContext interceptorDeployment = runtimeInterceptorDeployment",
      "195:                 .forMethod(method, lazyMethod);",
      "",
      "[Removed Lines]",
      "192:                 !defaultBlocking && !method.isBlocking());",
      "",
      "[Added Lines]",
      "192:                 !defaultBlocking && !method.isBlocking(), method.getActualDeclaringClassName());",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/model/ServerResourceMethod.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:     private List<HandlerChainCustomizer> handlerChainCustomizers = new ArrayList<>();",
      "20:     private ParameterExtractor customerParameterExtractor;",
      "22:     public ServerResourceMethod() {",
      "23:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21:     private String actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:         this.customerParameterExtractor = customerParameterExtractor;",
      "71:         return this;",
      "72:     }",
      "73: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75:     public String getActualDeclaringClassName() {",
      "76:         return actualDeclaringClassName;",
      "77:     }",
      "79:     public void setActualDeclaringClassName(String actualDeclaringClassName) {",
      "80:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "81:     }",
      "",
      "---------------"
    ],
    "independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java||independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java": [
      "File: independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java -> independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/spi/ResteasyReactiveResourceInfo.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28:     public final boolean isNonBlocking;",
      "30:     private volatile Annotation[] classAnnotations;",
      "31:     private volatile Method method;",
      "32:     private volatile Annotation[] annotations;",
      "33:     private volatile Type returnType;",
      "34:     private volatile String methodId;",
      "36:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "37:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking) {",
      "38:         this.name = name;",
      "39:         this.declaringClass = declaringClass;",
      "40:         this.parameterTypes = parameterTypes;",
      "41:         this.classAnnotationNames = classAnnotationNames;",
      "42:         this.methodAnnotationNames = methodAnnotationNames;",
      "43:         this.isNonBlocking = isNonBlocking;",
      "44:     }",
      "46:     public String getName() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:     private final String actualDeclaringClassName;",
      "39:     @Deprecated",
      "42:         this(name, declaringClass, parameterTypes, classAnnotationNames, methodAnnotationNames, isNonBlocking,",
      "43:                 declaringClass.getName());",
      "44:     }",
      "46:     public ResteasyReactiveResourceInfo(String name, Class<?> declaringClass, Class[] parameterTypes,",
      "47:             Set<String> classAnnotationNames, Set<String> methodAnnotationNames, boolean isNonBlocking,",
      "48:             String actualDeclaringClassName) {",
      "55:         this.actualDeclaringClassName = actualDeclaringClassName;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "119:         }",
      "120:         return methodId;",
      "121:     }",
      "122: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "135:     public String getActualDeclaringClassName() {",
      "136:         return actualDeclaringClassName;",
      "137:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8fd669fc350843a3c74e7d5b3fe9d06ac1f2889a",
      "candidate_info": {
        "commit_hash": "8fd669fc350843a3c74e7d5b3fe9d06ac1f2889a",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/8fd669fc350843a3c74e7d5b3fe9d06ac1f2889a",
        "files": [
          "extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt",
          "extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java"
        ],
        "message": "Use the right MongoDB ClientSession interface\n\n(cherry picked from commit 03ed847a247173a3bc57acd7a7b54c9b70064a2e)",
        "before_after_code_files": [
          "extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt||extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt",
          "extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java||extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt||extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt": [
          "File: extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt -> extensions/panache/mongodb-panache-kotlin/runtime/src/main/kotlin/io/quarkus/mongodb/panache/kotlin/Panache.kt",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.quarkus.mongodb.panache.kotlin",
          "4: import io.quarkus.mongodb.panache.kotlin.runtime.KotlinMongoOperations",
          "6: object Panache {",
          "",
          "[Removed Lines]",
          "3: import com.mongodb.session.ClientSession",
          "",
          "[Added Lines]",
          "3: import com.mongodb.client.ClientSession",
          "",
          "---------------"
        ],
        "extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java||extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java": [
          "File: extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java -> extensions/panache/mongodb-panache/runtime/src/main/java/io/quarkus/mongodb/panache/Panache.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.quarkus.mongodb.panache;",
          "5: import io.quarkus.mongodb.panache.runtime.JavaMongoOperations;",
          "",
          "[Removed Lines]",
          "3: import com.mongodb.session.ClientSession;",
          "",
          "[Added Lines]",
          "3: import com.mongodb.client.ClientSession;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5e1e0aacbf27a1892acbfeca561aa81b6178794d",
      "candidate_info": {
        "commit_hash": "5e1e0aacbf27a1892acbfeca561aa81b6178794d",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/5e1e0aacbf27a1892acbfeca561aa81b6178794d",
        "files": [
          "test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java",
          "test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java"
        ],
        "message": "Add config flag to disable jacoco\n\n(cherry picked from commit 5236c49f8ea015d39fe64d0a728c52da0ca7f9b8)",
        "before_after_code_files": [
          "test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java||test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java",
          "test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java||test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java||test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java": [
          "File: test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java -> test-framework/jacoco/deployment/src/main/java/io/quarkus/jacoco/deployment/JacocoProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: import org.jacoco.core.instr.Instrumenter;",
          "16: import org.jacoco.core.runtime.OfflineInstrumentationAccessGenerator;",
          "17: import org.jboss.jandex.ClassInfo;",
          "19: import io.quarkus.bootstrap.model.ApplicationModel;",
          "20: import io.quarkus.bootstrap.workspace.SourceDir;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: import org.jboss.logging.Logger;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: public class JacocoProcessor {",
          "39:     @BuildStep(onlyIf = IsTest.class)",
          "40:     FeatureBuildItem feature() {",
          "41:         return new FeatureBuildItem(\"jacoco\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     private static final Logger log = Logger.getLogger(JacocoProcessor.class);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54:             return;",
          "55:         }",
          "57:         String dataFile = getFilePath(config.dataFile, outputTargetBuildItem.getOutputDirectory(),",
          "58:                 JacocoConfig.JACOCO_QUARKUS_EXEC);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         if (!config.enabled) {",
          "60:             log.debug(\"quarkus-jacoco is disabled via config\");",
          "61:             return;",
          "62:         }",
          "",
          "---------------"
        ],
        "test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java||test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java": [
          "File: test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java -> test-framework/jacoco/runtime/src/main/java/io/quarkus/jacoco/runtime/JacocoConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     public static final String TARGET_JACOCO_QUARKUS_EXEC = \"target/\" + JACOCO_QUARKUS_EXEC;",
          "17:     public static final String TARGET_JACOCO_REPORT = \"target/\" + JACOCO_REPORT;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:     @ConfigItem(defaultValue = \"true\")",
          "24:     public boolean enabled;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4e9086321fea72b4aaf688a7a4cac85d29a7ea6",
      "candidate_info": {
        "commit_hash": "d4e9086321fea72b4aaf688a7a4cac85d29a7ea6",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/d4e9086321fea72b4aaf688a7a4cac85d29a7ea6",
        "files": [
          "docs/src/main/asciidoc/kafka.adoc",
          "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java",
          "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties"
        ],
        "message": "Disable messaging observation by default for backwards compatibility\n\nFixes #38889\n\n(cherry picked from commit 1921c452cd8a6a76ba8b546d3c779e1246b4ec27)",
        "before_after_code_files": [
          "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java||extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java",
          "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties||integration-tests/reactive-messaging-kafka/src/main/resources/application.properties"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java||extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java": [
          "File: extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java -> extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:         });",
          "206:     }",
          "208:     @BuildStep",
          "209:     public void enableHealth(ReactiveMessagingBuildTimeConfig buildTimeConfig,",
          "210:             BuildProducer<HealthBuildItem> producer) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "208:     @BuildStep",
          "209:     public void disableObservation(BuildProducer<RunTimeConfigurationDefaultBuildItem> runtimeConfigProducer) {",
          "210:         runtimeConfigProducer.produce(",
          "211:                 new RunTimeConfigurationDefaultBuildItem(\"smallrye.messaging.observation.enabled\", \"false\"));",
          "212:     }",
          "",
          "---------------"
        ],
        "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties||integration-tests/reactive-messaging-kafka/src/main/resources/application.properties": [
          "File: integration-tests/reactive-messaging-kafka/src/main/resources/application.properties -> integration-tests/reactive-messaging-kafka/src/main/resources/application.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: mp.messaging.outgoing.request-reply.reply.batch=true",
          "48: quarkus.micrometer.binder.messaging.enabled=true",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: smallrye.messaging.observation.enabled=true",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b26d5f2185128de360c26e4539bb19be12034f6",
      "candidate_info": {
        "commit_hash": "5b26d5f2185128de360c26e4539bb19be12034f6",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/5b26d5f2185128de360c26e4539bb19be12034f6",
        "files": [
          "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java",
          "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java",
          "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java"
        ],
        "message": "ArC: fix interception when some methods return void\n\nThis commit fixes 2 cases when invalid bytecode is generated:\n\n- when a `void`-returning method is intercepted and also decorated\n- when an interceptor declared on a target class returns `void`\n\n(cherry picked from commit 13972414d77e4bc8a1930937bc8c637ba9f9e32b)",
        "before_after_code_files": [
          "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java||independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java",
          "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java||independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java",
          "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java||independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java||independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java": [
          "File: independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java -> independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/SubclassGenerator.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "341:                         applicationClassPredicate.test(bean.getBeanClass()),",
          "342:                         funBytecode.getMethodParam(1),",
          "343:                         funBytecode.getMethodParam(0));",
          "345:                 constructor.invokeInterfaceMethod(MethodDescriptors.LIST_ADD, methodsList, fun.getInstance());",
          "346:             }",
          "347:             constructor.writeInstanceField(field.getFieldDescriptor(), constructor.getThis(), methodsList);",
          "",
          "[Removed Lines]",
          "344:                 funBytecode.returnValue(ret);",
          "",
          "[Added Lines]",
          "344:                 funBytecode.returnValue(ret != null ? ret : funBytecode.loadNull());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "461:                     MethodDescriptor virtualMethodDescriptor = MethodDescriptor.ofMethod(declaringClass,",
          "462:                             originalMethodDescriptor.getName(),",
          "463:                             decoratorMethodDescriptor.getReturnType(), decoratorMethodDescriptor.getParameterTypes());",
          "467:                 } else {",
          "468:                     ResultHandle superResult = funcBytecode.invokeVirtualMethod(forwardDescriptor, targetHandle,",
          "469:                             superParamHandles);",
          "",
          "[Removed Lines]",
          "464:                     funcBytecode",
          "465:                             .returnValue(funcBytecode.invokeVirtualMethod(virtualMethodDescriptor, funDecoratorInstance,",
          "466:                                     superParamHandles));",
          "",
          "[Added Lines]",
          "464:                     ResultHandle superResult = funcBytecode.invokeVirtualMethod(virtualMethodDescriptor, funDecoratorInstance,",
          "465:                             superParamHandles);",
          "466:                     funcBytecode.returnValue(superResult != null ? superResult : funcBytecode.loadNull());",
          "",
          "---------------"
        ],
        "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java||independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java": [
          "File: independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java -> independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/VoidMethodDecoratorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.arc.test.decorators;",
          "3: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "4: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "6: import java.util.concurrent.atomic.AtomicBoolean;",
          "8: import jakarta.annotation.Priority;",
          "9: import jakarta.decorator.Decorator;",
          "10: import jakarta.decorator.Delegate;",
          "11: import jakarta.enterprise.context.ApplicationScoped;",
          "12: import jakarta.enterprise.context.Dependent;",
          "13: import jakarta.inject.Inject;",
          "15: import org.junit.jupiter.api.Test;",
          "16: import org.junit.jupiter.api.extension.RegisterExtension;",
          "18: import io.quarkus.arc.Arc;",
          "19: import io.quarkus.arc.test.ArcTestContainer;",
          "21: public class VoidMethodDecoratorTest {",
          "22:     @RegisterExtension",
          "23:     public ArcTestContainer container = new ArcTestContainer(Performer.class, MainPerformer.class,",
          "24:             PerformerDecorator.class);",
          "26:     @Test",
          "27:     public void testDecoration() {",
          "28:         MainPerformer performer = Arc.container().instance(MainPerformer.class).get();",
          "30:         assertFalse(MainPerformer.DONE.get());",
          "31:         assertFalse(PerformerDecorator.DONE.get());",
          "33:         performer.doSomething();",
          "35:         assertTrue(MainPerformer.DONE.get());",
          "36:         assertTrue(PerformerDecorator.DONE.get());",
          "37:     }",
          "39:     interface Performer {",
          "40:         void doSomething();",
          "41:     }",
          "43:     @ApplicationScoped",
          "44:     static class MainPerformer implements Performer {",
          "45:         static final AtomicBoolean DONE = new AtomicBoolean();",
          "47:         @Override",
          "48:         public void doSomething() {",
          "49:             DONE.set(true);",
          "50:         }",
          "51:     }",
          "53:     @Dependent",
          "54:     @Priority(1)",
          "55:     @Decorator",
          "56:     static class PerformerDecorator implements Performer {",
          "57:         static final AtomicBoolean DONE = new AtomicBoolean();",
          "59:         @Inject",
          "60:         @Delegate",
          "61:         Performer delegate;",
          "63:         @Override",
          "64:         public void doSomething() {",
          "65:             DONE.set(true);",
          "66:             delegate.doSomething();",
          "67:         }",
          "68:     }",
          "69: }",
          "",
          "---------------"
        ],
        "independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java||independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java": [
          "File: independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java -> independent-projects/arc/tests/src/test/java/io/quarkus/arc/test/decorators/interceptor/VoidMethodInterceptorAndDecoratorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.quarkus.arc.test.decorators.interceptor;",
          "3: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "4: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "6: import java.lang.annotation.Documented;",
          "7: import java.lang.annotation.ElementType;",
          "8: import java.lang.annotation.Retention;",
          "9: import java.lang.annotation.RetentionPolicy;",
          "10: import java.lang.annotation.Target;",
          "11: import java.util.concurrent.atomic.AtomicBoolean;",
          "13: import jakarta.annotation.Priority;",
          "14: import jakarta.decorator.Decorator;",
          "15: import jakarta.decorator.Delegate;",
          "16: import jakarta.enterprise.context.ApplicationScoped;",
          "17: import jakarta.enterprise.context.Dependent;",
          "18: import jakarta.inject.Inject;",
          "19: import jakarta.interceptor.AroundInvoke;",
          "20: import jakarta.interceptor.Interceptor;",
          "21: import jakarta.interceptor.InterceptorBinding;",
          "22: import jakarta.interceptor.InvocationContext;",
          "24: import org.junit.jupiter.api.Test;",
          "25: import org.junit.jupiter.api.extension.RegisterExtension;",
          "27: import io.quarkus.arc.Arc;",
          "28: import io.quarkus.arc.test.ArcTestContainer;",
          "30: public class VoidMethodInterceptorAndDecoratorTest {",
          "31:     @RegisterExtension",
          "32:     public ArcTestContainer container = new ArcTestContainer(Performer.class, MainPerformer.class,",
          "33:             PerformerDecorator.class, MyInterceptorBinding.class, MyInterceptor.class);",
          "35:     @Test",
          "36:     public void testDecoration() {",
          "37:         MainPerformer performer = Arc.container().instance(MainPerformer.class).get();",
          "39:         assertFalse(MainPerformer.DONE.get());",
          "40:         assertFalse(PerformerDecorator.DONE.get());",
          "41:         assertFalse(MyInterceptor.INTERCEPTED.get());",
          "43:         performer.doSomething();",
          "45:         assertTrue(MainPerformer.DONE.get());",
          "46:         assertTrue(PerformerDecorator.DONE.get());",
          "47:         assertTrue(MyInterceptor.INTERCEPTED.get());",
          "48:     }",
          "50:     interface Performer {",
          "51:         void doSomething();",
          "52:     }",
          "54:     @ApplicationScoped",
          "55:     @MyInterceptorBinding",
          "56:     static class MainPerformer implements Performer {",
          "57:         static final AtomicBoolean DONE = new AtomicBoolean();",
          "59:         @Override",
          "60:         public void doSomething() {",
          "61:             DONE.set(true);",
          "62:         }",
          "63:     }",
          "65:     @Dependent",
          "66:     @Priority(1)",
          "67:     @Decorator",
          "68:     static class PerformerDecorator implements Performer {",
          "69:         static final AtomicBoolean DONE = new AtomicBoolean();",
          "71:         @Inject",
          "72:         @Delegate",
          "73:         Performer delegate;",
          "75:         @Override",
          "76:         public void doSomething() {",
          "77:             DONE.set(true);",
          "78:             delegate.doSomething();",
          "79:         }",
          "80:     }",
          "82:     @Target({ ElementType.TYPE, ElementType.METHOD })",
          "83:     @Retention(RetentionPolicy.RUNTIME)",
          "84:     @Documented",
          "85:     @InterceptorBinding",
          "86:     public @interface MyInterceptorBinding {",
          "87:     }",
          "89:     @MyInterceptorBinding",
          "90:     @Priority(1)",
          "91:     @Interceptor",
          "92:     static class MyInterceptor {",
          "93:         static final AtomicBoolean INTERCEPTED = new AtomicBoolean();",
          "95:         @AroundInvoke",
          "96:         Object log(InvocationContext ctx) throws Exception {",
          "97:             INTERCEPTED.set(true);",
          "98:             return ctx.proceed();",
          "99:         }",
          "100:     }",
          "101: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4d543383bdaeaf54a59c7b777df140e260f6c429",
      "candidate_info": {
        "commit_hash": "4d543383bdaeaf54a59c7b777df140e260f6c429",
        "repo": "quarkusio/quarkus",
        "commit_url": "https://github.com/quarkusio/quarkus/commit/4d543383bdaeaf54a59c7b777df140e260f6c429",
        "files": [
          "extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java"
        ],
        "message": "SmallRye Health: terminate request context properly\n\nWhen the SmallRye Health route handler activates request context on its own,\nit also needs to terminate it. However, that termination needs to happen\nonly after all health checks complete. That's what this commit does.\n\n(cherry picked from commit 650ec93a5990c1e1820c4cb49ba0e39b4ac1a28e)",
        "before_after_code_files": [
          "extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java||extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/quarkusio/quarkus/pull/38864"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java||extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java": [
          "File: extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java -> extensions/smallrye-health/runtime/src/main/java/io/quarkus/smallrye/health/runtime/SmallRyeHealthHandlerBase.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     public void handle(RoutingContext ctx) {",
          "29:         ManagedContext requestContext = Arc.container().requestContext();",
          "30:         if (requestContext.isActive()) {",
          "32:         } else {",
          "33:             requestContext.activate();",
          "34:             try {",
          "37:                 requestContext.terminate();",
          "38:             }",
          "39:         }",
          "40:     }",
          "43:         QuarkusHttpUser user = (QuarkusHttpUser) ctx.user();",
          "44:         if (user != null) {",
          "45:             Arc.container().instance(CurrentIdentityAssociation.class).get().setIdentity(user.getSecurityIdentity());",
          "",
          "[Removed Lines]",
          "31:             doHandle(ctx);",
          "35:                 doHandle(ctx);",
          "36:             } finally {",
          "42:     private void doHandle(RoutingContext ctx) {",
          "",
          "[Added Lines]",
          "31:             doHandle(ctx, null);",
          "35:                 doHandle(ctx, requestContext);",
          "36:             } catch (Exception e) {",
          "38:                 throw e;",
          "43:     private void doHandle(RoutingContext ctx, ManagedContext requestContext) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:         Context context = Vertx.currentContext();",
          "49:         getHealth(reporter, ctx).emitOn(MutinyHelper.executor(context))",
          "50:                 .subscribe().with(health -> {",
          "51:                     HttpServerResponse resp = ctx.response();",
          "52:                     if (health.isDown()) {",
          "53:                         resp.setStatusCode(503);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:                     if (requestContext != null) {",
          "53:                         requestContext.terminate();",
          "54:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:                     } catch (IOException e) {",
          "61:                         throw new UncheckedIOException(e);",
          "62:                     }",
          "63:                 });",
          "64:     }",
          "65: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:                 }, failure -> {",
          "68:                     if (requestContext != null) {",
          "69:                         requestContext.terminate();",
          "70:                     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}