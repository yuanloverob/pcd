{
  "cve_id": "CVE-2020-1936",
  "cve_desc": "A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
  "repo": "apache/ambari",
  "patch_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
  "patch_info": {
    "commit_hash": "a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "repo": "apache/ambari",
    "commit_url": "https://github.com/apache/ambari/pull/3040/commits/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
    "files": [
      "ambari-web/app/views/common/breadcrumbs_view.js"
    ],
    "message": "AMBARI-25329. Ambari breadcrumbs xss vulnerability",
    "before_after_code_files": [
      "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js"
    ]
  },
  "patch_diff": {
    "ambari-web/app/views/common/breadcrumbs_view.js||ambari-web/app/views/common/breadcrumbs_view.js": [
      "File: ambari-web/app/views/common/breadcrumbs_view.js -> ambari-web/app/views/common/breadcrumbs_view.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "149:   createLabel() {",
      "150:     let label = this.get('label');",
      "151:     let labelBindingPath = this.get('labelBindingPath');",
      "154:     this.set('formattedLabel', this.labelPostFormat(formattedLabel));",
      "155:   },",
      "",
      "[Removed Lines]",
      "153:     let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;",
      "",
      "[Added Lines]",
      "152:     let formattedLabel;",
      "154:     if (labelBindingPath) {",
      "155:       formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));",
      "156:     } else{",
      "157:       formattedLabel = label;",
      "158:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "216:       }",
      "217:       currentState = currentState.get('parentState');",
      "218:     }",
      "220:     if (items.length) {",
      "221:       items.get('lastObject').setProperties({",
      "222:         disabled: true,",
      "",
      "[Removed Lines]",
      "219:     items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "[Added Lines]",
      "227:     items.reverse();",
      "228:     items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));",
      "229:     items = items.map(item => App.BreadcrumbItem.extend(item).create());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "50a30aab0ae9a6d95fa87fca216fd268ffef7c7f",
      "candidate_info": {
        "commit_hash": "50a30aab0ae9a6d95fa87fca216fd268ffef7c7f",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/50a30aab0ae9a6d95fa87fca216fd268ffef7c7f",
        "files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts"
        ],
        "message": "[AMBARI-24436] [Log Search UI] App Loader Page - Align the logo left (#2066)\n\n(cherry picked from commit 0096119ffd8ba3b26fa260de1b84fa545c3d503a)",
        "before_after_code_files": [
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less",
          "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html -> ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: <header>",
          "19:   <nav class=\"navbar\" [class.authorized]=\"isAuthorized$ | async\">",
          "21:     <breadcrumbs *ngIf=\"(isAuthorized$ | async) && (isBaseDataAvailable$ | async)\"></breadcrumbs>",
          "22:     <top-menu *ngIf=\"(isAuthorized$ | async) && (isBaseDataAvailable$ | async)\"></top-menu>",
          "23:   </nav>",
          "",
          "[Removed Lines]",
          "20:     <h1 [ngClass]=\"{'full-flex-width': !(isAuthorized$ | async), 'pull-left': (isBaseDataAvailable$ | async)}\">{{'common.title' | translate}}</h1>",
          "",
          "[Added Lines]",
          "20:     <h1>{{'common.title' | translate}}</h1>",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less -> ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.less",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:     border-radius: 0;",
          "30:     color: #fff;",
          "31:     margin-bottom: 0;",
          "33:     .stretch-flex;",
          "34:     h1 {",
          "35:       align-items: center;",
          "",
          "[Removed Lines]",
          "32:     justify-content: center;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts||ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts": [
          "File: ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts -> ambari-logsearch/ambari-logsearch-web/src/app/components/app.component.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   isBaseDataAvailable$: Observable<boolean> = this.appState.getParameter('baseDataSetState')",
          "35:     .map((dataSetState: DataAvailability) => dataSetState === DataAvailabilityValues.AVAILABLE);",
          "38:     timeOut: 2000,",
          "39:     showProgressBar: true,",
          "40:     pauseOnHover: true,",
          "",
          "[Removed Lines]",
          "37:   private notificationServiceOptions: Options = {",
          "",
          "[Added Lines]",
          "37:   notificationServiceOptions: Options = {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6b0838ba1853152a2849be8705be1aff669349e",
      "candidate_info": {
        "commit_hash": "e6b0838ba1853152a2849be8705be1aff669349e",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/e6b0838ba1853152a2849be8705be1aff669349e",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java"
        ],
        "message": "AMBARI-25159. http.strict-transport-security change does not take affect in 2.7.x. (mpapirkovskyy) (#2861)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java",
          "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java||ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java -> ambari-server/src/main/java/org/apache/ambari/server/configuration/spring/ApiSecurityConfig.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     http.csrf().disable()",
          "90:         .authorizeRequests().anyRequest().authenticated()",
          "91:         .and()",
          "93:         .exceptionHandling().authenticationEntryPoint(ambariEntryPoint)",
          "94:         .and()",
          "95:         .addFilterBefore(guiceBeansConfig.ambariUserAuthorizationFilter(), BasicAuthenticationFilter.class)",
          "",
          "[Removed Lines]",
          "92:         .headers().frameOptions().disable().and()",
          "",
          "[Added Lines]",
          "92:         .headers().httpStrictTransportSecurity().disable()",
          "93:         .frameOptions().disable().and()",
          "",
          "---------------"
        ],
        "ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java||ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/AmbariServer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:     ServerConnector apiConnector;",
          "672:     HttpConfiguration http_config = new HttpConfiguration();",
          "673:     http_config.setRequestHeaderSize(configs.getHttpRequestHeaderSize());",
          "674:     http_config.setResponseHeaderSize(configs.getHttpResponseHeaderSize());",
          "675:     http_config.setSendServerVersion(false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:     http_config.addCustomizer(new SecureRequestCustomizer());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28b6ea164c2770fd6126671731b68d3c612fa187",
      "candidate_info": {
        "commit_hash": "28b6ea164c2770fd6126671731b68d3c612fa187",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/28b6ea164c2770fd6126671731b68d3c612fa187",
        "files": [
          "ambari-web/app/utils/ajax/ajax.js"
        ],
        "message": "AMBARI-25181. Host registration through Ambari UI failed with an error \"Unsupported Media Type\" (amagyar) (#2848) (#3011)",
        "before_after_code_files": [
          "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-web/app/utils/ajax/ajax.js||ambari-web/app/utils/ajax/ajax.js": [
          "File: ambari-web/app/utils/ajax/ajax.js -> ambari-web/app/utils/ajax/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "3275:   if (this.format) {",
          "3276:     jQuery.extend(opt, this.format(data, opt));",
          "3277:   }",
          "3280:     opt.headers['Content-Type'] = 'text/plain';",
          "3281:   }",
          "",
          "[Removed Lines]",
          "3278:   if (!('headers' in opt && 'Content-Type' in opt.headers)) {",
          "",
          "[Added Lines]",
          "3278:   if (!('headers' in opt && 'Content-Type' in opt.headers) && opt.contentType === undefined) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf43705dda5640ad37b8b1030af5ebd40fc4c782",
      "candidate_info": {
        "commit_hash": "bf43705dda5640ad37b8b1030af5ebd40fc4c782",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/bf43705dda5640ad37b8b1030af5ebd40fc4c782",
        "files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/constants.py"
        ],
        "message": "AMBARI-24886 : Add stack feature constant to support Ranger admin users password change. (#2606)",
        "before_after_code_files": [
          "ambari-common/src/main/python/resource_management/libraries/functions/constants.py||ambari-common/src/main/python/resource_management/libraries/functions/constants.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-common/src/main/python/resource_management/libraries/functions/constants.py||ambari-common/src/main/python/resource_management/libraries/functions/constants.py": [
          "File: ambari-common/src/main/python/resource_management/libraries/functions/constants.py -> ambari-common/src/main/python/resource_management/libraries/functions/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:   OOZIE_EXTJS_INCLUDED = \"oozie_extjs_included\"",
          "125:   MULTIPLE_ENV_SH_FILES_SUPPORT = \"multiple_env_sh_files_support\"",
          "126:   AMS_LEGACY_HADOOP_SINK = \"ams_legacy_hadoop_sink\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:   RANGER_ALL_ADMIN_CHANGE_DEFAULT_PASSWORD = 'ranger_all_admin_change_default_password'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61b1792e5b974699d39b526e632bf7b86ff065c1",
      "candidate_info": {
        "commit_hash": "61b1792e5b974699d39b526e632bf7b86ff065c1",
        "repo": "apache/ambari",
        "commit_url": "https://github.com/apache/ambari/commit/61b1792e5b974699d39b526e632bf7b86ff065c1",
        "files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java"
        ],
        "message": "AMBARI-24593. Download client config fails if user running Ambari server has UID>2097151 (amagyar) (#2246) (#2248)",
        "before_after_code_files": [
          "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/ambari/pull/3633",
          "https://github.com/apache/ambari/pull/3631",
          "https://github.com/apache/ambari/pull/3637",
          "https://github.com/apache/ambari/pull/3632",
          "https://github.com/apache/ambari/pull/3634",
          "https://github.com/apache/ambari/pull/3635"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java||ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java": [
          "File: ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java -> ambari-server/src/main/java/org/apache/ambari/server/controller/internal/ClientConfigResourceProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "816:         BufferedOutputStream bOut = new BufferedOutputStream(fOut);",
          "817:         GzipCompressorOutputStream gzOut = new GzipCompressorOutputStream(bOut);",
          "818:         TarArchiveOutputStream tOut = new TarArchiveOutputStream(gzOut);",
          "820:         try {",
          "821:           for (ServiceComponentHostResponse schResponse : serviceComponentHostResponses) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "819:         tOut.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);",
          "820:         tOut.setBigNumberMode(TarArchiveOutputStream.BIGNUMBER_POSIX);",
          "",
          "---------------"
        ]
      }
    }
  ]
}