{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a99c478ecc53b2818f9316577b92af53f07c585e",
      "candidate_info": {
        "commit_hash": "a99c478ecc53b2818f9316577b92af53f07c585e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/a99c478ecc53b2818f9316577b92af53f07c585e",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java"
        ],
        "message": "PDFBOX-4892: avoid NegativeArraySizeException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884389 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java||fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java||fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java -> fontbox/src/main/java/org/apache/fontbox/cff/DataInput.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:     public byte[] readBytes(int length) throws IOException",
          "181:     {",
          "182:         if (inputBuffer.length - bufferPosition < length)",
          "183:         {",
          "184:             throw new EOFException();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:         if (length < 0)",
          "183:         {",
          "184:             throw new IOException(\"length is negative\");",
          "185:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad861b4789ca4b93b42096c764f4b787f057c686",
      "candidate_info": {
        "commit_hash": "ad861b4789ca4b93b42096c764f4b787f057c686",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/ad861b4789ca4b93b42096c764f4b787f057c686",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ],
        "message": "PDFBOX-5081: add exception message\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1885725 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java||fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java -> fontbox/src/main/java/org/apache/fontbox/cff/CFFParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:                     done = true;",
          "398:                     break;",
          "399:                 default:",
          "401:                 }",
          "402:             }",
          "403:         }",
          "",
          "[Removed Lines]",
          "400:                     throw new IllegalArgumentException();",
          "",
          "[Added Lines]",
          "401:                     throw new IllegalArgumentException(\"illegal nibble \" + nibble);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24ea73f5eabbe48ff75283f0d01e06ea5954e9b6",
      "candidate_info": {
        "commit_hash": "24ea73f5eabbe48ff75283f0d01e06ea5954e9b6",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/24ea73f5eabbe48ff75283f0d01e06ea5954e9b6",
        "files": [
          "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887596 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java||xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java||xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java": [
          "File: xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java -> xmpbox/src/main/java/org/apache/xmpbox/schema/XMPSchema.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1115:         {",
          "1116:             if (property instanceof ArrayProperty)",
          "1117:             {",
          "1119:                 ArrayProperty arrayProp = (ArrayProperty) property;",
          "1121:                 {",
          "1122:                     Attribute text = child.getAttribute(XmpConstants.LANG_NAME);",
          "1123:                     retval.add(text != null ? text.getValue() : XmpConstants.X_DEFAULT);",
          "",
          "[Removed Lines]",
          "1118:                 List<String> retval = new ArrayList<String>();",
          "1120:                 for (AbstractField child : arrayProp.getContainer().getAllProperties())",
          "",
          "[Added Lines]",
          "1119:                 List<AbstractField> allProperties = arrayProp.getContainer().getAllProperties();",
          "1120:                 List<String> retval = new ArrayList<String>(allProperties.size());",
          "1121:                 for (AbstractField child : allProperties)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "23d483ab2046131a6a6340ac3b39deacdd0a27ac",
      "candidate_info": {
        "commit_hash": "23d483ab2046131a6a6340ac3b39deacdd0a27ac",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/23d483ab2046131a6a6340ac3b39deacdd0a27ac",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java"
        ],
        "message": "PDFBOX-5164: remove jdk 1.7 class\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889046 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java||examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java -> examples/src/main/java/org/apache/pdfbox/examples/pdmodel/CreatePortableCollection.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.ByteArrayInputStream;",
          "20: import java.io.IOException;",
          "22: import java.util.ArrayList;",
          "23: import java.util.GregorianCalendar;",
          "24: import java.util.HashMap;",
          "",
          "[Removed Lines]",
          "21: import java.nio.charset.StandardCharsets;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: import org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification;",
          "37: import org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile;",
          "38: import org.apache.pdfbox.pdmodel.font.PDType1Font;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: import org.apache.pdfbox.util.Charsets;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:         fs1.setFileUnicode(\"Test1.txt\");",
          "91:         PDEmbeddedFile ef1 = new PDEmbeddedFile(doc, new ByteArrayInputStream(data1), COSName.FLATE_DECODE);",
          "93:         ef1.setSubtype(\"text/plain\");",
          "",
          "[Removed Lines]",
          "90:         byte[] data1 = \"This is the contents of the first embedded file\".getBytes(StandardCharsets.ISO_8859_1);",
          "",
          "[Added Lines]",
          "90:         byte[] data1 = \"This is the contents of the first embedded file\".getBytes(Charsets.ISO_8859_1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:         fs2.setFileUnicode(\"Test2.txt\");",
          "111:         PDEmbeddedFile ef2 = new PDEmbeddedFile(doc, new ByteArrayInputStream(data2), COSName.FLATE_DECODE);",
          "113:         ef2.setSubtype(\"text/plain\");",
          "",
          "[Removed Lines]",
          "110:         byte[] data2 = \"This is the contents of the second embedded file\".getBytes(StandardCharsets.ISO_8859_1);",
          "",
          "[Added Lines]",
          "110:         byte[] data2 = \"This is the contents of the second embedded file\".getBytes(Charsets.ISO_8859_1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "994d064a008ec43bf79b486dcbe9a95ed1f40ed1",
      "candidate_info": {
        "commit_hash": "994d064a008ec43bf79b486dcbe9a95ed1f40ed1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/994d064a008ec43bf79b486dcbe9a95ed1f40ed1",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890617 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:                 throw new NoSuchElementException();",
          "331:             }",
          "332:             StringBuilder buf = new StringBuilder();",
          "334:             {",
          "338:                 int index = label.indexOf(0);",
          "",
          "[Removed Lines]",
          "333:             if (labelInfo.getPrefix() != null)",
          "335:                 String label = labelInfo.getPrefix();",
          "",
          "[Added Lines]",
          "333:             String label = labelInfo.getPrefix();",
          "334:             if (label != null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:                 }",
          "343:                 buf.append(label);",
          "344:             }",
          "346:             {",
          "349:             }",
          "350:             currentPage++;",
          "351:             return buf.toString();",
          "",
          "[Removed Lines]",
          "345:             if (labelInfo.getStyle() != null)",
          "347:                 buf.append(getNumber(labelInfo.getStart() + currentPage,",
          "348:                         labelInfo.getStyle()));",
          "",
          "[Added Lines]",
          "345:             String style = labelInfo.getStyle();",
          "346:             if (style != null)",
          "348:                 buf.append(getNumber(labelInfo.getStart() + currentPage, style));",
          "",
          "---------------"
        ]
      }
    }
  ]
}