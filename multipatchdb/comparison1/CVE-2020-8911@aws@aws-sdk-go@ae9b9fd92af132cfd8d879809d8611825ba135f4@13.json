{
  "cve_id": "CVE-2020-8911",
  "cve_desc": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
  "repo": "aws/aws-sdk-go",
  "patch_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
  "patch_info": {
    "commit_hash": "ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "repo": "aws/aws-sdk-go",
    "commit_url": "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
    "files": [
      "CHANGELOG.md",
      "CHANGELOG_PENDING.md",
      "aws/endpoints/defaults.go",
      "aws/version.go",
      "models/apis/glue/2017-03-31/api-2.json",
      "models/apis/glue/2017-03-31/docs-2.json",
      "models/apis/organizations/2016-11-28/api-2.json",
      "models/apis/organizations/2016-11-28/docs-2.json",
      "models/apis/s3/2006-03-01/docs-2.json",
      "models/apis/s3/2006-03-01/examples-1.json",
      "models/apis/sms/2016-10-24/api-2.json",
      "models/apis/sms/2016-10-24/docs-2.json",
      "models/endpoints/endpoints.json",
      "service/glue/api.go",
      "service/organizations/api.go",
      "service/s3/api.go",
      "service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go",
      "service/sms/api.go",
      "service/sms/doc.go",
      "service/sms/errors.go",
      "service/sms/smsiface/interface.go"
    ],
    "message": "Release v1.34.0 (2020-08-07) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API and documentation\n  * AWS Glue now adds support for Network connection type enabling you to access resources inside your VPC using Glue crawlers and Glue ETL jobs.\n* `service/organizations`: Updates service API and documentation\n  * Documentation updates for some new error reasons.\n* `service/s3`: Updates service documentation and examples\n  * Updates Amazon S3 API reference documentation.\n* `service/sms`: Updates service API and documentation\n  * In this release, AWS Server Migration Service (SMS) has added new features: 1. APIs to work with application and instance level validation 2. Import application catalog from AWS Application Discovery Service 3. For an application you can start on-demand replication\n\n### SDK Features\n* `service/s3/s3crypto`: Updates to the Amazon S3 Encryption Client - This change includes fixes for issues that were reported by Sophie Schmieg from the Google ISE team, and for issues that were discovered by AWS Cryptography.",
    "before_after_code_files": [
      "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
      "aws/version.go||aws/version.go",
      "service/glue/api.go||service/glue/api.go",
      "service/organizations/api.go||service/organizations/api.go",
      "service/s3/api.go||service/s3/api.go",
      "service/s3/examples_test.go||service/s3/examples_test.go",
      "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go",
      "service/sms/api.go||service/sms/api.go",
      "service/sms/doc.go||service/sms/doc.go",
      "service/sms/errors.go||service/sms/errors.go",
      "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go"
    ]
  },
  "patch_diff": {
    "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
      "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "2084:     Protocols: []string{\"http\", \"https\"},",
      "2085:    },",
      "2086:    Endpoints: endpoints{",
      "2087:     \"ap-east-1\":      endpoint{},",
      "2088:     \"ap-northeast-1\": endpoint{},",
      "2089:     \"ap-northeast-2\": endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2087:     \"af-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2093:     \"ca-central-1\":   endpoint{},",
      "2094:     \"eu-central-1\":   endpoint{},",
      "2095:     \"eu-north-1\":     endpoint{},",
      "2096:     \"eu-west-1\":      endpoint{},",
      "2097:     \"eu-west-2\":      endpoint{},",
      "2098:     \"eu-west-3\":      endpoint{},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2097:     \"eu-south-1\":     endpoint{},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3959:   \"neptune\": service{",
      "3961:    Endpoints: endpoints{",
      "3962:     \"ap-northeast-1\": endpoint{",
      "3963:      Hostname: \"rds.ap-northeast-1.amazonaws.com\",",
      "3964:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3964:     \"ap-east-1\": endpoint{",
      "3965:      Hostname: \"rds.ap-east-1.amazonaws.com\",",
      "3966:      CredentialScope: credentialScope{",
      "3967:       Region: \"ap-east-1\",",
      "3968:      },",
      "3969:     },",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "4031:       Region: \"me-south-1\",",
      "4032:      },",
      "4033:     },",
      "4034:     \"us-east-1\": endpoint{",
      "4035:      Hostname: \"rds.us-east-1.amazonaws.com\",",
      "4036:      CredentialScope: credentialScope{",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4042:     \"sa-east-1\": endpoint{",
      "4043:      Hostname: \"rds.sa-east-1.amazonaws.com\",",
      "4044:      CredentialScope: credentialScope{",
      "4045:       Region: \"sa-east-1\",",
      "4046:      },",
      "4047:     },",
      "",
      "---------------"
    ],
    "aws/version.go||aws/version.go": [
      "File: aws/version.go -> aws/version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: const SDKName = \"aws-sdk-go\"",
      "",
      "[Removed Lines]",
      "8: const SDKVersion = \"1.33.21\"",
      "",
      "[Added Lines]",
      "8: const SDKVersion = \"1.34.0\"",
      "",
      "---------------"
    ],
    "service/glue/api.go||service/glue/api.go": [
      "File: service/glue/api.go -> service/glue/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "31277: type S3Target struct {",
      "31278:  _ struct{} `type:\"structure\"`",
      "31282:  Exclusions []*string `type:\"list\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31285:  ConnectionName *string `type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31295:  return s.String()",
      "31296: }",
      "31299: func (s *S3Target) SetExclusions(v []*string) *S3Target {",
      "31300:  s.Exclusions = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31306: func (s *S3Target) SetConnectionName(v string) *S3Target {",
      "31307:  s.ConnectionName = &v",
      "31308:  return s",
      "31309: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37451:  ConnectionTypeKafka = \"KAFKA\"",
      "37452: )",
      "37454: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "37467:  ConnectionTypeNetwork = \"NETWORK\"",
      "",
      "---------------"
    ],
    "service/organizations/api.go||service/organizations/api.go": [
      "File: service/organizations/api.go -> service/organizations/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "22129:  CreateAccountFailureReasonGovcloudAccountAlreadyExists = \"GOVCLOUD_ACCOUNT_ALREADY_EXISTS\"",
      "22130: )",
      "22132: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22141:  CreateAccountFailureReasonMissingBusinessValidation = \"MISSING_BUSINESS_VALIDATION\"",
      "22144:  CreateAccountFailureReasonMissingPaymentInstrument = \"MISSING_PAYMENT_INSTRUMENT\"",
      "",
      "---------------"
    ],
    "service/s3/api.go||service/s3/api.go": [
      "File: service/s3/api.go -> service/s3/api.go"
    ],
    "service/s3/examples_test.go||service/s3/examples_test.go": [
      "File: service/s3/examples_test.go -> service/s3/examples_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "467:  fmt.Println(result)",
      "468: }",
      "474: func ExampleS3_DeleteObjectTagging_shared00() {",
      "475:  svc := s3.New(session.New())",
      "476:  input := &s3.DeleteObjectTaggingInput{",
      "480:  }",
      "482:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "477:   Bucket:    aws.String(\"examplebucket\"),",
      "478:   Key:       aws.String(\"HappyFace.jpg\"),",
      "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "[Added Lines]",
      "478:   Bucket: aws.String(\"examplebucket\"),",
      "479:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "497:  fmt.Println(result)",
      "498: }",
      "505: func ExampleS3_DeleteObjectTagging_shared01() {",
      "506:  svc := s3.New(session.New())",
      "507:  input := &s3.DeleteObjectTaggingInput{",
      "510:  }",
      "512:  result, err := svc.DeleteObjectTagging(input)",
      "",
      "[Removed Lines]",
      "508:   Bucket: aws.String(\"examplebucket\"),",
      "509:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "507:   Bucket:    aws.String(\"examplebucket\"),",
      "508:   Key:       aws.String(\"HappyFace.jpg\"),",
      "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1197:  fmt.Println(result)",
      "1198: }",
      "1204: func ExampleS3_ListMultipartUploads_shared00() {",
      "1205:  svc := s3.New(session.New())",
      "1206:  input := &s3.ListMultipartUploadsInput{",
      "1211:  }",
      "1213:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1207:   Bucket:         aws.String(\"examplebucket\"),",
      "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1209:   MaxUploads:     aws.Int64(2),",
      "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "[Added Lines]",
      "1206:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  fmt.Println(result)",
      "1229: }",
      "1234: func ExampleS3_ListMultipartUploads_shared01() {",
      "1235:  svc := s3.New(session.New())",
      "1236:  input := &s3.ListMultipartUploadsInput{",
      "1238:  }",
      "1240:  result, err := svc.ListMultipartUploads(input)",
      "",
      "[Removed Lines]",
      "1237:   Bucket: aws.String(\"examplebucket\"),",
      "",
      "[Added Lines]",
      "1234:   Bucket:         aws.String(\"examplebucket\"),",
      "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
      "1236:   MaxUploads:     aws.Int64(2),",
      "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1804:  fmt.Println(result)",
      "1805: }",
      "1812: func ExampleS3_PutObject_shared00() {",
      "1813:  svc := s3.New(session.New())",
      "1814:  input := &s3.PutObjectInput{",
      "1820:  }",
      "1822:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1815:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1816:   Bucket:               aws.String(\"examplebucket\"),",
      "1817:   Key:                  aws.String(\"exampleobject\"),",
      "1818:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1819:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1814:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1815:   Bucket: aws.String(\"examplebucket\"),",
      "1816:   Key:    aws.String(\"exampleobject\"),",
      "1817:   Metadata: map[string]*string{",
      "1818:    \"metadata1\": aws.String(\"value1\"),",
      "1819:    \"metadata2\": aws.String(\"value2\"),",
      "1820:   },",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1837:  fmt.Println(result)",
      "1838: }",
      "1844: func ExampleS3_PutObject_shared01() {",
      "1845:  svc := s3.New(session.New())",
      "1846:  input := &s3.PutObjectInput{",
      "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1848:   Bucket: aws.String(\"examplebucket\"),",
      "1850:  }",
      "1852:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1849:   Key:    aws.String(\"objectkey\"),",
      "",
      "[Added Lines]",
      "1849:   ACL:    aws.String(\"authenticated-read\"),",
      "1852:   Key:    aws.String(\"exampleobject\"),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1867:  fmt.Println(result)",
      "1868: }",
      "1874: func ExampleS3_PutObject_shared02() {",
      "1875:  svc := s3.New(session.New())",
      "1876:  input := &s3.PutObjectInput{",
      "1881:  }",
      "1883:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1877:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1878:   Bucket:  aws.String(\"examplebucket\"),",
      "1879:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1880:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "[Added Lines]",
      "1880:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1881:   Bucket: aws.String(\"examplebucket\"),",
      "1882:   Key:    aws.String(\"objectkey\"),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1898:  fmt.Println(result)",
      "1899: }",
      "1905: func ExampleS3_PutObject_shared03() {",
      "1906:  svc := s3.New(session.New())",
      "1907:  input := &s3.PutObjectInput{",
      "1913:  }",
      "1915:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1908:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1909:   Bucket:               aws.String(\"examplebucket\"),",
      "1910:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "1911:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1912:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "[Added Lines]",
      "1911:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "1912:   Bucket: aws.String(\"examplebucket\"),",
      "1913:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1930:  fmt.Println(result)",
      "1931: }",
      "1937: func ExampleS3_PutObject_shared04() {",
      "1938:  svc := s3.New(session.New())",
      "1939:  input := &s3.PutObjectInput{",
      "1947:  }",
      "1949:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1941:   Bucket: aws.String(\"examplebucket\"),",
      "1942:   Key:    aws.String(\"exampleobject\"),",
      "1943:   Metadata: map[string]*string{",
      "1944:    \"metadata1\": aws.String(\"value1\"),",
      "1945:    \"metadata2\": aws.String(\"value2\"),",
      "1946:   },",
      "",
      "[Added Lines]",
      "1941:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
      "1942:   Bucket:  aws.String(\"examplebucket\"),",
      "1943:   Key:     aws.String(\"HappyFace.jpg\"),",
      "1944:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1964:  fmt.Println(result)",
      "1965: }",
      "1972: func ExampleS3_PutObject_shared05() {",
      "1973:  svc := s3.New(session.New())",
      "1974:  input := &s3.PutObjectInput{",
      "1979:  }",
      "1981:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "1975:   ACL:    aws.String(\"authenticated-read\"),",
      "1976:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1977:   Bucket: aws.String(\"examplebucket\"),",
      "1978:   Key:    aws.String(\"exampleobject\"),",
      "",
      "[Added Lines]",
      "1973:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
      "1974:   Bucket:               aws.String(\"examplebucket\"),",
      "1975:   Key:                  aws.String(\"exampleobject\"),",
      "1976:   ServerSideEncryption: aws.String(\"AES256\"),",
      "1977:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1996:  fmt.Println(result)",
      "1997: }",
      "2004: func ExampleS3_PutObject_shared06() {",
      "2005:  svc := s3.New(session.New())",
      "2006:  input := &s3.PutObjectInput{",
      "2010:  }",
      "2012:  result, err := svc.PutObject(input)",
      "",
      "[Removed Lines]",
      "2007:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2008:   Bucket: aws.String(\"examplebucket\"),",
      "2009:   Key:    aws.String(\"HappyFace.jpg\"),",
      "",
      "[Added Lines]",
      "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
      "2006:   Bucket:               aws.String(\"examplebucket\"),",
      "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
      "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
      "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2171:  fmt.Println(result)",
      "2172: }",
      "2178: func ExampleS3_UploadPartCopy_shared00() {",
      "2179:  svc := s3.New(session.New())",
      "2180:  input := &s3.UploadPartCopyInput{",
      "2186:  }",
      "2188:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2181:   Bucket:     aws.String(\"examplebucket\"),",
      "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   Key:        aws.String(\"examplelargeobject\"),",
      "2184:   PartNumber: aws.Int64(1),",
      "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2181:   Bucket:          aws.String(\"examplebucket\"),",
      "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2184:   Key:             aws.String(\"examplelargeobject\"),",
      "2185:   PartNumber:      aws.Int64(2),",
      "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2203:  fmt.Println(result)",
      "2204: }",
      "2210: func ExampleS3_UploadPartCopy_shared01() {",
      "2211:  svc := s3.New(session.New())",
      "2212:  input := &s3.UploadPartCopyInput{",
      "2219:  }",
      "2221:  result, err := svc.UploadPartCopy(input)",
      "",
      "[Removed Lines]",
      "2213:   Bucket:          aws.String(\"examplebucket\"),",
      "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
      "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
      "2216:   Key:             aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber:      aws.Int64(2),",
      "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "[Added Lines]",
      "2214:   Bucket:     aws.String(\"examplebucket\"),",
      "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
      "2216:   Key:        aws.String(\"examplelargeobject\"),",
      "2217:   PartNumber: aws.Int64(1),",
      "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
      "",
      "---------------"
    ],
    "service/s3/s3manager/upload_input.go||service/s3/s3manager/upload_input.go": [
      "File: service/s3/s3manager/upload_input.go -> service/s3/s3manager/upload_input.go"
    ],
    "service/sms/api.go||service/sms/api.go": [
      "File: service/sms/api.go -> service/sms/api.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:  return out, req.Send()",
      "494: }",
      "496: const opDeleteReplicationJob = \"DeleteReplicationJob\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496: const opDeleteAppValidationConfiguration = \"DeleteAppValidationConfiguration\"",
      "522: func (c *SMS) DeleteAppValidationConfigurationRequest(input *DeleteAppValidationConfigurationInput) (req *request.Request, output *DeleteAppValidationConfigurationOutput) {",
      "523:  op := &request.Operation{",
      "524:   Name:       opDeleteAppValidationConfiguration,",
      "525:   HTTPMethod: \"POST\",",
      "526:   HTTPPath:   \"/\",",
      "527:  }",
      "529:  if input == nil {",
      "530:   input = &DeleteAppValidationConfigurationInput{}",
      "531:  }",
      "533:  output = &DeleteAppValidationConfigurationOutput{}",
      "534:  req = c.newRequest(op, input, output)",
      "535:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "536:  return",
      "537: }",
      "568: func (c *SMS) DeleteAppValidationConfiguration(input *DeleteAppValidationConfigurationInput) (*DeleteAppValidationConfigurationOutput, error) {",
      "569:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "570:  return out, req.Send()",
      "571: }",
      "582: func (c *SMS) DeleteAppValidationConfigurationWithContext(ctx aws.Context, input *DeleteAppValidationConfigurationInput, opts ...request.Option) (*DeleteAppValidationConfigurationOutput, error) {",
      "583:  req, out := c.DeleteAppValidationConfigurationRequest(input)",
      "584:  req.SetContext(ctx)",
      "585:  req.ApplyOptions(opts...)",
      "586:  return out, req.Send()",
      "587: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1235:  return out, req.Send()",
      "1236: }",
      "1238: const opGetConnectors = \"GetConnectors\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1333: const opGetAppValidationConfiguration = \"GetAppValidationConfiguration\"",
      "1359: func (c *SMS) GetAppValidationConfigurationRequest(input *GetAppValidationConfigurationInput) (req *request.Request, output *GetAppValidationConfigurationOutput) {",
      "1360:  op := &request.Operation{",
      "1361:   Name:       opGetAppValidationConfiguration,",
      "1362:   HTTPMethod: \"POST\",",
      "1363:   HTTPPath:   \"/\",",
      "1364:  }",
      "1366:  if input == nil {",
      "1367:   input = &GetAppValidationConfigurationInput{}",
      "1368:  }",
      "1370:  output = &GetAppValidationConfigurationOutput{}",
      "1371:  req = c.newRequest(op, input, output)",
      "1372:  return",
      "1373: }",
      "1404: func (c *SMS) GetAppValidationConfiguration(input *GetAppValidationConfigurationInput) (*GetAppValidationConfigurationOutput, error) {",
      "1405:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1406:  return out, req.Send()",
      "1407: }",
      "1418: func (c *SMS) GetAppValidationConfigurationWithContext(ctx aws.Context, input *GetAppValidationConfigurationInput, opts ...request.Option) (*GetAppValidationConfigurationOutput, error) {",
      "1419:  req, out := c.GetAppValidationConfigurationRequest(input)",
      "1420:  req.SetContext(ctx)",
      "1421:  req.ApplyOptions(opts...)",
      "1422:  return out, req.Send()",
      "1423: }",
      "1425: const opGetAppValidationOutput = \"GetAppValidationOutput\"",
      "1451: func (c *SMS) GetAppValidationOutputRequest(input *GetAppValidationOutputInput) (req *request.Request, output *GetAppValidationOutputOutput) {",
      "1452:  op := &request.Operation{",
      "1453:   Name:       opGetAppValidationOutput,",
      "1454:   HTTPMethod: \"POST\",",
      "1455:   HTTPPath:   \"/\",",
      "1456:  }",
      "1458:  if input == nil {",
      "1459:   input = &GetAppValidationOutputInput{}",
      "1460:  }",
      "1462:  output = &GetAppValidationOutputOutput{}",
      "1463:  req = c.newRequest(op, input, output)",
      "1464:  return",
      "1465: }",
      "1496: func (c *SMS) GetAppValidationOutput(input *GetAppValidationOutputInput) (*GetAppValidationOutputOutput, error) {",
      "1497:  req, out := c.GetAppValidationOutputRequest(input)",
      "1498:  return out, req.Send()",
      "1499: }",
      "1510: func (c *SMS) GetAppValidationOutputWithContext(ctx aws.Context, input *GetAppValidationOutputInput, opts ...request.Option) (*GetAppValidationOutputOutput, error) {",
      "1511:  req, out := c.GetAppValidationOutputRequest(input)",
      "1512:  req.SetContext(ctx)",
      "1513:  req.ApplyOptions(opts...)",
      "1514:  return out, req.Send()",
      "1515: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1801:  return p.Err()",
      "1802: }",
      "1831:  op := &request.Operation{",
      "1833:   HTTPMethod: \"POST\",",
      "1834:   HTTPPath:   \"/\",",
      "1835:  }",
      "1837:  if input == nil {",
      "1839:  }",
      "1842:  req = c.newRequest(op, input, output)",
      "1843:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "1844:  return",
      "1845: }",
      "1882:  return out, req.Send()",
      "1883: }",
      "",
      "[Removed Lines]",
      "1804: const opImportServerCatalog = \"ImportServerCatalog\"",
      "1830: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "1832:   Name:       opImportServerCatalog,",
      "1838:   input = &ImportServerCatalogInput{}",
      "1841:  output = &ImportServerCatalogOutput{}",
      "1880: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "1881:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "[Added Lines]",
      "2092: const opImportAppCatalog = \"ImportAppCatalog\"",
      "2118: func (c *SMS) ImportAppCatalogRequest(input *ImportAppCatalogInput) (req *request.Request, output *ImportAppCatalogOutput) {",
      "2120:   Name:       opImportAppCatalog,",
      "2126:   input = &ImportAppCatalogInput{}",
      "2129:  output = &ImportAppCatalogOutput{}",
      "2164: func (c *SMS) ImportAppCatalog(input *ImportAppCatalogInput) (*ImportAppCatalogOutput, error) {",
      "2165:  req, out := c.ImportAppCatalogRequest(input)",
      "2166:  return out, req.Send()",
      "2167: }",
      "2178: func (c *SMS) ImportAppCatalogWithContext(ctx aws.Context, input *ImportAppCatalogInput, opts ...request.Option) (*ImportAppCatalogOutput, error) {",
      "2179:  req, out := c.ImportAppCatalogRequest(input)",
      "2180:  req.SetContext(ctx)",
      "2181:  req.ApplyOptions(opts...)",
      "2182:  return out, req.Send()",
      "2183: }",
      "2185: const opImportServerCatalog = \"ImportServerCatalog\"",
      "2211: func (c *SMS) ImportServerCatalogRequest(input *ImportServerCatalogInput) (req *request.Request, output *ImportServerCatalogOutput) {",
      "2212:  op := &request.Operation{",
      "2213:   Name:       opImportServerCatalog,",
      "2214:   HTTPMethod: \"POST\",",
      "2215:   HTTPPath:   \"/\",",
      "2216:  }",
      "2218:  if input == nil {",
      "2219:   input = &ImportServerCatalogInput{}",
      "2220:  }",
      "2222:  output = &ImportServerCatalogOutput{}",
      "2223:  req = c.newRequest(op, input, output)",
      "2224:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2225:  return",
      "2226: }",
      "2261: func (c *SMS) ImportServerCatalog(input *ImportServerCatalogInput) (*ImportServerCatalogOutput, error) {",
      "2262:  req, out := c.ImportServerCatalogRequest(input)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2083:  return out, req.Send()",
      "2084: }",
      "2086: const opPutAppLaunchConfiguration = \"PutAppLaunchConfiguration\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2467: const opNotifyAppValidationOutput = \"NotifyAppValidationOutput\"",
      "2493: func (c *SMS) NotifyAppValidationOutputRequest(input *NotifyAppValidationOutputInput) (req *request.Request, output *NotifyAppValidationOutputOutput) {",
      "2494:  op := &request.Operation{",
      "2495:   Name:       opNotifyAppValidationOutput,",
      "2496:   HTTPMethod: \"POST\",",
      "2497:   HTTPPath:   \"/\",",
      "2498:  }",
      "2500:  if input == nil {",
      "2501:   input = &NotifyAppValidationOutputInput{}",
      "2502:  }",
      "2504:  output = &NotifyAppValidationOutputOutput{}",
      "2505:  req = c.newRequest(op, input, output)",
      "2506:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2507:  return",
      "2508: }",
      "2539: func (c *SMS) NotifyAppValidationOutput(input *NotifyAppValidationOutputInput) (*NotifyAppValidationOutputOutput, error) {",
      "2540:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2541:  return out, req.Send()",
      "2542: }",
      "2553: func (c *SMS) NotifyAppValidationOutputWithContext(ctx aws.Context, input *NotifyAppValidationOutputInput, opts ...request.Option) (*NotifyAppValidationOutputOutput, error) {",
      "2554:  req, out := c.NotifyAppValidationOutputRequest(input)",
      "2555:  req.SetContext(ctx)",
      "2556:  req.ApplyOptions(opts...)",
      "2557:  return out, req.Send()",
      "2558: }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2269:  return out, req.Send()",
      "2270: }",
      "2272: const opStartAppReplication = \"StartAppReplication\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2746: const opPutAppValidationConfiguration = \"PutAppValidationConfiguration\"",
      "2772: func (c *SMS) PutAppValidationConfigurationRequest(input *PutAppValidationConfigurationInput) (req *request.Request, output *PutAppValidationConfigurationOutput) {",
      "2773:  op := &request.Operation{",
      "2774:   Name:       opPutAppValidationConfiguration,",
      "2775:   HTTPMethod: \"POST\",",
      "2776:   HTTPPath:   \"/\",",
      "2777:  }",
      "2779:  if input == nil {",
      "2780:   input = &PutAppValidationConfigurationInput{}",
      "2781:  }",
      "2783:  output = &PutAppValidationConfigurationOutput{}",
      "2784:  req = c.newRequest(op, input, output)",
      "2785:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2786:  return",
      "2787: }",
      "2818: func (c *SMS) PutAppValidationConfiguration(input *PutAppValidationConfigurationInput) (*PutAppValidationConfigurationOutput, error) {",
      "2819:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2820:  return out, req.Send()",
      "2821: }",
      "2832: func (c *SMS) PutAppValidationConfigurationWithContext(ctx aws.Context, input *PutAppValidationConfigurationInput, opts ...request.Option) (*PutAppValidationConfigurationOutput, error) {",
      "2833:  req, out := c.PutAppValidationConfigurationRequest(input)",
      "2834:  req.SetContext(ctx)",
      "2835:  req.ApplyOptions(opts...)",
      "2836:  return out, req.Send()",
      "2837: }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2362:  return out, req.Send()",
      "2363: }",
      "2365: const opStartOnDemandReplicationRun = \"StartOnDemandReplicationRun\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2933: const opStartOnDemandAppReplication = \"StartOnDemandAppReplication\"",
      "2959: func (c *SMS) StartOnDemandAppReplicationRequest(input *StartOnDemandAppReplicationInput) (req *request.Request, output *StartOnDemandAppReplicationOutput) {",
      "2960:  op := &request.Operation{",
      "2961:   Name:       opStartOnDemandAppReplication,",
      "2962:   HTTPMethod: \"POST\",",
      "2963:   HTTPPath:   \"/\",",
      "2964:  }",
      "2966:  if input == nil {",
      "2967:   input = &StartOnDemandAppReplicationInput{}",
      "2968:  }",
      "2970:  output = &StartOnDemandAppReplicationOutput{}",
      "2971:  req = c.newRequest(op, input, output)",
      "2972:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
      "2973:  return",
      "2974: }",
      "3005: func (c *SMS) StartOnDemandAppReplication(input *StartOnDemandAppReplicationInput) (*StartOnDemandAppReplicationOutput, error) {",
      "3006:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3007:  return out, req.Send()",
      "3008: }",
      "3019: func (c *SMS) StartOnDemandAppReplicationWithContext(ctx aws.Context, input *StartOnDemandAppReplicationInput, opts ...request.Option) (*StartOnDemandAppReplicationOutput, error) {",
      "3020:  req, out := c.StartOnDemandAppReplicationRequest(input)",
      "3021:  req.SetContext(ctx)",
      "3022:  req.ApplyOptions(opts...)",
      "3023:  return out, req.Send()",
      "3024: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2844: type AppSummary struct {",
      "2845:  _ struct{} `type:\"structure\"`",
      "2848:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "2851:  CreationTime *time.Time `locationName:\"creationTime\" type:\"timestamp\"`",
      "2854:  Description *string `locationName:\"description\" type:\"string\"`",
      "2857:  LastModified *time.Time `locationName:\"lastModified\" type:\"timestamp\"`",
      "2860:  LatestReplicationTime *time.Time `locationName:\"latestReplicationTime\" type:\"timestamp\"`",
      "2863:  LaunchDetails *LaunchDetails `locationName:\"launchDetails\" type:\"structure\"`",
      "2866:  LaunchStatus *string `locationName:\"launchStatus\" type:\"string\" enum:\"AppLaunchStatus\"`",
      "2869:  LaunchStatusMessage *string `locationName:\"launchStatusMessage\" type:\"string\"`",
      "2872:  Name *string `locationName:\"name\" type:\"string\"`",
      "2875:  ReplicationStatus *string `locationName:\"replicationStatus\" type:\"string\" enum:\"AppReplicationStatus\"`",
      "2878:  ReplicationStatusMessage *string `locationName:\"replicationStatusMessage\" type:\"string\"`",
      "2881:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3523:  ImportedAppId *string `locationName:\"importedAppId\" type:\"string\"`",
      "3532:  LaunchConfigurationStatus *string `locationName:\"launchConfigurationStatus\" type:\"string\" enum:\"AppLaunchConfigurationStatus\"`",
      "3547:  ReplicationConfigurationStatus *string `locationName:\"replicationConfigurationStatus\" type:\"string\" enum:\"AppReplicationConfigurationStatus\"`",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2921:  return s",
      "2922: }",
      "2925: func (s *AppSummary) SetLastModified(v time.Time) *AppSummary {",
      "2926:  s.LastModified = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3600: func (s *AppSummary) SetImportedAppId(v string) *AppSummary {",
      "3601:  s.ImportedAppId = &v",
      "3602:  return s",
      "3603: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2933:  return s",
      "2934: }",
      "2937: func (s *AppSummary) SetLaunchDetails(v *LaunchDetails) *AppSummary {",
      "2938:  s.LaunchDetails = v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3618: func (s *AppSummary) SetLaunchConfigurationStatus(v string) *AppSummary {",
      "3619:  s.LaunchConfigurationStatus = &v",
      "3620:  return s",
      "3621: }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2957:  return s",
      "2958: }",
      "2961: func (s *AppSummary) SetReplicationStatus(v string) *AppSummary {",
      "2962:  s.ReplicationStatus = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3648: func (s *AppSummary) SetReplicationConfigurationStatus(v string) *AppSummary {",
      "3649:  s.ReplicationConfigurationStatus = &v",
      "3650:  return s",
      "3651: }",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2999:  return s",
      "3000: }",
      "3003: type Connector struct {",
      "3004:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3696: type AppValidationConfiguration struct {",
      "3697:  _ struct{} `type:\"structure\"`",
      "3700:  AppValidationStrategy *string `locationName:\"appValidationStrategy\" type:\"string\" enum:\"AppValidationStrategy\"`",
      "3703:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "3706:  SsmValidationParameters *SSMValidationParameters `locationName:\"ssmValidationParameters\" type:\"structure\"`",
      "3709:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "3710: }",
      "3713: func (s AppValidationConfiguration) String() string {",
      "3714:  return awsutil.Prettify(s)",
      "3715: }",
      "3718: func (s AppValidationConfiguration) GoString() string {",
      "3719:  return s.String()",
      "3720: }",
      "3723: func (s *AppValidationConfiguration) Validate() error {",
      "3724:  invalidParams := request.ErrInvalidParams{Context: \"AppValidationConfiguration\"}",
      "3725:  if s.Name != nil && len(*s.Name) < 1 {",
      "3726:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "3727:  }",
      "3728:  if s.SsmValidationParameters != nil {",
      "3729:   if err := s.SsmValidationParameters.Validate(); err != nil {",
      "3730:    invalidParams.AddNested(\"SsmValidationParameters\", err.(request.ErrInvalidParams))",
      "3731:   }",
      "3732:  }",
      "3734:  if invalidParams.Len() > 0 {",
      "3735:   return invalidParams",
      "3736:  }",
      "3737:  return nil",
      "3738: }",
      "3741: func (s *AppValidationConfiguration) SetAppValidationStrategy(v string) *AppValidationConfiguration {",
      "3742:  s.AppValidationStrategy = &v",
      "3743:  return s",
      "3744: }",
      "3747: func (s *AppValidationConfiguration) SetName(v string) *AppValidationConfiguration {",
      "3748:  s.Name = &v",
      "3749:  return s",
      "3750: }",
      "3753: func (s *AppValidationConfiguration) SetSsmValidationParameters(v *SSMValidationParameters) *AppValidationConfiguration {",
      "3754:  s.SsmValidationParameters = v",
      "3755:  return s",
      "3756: }",
      "3759: func (s *AppValidationConfiguration) SetValidationId(v string) *AppValidationConfiguration {",
      "3760:  s.ValidationId = &v",
      "3761:  return s",
      "3762: }",
      "3765: type AppValidationOutput struct {",
      "3766:  _ struct{} `type:\"structure\"`",
      "3769:  SsmOutput *SSMOutput `locationName:\"ssmOutput\" type:\"structure\"`",
      "3770: }",
      "3773: func (s AppValidationOutput) String() string {",
      "3774:  return awsutil.Prettify(s)",
      "3775: }",
      "3778: func (s AppValidationOutput) GoString() string {",
      "3779:  return s.String()",
      "3780: }",
      "3783: func (s *AppValidationOutput) SetSsmOutput(v *SSMOutput) *AppValidationOutput {",
      "3784:  s.SsmOutput = v",
      "3785:  return s",
      "3786: }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3481:  return awsutil.Prettify(s)",
      "3482: }",
      "3487: }",
      "3491:  s.AppId = &v",
      "3492:  return s",
      "3493: }",
      "3496:  _ struct{} `type:\"structure\"`",
      "3497: }",
      "3501:  return awsutil.Prettify(s)",
      "3502: }",
      "3506:  return s.String()",
      "3507: }",
      "3509: type DeleteReplicationJobInput struct {",
      "3510:  _ struct{} `type:\"structure\"`",
      "3515:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "3485: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "3486:  return s.String()",
      "3490: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "3495: type DeleteAppReplicationConfigurationOutput struct {",
      "3500: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "3505: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "",
      "[Added Lines]",
      "4272: func (s DeleteAppReplicationConfigurationInput) GoString() string {",
      "4273:  return s.String()",
      "4274: }",
      "4277: func (s *DeleteAppReplicationConfigurationInput) SetAppId(v string) *DeleteAppReplicationConfigurationInput {",
      "4278:  s.AppId = &v",
      "4279:  return s",
      "4280: }",
      "4282: type DeleteAppReplicationConfigurationOutput struct {",
      "4283:  _ struct{} `type:\"structure\"`",
      "4284: }",
      "4287: func (s DeleteAppReplicationConfigurationOutput) String() string {",
      "4288:  return awsutil.Prettify(s)",
      "4289: }",
      "4292: func (s DeleteAppReplicationConfigurationOutput) GoString() string {",
      "4293:  return s.String()",
      "4294: }",
      "4296: type DeleteAppValidationConfigurationInput struct {",
      "4297:  _ struct{} `type:\"structure\"`",
      "4302:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4303: }",
      "4306: func (s DeleteAppValidationConfigurationInput) String() string {",
      "4307:  return awsutil.Prettify(s)",
      "4308: }",
      "4311: func (s DeleteAppValidationConfigurationInput) GoString() string {",
      "4312:  return s.String()",
      "4313: }",
      "4316: func (s *DeleteAppValidationConfigurationInput) Validate() error {",
      "4317:  invalidParams := request.ErrInvalidParams{Context: \"DeleteAppValidationConfigurationInput\"}",
      "4318:  if s.AppId == nil {",
      "4319:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4320:  }",
      "4322:  if invalidParams.Len() > 0 {",
      "4323:   return invalidParams",
      "4324:  }",
      "4325:  return nil",
      "4329: func (s *DeleteAppValidationConfigurationInput) SetAppId(v string) *DeleteAppValidationConfigurationInput {",
      "4334: type DeleteAppValidationConfigurationOutput struct {",
      "4339: func (s DeleteAppValidationConfigurationOutput) String() string {",
      "4344: func (s DeleteAppValidationConfigurationOutput) GoString() string {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3638:  return s.String()",
      "3639: }",
      "3641: type GenerateChangeSetInput struct {",
      "3642:  _ struct{} `type:\"structure\"`",
      "3645:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3648:  ChangesetFormat *string `locationName:\"changesetFormat\" type:\"string\" enum:\"OutputFormat\"`",
      "3649: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4482: type DryRunOperationException struct {",
      "4483:  _            struct{}                  `type:\"structure\"`",
      "4484:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4486:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4487: }",
      "4490: func (s DryRunOperationException) String() string {",
      "4491:  return awsutil.Prettify(s)",
      "4492: }",
      "4495: func (s DryRunOperationException) GoString() string {",
      "4496:  return s.String()",
      "4497: }",
      "4499: func newErrorDryRunOperationException(v protocol.ResponseMetadata) error {",
      "4500:  return &DryRunOperationException{",
      "4501:   RespMetadata: v,",
      "4502:  }",
      "4503: }",
      "4506: func (s *DryRunOperationException) Code() string {",
      "4507:  return \"DryRunOperationException\"",
      "4508: }",
      "4511: func (s *DryRunOperationException) Message() string {",
      "4512:  if s.Message_ != nil {",
      "4513:   return *s.Message_",
      "4514:  }",
      "4515:  return \"\"",
      "4516: }",
      "4519: func (s *DryRunOperationException) OrigErr() error {",
      "4520:  return nil",
      "4521: }",
      "4523: func (s *DryRunOperationException) Error() string {",
      "4524:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4525: }",
      "4528: func (s *DryRunOperationException) StatusCode() int {",
      "4529:  return s.RespMetadata.StatusCode",
      "4530: }",
      "4533: func (s *DryRunOperationException) RequestID() string {",
      "4534:  return s.RespMetadata.RequestID",
      "4535: }",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3797: type GetAppLaunchConfigurationOutput struct {",
      "3798:  _ struct{} `type:\"structure\"`",
      "3801:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "3805:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "3808:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "3809: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4701:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "3824:  return s",
      "3825: }",
      "3828: func (s *GetAppLaunchConfigurationOutput) SetRoleName(v string) *GetAppLaunchConfigurationOutput {",
      "3829:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4728: func (s *GetAppLaunchConfigurationOutput) SetAutoLaunch(v bool) *GetAppLaunchConfigurationOutput {",
      "4729:  s.AutoLaunch = &v",
      "4730:  return s",
      "4731: }",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3923:  return s",
      "3924: }",
      "3926: type GetConnectorsInput struct {",
      "3927:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4832: type GetAppValidationConfigurationInput struct {",
      "4833:  _ struct{} `type:\"structure\"`",
      "4838:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4839: }",
      "4842: func (s GetAppValidationConfigurationInput) String() string {",
      "4843:  return awsutil.Prettify(s)",
      "4844: }",
      "4847: func (s GetAppValidationConfigurationInput) GoString() string {",
      "4848:  return s.String()",
      "4849: }",
      "4852: func (s *GetAppValidationConfigurationInput) Validate() error {",
      "4853:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationConfigurationInput\"}",
      "4854:  if s.AppId == nil {",
      "4855:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4856:  }",
      "4858:  if invalidParams.Len() > 0 {",
      "4859:   return invalidParams",
      "4860:  }",
      "4861:  return nil",
      "4862: }",
      "4865: func (s *GetAppValidationConfigurationInput) SetAppId(v string) *GetAppValidationConfigurationInput {",
      "4866:  s.AppId = &v",
      "4867:  return s",
      "4868: }",
      "4870: type GetAppValidationConfigurationOutput struct {",
      "4871:  _ struct{} `type:\"structure\"`",
      "4874:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "4877:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "4878: }",
      "4881: func (s GetAppValidationConfigurationOutput) String() string {",
      "4882:  return awsutil.Prettify(s)",
      "4883: }",
      "4886: func (s GetAppValidationConfigurationOutput) GoString() string {",
      "4887:  return s.String()",
      "4888: }",
      "4891: func (s *GetAppValidationConfigurationOutput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4892:  s.AppValidationConfigurations = v",
      "4893:  return s",
      "4894: }",
      "4897: func (s *GetAppValidationConfigurationOutput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *GetAppValidationConfigurationOutput {",
      "4898:  s.ServerGroupValidationConfigurations = v",
      "4899:  return s",
      "4900: }",
      "4902: type GetAppValidationOutputInput struct {",
      "4903:  _ struct{} `type:\"structure\"`",
      "4908:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "4909: }",
      "4912: func (s GetAppValidationOutputInput) String() string {",
      "4913:  return awsutil.Prettify(s)",
      "4914: }",
      "4917: func (s GetAppValidationOutputInput) GoString() string {",
      "4918:  return s.String()",
      "4919: }",
      "4922: func (s *GetAppValidationOutputInput) Validate() error {",
      "4923:  invalidParams := request.ErrInvalidParams{Context: \"GetAppValidationOutputInput\"}",
      "4924:  if s.AppId == nil {",
      "4925:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "4926:  }",
      "4928:  if invalidParams.Len() > 0 {",
      "4929:   return invalidParams",
      "4930:  }",
      "4931:  return nil",
      "4932: }",
      "4935: func (s *GetAppValidationOutputInput) SetAppId(v string) *GetAppValidationOutputInput {",
      "4936:  s.AppId = &v",
      "4937:  return s",
      "4938: }",
      "4940: type GetAppValidationOutputOutput struct {",
      "4941:  _ struct{} `type:\"structure\"`",
      "4944:  ValidationOutputList []*ValidationOutput `locationName:\"validationOutputList\" type:\"list\"`",
      "4945: }",
      "4948: func (s GetAppValidationOutputOutput) String() string {",
      "4949:  return awsutil.Prettify(s)",
      "4950: }",
      "4953: func (s GetAppValidationOutputOutput) GoString() string {",
      "4954:  return s.String()",
      "4955: }",
      "4958: func (s *GetAppValidationOutputOutput) SetValidationOutputList(v []*ValidationOutput) *GetAppValidationOutputOutput {",
      "4959:  s.ValidationOutputList = v",
      "4960:  return s",
      "4961: }",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4260:  return s",
      "4261: }",
      "4263: type ImportServerCatalogInput struct {",
      "4264:  _ struct{} `type:\"structure\"`",
      "4265: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5300: type ImportAppCatalogInput struct {",
      "5301:  _ struct{} `type:\"structure\"`",
      "5307:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "5308: }",
      "5311: func (s ImportAppCatalogInput) String() string {",
      "5312:  return awsutil.Prettify(s)",
      "5313: }",
      "5316: func (s ImportAppCatalogInput) GoString() string {",
      "5317:  return s.String()",
      "5318: }",
      "5321: func (s *ImportAppCatalogInput) SetRoleName(v string) *ImportAppCatalogInput {",
      "5322:  s.RoleName = &v",
      "5323:  return s",
      "5324: }",
      "5326: type ImportAppCatalogOutput struct {",
      "5327:  _ struct{} `type:\"structure\"`",
      "5328: }",
      "5331: func (s ImportAppCatalogOutput) String() string {",
      "5332:  return awsutil.Prettify(s)",
      "5333: }",
      "5336: func (s ImportAppCatalogOutput) GoString() string {",
      "5337:  return s.String()",
      "5338: }",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4615:  _            struct{}                  `type:\"structure\"`",
      "4616:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
      "4619: }",
      "4623:  return awsutil.Prettify(s)",
      "4624: }",
      "4628:  return s.String()",
      "4629: }",
      "4634:  }",
      "4640: }",
      "4648: }",
      "4653: }",
      "4657: }",
      "4662: }",
      "4667: }",
      "",
      "[Removed Lines]",
      "4618:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "4622: func (s NoConnectorsAvailableException) String() string {",
      "4627: func (s NoConnectorsAvailableException) GoString() string {",
      "4631: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "4632:  return &NoConnectorsAvailableException{",
      "4633:   RespMetadata: v,",
      "4635: }",
      "4638: func (s *NoConnectorsAvailableException) Code() string {",
      "4639:  return \"NoConnectorsAvailableException\"",
      "4643: func (s *NoConnectorsAvailableException) Message() string {",
      "4644:  if s.Message_ != nil {",
      "4645:   return *s.Message_",
      "4646:  }",
      "4647:  return \"\"",
      "4651: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "4652:  return nil",
      "4655: func (s *NoConnectorsAvailableException) Error() string {",
      "4656:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "4660: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "4661:  return s.RespMetadata.StatusCode",
      "4665: func (s *NoConnectorsAvailableException) RequestID() string {",
      "4666:  return s.RespMetadata.RequestID",
      "",
      "[Added Lines]",
      "5696:  Message_ *string `locationName:\"message\" type:\"string\"`",
      "5697: }",
      "5700: func (s NoConnectorsAvailableException) String() string {",
      "5701:  return awsutil.Prettify(s)",
      "5702: }",
      "5705: func (s NoConnectorsAvailableException) GoString() string {",
      "5706:  return s.String()",
      "5707: }",
      "5709: func newErrorNoConnectorsAvailableException(v protocol.ResponseMetadata) error {",
      "5710:  return &NoConnectorsAvailableException{",
      "5711:   RespMetadata: v,",
      "5712:  }",
      "5713: }",
      "5716: func (s *NoConnectorsAvailableException) Code() string {",
      "5717:  return \"NoConnectorsAvailableException\"",
      "5718: }",
      "5721: func (s *NoConnectorsAvailableException) Message() string {",
      "5722:  if s.Message_ != nil {",
      "5723:   return *s.Message_",
      "5724:  }",
      "5725:  return \"\"",
      "5726: }",
      "5729: func (s *NoConnectorsAvailableException) OrigErr() error {",
      "5730:  return nil",
      "5731: }",
      "5733: func (s *NoConnectorsAvailableException) Error() string {",
      "5734:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
      "5735: }",
      "5738: func (s *NoConnectorsAvailableException) StatusCode() int {",
      "5739:  return s.RespMetadata.StatusCode",
      "5740: }",
      "5743: func (s *NoConnectorsAvailableException) RequestID() string {",
      "5744:  return s.RespMetadata.RequestID",
      "5745: }",
      "5748: type NotificationContext struct {",
      "5749:  _ struct{} `type:\"structure\"`",
      "5752:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "5755:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "5758:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "5759: }",
      "5762: func (s NotificationContext) String() string {",
      "5763:  return awsutil.Prettify(s)",
      "5764: }",
      "5767: func (s NotificationContext) GoString() string {",
      "5768:  return s.String()",
      "5769: }",
      "5772: func (s *NotificationContext) SetStatus(v string) *NotificationContext {",
      "5773:  s.Status = &v",
      "5774:  return s",
      "5775: }",
      "5778: func (s *NotificationContext) SetStatusMessage(v string) *NotificationContext {",
      "5779:  s.StatusMessage = &v",
      "5780:  return s",
      "5781: }",
      "5784: func (s *NotificationContext) SetValidationId(v string) *NotificationContext {",
      "5785:  s.ValidationId = &v",
      "5786:  return s",
      "5787: }",
      "5789: type NotifyAppValidationOutputInput struct {",
      "5790:  _ struct{} `type:\"structure\"`",
      "5795:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "5798:  NotificationContext *NotificationContext `locationName:\"notificationContext\" type:\"structure\"`",
      "5802: func (s NotifyAppValidationOutputInput) String() string {",
      "5807: func (s NotifyAppValidationOutputInput) GoString() string {",
      "5812: func (s *NotifyAppValidationOutputInput) Validate() error {",
      "5813:  invalidParams := request.ErrInvalidParams{Context: \"NotifyAppValidationOutputInput\"}",
      "5814:  if s.AppId == nil {",
      "5815:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "5818:  if invalidParams.Len() > 0 {",
      "5819:   return invalidParams",
      "5820:  }",
      "5821:  return nil",
      "5825: func (s *NotifyAppValidationOutputInput) SetAppId(v string) *NotifyAppValidationOutputInput {",
      "5826:  s.AppId = &v",
      "5827:  return s",
      "5831: func (s *NotifyAppValidationOutputInput) SetNotificationContext(v *NotificationContext) *NotifyAppValidationOutputInput {",
      "5832:  s.NotificationContext = v",
      "5833:  return s",
      "5836: type NotifyAppValidationOutputOutput struct {",
      "5837:  _ struct{} `type:\"structure\"`",
      "5841: func (s NotifyAppValidationOutputOutput) String() string {",
      "5842:  return awsutil.Prettify(s)",
      "5846: func (s NotifyAppValidationOutputOutput) GoString() string {",
      "5847:  return s.String()",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4725: type PutAppLaunchConfigurationInput struct {",
      "4726:  _ struct{} `type:\"structure\"`",
      "4729:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "4733:  RoleName *string `locationName:\"roleName\" type:\"string\"`",
      "4736:  ServerGroupLaunchConfigurations []*ServerGroupLaunchConfiguration `locationName:\"serverGroupLaunchConfigurations\" type:\"list\"`",
      "4737: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5914:  AutoLaunch *bool `locationName:\"autoLaunch\" type:\"boolean\"`",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4746:  return s.String()",
      "4747: }",
      "4750: func (s *PutAppLaunchConfigurationInput) SetAppId(v string) *PutAppLaunchConfigurationInput {",
      "4751:  s.AppId = &v",
      "4752:  return s",
      "4753: }",
      "4756: func (s *PutAppLaunchConfigurationInput) SetRoleName(v string) *PutAppLaunchConfigurationInput {",
      "4757:  s.RoleName = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5935: func (s *PutAppLaunchConfigurationInput) Validate() error {",
      "5936:  invalidParams := request.ErrInvalidParams{Context: \"PutAppLaunchConfigurationInput\"}",
      "5937:  if s.ServerGroupLaunchConfigurations != nil {",
      "5938:   for i, v := range s.ServerGroupLaunchConfigurations {",
      "5939:    if v == nil {",
      "5940:     continue",
      "5941:    }",
      "5942:    if err := v.Validate(); err != nil {",
      "5943:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "5944:    }",
      "5945:   }",
      "5946:  }",
      "5948:  if invalidParams.Len() > 0 {",
      "5949:   return invalidParams",
      "5950:  }",
      "5951:  return nil",
      "5952: }",
      "5961: func (s *PutAppLaunchConfigurationInput) SetAutoLaunch(v bool) *PutAppLaunchConfigurationInput {",
      "5962:  s.AutoLaunch = &v",
      "5963:  return s",
      "5964: }",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "4824:  return s.String()",
      "4825: }",
      "4828: type ReplicationJob struct {",
      "4829:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6039: type PutAppValidationConfigurationInput struct {",
      "6040:  _ struct{} `type:\"structure\"`",
      "6045:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "6048:  AppValidationConfigurations []*AppValidationConfiguration `locationName:\"appValidationConfigurations\" type:\"list\"`",
      "6051:  ServerGroupValidationConfigurations []*ServerGroupValidationConfiguration `locationName:\"serverGroupValidationConfigurations\" type:\"list\"`",
      "6052: }",
      "6055: func (s PutAppValidationConfigurationInput) String() string {",
      "6056:  return awsutil.Prettify(s)",
      "6057: }",
      "6060: func (s PutAppValidationConfigurationInput) GoString() string {",
      "6061:  return s.String()",
      "6062: }",
      "6065: func (s *PutAppValidationConfigurationInput) Validate() error {",
      "6066:  invalidParams := request.ErrInvalidParams{Context: \"PutAppValidationConfigurationInput\"}",
      "6067:  if s.AppId == nil {",
      "6068:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "6069:  }",
      "6070:  if s.AppValidationConfigurations != nil {",
      "6071:   for i, v := range s.AppValidationConfigurations {",
      "6072:    if v == nil {",
      "6073:     continue",
      "6074:    }",
      "6075:    if err := v.Validate(); err != nil {",
      "6076:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"AppValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6077:    }",
      "6078:   }",
      "6079:  }",
      "6080:  if s.ServerGroupValidationConfigurations != nil {",
      "6081:   for i, v := range s.ServerGroupValidationConfigurations {",
      "6082:    if v == nil {",
      "6083:     continue",
      "6084:    }",
      "6085:    if err := v.Validate(); err != nil {",
      "6086:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerGroupValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "6087:    }",
      "6088:   }",
      "6089:  }",
      "6091:  if invalidParams.Len() > 0 {",
      "6092:   return invalidParams",
      "6093:  }",
      "6094:  return nil",
      "6095: }",
      "6098: func (s *PutAppValidationConfigurationInput) SetAppId(v string) *PutAppValidationConfigurationInput {",
      "6099:  s.AppId = &v",
      "6100:  return s",
      "6101: }",
      "6104: func (s *PutAppValidationConfigurationInput) SetAppValidationConfigurations(v []*AppValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6105:  s.AppValidationConfigurations = v",
      "6106:  return s",
      "6107: }",
      "6110: func (s *PutAppValidationConfigurationInput) SetServerGroupValidationConfigurations(v []*ServerGroupValidationConfiguration) *PutAppValidationConfigurationInput {",
      "6111:  s.ServerGroupValidationConfigurations = v",
      "6112:  return s",
      "6113: }",
      "6115: type PutAppValidationConfigurationOutput struct {",
      "6116:  _ struct{} `type:\"structure\"`",
      "6117: }",
      "6120: func (s PutAppValidationConfigurationOutput) String() string {",
      "6121:  return awsutil.Prettify(s)",
      "6122: }",
      "6125: func (s PutAppValidationConfigurationOutput) GoString() string {",
      "6126:  return s.String()",
      "6127: }",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "5344:  return s",
      "5345: }",
      "5348: type S3Location struct {",
      "5349:  _ struct{} `type:\"structure\"`",
      "5355:  Key *string `locationName:\"key\" type:\"string\"`",
      "5356: }",
      "",
      "[Removed Lines]",
      "5352:  Bucket *string `locationName:\"bucket\" type:\"string\"`",
      "",
      "[Added Lines]",
      "6653:  Bucket *string `locationName:\"bucket\" min:\"3\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "5365:  return s.String()",
      "5366: }",
      "5369: func (s *S3Location) SetBucket(v string) *S3Location {",
      "5370:  s.Bucket = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6670: func (s *S3Location) Validate() error {",
      "6671:  invalidParams := request.ErrInvalidParams{Context: \"S3Location\"}",
      "6672:  if s.Bucket != nil && len(*s.Bucket) < 3 {",
      "6673:   invalidParams.Add(request.NewErrParamMinLen(\"Bucket\", 3))",
      "6674:  }",
      "6676:  if invalidParams.Len() > 0 {",
      "6677:   return invalidParams",
      "6678:  }",
      "6679:  return nil",
      "6680: }",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "5377:  return s",
      "5378: }",
      "5381: type Server struct {",
      "5382:  _ struct{} `type:\"structure\"`",
      "5385:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\"`",
      "5388:  ReplicationJobTerminated *bool `locationName:\"replicationJobTerminated\" type:\"boolean\"`",
      "5391:  ServerId *string `locationName:\"serverId\" type:\"string\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6695: type SSMOutput struct {",
      "6696:  _ struct{} `type:\"structure\"`",
      "6699:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "6700: }",
      "6703: func (s SSMOutput) String() string {",
      "6704:  return awsutil.Prettify(s)",
      "6705: }",
      "6708: func (s SSMOutput) GoString() string {",
      "6709:  return s.String()",
      "6710: }",
      "6713: func (s *SSMOutput) SetS3Location(v *S3Location) *SSMOutput {",
      "6714:  s.S3Location = v",
      "6715:  return s",
      "6716: }",
      "6719: type SSMValidationParameters struct {",
      "6720:  _ struct{} `type:\"structure\"`",
      "6723:  Command *string `locationName:\"command\" min:\"1\" type:\"string\"`",
      "6726:  ExecutionTimeoutSeconds *int64 `locationName:\"executionTimeoutSeconds\" min:\"60\" type:\"integer\"`",
      "6729:  InstanceId *string `locationName:\"instanceId\" type:\"string\"`",
      "6732:  OutputS3BucketName *string `locationName:\"outputS3BucketName\" type:\"string\"`",
      "6735:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "6738:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "6739: }",
      "6742: func (s SSMValidationParameters) String() string {",
      "6743:  return awsutil.Prettify(s)",
      "6744: }",
      "6747: func (s SSMValidationParameters) GoString() string {",
      "6748:  return s.String()",
      "6749: }",
      "6752: func (s *SSMValidationParameters) Validate() error {",
      "6753:  invalidParams := request.ErrInvalidParams{Context: \"SSMValidationParameters\"}",
      "6754:  if s.Command != nil && len(*s.Command) < 1 {",
      "6755:   invalidParams.Add(request.NewErrParamMinLen(\"Command\", 1))",
      "6756:  }",
      "6757:  if s.ExecutionTimeoutSeconds != nil && *s.ExecutionTimeoutSeconds < 60 {",
      "6758:   invalidParams.Add(request.NewErrParamMinValue(\"ExecutionTimeoutSeconds\", 60))",
      "6759:  }",
      "6760:  if s.Source != nil {",
      "6761:   if err := s.Source.Validate(); err != nil {",
      "6762:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "6763:   }",
      "6764:  }",
      "6766:  if invalidParams.Len() > 0 {",
      "6767:   return invalidParams",
      "6768:  }",
      "6769:  return nil",
      "6770: }",
      "6773: func (s *SSMValidationParameters) SetCommand(v string) *SSMValidationParameters {",
      "6774:  s.Command = &v",
      "6775:  return s",
      "6776: }",
      "6779: func (s *SSMValidationParameters) SetExecutionTimeoutSeconds(v int64) *SSMValidationParameters {",
      "6780:  s.ExecutionTimeoutSeconds = &v",
      "6781:  return s",
      "6782: }",
      "6785: func (s *SSMValidationParameters) SetInstanceId(v string) *SSMValidationParameters {",
      "6786:  s.InstanceId = &v",
      "6787:  return s",
      "6788: }",
      "6791: func (s *SSMValidationParameters) SetOutputS3BucketName(v string) *SSMValidationParameters {",
      "6792:  s.OutputS3BucketName = &v",
      "6793:  return s",
      "6794: }",
      "6797: func (s *SSMValidationParameters) SetScriptType(v string) *SSMValidationParameters {",
      "6798:  s.ScriptType = &v",
      "6799:  return s",
      "6800: }",
      "6803: func (s *SSMValidationParameters) SetSource(v *Source) *SSMValidationParameters {",
      "6804:  s.Source = v",
      "6805:  return s",
      "6806: }",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "5559:  return s.String()",
      "5560: }",
      "5563: func (s *ServerGroupLaunchConfiguration) SetLaunchOrder(v int64) *ServerGroupLaunchConfiguration {",
      "5564:  s.LaunchOrder = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6991: func (s *ServerGroupLaunchConfiguration) Validate() error {",
      "6992:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupLaunchConfiguration\"}",
      "6993:  if s.ServerLaunchConfigurations != nil {",
      "6994:   for i, v := range s.ServerLaunchConfigurations {",
      "6995:    if v == nil {",
      "6996:     continue",
      "6997:    }",
      "6998:    if err := v.Validate(); err != nil {",
      "6999:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerLaunchConfigurations\", i), err.(request.ErrInvalidParams))",
      "7000:    }",
      "7001:   }",
      "7002:  }",
      "7004:  if invalidParams.Len() > 0 {",
      "7005:   return invalidParams",
      "7006:  }",
      "7007:  return nil",
      "7008: }",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "5611:  return s",
      "5612: }",
      "5615: type ServerLaunchConfiguration struct {",
      "5616:  _ struct{} `type:\"structure\"`",
      "5619:  AssociatePublicIpAddress *bool `locationName:\"associatePublicIpAddress\" type:\"boolean\"`",
      "5622:  Ec2KeyName *string `locationName:\"ec2KeyName\" type:\"string\"`",
      "5625:  InstanceType *string `locationName:\"instanceType\" type:\"string\"`",
      "5628:  LogicalId *string `locationName:\"logicalId\" type:\"string\"`",
      "5631:  SecurityGroup *string `locationName:\"securityGroup\" type:\"string\"`",
      "5634:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "5637:  Subnet *string `locationName:\"subnet\" type:\"string\"`",
      "5640:  UserData *UserData `locationName:\"userData\" type:\"structure\"`",
      "5643:  Vpc *string `locationName:\"vpc\" type:\"string\"`",
      "5644: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7062: type ServerGroupValidationConfiguration struct {",
      "7063:  _ struct{} `type:\"structure\"`",
      "7066:  ServerGroupId *string `locationName:\"serverGroupId\" type:\"string\"`",
      "7069:  ServerValidationConfigurations []*ServerValidationConfiguration `locationName:\"serverValidationConfigurations\" type:\"list\"`",
      "7070: }",
      "7073: func (s ServerGroupValidationConfiguration) String() string {",
      "7074:  return awsutil.Prettify(s)",
      "7075: }",
      "7078: func (s ServerGroupValidationConfiguration) GoString() string {",
      "7079:  return s.String()",
      "7080: }",
      "7083: func (s *ServerGroupValidationConfiguration) Validate() error {",
      "7084:  invalidParams := request.ErrInvalidParams{Context: \"ServerGroupValidationConfiguration\"}",
      "7085:  if s.ServerValidationConfigurations != nil {",
      "7086:   for i, v := range s.ServerValidationConfigurations {",
      "7087:    if v == nil {",
      "7088:     continue",
      "7089:    }",
      "7090:    if err := v.Validate(); err != nil {",
      "7091:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"ServerValidationConfigurations\", i), err.(request.ErrInvalidParams))",
      "7092:    }",
      "7093:   }",
      "7094:  }",
      "7096:  if invalidParams.Len() > 0 {",
      "7097:   return invalidParams",
      "7098:  }",
      "7099:  return nil",
      "7100: }",
      "7103: func (s *ServerGroupValidationConfiguration) SetServerGroupId(v string) *ServerGroupValidationConfiguration {",
      "7104:  s.ServerGroupId = &v",
      "7105:  return s",
      "7106: }",
      "7109: func (s *ServerGroupValidationConfiguration) SetServerValidationConfigurations(v []*ServerValidationConfiguration) *ServerGroupValidationConfiguration {",
      "7110:  s.ServerValidationConfigurations = v",
      "7111:  return s",
      "7112: }",
      "7123:  ConfigureScript *S3Location `locationName:\"configureScript\" type:\"structure\"`",
      "7126:  ConfigureScriptType *string `locationName:\"configureScriptType\" type:\"string\" enum:\"ScriptType\"`",
      "7133:  IamInstanceProfileName *string `locationName:\"iamInstanceProfileName\" type:\"string\"`",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "5653:  return s.String()",
      "5654: }",
      "5657: func (s *ServerLaunchConfiguration) SetAssociatePublicIpAddress(v bool) *ServerLaunchConfiguration {",
      "5658:  s.AssociatePublicIpAddress = &v",
      "5659:  return s",
      "5660: }",
      "5663: func (s *ServerLaunchConfiguration) SetEc2KeyName(v string) *ServerLaunchConfiguration {",
      "5664:  s.Ec2KeyName = &v",
      "5665:  return s",
      "5666: }",
      "5669: func (s *ServerLaunchConfiguration) SetInstanceType(v string) *ServerLaunchConfiguration {",
      "5670:  s.InstanceType = &v",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7168: func (s *ServerLaunchConfiguration) Validate() error {",
      "7169:  invalidParams := request.ErrInvalidParams{Context: \"ServerLaunchConfiguration\"}",
      "7170:  if s.ConfigureScript != nil {",
      "7171:   if err := s.ConfigureScript.Validate(); err != nil {",
      "7172:    invalidParams.AddNested(\"ConfigureScript\", err.(request.ErrInvalidParams))",
      "7173:   }",
      "7174:  }",
      "7175:  if s.UserData != nil {",
      "7176:   if err := s.UserData.Validate(); err != nil {",
      "7177:    invalidParams.AddNested(\"UserData\", err.(request.ErrInvalidParams))",
      "7178:   }",
      "7179:  }",
      "7181:  if invalidParams.Len() > 0 {",
      "7182:   return invalidParams",
      "7183:  }",
      "7184:  return nil",
      "7185: }",
      "7194: func (s *ServerLaunchConfiguration) SetConfigureScript(v *S3Location) *ServerLaunchConfiguration {",
      "7195:  s.ConfigureScript = v",
      "7196:  return s",
      "7197: }",
      "7200: func (s *ServerLaunchConfiguration) SetConfigureScriptType(v string) *ServerLaunchConfiguration {",
      "7201:  s.ConfigureScriptType = &v",
      "7202:  return s",
      "7203: }",
      "7212: func (s *ServerLaunchConfiguration) SetIamInstanceProfileName(v string) *ServerLaunchConfiguration {",
      "7213:  s.IamInstanceProfileName = &v",
      "7214:  return s",
      "7215: }",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "5830:  return s",
      "5831: }",
      "5833: type StartAppReplicationInput struct {",
      "5834:  _ struct{} `type:\"structure\"`",
      "5837:  AppId *string `locationName:\"appId\" type:\"string\"`",
      "5838: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7384: type ServerValidationConfiguration struct {",
      "7385:  _ struct{} `type:\"structure\"`",
      "7388:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "7391:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7394:  ServerValidationStrategy *string `locationName:\"serverValidationStrategy\" type:\"string\" enum:\"ServerValidationStrategy\"`",
      "7397:  UserDataValidationParameters *UserDataValidationParameters `locationName:\"userDataValidationParameters\" type:\"structure\"`",
      "7400:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "7401: }",
      "7404: func (s ServerValidationConfiguration) String() string {",
      "7405:  return awsutil.Prettify(s)",
      "7406: }",
      "7409: func (s ServerValidationConfiguration) GoString() string {",
      "7410:  return s.String()",
      "7411: }",
      "7414: func (s *ServerValidationConfiguration) Validate() error {",
      "7415:  invalidParams := request.ErrInvalidParams{Context: \"ServerValidationConfiguration\"}",
      "7416:  if s.Name != nil && len(*s.Name) < 1 {",
      "7417:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
      "7418:  }",
      "7419:  if s.UserDataValidationParameters != nil {",
      "7420:   if err := s.UserDataValidationParameters.Validate(); err != nil {",
      "7421:    invalidParams.AddNested(\"UserDataValidationParameters\", err.(request.ErrInvalidParams))",
      "7422:   }",
      "7423:  }",
      "7425:  if invalidParams.Len() > 0 {",
      "7426:   return invalidParams",
      "7427:  }",
      "7428:  return nil",
      "7429: }",
      "7432: func (s *ServerValidationConfiguration) SetName(v string) *ServerValidationConfiguration {",
      "7433:  s.Name = &v",
      "7434:  return s",
      "7435: }",
      "7438: func (s *ServerValidationConfiguration) SetServer(v *Server) *ServerValidationConfiguration {",
      "7439:  s.Server = v",
      "7440:  return s",
      "7441: }",
      "7444: func (s *ServerValidationConfiguration) SetServerValidationStrategy(v string) *ServerValidationConfiguration {",
      "7445:  s.ServerValidationStrategy = &v",
      "7446:  return s",
      "7447: }",
      "7450: func (s *ServerValidationConfiguration) SetUserDataValidationParameters(v *UserDataValidationParameters) *ServerValidationConfiguration {",
      "7451:  s.UserDataValidationParameters = v",
      "7452:  return s",
      "7453: }",
      "7456: func (s *ServerValidationConfiguration) SetValidationId(v string) *ServerValidationConfiguration {",
      "7457:  s.ValidationId = &v",
      "7458:  return s",
      "7459: }",
      "7462: type ServerValidationOutput struct {",
      "7463:  _ struct{} `type:\"structure\"`",
      "7466:  Server *Server `locationName:\"server\" type:\"structure\"`",
      "7467: }",
      "7470: func (s ServerValidationOutput) String() string {",
      "7471:  return awsutil.Prettify(s)",
      "7472: }",
      "7475: func (s ServerValidationOutput) GoString() string {",
      "7476:  return s.String()",
      "7477: }",
      "7480: func (s *ServerValidationOutput) SetServer(v *Server) *ServerValidationOutput {",
      "7481:  s.Server = v",
      "7482:  return s",
      "7483: }",
      "7486: type Source struct {",
      "7487:  _ struct{} `type:\"structure\"`",
      "7490:  S3Location *S3Location `locationName:\"s3Location\" type:\"structure\"`",
      "7491: }",
      "7494: func (s Source) String() string {",
      "7495:  return awsutil.Prettify(s)",
      "7496: }",
      "7499: func (s Source) GoString() string {",
      "7500:  return s.String()",
      "7501: }",
      "7504: func (s *Source) Validate() error {",
      "7505:  invalidParams := request.ErrInvalidParams{Context: \"Source\"}",
      "7506:  if s.S3Location != nil {",
      "7507:   if err := s.S3Location.Validate(); err != nil {",
      "7508:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "7509:   }",
      "7510:  }",
      "7512:  if invalidParams.Len() > 0 {",
      "7513:   return invalidParams",
      "7514:  }",
      "7515:  return nil",
      "7516: }",
      "7519: func (s *Source) SetS3Location(v *S3Location) *Source {",
      "7520:  s.S3Location = v",
      "7521:  return s",
      "7522: }",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "5867:  return s.String()",
      "5868: }",
      "5870: type StartOnDemandReplicationRunInput struct {",
      "5871:  _ struct{} `type:\"structure\"`",
      "5874:  Description *string `locationName:\"description\" type:\"string\"`",
      "5879:  ReplicationJobId *string `locationName:\"replicationJobId\" type:\"string\" required:\"true\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7561: type StartOnDemandAppReplicationInput struct {",
      "7562:  _ struct{} `type:\"structure\"`",
      "7567:  AppId *string `locationName:\"appId\" type:\"string\" required:\"true\"`",
      "7570:  Description *string `locationName:\"description\" type:\"string\"`",
      "7571: }",
      "7574: func (s StartOnDemandAppReplicationInput) String() string {",
      "7575:  return awsutil.Prettify(s)",
      "7576: }",
      "7579: func (s StartOnDemandAppReplicationInput) GoString() string {",
      "7580:  return s.String()",
      "7581: }",
      "7584: func (s *StartOnDemandAppReplicationInput) Validate() error {",
      "7585:  invalidParams := request.ErrInvalidParams{Context: \"StartOnDemandAppReplicationInput\"}",
      "7586:  if s.AppId == nil {",
      "7587:   invalidParams.Add(request.NewErrParamRequired(\"AppId\"))",
      "7588:  }",
      "7590:  if invalidParams.Len() > 0 {",
      "7591:   return invalidParams",
      "7592:  }",
      "7593:  return nil",
      "7594: }",
      "7597: func (s *StartOnDemandAppReplicationInput) SetAppId(v string) *StartOnDemandAppReplicationInput {",
      "7598:  s.AppId = &v",
      "7599:  return s",
      "7600: }",
      "7603: func (s *StartOnDemandAppReplicationInput) SetDescription(v string) *StartOnDemandAppReplicationInput {",
      "7604:  s.Description = &v",
      "7605:  return s",
      "7606: }",
      "7608: type StartOnDemandAppReplicationOutput struct {",
      "7609:  _ struct{} `type:\"structure\"`",
      "7610: }",
      "7613: func (s StartOnDemandAppReplicationOutput) String() string {",
      "7614:  return awsutil.Prettify(s)",
      "7615: }",
      "7618: func (s StartOnDemandAppReplicationOutput) GoString() string {",
      "7619:  return s.String()",
      "7620: }",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6424:  return s.String()",
      "6425: }",
      "6428: func (s *UserData) SetS3Location(v *S3Location) *UserData {",
      "6429:  s.S3Location = v",
      "6430:  return s",
      "6431: }",
      "6434: type VmServer struct {",
      "6435:  _ struct{} `type:\"structure\"`",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8180: func (s *UserData) Validate() error {",
      "8181:  invalidParams := request.ErrInvalidParams{Context: \"UserData\"}",
      "8182:  if s.S3Location != nil {",
      "8183:   if err := s.S3Location.Validate(); err != nil {",
      "8184:    invalidParams.AddNested(\"S3Location\", err.(request.ErrInvalidParams))",
      "8185:   }",
      "8186:  }",
      "8188:  if invalidParams.Len() > 0 {",
      "8189:   return invalidParams",
      "8190:  }",
      "8191:  return nil",
      "8192: }",
      "8201: type UserDataValidationParameters struct {",
      "8202:  _ struct{} `type:\"structure\"`",
      "8205:  ScriptType *string `locationName:\"scriptType\" type:\"string\" enum:\"ScriptType\"`",
      "8208:  Source *Source `locationName:\"source\" type:\"structure\"`",
      "8209: }",
      "8212: func (s UserDataValidationParameters) String() string {",
      "8213:  return awsutil.Prettify(s)",
      "8214: }",
      "8217: func (s UserDataValidationParameters) GoString() string {",
      "8218:  return s.String()",
      "8219: }",
      "8222: func (s *UserDataValidationParameters) Validate() error {",
      "8223:  invalidParams := request.ErrInvalidParams{Context: \"UserDataValidationParameters\"}",
      "8224:  if s.Source != nil {",
      "8225:   if err := s.Source.Validate(); err != nil {",
      "8226:    invalidParams.AddNested(\"Source\", err.(request.ErrInvalidParams))",
      "8227:   }",
      "8228:  }",
      "8230:  if invalidParams.Len() > 0 {",
      "8231:   return invalidParams",
      "8232:  }",
      "8233:  return nil",
      "8234: }",
      "8237: func (s *UserDataValidationParameters) SetScriptType(v string) *UserDataValidationParameters {",
      "8238:  s.ScriptType = &v",
      "8239:  return s",
      "8240: }",
      "8243: func (s *UserDataValidationParameters) SetSource(v *Source) *UserDataValidationParameters {",
      "8244:  s.Source = v",
      "8245:  return s",
      "8246: }",
      "8249: type ValidationOutput struct {",
      "8250:  _ struct{} `type:\"structure\"`",
      "8253:  AppValidationOutput *AppValidationOutput `locationName:\"appValidationOutput\" type:\"structure\"`",
      "8256:  LatestValidationTime *time.Time `locationName:\"latestValidationTime\" type:\"timestamp\"`",
      "8259:  Name *string `locationName:\"name\" min:\"1\" type:\"string\"`",
      "8262:  ServerValidationOutput *ServerValidationOutput `locationName:\"serverValidationOutput\" type:\"structure\"`",
      "8265:  Status *string `locationName:\"status\" type:\"string\" enum:\"ValidationStatus\"`",
      "8268:  StatusMessage *string `locationName:\"statusMessage\" type:\"string\"`",
      "8271:  ValidationId *string `locationName:\"validationId\" type:\"string\"`",
      "8272: }",
      "8275: func (s ValidationOutput) String() string {",
      "8276:  return awsutil.Prettify(s)",
      "8277: }",
      "8280: func (s ValidationOutput) GoString() string {",
      "8281:  return s.String()",
      "8282: }",
      "8285: func (s *ValidationOutput) SetAppValidationOutput(v *AppValidationOutput) *ValidationOutput {",
      "8286:  s.AppValidationOutput = v",
      "8287:  return s",
      "8288: }",
      "8291: func (s *ValidationOutput) SetLatestValidationTime(v time.Time) *ValidationOutput {",
      "8292:  s.LatestValidationTime = &v",
      "8293:  return s",
      "8294: }",
      "8297: func (s *ValidationOutput) SetName(v string) *ValidationOutput {",
      "8298:  s.Name = &v",
      "8299:  return s",
      "8300: }",
      "8303: func (s *ValidationOutput) SetServerValidationOutput(v *ServerValidationOutput) *ValidationOutput {",
      "8304:  s.ServerValidationOutput = v",
      "8305:  return s",
      "8306: }",
      "8309: func (s *ValidationOutput) SetStatus(v string) *ValidationOutput {",
      "8310:  s.Status = &v",
      "8311:  return s",
      "8312: }",
      "8315: func (s *ValidationOutput) SetStatusMessage(v string) *ValidationOutput {",
      "8316:  s.StatusMessage = &v",
      "8317:  return s",
      "8318: }",
      "8321: func (s *ValidationOutput) SetValidationId(v string) *ValidationOutput {",
      "8322:  s.ValidationId = &v",
      "8323:  return s",
      "8324: }",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6523:  return s",
      "6524: }",
      "6526: const (",
      "6528:  AppLaunchStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8419: const (",
      "8421:  AppLaunchConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8424:  AppLaunchConfigurationStatusConfigured = \"CONFIGURED\"",
      "8425: )",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6549:  AppLaunchStatusLaunched = \"LAUNCHED\"",
      "6552:  AppLaunchStatusDeltaLaunchInProgress = \"DELTA_LAUNCH_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8453:  AppLaunchStatusPartiallyLaunched = \"PARTIALLY_LAUNCHED\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6567:  AppLaunchStatusTerminated = \"TERMINATED\"",
      "6568: )",
      "6570: const (",
      "6572:  AppReplicationStatusReadyForConfiguration = \"READY_FOR_CONFIGURATION\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8474: const (",
      "8476:  AppReplicationConfigurationStatusNotConfigured = \"NOT_CONFIGURED\"",
      "8479:  AppReplicationConfigurationStatusConfigured = \"CONFIGURED\"",
      "8480: )",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6593:  AppReplicationStatusReplicated = \"REPLICATED\"",
      "6596:  AppReplicationStatusDeltaReplicationInProgress = \"DELTA_REPLICATION_IN_PROGRESS\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8508:  AppReplicationStatusPartiallyReplicated = \"PARTIALLY_REPLICATED\"",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "6634:  AppStatusDeleteFailed = \"DELETE_FAILED\"",
      "6635: )",
      "6637: const (",
      "6639:  ConnectorCapabilityVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8552: const (",
      "8554:  AppValidationStrategySsm = \"SSM\"",
      "8555: )",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "6648:  ConnectorCapabilitySnapshotBatching = \"SNAPSHOT_BATCHING\"",
      "6649: )",
      "6651: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8571:  ConnectorCapabilitySmsOptimized = \"SMS_OPTIMIZED\"",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "6729:  ReplicationRunTypeAutomatic = \"AUTOMATIC\"",
      "6730: )",
      "6732: const (",
      "6734:  ServerCatalogStatusNotImported = \"NOT_IMPORTED\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8655: const (",
      "8657:  ScriptTypeShellScript = \"SHELL_SCRIPT\"",
      "8660:  ScriptTypePowershellScript = \"POWERSHELL_SCRIPT\"",
      "8661: )",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "6751:  ServerTypeVirtualMachine = \"VIRTUAL_MACHINE\"",
      "6752: )",
      "6754: const (",
      "6756:  VmManagerTypeVsphere = \"VSPHERE\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8685: const (",
      "8687:  ServerValidationStrategyUserdata = \"USERDATA\"",
      "8688: )",
      "8690: const (",
      "8692:  ValidationStatusReadyForValidation = \"READY_FOR_VALIDATION\"",
      "8695:  ValidationStatusPending = \"PENDING\"",
      "8698:  ValidationStatusInProgress = \"IN_PROGRESS\"",
      "8701:  ValidationStatusSucceeded = \"SUCCEEDED\"",
      "8704:  ValidationStatusFailed = \"FAILED\"",
      "8705: )",
      "",
      "---------------"
    ],
    "service/sms/doc.go||service/sms/doc.go": [
      "File: service/sms/doc.go -> service/sms/doc.go"
    ],
    "service/sms/errors.go||service/sms/errors.go": [
      "File: service/sms/errors.go -> service/sms/errors.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:  ErrCodeDryRunOperationException = \"DryRunOperationException\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78: )",
      "80: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
      "81:  \"InternalError\":                        newErrorInternalError,",
      "82:  \"InvalidParameterException\":            newErrorInvalidParameterException,",
      "83:  \"MissingRequiredParameterException\":    newErrorMissingRequiredParameterException,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  \"DryRunOperationException\":             newErrorDryRunOperationException,",
      "",
      "---------------"
    ],
    "service/sms/smsiface/interface.go||service/sms/smsiface/interface.go": [
      "File: service/sms/smsiface/interface.go -> service/sms/smsiface/interface.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:  DeleteAppReplicationConfigurationWithContext(aws.Context, *sms.DeleteAppReplicationConfigurationInput, ...request.Option) (*sms.DeleteAppReplicationConfigurationOutput, error)",
      "81:  DeleteAppReplicationConfigurationRequest(*sms.DeleteAppReplicationConfigurationInput) (*request.Request, *sms.DeleteAppReplicationConfigurationOutput)",
      "83:  DeleteReplicationJob(*sms.DeleteReplicationJobInput) (*sms.DeleteReplicationJobOutput, error)",
      "84:  DeleteReplicationJobWithContext(aws.Context, *sms.DeleteReplicationJobInput, ...request.Option) (*sms.DeleteReplicationJobOutput, error)",
      "85:  DeleteReplicationJobRequest(*sms.DeleteReplicationJobInput) (*request.Request, *sms.DeleteReplicationJobOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:  DeleteAppValidationConfiguration(*sms.DeleteAppValidationConfigurationInput) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "84:  DeleteAppValidationConfigurationWithContext(aws.Context, *sms.DeleteAppValidationConfigurationInput, ...request.Option) (*sms.DeleteAppValidationConfigurationOutput, error)",
      "85:  DeleteAppValidationConfigurationRequest(*sms.DeleteAppValidationConfigurationInput) (*request.Request, *sms.DeleteAppValidationConfigurationOutput)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  GetAppReplicationConfigurationWithContext(aws.Context, *sms.GetAppReplicationConfigurationInput, ...request.Option) (*sms.GetAppReplicationConfigurationOutput, error)",
      "113:  GetAppReplicationConfigurationRequest(*sms.GetAppReplicationConfigurationInput) (*request.Request, *sms.GetAppReplicationConfigurationOutput)",
      "115:  GetConnectors(*sms.GetConnectorsInput) (*sms.GetConnectorsOutput, error)",
      "116:  GetConnectorsWithContext(aws.Context, *sms.GetConnectorsInput, ...request.Option) (*sms.GetConnectorsOutput, error)",
      "117:  GetConnectorsRequest(*sms.GetConnectorsInput) (*request.Request, *sms.GetConnectorsOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "119:  GetAppValidationConfiguration(*sms.GetAppValidationConfigurationInput) (*sms.GetAppValidationConfigurationOutput, error)",
      "120:  GetAppValidationConfigurationWithContext(aws.Context, *sms.GetAppValidationConfigurationInput, ...request.Option) (*sms.GetAppValidationConfigurationOutput, error)",
      "121:  GetAppValidationConfigurationRequest(*sms.GetAppValidationConfigurationInput) (*request.Request, *sms.GetAppValidationConfigurationOutput)",
      "123:  GetAppValidationOutput(*sms.GetAppValidationOutputInput) (*sms.GetAppValidationOutputOutput, error)",
      "124:  GetAppValidationOutputWithContext(aws.Context, *sms.GetAppValidationOutputInput, ...request.Option) (*sms.GetAppValidationOutputOutput, error)",
      "125:  GetAppValidationOutputRequest(*sms.GetAppValidationOutputInput) (*request.Request, *sms.GetAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:  GetServersPages(*sms.GetServersInput, func(*sms.GetServersOutput, bool) bool) error",
      "141:  GetServersPagesWithContext(aws.Context, *sms.GetServersInput, func(*sms.GetServersOutput, bool) bool, ...request.Option) error",
      "143:  ImportServerCatalog(*sms.ImportServerCatalogInput) (*sms.ImportServerCatalogOutput, error)",
      "144:  ImportServerCatalogWithContext(aws.Context, *sms.ImportServerCatalogInput, ...request.Option) (*sms.ImportServerCatalogOutput, error)",
      "145:  ImportServerCatalogRequest(*sms.ImportServerCatalogInput) (*request.Request, *sms.ImportServerCatalogOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "155:  ImportAppCatalog(*sms.ImportAppCatalogInput) (*sms.ImportAppCatalogOutput, error)",
      "156:  ImportAppCatalogWithContext(aws.Context, *sms.ImportAppCatalogInput, ...request.Option) (*sms.ImportAppCatalogOutput, error)",
      "157:  ImportAppCatalogRequest(*sms.ImportAppCatalogInput) (*request.Request, *sms.ImportAppCatalogOutput)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "152:  ListAppsWithContext(aws.Context, *sms.ListAppsInput, ...request.Option) (*sms.ListAppsOutput, error)",
      "153:  ListAppsRequest(*sms.ListAppsInput) (*request.Request, *sms.ListAppsOutput)",
      "155:  PutAppLaunchConfiguration(*sms.PutAppLaunchConfigurationInput) (*sms.PutAppLaunchConfigurationOutput, error)",
      "156:  PutAppLaunchConfigurationWithContext(aws.Context, *sms.PutAppLaunchConfigurationInput, ...request.Option) (*sms.PutAppLaunchConfigurationOutput, error)",
      "157:  PutAppLaunchConfigurationRequest(*sms.PutAppLaunchConfigurationInput) (*request.Request, *sms.PutAppLaunchConfigurationOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "171:  NotifyAppValidationOutput(*sms.NotifyAppValidationOutputInput) (*sms.NotifyAppValidationOutputOutput, error)",
      "172:  NotifyAppValidationOutputWithContext(aws.Context, *sms.NotifyAppValidationOutputInput, ...request.Option) (*sms.NotifyAppValidationOutputOutput, error)",
      "173:  NotifyAppValidationOutputRequest(*sms.NotifyAppValidationOutputInput) (*request.Request, *sms.NotifyAppValidationOutputOutput)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "160:  PutAppReplicationConfigurationWithContext(aws.Context, *sms.PutAppReplicationConfigurationInput, ...request.Option) (*sms.PutAppReplicationConfigurationOutput, error)",
      "161:  PutAppReplicationConfigurationRequest(*sms.PutAppReplicationConfigurationInput) (*request.Request, *sms.PutAppReplicationConfigurationOutput)",
      "163:  StartAppReplication(*sms.StartAppReplicationInput) (*sms.StartAppReplicationOutput, error)",
      "164:  StartAppReplicationWithContext(aws.Context, *sms.StartAppReplicationInput, ...request.Option) (*sms.StartAppReplicationOutput, error)",
      "165:  StartAppReplicationRequest(*sms.StartAppReplicationInput) (*request.Request, *sms.StartAppReplicationOutput)",
      "167:  StartOnDemandReplicationRun(*sms.StartOnDemandReplicationRunInput) (*sms.StartOnDemandReplicationRunOutput, error)",
      "168:  StartOnDemandReplicationRunWithContext(aws.Context, *sms.StartOnDemandReplicationRunInput, ...request.Option) (*sms.StartOnDemandReplicationRunOutput, error)",
      "169:  StartOnDemandReplicationRunRequest(*sms.StartOnDemandReplicationRunInput) (*request.Request, *sms.StartOnDemandReplicationRunOutput)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "183:  PutAppValidationConfiguration(*sms.PutAppValidationConfigurationInput) (*sms.PutAppValidationConfigurationOutput, error)",
      "184:  PutAppValidationConfigurationWithContext(aws.Context, *sms.PutAppValidationConfigurationInput, ...request.Option) (*sms.PutAppValidationConfigurationOutput, error)",
      "185:  PutAppValidationConfigurationRequest(*sms.PutAppValidationConfigurationInput) (*request.Request, *sms.PutAppValidationConfigurationOutput)",
      "191:  StartOnDemandAppReplication(*sms.StartOnDemandAppReplicationInput) (*sms.StartOnDemandAppReplicationOutput, error)",
      "192:  StartOnDemandAppReplicationWithContext(aws.Context, *sms.StartOnDemandAppReplicationInput, ...request.Option) (*sms.StartOnDemandAppReplicationOutput, error)",
      "193:  StartOnDemandAppReplicationRequest(*sms.StartOnDemandAppReplicationInput) (*request.Request, *sms.StartOnDemandAppReplicationOutput)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8102d31deafaf68bed0ce981332a749932aa6ab1",
      "candidate_info": {
        "commit_hash": "8102d31deafaf68bed0ce981332a749932aa6ab1",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/8102d31deafaf68bed0ce981332a749932aa6ab1",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/glue/2017-03-31/api-2.json",
          "models/apis/glue/2017-03-31/docs-2.json",
          "models/apis/glue/2017-03-31/paginators-1.json",
          "models/apis/kinesisanalyticsv2/2018-05-23/api-2.json",
          "models/apis/kinesisanalyticsv2/2018-05-23/docs-2.json",
          "models/apis/redshift-data/2019-12-20/api-2.json",
          "models/apis/redshift-data/2019-12-20/docs-2.json",
          "models/apis/redshift-data/2019-12-20/examples-1.json",
          "models/apis/redshift-data/2019-12-20/paginators-1.json",
          "models/endpoints/endpoints.json",
          "service/glue/api.go",
          "service/glue/errors.go",
          "service/glue/glueiface/interface.go",
          "service/kinesisanalyticsv2/api.go",
          "service/redshiftdataapiservice/api.go",
          "service/redshiftdataapiservice/doc.go",
          "service/redshiftdataapiservice/errors.go",
          "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "service/redshiftdataapiservice/service.go"
        ],
        "message": "Release v1.34.20 (2020-09-09) ===\n\n### Service Client Updates\n* `service/glue`: Updates service API, documentation, and paginators\n  * Adding support for partitionIndexes to improve GetPartitions performance.\n* `service/kinesisanalyticsv2`: Updates service API and documentation\n* `service/redshift-data`: Adds new service",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/glue/api.go||service/glue/api.go",
          "service/glue/errors.go||service/glue/errors.go",
          "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go",
          "service/kinesisanalyticsv2/api.go||service/kinesisanalyticsv2/api.go",
          "service/redshiftdataapiservice/api.go||service/redshiftdataapiservice/api.go",
          "service/redshiftdataapiservice/doc.go||service/redshiftdataapiservice/doc.go",
          "service/redshiftdataapiservice/errors.go||service/redshiftdataapiservice/errors.go",
          "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go||service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "service/redshiftdataapiservice/service.go||service/redshiftdataapiservice/service.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/glue/api.go||service/glue/api.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:     \"ca-central-1\":   endpoint{},",
          "790:     \"eu-central-1\":   endpoint{},",
          "791:     \"eu-north-1\":     endpoint{},",
          "792:     \"eu-west-1\":      endpoint{},",
          "793:     \"eu-west-2\":      endpoint{},",
          "794:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "792:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2929:     \"ca-central-1\":   endpoint{},",
          "2930:     \"eu-central-1\":   endpoint{},",
          "2931:     \"eu-north-1\":     endpoint{},",
          "2932:     \"eu-west-1\":      endpoint{},",
          "2933:     \"eu-west-2\":      endpoint{},",
          "2934:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2933:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3468:     \"ca-central-1\":   endpoint{},",
          "3469:     \"eu-central-1\":   endpoint{},",
          "3470:     \"eu-north-1\":     endpoint{},",
          "3471:     \"eu-west-1\":      endpoint{},",
          "3472:     \"eu-west-2\":      endpoint{},",
          "3473:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3473:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.34.19\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.34.20\"",
          "",
          "---------------"
        ],
        "service/glue/api.go||service/glue/api.go": [
          "File: service/glue/api.go -> service/glue/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6992:  return out, req.Send()",
          "6993: }",
          "6995: const opGetPartitions = \"GetPartitions\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6995: const opGetPartitionIndexes = \"GetPartitionIndexes\"",
          "7021: func (c *Glue) GetPartitionIndexesRequest(input *GetPartitionIndexesInput) (req *request.Request, output *GetPartitionIndexesOutput) {",
          "7022:  op := &request.Operation{",
          "7023:   Name:       opGetPartitionIndexes,",
          "7024:   HTTPMethod: \"POST\",",
          "7025:   HTTPPath:   \"/\",",
          "7026:   Paginator: &request.Paginator{",
          "7027:    InputTokens:     []string{\"NextToken\"},",
          "7028:    OutputTokens:    []string{\"NextToken\"},",
          "7029:    LimitToken:      \"\",",
          "7030:    TruncationToken: \"\",",
          "7031:   },",
          "7032:  }",
          "7034:  if input == nil {",
          "7035:   input = &GetPartitionIndexesInput{}",
          "7036:  }",
          "7038:  output = &GetPartitionIndexesOutput{}",
          "7039:  req = c.newRequest(op, input, output)",
          "7040:  return",
          "7041: }",
          "7071: func (c *Glue) GetPartitionIndexes(input *GetPartitionIndexesInput) (*GetPartitionIndexesOutput, error) {",
          "7072:  req, out := c.GetPartitionIndexesRequest(input)",
          "7073:  return out, req.Send()",
          "7074: }",
          "7085: func (c *Glue) GetPartitionIndexesWithContext(ctx aws.Context, input *GetPartitionIndexesInput, opts ...request.Option) (*GetPartitionIndexesOutput, error) {",
          "7086:  req, out := c.GetPartitionIndexesRequest(input)",
          "7087:  req.SetContext(ctx)",
          "7088:  req.ApplyOptions(opts...)",
          "7089:  return out, req.Send()",
          "7090: }",
          "7109: func (c *Glue) GetPartitionIndexesPages(input *GetPartitionIndexesInput, fn func(*GetPartitionIndexesOutput, bool) bool) error {",
          "7110:  return c.GetPartitionIndexesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "7111: }",
          "7120: func (c *Glue) GetPartitionIndexesPagesWithContext(ctx aws.Context, input *GetPartitionIndexesInput, fn func(*GetPartitionIndexesOutput, bool) bool, opts ...request.Option) error {",
          "7121:  p := request.Pagination{",
          "7122:   NewRequest: func() (*request.Request, error) {",
          "7123:    var inCpy *GetPartitionIndexesInput",
          "7124:    if input != nil {",
          "7125:     tmp := *input",
          "7126:     inCpy = &tmp",
          "7127:    }",
          "7128:    req, _ := c.GetPartitionIndexesRequest(inCpy)",
          "7129:    req.SetContext(ctx)",
          "7130:    req.ApplyOptions(opts...)",
          "7131:    return req, nil",
          "7132:   },",
          "7133:  }",
          "7135:  for p.Next() {",
          "7136:   if !fn(p.Page().(*GetPartitionIndexesOutput), !p.HasNextPage()) {",
          "7137:    break",
          "7138:   }",
          "7139:  }",
          "7141:  return p.Err()",
          "7142: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16218:  return s.RespMetadata.RequestID",
          "16219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16371: type ConflictException struct {",
          "16372:  _            struct{}                  `type:\"structure\"`",
          "16373:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "16376:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "16377: }",
          "16380: func (s ConflictException) String() string {",
          "16381:  return awsutil.Prettify(s)",
          "16382: }",
          "16385: func (s ConflictException) GoString() string {",
          "16386:  return s.String()",
          "16387: }",
          "16389: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "16390:  return &ConflictException{",
          "16391:   RespMetadata: v,",
          "16392:  }",
          "16393: }",
          "16396: func (s *ConflictException) Code() string {",
          "16397:  return \"ConflictException\"",
          "16398: }",
          "16401: func (s *ConflictException) Message() string {",
          "16402:  if s.Message_ != nil {",
          "16403:   return *s.Message_",
          "16404:  }",
          "16405:  return \"\"",
          "16406: }",
          "16409: func (s *ConflictException) OrigErr() error {",
          "16410:  return nil",
          "16411: }",
          "16413: func (s *ConflictException) Error() string {",
          "16414:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "16415: }",
          "16418: func (s *ConflictException) StatusCode() int {",
          "16419:  return s.RespMetadata.StatusCode",
          "16420: }",
          "16423: func (s *ConflictException) RequestID() string {",
          "16424:  return s.RespMetadata.RequestID",
          "16425: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "19234:  DatabaseName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19431:  PartitionIndexes []*PartitionIndex `type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "19264:  if s.TableInput == nil {",
          "19265:   invalidParams.Add(request.NewErrParamRequired(\"TableInput\"))",
          "19266:  }",
          "19267:  if s.TableInput != nil {",
          "19268:   if err := s.TableInput.Validate(); err != nil {",
          "19269:    invalidParams.AddNested(\"TableInput\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19464:  if s.PartitionIndexes != nil {",
          "19465:   for i, v := range s.PartitionIndexes {",
          "19466:    if v == nil {",
          "19467:     continue",
          "19468:    }",
          "19469:    if err := v.Validate(); err != nil {",
          "19470:     invalidParams.AddNested(fmt.Sprintf(\"%s[%v]\", \"PartitionIndexes\", i), err.(request.ErrInvalidParams))",
          "19471:    }",
          "19472:   }",
          "19473:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "19288:  return s",
          "19289: }",
          "19292: func (s *CreateTableInput) SetTableInput(v *TableInput) *CreateTableInput {",
          "19293:  s.TableInput = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19499: func (s *CreateTableInput) SetPartitionIndexes(v []*PartitionIndex) *CreateTableInput {",
          "19500:  s.PartitionIndexes = v",
          "19501:  return s",
          "19502: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "25214:  return s",
          "25215: }",
          "25217: type GetPartitionInput struct {",
          "25218:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25430: type GetPartitionIndexesInput struct {",
          "25431:  _ struct{} `type:\"structure\"`",
          "25434:  CatalogId *string `min:\"1\" type:\"string\"`",
          "25440:  DatabaseName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "25443:  NextToken *string `type:\"string\"`",
          "25449:  TableName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "25450: }",
          "25453: func (s GetPartitionIndexesInput) String() string {",
          "25454:  return awsutil.Prettify(s)",
          "25455: }",
          "25458: func (s GetPartitionIndexesInput) GoString() string {",
          "25459:  return s.String()",
          "25460: }",
          "25463: func (s *GetPartitionIndexesInput) Validate() error {",
          "25464:  invalidParams := request.ErrInvalidParams{Context: \"GetPartitionIndexesInput\"}",
          "25465:  if s.CatalogId != nil && len(*s.CatalogId) < 1 {",
          "25466:   invalidParams.Add(request.NewErrParamMinLen(\"CatalogId\", 1))",
          "25467:  }",
          "25468:  if s.DatabaseName == nil {",
          "25469:   invalidParams.Add(request.NewErrParamRequired(\"DatabaseName\"))",
          "25470:  }",
          "25471:  if s.DatabaseName != nil && len(*s.DatabaseName) < 1 {",
          "25472:   invalidParams.Add(request.NewErrParamMinLen(\"DatabaseName\", 1))",
          "25473:  }",
          "25474:  if s.TableName == nil {",
          "25475:   invalidParams.Add(request.NewErrParamRequired(\"TableName\"))",
          "25476:  }",
          "25477:  if s.TableName != nil && len(*s.TableName) < 1 {",
          "25478:   invalidParams.Add(request.NewErrParamMinLen(\"TableName\", 1))",
          "25479:  }",
          "25481:  if invalidParams.Len() > 0 {",
          "25482:   return invalidParams",
          "25483:  }",
          "25484:  return nil",
          "25485: }",
          "25488: func (s *GetPartitionIndexesInput) SetCatalogId(v string) *GetPartitionIndexesInput {",
          "25489:  s.CatalogId = &v",
          "25490:  return s",
          "25491: }",
          "25494: func (s *GetPartitionIndexesInput) SetDatabaseName(v string) *GetPartitionIndexesInput {",
          "25495:  s.DatabaseName = &v",
          "25496:  return s",
          "25497: }",
          "25500: func (s *GetPartitionIndexesInput) SetNextToken(v string) *GetPartitionIndexesInput {",
          "25501:  s.NextToken = &v",
          "25502:  return s",
          "25503: }",
          "25506: func (s *GetPartitionIndexesInput) SetTableName(v string) *GetPartitionIndexesInput {",
          "25507:  s.TableName = &v",
          "25508:  return s",
          "25509: }",
          "25511: type GetPartitionIndexesOutput struct {",
          "25512:  _ struct{} `type:\"structure\"`",
          "25515:  NextToken *string `type:\"string\"`",
          "25518:  PartitionIndexDescriptorList []*PartitionIndexDescriptor `type:\"list\"`",
          "25519: }",
          "25522: func (s GetPartitionIndexesOutput) String() string {",
          "25523:  return awsutil.Prettify(s)",
          "25524: }",
          "25527: func (s GetPartitionIndexesOutput) GoString() string {",
          "25528:  return s.String()",
          "25529: }",
          "25532: func (s *GetPartitionIndexesOutput) SetNextToken(v string) *GetPartitionIndexesOutput {",
          "25533:  s.NextToken = &v",
          "25534:  return s",
          "25535: }",
          "25538: func (s *GetPartitionIndexesOutput) SetPartitionIndexDescriptorList(v []*PartitionIndexDescriptor) *GetPartitionIndexesOutput {",
          "25539:  s.PartitionIndexDescriptorList = v",
          "25540:  return s",
          "25541: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "28758:  return s",
          "28759: }",
          "28762: type LabelingSetGenerationTaskRunProperties struct {",
          "28763:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29088: type KeySchemaElement struct {",
          "29089:  _ struct{} `type:\"structure\"`",
          "29094:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "29099:  Type *string `type:\"string\" required:\"true\"`",
          "29100: }",
          "29103: func (s KeySchemaElement) String() string {",
          "29104:  return awsutil.Prettify(s)",
          "29105: }",
          "29108: func (s KeySchemaElement) GoString() string {",
          "29109:  return s.String()",
          "29110: }",
          "29113: func (s *KeySchemaElement) SetName(v string) *KeySchemaElement {",
          "29114:  s.Name = &v",
          "29115:  return s",
          "29116: }",
          "29119: func (s *KeySchemaElement) SetType(v string) *KeySchemaElement {",
          "29120:  s.Type = &v",
          "29121:  return s",
          "29122: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "30347:  return s",
          "30348: }",
          "30351: type PartitionInput struct {",
          "30352:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30714: type PartitionIndex struct {",
          "30715:  _ struct{} `type:\"structure\"`",
          "30720:  IndexName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "30725:  Keys []*string `min:\"1\" type:\"list\" required:\"true\"`",
          "30726: }",
          "30729: func (s PartitionIndex) String() string {",
          "30730:  return awsutil.Prettify(s)",
          "30731: }",
          "30734: func (s PartitionIndex) GoString() string {",
          "30735:  return s.String()",
          "30736: }",
          "30739: func (s *PartitionIndex) Validate() error {",
          "30740:  invalidParams := request.ErrInvalidParams{Context: \"PartitionIndex\"}",
          "30741:  if s.IndexName == nil {",
          "30742:   invalidParams.Add(request.NewErrParamRequired(\"IndexName\"))",
          "30743:  }",
          "30744:  if s.IndexName != nil && len(*s.IndexName) < 1 {",
          "30745:   invalidParams.Add(request.NewErrParamMinLen(\"IndexName\", 1))",
          "30746:  }",
          "30747:  if s.Keys == nil {",
          "30748:   invalidParams.Add(request.NewErrParamRequired(\"Keys\"))",
          "30749:  }",
          "30750:  if s.Keys != nil && len(s.Keys) < 1 {",
          "30751:   invalidParams.Add(request.NewErrParamMinLen(\"Keys\", 1))",
          "30752:  }",
          "30754:  if invalidParams.Len() > 0 {",
          "30755:   return invalidParams",
          "30756:  }",
          "30757:  return nil",
          "30758: }",
          "30761: func (s *PartitionIndex) SetIndexName(v string) *PartitionIndex {",
          "30762:  s.IndexName = &v",
          "30763:  return s",
          "30764: }",
          "30767: func (s *PartitionIndex) SetKeys(v []*string) *PartitionIndex {",
          "30768:  s.Keys = v",
          "30769:  return s",
          "30770: }",
          "30773: type PartitionIndexDescriptor struct {",
          "30774:  _ struct{} `type:\"structure\"`",
          "30779:  IndexName *string `min:\"1\" type:\"string\" required:\"true\"`",
          "30784:  IndexStatus *string `type:\"string\" required:\"true\" enum:\"PartitionIndexStatus\"`",
          "30790:  Keys []*KeySchemaElement `min:\"1\" type:\"list\" required:\"true\"`",
          "30791: }",
          "30794: func (s PartitionIndexDescriptor) String() string {",
          "30795:  return awsutil.Prettify(s)",
          "30796: }",
          "30799: func (s PartitionIndexDescriptor) GoString() string {",
          "30800:  return s.String()",
          "30801: }",
          "30804: func (s *PartitionIndexDescriptor) SetIndexName(v string) *PartitionIndexDescriptor {",
          "30805:  s.IndexName = &v",
          "30806:  return s",
          "30807: }",
          "30810: func (s *PartitionIndexDescriptor) SetIndexStatus(v string) *PartitionIndexDescriptor {",
          "30811:  s.IndexStatus = &v",
          "30812:  return s",
          "30813: }",
          "30816: func (s *PartitionIndexDescriptor) SetKeys(v []*KeySchemaElement) *PartitionIndexDescriptor {",
          "30817:  s.Keys = v",
          "30818:  return s",
          "30819: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "37856:  }",
          "37857: }",
          "37859: const (",
          "37861:  PermissionAll = \"ALL\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38330: const (",
          "38332:  PartitionIndexStatusActive = \"ACTIVE\"",
          "38333: )",
          "38336: func PartitionIndexStatus_Values() []string {",
          "38337:  return []string{",
          "38338:   PartitionIndexStatusActive,",
          "38339:  }",
          "38340: }",
          "",
          "---------------"
        ],
        "service/glue/errors.go||service/glue/errors.go": [
          "File: service/glue/errors.go -> service/glue/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  ErrCodeConditionCheckFailureException = \"ConditionCheckFailureException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:  \"ConcurrentModificationException\":      newErrorConcurrentModificationException,",
          "154:  \"ConcurrentRunsExceededException\":      newErrorConcurrentRunsExceededException,",
          "155:  \"ConditionCheckFailureException\":       newErrorConditionCheckFailureException,",
          "156:  \"CrawlerNotRunningException\":           newErrorCrawlerNotRunningException,",
          "157:  \"CrawlerRunningException\":              newErrorCrawlerRunningException,",
          "158:  \"CrawlerStoppingException\":             newErrorCrawlerStoppingException,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:  \"ConflictException\":                    newErrorConflictException,",
          "",
          "---------------"
        ],
        "service/glue/glueiface/interface.go||service/glue/glueiface/interface.go": [
          "File: service/glue/glueiface/interface.go -> service/glue/glueiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:  GetPartitionWithContext(aws.Context, *glue.GetPartitionInput, ...request.Option) (*glue.GetPartitionOutput, error)",
          "375:  GetPartitionRequest(*glue.GetPartitionInput) (*request.Request, *glue.GetPartitionOutput)",
          "377:  GetPartitions(*glue.GetPartitionsInput) (*glue.GetPartitionsOutput, error)",
          "378:  GetPartitionsWithContext(aws.Context, *glue.GetPartitionsInput, ...request.Option) (*glue.GetPartitionsOutput, error)",
          "379:  GetPartitionsRequest(*glue.GetPartitionsInput) (*request.Request, *glue.GetPartitionsOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:  GetPartitionIndexes(*glue.GetPartitionIndexesInput) (*glue.GetPartitionIndexesOutput, error)",
          "378:  GetPartitionIndexesWithContext(aws.Context, *glue.GetPartitionIndexesInput, ...request.Option) (*glue.GetPartitionIndexesOutput, error)",
          "379:  GetPartitionIndexesRequest(*glue.GetPartitionIndexesInput) (*request.Request, *glue.GetPartitionIndexesOutput)",
          "381:  GetPartitionIndexesPages(*glue.GetPartitionIndexesInput, func(*glue.GetPartitionIndexesOutput, bool) bool) error",
          "382:  GetPartitionIndexesPagesWithContext(aws.Context, *glue.GetPartitionIndexesInput, func(*glue.GetPartitionIndexesOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/kinesisanalyticsv2/api.go||service/kinesisanalyticsv2/api.go": [
          "File: service/kinesisanalyticsv2/api.go -> service/kinesisanalyticsv2/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7116:  RecordFormatUpdate *RecordFormat `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "7113:  RecordEncodingUpdate *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "7122:  RecordEncodingUpdate *string `min:\"5\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7132:  if s.RecordColumnUpdates != nil && len(s.RecordColumnUpdates) < 1 {",
          "7133:   invalidParams.Add(request.NewErrParamMinLen(\"RecordColumnUpdates\", 1))",
          "7134:  }",
          "7135:  if s.RecordColumnUpdates != nil {",
          "7136:   for i, v := range s.RecordColumnUpdates {",
          "7137:    if v == nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7144:  if s.RecordEncodingUpdate != nil && len(*s.RecordEncodingUpdate) < 5 {",
          "7145:   invalidParams.Add(request.NewErrParamMinLen(\"RecordEncodingUpdate\", 5))",
          "7146:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "9342:  Name *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "9354:  Name *string `min:\"1\" type:\"string\" required:\"true\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9364:  if s.Name == nil {",
          "9365:   invalidParams.Add(request.NewErrParamRequired(\"Name\"))",
          "9366:  }",
          "9367:  if s.SqlType == nil {",
          "9368:   invalidParams.Add(request.NewErrParamRequired(\"SqlType\"))",
          "9369:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9379:  if s.Name != nil && len(*s.Name) < 1 {",
          "9380:   invalidParams.Add(request.NewErrParamMinLen(\"Name\", 1))",
          "9381:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9938:  ApplicationRestoreConfigurationDescription *ApplicationRestoreConfiguration `type:\"structure\"`",
          "9939: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9957:  FlinkRunConfigurationDescription *FlinkRunConfiguration `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9954:  return s",
          "9955: }",
          "9959: type RunConfigurationUpdate struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9977: func (s *RunConfigurationDescription) SetFlinkRunConfigurationDescription(v *FlinkRunConfiguration) *RunConfigurationDescription {",
          "9978:  s.FlinkRunConfigurationDescription = v",
          "9979:  return s",
          "9980: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "10532:  RecordEncoding *string `type:\"string\"`",
          "",
          "[Added Lines]",
          "10557:  RecordEncoding *string `min:\"5\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "10556:  if s.RecordColumns != nil && len(s.RecordColumns) < 1 {",
          "10557:   invalidParams.Add(request.NewErrParamMinLen(\"RecordColumns\", 1))",
          "10558:  }",
          "10559:  if s.RecordFormat == nil {",
          "10560:   invalidParams.Add(request.NewErrParamRequired(\"RecordFormat\"))",
          "10561:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10584:  if s.RecordEncoding != nil && len(*s.RecordEncoding) < 5 {",
          "10585:   invalidParams.Add(request.NewErrParamMinLen(\"RecordEncoding\", 5))",
          "10586:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "11768:  ApplicationStatusUpdating = \"UPDATING\"",
          "11769: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11799:  ApplicationStatusAutoscaling = \"AUTOSCALING\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "11777:   ApplicationStatusReady,",
          "11778:   ApplicationStatusRunning,",
          "11779:   ApplicationStatusUpdating,",
          "11780:  }",
          "11781: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11811:   ApplicationStatusAutoscaling,",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/api.go||service/redshiftdataapiservice/api.go": [
          "File: service/redshiftdataapiservice/api.go -> service/redshiftdataapiservice/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"fmt\"",
          "7:  \"time\"",
          "9:  \"github.com/aws/aws-sdk-go/aws\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/awsutil\"",
          "11:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "13: )",
          "15: const opCancelStatement = \"CancelStatement\"",
          "41: func (c *RedshiftDataAPIService) CancelStatementRequest(input *CancelStatementInput) (req *request.Request, output *CancelStatementOutput) {",
          "42:  op := &request.Operation{",
          "43:   Name:       opCancelStatement,",
          "44:   HTTPMethod: \"POST\",",
          "45:   HTTPPath:   \"/\",",
          "46:  }",
          "48:  if input == nil {",
          "49:   input = &CancelStatementInput{}",
          "50:  }",
          "52:  output = &CancelStatementOutput{}",
          "53:  req = c.newRequest(op, input, output)",
          "54:  return",
          "55: }",
          "76: func (c *RedshiftDataAPIService) CancelStatement(input *CancelStatementInput) (*CancelStatementOutput, error) {",
          "77:  req, out := c.CancelStatementRequest(input)",
          "78:  return out, req.Send()",
          "79: }",
          "90: func (c *RedshiftDataAPIService) CancelStatementWithContext(ctx aws.Context, input *CancelStatementInput, opts ...request.Option) (*CancelStatementOutput, error) {",
          "91:  req, out := c.CancelStatementRequest(input)",
          "92:  req.SetContext(ctx)",
          "93:  req.ApplyOptions(opts...)",
          "94:  return out, req.Send()",
          "95: }",
          "97: const opDescribeStatement = \"DescribeStatement\"",
          "123: func (c *RedshiftDataAPIService) DescribeStatementRequest(input *DescribeStatementInput) (req *request.Request, output *DescribeStatementOutput) {",
          "124:  op := &request.Operation{",
          "125:   Name:       opDescribeStatement,",
          "126:   HTTPMethod: \"POST\",",
          "127:   HTTPPath:   \"/\",",
          "128:  }",
          "130:  if input == nil {",
          "131:   input = &DescribeStatementInput{}",
          "132:  }",
          "134:  output = &DescribeStatementOutput{}",
          "135:  req = c.newRequest(op, input, output)",
          "136:  return",
          "137: }",
          "164: func (c *RedshiftDataAPIService) DescribeStatement(input *DescribeStatementInput) (*DescribeStatementOutput, error) {",
          "165:  req, out := c.DescribeStatementRequest(input)",
          "166:  return out, req.Send()",
          "167: }",
          "178: func (c *RedshiftDataAPIService) DescribeStatementWithContext(ctx aws.Context, input *DescribeStatementInput, opts ...request.Option) (*DescribeStatementOutput, error) {",
          "179:  req, out := c.DescribeStatementRequest(input)",
          "180:  req.SetContext(ctx)",
          "181:  req.ApplyOptions(opts...)",
          "182:  return out, req.Send()",
          "183: }",
          "185: const opDescribeTable = \"DescribeTable\"",
          "211: func (c *RedshiftDataAPIService) DescribeTableRequest(input *DescribeTableInput) (req *request.Request, output *DescribeTableOutput) {",
          "212:  op := &request.Operation{",
          "213:   Name:       opDescribeTable,",
          "214:   HTTPMethod: \"POST\",",
          "215:   HTTPPath:   \"/\",",
          "216:   Paginator: &request.Paginator{",
          "217:    InputTokens:     []string{\"NextToken\"},",
          "218:    OutputTokens:    []string{\"NextToken\"},",
          "219:    LimitToken:      \"MaxResults\",",
          "220:    TruncationToken: \"\",",
          "221:   },",
          "222:  }",
          "224:  if input == nil {",
          "225:   input = &DescribeTableInput{}",
          "226:  }",
          "228:  output = &DescribeTableOutput{}",
          "229:  req = c.newRequest(op, input, output)",
          "230:  return",
          "231: }",
          "262: func (c *RedshiftDataAPIService) DescribeTable(input *DescribeTableInput) (*DescribeTableOutput, error) {",
          "263:  req, out := c.DescribeTableRequest(input)",
          "264:  return out, req.Send()",
          "265: }",
          "276: func (c *RedshiftDataAPIService) DescribeTableWithContext(ctx aws.Context, input *DescribeTableInput, opts ...request.Option) (*DescribeTableOutput, error) {",
          "277:  req, out := c.DescribeTableRequest(input)",
          "278:  req.SetContext(ctx)",
          "279:  req.ApplyOptions(opts...)",
          "280:  return out, req.Send()",
          "281: }",
          "300: func (c *RedshiftDataAPIService) DescribeTablePages(input *DescribeTableInput, fn func(*DescribeTableOutput, bool) bool) error {",
          "301:  return c.DescribeTablePagesWithContext(aws.BackgroundContext(), input, fn)",
          "302: }",
          "311: func (c *RedshiftDataAPIService) DescribeTablePagesWithContext(ctx aws.Context, input *DescribeTableInput, fn func(*DescribeTableOutput, bool) bool, opts ...request.Option) error {",
          "312:  p := request.Pagination{",
          "313:   NewRequest: func() (*request.Request, error) {",
          "314:    var inCpy *DescribeTableInput",
          "315:    if input != nil {",
          "316:     tmp := *input",
          "317:     inCpy = &tmp",
          "318:    }",
          "319:    req, _ := c.DescribeTableRequest(inCpy)",
          "320:    req.SetContext(ctx)",
          "321:    req.ApplyOptions(opts...)",
          "322:    return req, nil",
          "323:   },",
          "324:  }",
          "326:  for p.Next() {",
          "327:   if !fn(p.Page().(*DescribeTableOutput), !p.HasNextPage()) {",
          "328:    break",
          "329:   }",
          "330:  }",
          "332:  return p.Err()",
          "333: }",
          "335: const opExecuteStatement = \"ExecuteStatement\"",
          "361: func (c *RedshiftDataAPIService) ExecuteStatementRequest(input *ExecuteStatementInput) (req *request.Request, output *ExecuteStatementOutput) {",
          "362:  op := &request.Operation{",
          "363:   Name:       opExecuteStatement,",
          "364:   HTTPMethod: \"POST\",",
          "365:   HTTPPath:   \"/\",",
          "366:  }",
          "368:  if input == nil {",
          "369:   input = &ExecuteStatementInput{}",
          "370:  }",
          "372:  output = &ExecuteStatementOutput{}",
          "373:  req = c.newRequest(op, input, output)",
          "374:  return",
          "375: }",
          "406: func (c *RedshiftDataAPIService) ExecuteStatement(input *ExecuteStatementInput) (*ExecuteStatementOutput, error) {",
          "407:  req, out := c.ExecuteStatementRequest(input)",
          "408:  return out, req.Send()",
          "409: }",
          "420: func (c *RedshiftDataAPIService) ExecuteStatementWithContext(ctx aws.Context, input *ExecuteStatementInput, opts ...request.Option) (*ExecuteStatementOutput, error) {",
          "421:  req, out := c.ExecuteStatementRequest(input)",
          "422:  req.SetContext(ctx)",
          "423:  req.ApplyOptions(opts...)",
          "424:  return out, req.Send()",
          "425: }",
          "427: const opGetStatementResult = \"GetStatementResult\"",
          "453: func (c *RedshiftDataAPIService) GetStatementResultRequest(input *GetStatementResultInput) (req *request.Request, output *GetStatementResultOutput) {",
          "454:  op := &request.Operation{",
          "455:   Name:       opGetStatementResult,",
          "456:   HTTPMethod: \"POST\",",
          "457:   HTTPPath:   \"/\",",
          "458:   Paginator: &request.Paginator{",
          "459:    InputTokens:     []string{\"NextToken\"},",
          "460:    OutputTokens:    []string{\"NextToken\"},",
          "461:    LimitToken:      \"\",",
          "462:    TruncationToken: \"\",",
          "463:   },",
          "464:  }",
          "466:  if input == nil {",
          "467:   input = &GetStatementResultInput{}",
          "468:  }",
          "470:  output = &GetStatementResultOutput{}",
          "471:  req = c.newRequest(op, input, output)",
          "472:  return",
          "473: }",
          "498: func (c *RedshiftDataAPIService) GetStatementResult(input *GetStatementResultInput) (*GetStatementResultOutput, error) {",
          "499:  req, out := c.GetStatementResultRequest(input)",
          "500:  return out, req.Send()",
          "501: }",
          "512: func (c *RedshiftDataAPIService) GetStatementResultWithContext(ctx aws.Context, input *GetStatementResultInput, opts ...request.Option) (*GetStatementResultOutput, error) {",
          "513:  req, out := c.GetStatementResultRequest(input)",
          "514:  req.SetContext(ctx)",
          "515:  req.ApplyOptions(opts...)",
          "516:  return out, req.Send()",
          "517: }",
          "536: func (c *RedshiftDataAPIService) GetStatementResultPages(input *GetStatementResultInput, fn func(*GetStatementResultOutput, bool) bool) error {",
          "537:  return c.GetStatementResultPagesWithContext(aws.BackgroundContext(), input, fn)",
          "538: }",
          "547: func (c *RedshiftDataAPIService) GetStatementResultPagesWithContext(ctx aws.Context, input *GetStatementResultInput, fn func(*GetStatementResultOutput, bool) bool, opts ...request.Option) error {",
          "548:  p := request.Pagination{",
          "549:   NewRequest: func() (*request.Request, error) {",
          "550:    var inCpy *GetStatementResultInput",
          "551:    if input != nil {",
          "552:     tmp := *input",
          "553:     inCpy = &tmp",
          "554:    }",
          "555:    req, _ := c.GetStatementResultRequest(inCpy)",
          "556:    req.SetContext(ctx)",
          "557:    req.ApplyOptions(opts...)",
          "558:    return req, nil",
          "559:   },",
          "560:  }",
          "562:  for p.Next() {",
          "563:   if !fn(p.Page().(*GetStatementResultOutput), !p.HasNextPage()) {",
          "564:    break",
          "565:   }",
          "566:  }",
          "568:  return p.Err()",
          "569: }",
          "571: const opListDatabases = \"ListDatabases\"",
          "597: func (c *RedshiftDataAPIService) ListDatabasesRequest(input *ListDatabasesInput) (req *request.Request, output *ListDatabasesOutput) {",
          "598:  op := &request.Operation{",
          "599:   Name:       opListDatabases,",
          "600:   HTTPMethod: \"POST\",",
          "601:   HTTPPath:   \"/\",",
          "602:   Paginator: &request.Paginator{",
          "603:    InputTokens:     []string{\"NextToken\"},",
          "604:    OutputTokens:    []string{\"NextToken\"},",
          "605:    LimitToken:      \"MaxResults\",",
          "606:    TruncationToken: \"\",",
          "607:   },",
          "608:  }",
          "610:  if input == nil {",
          "611:   input = &ListDatabasesInput{}",
          "612:  }",
          "614:  output = &ListDatabasesOutput{}",
          "615:  req = c.newRequest(op, input, output)",
          "616:  return",
          "617: }",
          "647: func (c *RedshiftDataAPIService) ListDatabases(input *ListDatabasesInput) (*ListDatabasesOutput, error) {",
          "648:  req, out := c.ListDatabasesRequest(input)",
          "649:  return out, req.Send()",
          "650: }",
          "661: func (c *RedshiftDataAPIService) ListDatabasesWithContext(ctx aws.Context, input *ListDatabasesInput, opts ...request.Option) (*ListDatabasesOutput, error) {",
          "662:  req, out := c.ListDatabasesRequest(input)",
          "663:  req.SetContext(ctx)",
          "664:  req.ApplyOptions(opts...)",
          "665:  return out, req.Send()",
          "666: }",
          "685: func (c *RedshiftDataAPIService) ListDatabasesPages(input *ListDatabasesInput, fn func(*ListDatabasesOutput, bool) bool) error {",
          "686:  return c.ListDatabasesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "687: }",
          "696: func (c *RedshiftDataAPIService) ListDatabasesPagesWithContext(ctx aws.Context, input *ListDatabasesInput, fn func(*ListDatabasesOutput, bool) bool, opts ...request.Option) error {",
          "697:  p := request.Pagination{",
          "698:   NewRequest: func() (*request.Request, error) {",
          "699:    var inCpy *ListDatabasesInput",
          "700:    if input != nil {",
          "701:     tmp := *input",
          "702:     inCpy = &tmp",
          "703:    }",
          "704:    req, _ := c.ListDatabasesRequest(inCpy)",
          "705:    req.SetContext(ctx)",
          "706:    req.ApplyOptions(opts...)",
          "707:    return req, nil",
          "708:   },",
          "709:  }",
          "711:  for p.Next() {",
          "712:   if !fn(p.Page().(*ListDatabasesOutput), !p.HasNextPage()) {",
          "713:    break",
          "714:   }",
          "715:  }",
          "717:  return p.Err()",
          "718: }",
          "720: const opListSchemas = \"ListSchemas\"",
          "746: func (c *RedshiftDataAPIService) ListSchemasRequest(input *ListSchemasInput) (req *request.Request, output *ListSchemasOutput) {",
          "747:  op := &request.Operation{",
          "748:   Name:       opListSchemas,",
          "749:   HTTPMethod: \"POST\",",
          "750:   HTTPPath:   \"/\",",
          "751:   Paginator: &request.Paginator{",
          "752:    InputTokens:     []string{\"NextToken\"},",
          "753:    OutputTokens:    []string{\"NextToken\"},",
          "754:    LimitToken:      \"MaxResults\",",
          "755:    TruncationToken: \"\",",
          "756:   },",
          "757:  }",
          "759:  if input == nil {",
          "760:   input = &ListSchemasInput{}",
          "761:  }",
          "763:  output = &ListSchemasOutput{}",
          "764:  req = c.newRequest(op, input, output)",
          "765:  return",
          "766: }",
          "796: func (c *RedshiftDataAPIService) ListSchemas(input *ListSchemasInput) (*ListSchemasOutput, error) {",
          "797:  req, out := c.ListSchemasRequest(input)",
          "798:  return out, req.Send()",
          "799: }",
          "810: func (c *RedshiftDataAPIService) ListSchemasWithContext(ctx aws.Context, input *ListSchemasInput, opts ...request.Option) (*ListSchemasOutput, error) {",
          "811:  req, out := c.ListSchemasRequest(input)",
          "812:  req.SetContext(ctx)",
          "813:  req.ApplyOptions(opts...)",
          "814:  return out, req.Send()",
          "815: }",
          "834: func (c *RedshiftDataAPIService) ListSchemasPages(input *ListSchemasInput, fn func(*ListSchemasOutput, bool) bool) error {",
          "835:  return c.ListSchemasPagesWithContext(aws.BackgroundContext(), input, fn)",
          "836: }",
          "845: func (c *RedshiftDataAPIService) ListSchemasPagesWithContext(ctx aws.Context, input *ListSchemasInput, fn func(*ListSchemasOutput, bool) bool, opts ...request.Option) error {",
          "846:  p := request.Pagination{",
          "847:   NewRequest: func() (*request.Request, error) {",
          "848:    var inCpy *ListSchemasInput",
          "849:    if input != nil {",
          "850:     tmp := *input",
          "851:     inCpy = &tmp",
          "852:    }",
          "853:    req, _ := c.ListSchemasRequest(inCpy)",
          "854:    req.SetContext(ctx)",
          "855:    req.ApplyOptions(opts...)",
          "856:    return req, nil",
          "857:   },",
          "858:  }",
          "860:  for p.Next() {",
          "861:   if !fn(p.Page().(*ListSchemasOutput), !p.HasNextPage()) {",
          "862:    break",
          "863:   }",
          "864:  }",
          "866:  return p.Err()",
          "867: }",
          "869: const opListStatements = \"ListStatements\"",
          "895: func (c *RedshiftDataAPIService) ListStatementsRequest(input *ListStatementsInput) (req *request.Request, output *ListStatementsOutput) {",
          "896:  op := &request.Operation{",
          "897:   Name:       opListStatements,",
          "898:   HTTPMethod: \"POST\",",
          "899:   HTTPPath:   \"/\",",
          "900:   Paginator: &request.Paginator{",
          "901:    InputTokens:     []string{\"NextToken\"},",
          "902:    OutputTokens:    []string{\"NextToken\"},",
          "903:    LimitToken:      \"MaxResults\",",
          "904:    TruncationToken: \"\",",
          "905:   },",
          "906:  }",
          "908:  if input == nil {",
          "909:   input = &ListStatementsInput{}",
          "910:  }",
          "912:  output = &ListStatementsOutput{}",
          "913:  req = c.newRequest(op, input, output)",
          "914:  return",
          "915: }",
          "937: func (c *RedshiftDataAPIService) ListStatements(input *ListStatementsInput) (*ListStatementsOutput, error) {",
          "938:  req, out := c.ListStatementsRequest(input)",
          "939:  return out, req.Send()",
          "940: }",
          "951: func (c *RedshiftDataAPIService) ListStatementsWithContext(ctx aws.Context, input *ListStatementsInput, opts ...request.Option) (*ListStatementsOutput, error) {",
          "952:  req, out := c.ListStatementsRequest(input)",
          "953:  req.SetContext(ctx)",
          "954:  req.ApplyOptions(opts...)",
          "955:  return out, req.Send()",
          "956: }",
          "975: func (c *RedshiftDataAPIService) ListStatementsPages(input *ListStatementsInput, fn func(*ListStatementsOutput, bool) bool) error {",
          "976:  return c.ListStatementsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "977: }",
          "986: func (c *RedshiftDataAPIService) ListStatementsPagesWithContext(ctx aws.Context, input *ListStatementsInput, fn func(*ListStatementsOutput, bool) bool, opts ...request.Option) error {",
          "987:  p := request.Pagination{",
          "988:   NewRequest: func() (*request.Request, error) {",
          "989:    var inCpy *ListStatementsInput",
          "990:    if input != nil {",
          "991:     tmp := *input",
          "992:     inCpy = &tmp",
          "993:    }",
          "994:    req, _ := c.ListStatementsRequest(inCpy)",
          "995:    req.SetContext(ctx)",
          "996:    req.ApplyOptions(opts...)",
          "997:    return req, nil",
          "998:   },",
          "999:  }",
          "1001:  for p.Next() {",
          "1002:   if !fn(p.Page().(*ListStatementsOutput), !p.HasNextPage()) {",
          "1003:    break",
          "1004:   }",
          "1005:  }",
          "1007:  return p.Err()",
          "1008: }",
          "1010: const opListTables = \"ListTables\"",
          "1036: func (c *RedshiftDataAPIService) ListTablesRequest(input *ListTablesInput) (req *request.Request, output *ListTablesOutput) {",
          "1037:  op := &request.Operation{",
          "1038:   Name:       opListTables,",
          "1039:   HTTPMethod: \"POST\",",
          "1040:   HTTPPath:   \"/\",",
          "1041:   Paginator: &request.Paginator{",
          "1042:    InputTokens:     []string{\"NextToken\"},",
          "1043:    OutputTokens:    []string{\"NextToken\"},",
          "1044:    LimitToken:      \"MaxResults\",",
          "1045:    TruncationToken: \"\",",
          "1046:   },",
          "1047:  }",
          "1049:  if input == nil {",
          "1050:   input = &ListTablesInput{}",
          "1051:  }",
          "1053:  output = &ListTablesOutput{}",
          "1054:  req = c.newRequest(op, input, output)",
          "1055:  return",
          "1056: }",
          "1087: func (c *RedshiftDataAPIService) ListTables(input *ListTablesInput) (*ListTablesOutput, error) {",
          "1088:  req, out := c.ListTablesRequest(input)",
          "1089:  return out, req.Send()",
          "1090: }",
          "1101: func (c *RedshiftDataAPIService) ListTablesWithContext(ctx aws.Context, input *ListTablesInput, opts ...request.Option) (*ListTablesOutput, error) {",
          "1102:  req, out := c.ListTablesRequest(input)",
          "1103:  req.SetContext(ctx)",
          "1104:  req.ApplyOptions(opts...)",
          "1105:  return out, req.Send()",
          "1106: }",
          "1125: func (c *RedshiftDataAPIService) ListTablesPages(input *ListTablesInput, fn func(*ListTablesOutput, bool) bool) error {",
          "1126:  return c.ListTablesPagesWithContext(aws.BackgroundContext(), input, fn)",
          "1127: }",
          "1136: func (c *RedshiftDataAPIService) ListTablesPagesWithContext(ctx aws.Context, input *ListTablesInput, fn func(*ListTablesOutput, bool) bool, opts ...request.Option) error {",
          "1137:  p := request.Pagination{",
          "1138:   NewRequest: func() (*request.Request, error) {",
          "1139:    var inCpy *ListTablesInput",
          "1140:    if input != nil {",
          "1141:     tmp := *input",
          "1142:     inCpy = &tmp",
          "1143:    }",
          "1144:    req, _ := c.ListTablesRequest(inCpy)",
          "1145:    req.SetContext(ctx)",
          "1146:    req.ApplyOptions(opts...)",
          "1147:    return req, nil",
          "1148:   },",
          "1149:  }",
          "1151:  for p.Next() {",
          "1152:   if !fn(p.Page().(*ListTablesOutput), !p.HasNextPage()) {",
          "1153:    break",
          "1154:   }",
          "1155:  }",
          "1157:  return p.Err()",
          "1158: }",
          "1160: type CancelStatementInput struct {",
          "1161:  _ struct{} `type:\"structure\"`",
          "1168:  Id *string `type:\"string\" required:\"true\"`",
          "1169: }",
          "1172: func (s CancelStatementInput) String() string {",
          "1173:  return awsutil.Prettify(s)",
          "1174: }",
          "1177: func (s CancelStatementInput) GoString() string {",
          "1178:  return s.String()",
          "1179: }",
          "1182: func (s *CancelStatementInput) Validate() error {",
          "1183:  invalidParams := request.ErrInvalidParams{Context: \"CancelStatementInput\"}",
          "1184:  if s.Id == nil {",
          "1185:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "1186:  }",
          "1188:  if invalidParams.Len() > 0 {",
          "1189:   return invalidParams",
          "1190:  }",
          "1191:  return nil",
          "1192: }",
          "1195: func (s *CancelStatementInput) SetId(v string) *CancelStatementInput {",
          "1196:  s.Id = &v",
          "1197:  return s",
          "1198: }",
          "1200: type CancelStatementOutput struct {",
          "1201:  _ struct{} `type:\"structure\"`",
          "1204:  Status *bool `type:\"boolean\"`",
          "1205: }",
          "1208: func (s CancelStatementOutput) String() string {",
          "1209:  return awsutil.Prettify(s)",
          "1210: }",
          "1213: func (s CancelStatementOutput) GoString() string {",
          "1214:  return s.String()",
          "1215: }",
          "1218: func (s *CancelStatementOutput) SetStatus(v bool) *CancelStatementOutput {",
          "1219:  s.Status = &v",
          "1220:  return s",
          "1221: }",
          "1224: type ColumnMetadata struct {",
          "1225:  _ struct{} `type:\"structure\"`",
          "1228:  ColumnDefault *string `locationName:\"columnDefault\" type:\"string\"`",
          "1231:  IsCaseSensitive *bool `locationName:\"isCaseSensitive\" type:\"boolean\"`",
          "1234:  IsCurrency *bool `locationName:\"isCurrency\" type:\"boolean\"`",
          "1237:  IsSigned *bool `locationName:\"isSigned\" type:\"boolean\"`",
          "1240:  Label *string `locationName:\"label\" type:\"string\"`",
          "1243:  Length *int64 `locationName:\"length\" type:\"integer\"`",
          "1246:  Name *string `locationName:\"name\" type:\"string\"`",
          "1249:  Nullable *int64 `locationName:\"nullable\" type:\"integer\"`",
          "1252:  Precision *int64 `locationName:\"precision\" type:\"integer\"`",
          "1255:  Scale *int64 `locationName:\"scale\" type:\"integer\"`",
          "1258:  SchemaName *string `locationName:\"schemaName\" type:\"string\"`",
          "1261:  TableName *string `locationName:\"tableName\" type:\"string\"`",
          "1264:  TypeName *string `locationName:\"typeName\" type:\"string\"`",
          "1265: }",
          "1268: func (s ColumnMetadata) String() string {",
          "1269:  return awsutil.Prettify(s)",
          "1270: }",
          "1273: func (s ColumnMetadata) GoString() string {",
          "1274:  return s.String()",
          "1275: }",
          "1278: func (s *ColumnMetadata) SetColumnDefault(v string) *ColumnMetadata {",
          "1279:  s.ColumnDefault = &v",
          "1280:  return s",
          "1281: }",
          "1284: func (s *ColumnMetadata) SetIsCaseSensitive(v bool) *ColumnMetadata {",
          "1285:  s.IsCaseSensitive = &v",
          "1286:  return s",
          "1287: }",
          "1290: func (s *ColumnMetadata) SetIsCurrency(v bool) *ColumnMetadata {",
          "1291:  s.IsCurrency = &v",
          "1292:  return s",
          "1293: }",
          "1296: func (s *ColumnMetadata) SetIsSigned(v bool) *ColumnMetadata {",
          "1297:  s.IsSigned = &v",
          "1298:  return s",
          "1299: }",
          "1302: func (s *ColumnMetadata) SetLabel(v string) *ColumnMetadata {",
          "1303:  s.Label = &v",
          "1304:  return s",
          "1305: }",
          "1308: func (s *ColumnMetadata) SetLength(v int64) *ColumnMetadata {",
          "1309:  s.Length = &v",
          "1310:  return s",
          "1311: }",
          "1314: func (s *ColumnMetadata) SetName(v string) *ColumnMetadata {",
          "1315:  s.Name = &v",
          "1316:  return s",
          "1317: }",
          "1320: func (s *ColumnMetadata) SetNullable(v int64) *ColumnMetadata {",
          "1321:  s.Nullable = &v",
          "1322:  return s",
          "1323: }",
          "1326: func (s *ColumnMetadata) SetPrecision(v int64) *ColumnMetadata {",
          "1327:  s.Precision = &v",
          "1328:  return s",
          "1329: }",
          "1332: func (s *ColumnMetadata) SetScale(v int64) *ColumnMetadata {",
          "1333:  s.Scale = &v",
          "1334:  return s",
          "1335: }",
          "1338: func (s *ColumnMetadata) SetSchemaName(v string) *ColumnMetadata {",
          "1339:  s.SchemaName = &v",
          "1340:  return s",
          "1341: }",
          "1344: func (s *ColumnMetadata) SetTableName(v string) *ColumnMetadata {",
          "1345:  s.TableName = &v",
          "1346:  return s",
          "1347: }",
          "1350: func (s *ColumnMetadata) SetTypeName(v string) *ColumnMetadata {",
          "1351:  s.TypeName = &v",
          "1352:  return s",
          "1353: }",
          "1355: type DescribeStatementInput struct {",
          "1356:  _ struct{} `type:\"structure\"`",
          "1363:  Id *string `type:\"string\" required:\"true\"`",
          "1364: }",
          "1367: func (s DescribeStatementInput) String() string {",
          "1368:  return awsutil.Prettify(s)",
          "1369: }",
          "1372: func (s DescribeStatementInput) GoString() string {",
          "1373:  return s.String()",
          "1374: }",
          "1377: func (s *DescribeStatementInput) Validate() error {",
          "1378:  invalidParams := request.ErrInvalidParams{Context: \"DescribeStatementInput\"}",
          "1379:  if s.Id == nil {",
          "1380:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "1381:  }",
          "1383:  if invalidParams.Len() > 0 {",
          "1384:   return invalidParams",
          "1385:  }",
          "1386:  return nil",
          "1387: }",
          "1390: func (s *DescribeStatementInput) SetId(v string) *DescribeStatementInput {",
          "1391:  s.Id = &v",
          "1392:  return s",
          "1393: }",
          "1395: type DescribeStatementOutput struct {",
          "1396:  _ struct{} `type:\"structure\"`",
          "1399:  ClusterIdentifier *string `type:\"string\"`",
          "1402:  CreatedAt *time.Time `type:\"timestamp\"`",
          "1405:  Database *string `type:\"string\"`",
          "1408:  DbUser *string `type:\"string\"`",
          "1411:  Duration *int64 `type:\"long\"`",
          "1415:  Error *string `type:\"string\"`",
          "1421:  Id *string `type:\"string\" required:\"true\"`",
          "1424:  QueryString *string `type:\"string\"`",
          "1427:  RedshiftPid *int64 `type:\"long\"`",
          "1431:  RedshiftQueryId *int64 `type:\"long\"`",
          "1437:  ResultRows *int64 `type:\"long\"`",
          "1440:  ResultSize *int64 `type:\"long\"`",
          "1444:  SecretArn *string `type:\"string\"`",
          "1463:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "1467:  UpdatedAt *time.Time `type:\"timestamp\"`",
          "1468: }",
          "1471: func (s DescribeStatementOutput) String() string {",
          "1472:  return awsutil.Prettify(s)",
          "1473: }",
          "1476: func (s DescribeStatementOutput) GoString() string {",
          "1477:  return s.String()",
          "1478: }",
          "1481: func (s *DescribeStatementOutput) SetClusterIdentifier(v string) *DescribeStatementOutput {",
          "1482:  s.ClusterIdentifier = &v",
          "1483:  return s",
          "1484: }",
          "1487: func (s *DescribeStatementOutput) SetCreatedAt(v time.Time) *DescribeStatementOutput {",
          "1488:  s.CreatedAt = &v",
          "1489:  return s",
          "1490: }",
          "1493: func (s *DescribeStatementOutput) SetDatabase(v string) *DescribeStatementOutput {",
          "1494:  s.Database = &v",
          "1495:  return s",
          "1496: }",
          "1499: func (s *DescribeStatementOutput) SetDbUser(v string) *DescribeStatementOutput {",
          "1500:  s.DbUser = &v",
          "1501:  return s",
          "1502: }",
          "1505: func (s *DescribeStatementOutput) SetDuration(v int64) *DescribeStatementOutput {",
          "1506:  s.Duration = &v",
          "1507:  return s",
          "1508: }",
          "1511: func (s *DescribeStatementOutput) SetError(v string) *DescribeStatementOutput {",
          "1512:  s.Error = &v",
          "1513:  return s",
          "1514: }",
          "1517: func (s *DescribeStatementOutput) SetId(v string) *DescribeStatementOutput {",
          "1518:  s.Id = &v",
          "1519:  return s",
          "1520: }",
          "1523: func (s *DescribeStatementOutput) SetQueryString(v string) *DescribeStatementOutput {",
          "1524:  s.QueryString = &v",
          "1525:  return s",
          "1526: }",
          "1529: func (s *DescribeStatementOutput) SetRedshiftPid(v int64) *DescribeStatementOutput {",
          "1530:  s.RedshiftPid = &v",
          "1531:  return s",
          "1532: }",
          "1535: func (s *DescribeStatementOutput) SetRedshiftQueryId(v int64) *DescribeStatementOutput {",
          "1536:  s.RedshiftQueryId = &v",
          "1537:  return s",
          "1538: }",
          "1541: func (s *DescribeStatementOutput) SetResultRows(v int64) *DescribeStatementOutput {",
          "1542:  s.ResultRows = &v",
          "1543:  return s",
          "1544: }",
          "1547: func (s *DescribeStatementOutput) SetResultSize(v int64) *DescribeStatementOutput {",
          "1548:  s.ResultSize = &v",
          "1549:  return s",
          "1550: }",
          "1553: func (s *DescribeStatementOutput) SetSecretArn(v string) *DescribeStatementOutput {",
          "1554:  s.SecretArn = &v",
          "1555:  return s",
          "1556: }",
          "1559: func (s *DescribeStatementOutput) SetStatus(v string) *DescribeStatementOutput {",
          "1560:  s.Status = &v",
          "1561:  return s",
          "1562: }",
          "1565: func (s *DescribeStatementOutput) SetUpdatedAt(v time.Time) *DescribeStatementOutput {",
          "1566:  s.UpdatedAt = &v",
          "1567:  return s",
          "1568: }",
          "1570: type DescribeTableInput struct {",
          "1571:  _ struct{} `type:\"structure\"`",
          "1577:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "1581:  Database *string `type:\"string\"`",
          "1585:  DbUser *string `type:\"string\"`",
          "1590:  MaxResults *int64 `type:\"integer\"`",
          "1597:  NextToken *string `type:\"string\"`",
          "1601:  Schema *string `type:\"string\"`",
          "1605:  SecretArn *string `type:\"string\"`",
          "1610:  Table *string `type:\"string\"`",
          "1611: }",
          "1614: func (s DescribeTableInput) String() string {",
          "1615:  return awsutil.Prettify(s)",
          "1616: }",
          "1619: func (s DescribeTableInput) GoString() string {",
          "1620:  return s.String()",
          "1621: }",
          "1624: func (s *DescribeTableInput) Validate() error {",
          "1625:  invalidParams := request.ErrInvalidParams{Context: \"DescribeTableInput\"}",
          "1626:  if s.ClusterIdentifier == nil {",
          "1627:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "1628:  }",
          "1630:  if invalidParams.Len() > 0 {",
          "1631:   return invalidParams",
          "1632:  }",
          "1633:  return nil",
          "1634: }",
          "1637: func (s *DescribeTableInput) SetClusterIdentifier(v string) *DescribeTableInput {",
          "1638:  s.ClusterIdentifier = &v",
          "1639:  return s",
          "1640: }",
          "1643: func (s *DescribeTableInput) SetDatabase(v string) *DescribeTableInput {",
          "1644:  s.Database = &v",
          "1645:  return s",
          "1646: }",
          "1649: func (s *DescribeTableInput) SetDbUser(v string) *DescribeTableInput {",
          "1650:  s.DbUser = &v",
          "1651:  return s",
          "1652: }",
          "1655: func (s *DescribeTableInput) SetMaxResults(v int64) *DescribeTableInput {",
          "1656:  s.MaxResults = &v",
          "1657:  return s",
          "1658: }",
          "1661: func (s *DescribeTableInput) SetNextToken(v string) *DescribeTableInput {",
          "1662:  s.NextToken = &v",
          "1663:  return s",
          "1664: }",
          "1667: func (s *DescribeTableInput) SetSchema(v string) *DescribeTableInput {",
          "1668:  s.Schema = &v",
          "1669:  return s",
          "1670: }",
          "1673: func (s *DescribeTableInput) SetSecretArn(v string) *DescribeTableInput {",
          "1674:  s.SecretArn = &v",
          "1675:  return s",
          "1676: }",
          "1679: func (s *DescribeTableInput) SetTable(v string) *DescribeTableInput {",
          "1680:  s.Table = &v",
          "1681:  return s",
          "1682: }",
          "1684: type DescribeTableOutput struct {",
          "1685:  _ struct{} `type:\"structure\"`",
          "1688:  ColumnList []*ColumnMetadata `type:\"list\"`",
          "1695:  NextToken *string `type:\"string\"`",
          "1698:  TableName *string `type:\"string\"`",
          "1699: }",
          "1702: func (s DescribeTableOutput) String() string {",
          "1703:  return awsutil.Prettify(s)",
          "1704: }",
          "1707: func (s DescribeTableOutput) GoString() string {",
          "1708:  return s.String()",
          "1709: }",
          "1712: func (s *DescribeTableOutput) SetColumnList(v []*ColumnMetadata) *DescribeTableOutput {",
          "1713:  s.ColumnList = v",
          "1714:  return s",
          "1715: }",
          "1718: func (s *DescribeTableOutput) SetNextToken(v string) *DescribeTableOutput {",
          "1719:  s.NextToken = &v",
          "1720:  return s",
          "1721: }",
          "1724: func (s *DescribeTableOutput) SetTableName(v string) *DescribeTableOutput {",
          "1725:  s.TableName = &v",
          "1726:  return s",
          "1727: }",
          "1730: type ExecuteStatementException struct {",
          "1731:  _            struct{}                  `type:\"structure\"`",
          "1732:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "1735:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "1740:  StatementId *string `type:\"string\" required:\"true\"`",
          "1741: }",
          "1744: func (s ExecuteStatementException) String() string {",
          "1745:  return awsutil.Prettify(s)",
          "1746: }",
          "1749: func (s ExecuteStatementException) GoString() string {",
          "1750:  return s.String()",
          "1751: }",
          "1753: func newErrorExecuteStatementException(v protocol.ResponseMetadata) error {",
          "1754:  return &ExecuteStatementException{",
          "1755:   RespMetadata: v,",
          "1756:  }",
          "1757: }",
          "1760: func (s *ExecuteStatementException) Code() string {",
          "1761:  return \"ExecuteStatementException\"",
          "1762: }",
          "1765: func (s *ExecuteStatementException) Message() string {",
          "1766:  if s.Message_ != nil {",
          "1767:   return *s.Message_",
          "1768:  }",
          "1769:  return \"\"",
          "1770: }",
          "1773: func (s *ExecuteStatementException) OrigErr() error {",
          "1774:  return nil",
          "1775: }",
          "1777: func (s *ExecuteStatementException) Error() string {",
          "1778:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "1779: }",
          "1782: func (s *ExecuteStatementException) StatusCode() int {",
          "1783:  return s.RespMetadata.StatusCode",
          "1784: }",
          "1787: func (s *ExecuteStatementException) RequestID() string {",
          "1788:  return s.RespMetadata.RequestID",
          "1789: }",
          "1791: type ExecuteStatementInput struct {",
          "1792:  _ struct{} `type:\"structure\"`",
          "1798:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "1802:  Database *string `type:\"string\"`",
          "1806:  DbUser *string `type:\"string\"`",
          "1810:  SecretArn *string `type:\"string\"`",
          "1815:  Sql *string `type:\"string\" required:\"true\"`",
          "1819:  StatementName *string `type:\"string\"`",
          "1823:  WithEvent *bool `type:\"boolean\"`",
          "1824: }",
          "1827: func (s ExecuteStatementInput) String() string {",
          "1828:  return awsutil.Prettify(s)",
          "1829: }",
          "1832: func (s ExecuteStatementInput) GoString() string {",
          "1833:  return s.String()",
          "1834: }",
          "1837: func (s *ExecuteStatementInput) Validate() error {",
          "1838:  invalidParams := request.ErrInvalidParams{Context: \"ExecuteStatementInput\"}",
          "1839:  if s.ClusterIdentifier == nil {",
          "1840:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "1841:  }",
          "1842:  if s.Sql == nil {",
          "1843:   invalidParams.Add(request.NewErrParamRequired(\"Sql\"))",
          "1844:  }",
          "1846:  if invalidParams.Len() > 0 {",
          "1847:   return invalidParams",
          "1848:  }",
          "1849:  return nil",
          "1850: }",
          "1853: func (s *ExecuteStatementInput) SetClusterIdentifier(v string) *ExecuteStatementInput {",
          "1854:  s.ClusterIdentifier = &v",
          "1855:  return s",
          "1856: }",
          "1859: func (s *ExecuteStatementInput) SetDatabase(v string) *ExecuteStatementInput {",
          "1860:  s.Database = &v",
          "1861:  return s",
          "1862: }",
          "1865: func (s *ExecuteStatementInput) SetDbUser(v string) *ExecuteStatementInput {",
          "1866:  s.DbUser = &v",
          "1867:  return s",
          "1868: }",
          "1871: func (s *ExecuteStatementInput) SetSecretArn(v string) *ExecuteStatementInput {",
          "1872:  s.SecretArn = &v",
          "1873:  return s",
          "1874: }",
          "1877: func (s *ExecuteStatementInput) SetSql(v string) *ExecuteStatementInput {",
          "1878:  s.Sql = &v",
          "1879:  return s",
          "1880: }",
          "1883: func (s *ExecuteStatementInput) SetStatementName(v string) *ExecuteStatementInput {",
          "1884:  s.StatementName = &v",
          "1885:  return s",
          "1886: }",
          "1889: func (s *ExecuteStatementInput) SetWithEvent(v bool) *ExecuteStatementInput {",
          "1890:  s.WithEvent = &v",
          "1891:  return s",
          "1892: }",
          "1894: type ExecuteStatementOutput struct {",
          "1895:  _ struct{} `type:\"structure\"`",
          "1898:  ClusterIdentifier *string `type:\"string\"`",
          "1901:  CreatedAt *time.Time `type:\"timestamp\"`",
          "1904:  Database *string `type:\"string\"`",
          "1907:  DbUser *string `type:\"string\"`",
          "1911:  Id *string `type:\"string\"`",
          "1914:  SecretArn *string `type:\"string\"`",
          "1915: }",
          "1918: func (s ExecuteStatementOutput) String() string {",
          "1919:  return awsutil.Prettify(s)",
          "1920: }",
          "1923: func (s ExecuteStatementOutput) GoString() string {",
          "1924:  return s.String()",
          "1925: }",
          "1928: func (s *ExecuteStatementOutput) SetClusterIdentifier(v string) *ExecuteStatementOutput {",
          "1929:  s.ClusterIdentifier = &v",
          "1930:  return s",
          "1931: }",
          "1934: func (s *ExecuteStatementOutput) SetCreatedAt(v time.Time) *ExecuteStatementOutput {",
          "1935:  s.CreatedAt = &v",
          "1936:  return s",
          "1937: }",
          "1940: func (s *ExecuteStatementOutput) SetDatabase(v string) *ExecuteStatementOutput {",
          "1941:  s.Database = &v",
          "1942:  return s",
          "1943: }",
          "1946: func (s *ExecuteStatementOutput) SetDbUser(v string) *ExecuteStatementOutput {",
          "1947:  s.DbUser = &v",
          "1948:  return s",
          "1949: }",
          "1952: func (s *ExecuteStatementOutput) SetId(v string) *ExecuteStatementOutput {",
          "1953:  s.Id = &v",
          "1954:  return s",
          "1955: }",
          "1958: func (s *ExecuteStatementOutput) SetSecretArn(v string) *ExecuteStatementOutput {",
          "1959:  s.SecretArn = &v",
          "1960:  return s",
          "1961: }",
          "1964: type Field struct {",
          "1965:  _ struct{} `type:\"structure\"`",
          "1970:  BlobValue []byte `locationName:\"blobValue\" type:\"blob\"`",
          "1973:  BooleanValue *bool `locationName:\"booleanValue\" type:\"boolean\"`",
          "1976:  DoubleValue *float64 `locationName:\"doubleValue\" type:\"double\"`",
          "1979:  IsNull *bool `locationName:\"isNull\" type:\"boolean\"`",
          "1982:  LongValue *int64 `locationName:\"longValue\" type:\"long\"`",
          "1985:  StringValue *string `locationName:\"stringValue\" type:\"string\"`",
          "1986: }",
          "1989: func (s Field) String() string {",
          "1990:  return awsutil.Prettify(s)",
          "1991: }",
          "1994: func (s Field) GoString() string {",
          "1995:  return s.String()",
          "1996: }",
          "1999: func (s *Field) SetBlobValue(v []byte) *Field {",
          "2000:  s.BlobValue = v",
          "2001:  return s",
          "2002: }",
          "2005: func (s *Field) SetBooleanValue(v bool) *Field {",
          "2006:  s.BooleanValue = &v",
          "2007:  return s",
          "2008: }",
          "2011: func (s *Field) SetDoubleValue(v float64) *Field {",
          "2012:  s.DoubleValue = &v",
          "2013:  return s",
          "2014: }",
          "2017: func (s *Field) SetIsNull(v bool) *Field {",
          "2018:  s.IsNull = &v",
          "2019:  return s",
          "2020: }",
          "2023: func (s *Field) SetLongValue(v int64) *Field {",
          "2024:  s.LongValue = &v",
          "2025:  return s",
          "2026: }",
          "2029: func (s *Field) SetStringValue(v string) *Field {",
          "2030:  s.StringValue = &v",
          "2031:  return s",
          "2032: }",
          "2034: type GetStatementResultInput struct {",
          "2035:  _ struct{} `type:\"structure\"`",
          "2042:  Id *string `type:\"string\" required:\"true\"`",
          "2049:  NextToken *string `type:\"string\"`",
          "2050: }",
          "2053: func (s GetStatementResultInput) String() string {",
          "2054:  return awsutil.Prettify(s)",
          "2055: }",
          "2058: func (s GetStatementResultInput) GoString() string {",
          "2059:  return s.String()",
          "2060: }",
          "2063: func (s *GetStatementResultInput) Validate() error {",
          "2064:  invalidParams := request.ErrInvalidParams{Context: \"GetStatementResultInput\"}",
          "2065:  if s.Id == nil {",
          "2066:   invalidParams.Add(request.NewErrParamRequired(\"Id\"))",
          "2067:  }",
          "2069:  if invalidParams.Len() > 0 {",
          "2070:   return invalidParams",
          "2071:  }",
          "2072:  return nil",
          "2073: }",
          "2076: func (s *GetStatementResultInput) SetId(v string) *GetStatementResultInput {",
          "2077:  s.Id = &v",
          "2078:  return s",
          "2079: }",
          "2082: func (s *GetStatementResultInput) SetNextToken(v string) *GetStatementResultInput {",
          "2083:  s.NextToken = &v",
          "2084:  return s",
          "2085: }",
          "2087: type GetStatementResultOutput struct {",
          "2088:  _ struct{} `type:\"structure\"`",
          "2091:  ColumnMetadata []*ColumnMetadata `type:\"list\"`",
          "2098:  NextToken *string `type:\"string\"`",
          "2103:  Records [][]*Field `type:\"list\" required:\"true\"`",
          "2108:  TotalNumRows *int64 `type:\"long\"`",
          "2109: }",
          "2112: func (s GetStatementResultOutput) String() string {",
          "2113:  return awsutil.Prettify(s)",
          "2114: }",
          "2117: func (s GetStatementResultOutput) GoString() string {",
          "2118:  return s.String()",
          "2119: }",
          "2122: func (s *GetStatementResultOutput) SetColumnMetadata(v []*ColumnMetadata) *GetStatementResultOutput {",
          "2123:  s.ColumnMetadata = v",
          "2124:  return s",
          "2125: }",
          "2128: func (s *GetStatementResultOutput) SetNextToken(v string) *GetStatementResultOutput {",
          "2129:  s.NextToken = &v",
          "2130:  return s",
          "2131: }",
          "2134: func (s *GetStatementResultOutput) SetRecords(v [][]*Field) *GetStatementResultOutput {",
          "2135:  s.Records = v",
          "2136:  return s",
          "2137: }",
          "2140: func (s *GetStatementResultOutput) SetTotalNumRows(v int64) *GetStatementResultOutput {",
          "2141:  s.TotalNumRows = &v",
          "2142:  return s",
          "2143: }",
          "2146: type InternalServerException struct {",
          "2147:  _            struct{}                  `type:\"structure\"`",
          "2148:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2151:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2152: }",
          "2155: func (s InternalServerException) String() string {",
          "2156:  return awsutil.Prettify(s)",
          "2157: }",
          "2160: func (s InternalServerException) GoString() string {",
          "2161:  return s.String()",
          "2162: }",
          "2164: func newErrorInternalServerException(v protocol.ResponseMetadata) error {",
          "2165:  return &InternalServerException{",
          "2166:   RespMetadata: v,",
          "2167:  }",
          "2168: }",
          "2171: func (s *InternalServerException) Code() string {",
          "2172:  return \"InternalServerException\"",
          "2173: }",
          "2176: func (s *InternalServerException) Message() string {",
          "2177:  if s.Message_ != nil {",
          "2178:   return *s.Message_",
          "2179:  }",
          "2180:  return \"\"",
          "2181: }",
          "2184: func (s *InternalServerException) OrigErr() error {",
          "2185:  return nil",
          "2186: }",
          "2188: func (s *InternalServerException) Error() string {",
          "2189:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2190: }",
          "2193: func (s *InternalServerException) StatusCode() int {",
          "2194:  return s.RespMetadata.StatusCode",
          "2195: }",
          "2198: func (s *InternalServerException) RequestID() string {",
          "2199:  return s.RespMetadata.RequestID",
          "2200: }",
          "2202: type ListDatabasesInput struct {",
          "2203:  _ struct{} `type:\"structure\"`",
          "2209:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2213:  Database *string `type:\"string\"`",
          "2217:  DbUser *string `type:\"string\"`",
          "2222:  MaxResults *int64 `type:\"integer\"`",
          "2229:  NextToken *string `type:\"string\"`",
          "2233:  SecretArn *string `type:\"string\"`",
          "2234: }",
          "2237: func (s ListDatabasesInput) String() string {",
          "2238:  return awsutil.Prettify(s)",
          "2239: }",
          "2242: func (s ListDatabasesInput) GoString() string {",
          "2243:  return s.String()",
          "2244: }",
          "2247: func (s *ListDatabasesInput) Validate() error {",
          "2248:  invalidParams := request.ErrInvalidParams{Context: \"ListDatabasesInput\"}",
          "2249:  if s.ClusterIdentifier == nil {",
          "2250:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2251:  }",
          "2253:  if invalidParams.Len() > 0 {",
          "2254:   return invalidParams",
          "2255:  }",
          "2256:  return nil",
          "2257: }",
          "2260: func (s *ListDatabasesInput) SetClusterIdentifier(v string) *ListDatabasesInput {",
          "2261:  s.ClusterIdentifier = &v",
          "2262:  return s",
          "2263: }",
          "2266: func (s *ListDatabasesInput) SetDatabase(v string) *ListDatabasesInput {",
          "2267:  s.Database = &v",
          "2268:  return s",
          "2269: }",
          "2272: func (s *ListDatabasesInput) SetDbUser(v string) *ListDatabasesInput {",
          "2273:  s.DbUser = &v",
          "2274:  return s",
          "2275: }",
          "2278: func (s *ListDatabasesInput) SetMaxResults(v int64) *ListDatabasesInput {",
          "2279:  s.MaxResults = &v",
          "2280:  return s",
          "2281: }",
          "2284: func (s *ListDatabasesInput) SetNextToken(v string) *ListDatabasesInput {",
          "2285:  s.NextToken = &v",
          "2286:  return s",
          "2287: }",
          "2290: func (s *ListDatabasesInput) SetSecretArn(v string) *ListDatabasesInput {",
          "2291:  s.SecretArn = &v",
          "2292:  return s",
          "2293: }",
          "2295: type ListDatabasesOutput struct {",
          "2296:  _ struct{} `type:\"structure\"`",
          "2299:  Databases []*string `type:\"list\"`",
          "2306:  NextToken *string `type:\"string\"`",
          "2307: }",
          "2310: func (s ListDatabasesOutput) String() string {",
          "2311:  return awsutil.Prettify(s)",
          "2312: }",
          "2315: func (s ListDatabasesOutput) GoString() string {",
          "2316:  return s.String()",
          "2317: }",
          "2320: func (s *ListDatabasesOutput) SetDatabases(v []*string) *ListDatabasesOutput {",
          "2321:  s.Databases = v",
          "2322:  return s",
          "2323: }",
          "2326: func (s *ListDatabasesOutput) SetNextToken(v string) *ListDatabasesOutput {",
          "2327:  s.NextToken = &v",
          "2328:  return s",
          "2329: }",
          "2331: type ListSchemasInput struct {",
          "2332:  _ struct{} `type:\"structure\"`",
          "2338:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2344:  Database *string `type:\"string\" required:\"true\"`",
          "2348:  DbUser *string `type:\"string\"`",
          "2353:  MaxResults *int64 `type:\"integer\"`",
          "2360:  NextToken *string `type:\"string\"`",
          "2365:  SchemaPattern *string `type:\"string\"`",
          "2369:  SecretArn *string `type:\"string\"`",
          "2370: }",
          "2373: func (s ListSchemasInput) String() string {",
          "2374:  return awsutil.Prettify(s)",
          "2375: }",
          "2378: func (s ListSchemasInput) GoString() string {",
          "2379:  return s.String()",
          "2380: }",
          "2383: func (s *ListSchemasInput) Validate() error {",
          "2384:  invalidParams := request.ErrInvalidParams{Context: \"ListSchemasInput\"}",
          "2385:  if s.ClusterIdentifier == nil {",
          "2386:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2387:  }",
          "2388:  if s.Database == nil {",
          "2389:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "2390:  }",
          "2392:  if invalidParams.Len() > 0 {",
          "2393:   return invalidParams",
          "2394:  }",
          "2395:  return nil",
          "2396: }",
          "2399: func (s *ListSchemasInput) SetClusterIdentifier(v string) *ListSchemasInput {",
          "2400:  s.ClusterIdentifier = &v",
          "2401:  return s",
          "2402: }",
          "2405: func (s *ListSchemasInput) SetDatabase(v string) *ListSchemasInput {",
          "2406:  s.Database = &v",
          "2407:  return s",
          "2408: }",
          "2411: func (s *ListSchemasInput) SetDbUser(v string) *ListSchemasInput {",
          "2412:  s.DbUser = &v",
          "2413:  return s",
          "2414: }",
          "2417: func (s *ListSchemasInput) SetMaxResults(v int64) *ListSchemasInput {",
          "2418:  s.MaxResults = &v",
          "2419:  return s",
          "2420: }",
          "2423: func (s *ListSchemasInput) SetNextToken(v string) *ListSchemasInput {",
          "2424:  s.NextToken = &v",
          "2425:  return s",
          "2426: }",
          "2429: func (s *ListSchemasInput) SetSchemaPattern(v string) *ListSchemasInput {",
          "2430:  s.SchemaPattern = &v",
          "2431:  return s",
          "2432: }",
          "2435: func (s *ListSchemasInput) SetSecretArn(v string) *ListSchemasInput {",
          "2436:  s.SecretArn = &v",
          "2437:  return s",
          "2438: }",
          "2440: type ListSchemasOutput struct {",
          "2441:  _ struct{} `type:\"structure\"`",
          "2448:  NextToken *string `type:\"string\"`",
          "2451:  Schemas []*string `type:\"list\"`",
          "2452: }",
          "2455: func (s ListSchemasOutput) String() string {",
          "2456:  return awsutil.Prettify(s)",
          "2457: }",
          "2460: func (s ListSchemasOutput) GoString() string {",
          "2461:  return s.String()",
          "2462: }",
          "2465: func (s *ListSchemasOutput) SetNextToken(v string) *ListSchemasOutput {",
          "2466:  s.NextToken = &v",
          "2467:  return s",
          "2468: }",
          "2471: func (s *ListSchemasOutput) SetSchemas(v []*string) *ListSchemasOutput {",
          "2472:  s.Schemas = v",
          "2473:  return s",
          "2474: }",
          "2476: type ListStatementsInput struct {",
          "2477:  _ struct{} `type:\"structure\"`",
          "2482:  MaxResults *int64 `type:\"integer\"`",
          "2489:  NextToken *string `type:\"string\"`",
          "2497:  StatementName *string `type:\"string\"`",
          "2515:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "2516: }",
          "2519: func (s ListStatementsInput) String() string {",
          "2520:  return awsutil.Prettify(s)",
          "2521: }",
          "2524: func (s ListStatementsInput) GoString() string {",
          "2525:  return s.String()",
          "2526: }",
          "2529: func (s *ListStatementsInput) SetMaxResults(v int64) *ListStatementsInput {",
          "2530:  s.MaxResults = &v",
          "2531:  return s",
          "2532: }",
          "2535: func (s *ListStatementsInput) SetNextToken(v string) *ListStatementsInput {",
          "2536:  s.NextToken = &v",
          "2537:  return s",
          "2538: }",
          "2541: func (s *ListStatementsInput) SetStatementName(v string) *ListStatementsInput {",
          "2542:  s.StatementName = &v",
          "2543:  return s",
          "2544: }",
          "2547: func (s *ListStatementsInput) SetStatus(v string) *ListStatementsInput {",
          "2548:  s.Status = &v",
          "2549:  return s",
          "2550: }",
          "2552: type ListStatementsOutput struct {",
          "2553:  _ struct{} `type:\"structure\"`",
          "2560:  NextToken *string `type:\"string\"`",
          "2565:  Statements []*StatementData `type:\"list\" required:\"true\"`",
          "2566: }",
          "2569: func (s ListStatementsOutput) String() string {",
          "2570:  return awsutil.Prettify(s)",
          "2571: }",
          "2574: func (s ListStatementsOutput) GoString() string {",
          "2575:  return s.String()",
          "2576: }",
          "2579: func (s *ListStatementsOutput) SetNextToken(v string) *ListStatementsOutput {",
          "2580:  s.NextToken = &v",
          "2581:  return s",
          "2582: }",
          "2585: func (s *ListStatementsOutput) SetStatements(v []*StatementData) *ListStatementsOutput {",
          "2586:  s.Statements = v",
          "2587:  return s",
          "2588: }",
          "2590: type ListTablesInput struct {",
          "2591:  _ struct{} `type:\"structure\"`",
          "2597:  ClusterIdentifier *string `type:\"string\" required:\"true\"`",
          "2603:  Database *string `type:\"string\" required:\"true\"`",
          "2607:  DbUser *string `type:\"string\"`",
          "2612:  MaxResults *int64 `type:\"integer\"`",
          "2619:  NextToken *string `type:\"string\"`",
          "2627:  SchemaPattern *string `type:\"string\"`",
          "2631:  SecretArn *string `type:\"string\"`",
          "2639:  TablePattern *string `type:\"string\"`",
          "2640: }",
          "2643: func (s ListTablesInput) String() string {",
          "2644:  return awsutil.Prettify(s)",
          "2645: }",
          "2648: func (s ListTablesInput) GoString() string {",
          "2649:  return s.String()",
          "2650: }",
          "2653: func (s *ListTablesInput) Validate() error {",
          "2654:  invalidParams := request.ErrInvalidParams{Context: \"ListTablesInput\"}",
          "2655:  if s.ClusterIdentifier == nil {",
          "2656:   invalidParams.Add(request.NewErrParamRequired(\"ClusterIdentifier\"))",
          "2657:  }",
          "2658:  if s.Database == nil {",
          "2659:   invalidParams.Add(request.NewErrParamRequired(\"Database\"))",
          "2660:  }",
          "2662:  if invalidParams.Len() > 0 {",
          "2663:   return invalidParams",
          "2664:  }",
          "2665:  return nil",
          "2666: }",
          "2669: func (s *ListTablesInput) SetClusterIdentifier(v string) *ListTablesInput {",
          "2670:  s.ClusterIdentifier = &v",
          "2671:  return s",
          "2672: }",
          "2675: func (s *ListTablesInput) SetDatabase(v string) *ListTablesInput {",
          "2676:  s.Database = &v",
          "2677:  return s",
          "2678: }",
          "2681: func (s *ListTablesInput) SetDbUser(v string) *ListTablesInput {",
          "2682:  s.DbUser = &v",
          "2683:  return s",
          "2684: }",
          "2687: func (s *ListTablesInput) SetMaxResults(v int64) *ListTablesInput {",
          "2688:  s.MaxResults = &v",
          "2689:  return s",
          "2690: }",
          "2693: func (s *ListTablesInput) SetNextToken(v string) *ListTablesInput {",
          "2694:  s.NextToken = &v",
          "2695:  return s",
          "2696: }",
          "2699: func (s *ListTablesInput) SetSchemaPattern(v string) *ListTablesInput {",
          "2700:  s.SchemaPattern = &v",
          "2701:  return s",
          "2702: }",
          "2705: func (s *ListTablesInput) SetSecretArn(v string) *ListTablesInput {",
          "2706:  s.SecretArn = &v",
          "2707:  return s",
          "2708: }",
          "2711: func (s *ListTablesInput) SetTablePattern(v string) *ListTablesInput {",
          "2712:  s.TablePattern = &v",
          "2713:  return s",
          "2714: }",
          "2716: type ListTablesOutput struct {",
          "2717:  _ struct{} `type:\"structure\"`",
          "2724:  NextToken *string `type:\"string\"`",
          "2727:  Tables []*TableMember `type:\"list\"`",
          "2728: }",
          "2731: func (s ListTablesOutput) String() string {",
          "2732:  return awsutil.Prettify(s)",
          "2733: }",
          "2736: func (s ListTablesOutput) GoString() string {",
          "2737:  return s.String()",
          "2738: }",
          "2741: func (s *ListTablesOutput) SetNextToken(v string) *ListTablesOutput {",
          "2742:  s.NextToken = &v",
          "2743:  return s",
          "2744: }",
          "2747: func (s *ListTablesOutput) SetTables(v []*TableMember) *ListTablesOutput {",
          "2748:  s.Tables = v",
          "2749:  return s",
          "2750: }",
          "2753: type ResourceNotFoundException struct {",
          "2754:  _            struct{}                  `type:\"structure\"`",
          "2755:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2758:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2763:  ResourceId *string `type:\"string\" required:\"true\"`",
          "2764: }",
          "2767: func (s ResourceNotFoundException) String() string {",
          "2768:  return awsutil.Prettify(s)",
          "2769: }",
          "2772: func (s ResourceNotFoundException) GoString() string {",
          "2773:  return s.String()",
          "2774: }",
          "2776: func newErrorResourceNotFoundException(v protocol.ResponseMetadata) error {",
          "2777:  return &ResourceNotFoundException{",
          "2778:   RespMetadata: v,",
          "2779:  }",
          "2780: }",
          "2783: func (s *ResourceNotFoundException) Code() string {",
          "2784:  return \"ResourceNotFoundException\"",
          "2785: }",
          "2788: func (s *ResourceNotFoundException) Message() string {",
          "2789:  if s.Message_ != nil {",
          "2790:   return *s.Message_",
          "2791:  }",
          "2792:  return \"\"",
          "2793: }",
          "2796: func (s *ResourceNotFoundException) OrigErr() error {",
          "2797:  return nil",
          "2798: }",
          "2800: func (s *ResourceNotFoundException) Error() string {",
          "2801:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2802: }",
          "2805: func (s *ResourceNotFoundException) StatusCode() int {",
          "2806:  return s.RespMetadata.StatusCode",
          "2807: }",
          "2810: func (s *ResourceNotFoundException) RequestID() string {",
          "2811:  return s.RespMetadata.RequestID",
          "2812: }",
          "2815: type StatementData struct {",
          "2816:  _ struct{} `type:\"structure\"`",
          "2819:  CreatedAt *time.Time `type:\"timestamp\"`",
          "2825:  Id *string `type:\"string\" required:\"true\"`",
          "2828:  QueryString *string `type:\"string\"`",
          "2832:  SecretArn *string `type:\"string\"`",
          "2835:  StatementName *string `type:\"string\"`",
          "2839:  Status *string `type:\"string\" enum:\"StatusString\"`",
          "2842:  UpdatedAt *time.Time `type:\"timestamp\"`",
          "2843: }",
          "2846: func (s StatementData) String() string {",
          "2847:  return awsutil.Prettify(s)",
          "2848: }",
          "2851: func (s StatementData) GoString() string {",
          "2852:  return s.String()",
          "2853: }",
          "2856: func (s *StatementData) SetCreatedAt(v time.Time) *StatementData {",
          "2857:  s.CreatedAt = &v",
          "2858:  return s",
          "2859: }",
          "2862: func (s *StatementData) SetId(v string) *StatementData {",
          "2863:  s.Id = &v",
          "2864:  return s",
          "2865: }",
          "2868: func (s *StatementData) SetQueryString(v string) *StatementData {",
          "2869:  s.QueryString = &v",
          "2870:  return s",
          "2871: }",
          "2874: func (s *StatementData) SetSecretArn(v string) *StatementData {",
          "2875:  s.SecretArn = &v",
          "2876:  return s",
          "2877: }",
          "2880: func (s *StatementData) SetStatementName(v string) *StatementData {",
          "2881:  s.StatementName = &v",
          "2882:  return s",
          "2883: }",
          "2886: func (s *StatementData) SetStatus(v string) *StatementData {",
          "2887:  s.Status = &v",
          "2888:  return s",
          "2889: }",
          "2892: func (s *StatementData) SetUpdatedAt(v time.Time) *StatementData {",
          "2893:  s.UpdatedAt = &v",
          "2894:  return s",
          "2895: }",
          "2898: type TableMember struct {",
          "2899:  _ struct{} `type:\"structure\"`",
          "2902:  Name *string `locationName:\"name\" type:\"string\"`",
          "2905:  Schema *string `locationName:\"schema\" type:\"string\"`",
          "2909:  Type *string `locationName:\"type\" type:\"string\"`",
          "2910: }",
          "2913: func (s TableMember) String() string {",
          "2914:  return awsutil.Prettify(s)",
          "2915: }",
          "2918: func (s TableMember) GoString() string {",
          "2919:  return s.String()",
          "2920: }",
          "2923: func (s *TableMember) SetName(v string) *TableMember {",
          "2924:  s.Name = &v",
          "2925:  return s",
          "2926: }",
          "2929: func (s *TableMember) SetSchema(v string) *TableMember {",
          "2930:  s.Schema = &v",
          "2931:  return s",
          "2932: }",
          "2935: func (s *TableMember) SetType(v string) *TableMember {",
          "2936:  s.Type = &v",
          "2937:  return s",
          "2938: }",
          "2941: type ValidationException struct {",
          "2942:  _            struct{}                  `type:\"structure\"`",
          "2943:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2946:  Message_ *string `locationName:\"Message\" type:\"string\"`",
          "2947: }",
          "2950: func (s ValidationException) String() string {",
          "2951:  return awsutil.Prettify(s)",
          "2952: }",
          "2955: func (s ValidationException) GoString() string {",
          "2956:  return s.String()",
          "2957: }",
          "2959: func newErrorValidationException(v protocol.ResponseMetadata) error {",
          "2960:  return &ValidationException{",
          "2961:   RespMetadata: v,",
          "2962:  }",
          "2963: }",
          "2966: func (s *ValidationException) Code() string {",
          "2967:  return \"ValidationException\"",
          "2968: }",
          "2971: func (s *ValidationException) Message() string {",
          "2972:  if s.Message_ != nil {",
          "2973:   return *s.Message_",
          "2974:  }",
          "2975:  return \"\"",
          "2976: }",
          "2979: func (s *ValidationException) OrigErr() error {",
          "2980:  return nil",
          "2981: }",
          "2983: func (s *ValidationException) Error() string {",
          "2984:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "2985: }",
          "2988: func (s *ValidationException) StatusCode() int {",
          "2989:  return s.RespMetadata.StatusCode",
          "2990: }",
          "2993: func (s *ValidationException) RequestID() string {",
          "2994:  return s.RespMetadata.RequestID",
          "2995: }",
          "2997: const (",
          "2999:  StatusStringAborted = \"ABORTED\"",
          "3002:  StatusStringAll = \"ALL\"",
          "3005:  StatusStringFailed = \"FAILED\"",
          "3008:  StatusStringFinished = \"FINISHED\"",
          "3011:  StatusStringPicked = \"PICKED\"",
          "3014:  StatusStringStarted = \"STARTED\"",
          "3017:  StatusStringSubmitted = \"SUBMITTED\"",
          "3018: )",
          "3021: func StatusString_Values() []string {",
          "3022:  return []string{",
          "3023:   StatusStringAborted,",
          "3024:   StatusStringAll,",
          "3025:   StatusStringFailed,",
          "3026:   StatusStringFinished,",
          "3027:   StatusStringPicked,",
          "3028:   StatusStringStarted,",
          "3029:   StatusStringSubmitted,",
          "3030:  }",
          "3031: }",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/doc.go||service/redshiftdataapiservice/doc.go": [
          "File: service/redshiftdataapiservice/doc.go -> service/redshiftdataapiservice/doc.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: package redshiftdataapiservice",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/errors.go||service/redshiftdataapiservice/errors.go": [
          "File: service/redshiftdataapiservice/errors.go -> service/redshiftdataapiservice/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "7: )",
          "9: const (",
          "15:  ErrCodeExecuteStatementException = \"ExecuteStatementException\"",
          "21:  ErrCodeInternalServerException = \"InternalServerException\"",
          "27:  ErrCodeResourceNotFoundException = \"ResourceNotFoundException\"",
          "33:  ErrCodeValidationException = \"ValidationException\"",
          "34: )",
          "36: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "37:  \"ExecuteStatementException\": newErrorExecuteStatementException,",
          "38:  \"InternalServerException\":   newErrorInternalServerException,",
          "39:  \"ResourceNotFoundException\": newErrorResourceNotFoundException,",
          "40:  \"ValidationException\":       newErrorValidationException,",
          "41: }",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go||service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go": [
          "File: service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go -> service/redshiftdataapiservice/redshiftdataapiserviceiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: package redshiftdataapiserviceiface",
          "11: import (",
          "12:  \"github.com/aws/aws-sdk-go/aws\"",
          "13:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "14:  \"github.com/aws/aws-sdk-go/service/redshiftdataapiservice\"",
          "15: )",
          "62: type RedshiftDataAPIServiceAPI interface {",
          "63:  CancelStatement(*redshiftdataapiservice.CancelStatementInput) (*redshiftdataapiservice.CancelStatementOutput, error)",
          "64:  CancelStatementWithContext(aws.Context, *redshiftdataapiservice.CancelStatementInput, ...request.Option) (*redshiftdataapiservice.CancelStatementOutput, error)",
          "65:  CancelStatementRequest(*redshiftdataapiservice.CancelStatementInput) (*request.Request, *redshiftdataapiservice.CancelStatementOutput)",
          "67:  DescribeStatement(*redshiftdataapiservice.DescribeStatementInput) (*redshiftdataapiservice.DescribeStatementOutput, error)",
          "68:  DescribeStatementWithContext(aws.Context, *redshiftdataapiservice.DescribeStatementInput, ...request.Option) (*redshiftdataapiservice.DescribeStatementOutput, error)",
          "69:  DescribeStatementRequest(*redshiftdataapiservice.DescribeStatementInput) (*request.Request, *redshiftdataapiservice.DescribeStatementOutput)",
          "71:  DescribeTable(*redshiftdataapiservice.DescribeTableInput) (*redshiftdataapiservice.DescribeTableOutput, error)",
          "72:  DescribeTableWithContext(aws.Context, *redshiftdataapiservice.DescribeTableInput, ...request.Option) (*redshiftdataapiservice.DescribeTableOutput, error)",
          "73:  DescribeTableRequest(*redshiftdataapiservice.DescribeTableInput) (*request.Request, *redshiftdataapiservice.DescribeTableOutput)",
          "75:  DescribeTablePages(*redshiftdataapiservice.DescribeTableInput, func(*redshiftdataapiservice.DescribeTableOutput, bool) bool) error",
          "76:  DescribeTablePagesWithContext(aws.Context, *redshiftdataapiservice.DescribeTableInput, func(*redshiftdataapiservice.DescribeTableOutput, bool) bool, ...request.Option) error",
          "78:  ExecuteStatement(*redshiftdataapiservice.ExecuteStatementInput) (*redshiftdataapiservice.ExecuteStatementOutput, error)",
          "79:  ExecuteStatementWithContext(aws.Context, *redshiftdataapiservice.ExecuteStatementInput, ...request.Option) (*redshiftdataapiservice.ExecuteStatementOutput, error)",
          "80:  ExecuteStatementRequest(*redshiftdataapiservice.ExecuteStatementInput) (*request.Request, *redshiftdataapiservice.ExecuteStatementOutput)",
          "82:  GetStatementResult(*redshiftdataapiservice.GetStatementResultInput) (*redshiftdataapiservice.GetStatementResultOutput, error)",
          "83:  GetStatementResultWithContext(aws.Context, *redshiftdataapiservice.GetStatementResultInput, ...request.Option) (*redshiftdataapiservice.GetStatementResultOutput, error)",
          "84:  GetStatementResultRequest(*redshiftdataapiservice.GetStatementResultInput) (*request.Request, *redshiftdataapiservice.GetStatementResultOutput)",
          "86:  GetStatementResultPages(*redshiftdataapiservice.GetStatementResultInput, func(*redshiftdataapiservice.GetStatementResultOutput, bool) bool) error",
          "87:  GetStatementResultPagesWithContext(aws.Context, *redshiftdataapiservice.GetStatementResultInput, func(*redshiftdataapiservice.GetStatementResultOutput, bool) bool, ...request.Option) error",
          "89:  ListDatabases(*redshiftdataapiservice.ListDatabasesInput) (*redshiftdataapiservice.ListDatabasesOutput, error)",
          "90:  ListDatabasesWithContext(aws.Context, *redshiftdataapiservice.ListDatabasesInput, ...request.Option) (*redshiftdataapiservice.ListDatabasesOutput, error)",
          "91:  ListDatabasesRequest(*redshiftdataapiservice.ListDatabasesInput) (*request.Request, *redshiftdataapiservice.ListDatabasesOutput)",
          "93:  ListDatabasesPages(*redshiftdataapiservice.ListDatabasesInput, func(*redshiftdataapiservice.ListDatabasesOutput, bool) bool) error",
          "94:  ListDatabasesPagesWithContext(aws.Context, *redshiftdataapiservice.ListDatabasesInput, func(*redshiftdataapiservice.ListDatabasesOutput, bool) bool, ...request.Option) error",
          "96:  ListSchemas(*redshiftdataapiservice.ListSchemasInput) (*redshiftdataapiservice.ListSchemasOutput, error)",
          "97:  ListSchemasWithContext(aws.Context, *redshiftdataapiservice.ListSchemasInput, ...request.Option) (*redshiftdataapiservice.ListSchemasOutput, error)",
          "98:  ListSchemasRequest(*redshiftdataapiservice.ListSchemasInput) (*request.Request, *redshiftdataapiservice.ListSchemasOutput)",
          "100:  ListSchemasPages(*redshiftdataapiservice.ListSchemasInput, func(*redshiftdataapiservice.ListSchemasOutput, bool) bool) error",
          "101:  ListSchemasPagesWithContext(aws.Context, *redshiftdataapiservice.ListSchemasInput, func(*redshiftdataapiservice.ListSchemasOutput, bool) bool, ...request.Option) error",
          "103:  ListStatements(*redshiftdataapiservice.ListStatementsInput) (*redshiftdataapiservice.ListStatementsOutput, error)",
          "104:  ListStatementsWithContext(aws.Context, *redshiftdataapiservice.ListStatementsInput, ...request.Option) (*redshiftdataapiservice.ListStatementsOutput, error)",
          "105:  ListStatementsRequest(*redshiftdataapiservice.ListStatementsInput) (*request.Request, *redshiftdataapiservice.ListStatementsOutput)",
          "107:  ListStatementsPages(*redshiftdataapiservice.ListStatementsInput, func(*redshiftdataapiservice.ListStatementsOutput, bool) bool) error",
          "108:  ListStatementsPagesWithContext(aws.Context, *redshiftdataapiservice.ListStatementsInput, func(*redshiftdataapiservice.ListStatementsOutput, bool) bool, ...request.Option) error",
          "110:  ListTables(*redshiftdataapiservice.ListTablesInput) (*redshiftdataapiservice.ListTablesOutput, error)",
          "111:  ListTablesWithContext(aws.Context, *redshiftdataapiservice.ListTablesInput, ...request.Option) (*redshiftdataapiservice.ListTablesOutput, error)",
          "112:  ListTablesRequest(*redshiftdataapiservice.ListTablesInput) (*request.Request, *redshiftdataapiservice.ListTablesOutput)",
          "114:  ListTablesPages(*redshiftdataapiservice.ListTablesInput, func(*redshiftdataapiservice.ListTablesOutput, bool) bool) error",
          "115:  ListTablesPagesWithContext(aws.Context, *redshiftdataapiservice.ListTablesInput, func(*redshiftdataapiservice.ListTablesOutput, bool) bool, ...request.Option) error",
          "116: }",
          "118: var _ RedshiftDataAPIServiceAPI = (*redshiftdataapiservice.RedshiftDataAPIService)(nil)",
          "",
          "---------------"
        ],
        "service/redshiftdataapiservice/service.go||service/redshiftdataapiservice/service.go": [
          "File: service/redshiftdataapiservice/service.go -> service/redshiftdataapiservice/service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: package redshiftdataapiservice",
          "5: import (",
          "6:  \"github.com/aws/aws-sdk-go/aws\"",
          "7:  \"github.com/aws/aws-sdk-go/aws/client\"",
          "8:  \"github.com/aws/aws-sdk-go/aws/client/metadata\"",
          "9:  \"github.com/aws/aws-sdk-go/aws/request\"",
          "10:  \"github.com/aws/aws-sdk-go/aws/signer/v4\"",
          "11:  \"github.com/aws/aws-sdk-go/private/protocol\"",
          "12:  \"github.com/aws/aws-sdk-go/private/protocol/jsonrpc\"",
          "13: )",
          "21: type RedshiftDataAPIService struct {",
          "23: }",
          "26: var initClient func(*client.Client)",
          "29: var initRequest func(*request.Request)",
          "32: const (",
          "33:  ServiceName = \"Redshift Data\" // Name of service.",
          "34:  EndpointsID = \"redshift-data\" // ID to lookup a service endpoint with.",
          "35:  ServiceID   = \"Redshift Data\" // ServiceID is a unique identifier of a specific service.",
          "36: )",
          "50: func New(p client.ConfigProvider, cfgs ...*aws.Config) *RedshiftDataAPIService {",
          "51:  c := p.ClientConfig(EndpointsID, cfgs...)",
          "52:  if c.SigningNameDerived || len(c.SigningName) == 0 {",
          "53:   c.SigningName = \"redshift-data\"",
          "54:  }",
          "55:  return newClient(*c.Config, c.Handlers, c.PartitionID, c.Endpoint, c.SigningRegion, c.SigningName)",
          "56: }",
          "59: func newClient(cfg aws.Config, handlers request.Handlers, partitionID, endpoint, signingRegion, signingName string) *RedshiftDataAPIService {",
          "60:  svc := &RedshiftDataAPIService{",
          "61:   Client: client.New(",
          "62:    cfg,",
          "63:    metadata.ClientInfo{",
          "64:     ServiceName:   ServiceName,",
          "65:     ServiceID:     ServiceID,",
          "66:     SigningName:   signingName,",
          "67:     SigningRegion: signingRegion,",
          "68:     PartitionID:   partitionID,",
          "69:     Endpoint:      endpoint,",
          "70:     APIVersion:    \"2019-12-20\",",
          "71:     JSONVersion:   \"1.1\",",
          "72:     TargetPrefix:  \"RedshiftData\",",
          "73:    },",
          "74:    handlers,",
          "75:   ),",
          "76:  }",
          "79:  svc.Handlers.Sign.PushBackNamed(v4.SignRequestHandler)",
          "80:  svc.Handlers.Build.PushBackNamed(jsonrpc.BuildHandler)",
          "81:  svc.Handlers.Unmarshal.PushBackNamed(jsonrpc.UnmarshalHandler)",
          "82:  svc.Handlers.UnmarshalMeta.PushBackNamed(jsonrpc.UnmarshalMetaHandler)",
          "83:  svc.Handlers.UnmarshalError.PushBackNamed(",
          "84:   protocol.NewUnmarshalErrorHandler(jsonrpc.NewUnmarshalTypedError(exceptionFromCode)).NamedHandler(),",
          "85:  )",
          "88:  if initClient != nil {",
          "89:   initClient(svc.Client)",
          "90:  }",
          "92:  return svc",
          "93: }",
          "97: func (c *RedshiftDataAPIService) newRequest(op *request.Operation, params, data interface{}) *request.Request {",
          "98:  req := c.NewRequest(op, params, data)",
          "101:  if initRequest != nil {",
          "102:   initRequest(req)",
          "103:  }",
          "105:  return req",
          "106: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7898ed37bb1004a0a1c024bb3e0d206f07f9299",
      "candidate_info": {
        "commit_hash": "c7898ed37bb1004a0a1c024bb3e0d206f07f9299",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/c7898ed37bb1004a0a1c024bb3e0d206f07f9299",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/s3/2006-03-01/api-2.json",
          "models/apis/s3/2006-03-01/docs-2.json",
          "models/apis/s3/2006-03-01/examples-1.json",
          "models/endpoints/endpoints.json",
          "service/s3/api.go",
          "service/s3/examples_test.go"
        ],
        "message": "Release v1.25.21 (2019-10-28) ===\n\n### Service Client Updates\n* `service/s3`: Updates service API, documentation, and examples\n  * Adding support in SelectObjectContent for scanning a portion of an object specified by a scan range.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/s3/api.go||service/s3/api.go",
          "service/s3/examples_test.go||service/s3/examples_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go",
            "service/s3/api.go||service/s3/api.go",
            "service/s3/examples_test.go||service/s3/examples_test.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:   \"backup\": service{",
          "583:    Endpoints: endpoints{",
          "584:     \"ap-northeast-1\": endpoint{},",
          "585:     \"ap-northeast-2\": endpoint{},",
          "586:     \"ap-southeast-1\": endpoint{},",
          "587:     \"ap-southeast-2\": endpoint{},",
          "588:     \"ca-central-1\":   endpoint{},",
          "589:     \"eu-central-1\":   endpoint{},",
          "590:     \"eu-west-1\":      endpoint{},",
          "591:     \"eu-west-2\":      endpoint{},",
          "592:     \"us-east-1\":      endpoint{},",
          "593:     \"us-east-2\":      endpoint{},",
          "594:     \"us-west-1\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "584:     \"ap-east-1\":      endpoint{},",
          "587:     \"ap-south-1\":     endpoint{},",
          "592:     \"eu-north-1\":     endpoint{},",
          "595:     \"eu-west-3\":      endpoint{},",
          "596:     \"me-south-1\":     endpoint{},",
          "597:     \"sa-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3146:     \"eu-west-1\":      endpoint{},",
          "3147:     \"eu-west-2\":      endpoint{},",
          "3148:     \"eu-west-3\":      endpoint{},",
          "3149:     \"sa-east-1\":      endpoint{},",
          "3150:     \"us-east-1\":      endpoint{},",
          "3151:     \"us-east-1-fips\": endpoint{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3155:     \"me-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.25.20\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.25.21\"",
          "",
          "---------------"
        ],
        "service/s3/api.go||service/s3/api.go": [
          "File: service/s3/api.go -> service/s3/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22464:  return s.String()",
          "22465: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22467: type ScanRange struct {",
          "22468:  _ struct{} `type:\"structure\"`",
          "22473:  End *int64 `type:\"long\"`",
          "22477:  Start *int64 `type:\"long\"`",
          "22478: }",
          "22481: func (s ScanRange) String() string {",
          "22482:  return awsutil.Prettify(s)",
          "22483: }",
          "22486: func (s ScanRange) GoString() string {",
          "22487:  return s.String()",
          "22488: }",
          "22491: func (s *ScanRange) SetEnd(v int64) *ScanRange {",
          "22492:  s.End = &v",
          "22493:  return s",
          "22494: }",
          "22497: func (s *ScanRange) SetStart(v int64) *ScanRange {",
          "22498:  s.Start = &v",
          "22499:  return s",
          "22500: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22740:  SSECustomerKeyMD5 *string `location:\"header\" locationName:\"x-amz-server-side-encryption-customer-key-MD5\" type:\"string\"`",
          "22741: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22781:  ScanRange *ScanRange `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22858:  return s",
          "22859: }",
          "22861: type SelectObjectContentOutput struct {",
          "22862:  _ struct{} `type:\"structure\" payload:\"Payload\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22903: func (s *SelectObjectContentInput) SetScanRange(v *ScanRange) *SelectObjectContentInput {",
          "22904:  s.ScanRange = v",
          "22905:  return s",
          "22906: }",
          "",
          "---------------"
        ],
        "service/s3/examples_test.go||service/s3/examples_test.go": [
          "File: service/s3/examples_test.go -> service/s3/examples_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:  fmt.Println(result)",
          "468: }",
          "475: func ExampleS3_DeleteObjectTagging_shared00() {",
          "476:  svc := s3.New(session.New())",
          "477:  input := &s3.DeleteObjectTaggingInput{",
          "480:  }",
          "482:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "478:   Bucket: aws.String(\"examplebucket\"),",
          "479:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "477:   Bucket:    aws.String(\"examplebucket\"),",
          "478:   Key:       aws.String(\"HappyFace.jpg\"),",
          "479:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "497:  fmt.Println(result)",
          "498: }",
          "504: func ExampleS3_DeleteObjectTagging_shared01() {",
          "505:  svc := s3.New(session.New())",
          "506:  input := &s3.DeleteObjectTaggingInput{",
          "510:  }",
          "512:  result, err := svc.DeleteObjectTagging(input)",
          "",
          "[Removed Lines]",
          "507:   Bucket:    aws.String(\"examplebucket\"),",
          "508:   Key:       aws.String(\"HappyFace.jpg\"),",
          "509:   VersionId: aws.String(\"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"),",
          "",
          "[Added Lines]",
          "508:   Bucket: aws.String(\"examplebucket\"),",
          "509:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "539:   Delete: &s3.Delete{",
          "540:    Objects: []*s3.ObjectIdentifier{",
          "541:     {",
          "544:     },",
          "545:     {",
          "548:     },",
          "549:    },",
          "550:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "542:      Key:       aws.String(\"HappyFace.jpg\"),",
          "543:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "546:      Key:       aws.String(\"HappyFace.jpg\"),",
          "547:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "[Added Lines]",
          "542:      Key: aws.String(\"objectkey1\"),",
          "545:      Key: aws.String(\"objectkey2\"),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "581:   Delete: &s3.Delete{",
          "582:    Objects: []*s3.ObjectIdentifier{",
          "583:     {",
          "585:     },",
          "586:     {",
          "588:     },",
          "589:    },",
          "590:    Quiet: aws.Bool(false),",
          "",
          "[Removed Lines]",
          "584:      Key: aws.String(\"objectkey1\"),",
          "587:      Key: aws.String(\"objectkey2\"),",
          "",
          "[Added Lines]",
          "582:      Key:       aws.String(\"HappyFace.jpg\"),",
          "583:      VersionId: aws.String(\"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"),",
          "586:      Key:       aws.String(\"HappyFace.jpg\"),",
          "587:      VersionId: aws.String(\"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1197:  fmt.Println(result)",
          "1198: }",
          "1204: func ExampleS3_ListMultipartUploads_shared00() {",
          "1205:  svc := s3.New(session.New())",
          "1206:  input := &s3.ListMultipartUploadsInput{",
          "1211:  }",
          "1213:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1207:   Bucket:         aws.String(\"examplebucket\"),",
          "1208:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1209:   MaxUploads:     aws.Int64(2),",
          "1210:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "[Added Lines]",
          "1206:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1228:  fmt.Println(result)",
          "1229: }",
          "1234: func ExampleS3_ListMultipartUploads_shared01() {",
          "1235:  svc := s3.New(session.New())",
          "1236:  input := &s3.ListMultipartUploadsInput{",
          "1238:  }",
          "1240:  result, err := svc.ListMultipartUploads(input)",
          "",
          "[Removed Lines]",
          "1237:   Bucket: aws.String(\"examplebucket\"),",
          "",
          "[Added Lines]",
          "1234:   Bucket:         aws.String(\"examplebucket\"),",
          "1235:   KeyMarker:      aws.String(\"nextkeyfrompreviousresponse\"),",
          "1236:   MaxUploads:     aws.Int64(2),",
          "1237:   UploadIdMarker: aws.String(\"valuefrompreviousresponse\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1804:  fmt.Println(result)",
          "1805: }",
          "1812: func ExampleS3_PutObject_shared00() {",
          "1813:  svc := s3.New(session.New())",
          "1814:  input := &s3.PutObjectInput{",
          "1819:  }",
          "1821:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1815:   ACL:    aws.String(\"authenticated-read\"),",
          "1816:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1817:   Bucket: aws.String(\"examplebucket\"),",
          "1818:   Key:    aws.String(\"exampleobject\"),",
          "",
          "[Added Lines]",
          "1814:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1815:   Bucket:  aws.String(\"examplebucket\"),",
          "1816:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1817:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1836:  fmt.Println(result)",
          "1837: }",
          "1843: func ExampleS3_PutObject_shared01() {",
          "1844:  svc := s3.New(session.New())",
          "1845:  input := &s3.PutObjectInput{",
          "1850:  }",
          "1852:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1846:   Body:    aws.ReadSeekCloser(strings.NewReader(\"c:\\\\HappyFace.jpg\")),",
          "1847:   Bucket:  aws.String(\"examplebucket\"),",
          "1848:   Key:     aws.String(\"HappyFace.jpg\"),",
          "1849:   Tagging: aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1846:   ACL:    aws.String(\"authenticated-read\"),",
          "1847:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1848:   Bucket: aws.String(\"examplebucket\"),",
          "1849:   Key:    aws.String(\"exampleobject\"),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1867:  fmt.Println(result)",
          "1868: }",
          "1874: func ExampleS3_PutObject_shared02() {",
          "1875:  svc := s3.New(session.New())",
          "1876:  input := &s3.PutObjectInput{",
          "1877:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1878:   Bucket: aws.String(\"examplebucket\"),",
          "1884:  }",
          "1886:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1879:   Key:    aws.String(\"exampleobject\"),",
          "1880:   Metadata: map[string]*string{",
          "1881:    \"metadata1\": aws.String(\"value1\"),",
          "1882:    \"metadata2\": aws.String(\"value2\"),",
          "1883:   },",
          "",
          "[Added Lines]",
          "1879:   Key:    aws.String(\"objectkey\"),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1901:  fmt.Println(result)",
          "1902: }",
          "1909: func ExampleS3_PutObject_shared03() {",
          "1910:  svc := s3.New(session.New())",
          "1911:  input := &s3.PutObjectInput{",
          "1913:   Bucket:               aws.String(\"examplebucket\"),",
          "1915:   ServerSideEncryption: aws.String(\"AES256\"),",
          "1917:  }",
          "1919:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1912:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1914:   Key:                  aws.String(\"exampleobject\"),",
          "1916:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "[Added Lines]",
          "1907:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1909:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "1911:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1934:  fmt.Println(result)",
          "1935: }",
          "1941: func ExampleS3_PutObject_shared04() {",
          "1942:  svc := s3.New(session.New())",
          "1943:  input := &s3.PutObjectInput{",
          "1945:   Bucket: aws.String(\"examplebucket\"),",
          "1947:  }",
          "1949:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1944:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1946:   Key:    aws.String(\"objectkey\"),",
          "",
          "[Added Lines]",
          "1940:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1942:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1964:  fmt.Println(result)",
          "1965: }",
          "1972: func ExampleS3_PutObject_shared05() {",
          "1973:  svc := s3.New(session.New())",
          "1974:  input := &s3.PutObjectInput{",
          "1976:   Bucket: aws.String(\"examplebucket\"),",
          "1978:  }",
          "1980:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "1975:   Body:   aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "1977:   Key:    aws.String(\"HappyFace.jpg\"),",
          "",
          "[Added Lines]",
          "1970:   Body:   aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "1972:   Key:    aws.String(\"exampleobject\"),",
          "1973:   Metadata: map[string]*string{",
          "1974:    \"metadata1\": aws.String(\"value1\"),",
          "1975:    \"metadata2\": aws.String(\"value2\"),",
          "1976:   },",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1995:  fmt.Println(result)",
          "1996: }",
          "2002: func ExampleS3_PutObject_shared06() {",
          "2003:  svc := s3.New(session.New())",
          "2004:  input := &s3.PutObjectInput{",
          "2006:   Bucket:               aws.String(\"examplebucket\"),",
          "2008:   ServerSideEncryption: aws.String(\"AES256\"),",
          "2010:  }",
          "2012:  result, err := svc.PutObject(input)",
          "",
          "[Removed Lines]",
          "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"HappyFace.jpg\")),",
          "2007:   Key:                  aws.String(\"HappyFace.jpg\"),",
          "2009:   StorageClass:         aws.String(\"STANDARD_IA\"),",
          "",
          "[Added Lines]",
          "2005:   Body:                 aws.ReadSeekCloser(strings.NewReader(\"filetoupload\")),",
          "2007:   Key:                  aws.String(\"exampleobject\"),",
          "2009:   Tagging:              aws.String(\"key1=value1&key2=value2\"),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2171:  fmt.Println(result)",
          "2172: }",
          "2178: func ExampleS3_UploadPartCopy_shared00() {",
          "2179:  svc := s3.New(session.New())",
          "2180:  input := &s3.UploadPartCopyInput{",
          "2186:  }",
          "2188:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2181:   Bucket:     aws.String(\"examplebucket\"),",
          "2182:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   Key:        aws.String(\"examplelargeobject\"),",
          "2184:   PartNumber: aws.Int64(1),",
          "2185:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2181:   Bucket:          aws.String(\"examplebucket\"),",
          "2182:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2183:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2184:   Key:             aws.String(\"examplelargeobject\"),",
          "2185:   PartNumber:      aws.Int64(2),",
          "2186:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2203:  fmt.Println(result)",
          "2204: }",
          "2210: func ExampleS3_UploadPartCopy_shared01() {",
          "2211:  svc := s3.New(session.New())",
          "2212:  input := &s3.UploadPartCopyInput{",
          "2219:  }",
          "2221:  result, err := svc.UploadPartCopy(input)",
          "",
          "[Removed Lines]",
          "2213:   Bucket:          aws.String(\"examplebucket\"),",
          "2214:   CopySource:      aws.String(\"/bucketname/sourceobjectkey\"),",
          "2215:   CopySourceRange: aws.String(\"bytes=1-100000\"),",
          "2216:   Key:             aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber:      aws.Int64(2),",
          "2218:   UploadId:        aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "[Added Lines]",
          "2214:   Bucket:     aws.String(\"examplebucket\"),",
          "2215:   CopySource: aws.String(\"/bucketname/sourceobjectkey\"),",
          "2216:   Key:        aws.String(\"examplelargeobject\"),",
          "2217:   PartNumber: aws.Int64(1),",
          "2218:   UploadId:   aws.String(\"exampleuoh_10OhKhT7YukE9bjzTPRiuaCotmZM_pFngJFir9OZNrSr5cWa3cq3LZSUsfjI4FI7PkP91We7Nrw--\"),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5832eeea2eb581820e1b74f2dedd8dc371244bac",
      "candidate_info": {
        "commit_hash": "5832eeea2eb581820e1b74f2dedd8dc371244bac",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/5832eeea2eb581820e1b74f2dedd8dc371244bac",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/accessanalyzer/2019-11-01/docs-2.json",
          "models/apis/appflow/2020-08-23/api-2.json",
          "models/apis/appflow/2020-08-23/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/sns/2010-03-31/api-2.json",
          "models/apis/sns/2010-03-31/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/accessanalyzer/api.go",
          "service/accessanalyzer/doc.go",
          "service/appflow/api.go",
          "service/servicecatalog/api.go",
          "service/sns/api.go"
        ],
        "message": "Release v1.35.13 (2020-10-22) (#3608)\n\nRelease v1.35.13 (2020-10-22)\n===\n\n### Service Client Updates\n* `service/accessanalyzer`: Updates service documentation\n* `service/appflow`: Updates service API and documentation\n* `service/servicecatalog`: Updates service documentation\n  * Documentation updates for servicecatalog\n* `service/sns`: Updates service API and documentation\n  * SNS now supports a new class of topics: FIFO (First-In-First-Out). FIFO topics provide strictly-ordered, deduplicated, filterable, encryptable, many-to-many messaging at scale.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/accessanalyzer/api.go||service/accessanalyzer/api.go",
          "service/accessanalyzer/doc.go||service/accessanalyzer/doc.go",
          "service/appflow/api.go||service/appflow/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/sns/api.go||service/sns/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "723:     \"ca-central-1\":   endpoint{},",
          "724:     \"eu-central-1\":   endpoint{},",
          "725:     \"eu-north-1\":     endpoint{},",
          "726:     \"eu-west-1\":      endpoint{},",
          "727:     \"eu-west-2\":      endpoint{},",
          "728:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "726:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "860:   \"backup\": service{",
          "862:    Endpoints: endpoints{",
          "863:     \"ap-east-1\":      endpoint{},",
          "864:     \"ap-northeast-1\": endpoint{},",
          "865:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "864:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "869:     \"ca-central-1\":   endpoint{},",
          "870:     \"eu-central-1\":   endpoint{},",
          "871:     \"eu-north-1\":     endpoint{},",
          "872:     \"eu-west-1\":      endpoint{},",
          "873:     \"eu-west-2\":      endpoint{},",
          "874:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "874:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3455:     \"sa-east-1\":      endpoint{},",
          "3456:     \"us-east-1\":      endpoint{},",
          "3457:     \"us-east-2\":      endpoint{},",
          "3458:     \"us-west-2\":      endpoint{},",
          "3459:    },",
          "3460:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3461:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6996:     \"cn-northwest-1\": endpoint{},",
          "6997:    },",
          "6998:   },",
          "6999:   \"gamelift\": service{",
          "7001:    Endpoints: endpoints{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7003:   \"fsx\": service{",
          "7005:    Endpoints: endpoints{",
          "7006:     \"cn-north-1\":     endpoint{},",
          "7007:     \"cn-northwest-1\": endpoint{},",
          "7008:    },",
          "7009:   },",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7285:     \"cn-northwest-1\": endpoint{},",
          "7286:    },",
          "7287:   },",
          "7288:   \"serverlessrepo\": service{",
          "7289:    Defaults: endpoint{",
          "7290:     Protocols: []string{\"https\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7299:   \"securityhub\": service{",
          "7301:    Endpoints: endpoints{",
          "7302:     \"cn-north-1\":     endpoint{},",
          "7303:     \"cn-northwest-1\": endpoint{},",
          "7304:    },",
          "7305:   },",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.35.12\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.35.13\"",
          "",
          "---------------"
        ],
        "service/accessanalyzer/api.go||service/accessanalyzer/api.go": [
          "File: service/accessanalyzer/api.go -> service/accessanalyzer/api.go"
        ],
        "service/accessanalyzer/doc.go||service/accessanalyzer/doc.go": [
          "File: service/accessanalyzer/doc.go -> service/accessanalyzer/doc.go"
        ],
        "service/appflow/api.go||service/appflow/api.go": [
          "File: service/appflow/api.go -> service/appflow/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "2975:    invalidParams.AddNested(\"Redshift\", err.(request.ErrInvalidParams))",
          "2976:   }",
          "2977:  }",
          "2978:  if s.ServiceNow != nil {",
          "2979:   if err := s.ServiceNow.Validate(); err != nil {",
          "2980:    invalidParams.AddNested(\"ServiceNow\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2978:  if s.Salesforce != nil {",
          "2979:   if err := s.Salesforce.Validate(); err != nil {",
          "2980:    invalidParams.AddNested(\"Salesforce\", err.(request.ErrInvalidParams))",
          "2981:   }",
          "2982:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4619:  IsNullable *bool `locationName:\"isNullable\" type:\"boolean\"`",
          "4623:  IsUpsertable *bool `locationName:\"isUpsertable\" type:\"boolean\"`",
          "4624: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4628:  IsUpdatable *bool `locationName:\"isUpdatable\" type:\"boolean\"`",
          "4637:  SupportedWriteOperations []*string `locationName:\"supportedWriteOperations\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4645:  return s",
          "4646: }",
          "4649: func (s *DestinationFieldProperties) SetIsUpsertable(v bool) *DestinationFieldProperties {",
          "4650:  s.IsUpsertable = &v",
          "4651:  return s",
          "4652: }",
          "4656: type DestinationFlowConfig struct {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4663: func (s *DestinationFieldProperties) SetIsUpdatable(v bool) *DestinationFieldProperties {",
          "4664:  s.IsUpdatable = &v",
          "4665:  return s",
          "4666: }",
          "4675: func (s *DestinationFieldProperties) SetSupportedWriteOperations(v []*string) *DestinationFieldProperties {",
          "4676:  s.SupportedWriteOperations = v",
          "4677:  return s",
          "4678: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5520:  return s",
          "5521: }",
          "5524: type InforNexusConnectorProfileCredentials struct {",
          "5525:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5551: type IncrementalPullConfig struct {",
          "5552:  _ struct{} `type:\"structure\"`",
          "5556:  DatetimeTypeFieldName *string `locationName:\"datetimeTypeFieldName\" type:\"string\"`",
          "5557: }",
          "5560: func (s IncrementalPullConfig) String() string {",
          "5561:  return awsutil.Prettify(s)",
          "5562: }",
          "5565: func (s IncrementalPullConfig) GoString() string {",
          "5566:  return s.String()",
          "5567: }",
          "5570: func (s *IncrementalPullConfig) SetDatetimeTypeFieldName(v string) *IncrementalPullConfig {",
          "5571:  s.DatetimeTypeFieldName = &v",
          "5572:  return s",
          "5573: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6643:  AccessToken *string `locationName:\"accessToken\" type:\"string\" sensitive:\"true\"`",
          "6647:  OAuthRequest *ConnectorOAuthRequest `locationName:\"oAuthRequest\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6699:  ClientCredentialsArn *string `locationName:\"clientCredentialsArn\" min:\"20\" type:\"string\" sensitive:\"true\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6660:  return s.String()",
          "6661: }",
          "6664: func (s *SalesforceConnectorProfileCredentials) SetAccessToken(v string) *SalesforceConnectorProfileCredentials {",
          "6665:  s.AccessToken = &v",
          "6666:  return s",
          "6667: }",
          "6670: func (s *SalesforceConnectorProfileCredentials) SetOAuthRequest(v *ConnectorOAuthRequest) *SalesforceConnectorProfileCredentials {",
          "6671:  s.OAuthRequest = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6720: func (s *SalesforceConnectorProfileCredentials) Validate() error {",
          "6721:  invalidParams := request.ErrInvalidParams{Context: \"SalesforceConnectorProfileCredentials\"}",
          "6722:  if s.ClientCredentialsArn != nil && len(*s.ClientCredentialsArn) < 20 {",
          "6723:   invalidParams.Add(request.NewErrParamMinLen(\"ClientCredentialsArn\", 20))",
          "6724:  }",
          "6726:  if invalidParams.Len() > 0 {",
          "6727:   return invalidParams",
          "6728:  }",
          "6729:  return nil",
          "6730: }",
          "6739: func (s *SalesforceConnectorProfileCredentials) SetClientCredentialsArn(v string) *SalesforceConnectorProfileCredentials {",
          "6740:  s.ClientCredentialsArn = &v",
          "6741:  return s",
          "6742: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6724:  ErrorHandlingConfig *ErrorHandlingConfig `locationName:\"errorHandlingConfig\" type:\"structure\"`",
          "6729:  Object *string `locationName:\"object\" type:\"string\" required:\"true\"`",
          "6730: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6803:  IdFieldNames []*string `locationName:\"idFieldNames\" type:\"list\"`",
          "6812:  WriteOperationType *string `locationName:\"writeOperationType\" type:\"string\" enum:\"WriteOperationType\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6763:  return s",
          "6764: }",
          "6767: func (s *SalesforceDestinationProperties) SetObject(v string) *SalesforceDestinationProperties {",
          "6768:  s.Object = &v",
          "6769:  return s",
          "6770: }",
          "6773: type SalesforceMetadata struct {",
          "6774:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6850: func (s *SalesforceDestinationProperties) SetIdFieldNames(v []*string) *SalesforceDestinationProperties {",
          "6851:  s.IdFieldNames = v",
          "6852:  return s",
          "6853: }",
          "6862: func (s *SalesforceDestinationProperties) SetWriteOperationType(v string) *SalesforceDestinationProperties {",
          "6863:  s.WriteOperationType = &v",
          "6864:  return s",
          "6865: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7956:  ConnectorType *string `locationName:\"connectorType\" type:\"string\" required:\"true\" enum:\"ConnectorType\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8056:  IncrementalPullConfig *IncrementalPullConfig `locationName:\"incrementalPullConfig\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8004:  return s",
          "8005: }",
          "8008: func (s *SourceFlowConfig) SetSourceConnectorProperties(v *SourceConnectorProperties) *SourceFlowConfig {",
          "8009:  s.SourceConnectorProperties = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8108: func (s *SourceFlowConfig) SetIncrementalPullConfig(v *IncrementalPullConfig) *SourceFlowConfig {",
          "8109:  s.IncrementalPullConfig = v",
          "8110:  return s",
          "8111: }",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8052: type StartFlowOutput struct {",
          "8053:  _ struct{} `type:\"structure\"`",
          "8056:  FlowArn *string `locationName:\"flowArn\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8163:  ExecutionId *string `locationName:\"executionId\" type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8069:  return s.String()",
          "8070: }",
          "8073: func (s *StartFlowOutput) SetFlowArn(v string) *StartFlowOutput {",
          "8074:  s.FlowArn = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8183: func (s *StartFlowOutput) SetExecutionId(v string) *StartFlowOutput {",
          "8184:  s.ExecutionId = &v",
          "8185:  return s",
          "8186: }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "10657:  }",
          "10658: }",
          "10660: const (",
          "10662:  ZendeskConnectorOperatorProjection = \"PROJECTION\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10778: const (",
          "10780:  WriteOperationTypeInsert = \"INSERT\"",
          "10783:  WriteOperationTypeUpsert = \"UPSERT\"",
          "10786:  WriteOperationTypeUpdate = \"UPDATE\"",
          "10787: )",
          "10790: func WriteOperationType_Values() []string {",
          "10791:  return []string{",
          "10792:   WriteOperationTypeInsert,",
          "10793:   WriteOperationTypeUpsert,",
          "10794:   WriteOperationTypeUpdate,",
          "10795:  }",
          "10796: }",
          "",
          "---------------"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go"
        ],
        "service/sns/api.go||service/sns/api.go": [
          "File: service/sns/api.go -> service/sns/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5363:  MessageAttributes map[string]*MessageAttributeValue `locationNameKey:\"Name\" locationNameValue:\"Value\" type:\"map\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5394:  MessageDeduplicationId *string `type:\"string\"`",
          "5404:  MessageGroupId *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5449:  return s",
          "5450: }",
          "5453: func (s *PublishInput) SetMessageStructure(v string) *PublishInput {",
          "5454:  s.MessageStructure = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5494: func (s *PublishInput) SetMessageDeduplicationId(v string) *PublishInput {",
          "5495:  s.MessageDeduplicationId = &v",
          "5496:  return s",
          "5497: }",
          "5500: func (s *PublishInput) SetMessageGroupId(v string) *PublishInput {",
          "5501:  s.MessageGroupId = &v",
          "5502:  return s",
          "5503: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5489:  MessageId *string `type:\"string\"`",
          "5490: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5549:  SequenceNumber *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5505:  return s",
          "5506: }",
          "5509: type RemovePermissionInput struct {",
          "5510:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5569: func (s *PublishOutput) SetSequenceNumber(v string) *PublishOutput {",
          "5570:  s.SequenceNumber = &v",
          "5571:  return s",
          "5572: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53baea7beaf84649ebcd9aa97a779ae5d74b485d",
      "candidate_info": {
        "commit_hash": "53baea7beaf84649ebcd9aa97a779ae5d74b485d",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/53baea7beaf84649ebcd9aa97a779ae5d74b485d",
        "files": [
          "CHANGELOG.md",
          "CHANGELOG_PENDING.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/guardduty/2017-11-28/docs-2.json",
          "models/apis/resourcegroupstaggingapi/2017-01-26/docs-2.json",
          "models/apis/sagemaker/2017-07-24/api-2.json",
          "models/apis/sagemaker/2017-07-24/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go"
        ],
        "message": "Release v1.30.24 (2020-05-08) (#3309)\n\nRelease v1.30.24 (2020-05-08)\n===\n\n### Service Client Updates\n* `service/guardduty`: Updates service documentation\n  * Documentation updates for GuardDuty\n* `service/resourcegroupstaggingapi`: Updates service documentation\n  * Documentation updates for resourcegroupstaggingapi\n* `service/sagemaker`: Updates service API and documentation\n  * This release adds a new parameter (EnableInterContainerTrafficEncryption) to CreateProcessingJob API to allow for enabling inter-container traffic encryption on processing jobs.\n\n### SDK Bugs\n* `service/dynamodb/dynamodbattribute`:  Simplified decode logic to decode AttributeValue as it is defined ([#3308](https://github.com/aws/aws-sdk-go/pull/3308))",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/guardduty/api.go||service/guardduty/api.go",
          "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go",
          "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go",
          "service/sagemaker/api.go||service/sagemaker/api.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "855:   \"cloud9\": service{",
          "857:    Endpoints: endpoints{",
          "858:     \"ap-northeast-1\": endpoint{},",
          "859:     \"ap-northeast-2\": endpoint{},",
          "860:     \"ap-south-1\":     endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "858:     \"ap-east-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "865:     \"eu-north-1\":     endpoint{},",
          "866:     \"eu-west-1\":      endpoint{},",
          "867:     \"eu-west-2\":      endpoint{},",
          "868:     \"us-east-1\":      endpoint{},",
          "869:     \"us-east-2\":      endpoint{},",
          "870:     \"us-west-2\":      endpoint{},",
          "871:    },",
          "872:   },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "869:     \"eu-west-3\":      endpoint{},",
          "870:     \"me-south-1\":     endpoint{},",
          "871:     \"sa-east-1\":      endpoint{},",
          "874:     \"us-west-1\":      endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5289:   \"storagegateway\": service{",
          "5291:    Endpoints: endpoints{",
          "5292:     \"ap-east-1\":      endpoint{},",
          "5293:     \"ap-northeast-1\": endpoint{},",
          "5294:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5297:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5298:     \"ca-central-1\":   endpoint{},",
          "5299:     \"eu-central-1\":   endpoint{},",
          "5300:     \"eu-north-1\":     endpoint{},",
          "5301:     \"eu-west-1\":      endpoint{},",
          "5302:     \"eu-west-2\":      endpoint{},",
          "5303:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5307:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.30.23\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.30.24\"",
          "",
          "---------------"
        ],
        "service/guardduty/api.go||service/guardduty/api.go": [
          "File: service/guardduty/api.go -> service/guardduty/api.go"
        ],
        "service/resourcegroupstaggingapi/api.go||service/resourcegroupstaggingapi/api.go": [
          "File: service/resourcegroupstaggingapi/api.go -> service/resourcegroupstaggingapi/api.go"
        ],
        "service/resourcegroupstaggingapi/doc.go||service/resourcegroupstaggingapi/doc.go": [
          "File: service/resourcegroupstaggingapi/doc.go -> service/resourcegroupstaggingapi/doc.go"
        ],
        "service/sagemaker/api.go||service/sagemaker/api.go": [
          "File: service/sagemaker/api.go -> service/sagemaker/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28817:    invalidParams.AddNested(\"AnnotationConsolidationConfig\", err.(request.ErrInvalidParams))",
          "28818:   }",
          "28819:  }",
          "28826:  if invalidParams.Len() > 0 {",
          "28827:   return invalidParams",
          "",
          "[Removed Lines]",
          "28820:  if s.UiConfig != nil {",
          "28821:   if err := s.UiConfig.Validate(); err != nil {",
          "28822:    invalidParams.AddNested(\"UiConfig\", err.(request.ErrInvalidParams))",
          "28823:   }",
          "28824:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37134: type NetworkConfig struct {",
          "37135:  _ struct{} `type:\"structure\"`",
          "37139:  EnableNetworkIsolation *bool `type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37141:  EnableInterContainerTrafficEncryption *bool `type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37171:  return nil",
          "37172: }",
          "37175: func (s *NetworkConfig) SetEnableNetworkIsolation(v bool) *NetworkConfig {",
          "37176:  s.EnableNetworkIsolation = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37181: func (s *NetworkConfig) SetEnableInterContainerTrafficEncryption(v bool) *NetworkConfig {",
          "37182:  s.EnableInterContainerTrafficEncryption = &v",
          "37183:  return s",
          "37184: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "39216:  Task *RenderableTask `type:\"structure\" required:\"true\"`",
          "39222: }",
          "",
          "[Removed Lines]",
          "39221:  UiTemplate *UiTemplate `type:\"structure\" required:\"true\"`",
          "",
          "[Added Lines]",
          "39231:  UiTemplate *UiTemplate `type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "39243:  if s.Task == nil {",
          "39244:   invalidParams.Add(request.NewErrParamRequired(\"Task\"))",
          "39245:  }",
          "39249:  if s.Task != nil {",
          "39250:   if err := s.Task.Validate(); err != nil {",
          "39251:    invalidParams.AddNested(\"Task\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "39246:  if s.UiTemplate == nil {",
          "39247:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplate\"))",
          "39248:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "44134: }",
          "",
          "[Removed Lines]",
          "44133:  UiTemplateS3Uri *string `type:\"string\" required:\"true\"`",
          "",
          "[Added Lines]",
          "44143:  UiTemplateS3Uri *string `type:\"string\"`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "44143:  return s.String()",
          "44144: }",
          "44160: func (s *UiConfig) SetUiTemplateS3Uri(v string) *UiConfig {",
          "44161:  s.UiTemplateS3Uri = &v",
          "",
          "[Removed Lines]",
          "44147: func (s *UiConfig) Validate() error {",
          "44148:  invalidParams := request.ErrInvalidParams{Context: \"UiConfig\"}",
          "44149:  if s.UiTemplateS3Uri == nil {",
          "44150:   invalidParams.Add(request.NewErrParamRequired(\"UiTemplateS3Uri\"))",
          "44151:  }",
          "44153:  if invalidParams.Len() > 0 {",
          "44154:   return invalidParams",
          "44155:  }",
          "44156:  return nil",
          "44157: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
      "candidate_info": {
        "commit_hash": "c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
        "repo": "aws/aws-sdk-go",
        "commit_url": "https://github.com/aws/aws-sdk-go/commit/c40a73ace9f6c873ca8743dcbe8c9d8df5091acb",
        "files": [
          "CHANGELOG.md",
          "aws/endpoints/defaults.go",
          "aws/version.go",
          "models/apis/amplify/2017-07-25/api-2.json",
          "models/apis/amplify/2017-07-25/docs-2.json",
          "models/apis/eks/2017-11-01/api-2.json",
          "models/apis/medialive/2017-10-14/api-2.json",
          "models/apis/medialive/2017-10-14/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/api-2.json",
          "models/apis/servicecatalog/2015-12-10/docs-2.json",
          "models/apis/servicecatalog/2015-12-10/paginators-1.json",
          "models/apis/snowball/2016-06-30/api-2.json",
          "models/apis/snowball/2016-06-30/docs-2.json",
          "models/endpoints/endpoints.json",
          "service/amplify/api.go",
          "service/eks/api.go",
          "service/medialive/api.go",
          "service/servicecatalog/api.go",
          "service/servicecatalog/servicecatalogiface/interface.go",
          "service/snowball/api.go",
          "service/snowball/doc.go",
          "service/snowball/errors.go",
          "service/snowball/snowballiface/interface.go"
        ],
        "message": "Release v1.35.7 (2020-10-09) ===\n\n### Service Client Updates\n* `service/amplify`: Updates service API and documentation\n* `service/eks`: Updates service API\n* `service/medialive`: Updates service API and documentation\n  * WAV audio output. Extracting ancillary captions in MP4 file inputs. Priority on channels feeding a multiplex (higher priority channels will tend to have higher video quality).\n* `service/servicecatalog`: Updates service API, documentation, and paginators\n  * This new API takes either a ProvisonedProductId or a ProvisionedProductName, along with a list of 1 or more output keys and responds with the (key,value) pairs of those outputs.\n* `service/snowball`: Updates service API and documentation\n  * We added new APIs to allow customers to better manage their device shipping. You can check if your shipping label expired, generate a new label, and tell us that you received or shipped your job.",
        "before_after_code_files": [
          "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
          "aws/version.go||aws/version.go",
          "service/amplify/api.go||service/amplify/api.go",
          "service/eks/api.go||service/eks/api.go",
          "service/medialive/api.go||service/medialive/api.go",
          "service/servicecatalog/api.go||service/servicecatalog/api.go",
          "service/servicecatalog/servicecatalogiface/interface.go||service/servicecatalog/servicecatalogiface/interface.go",
          "service/snowball/api.go||service/snowball/api.go",
          "service/snowball/doc.go||service/snowball/doc.go",
          "service/snowball/errors.go||service/snowball/errors.go",
          "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ],
          "candidate": [
            "aws/endpoints/defaults.go||aws/endpoints/defaults.go",
            "aws/version.go||aws/version.go"
          ]
        }
      },
      "candidate_diff": {
        "aws/endpoints/defaults.go||aws/endpoints/defaults.go": [
          "File: aws/endpoints/defaults.go -> aws/endpoints/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:   \"api.sagemaker\": service{",
          "595:    Endpoints: endpoints{",
          "596:     \"ap-east-1\":      endpoint{},",
          "597:     \"ap-northeast-1\": endpoint{},",
          "598:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "602:     \"ca-central-1\":   endpoint{},",
          "603:     \"eu-central-1\":   endpoint{},",
          "604:     \"eu-north-1\":     endpoint{},",
          "605:     \"eu-west-1\":      endpoint{},",
          "606:     \"eu-west-2\":      endpoint{},",
          "607:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4876:   \"runtime.sagemaker\": service{",
          "4878:    Endpoints: endpoints{",
          "4879:     \"ap-east-1\":      endpoint{},",
          "4880:     \"ap-northeast-1\": endpoint{},",
          "4881:     \"ap-northeast-2\": endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4881:     \"af-south-1\":     endpoint{},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4885:     \"ca-central-1\":   endpoint{},",
          "4886:     \"eu-central-1\":   endpoint{},",
          "4887:     \"eu-north-1\":     endpoint{},",
          "4888:     \"eu-west-1\":      endpoint{},",
          "4889:     \"eu-west-2\":      endpoint{},",
          "4890:     \"eu-west-3\":      endpoint{},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4891:     \"eu-south-1\":     endpoint{},",
          "",
          "---------------"
        ],
        "aws/version.go||aws/version.go": [
          "File: aws/version.go -> aws/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: const SDKName = \"aws-sdk-go\"",
          "",
          "[Removed Lines]",
          "8: const SDKVersion = \"1.35.6\"",
          "",
          "[Added Lines]",
          "8: const SDKVersion = \"1.35.7\"",
          "",
          "---------------"
        ],
        "service/amplify/api.go||service/amplify/api.go": [
          "File: service/amplify/api.go -> service/amplify/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3618:  EnableBasicAuth *bool `locationName:\"enableBasicAuth\" type:\"boolean\"`",
          "3621:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3624:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3680:  return s",
          "3681: }",
          "3684: func (s *AutoBranchCreationConfig) SetEnablePullRequestPreview(v bool) *AutoBranchCreationConfig {",
          "3685:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3690: func (s *AutoBranchCreationConfig) SetEnablePerformanceMode(v bool) *AutoBranchCreationConfig {",
          "3691:  s.EnablePerformanceMode = &v",
          "3692:  return s",
          "3693: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3918:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3936:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4065:  return s",
          "4066: }",
          "4069: func (s *Branch) SetEnablePullRequestPreview(v bool) *Branch {",
          "4070:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4087: func (s *Branch) SetEnablePerformanceMode(v bool) *Branch {",
          "4088:  s.EnablePerformanceMode = &v",
          "4089:  return s",
          "4090: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4535:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\"`",
          "4538:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4565:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4657:  return s",
          "4658: }",
          "4661: func (s *CreateBranchInput) SetEnablePullRequestPreview(v bool) *CreateBranchInput {",
          "4662:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4691: func (s *CreateBranchInput) SetEnablePerformanceMode(v bool) *CreateBranchInput {",
          "4692:  s.EnablePerformanceMode = &v",
          "4693:  return s",
          "4694: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8836:  EnableNotification *bool `locationName:\"enableNotification\" type:\"boolean\"`",
          "8839:  EnablePullRequestPreview *bool `locationName:\"enablePullRequestPreview\" type:\"boolean\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8878:  EnablePerformanceMode *bool `locationName:\"enablePerformanceMode\" type:\"boolean\"`",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8952:  return s",
          "8953: }",
          "8956: func (s *UpdateBranchInput) SetEnablePullRequestPreview(v bool) *UpdateBranchInput {",
          "8957:  s.EnablePullRequestPreview = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8998: func (s *UpdateBranchInput) SetEnablePerformanceMode(v bool) *UpdateBranchInput {",
          "8999:  s.EnablePerformanceMode = &v",
          "9000:  return s",
          "9001: }",
          "",
          "---------------"
        ],
        "service/eks/api.go||service/eks/api.go": [
          "File: service/eks/api.go -> service/eks/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6943:  ErrorCodeInsufficientFreeAddresses = \"InsufficientFreeAddresses\"",
          "6944: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6946:  ErrorCodeClusterUnreachable = \"ClusterUnreachable\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6957:   ErrorCodeNodeCreationFailure,",
          "6958:   ErrorCodePodEvictionFailure,",
          "6959:   ErrorCodeInsufficientFreeAddresses,",
          "6960:  }",
          "6961: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6963:   ErrorCodeClusterUnreachable,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7069:  NodegroupIssueCodeInternalFailure = \"InternalFailure\"",
          "7070: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7076:  NodegroupIssueCodeClusterUnreachable = \"ClusterUnreachable\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7089:   NodegroupIssueCodeInsufficientFreeAddresses,",
          "7090:   NodegroupIssueCodeAccessDenied,",
          "7091:   NodegroupIssueCodeInternalFailure,",
          "7092:  }",
          "7093: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7099:   NodegroupIssueCodeClusterUnreachable,",
          "",
          "---------------"
        ],
        "service/medialive/api.go||service/medialive/api.go": [
          "File: service/medialive/api.go -> service/medialive/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5258:  return s",
          "5259: }",
          "5262: type ArchiveContainerSettings struct {",
          "5263:  _ struct{} `type:\"structure\"`",
          "5266:  M2tsSettings *M2tsSettings `locationName:\"m2tsSettings\" type:\"structure\"`",
          "5267: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5262: type AncillarySourceSettings struct {",
          "5263:  _ struct{} `type:\"structure\"`",
          "5271:  SourceAncillaryChannelNumber *int64 `locationName:\"sourceAncillaryChannelNumber\" min:\"1\" type:\"integer\"`",
          "5272: }",
          "5275: func (s AncillarySourceSettings) String() string {",
          "5276:  return awsutil.Prettify(s)",
          "5277: }",
          "5280: func (s AncillarySourceSettings) GoString() string {",
          "5281:  return s.String()",
          "5282: }",
          "5285: func (s *AncillarySourceSettings) Validate() error {",
          "5286:  invalidParams := request.ErrInvalidParams{Context: \"AncillarySourceSettings\"}",
          "5287:  if s.SourceAncillaryChannelNumber != nil && *s.SourceAncillaryChannelNumber < 1 {",
          "5288:   invalidParams.Add(request.NewErrParamMinValue(\"SourceAncillaryChannelNumber\", 1))",
          "5289:  }",
          "5291:  if invalidParams.Len() > 0 {",
          "5292:   return invalidParams",
          "5293:  }",
          "5294:  return nil",
          "5295: }",
          "5298: func (s *AncillarySourceSettings) SetSourceAncillaryChannelNumber(v int64) *AncillarySourceSettings {",
          "5299:  s.SourceAncillaryChannelNumber = &v",
          "5300:  return s",
          "5301: }",
          "5311:  RawSettings *RawSettings `locationName:\"rawSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5297:  return s",
          "5298: }",
          "5301: type ArchiveGroupSettings struct {",
          "5302:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5346: func (s *ArchiveContainerSettings) SetRawSettings(v *RawSettings) *ArchiveContainerSettings {",
          "5347:  s.RawSettings = v",
          "5348:  return s",
          "5349: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5527:  PassThroughSettings *PassThroughSettings `locationName:\"passThroughSettings\" type:\"structure\"`",
          "5528: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5581:  WavSettings *WavSettings `locationName:\"wavSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5587:  return s",
          "5588: }",
          "5591: type AudioDescription struct {",
          "5592:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5645: func (s *AudioCodecSettings) SetWavSettings(v *WavSettings) *AudioCodecSettings {",
          "5646:  s.WavSettings = v",
          "5647:  return s",
          "5648: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7717: type CaptionSelectorSettings struct {",
          "7718:  _ struct{} `type:\"structure\"`",
          "7721:  AribSourceSettings *AribSourceSettings `locationName:\"aribSourceSettings\" type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7781:  AncillarySourceSettings *AncillarySourceSettings `locationName:\"ancillarySourceSettings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7750: func (s *CaptionSelectorSettings) Validate() error {",
          "7751:  invalidParams := request.ErrInvalidParams{Context: \"CaptionSelectorSettings\"}",
          "7752:  if s.DvbSubSourceSettings != nil {",
          "7753:   if err := s.DvbSubSourceSettings.Validate(); err != nil {",
          "7754:    invalidParams.AddNested(\"DvbSubSourceSettings\", err.(request.ErrInvalidParams))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7815:  if s.AncillarySourceSettings != nil {",
          "7816:   if err := s.AncillarySourceSettings.Validate(); err != nil {",
          "7817:    invalidParams.AddNested(\"AncillarySourceSettings\", err.(request.ErrInvalidParams))",
          "7818:   }",
          "7819:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7776:  return nil",
          "7777: }",
          "7780: func (s *CaptionSelectorSettings) SetAribSourceSettings(v *AribSourceSettings) *CaptionSelectorSettings {",
          "7781:  s.AribSourceSettings = v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7848: func (s *CaptionSelectorSettings) SetAncillarySourceSettings(v *AncillarySourceSettings) *CaptionSelectorSettings {",
          "7849:  s.AncillarySourceSettings = v",
          "7850:  return s",
          "7851: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7812:  return s",
          "7813: }",
          "7815: type Channel struct {",
          "7816:  _ struct{} `type:\"structure\"`",
          "7819:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7823:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7889: type CdiInputSpecification struct {",
          "7890:  _ struct{} `type:\"structure\"`",
          "7893:  Resolution *string `locationName:\"resolution\" type:\"string\" enum:\"CdiInputResolution\"`",
          "7894: }",
          "7897: func (s CdiInputSpecification) String() string {",
          "7898:  return awsutil.Prettify(s)",
          "7899: }",
          "7902: func (s CdiInputSpecification) GoString() string {",
          "7903:  return s.String()",
          "7904: }",
          "7907: func (s *CdiInputSpecification) SetResolution(v string) *CdiInputSpecification {",
          "7908:  s.Resolution = &v",
          "7909:  return s",
          "7910: }",
          "7919:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7878:  return s",
          "7879: }",
          "7882: func (s *Channel) SetChannelClass(v string) *Channel {",
          "7883:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7983: func (s *Channel) SetCdiInputSpecification(v *CdiInputSpecification) *Channel {",
          "7984:  s.CdiInputSpecification = v",
          "7985:  return s",
          "7986: }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7992:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "7996:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8102:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8045:  return s",
          "8046: }",
          "8049: func (s *ChannelSummary) SetChannelClass(v string) *ChannelSummary {",
          "8050:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8160: func (s *ChannelSummary) SetCdiInputSpecification(v *CdiInputSpecification) *ChannelSummary {",
          "8161:  s.CdiInputSpecification = v",
          "8162:  return s",
          "8163: }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8190: type CreateChannelInput struct {",
          "8191:  _ struct{} `type:\"structure\"`",
          "8195:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8310:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8262:  return nil",
          "8263: }",
          "8266: func (s *CreateChannelInput) SetChannelClass(v string) *CreateChannelInput {",
          "8267:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8385: func (s *CreateChannelInput) SetCdiInputSpecification(v *CdiInputSpecification) *CreateChannelInput {",
          "8386:  s.CdiInputSpecification = v",
          "8387:  return s",
          "8388: }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "8859:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "8863:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8986:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "8907:  return s",
          "8908: }",
          "8911: func (s *DeleteChannelOutput) SetChannelClass(v string) *DeleteChannelOutput {",
          "8912:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9038: func (s *DeleteChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *DeleteChannelOutput {",
          "9039:  s.CdiInputSpecification = v",
          "9040:  return s",
          "9041: }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "9298:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "9300:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "9301: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9433:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "9328:  return s",
          "9329: }",
          "9332: func (s *DeleteMultiplexProgramOutput) SetProgramName(v string) *DeleteMultiplexProgramOutput {",
          "9333:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9467: func (s *DeleteMultiplexProgramOutput) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *DeleteMultiplexProgramOutput {",
          "9468:  s.PipelineDetails = v",
          "9469:  return s",
          "9470: }",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "9698:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "9702:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9841:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "9746:  return s",
          "9747: }",
          "9750: func (s *DescribeChannelOutput) SetChannelClass(v string) *DescribeChannelOutput {",
          "9751:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9893: func (s *DescribeChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *DescribeChannelOutput {",
          "9894:  s.CdiInputSpecification = v",
          "9895:  return s",
          "9896: }",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "10559:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "10561:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "10562: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10710:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "10589:  return s",
          "10590: }",
          "10593: func (s *DescribeMultiplexProgramOutput) SetProgramName(v string) *DescribeMultiplexProgramOutput {",
          "10594:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10744: func (s *DescribeMultiplexProgramOutput) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *DescribeMultiplexProgramOutput {",
          "10745:  s.PipelineDetails = v",
          "10746:  return s",
          "10747: }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "18124:  return s",
          "18125: }",
          "18128: type MsSmoothGroupSettings struct {",
          "18129:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18285: type Mpeg2FilterSettings struct {",
          "18286:  _ struct{} `type:\"structure\"`",
          "18289:  TemporalFilterSettings *TemporalFilterSettings `locationName:\"temporalFilterSettings\" type:\"structure\"`",
          "18290: }",
          "18293: func (s Mpeg2FilterSettings) String() string {",
          "18294:  return awsutil.Prettify(s)",
          "18295: }",
          "18298: func (s Mpeg2FilterSettings) GoString() string {",
          "18299:  return s.String()",
          "18300: }",
          "18303: func (s *Mpeg2FilterSettings) SetTemporalFilterSettings(v *TemporalFilterSettings) *Mpeg2FilterSettings {",
          "18304:  s.TemporalFilterSettings = v",
          "18305:  return s",
          "18306: }",
          "18309: type Mpeg2Settings struct {",
          "18310:  _ struct{} `type:\"structure\"`",
          "18316:  AdaptiveQuantization *string `locationName:\"adaptiveQuantization\" type:\"string\" enum:\"Mpeg2AdaptiveQuantization\"`",
          "18323:  AfdSignaling *string `locationName:\"afdSignaling\" type:\"string\" enum:\"AfdSignaling\"`",
          "18328:  ColorMetadata *string `locationName:\"colorMetadata\" type:\"string\" enum:\"Mpeg2ColorMetadata\"`",
          "18336:  ColorSpace *string `locationName:\"colorSpace\" type:\"string\" enum:\"Mpeg2ColorSpace\"`",
          "18339:  DisplayAspectRatio *string `locationName:\"displayAspectRatio\" type:\"string\" enum:\"Mpeg2DisplayRatio\"`",
          "18350:  FilterSettings *Mpeg2FilterSettings `locationName:\"filterSettings\" type:\"structure\"`",
          "18354:  FixedAfd *string `locationName:\"fixedAfd\" type:\"string\" enum:\"FixedAfd\"`",
          "18361:  FramerateDenominator *int64 `locationName:\"framerateDenominator\" min:\"1\" type:\"integer\" required:\"true\"`",
          "18367:  FramerateNumerator *int64 `locationName:\"framerateNumerator\" min:\"1\" type:\"integer\" required:\"true\"`",
          "18370:  GopClosedCadence *int64 `locationName:\"gopClosedCadence\" type:\"integer\"`",
          "18374:  GopNumBFrames *int64 `locationName:\"gopNumBFrames\" type:\"integer\"`",
          "18381:  GopSize *float64 `locationName:\"gopSize\" type:\"double\"`",
          "18387:  GopSizeUnits *string `locationName:\"gopSizeUnits\" type:\"string\" enum:\"Mpeg2GopSizeUnits\"`",
          "18390:  ScanType *string `locationName:\"scanType\" type:\"string\" enum:\"Mpeg2ScanType\"`",
          "18396:  SubgopLength *string `locationName:\"subgopLength\" type:\"string\" enum:\"Mpeg2SubGopLength\"`",
          "18403:  TimecodeInsertion *string `locationName:\"timecodeInsertion\" type:\"string\" enum:\"Mpeg2TimecodeInsertionBehavior\"`",
          "18404: }",
          "18407: func (s Mpeg2Settings) String() string {",
          "18408:  return awsutil.Prettify(s)",
          "18409: }",
          "18412: func (s Mpeg2Settings) GoString() string {",
          "18413:  return s.String()",
          "18414: }",
          "18417: func (s *Mpeg2Settings) Validate() error {",
          "18418:  invalidParams := request.ErrInvalidParams{Context: \"Mpeg2Settings\"}",
          "18419:  if s.FramerateDenominator == nil {",
          "18420:   invalidParams.Add(request.NewErrParamRequired(\"FramerateDenominator\"))",
          "18421:  }",
          "18422:  if s.FramerateDenominator != nil && *s.FramerateDenominator < 1 {",
          "18423:   invalidParams.Add(request.NewErrParamMinValue(\"FramerateDenominator\", 1))",
          "18424:  }",
          "18425:  if s.FramerateNumerator == nil {",
          "18426:   invalidParams.Add(request.NewErrParamRequired(\"FramerateNumerator\"))",
          "18427:  }",
          "18428:  if s.FramerateNumerator != nil && *s.FramerateNumerator < 1 {",
          "18429:   invalidParams.Add(request.NewErrParamMinValue(\"FramerateNumerator\", 1))",
          "18430:  }",
          "18432:  if invalidParams.Len() > 0 {",
          "18433:   return invalidParams",
          "18434:  }",
          "18435:  return nil",
          "18436: }",
          "18439: func (s *Mpeg2Settings) SetAdaptiveQuantization(v string) *Mpeg2Settings {",
          "18440:  s.AdaptiveQuantization = &v",
          "18441:  return s",
          "18442: }",
          "18445: func (s *Mpeg2Settings) SetAfdSignaling(v string) *Mpeg2Settings {",
          "18446:  s.AfdSignaling = &v",
          "18447:  return s",
          "18448: }",
          "18451: func (s *Mpeg2Settings) SetColorMetadata(v string) *Mpeg2Settings {",
          "18452:  s.ColorMetadata = &v",
          "18453:  return s",
          "18454: }",
          "18457: func (s *Mpeg2Settings) SetColorSpace(v string) *Mpeg2Settings {",
          "18458:  s.ColorSpace = &v",
          "18459:  return s",
          "18460: }",
          "18463: func (s *Mpeg2Settings) SetDisplayAspectRatio(v string) *Mpeg2Settings {",
          "18464:  s.DisplayAspectRatio = &v",
          "18465:  return s",
          "18466: }",
          "18469: func (s *Mpeg2Settings) SetFilterSettings(v *Mpeg2FilterSettings) *Mpeg2Settings {",
          "18470:  s.FilterSettings = v",
          "18471:  return s",
          "18472: }",
          "18475: func (s *Mpeg2Settings) SetFixedAfd(v string) *Mpeg2Settings {",
          "18476:  s.FixedAfd = &v",
          "18477:  return s",
          "18478: }",
          "18481: func (s *Mpeg2Settings) SetFramerateDenominator(v int64) *Mpeg2Settings {",
          "18482:  s.FramerateDenominator = &v",
          "18483:  return s",
          "18484: }",
          "18487: func (s *Mpeg2Settings) SetFramerateNumerator(v int64) *Mpeg2Settings {",
          "18488:  s.FramerateNumerator = &v",
          "18489:  return s",
          "18490: }",
          "18493: func (s *Mpeg2Settings) SetGopClosedCadence(v int64) *Mpeg2Settings {",
          "18494:  s.GopClosedCadence = &v",
          "18495:  return s",
          "18496: }",
          "18499: func (s *Mpeg2Settings) SetGopNumBFrames(v int64) *Mpeg2Settings {",
          "18500:  s.GopNumBFrames = &v",
          "18501:  return s",
          "18502: }",
          "18505: func (s *Mpeg2Settings) SetGopSize(v float64) *Mpeg2Settings {",
          "18506:  s.GopSize = &v",
          "18507:  return s",
          "18508: }",
          "18511: func (s *Mpeg2Settings) SetGopSizeUnits(v string) *Mpeg2Settings {",
          "18512:  s.GopSizeUnits = &v",
          "18513:  return s",
          "18514: }",
          "18517: func (s *Mpeg2Settings) SetScanType(v string) *Mpeg2Settings {",
          "18518:  s.ScanType = &v",
          "18519:  return s",
          "18520: }",
          "18523: func (s *Mpeg2Settings) SetSubgopLength(v string) *Mpeg2Settings {",
          "18524:  s.SubgopLength = &v",
          "18525:  return s",
          "18526: }",
          "18529: func (s *Mpeg2Settings) SetTimecodeInsertion(v string) *Mpeg2Settings {",
          "18530:  s.TimecodeInsertion = &v",
          "18531:  return s",
          "18532: }",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "18610:  PacketIdentifiersMap *MultiplexProgramPacketIdentifiersMap `locationName:\"packetIdentifiersMap\" type:\"structure\"`",
          "18613:  ProgramName *string `locationName:\"programName\" type:\"string\"`",
          "18614: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19023:  PipelineDetails []*MultiplexProgramPipelineDetail `locationName:\"pipelineDetails\" type:\"list\"`",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "18641:  return s",
          "18642: }",
          "18645: func (s *MultiplexProgram) SetProgramName(v string) *MultiplexProgram {",
          "18646:  s.ProgramName = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19058: func (s *MultiplexProgram) SetPipelineDetails(v []*MultiplexProgramPipelineDetail) *MultiplexProgram {",
          "19059:  s.PipelineDetails = v",
          "19060:  return s",
          "19061: }",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "18820:  return s",
          "18821: }",
          "18824: type MultiplexProgramServiceDescriptor struct {",
          "18825:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19243: type MultiplexProgramPipelineDetail struct {",
          "19244:  _ struct{} `type:\"structure\"`",
          "19248:  ActiveChannelPipeline *string `locationName:\"activeChannelPipeline\" type:\"string\"`",
          "19251:  PipelineId *string `locationName:\"pipelineId\" type:\"string\"`",
          "19252: }",
          "19255: func (s MultiplexProgramPipelineDetail) String() string {",
          "19256:  return awsutil.Prettify(s)",
          "19257: }",
          "19260: func (s MultiplexProgramPipelineDetail) GoString() string {",
          "19261:  return s.String()",
          "19262: }",
          "19265: func (s *MultiplexProgramPipelineDetail) SetActiveChannelPipeline(v string) *MultiplexProgramPipelineDetail {",
          "19266:  s.ActiveChannelPipeline = &v",
          "19267:  return s",
          "19268: }",
          "19271: func (s *MultiplexProgramPipelineDetail) SetPipelineId(v string) *MultiplexProgramPipelineDetail {",
          "19272:  s.PipelineId = &v",
          "19273:  return s",
          "19274: }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "18986:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "18989:  MaximumVideoBufferDelayMilliseconds *int64 `locationName:\"maximumVideoBufferDelayMilliseconds\" min:\"1000\" type:\"integer\"`",
          "",
          "[Added Lines]",
          "19442:  MaximumVideoBufferDelayMilliseconds *int64 `locationName:\"maximumVideoBufferDelayMilliseconds\" min:\"800\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "19016: func (s *MultiplexSettings) Validate() error {",
          "19017:  invalidParams := request.ErrInvalidParams{Context: \"MultiplexSettings\"}",
          "19020:  }",
          "19021:  if s.TransportStreamBitrate == nil {",
          "19022:   invalidParams.Add(request.NewErrParamRequired(\"TransportStreamBitrate\"))",
          "",
          "[Removed Lines]",
          "19018:  if s.MaximumVideoBufferDelayMilliseconds != nil && *s.MaximumVideoBufferDelayMilliseconds < 1000 {",
          "19019:   invalidParams.Add(request.NewErrParamMinValue(\"MaximumVideoBufferDelayMilliseconds\", 1000))",
          "",
          "[Added Lines]",
          "19471:  if s.MaximumVideoBufferDelayMilliseconds != nil && *s.MaximumVideoBufferDelayMilliseconds < 800 {",
          "19472:   invalidParams.Add(request.NewErrParamMinValue(\"MaximumVideoBufferDelayMilliseconds\", 800))",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "19093:  MinimumBitrate *int64 `locationName:\"minimumBitrate\" min:\"100000\" type:\"integer\"`",
          "19094: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19553:  Priority *int64 `locationName:\"priority\" type:\"integer\"`",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "19112:  if s.MinimumBitrate != nil && *s.MinimumBitrate < 100000 {",
          "19113:   invalidParams.Add(request.NewErrParamMinValue(\"MinimumBitrate\", 100000))",
          "19114:  }",
          "19116:  if invalidParams.Len() > 0 {",
          "19117:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19575:  if s.Priority != nil && *s.Priority < -5 {",
          "19576:   invalidParams.Add(request.NewErrParamMinValue(\"Priority\", -5))",
          "19577:  }",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "19131:  return s",
          "19132: }",
          "19134: type MultiplexSummary struct {",
          "19135:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19598: func (s *MultiplexStatmuxVideoSettings) SetPriority(v int64) *MultiplexStatmuxVideoSettings {",
          "19599:  s.Priority = &v",
          "19600:  return s",
          "19601: }",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "20331:  return s",
          "20332: }",
          "20335: type Rec601Settings struct {",
          "20336:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20804: type RawSettings struct {",
          "20805:  _ struct{} `type:\"structure\"`",
          "20806: }",
          "20809: func (s RawSettings) String() string {",
          "20810:  return awsutil.Prettify(s)",
          "20811: }",
          "20814: func (s RawSettings) GoString() string {",
          "20815:  return s.String()",
          "20816: }",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "22006:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "22010:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22492:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "22054:  return s",
          "22055: }",
          "22058: func (s *StartChannelOutput) SetChannelClass(v string) *StartChannelOutput {",
          "22059:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22544: func (s *StartChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *StartChannelOutput {",
          "22545:  s.CdiInputSpecification = v",
          "22546:  return s",
          "22547: }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "22585:  Arn *string `locationName:\"arn\" type:\"string\"`",
          "22589:  ChannelClass *string `locationName:\"channelClass\" type:\"string\" enum:\"ChannelClass\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23079:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "22633:  return s",
          "22634: }",
          "22637: func (s *StopChannelOutput) SetChannelClass(v string) *StopChannelOutput {",
          "22638:  s.ChannelClass = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23131: func (s *StopChannelOutput) SetCdiInputSpecification(v *CdiInputSpecification) *StopChannelOutput {",
          "23132:  s.CdiInputSpecification = v",
          "23133:  return s",
          "23134: }",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "23433: type UpdateChannelInput struct {",
          "23434:  _ struct{} `type:\"structure\"`",
          "23437:  ChannelId *string `location:\"uri\" locationName:\"channelId\" type:\"string\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23936:  CdiInputSpecification *CdiInputSpecification `locationName:\"cdiInputSpecification\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "23504:  return nil",
          "23505: }",
          "23508: func (s *UpdateChannelInput) SetChannelId(v string) *UpdateChannelInput {",
          "23509:  s.ChannelId = &v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24010: func (s *UpdateChannelInput) SetCdiInputSpecification(v *CdiInputSpecification) *UpdateChannelInput {",
          "24011:  s.CdiInputSpecification = v",
          "24012:  return s",
          "24013: }",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "24221:  H265Settings *H265Settings `locationName:\"h265Settings\" type:\"structure\"`",
          "24222: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24732:  Mpeg2Settings *Mpeg2Settings `locationName:\"mpeg2Settings\" type:\"structure\"`",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "24249:    invalidParams.AddNested(\"H265Settings\", err.(request.ErrInvalidParams))",
          "24250:   }",
          "24251:  }",
          "24253:  if invalidParams.Len() > 0 {",
          "24254:   return invalidParams",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24763:  if s.Mpeg2Settings != nil {",
          "24764:   if err := s.Mpeg2Settings.Validate(); err != nil {",
          "24765:    invalidParams.AddNested(\"Mpeg2Settings\", err.(request.ErrInvalidParams))",
          "24766:   }",
          "24767:  }",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "24274:  return s",
          "24275: }",
          "24278: type VideoDescription struct {",
          "24279:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24794: func (s *VideoCodecSettings) SetMpeg2Settings(v *Mpeg2Settings) *VideoCodecSettings {",
          "24795:  s.Mpeg2Settings = v",
          "24796:  return s",
          "24797: }",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "24529:  return s",
          "24530: }",
          "24533: type WebvttDestinationSettings struct {",
          "24534:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25055: type WavSettings struct {",
          "25056:  _ struct{} `type:\"structure\"`",
          "25059:  BitDepth *float64 `locationName:\"bitDepth\" type:\"double\"`",
          "25063:  CodingMode *string `locationName:\"codingMode\" type:\"string\" enum:\"WavCodingMode\"`",
          "25066:  SampleRate *float64 `locationName:\"sampleRate\" type:\"double\"`",
          "25067: }",
          "25070: func (s WavSettings) String() string {",
          "25071:  return awsutil.Prettify(s)",
          "25072: }",
          "25075: func (s WavSettings) GoString() string {",
          "25076:  return s.String()",
          "25077: }",
          "25080: func (s *WavSettings) SetBitDepth(v float64) *WavSettings {",
          "25081:  s.BitDepth = &v",
          "25082:  return s",
          "25083: }",
          "25086: func (s *WavSettings) SetCodingMode(v string) *WavSettings {",
          "25087:  s.CodingMode = &v",
          "25088:  return s",
          "25089: }",
          "25092: func (s *WavSettings) SetSampleRate(v float64) *WavSettings {",
          "25093:  s.SampleRate = &v",
          "25094:  return s",
          "25095: }",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "25199:  }",
          "25200: }",
          "25204: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25770: const (",
          "25772:  CdiInputResolutionSd = \"SD\"",
          "25775:  CdiInputResolutionHd = \"HD\"",
          "25778:  CdiInputResolutionFhd = \"FHD\"",
          "25781:  CdiInputResolutionUhd = \"UHD\"",
          "25782: )",
          "25785: func CdiInputResolution_Values() []string {",
          "25786:  return []string{",
          "25787:   CdiInputResolutionSd,",
          "25788:   CdiInputResolutionHd,",
          "25789:   CdiInputResolutionFhd,",
          "25790:   CdiInputResolutionUhd,",
          "25791:  }",
          "25792: }",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "28237:  }",
          "28238: }",
          "28241: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28833: const (",
          "28835:  Mpeg2AdaptiveQuantizationAuto = \"AUTO\"",
          "28838:  Mpeg2AdaptiveQuantizationHigh = \"HIGH\"",
          "28841:  Mpeg2AdaptiveQuantizationLow = \"LOW\"",
          "28844:  Mpeg2AdaptiveQuantizationMedium = \"MEDIUM\"",
          "28847:  Mpeg2AdaptiveQuantizationOff = \"OFF\"",
          "28848: )",
          "28851: func Mpeg2AdaptiveQuantization_Values() []string {",
          "28852:  return []string{",
          "28853:   Mpeg2AdaptiveQuantizationAuto,",
          "28854:   Mpeg2AdaptiveQuantizationHigh,",
          "28855:   Mpeg2AdaptiveQuantizationLow,",
          "28856:   Mpeg2AdaptiveQuantizationMedium,",
          "28857:   Mpeg2AdaptiveQuantizationOff,",
          "28858:  }",
          "28859: }",
          "28862: const (",
          "28864:  Mpeg2ColorMetadataIgnore = \"IGNORE\"",
          "28867:  Mpeg2ColorMetadataInsert = \"INSERT\"",
          "28868: )",
          "28871: func Mpeg2ColorMetadata_Values() []string {",
          "28872:  return []string{",
          "28873:   Mpeg2ColorMetadataIgnore,",
          "28874:   Mpeg2ColorMetadataInsert,",
          "28875:  }",
          "28876: }",
          "28879: const (",
          "28881:  Mpeg2ColorSpaceAuto = \"AUTO\"",
          "28884:  Mpeg2ColorSpacePassthrough = \"PASSTHROUGH\"",
          "28885: )",
          "28888: func Mpeg2ColorSpace_Values() []string {",
          "28889:  return []string{",
          "28890:   Mpeg2ColorSpaceAuto,",
          "28891:   Mpeg2ColorSpacePassthrough,",
          "28892:  }",
          "28893: }",
          "28896: const (",
          "28898:  Mpeg2DisplayRatioDisplayratio16x9 = \"DISPLAYRATIO16X9\"",
          "28901:  Mpeg2DisplayRatioDisplayratio4x3 = \"DISPLAYRATIO4X3\"",
          "28902: )",
          "28905: func Mpeg2DisplayRatio_Values() []string {",
          "28906:  return []string{",
          "28907:   Mpeg2DisplayRatioDisplayratio16x9,",
          "28908:   Mpeg2DisplayRatioDisplayratio4x3,",
          "28909:  }",
          "28910: }",
          "28913: const (",
          "28915:  Mpeg2GopSizeUnitsFrames = \"FRAMES\"",
          "28918:  Mpeg2GopSizeUnitsSeconds = \"SECONDS\"",
          "28919: )",
          "28922: func Mpeg2GopSizeUnits_Values() []string {",
          "28923:  return []string{",
          "28924:   Mpeg2GopSizeUnitsFrames,",
          "28925:   Mpeg2GopSizeUnitsSeconds,",
          "28926:  }",
          "28927: }",
          "28930: const (",
          "28932:  Mpeg2ScanTypeInterlaced = \"INTERLACED\"",
          "28935:  Mpeg2ScanTypeProgressive = \"PROGRESSIVE\"",
          "28936: )",
          "28939: func Mpeg2ScanType_Values() []string {",
          "28940:  return []string{",
          "28941:   Mpeg2ScanTypeInterlaced,",
          "28942:   Mpeg2ScanTypeProgressive,",
          "28943:  }",
          "28944: }",
          "28947: const (",
          "28949:  Mpeg2SubGopLengthDynamic = \"DYNAMIC\"",
          "28952:  Mpeg2SubGopLengthFixed = \"FIXED\"",
          "28953: )",
          "28956: func Mpeg2SubGopLength_Values() []string {",
          "28957:  return []string{",
          "28958:   Mpeg2SubGopLengthDynamic,",
          "28959:   Mpeg2SubGopLengthFixed,",
          "28960:  }",
          "28961: }",
          "28964: const (",
          "28966:  Mpeg2TimecodeInsertionBehaviorDisabled = \"DISABLED\"",
          "28969:  Mpeg2TimecodeInsertionBehaviorGopTimecode = \"GOP_TIMECODE\"",
          "28970: )",
          "28973: func Mpeg2TimecodeInsertionBehavior_Values() []string {",
          "28974:  return []string{",
          "28975:   Mpeg2TimecodeInsertionBehaviorDisabled,",
          "28976:   Mpeg2TimecodeInsertionBehaviorGopTimecode,",
          "28977:  }",
          "28978: }",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "29221:   VideoSelectorColorSpaceUsageForce,",
          "29222:  }",
          "29223: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29966: const (",
          "29968:  WavCodingModeCodingMode10 = \"CODING_MODE_1_0\"",
          "29971:  WavCodingModeCodingMode20 = \"CODING_MODE_2_0\"",
          "29974:  WavCodingModeCodingMode40 = \"CODING_MODE_4_0\"",
          "29977:  WavCodingModeCodingMode80 = \"CODING_MODE_8_0\"",
          "29978: )",
          "29981: func WavCodingMode_Values() []string {",
          "29982:  return []string{",
          "29983:   WavCodingModeCodingMode10,",
          "29984:   WavCodingModeCodingMode20,",
          "29985:   WavCodingModeCodingMode40,",
          "29986:   WavCodingModeCodingMode80,",
          "29987:  }",
          "29988: }",
          "",
          "---------------"
        ],
        "service/servicecatalog/api.go||service/servicecatalog/api.go": [
          "File: service/servicecatalog/api.go -> service/servicecatalog/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4386:  return out, req.Send()",
          "4387: }",
          "4389: const opListAcceptedPortfolioShares = \"ListAcceptedPortfolioShares\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4389: const opGetProvisionedProductOutputs = \"GetProvisionedProductOutputs\"",
          "4415: func (c *ServiceCatalog) GetProvisionedProductOutputsRequest(input *GetProvisionedProductOutputsInput) (req *request.Request, output *GetProvisionedProductOutputsOutput) {",
          "4416:  op := &request.Operation{",
          "4417:   Name:       opGetProvisionedProductOutputs,",
          "4418:   HTTPMethod: \"POST\",",
          "4419:   HTTPPath:   \"/\",",
          "4420:   Paginator: &request.Paginator{",
          "4421:    InputTokens:     []string{\"PageToken\"},",
          "4422:    OutputTokens:    []string{\"NextPageToken\"},",
          "4423:    LimitToken:      \"PageSize\",",
          "4424:    TruncationToken: \"\",",
          "4425:   },",
          "4426:  }",
          "4428:  if input == nil {",
          "4429:   input = &GetProvisionedProductOutputsInput{}",
          "4430:  }",
          "4432:  output = &GetProvisionedProductOutputsOutput{}",
          "4433:  req = c.newRequest(op, input, output)",
          "4434:  return",
          "4435: }",
          "4458: func (c *ServiceCatalog) GetProvisionedProductOutputs(input *GetProvisionedProductOutputsInput) (*GetProvisionedProductOutputsOutput, error) {",
          "4459:  req, out := c.GetProvisionedProductOutputsRequest(input)",
          "4460:  return out, req.Send()",
          "4461: }",
          "4472: func (c *ServiceCatalog) GetProvisionedProductOutputsWithContext(ctx aws.Context, input *GetProvisionedProductOutputsInput, opts ...request.Option) (*GetProvisionedProductOutputsOutput, error) {",
          "4473:  req, out := c.GetProvisionedProductOutputsRequest(input)",
          "4474:  req.SetContext(ctx)",
          "4475:  req.ApplyOptions(opts...)",
          "4476:  return out, req.Send()",
          "4477: }",
          "4496: func (c *ServiceCatalog) GetProvisionedProductOutputsPages(input *GetProvisionedProductOutputsInput, fn func(*GetProvisionedProductOutputsOutput, bool) bool) error {",
          "4497:  return c.GetProvisionedProductOutputsPagesWithContext(aws.BackgroundContext(), input, fn)",
          "4498: }",
          "4507: func (c *ServiceCatalog) GetProvisionedProductOutputsPagesWithContext(ctx aws.Context, input *GetProvisionedProductOutputsInput, fn func(*GetProvisionedProductOutputsOutput, bool) bool, opts ...request.Option) error {",
          "4508:  p := request.Pagination{",
          "4509:   NewRequest: func() (*request.Request, error) {",
          "4510:    var inCpy *GetProvisionedProductOutputsInput",
          "4511:    if input != nil {",
          "4512:     tmp := *input",
          "4513:     inCpy = &tmp",
          "4514:    }",
          "4515:    req, _ := c.GetProvisionedProductOutputsRequest(inCpy)",
          "4516:    req.SetContext(ctx)",
          "4517:    req.ApplyOptions(opts...)",
          "4518:    return req, nil",
          "4519:   },",
          "4520:  }",
          "4522:  for p.Next() {",
          "4523:   if !fn(p.Page().(*GetProvisionedProductOutputsOutput), !p.HasNextPage()) {",
          "4524:    break",
          "4525:   }",
          "4526:  }",
          "4528:  return p.Err()",
          "4529: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13641:  return s",
          "13642: }",
          "13645: type InvalidParametersException struct {",
          "13646:  _            struct{}                  `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13778: type GetProvisionedProductOutputsInput struct {",
          "13779:  _ struct{} `type:\"structure\"`",
          "13788:  AcceptLanguage *string `type:\"string\"`",
          "13792:  OutputKeys []*string `type:\"list\"`",
          "13795:  PageSize *int64 `type:\"integer\"`",
          "13799:  PageToken *string `type:\"string\"`",
          "13802:  ProvisionedProductId *string `min:\"1\" type:\"string\"`",
          "13805:  ProvisionedProductName *string `min:\"1\" type:\"string\"`",
          "13806: }",
          "13809: func (s GetProvisionedProductOutputsInput) String() string {",
          "13810:  return awsutil.Prettify(s)",
          "13811: }",
          "13814: func (s GetProvisionedProductOutputsInput) GoString() string {",
          "13815:  return s.String()",
          "13816: }",
          "13819: func (s *GetProvisionedProductOutputsInput) Validate() error {",
          "13820:  invalidParams := request.ErrInvalidParams{Context: \"GetProvisionedProductOutputsInput\"}",
          "13821:  if s.ProvisionedProductId != nil && len(*s.ProvisionedProductId) < 1 {",
          "13822:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductId\", 1))",
          "13823:  }",
          "13824:  if s.ProvisionedProductName != nil && len(*s.ProvisionedProductName) < 1 {",
          "13825:   invalidParams.Add(request.NewErrParamMinLen(\"ProvisionedProductName\", 1))",
          "13826:  }",
          "13828:  if invalidParams.Len() > 0 {",
          "13829:   return invalidParams",
          "13830:  }",
          "13831:  return nil",
          "13832: }",
          "13835: func (s *GetProvisionedProductOutputsInput) SetAcceptLanguage(v string) *GetProvisionedProductOutputsInput {",
          "13836:  s.AcceptLanguage = &v",
          "13837:  return s",
          "13838: }",
          "13841: func (s *GetProvisionedProductOutputsInput) SetOutputKeys(v []*string) *GetProvisionedProductOutputsInput {",
          "13842:  s.OutputKeys = v",
          "13843:  return s",
          "13844: }",
          "13847: func (s *GetProvisionedProductOutputsInput) SetPageSize(v int64) *GetProvisionedProductOutputsInput {",
          "13848:  s.PageSize = &v",
          "13849:  return s",
          "13850: }",
          "13853: func (s *GetProvisionedProductOutputsInput) SetPageToken(v string) *GetProvisionedProductOutputsInput {",
          "13854:  s.PageToken = &v",
          "13855:  return s",
          "13856: }",
          "13859: func (s *GetProvisionedProductOutputsInput) SetProvisionedProductId(v string) *GetProvisionedProductOutputsInput {",
          "13860:  s.ProvisionedProductId = &v",
          "13861:  return s",
          "13862: }",
          "13865: func (s *GetProvisionedProductOutputsInput) SetProvisionedProductName(v string) *GetProvisionedProductOutputsInput {",
          "13866:  s.ProvisionedProductName = &v",
          "13867:  return s",
          "13868: }",
          "13870: type GetProvisionedProductOutputsOutput struct {",
          "13871:  _ struct{} `type:\"structure\"`",
          "13875:  NextPageToken *string `type:\"string\"`",
          "13880:  Outputs []*RecordOutput `type:\"list\"`",
          "13881: }",
          "13884: func (s GetProvisionedProductOutputsOutput) String() string {",
          "13885:  return awsutil.Prettify(s)",
          "13886: }",
          "13889: func (s GetProvisionedProductOutputsOutput) GoString() string {",
          "13890:  return s.String()",
          "13891: }",
          "13894: func (s *GetProvisionedProductOutputsOutput) SetNextPageToken(v string) *GetProvisionedProductOutputsOutput {",
          "13895:  s.NextPageToken = &v",
          "13896:  return s",
          "13897: }",
          "13900: func (s *GetProvisionedProductOutputsOutput) SetOutputs(v []*RecordOutput) *GetProvisionedProductOutputsOutput {",
          "13901:  s.Outputs = v",
          "13902:  return s",
          "13903: }",
          "",
          "---------------"
        ],
        "service/servicecatalog/servicecatalogiface/interface.go||service/servicecatalog/servicecatalogiface/interface.go": [
          "File: service/servicecatalog/servicecatalogiface/interface.go -> service/servicecatalog/servicecatalogiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:  GetAWSOrganizationsAccessStatusWithContext(aws.Context, *servicecatalog.GetAWSOrganizationsAccessStatusInput, ...request.Option) (*servicecatalog.GetAWSOrganizationsAccessStatusOutput, error)",
          "261:  GetAWSOrganizationsAccessStatusRequest(*servicecatalog.GetAWSOrganizationsAccessStatusInput) (*request.Request, *servicecatalog.GetAWSOrganizationsAccessStatusOutput)",
          "263:  ListAcceptedPortfolioShares(*servicecatalog.ListAcceptedPortfolioSharesInput) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error)",
          "264:  ListAcceptedPortfolioSharesWithContext(aws.Context, *servicecatalog.ListAcceptedPortfolioSharesInput, ...request.Option) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error)",
          "265:  ListAcceptedPortfolioSharesRequest(*servicecatalog.ListAcceptedPortfolioSharesInput) (*request.Request, *servicecatalog.ListAcceptedPortfolioSharesOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:  GetProvisionedProductOutputs(*servicecatalog.GetProvisionedProductOutputsInput) (*servicecatalog.GetProvisionedProductOutputsOutput, error)",
          "264:  GetProvisionedProductOutputsWithContext(aws.Context, *servicecatalog.GetProvisionedProductOutputsInput, ...request.Option) (*servicecatalog.GetProvisionedProductOutputsOutput, error)",
          "265:  GetProvisionedProductOutputsRequest(*servicecatalog.GetProvisionedProductOutputsInput) (*request.Request, *servicecatalog.GetProvisionedProductOutputsOutput)",
          "267:  GetProvisionedProductOutputsPages(*servicecatalog.GetProvisionedProductOutputsInput, func(*servicecatalog.GetProvisionedProductOutputsOutput, bool) bool) error",
          "268:  GetProvisionedProductOutputsPagesWithContext(aws.Context, *servicecatalog.GetProvisionedProductOutputsInput, func(*servicecatalog.GetProvisionedProductOutputsOutput, bool) bool, ...request.Option) error",
          "",
          "---------------"
        ],
        "service/snowball/api.go||service/snowball/api.go": [
          "File: service/snowball/api.go -> service/snowball/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:  return out, req.Send()",
          "482: }",
          "484: const opDescribeAddress = \"DescribeAddress\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "484: const opCreateReturnShippingLabel = \"CreateReturnShippingLabel\"",
          "510: func (c *Snowball) CreateReturnShippingLabelRequest(input *CreateReturnShippingLabelInput) (req *request.Request, output *CreateReturnShippingLabelOutput) {",
          "511:  op := &request.Operation{",
          "512:   Name:       opCreateReturnShippingLabel,",
          "513:   HTTPMethod: \"POST\",",
          "514:   HTTPPath:   \"/\",",
          "515:  }",
          "517:  if input == nil {",
          "518:   input = &CreateReturnShippingLabelInput{}",
          "519:  }",
          "521:  output = &CreateReturnShippingLabelOutput{}",
          "522:  req = c.newRequest(op, input, output)",
          "523:  return",
          "524: }",
          "561: func (c *Snowball) CreateReturnShippingLabel(input *CreateReturnShippingLabelInput) (*CreateReturnShippingLabelOutput, error) {",
          "562:  req, out := c.CreateReturnShippingLabelRequest(input)",
          "563:  return out, req.Send()",
          "564: }",
          "575: func (c *Snowball) CreateReturnShippingLabelWithContext(ctx aws.Context, input *CreateReturnShippingLabelInput, opts ...request.Option) (*CreateReturnShippingLabelOutput, error) {",
          "576:  req, out := c.CreateReturnShippingLabelRequest(input)",
          "577:  req.SetContext(ctx)",
          "578:  req.ApplyOptions(opts...)",
          "579:  return out, req.Send()",
          "580: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "868:  return out, req.Send()",
          "869: }",
          "871: const opGetJobManifest = \"GetJobManifest\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "969: const opDescribeReturnShippingLabel = \"DescribeReturnShippingLabel\"",
          "995: func (c *Snowball) DescribeReturnShippingLabelRequest(input *DescribeReturnShippingLabelInput) (req *request.Request, output *DescribeReturnShippingLabelOutput) {",
          "996:  op := &request.Operation{",
          "997:   Name:       opDescribeReturnShippingLabel,",
          "998:   HTTPMethod: \"POST\",",
          "999:   HTTPPath:   \"/\",",
          "1000:  }",
          "1002:  if input == nil {",
          "1003:   input = &DescribeReturnShippingLabelInput{}",
          "1004:  }",
          "1006:  output = &DescribeReturnShippingLabelOutput{}",
          "1007:  req = c.newRequest(op, input, output)",
          "1008:  return",
          "1009: }",
          "1037: func (c *Snowball) DescribeReturnShippingLabel(input *DescribeReturnShippingLabelInput) (*DescribeReturnShippingLabelOutput, error) {",
          "1038:  req, out := c.DescribeReturnShippingLabelRequest(input)",
          "1039:  return out, req.Send()",
          "1040: }",
          "1051: func (c *Snowball) DescribeReturnShippingLabelWithContext(ctx aws.Context, input *DescribeReturnShippingLabelInput, opts ...request.Option) (*DescribeReturnShippingLabelOutput, error) {",
          "1052:  req, out := c.DescribeReturnShippingLabelRequest(input)",
          "1053:  req.SetContext(ctx)",
          "1054:  req.ApplyOptions(opts...)",
          "1055:  return out, req.Send()",
          "1056: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1833:  return out, req.Send()",
          "1834: }",
          "1841: type Address struct {",
          "1842:  _ struct{} `type:\"structure\"`",
          "1845:  AddressId *string `min:\"40\" type:\"string\"`",
          "1848:  City *string `min:\"1\" type:\"string\"`",
          "1851:  Company *string `min:\"1\" type:\"string\"`",
          "1854:  Country *string `min:\"1\" type:\"string\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024: const opUpdateJobShipmentState = \"UpdateJobShipmentState\"",
          "2050: func (c *Snowball) UpdateJobShipmentStateRequest(input *UpdateJobShipmentStateInput) (req *request.Request, output *UpdateJobShipmentStateOutput) {",
          "2051:  op := &request.Operation{",
          "2052:   Name:       opUpdateJobShipmentState,",
          "2053:   HTTPMethod: \"POST\",",
          "2054:   HTTPPath:   \"/\",",
          "2055:  }",
          "2057:  if input == nil {",
          "2058:   input = &UpdateJobShipmentStateInput{}",
          "2059:  }",
          "2061:  output = &UpdateJobShipmentStateOutput{}",
          "2062:  req = c.newRequest(op, input, output)",
          "2063:  req.Handlers.Unmarshal.Swap(jsonrpc.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)",
          "2064:  return",
          "2065: }",
          "2088: func (c *Snowball) UpdateJobShipmentState(input *UpdateJobShipmentStateInput) (*UpdateJobShipmentStateOutput, error) {",
          "2089:  req, out := c.UpdateJobShipmentStateRequest(input)",
          "2090:  return out, req.Send()",
          "2091: }",
          "2102: func (c *Snowball) UpdateJobShipmentStateWithContext(ctx aws.Context, input *UpdateJobShipmentStateInput, opts ...request.Option) (*UpdateJobShipmentStateOutput, error) {",
          "2103:  req, out := c.UpdateJobShipmentStateRequest(input)",
          "2104:  req.SetContext(ctx)",
          "2105:  req.ApplyOptions(opts...)",
          "2106:  return out, req.Send()",
          "2107: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2455:  return s",
          "2456: }",
          "2458: type CreateAddressInput struct {",
          "2459:  _ struct{} `type:\"structure\"`",
          "2464:  Address *Address `type:\"structure\" required:\"true\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2738: type ConflictException struct {",
          "2739:  _            struct{}                  `type:\"structure\"`",
          "2740:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "2742:  ConflictResource *string `min:\"1\" type:\"string\"`",
          "2744:  Message_ *string `locationName:\"Message\" min:\"1\" type:\"string\"`",
          "2745: }",
          "2748: func (s ConflictException) String() string {",
          "2749:  return awsutil.Prettify(s)",
          "2750: }",
          "2753: func (s ConflictException) GoString() string {",
          "2754:  return s.String()",
          "2755: }",
          "2757: func newErrorConflictException(v protocol.ResponseMetadata) error {",
          "2758:  return &ConflictException{",
          "2759:   RespMetadata: v,",
          "2760:  }",
          "2761: }",
          "2764: func (s *ConflictException) Code() string {",
          "2765:  return \"ConflictException\"",
          "2766: }",
          "2769: func (s *ConflictException) Message() string {",
          "2770:  if s.Message_ != nil {",
          "2771:   return *s.Message_",
          "2772:  }",
          "2773:  return \"\"",
          "2774: }",
          "2777: func (s *ConflictException) OrigErr() error {",
          "2778:  return nil",
          "2779: }",
          "2781: func (s *ConflictException) Error() string {",
          "2782:  return fmt.Sprintf(\"%s: %s\\n%s\", s.Code(), s.Message(), s.String())",
          "2783: }",
          "2786: func (s *ConflictException) StatusCode() int {",
          "2787:  return s.RespMetadata.StatusCode",
          "2788: }",
          "2791: func (s *ConflictException) RequestID() string {",
          "2792:  return s.RespMetadata.RequestID",
          "2793: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2979:  return s",
          "2980: }",
          "2985: type DataTransfer struct {",
          "2986:  _ struct{} `type:\"structure\"`",
          "2989:  BytesTransferred *int64 `type:\"long\"`",
          "2992:  ObjectsTransferred *int64 `type:\"long\"`",
          "2997:  TotalBytes *int64 `type:\"long\"`",
          "3002:  TotalObjects *int64 `type:\"long\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3321: type CreateReturnShippingLabelInput struct {",
          "3322:  _ struct{} `type:\"structure\"`",
          "3328:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "3333:  ShippingOption *string `type:\"string\" enum:\"ShippingOption\"`",
          "3334: }",
          "3337: func (s CreateReturnShippingLabelInput) String() string {",
          "3338:  return awsutil.Prettify(s)",
          "3339: }",
          "3342: func (s CreateReturnShippingLabelInput) GoString() string {",
          "3343:  return s.String()",
          "3344: }",
          "3347: func (s *CreateReturnShippingLabelInput) Validate() error {",
          "3348:  invalidParams := request.ErrInvalidParams{Context: \"CreateReturnShippingLabelInput\"}",
          "3349:  if s.JobId == nil {",
          "3350:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "3351:  }",
          "3352:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3353:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3354:  }",
          "3356:  if invalidParams.Len() > 0 {",
          "3357:   return invalidParams",
          "3358:  }",
          "3359:  return nil",
          "3360: }",
          "3363: func (s *CreateReturnShippingLabelInput) SetJobId(v string) *CreateReturnShippingLabelInput {",
          "3364:  s.JobId = &v",
          "3365:  return s",
          "3366: }",
          "3369: func (s *CreateReturnShippingLabelInput) SetShippingOption(v string) *CreateReturnShippingLabelInput {",
          "3370:  s.ShippingOption = &v",
          "3371:  return s",
          "3372: }",
          "3374: type CreateReturnShippingLabelOutput struct {",
          "3375:  _ struct{} `type:\"structure\"`",
          "3379:  Status *string `type:\"string\" enum:\"ShippingLabelStatus\"`",
          "3380: }",
          "3383: func (s CreateReturnShippingLabelOutput) String() string {",
          "3384:  return awsutil.Prettify(s)",
          "3385: }",
          "3388: func (s CreateReturnShippingLabelOutput) GoString() string {",
          "3389:  return s.String()",
          "3390: }",
          "3393: func (s *CreateReturnShippingLabelOutput) SetStatus(v string) *CreateReturnShippingLabelOutput {",
          "3394:  s.Status = &v",
          "3395:  return s",
          "3396: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3322:  return s",
          "3323: }",
          "3326: type DeviceConfiguration struct {",
          "3327:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3741: type DescribeReturnShippingLabelInput struct {",
          "3742:  _ struct{} `type:\"structure\"`",
          "3745:  JobId *string `min:\"39\" type:\"string\"`",
          "3746: }",
          "3749: func (s DescribeReturnShippingLabelInput) String() string {",
          "3750:  return awsutil.Prettify(s)",
          "3751: }",
          "3754: func (s DescribeReturnShippingLabelInput) GoString() string {",
          "3755:  return s.String()",
          "3756: }",
          "3759: func (s *DescribeReturnShippingLabelInput) Validate() error {",
          "3760:  invalidParams := request.ErrInvalidParams{Context: \"DescribeReturnShippingLabelInput\"}",
          "3761:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "3762:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "3763:  }",
          "3765:  if invalidParams.Len() > 0 {",
          "3766:   return invalidParams",
          "3767:  }",
          "3768:  return nil",
          "3769: }",
          "3772: func (s *DescribeReturnShippingLabelInput) SetJobId(v string) *DescribeReturnShippingLabelInput {",
          "3773:  s.JobId = &v",
          "3774:  return s",
          "3775: }",
          "3777: type DescribeReturnShippingLabelOutput struct {",
          "3778:  _ struct{} `type:\"structure\"`",
          "3781:  ExpirationDate *time.Time `type:\"timestamp\"`",
          "3785:  Status *string `type:\"string\" enum:\"ShippingLabelStatus\"`",
          "3786: }",
          "3789: func (s DescribeReturnShippingLabelOutput) String() string {",
          "3790:  return awsutil.Prettify(s)",
          "3791: }",
          "3794: func (s DescribeReturnShippingLabelOutput) GoString() string {",
          "3795:  return s.String()",
          "3796: }",
          "3799: func (s *DescribeReturnShippingLabelOutput) SetExpirationDate(v time.Time) *DescribeReturnShippingLabelOutput {",
          "3800:  s.ExpirationDate = &v",
          "3801:  return s",
          "3802: }",
          "3805: func (s *DescribeReturnShippingLabelOutput) SetStatus(v string) *DescribeReturnShippingLabelOutput {",
          "3806:  s.Status = &v",
          "3807:  return s",
          "3808: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5017:  return s",
          "5018: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5508: type ReturnShippingLabelAlreadyExistsException struct {",
          "5509:  _            struct{}                  `type:\"structure\"`",
          "5510:  RespMetadata protocol.ResponseMetadata `json:\"-\" xml:\"-\"`",
          "5512:  Message_ *string `locationName:\"Message\" min:\"1\" type:\"string\"`",
          "5513: }",
          "5516: func (s ReturnShippingLabelAlreadyExistsException) String() string {",
          "5517:  return awsutil.Prettify(s)",
          "5518: }",
          "5521: func (s ReturnShippingLabelAlreadyExistsException) GoString() string {",
          "5522:  return s.String()",
          "5523: }",
          "5525: func newErrorReturnShippingLabelAlreadyExistsException(v protocol.ResponseMetadata) error {",
          "5526:  return &ReturnShippingLabelAlreadyExistsException{",
          "5527:   RespMetadata: v,",
          "5528:  }",
          "5529: }",
          "5532: func (s *ReturnShippingLabelAlreadyExistsException) Code() string {",
          "5533:  return \"ReturnShippingLabelAlreadyExistsException\"",
          "5534: }",
          "5537: func (s *ReturnShippingLabelAlreadyExistsException) Message() string {",
          "5538:  if s.Message_ != nil {",
          "5539:   return *s.Message_",
          "5540:  }",
          "5541:  return \"\"",
          "5542: }",
          "5545: func (s *ReturnShippingLabelAlreadyExistsException) OrigErr() error {",
          "5546:  return nil",
          "5547: }",
          "5549: func (s *ReturnShippingLabelAlreadyExistsException) Error() string {",
          "5550:  return fmt.Sprintf(\"%s: %s\", s.Code(), s.Message())",
          "5551: }",
          "5554: func (s *ReturnShippingLabelAlreadyExistsException) StatusCode() int {",
          "5555:  return s.RespMetadata.StatusCode",
          "5556: }",
          "5559: func (s *ReturnShippingLabelAlreadyExistsException) RequestID() string {",
          "5560:  return s.RespMetadata.RequestID",
          "5561: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "5557:  return s.String()",
          "5558: }",
          "5561: type WirelessConnection struct {",
          "5562:  _ struct{} `type:\"structure\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6104: type UpdateJobShipmentStateInput struct {",
          "6105:  _ struct{} `type:\"structure\"`",
          "6111:  JobId *string `min:\"39\" type:\"string\" required:\"true\"`",
          "6120:  ShipmentState *string `type:\"string\" required:\"true\" enum:\"ShipmentState\"`",
          "6121: }",
          "6124: func (s UpdateJobShipmentStateInput) String() string {",
          "6125:  return awsutil.Prettify(s)",
          "6126: }",
          "6129: func (s UpdateJobShipmentStateInput) GoString() string {",
          "6130:  return s.String()",
          "6131: }",
          "6134: func (s *UpdateJobShipmentStateInput) Validate() error {",
          "6135:  invalidParams := request.ErrInvalidParams{Context: \"UpdateJobShipmentStateInput\"}",
          "6136:  if s.JobId == nil {",
          "6137:   invalidParams.Add(request.NewErrParamRequired(\"JobId\"))",
          "6138:  }",
          "6139:  if s.JobId != nil && len(*s.JobId) < 39 {",
          "6140:   invalidParams.Add(request.NewErrParamMinLen(\"JobId\", 39))",
          "6141:  }",
          "6142:  if s.ShipmentState == nil {",
          "6143:   invalidParams.Add(request.NewErrParamRequired(\"ShipmentState\"))",
          "6144:  }",
          "6146:  if invalidParams.Len() > 0 {",
          "6147:   return invalidParams",
          "6148:  }",
          "6149:  return nil",
          "6150: }",
          "6153: func (s *UpdateJobShipmentStateInput) SetJobId(v string) *UpdateJobShipmentStateInput {",
          "6154:  s.JobId = &v",
          "6155:  return s",
          "6156: }",
          "6159: func (s *UpdateJobShipmentStateInput) SetShipmentState(v string) *UpdateJobShipmentStateInput {",
          "6160:  s.ShipmentState = &v",
          "6161:  return s",
          "6162: }",
          "6164: type UpdateJobShipmentStateOutput struct {",
          "6165:  _ struct{} `type:\"structure\"`",
          "6166: }",
          "6169: func (s UpdateJobShipmentStateOutput) String() string {",
          "6170:  return awsutil.Prettify(s)",
          "6171: }",
          "6174: func (s UpdateJobShipmentStateOutput) GoString() string {",
          "6175:  return s.String()",
          "6176: }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5725:  }",
          "5726: }",
          "5728: const (",
          "5730:  ShippingOptionSecondDay = \"SECOND_DAY\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6346: const (",
          "6348:  ShipmentStateReceived = \"RECEIVED\"",
          "6351:  ShipmentStateReturned = \"RETURNED\"",
          "6352: )",
          "6355: func ShipmentState_Values() []string {",
          "6356:  return []string{",
          "6357:   ShipmentStateReceived,",
          "6358:   ShipmentStateReturned,",
          "6359:  }",
          "6360: }",
          "6362: const (",
          "6364:  ShippingLabelStatusInProgress = \"InProgress\"",
          "6367:  ShippingLabelStatusTimedOut = \"TimedOut\"",
          "6370:  ShippingLabelStatusSucceeded = \"Succeeded\"",
          "6373:  ShippingLabelStatusFailed = \"Failed\"",
          "6374: )",
          "6377: func ShippingLabelStatus_Values() []string {",
          "6378:  return []string{",
          "6379:   ShippingLabelStatusInProgress,",
          "6380:   ShippingLabelStatusTimedOut,",
          "6381:   ShippingLabelStatusSucceeded,",
          "6382:   ShippingLabelStatusFailed,",
          "6383:  }",
          "6384: }",
          "",
          "---------------"
        ],
        "service/snowball/doc.go||service/snowball/doc.go": [
          "File: service/snowball/doc.go -> service/snowball/doc.go"
        ],
        "service/snowball/errors.go||service/snowball/errors.go": [
          "File: service/snowball/errors.go -> service/snowball/errors.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  ErrCodeClusterLimitExceededException = \"ClusterLimitExceededException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:  ErrCodeConflictException = \"ConflictException\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  ErrCodeKMSRequestFailedException = \"KMSRequestFailedException\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  ErrCodeReturnShippingLabelAlreadyExistsException = \"ReturnShippingLabelAlreadyExistsException\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77: )",
          "79: var exceptionFromCode = map[string]func(protocol.ResponseMetadata) error{",
          "89: }",
          "",
          "[Removed Lines]",
          "80:  \"ClusterLimitExceededException\":    newErrorClusterLimitExceededException,",
          "81:  \"Ec2RequestFailedException\":        newErrorEc2RequestFailedException,",
          "82:  \"InvalidAddressException\":          newErrorInvalidAddressException,",
          "83:  \"InvalidInputCombinationException\": newErrorInvalidInputCombinationException,",
          "84:  \"InvalidJobStateException\":         newErrorInvalidJobStateException,",
          "85:  \"InvalidNextTokenException\":        newErrorInvalidNextTokenException,",
          "86:  \"InvalidResourceException\":         newErrorInvalidResourceException,",
          "87:  \"KMSRequestFailedException\":        newErrorKMSRequestFailedException,",
          "88:  \"UnsupportedAddressException\":      newErrorUnsupportedAddressException,",
          "",
          "[Added Lines]",
          "95:  \"ClusterLimitExceededException\":             newErrorClusterLimitExceededException,",
          "96:  \"ConflictException\":                         newErrorConflictException,",
          "97:  \"Ec2RequestFailedException\":                 newErrorEc2RequestFailedException,",
          "98:  \"InvalidAddressException\":                   newErrorInvalidAddressException,",
          "99:  \"InvalidInputCombinationException\":          newErrorInvalidInputCombinationException,",
          "100:  \"InvalidJobStateException\":                  newErrorInvalidJobStateException,",
          "101:  \"InvalidNextTokenException\":                 newErrorInvalidNextTokenException,",
          "102:  \"InvalidResourceException\":                  newErrorInvalidResourceException,",
          "103:  \"KMSRequestFailedException\":                 newErrorKMSRequestFailedException,",
          "104:  \"ReturnShippingLabelAlreadyExistsException\": newErrorReturnShippingLabelAlreadyExistsException,",
          "105:  \"UnsupportedAddressException\":               newErrorUnsupportedAddressException,",
          "",
          "---------------"
        ],
        "service/snowball/snowballiface/interface.go||service/snowball/snowballiface/interface.go": [
          "File: service/snowball/snowballiface/interface.go -> service/snowball/snowballiface/interface.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  CreateJobWithContext(aws.Context, *snowball.CreateJobInput, ...request.Option) (*snowball.CreateJobOutput, error)",
          "81:  CreateJobRequest(*snowball.CreateJobInput) (*request.Request, *snowball.CreateJobOutput)",
          "83:  DescribeAddress(*snowball.DescribeAddressInput) (*snowball.DescribeAddressOutput, error)",
          "84:  DescribeAddressWithContext(aws.Context, *snowball.DescribeAddressInput, ...request.Option) (*snowball.DescribeAddressOutput, error)",
          "85:  DescribeAddressRequest(*snowball.DescribeAddressInput) (*request.Request, *snowball.DescribeAddressOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  CreateReturnShippingLabel(*snowball.CreateReturnShippingLabelInput) (*snowball.CreateReturnShippingLabelOutput, error)",
          "84:  CreateReturnShippingLabelWithContext(aws.Context, *snowball.CreateReturnShippingLabelInput, ...request.Option) (*snowball.CreateReturnShippingLabelOutput, error)",
          "85:  CreateReturnShippingLabelRequest(*snowball.CreateReturnShippingLabelInput) (*request.Request, *snowball.CreateReturnShippingLabelOutput)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:  DescribeJobWithContext(aws.Context, *snowball.DescribeJobInput, ...request.Option) (*snowball.DescribeJobOutput, error)",
          "100:  DescribeJobRequest(*snowball.DescribeJobInput) (*request.Request, *snowball.DescribeJobOutput)",
          "102:  GetJobManifest(*snowball.GetJobManifestInput) (*snowball.GetJobManifestOutput, error)",
          "103:  GetJobManifestWithContext(aws.Context, *snowball.GetJobManifestInput, ...request.Option) (*snowball.GetJobManifestOutput, error)",
          "104:  GetJobManifestRequest(*snowball.GetJobManifestInput) (*request.Request, *snowball.GetJobManifestOutput)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:  DescribeReturnShippingLabel(*snowball.DescribeReturnShippingLabelInput) (*snowball.DescribeReturnShippingLabelOutput, error)",
          "107:  DescribeReturnShippingLabelWithContext(aws.Context, *snowball.DescribeReturnShippingLabelInput, ...request.Option) (*snowball.DescribeReturnShippingLabelOutput, error)",
          "108:  DescribeReturnShippingLabelRequest(*snowball.DescribeReturnShippingLabelInput) (*request.Request, *snowball.DescribeReturnShippingLabelOutput)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  UpdateJob(*snowball.UpdateJobInput) (*snowball.UpdateJobOutput, error)",
          "142:  UpdateJobWithContext(aws.Context, *snowball.UpdateJobInput, ...request.Option) (*snowball.UpdateJobOutput, error)",
          "143:  UpdateJobRequest(*snowball.UpdateJobInput) (*request.Request, *snowball.UpdateJobOutput)",
          "144: }",
          "146: var _ SnowballAPI = (*snowball.Snowball)(nil)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  UpdateJobShipmentState(*snowball.UpdateJobShipmentStateInput) (*snowball.UpdateJobShipmentStateOutput, error)",
          "154:  UpdateJobShipmentStateWithContext(aws.Context, *snowball.UpdateJobShipmentStateInput, ...request.Option) (*snowball.UpdateJobShipmentStateOutput, error)",
          "155:  UpdateJobShipmentStateRequest(*snowball.UpdateJobShipmentStateInput) (*request.Request, *snowball.UpdateJobShipmentStateOutput)",
          "",
          "---------------"
        ]
      }
    }
  ]
}