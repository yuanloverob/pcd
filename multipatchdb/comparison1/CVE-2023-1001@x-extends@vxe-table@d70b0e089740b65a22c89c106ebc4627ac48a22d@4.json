{
  "cve_id": "CVE-2023-1001",
  "cve_desc": "A vulnerability, which was classified as problematic, has been found in xuliangzhan vxe-table up to 3.7.9. This issue affects the function export of the file packages/textarea/src/textarea.js of the component vxe-textarea. The manipulation of the argument inputValue leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 3.7.10 is able to address this issue. The patch is named d70b0e089740b65a22c89c106ebc4627ac48a22d. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-266123.",
  "repo": "x-extends/vxe-table",
  "patch_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
  "patch_info": {
    "commit_hash": "d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "repo": "x-extends/vxe-table",
    "commit_url": "https://github.com/x-extends/vxe-table/commit/d70b0e089740b65a22c89c106ebc4627ac48a22d",
    "files": [
      "packages/table/src/body.js",
      "packages/textarea/src/textarea.js"
    ],
    "message": "textarea \u4fee\u590d\u6ce8\u5165xss\u95ee\u9898 #I8O21R",
    "before_after_code_files": [
      "packages/table/src/body.js||packages/table/src/body.js",
      "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js"
    ]
  },
  "patch_diff": {
    "packages/table/src/body.js||packages/table/src/body.js": [
      "File: packages/table/src/body.js -> packages/table/src/body.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "499:     elemStore[`${prefix}xSpace`] = $refs.xSpace",
      "500:     elemStore[`${prefix}ySpace`] = $refs.ySpace",
      "501:     elemStore[`${prefix}emptyBlock`] = $refs.emptyBlock",
      "504:   },",
      "505:   beforeDestroy () {",
      "506:     clearTimeout(this.wheelTime)",
      "",
      "[Removed Lines]",
      "502:     this.$el.onscroll = this.scrollEvent",
      "503:     this.$el._onscroll = this.scrollEvent",
      "",
      "[Added Lines]",
      "502:     if (this.$el) {",
      "503:       this.$el.onscroll = this.scrollEvent",
      "504:       this.$el._onscroll = this.scrollEvent",
      "505:     }",
      "",
      "---------------"
    ],
    "packages/textarea/src/textarea.js||packages/textarea/src/textarea.js": [
      "File: packages/textarea/src/textarea.js -> packages/textarea/src/textarea.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:         autoTxtElem.className = ['vxe-textarea--autosize', size ? `size--${size}` : ''].join(' ')",
      "189:         autoTxtElem.style.width = `${textElem.clientWidth}px`",
      "190:         autoTxtElem.style.padding = textStyle.padding",
      "192:       }",
      "193:     },",
      "194:     handleResize () {",
      "",
      "[Removed Lines]",
      "191:         autoTxtElem.innerHTML = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "[Added Lines]",
      "191:         autoTxtElem.innerText = ('' + (inputValue || '\u3000')).replace(/\\n$/, '\\n\u3000')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18ce3e0d241995bbacbbfd34475cabeecb38f6b2",
      "candidate_info": {
        "commit_hash": "18ce3e0d241995bbacbbfd34475cabeecb38f6b2",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/18ce3e0d241995bbacbbfd34475cabeecb38f6b2",
        "files": [
          "README.md",
          "package.json",
          "packages/table/src/cell.ts"
        ],
        "message": "releases 3.11.4",
        "before_after_code_files": [
          "packages/table/src/cell.ts||packages/table/src/cell.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/cell.ts||packages/table/src/cell.ts": [
          "File: packages/table/src/cell.ts -> packages/table/src/cell.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: function renderTitlePrefixIcon (h: CreateElement, params: any) {",
          "14:   const { $table, column } = params",
          "15:   const titlePrefix = column.titlePrefix || column.titleHelp",
          "31: }",
          "33: function renderTitleSuffixIcon (h: CreateElement, params: any) {",
          "34:   const { $table, column } = params",
          "35:   const titleSuffix = column.titleSuffix",
          "51: }",
          "53: function renderCellDragIcon (h: CreateElement, params: any) {",
          "",
          "[Removed Lines]",
          "16:   return titlePrefix",
          "17:     ? [",
          "18:         h('i', {",
          "19:           class: ['vxe-cell-title-prefix-icon', titlePrefix.icon || getIcon().TABLE_TITLE_PREFIX],",
          "20:           on: {",
          "21:             mouseenter (evnt: any) {",
          "22:               $table.triggerHeaderTitleEvent(evnt, titlePrefix, params)",
          "23:             },",
          "24:             mouseleave (evnt: any) {",
          "25:               $table.handleTargetLeaveEvent(evnt)",
          "26:             }",
          "27:           }",
          "28:         })",
          "29:       ]",
          "30:     : []",
          "36:   return titleSuffix",
          "37:     ? [",
          "38:         h('i', {",
          "39:           class: ['vxe-cell-title-suffix-icon', titleSuffix.icon || getIcon().TABLE_TITLE_SUFFIX],",
          "40:           on: {",
          "41:             mouseenter (evnt: any) {",
          "42:               $table.triggerHeaderTitleEvent(evnt, titleSuffix, params)",
          "43:             },",
          "44:             mouseleave (evnt: any) {",
          "45:               $table.handleTargetLeaveEvent(evnt)",
          "46:             }",
          "47:           }",
          "48:         })",
          "49:       ]",
          "50:     : []",
          "",
          "[Added Lines]",
          "16:   if (titlePrefix) {",
          "17:     return h('i', {",
          "18:       class: ['vxe-cell-title-prefix-icon', titlePrefix.icon || getIcon().TABLE_TITLE_PREFIX],",
          "19:       on: {",
          "20:         mouseenter (evnt: any) {",
          "21:           $table.triggerHeaderTitleEvent(evnt, titlePrefix, params)",
          "22:         },",
          "23:         mouseleave (evnt: any) {",
          "24:           $table.handleTargetLeaveEvent(evnt)",
          "25:         }",
          "26:       }",
          "27:     })",
          "28:   }",
          "29:   return renderEmptyElement($table)",
          "35:   if (titleSuffix) {",
          "36:     return h('i', {",
          "37:       class: ['vxe-cell-title-suffix-icon', titleSuffix.icon || getIcon().TABLE_TITLE_SUFFIX],",
          "38:       on: {",
          "39:         mouseenter (evnt: any) {",
          "40:           $table.triggerHeaderTitleEvent(evnt, titleSuffix, params)",
          "41:         },",
          "42:         mouseleave (evnt: any) {",
          "43:           $table.handleTargetLeaveEvent(evnt)",
          "44:         }",
          "45:       }",
          "46:     })",
          "47:   }",
          "48:   return renderEmptyElement($table)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "801:   renderSortAndFilterHeader (h: CreateElement, params: any) {",
          "803:   },",
          "808:   renderSortHeader (h: CreateElement, params: any) {",
          "810:   },",
          "811:   renderSortIcon (h: CreateElement, params: any) {",
          "812:     const { $table, column } = params",
          "",
          "[Removed Lines]",
          "802:     return renderHeaderCellBaseVNs(h, params, Cell.renderHeaderTitle(h, params).concat(Cell.renderSortIcon(h, params)))",
          "809:     return renderHeaderCellBaseVNs(h, params, Cell.renderHeaderTitle(h, params).concat(Cell.renderSortIcon(h, params)))",
          "",
          "[Added Lines]",
          "800:     return renderHeaderCellBaseVNs(",
          "801:       h,",
          "802:       params,",
          "803:       Cell.renderHeaderTitle(h, params).concat(Cell.renderSortIcon(h, params).concat(Cell.renderFilterIcon(h, params)))",
          "804:     )",
          "811:     return renderHeaderCellBaseVNs(",
          "812:       h,",
          "813:       params,",
          "814:       Cell.renderHeaderTitle(h, params).concat(Cell.renderSortIcon(h, params))",
          "815:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "395fee9328ce3229839e68dc1d5deabf3dfe47f9",
      "candidate_info": {
        "commit_hash": "395fee9328ce3229839e68dc1d5deabf3dfe47f9",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/395fee9328ce3229839e68dc1d5deabf3dfe47f9",
        "files": [
          "package.json",
          "packages/table/src/column.js",
          "packages/table/src/columnInfo.js"
        ],
        "message": "column \u589e\u52a0\u53c2\u6570 titleSuffix",
        "before_after_code_files": [
          "packages/table/src/column.js||packages/table/src/column.js",
          "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/table/src/column.js||packages/table/src/column.js": [
          "File: packages/table/src/column.js -> packages/table/src/column.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:   footerExportMethod: Function,",
          "76:   titleHelp: Object,",
          "78:   titlePrefix: Object,",
          "80:   cellType: String,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:   titleSuffix: Object,",
          "",
          "---------------"
        ],
        "packages/table/src/columnInfo.js||packages/table/src/columnInfo.js": [
          "File: packages/table/src/columnInfo.js -> packages/table/src/columnInfo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:       footerExportMethod: _vm.footerExportMethod,",
          "96:       titleHelp: _vm.titleHelp,",
          "97:       titlePrefix: _vm.titlePrefix,",
          "99:       params: _vm.params,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "98:       titleSuffix: _vm.titleSuffix,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2bca6360ff620ffee89f671c3bf8e4798c992b0e",
      "candidate_info": {
        "commit_hash": "2bca6360ff620ffee89f671c3bf8e4798c992b0e",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/2bca6360ff620ffee89f671c3bf8e4798c992b0e",
        "files": [
          "package.json",
          "packages/form/src/form.js",
          "packages/validator/src/mixin.js",
          "styles/form.scss",
          "styles/input.scss",
          "styles/radio.scss",
          "styles/table.scss",
          "types/v-x-e-table/renderer.d.ts"
        ],
        "message": "\u4fee\u590d\u6837\u5f0f\u95ee\u9898 #2096",
        "before_after_code_files": [
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/validator/src/mixin.js||packages/validator/src/mixin.js",
          "styles/form.scss||styles/form.scss",
          "styles/input.scss||styles/input.scss",
          "styles/radio.scss||styles/radio.scss",
          "styles/table.scss||styles/table.scss",
          "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "468:                 }",
          "469:               } else {",
          "470:                 const isArrType = type === 'array'",
          "472:                 if (required ? (hasEmpty || validErrorRuleValue(rule, itemValue)) : (!hasEmpty && validErrorRuleValue(rule, itemValue))) {",
          "473:                   errorRules.push(new Rule(rule))",
          "474:                 }",
          "",
          "[Removed Lines]",
          "471:                 const hasEmpty = isArrType || XEUtils.isArray(itemValue) ? (!XEUtils.isArray(itemValue) || !itemValue.length) : eqEmptyValue(itemValue)",
          "",
          "[Added Lines]",
          "471:                 const isArrVal = XEUtils.isArray(itemValue)",
          "472:                 let hasEmpty = true",
          "473:                 if (isArrType || isArrVal) {",
          "474:                   hasEmpty = !isArrVal || !itemValue.length",
          "475:                 } else if (XEUtils.isString(itemValue)) {",
          "476:                   hasEmpty = eqEmptyValue(itemValue.trim())",
          "477:                 } else {",
          "478:                   hasEmpty = eqEmptyValue(itemValue)",
          "479:                 }",
          "",
          "---------------"
        ],
        "packages/validator/src/mixin.js||packages/validator/src/mixin.js": [
          "File: packages/validator/src/mixin.js -> packages/validator/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:                 }",
          "279:               } else {",
          "280:                 const isArrType = type === 'array'",
          "282:                 if (required ? (hasEmpty || validErrorRuleValue(rule, cellValue)) : (!hasEmpty && validErrorRuleValue(rule, cellValue))) {",
          "283:                   this.validRuleErr = true",
          "284:                   errorRules.push(new Rule(rule))",
          "",
          "[Removed Lines]",
          "281:                 const hasEmpty = isArrType || XEUtils.isArray(cellValue) ? (!XEUtils.isArray(cellValue) || !cellValue.length) : eqEmptyValue(cellValue)",
          "",
          "[Added Lines]",
          "281:                 const isArrVal = XEUtils.isArray(cellValue)",
          "282:                 let hasEmpty = true",
          "283:                 if (isArrType || isArrVal) {",
          "284:                   hasEmpty = !isArrVal || !cellValue.length",
          "285:                 } else if (XEUtils.isString(cellValue)) {",
          "286:                   hasEmpty = eqEmptyValue(cellValue.trim())",
          "287:                 } else {",
          "288:                   hasEmpty = eqEmptyValue(cellValue)",
          "289:                 }",
          "",
          "---------------"
        ],
        "styles/form.scss||styles/form.scss": [
          "File: styles/form.scss -> styles/form.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:   }",
          "227:   .vxe-default-input[type=\"submit\"],",
          "228:   .vxe-default-input[type=\"reset\"] {",
          "230:     background-color: #fff;",
          "231:     cursor: pointer;",
          "232:     &:hover {",
          "",
          "[Removed Lines]",
          "229:     line-height: calc($vxe-button-height-default - 2px);",
          "",
          "[Added Lines]",
          "229:     line-height: $vxe-button-height-default - 2px;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "284:     }",
          "285:     .vxe-default-input[type=\"submit\"],",
          "286:     .vxe-default-input[type=\"reset\"] {",
          "288:     }",
          "289:     .vxe-default-input,",
          "290:     .vxe-default-input,",
          "",
          "[Removed Lines]",
          "287:       line-height: calc($vxe-button-height-medium - 2px);",
          "",
          "[Added Lines]",
          "287:       line-height: $vxe-button-height-medium - 2px;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "299:     }",
          "300:     .vxe-default-input[type=\"submit\"],",
          "301:     .vxe-default-input[type=\"reset\"] {",
          "303:     }",
          "304:     .vxe-default-input,",
          "305:     .vxe-default-input,",
          "",
          "[Removed Lines]",
          "302:       line-height: calc($vxe-button-height-small - 2px);",
          "",
          "[Added Lines]",
          "302:       line-height: $vxe-button-height-small - 2px;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "314:     }",
          "315:     .vxe-default-input[type=\"submit\"],",
          "316:     .vxe-default-input[type=\"reset\"] {",
          "318:     }",
          "319:     .vxe-default-input,",
          "320:     .vxe-default-input,",
          "",
          "[Removed Lines]",
          "317:       line-height: calc($vxe-button-height-mini - 2px);",
          "",
          "[Added Lines]",
          "317:       line-height: $vxe-button-height-mini - 2px;",
          "",
          "---------------"
        ],
        "styles/input.scss||styles/input.scss": [
          "File: styles/input.scss -> styles/input.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "819:   }",
          "820:   .vxe-input--date-picker-body table,",
          "821:   .vxe-input--time-picker-body {",
          "823:   }",
          "824:   .vxe-input--time-picker-body {",
          "825:     $ulWidthList: 48px, 48px, 44px, 42px;",
          "",
          "[Removed Lines]",
          "822:     height: calc(nth($timeWeekRowHeightList, $sizeIndex) * 6 + nth($titleRowHeightList, $sizeIndex));",
          "",
          "[Added Lines]",
          "822:     height: nth($timeWeekRowHeightList, $sizeIndex) * 6 + nth($titleRowHeightList, $sizeIndex);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "839:       left: nth($ulWidthList, $sizeIndex);",
          "840:     }",
          "841:     .vxe-input--time-picker-second-list {",
          "843:     }",
          "844:   }",
          "845:   .vxe-input--date-day-view,",
          "",
          "[Removed Lines]",
          "842:       left: calc(nth($ulWidthList, $sizeIndex) * 2);",
          "",
          "[Added Lines]",
          "842:       left: nth($ulWidthList, $sizeIndex) * 2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "870:     padding: 0 10px - $sizeIndex;",
          "871:   }",
          "872:   .vxe-input--date-label {",
          "874:   }",
          "875: }",
          "",
          "[Removed Lines]",
          "873:     line-height: calc(nth($fontSizeList, $sizeIndex) + 1px);",
          "",
          "[Added Lines]",
          "873:     line-height: nth($fontSizeList, $sizeIndex) + 1px;",
          "",
          "---------------"
        ],
        "styles/radio.scss||styles/radio.scss": [
          "File: styles/radio.scss -> styles/radio.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:   }",
          "75:   .vxe-radio--label {",
          "76:     padding: 0 1em;",
          "78:     display: inline-block;",
          "79:     border-style: solid;",
          "80:     border-color: $vxe-input-border-color;",
          "",
          "[Removed Lines]",
          "77:     line-height: calc($vxe-button-height-default - 2px);",
          "",
          "[Added Lines]",
          "77:     line-height: $vxe-button-height-default - 2px;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:   }",
          "120:   &.size--medium {",
          "121:     .vxe-radio--label {",
          "123:     }",
          "124:   }",
          "125:   &.size--small {",
          "126:     .vxe-radio--label {",
          "128:     }",
          "129:   }",
          "130:   &.size--mini {",
          "131:     .vxe-radio--label {",
          "133:     }",
          "134:   }",
          "135: }",
          "",
          "[Removed Lines]",
          "122:       line-height: calc($vxe-button-height-medium - 2px);",
          "127:       line-height: calc($vxe-button-height-small - 2px);",
          "132:       line-height: calc($vxe-button-height-mini - 2px);",
          "",
          "[Added Lines]",
          "122:       line-height: $vxe-button-height-medium - 2px;",
          "127:       line-height: $vxe-button-height-small - 2px;",
          "132:       line-height: $vxe-button-height-mini - 2px;",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1282:               }",
          "1283:             }",
          "1284:             .vxe-textarea {",
          "1286:               .vxe-textarea--inner {",
          "1287:                 border: 0;",
          "1288:               }",
          "",
          "[Removed Lines]",
          "1285:               height: calc($vxe-table-row-line-height - 1px);",
          "",
          "[Added Lines]",
          "1285:               height: $vxe-table-row-line-height - 1px;",
          "",
          "---------------"
        ],
        "types/v-x-e-table/renderer.d.ts||types/v-x-e-table/renderer.d.ts": [
          "File: types/v-x-e-table/renderer.d.ts -> types/v-x-e-table/renderer.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:   renderExpand?(h: CreateElement, renderOpts: ColumnContentRenderOptions, params: ColumnCellRenderParams | ColumnEditRenderParams): SlotVNodeType | SlotVNodeType[];",
          "62:   renderToolbarButton?(h: CreateElement, renderOpts: ToolbarButtonRenderOptions, params: ToolbarButtonRenderParams): SlotVNodeType | SlotVNodeType[];",
          "63:   renderToolbarTool?(h: CreateElement, renderOpts: ToolbarToolRenderOptions, params: ToolbarToolRenderParams): SlotVNodeType | SlotVNodeType[];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:   toolbarButtonClassName?: string | ((params: ToolbarButtonRenderParams) => string | VNodeClassName)",
          "64:   toolbarToolClassName?: string | ((params: ToolbarToolRenderParams) => string | VNodeClassName)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fdecfc4985e550e93dda64ea5d485902e47611d0",
      "candidate_info": {
        "commit_hash": "fdecfc4985e550e93dda64ea5d485902e47611d0",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/fdecfc4985e550e93dda64ea5d485902e47611d0",
        "files": [
          "helper/vetur/attributes.json",
          "helper/vetur/tags.json",
          "package.json",
          "packages/button/src/button.js",
          "types/button.d.ts"
        ],
        "message": "button \u589e\u52a0\u53c2\u6570 mode",
        "before_after_code_files": [
          "packages/button/src/button.js||packages/button/src/button.js",
          "types/button.d.ts||types/button.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/button/src/button.js||packages/button/src/button.js": [
          "File: packages/button/src/button.js -> packages/button/src/button.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   mixins: [vSize],",
          "11:   props: {",
          "12:     type: String,",
          "13:     size: { type: String, default: () => GlobalConfig.button.size || GlobalConfig.size },",
          "14:     name: [String, Number],",
          "15:     content: String,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:     mode: String,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     }",
          "37:   },",
          "38:   computed: {",
          "42:     isFormBtn () {",
          "43:       return ['submit', 'reset', 'button'].indexOf(this.type) > -1",
          "44:     },",
          "45:     btnType () {",
          "47:     }",
          "48:   },",
          "49:   created () {",
          "",
          "[Removed Lines]",
          "39:     isText () {",
          "40:       return this.type === 'text'",
          "41:     },",
          "46:       return this.isText ? this.type : 'button'",
          "",
          "[Added Lines]",
          "44:       return (this.type === 'text' || this.mode === 'text') ? 'text' : 'button'",
          "",
          "---------------"
        ],
        "types/button.d.ts||types/button.d.ts": [
          "File: types/button.d.ts -> types/button.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   type?: string;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:   mode?: string;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "989f8bd932bee1edc29df41be6698426e9f61696",
      "candidate_info": {
        "commit_hash": "989f8bd932bee1edc29df41be6698426e9f61696",
        "repo": "x-extends/vxe-table",
        "commit_url": "https://github.com/x-extends/vxe-table/commit/989f8bd932bee1edc29df41be6698426e9f61696",
        "files": [
          ".gitignore",
          "package.json",
          "packages/all.js",
          "packages/form/src/form.js",
          "packages/table/src/methods.js",
          "packages/v-x-e-table/index.js",
          "packages/v-x-e-table/src/conf.js",
          "packages/v-x-e-table/src/theme.js",
          "packages/validator/src/mixin.js",
          "styles/table.scss",
          "types/module/export.d.ts",
          "types/v-x-e-table/index.d.ts"
        ],
        "message": "fix",
        "before_after_code_files": [
          "packages/all.js||packages/all.js",
          "packages/form/src/form.js||packages/form/src/form.js",
          "packages/table/src/methods.js||packages/table/src/methods.js",
          "packages/v-x-e-table/index.js||packages/v-x-e-table/index.js",
          "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js",
          "packages/v-x-e-table/src/theme.js||packages/v-x-e-table/src/theme.js",
          "packages/validator/src/mixin.js||packages/validator/src/mixin.js",
          "styles/table.scss||styles/table.scss",
          "types/module/export.d.ts||types/module/export.d.ts",
          "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/x-extends/vxe-table/pull/1672",
          "https://github.com/wangdaodao/vxe-table/pull/4"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "packages/all.js||packages/all.js": [
          "File: packages/all.js -> packages/all.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import XEUtils from 'xe-utils'",
          "3: import { setTheme } from './v-x-e-table/src/theme'",
          "5: import { Filter } from './filter'",
          "",
          "[Removed Lines]",
          "2: import { VXETable } from './v-x-e-table'",
          "",
          "[Added Lines]",
          "2: import { setConfig } from './v-x-e-table'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85: export function install (Vue, options) {",
          "86:   if (XEUtils.isPlainObject(options)) {",
          "88:     if (options.theme) {",
          "90:     }",
          "91:   }",
          "92:   components.map(component => component.install(Vue))",
          "93: }",
          "97:   i18n: (key, args) => XEUtils.toFormatString(XEUtils.get(zhCN, key), args)",
          "98: })",
          "",
          "[Removed Lines]",
          "87:     VXETable.setConfig(options)",
          "89:       setTheme(options)",
          "96: VXETable.setConfig({",
          "",
          "[Added Lines]",
          "87:     setConfig(options)",
          "89:       setTheme(options.theme)",
          "96: setConfig({",
          "",
          "---------------"
        ],
        "packages/form/src/form.js||packages/form/src/form.js": [
          "File: packages/form/src/form.js -> packages/form/src/form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:     }",
          "142:   },",
          "143:   created () {",
          "155:   },",
          "156:   render (h) {",
          "157:     const { _e, loading, className, data, vSize, tooltipOpts, formItems, customLayout } = this",
          "",
          "[Removed Lines]",
          "144:     this.$nextTick(() => {",
          "145:       const { items } = this",
          "146:       if (process.env.VUE_APP_VXE_TABLE_ENV === 'development') {",
          "147:         if (this.customLayout && this.items) {",
          "148:           errLog('vxe.error.errConflicts', ['custom-layout', 'items'])",
          "149:         }",
          "150:       }",
          "151:       if (items) {",
          "152:         this.loadItem(items)",
          "153:       }",
          "154:     })",
          "",
          "[Added Lines]",
          "144:     const { items } = this",
          "145:     if (items && items.length) {",
          "146:       this.loadItem(items)",
          "147:     }",
          "",
          "---------------"
        ],
        "packages/table/src/methods.js||packages/table/src/methods.js": [
          "File: packages/table/src/methods.js -> packages/table/src/methods.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1197:     } else {",
          "1198:       const { selectCheckboxMaps, fullDataRowIdData } = this",
          "1199:       XEUtils.each(selectCheckboxMaps, (row, rowid) => {",
          "1202:         }",
          "1203:       })",
          "1204:     }",
          "",
          "[Removed Lines]",
          "1200:         if (isFull ? fullDataRowIdData[rowid] : afterFullRowMaps[rowid]) {",
          "1201:           rowList.push(row)",
          "",
          "[Added Lines]",
          "1200:         if (isFull) {",
          "1201:           if (fullDataRowIdData[rowid]) {",
          "1202:             rowList.push(fullDataRowIdData[rowid].row)",
          "1203:           }",
          "1204:         } else {",
          "1205:           if (afterFullRowMaps[rowid]) {",
          "1206:             rowList.push(afterFullRowMaps[rowid])",
          "1207:           }",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/index.js||packages/v-x-e-table/index.js": [
          "File: packages/v-x-e-table/index.js -> packages/v-x-e-table/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: export const setConfig = (options) => {",
          "55:   if (options) {",
          "56:     if (options.theme) {",
          "58:     }",
          "59:     if (options.zIndex) {",
          "60:       DomZIndex.setCurrent(options.zIndex)",
          "",
          "[Removed Lines]",
          "57:       setTheme(options)",
          "",
          "[Added Lines]",
          "57:       setTheme(options.theme)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164: export const VxeUI = VXETable",
          "168: export * from './src/interceptor'",
          "169: export * from './src/renderer'",
          "",
          "[Removed Lines]",
          "166: setTheme(globalStore)",
          "",
          "[Added Lines]",
          "166: setTheme('light')",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/conf.js||packages/v-x-e-table/src/conf.js": [
          "File: packages/v-x-e-table/src/conf.js -> packages/v-x-e-table/src/conf.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:       showAsterisk: true",
          "97:     },",
          "98:     importConfig: {",
          "99:       modes: ['insert', 'covering']",
          "100:     },",
          "101:     exportConfig: {",
          "102:       modes: ['current', 'selected']",
          "103:     },",
          "104:     printConfig: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:       _typeMaps: {},",
          "103:       _typeMaps: {",
          "104:         csv: 1,",
          "105:         html: 1,",
          "106:         xml: 1,",
          "107:         txt: 1",
          "108:       },",
          "",
          "---------------"
        ],
        "packages/v-x-e-table/src/theme.js||packages/v-x-e-table/src/theme.js": [
          "File: packages/v-x-e-table/src/theme.js -> packages/v-x-e-table/src/theme.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import GlobalConfig from '../../v-x-e-table/src/conf'",
          "5:   if (typeof document !== 'undefined') {",
          "6:     const documentElement = document.documentElement",
          "7:     if (documentElement) {",
          "9:     }",
          "10:   }",
          "11: }",
          "",
          "[Removed Lines]",
          "3: export function setTheme (options) {",
          "4:   const theme = (options ? options.theme : null) || GlobalConfig.theme || 'default'",
          "8:       documentElement.setAttribute('data-vxe-table-theme', theme)",
          "",
          "[Added Lines]",
          "3: export function setTheme (name) {",
          "4:   let theme = name || GlobalConfig.theme",
          "5:   if (!theme || theme === 'default') {",
          "6:     theme = 'light'",
          "7:   }",
          "11:       documentElement.setAttribute('data-vxe-ui-theme', theme)",
          "",
          "---------------"
        ],
        "packages/validator/src/mixin.js||packages/validator/src/mixin.js": [
          "File: packages/validator/src/mixin.js -> packages/validator/src/mixin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:       const validRest = {}",
          "129:       const { editRules, afterFullData, visibleColumn, treeConfig, treeOpts } = this",
          "130:       const childrenField = treeOpts.children || treeOpts.childrenField",
          "132:       if (rows === true) {",
          "134:       } else if (rows) {",
          "135:         if (XEUtils.isFunction(rows)) {",
          "136:           cb = rows",
          "137:         } else {",
          "139:         }",
          "140:       }",
          "143:       }",
          "144:       const rowValidErrs = []",
          "145:       this.lastCallTime = Date.now()",
          "",
          "[Removed Lines]",
          "131:       let validDatas",
          "133:         validDatas = afterFullData",
          "138:           validDatas = XEUtils.isArray(rows) ? rows : [rows]",
          "141:       if (!validDatas) {",
          "142:         validDatas = this.getInsertRecords().concat(this.getUpdateRecords())",
          "",
          "[Added Lines]",
          "131:       let validList",
          "133:         validList = afterFullData",
          "138:           validList = XEUtils.isArray(rows) ? rows : [rows]",
          "141:       if (!validList) {",
          "142:         validList = this.getInsertRecords().concat(this.getUpdateRecords())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:           }",
          "189:         }",
          "190:         if (treeConfig) {",
          "192:         } else {",
          "194:         }",
          "195:         return Promise.all(rowValidErrs).then(() => {",
          "196:           const ruleProps = Object.keys(validRest)",
          "",
          "[Removed Lines]",
          "191:           XEUtils.eachTree(validDatas, handleVaild, { children: childrenField })",
          "193:           validDatas.forEach(handleVaild)",
          "",
          "[Added Lines]",
          "191:           XEUtils.eachTree(validList, handleVaild, { children: childrenField })",
          "193:           validList.forEach(handleVaild)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "279:       const { editRules } = this",
          "280:       const { property } = column",
          "281:       const errorRules = []",
          "283:       if (property && editRules) {",
          "284:         const rules = XEUtils.get(editRules, property)",
          "285:         if (rules) {",
          "",
          "[Removed Lines]",
          "282:       const syncVailds = []",
          "",
          "[Added Lines]",
          "282:       const syncValidList = []",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "324:                     errorRules.push(new Rule({ type: 'custom', trigger, content: customValid.message, rule: new Rule(rule) }))",
          "325:                   } else if (customValid.catch) {",
          "328:                       customValid.catch(e => {",
          "329:                         this.validRuleErr = true",
          "330:                         errorRules.push(new Rule({ type: 'custom', trigger, content: e && e.message ? e.message : (rule.content || rule.message), rule: new Rule(rule) }))",
          "",
          "[Removed Lines]",
          "327:                     syncVailds.push(",
          "",
          "[Added Lines]",
          "327:                     syncValidList.push(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "352:           })",
          "353:         }",
          "354:       }",
          "356:         if (errorRules.length) {",
          "357:           const rest = { rules: errorRules, rule: errorRules[0] }",
          "358:           return Promise.reject(rest)",
          "",
          "[Removed Lines]",
          "355:       return Promise.all(syncVailds).then(() => {",
          "",
          "[Added Lines]",
          "355:       return Promise.all(syncValidList).then(() => {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "384:           })",
          "385:         })",
          "386:       } else if (rowList.length) {",
          "388:         XEUtils.each(validErrorMaps, (item, key) => {",
          "390:             validErrMaps[key] = item",
          "391:           }",
          "392:         })",
          "",
          "[Removed Lines]",
          "387:         const rowidList = rowList.map(row => `${getRowid(this, row)}`)",
          "389:           if (rowidList.indexOf(key.split(':')[0]) > -1) {",
          "",
          "[Added Lines]",
          "387:         const rowIdList = rowList.map(row => `${getRowid(this, row)}`)",
          "389:           if (rowIdList.indexOf(key.split(':')[0]) > -1) {",
          "",
          "---------------"
        ],
        "styles/table.scss||styles/table.scss": [
          "File: styles/table.scss -> styles/table.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:     }",
          "610:   }",
          "611:   &.cell--area {",
          "613:       user-select: none;",
          "614:     }",
          "615:   }",
          "",
          "[Removed Lines]",
          "612:     .vxe-table--main-wrapper {",
          "",
          "[Added Lines]",
          "612:     .vxe-body--row {",
          "",
          "---------------"
        ],
        "types/module/export.d.ts||types/module/export.d.ts": [
          "File: types/module/export.d.ts -> types/module/export.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: export interface TableExportConfig {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:   _typeMaps?: Record<string, number>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112: export interface TableImportConfig {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   _typeMaps?: Record<string, number>",
          "",
          "---------------"
        ],
        "types/v-x-e-table/index.d.ts||types/v-x-e-table/index.d.ts": [
          "File: types/v-x-e-table/index.d.ts -> types/v-x-e-table/index.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: }",
          "59: export type VxeGlobalConfigMethod = (options?: VXETableConfigOptions) => VxeGlobalStore",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60: export type VxeGlobalThemeMethod = (name?: '' | 'light' | 'dark') => VxeGlobalStore",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81: export const globalStore: VxeGlobalStore",
          "83: export const setConfig: VxeGlobalConfigMethod",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: export const setTheme: VxeGlobalThemeMethod",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:   setConfig: VxeGlobalConfigMethod;",
          "128:   setIcon: typeof setIcon",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130:   setTheme: VxeGlobalThemeMethod",
          "",
          "---------------"
        ]
      }
    }
  ]
}